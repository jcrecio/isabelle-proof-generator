{"file_name": "/home/qj213/afp-2021-10-22/thys/Dict_Construction/Dict_Construction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Dict_Construction", "problem_names": ["lemma wfP_implies_wf_set_of: \"wfP P \\<Longrightarrow> wf (set_of P)\"", "lemma wf_set_of_implies_wfP: \"wf (set_of P) \\<Longrightarrow> wfP P\"", "lemma wf_simulate_simple:\n  assumes \"wf r\"\n  assumes \"\\<And>x y. (x, y) \\<in> r' \\<Longrightarrow> (g x, g y) \\<in> r\"\n  shows \"wf r'\"", "lemma set_ofI: \"P x y \\<Longrightarrow> (x, y) \\<in> set_of P\"", "lemma set_ofD: \"(x, y) \\<in> set_of P \\<Longrightarrow> P x y\"", "lemma wfP_simulate_simple:\n  assumes \"wfP r\"\n  assumes \"\\<And>x y. r' x y \\<Longrightarrow> r (g x) (g y)\"\n  shows \"wfP r'\"", "lemma wf_implies_dom: \"wf (set_of R) \\<Longrightarrow> All (Wellfounded.accp R)\"", "lemma wfP_implies_dom: \"wfP R \\<Longrightarrow> All (Wellfounded.accp R)\"", "lemma [code]: \"True \\<and> p \\<longleftrightarrow> p\" \"False \\<and> p \\<longleftrightarrow> False\"", "lemma [code]: \"True \\<or> p \\<longleftrightarrow> True\" \"False \\<or> p \\<longleftrightarrow> p\""], "translations": [["", "lemma wfP_implies_wf_set_of: \"wfP P \\<Longrightarrow> wf (set_of P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP P \\<Longrightarrow> wf (set_of P)", "unfolding wfP_def set_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(x, y). P x y} \\<Longrightarrow> wf {(x, y). P x y}", "."], ["", "lemma wf_set_of_implies_wfP: \"wf (set_of P) \\<Longrightarrow> wfP P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (set_of P) \\<Longrightarrow> wfP P", "unfolding wfP_def set_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(x, y). P x y} \\<Longrightarrow> wf {(x, y). P x y}", "."], ["", "lemma wf_simulate_simple:\n  assumes \"wf r\"\n  assumes \"\\<And>x y. (x, y) \\<in> r' \\<Longrightarrow> (g x, g y) \\<in> r\"\n  shows \"wf r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf r'", "using assms"], ["proof (prove)\nusing this:\n  wf r\n  (?x, ?y) \\<in> r' \\<Longrightarrow> (g ?x, g ?y) \\<in> r\n\ngoal (1 subgoal):\n 1. wf r'", "by (metis in_inv_image wf_eq_minimal wf_inv_image)"], ["", "lemma set_ofI: \"P x y \\<Longrightarrow> (x, y) \\<in> set_of P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x y \\<Longrightarrow> (x, y) \\<in> set_of P", "unfolding set_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x y \\<Longrightarrow> (x, y) \\<in> {(x, y). P x y}", "by simp"], ["", "lemma set_ofD: \"(x, y) \\<in> set_of P \\<Longrightarrow> P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> set_of P \\<Longrightarrow> P x y", "unfolding set_of_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> {(x, y). P x y} \\<Longrightarrow> P x y", "by simp"], ["", "lemma wfP_simulate_simple:\n  assumes \"wfP r\"\n  assumes \"\\<And>x y. r' x y \\<Longrightarrow> r (g x) (g y)\"\n  shows \"wfP r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP r'", "apply (rule wf_set_of_implies_wfP)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (set_of r')", "apply (rule wf_simulate_simple[where g = g])"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf ?r2\n 2. \\<And>x y. (x, y) \\<in> set_of r' \\<Longrightarrow> (g x, g y) \\<in> ?r2", "apply (rule wfP_implies_wf_set_of)"], ["proof (prove)\ngoal (2 subgoals):\n 1. wfP ?P5\n 2. \\<And>x y.\n       (x, y) \\<in> set_of r' \\<Longrightarrow> (g x, g y) \\<in> set_of ?P5", "apply (fact assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set_of r' \\<Longrightarrow> (g x, g y) \\<in> set_of r", "using assms(2)"], ["proof (prove)\nusing this:\n  r' ?x ?y \\<Longrightarrow> r (g ?x) (g ?y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x, y) \\<in> set_of r' \\<Longrightarrow> (g x, g y) \\<in> set_of r", "by (auto intro: set_ofI dest: set_ofD)"], ["", "lemma wf_implies_dom: \"wf (set_of R) \\<Longrightarrow> All (Wellfounded.accp R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf (set_of R) \\<Longrightarrow> All (Wellfounded.accp R)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. wf (set_of R) \\<Longrightarrow> Wellfounded.accp R x", "apply (rule accp_wfPD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. wf (set_of R) \\<Longrightarrow> wfP R", "apply (rule wf_set_of_implies_wfP)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. wf (set_of R) \\<Longrightarrow> wf (set_of R)", "."], ["", "lemma wfP_implies_dom: \"wfP R \\<Longrightarrow> All (Wellfounded.accp R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP R \\<Longrightarrow> All (Wellfounded.accp R)", "by (metis wfP_implies_wf_set_of wf_implies_dom)"], ["", "named_theorems dict_construction_specs"], ["", "ML_file \\<open>dict_construction_util.ML\\<close>"], ["", "ML_file \\<open>transfer_termination.ML\\<close>"], ["", "ML_file \\<open>congruences.ML\\<close>"], ["", "ML_file \\<open>side_conditions.ML\\<close>"], ["", "ML_file \\<open>class_graph.ML\\<close>"], ["", "ML_file \\<open>dict_construction.ML\\<close>"], ["", "method_setup fo_cong_rule = \\<open>\n  Attrib.thm >> (fn thm => fn ctxt => SIMPLE_METHOD' (Dict_Construction_Util.fo_cong_tac ctxt thm))\n\\<close> \"resolve congruence rule using first-order matching\""], ["", "declare [[code drop: \"(\\<and>)\"]]"], ["", "lemma [code]: \"True \\<and> p \\<longleftrightarrow> p\" \"False \\<and> p \\<longleftrightarrow> False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True \\<and> p) = p &&& (False \\<and> p) = False", "by auto"], ["", "declare [[code drop: \"(\\<or>)\"]]"], ["", "lemma [code]: \"True \\<or> p \\<longleftrightarrow> True\" \"False \\<or> p \\<longleftrightarrow> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (True \\<or> p) = True &&& (False \\<or> p) = p", "by auto"], ["", "declare comp_cong[fundef_cong del]"], ["", "declare fun.map_cong[fundef_cong]"], ["", "end"]]}