{"file_name": "/home/qj213/afp-2021-10-22/thys/Statecharts/Expr.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Statecharts", "problem_names": ["lemma Source_EmptySet [simp]:\n \"Source {} = {}\"", "lemma Target_EmptySet [simp]:\n \"Target {} = {}\"", "lemma Label_EmptySet [simp]:\n \"Label {} = {}\"", "lemma Action_EmptySet [simp]:\n \"Action {} = {}\"", "lemma PUpdate_EmptySet [simp]:\n \"PUpdate {} = {}\"", "lemma Actevent_EmptySet [simp]:\n \"Actevent {} = {}\"", "lemma Union_Actevent_subset:\n  \"\\<lbrakk> m \\<in> M; ((\\<Union> (Actevent (Label (Union M)))) \\<subseteq> (N::'a set)) \\<rbrakk> \\<Longrightarrow>\n   ((\\<Union> (Actevent (Label m))) \\<subseteq> N)\"", "lemma action_select [simp]:\n \"action (a,b,c) = c\"", "lemma label_select [simp]:\n \"label (a,b,c) = b\"", "lemma target_select [simp]:\n \"target (a,b,c) = c\"", "lemma actevent_select [simp]:\n \"actevent (a,b,(c,d)) = c\"", "lemma pupdate_select [simp]:\n \"pupdate (a,b,c,d) = d\"", "lemma source_select [simp]:\n \"source (a,b) = a\"", "lemma finite_PUpdate [simp]:\n \"finite S \\<Longrightarrow> finite(PUpdate S)\"", "lemma finite_Label [simp]:\n \"finite S \\<Longrightarrow> finite(Label S)\"", "lemma fst_defaultaction [simp]:\n \"fst defaultaction = {}\"", "lemma action_defaultlabel [simp]:\n \"(action defaultlabel) = defaultaction\"", "lemma fst_defaultlabel [simp]:\n \"(fst defaultlabel) = defaultexpr\"", "lemma ExprEvents_defaultexpr [simp]:\n \"(ExprEvents defaultexpr) = {}\"", "lemma defaultlabel_defaultexpr [simp]:\n \"expr defaultlabel = defaultexpr\"", "lemma target_Target [simp]:\n  \"t \\<in> T \\<Longrightarrow> target t \\<in> Target T\"", "lemma Source_union : \"Source s \\<union> Source t = Source (s \\<union> t)\"", "lemma Target_union : \"Target s \\<union> Target t = Target (s \\<union> t)\""], "translations": [["", "lemma Source_EmptySet [simp]:\n \"Source {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Source {} = {}", "by (unfold Source_def, auto)"], ["", "lemma Target_EmptySet [simp]:\n \"Target {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Target {} = {}", "by (unfold Target_def, auto)"], ["", "lemma Label_EmptySet [simp]:\n \"Label {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Label {} = {}", "by (unfold Label_def, auto)"], ["", "lemma Action_EmptySet [simp]:\n \"Action {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Action {} = {}", "by (unfold Action_def, auto)"], ["", "lemma PUpdate_EmptySet [simp]:\n \"PUpdate {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Expr.PUpdate {} = {}", "by (unfold PUpdate_def, auto)"], ["", "lemma Actevent_EmptySet [simp]:\n \"Actevent {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Actevent {} = {}", "by (unfold Actevent_def, auto)"], ["", "lemma Union_Actevent_subset:\n  \"\\<lbrakk> m \\<in> M; ((\\<Union> (Actevent (Label (Union M)))) \\<subseteq> (N::'a set)) \\<rbrakk> \\<Longrightarrow>\n   ((\\<Union> (Actevent (Label m))) \\<subseteq> N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>m \\<in> M;\n     \\<Union> (Actevent (Label (\\<Union> M))) \\<subseteq> N\\<rbrakk>\n    \\<Longrightarrow> \\<Union> (Actevent (Label m)) \\<subseteq> N", "by (unfold Actevent_def Label_def, auto)"], ["", "lemma action_select [simp]:\n \"action (a,b,c) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. action (a, b, c) = c", "by (unfold action_def, auto)"], ["", "lemma label_select [simp]:\n \"label (a,b,c) = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. label (a, b, c) = b", "by (unfold label_def, auto)"], ["", "lemma target_select [simp]:\n \"target (a,b,c) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. target (a, b, c) = c", "by (unfold target_def, auto)"], ["", "lemma actevent_select [simp]:\n \"actevent (a,b,(c,d)) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. actevent (a, b, c, d) = c", "by (unfold actevent_def, auto)"], ["", "lemma pupdate_select [simp]:\n \"pupdate (a,b,c,d) = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Expr.pupdate (a, b, c, d) = d", "by (unfold pupdate_def, auto)"], ["", "lemma source_select [simp]:\n \"source (a,b) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. source (a, b) = a", "by (unfold source_def, auto)"], ["", "lemma finite_PUpdate [simp]:\n \"finite S \\<Longrightarrow> finite(PUpdate S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow> finite (Expr.PUpdate S)", "by (unfold PUpdate_def, auto)"], ["", "lemma finite_Label [simp]:\n \"finite S \\<Longrightarrow> finite(Label S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S \\<Longrightarrow> finite (Label S)", "by (unfold Label_def, auto)"], ["", "lemma fst_defaultaction [simp]:\n \"fst defaultaction = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst defaultaction = {}", "by (unfold defaultaction_def, auto)"], ["", "lemma action_defaultlabel [simp]:\n \"(action defaultlabel) = defaultaction\""], ["proof (prove)\ngoal (1 subgoal):\n 1. action defaultlabel = defaultaction", "by (unfold defaultlabel_def action_def, auto)"], ["", "lemma fst_defaultlabel [simp]:\n \"(fst defaultlabel) = defaultexpr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fst defaultlabel = defaultexpr", "by (unfold defaultlabel_def, auto)"], ["", "lemma ExprEvents_defaultexpr [simp]:\n \"(ExprEvents defaultexpr) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ExprEvents defaultexpr = {}", "by (unfold defaultexpr_def, auto)"], ["", "lemma defaultlabel_defaultexpr [simp]:\n \"expr defaultlabel = defaultexpr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. expr defaultlabel = defaultexpr", "by (unfold defaultlabel_def expr_def, auto)"], ["", "lemma target_Target [simp]:\n  \"t \\<in> T \\<Longrightarrow> target t \\<in> Target T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> T \\<Longrightarrow> target t \\<in> Target T", "by (unfold Target_def, auto)"], ["", "lemma Source_union : \"Source s \\<union> Source t = Source (s \\<union> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Source s \\<union> Source t = Source (s \\<union> t)", "apply (unfold Source_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. source ` s \\<union> source ` t = source ` (s \\<union> t)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Target_union : \"Target s \\<union> Target t = Target (s \\<union> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Target s \\<union> Target t = Target (s \\<union> t)", "apply (unfold Target_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. target ` s \\<union> target ` t = target ` (s \\<union> t)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}