{"file_name": "/home/qj213/afp-2021-10-22/thys/Statecharts/HA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Statecharts", "problem_names": ["lemma HierAuto_EmptySet:\n \"((@x. True),{Abs_seqauto ({@x. True}, (@x. True), {}, {})}, {}, \n  Map.empty ( @x. True \\<mapsto> {})) \\<in> {(D,F,E,G) | D F E G. HierAuto D F E G}\"", "lemma Rep_hierauto_tuple:\n\"Rep_hierauto HA = (HAInitValue HA, SAs HA, HAEvents HA, CompFun HA)\"", "lemma Rep_hierauto_select: \n  \"(HAInitValue HA, SAs HA, HAEvents HA, CompFun HA): hierauto\"", "lemma HierAuto_select [simp]: \n  \"HierAuto (HAInitValue HA) (SAs HA) (HAEvents HA) (CompFun HA)\"", "lemma finite_HAStates [simp]:\n  \"finite (HAStates HA)\"", "lemma HAStates_SA_mem:\n \"\\<lbrakk> SA \\<in> SAs A; S \\<in> States SA \\<rbrakk> \\<Longrightarrow> S \\<in> HAStates A\"", "lemma ChiRel_HAStates [simp]:\n \"(a,b) \\<in> ChiRel A \\<Longrightarrow> a \\<in> HAStates A\"", "lemma ChiRel_HAStates2 [simp]:\n \"(a,b) \\<in>  ChiRel A \\<Longrightarrow> b \\<in> HAStates A\"", "lemma HAEvents_SAEvents_SAs:\n  \"\\<Union>(SAEvents ` (SAs HA)) \\<subseteq> HAEvents HA\"", "lemma NoCycles_EmptySet [simp]:\n  \"NoCycles {} S\"", "lemma NoCycles_HA [simp]: \n  \"NoCycles (SAs HA) (CompFun HA)\"", "lemma OneAncestor_HA [simp]:\n  \"OneAncestor (SAs HA) (CompFun HA)\"", "lemma MutuallyDistinct_Single [simp]:\n  \"MutuallyDistinct {SA}\"", "lemma MutuallyDistinct_EmptySet [simp]:\n  \"MutuallyDistinct {}\"", "lemma MutuallyDistinct_Insert:\n  \"\\<lbrakk> MutuallyDistinct S; (States A) \\<inter>  (\\<Union> B \\<in> S. States B) = {} \\<rbrakk>\n  \\<Longrightarrow> MutuallyDistinct (insert A S)\"", "lemma MutuallyDistinct_Union:\n  \"\\<lbrakk> MutuallyDistinct A; MutuallyDistinct B;\n  (\\<Union> C \\<in> A. States C) \\<inter> (\\<Union> C \\<in> B. States C) = {} \\<rbrakk>\n  \\<Longrightarrow> MutuallyDistinct (A \\<union> B)\"", "lemma MutuallyDistinct_HA [simp]:\n  \"MutuallyDistinct (SAs HA)\"", "lemma RootEx_Root [simp]:\n  \"RootEx F G \\<Longrightarrow> Root F G \\<in> F\"", "lemma RootEx_Root_ran [simp]:\n  \"RootEx F G \\<Longrightarrow> Root F G \\<notin> \\<Union> (ran G)\"", "lemma RootEx_States_Subset [simp]:\n  \"(RootEx F G) \\<Longrightarrow> States (Root F G) \\<subseteq> (\\<Union> x \\<in> F . States x)\"", "lemma RootEx_States_notdisjunct [simp]:\n  \"RootEx F G \\<Longrightarrow> States (Root F G) \\<inter> (\\<Union> x \\<in> F . States x) \\<noteq> {}\"", "lemma Root_neq_SA [simp]:\n  \"\\<lbrakk> RootEx F G; (\\<Union> x \\<in> F . States x) \\<inter> States SA = {} \\<rbrakk> \\<Longrightarrow> Root F G \\<noteq> SA\"", "lemma RootEx_HA [simp]:\n  \"RootEx (SAs HA) (CompFun HA)\"", "lemma HARoot_SAs [simp]:  \n  \"(HARoot HA) \\<in> SAs HA\"", "lemma States_HARoot_HAStates:\n  \"States (HARoot HA) \\<subseteq>  HAStates HA\"", "lemma SAEvents_HARoot_HAEvents:\n  \"SAEvents (HARoot HA) \\<subseteq> HAEvents HA\"", "lemma HARoot_ran_CompFun:\n  \"HARoot HA \\<notin> Union (ran (CompFun HA))\"", "lemma HARoot_ran_CompFun2:\n  \"S \\<in> ran (CompFun HA) \\<longrightarrow> HARoot HA \\<notin> S\"", "lemma IsCompFun_HA [simp]:\n  \"IsCompFun (SAs HA) (CompFun HA)\"", "lemma dom_CompFun [simp]:\n  \"dom (CompFun HA) = HAStates HA\"", "lemma ran_CompFun [simp]:\n  \"Union (ran (CompFun HA)) = ((SAs HA) - {Root  (SAs HA)(CompFun HA)})\"", "lemma ran_CompFun_subseteq:\n  \"Union (ran (CompFun HA)) \\<subseteq> (SAs HA)\"", "lemma ran_CompFun_is_not_SA:\n  \"\\<not> Sas \\<subseteq> (SAs HA) \\<Longrightarrow> Sas \\<notin> (ran (CompFun HA))\"", "lemma HAStates_HARoot_CompFun [simp]:\n  \"S \\<in> HAStates HA \\<Longrightarrow> HARoot HA \\<notin> the (CompFun HA S)\"", "lemma HAStates_CompFun_SAs:\n \"S \\<in> HAStates A \\<Longrightarrow> the (CompFun A S) \\<subseteq> SAs A\"", "lemma HAStates_CompFun_notmem [simp]:\n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> S \\<notin> States SA\"", "lemma CompFun_Int_disjoint: \n  \"\\<lbrakk> S \\<noteq> T; S \\<in>  HAStates A; T \\<in>  HAStates A \\<rbrakk> \\<Longrightarrow> the (CompFun A T) \\<inter> the (CompFun A S) = {}\"", "lemma finite_SAs [simp]:\n  \"finite (SAs HA)\"", "lemma HAStates_SAs_disjunct:\n  \"HAStates HA1 \\<inter> HAStates HA2 = {} \\<Longrightarrow> SAs HA1 \\<inter> SAs HA2 = {}\"", "lemma HAStates_CompFun_SAs_mem [simp]:\n \"\\<lbrakk> S \\<in> HAStates A; T \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> T \\<in> SAs A\"", "lemma SAs_States_HAStates:\n \"SA \\<in> SAs A \\<Longrightarrow> States SA \\<subseteq> HAStates A\"", "lemma HAInitState_HARoot [simp]:\n  \"HAInitState A \\<in> States (HARoot A)\"", "lemma HAInitState_HARoot2 [simp]:\n  \"HAInitState A \\<in> States (Root (SAs A) (CompFun A))\"", "lemma HAInitStates_HAStates [simp]:\n  \"HAInitStates A \\<subseteq> HAStates A\"", "lemma HAInitStates_HAStates2 [simp]:\n  \"S \\<in> HAInitStates A \\<Longrightarrow> S \\<in> HAStates A\"", "lemma HAInitState_HAStates [simp]:\n  \"HAInitState A \\<in> HAStates A\"", "lemma HAInitState_HAInitStates [simp]:\n  \"HAInitState A \\<in> HAInitStates A\"", "lemma CompFun_HAInitStates_HAStates [simp]:\n \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> (InitState SA) \\<in> HAInitStates A\"", "lemma CompFun_HAInitState_HAInitStates [simp]:\n \"\\<lbrakk> SA \\<in> the (CompFun A (HAInitState A)) \\<rbrakk> \\<Longrightarrow> (InitState SA) \\<in> HAInitStates A\"", "lemma HAInitState_notmem_States [simp]: \n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> HAInitState A \\<notin> States SA\"", "lemma InitState_notmem_States [simp]: \n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S); \n     T \\<in> HAInitStates A; T \\<noteq> InitState SA \\<rbrakk> \n    \\<Longrightarrow>  T \\<notin> States SA\"", "lemma InitState_States_notmem [simp]:\n    \"\\<lbrakk> B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C \\<rbrakk> \\<Longrightarrow> InitState B \\<notin> States C\"", "lemma OneHAInitState_SAStates:\n   \"\\<lbrakk> S \\<in> HAInitStates A; T \\<in> HAInitStates A;\n      S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> \n      S = T\"", "lemma HARootStates_notmem_Chi [simp]:\n  \"\\<lbrakk> S \\<in> HAStates A;  T \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> T \\<notin>  Chi A S\"", "lemma SAStates_notmem_Chi [simp]:\n  \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA;\n     SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<notin> Chi A S\"", "lemma HAInitState_notmem_Chi [simp]:\n  \"S \\<in> HAStates A \\<Longrightarrow> HAInitState A \\<notin> Chi A S\"", "lemma Chi_HAStates [simp]:\n  \"T \\<in> HAStates A \\<Longrightarrow> (Chi A T) \\<subseteq> HAStates A\"", "lemma Chi_HAStates_Self [simp]:\n  \"s \\<in>  HAStates a \\<Longrightarrow> s \\<notin> (Chi a s)\"", "lemma ChiRel_HAStates_Self [simp]:\n  \"(s,s) \\<notin> (ChiRel a)\"", "lemma HAStates_Chi_NoCycles:\n  \"\\<lbrakk> s \\<in> HAStates a; t \\<in> HAStates a; s \\<in> Chi a t \\<rbrakk> \\<Longrightarrow> t \\<notin> Chi a s\"", "lemma HAStates_Chi_NoCycles_trans:\n \"\\<lbrakk> s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n    t \\<in> Chi a s; u \\<in> Chi a t \\<rbrakk> \\<Longrightarrow> s \\<notin> Chi a u\"", "lemma Chi_range_disjoint:\n  \"\\<lbrakk> S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A; U \\<in> Chi A S \\<rbrakk> \\<Longrightarrow> U \\<notin> Chi A T\"", "lemma SAStates_Chi_trans [rule_format]:\n  \"\\<lbrakk> U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA; \n     SA \\<in> SAs A; U \\<in> HAStates A \\<rbrakk> \\<Longrightarrow> S \\<notin> States SA\"", "lemma finite_ChiRel [simp]:\n  \"finite (ChiRel A)\"", "lemma ChiRel_HAStates_subseteq [simp]:\n  \"(ChiRel A) \\<subseteq> (HAStates A \\<times> HAStates A)\"", "lemma ChiRel_CompFun:\n  \"s \\<in> HAStates a \\<Longrightarrow> ChiRel a `` {s} = (\\<Union> x \\<in> the (CompFun a s). States x)\"", "lemma ChiRel_HARoot:\n \"\\<lbrakk> (x,y) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> y \\<notin> States (HARoot A)\"", "lemma HAStates_CompFun_States_ChiRel:\n \"S \\<in> HAStates A \\<Longrightarrow> \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}\"", "lemma HAInitState_notmem_Range_ChiRel [simp]: \n  \"HAInitState A \\<notin> Range (ChiRel A)\"", "lemma HAInitState_notmem_Range_ChiRel2 [simp]: \n  \"(S,HAInitState A) \\<notin>  (ChiRel A)\"", "lemma ChiRel_OneAncestor_notmem:\n  \"\\<lbrakk> S \\<noteq> T; (S,U) \\<in> ChiRel A\\<rbrakk> \\<Longrightarrow> (T,U) \\<notin> ChiRel A\"", "lemma ChiRel_OneAncestor:\n  \"\\<lbrakk> (S1,U) \\<in> ChiRel A; (S2,U) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> S1 = S2\"", "lemma CompFun_ChiRel:\n  \"\\<lbrakk> S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1); \n     S2 \\<in> States SA \\<rbrakk> \\<Longrightarrow> (S1,S2) \\<in> ChiRel A\"", "lemma CompFun_ChiRel2:\n \"\\<lbrakk> (S,T) \\<in> ChiRel A; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> SA \\<in> the (CompFun A S)\"", "lemma ChiRel_HAStates_NoCycles:\n  \"(s,t) \\<in> (ChiRel a) \\<Longrightarrow> (t,s) \\<notin> (ChiRel a)\"", "lemma HAStates_ChiRel_NoCycles_trans:\n  \"\\<lbrakk> (s,t) \\<in> (ChiRel a); (t,u) \\<in> (ChiRel a) \\<rbrakk> \\<Longrightarrow> (u,s) \\<notin> (ChiRel a)\"", "lemma SAStates_ChiRel:\n  \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA;\n     SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> (ChiRel A)\"", "lemma ChiRel_SA_OneAncestor: \n   \"\\<lbrakk> (S,T) \\<in> ChiRel A; T \\<in> States SA; \n      U \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> \n      (S,U) \\<in> ChiRel A\"", "lemma ChiRel_OneAncestor2: \n  \"\\<lbrakk> S \\<in> HAStates A; S \\<notin> States (HARoot A) \\<rbrakk> \\<Longrightarrow> \n     \\<exists>! T. (T,S) \\<in> ChiRel A\"", "lemma HARootStates_notmem_Range_ChiRel [simp]:\n  \"S \\<in> States (HARoot A) \\<Longrightarrow> S \\<notin> Range (ChiRel A)\"", "lemma ChiRel_int_disjoint:\n  \"S \\<noteq> T \\<Longrightarrow> (ChiRel A `` {S}) \\<inter> (ChiRel A `` {T}) = {}\"", "lemma SAStates_ChiRel_trans [rule_format]:\n  \"\\<lbrakk> (S,U) \\<in> (ChiRel A); (U,T) \\<in> ChiRel A; \n     S \\<in> States SA; SA \\<in> SAs A  \\<rbrakk> \\<Longrightarrow> T \\<notin> States SA\"", "lemma HAInitStates_InitState_trancl: \n  \" \\<lbrakk> S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S) \\<rbrakk> \\<Longrightarrow> \n       (S, InitState A) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+\"", "lemma HAInitStates_InitState_trancl2:\n \"\\<lbrakk> S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S); \n   (x, S) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+ \\<rbrakk>\n  \\<Longrightarrow> (x, InitState A) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+\"", "lemma ChiPlus_ChiRel [simp]:\n  \"(S,T) \\<in> ChiRel A \\<Longrightarrow> (S,T) \\<in> ChiPlus A\"", "lemma ChiPlus_HAStates [simp]:\n  \"(ChiPlus A) \\<subseteq> (HAStates A \\<times> HAStates A)\"", "lemma ChiPlus_subset_States:\n  \"ChiPlus a `` {t} \\<subseteq>  \\<Union>(States ` (SAs a))\"", "lemma finite_ChiPlus [simp]: \n  \"finite (ChiPlus A)\"", "lemma ChiPlus_OneAncestor: \n  \"\\<lbrakk> S \\<in> HAStates A; S \\<notin> States (HARoot A) \\<rbrakk> \\<Longrightarrow> \n     \\<exists> T. (T,S) \\<in> ChiPlus A\"", "lemma ChiPlus_HAStates_Left:\n \"(S,T) \\<in> ChiPlus A \\<Longrightarrow> S \\<in> HAStates A\"", "lemma ChiPlus_HAStates_Right:\n \"(S,T) \\<in> ChiPlus A \\<Longrightarrow> T \\<in>  HAStates A\"", "lemma ChiPlus_ChiRel_int [rule_format]:\n  \"\\<lbrakk> (T,S) \\<in> (ChiPlus A)\\<rbrakk> \\<Longrightarrow> (ChiPlus A `` {T}) \\<inter> (ChiRel A `` {S}) = (ChiRel A `` {S})\"", "lemma ChiPlus_ChiPlus_int [rule_format]:\n  \"\\<lbrakk> (T,S) \\<in> (ChiPlus A)\\<rbrakk> \\<Longrightarrow> (ChiPlus A `` {T}) \\<inter> (ChiPlus A `` {S}) = (ChiPlus A `` {S})\"", "lemma ChiPlus_ChiRel_NoCycle_1 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>    \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {T}) \\<noteq> {}\"", "lemma ChiPlus_ChiRel_NoCycle_2 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  (S,T) \\<in> (ChiRel A) \\<longrightarrow> \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {S}) \\<noteq> {}\"", "lemma ChiPlus_ChiRel_NoCycle_3 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  (S,T) \\<in> (ChiRel A) \\<longrightarrow> (T,U) \\<in>  ChiPlus A \\<longrightarrow> (U, S) \\<in> ChiPlus A \\<longrightarrow> \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {U}) \\<noteq> {}\"", "lemma ChiPlus_ChiRel_NoCycle_4 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in>  (ChiRel A) \\<longrightarrow> ((ChiPlus A ``{T}) \\<inter> (ChiRel A `` {S})) \\<noteq> {}\"", "lemma ChiRel_ChiPlus_NoCycles:\n \"(S,T) \\<in> (ChiRel A) \\<Longrightarrow> (T,S) \\<notin> (ChiPlus A)\"", "lemma ChiPlus_ChiPlus_NoCycles:\n \"(S,T) \\<in> (ChiPlus A) \\<Longrightarrow> (T,S) \\<notin> (ChiPlus A)\"", "lemma ChiPlus_NoCycles [rule_format]:\n \"(S,T) \\<in> (ChiPlus A) \\<Longrightarrow> S \\<noteq> T\"", "lemma ChiPlus_NoCycles_2 [simp]:\n \"(S,S) \\<notin> (ChiPlus A)\"", "lemma ChiPlus_ChiPlus_NoCycles_2:\n  \"\\<lbrakk> (S,U) \\<in> ChiPlus A; (U,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (T,S) \\<notin>  ChiPlus A\"", "lemma ChiRel_ChiPlus_trans:\n   \"\\<lbrakk> (U,S) \\<in> ChiPlus A; (S,T) \\<in> ChiRel A\\<rbrakk> \\<Longrightarrow> (U,T) \\<in> ChiPlus A\"", "lemma ChiRel_ChiPlus_trans2:\n   \"\\<lbrakk> (U,S) \\<in> ChiRel A; (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (U,T) \\<in> ChiPlus A\"", "lemma ChiPlus_ChiRel_Ex [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiRel A \\<longrightarrow> \n    (\\<exists> U. (S,U) \\<in> ChiPlus A \\<and> (U,T) \\<in> ChiRel A)\"", "lemma ChiPlus_ChiRel_Ex2 [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiRel A \\<longrightarrow> \n    (\\<exists> U. (S,U) \\<in> ChiRel A \\<and> (U,T) \\<in> ChiPlus A)\"", "lemma HARootStates_Range_ChiPlus [simp]:\n  \"\\<lbrakk> S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> S \\<notin> Range (ChiPlus A)\"", "lemma HARootStates_Range_ChiPlus2 [simp]:\n  \"\\<lbrakk> S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> (x,S) \\<notin> (ChiPlus A)\"", "lemma SAStates_ChiPlus_ChiRel_NoCycle_1 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in> ChiPlus A; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (U,T) \\<in> (ChiRel A) \\<longrightarrow> S \\<in> States SA \\<longrightarrow> T \\<in> States SA \\<longrightarrow> \n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A}))) \\<inter> (ChiRel A `` {U}) \\<noteq> {}\"", "lemma SAStates_ChiPlus_ChiRel_NoCycle_2 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in>  ChiPlus A \\<rbrakk> \\<Longrightarrow>  (U,T) \\<in> (ChiRel A) \\<longrightarrow> \n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {S}) \\<noteq> {}\"", "lemma SAStates_ChiPlus_ChiRel_NoCycle_3 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in>  ChiPlus A \\<rbrakk> \\<Longrightarrow>  (U,T) \\<in> (ChiRel A) \\<longrightarrow> (S,s) \\<in> ChiPlus A \\<longrightarrow> (s,U) \\<in> ChiPlus A \\<longrightarrow>\n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {s}) \\<noteq> {}\"", "lemma SAStates_ChiPlus_ChiRel_trans [rule_format]:\n  \"\\<lbrakk> (S,U) \\<in> (ChiPlus A); (U,T) \\<in> (ChiRel A); S \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<notin> States SA\"", "lemma SAStates_ChiPlus2 [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A; SA \\<in> SAs A  \\<rbrakk> \\<Longrightarrow> S \\<in> States SA \\<longrightarrow> T \\<notin> States SA\"", "lemma SAStates_ChiPlus [rule_format]:\n \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiPlus A\"", "lemma SAStates_ChiPlus_ChiRel_OneAncestor [rule_format]:\n  \"\\<lbrakk> T \\<in> States SA; SA \\<in> SAs A; (S,U) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  S \\<noteq> T \\<longrightarrow> S \\<in> States SA \\<longrightarrow> (T,U) \\<notin> ChiRel A\"", "lemma SAStates_ChiPlus_OneAncestor [rule_format]:\n  \"\\<lbrakk> T \\<in> States SA; SA \\<in> SAs A; (S,U) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow>  S \\<noteq> T \\<longrightarrow>  \n     S \\<in> States SA \\<longrightarrow> (T,U) \\<notin> ChiPlus A\"", "lemma ChiRel_ChiPlus_OneAncestor [rule_format]:\n  \"\\<lbrakk> (T,U) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> T \\<noteq> S \\<longrightarrow> (S,U) \\<in> ChiRel A \\<longrightarrow> (T,S) \\<in> ChiPlus A\"", "lemma ChiPlus_SA_OneAncestor [rule_format]: \n   \"\\<lbrakk> (S,T) \\<in> ChiPlus A; \n      U \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n      (S,U) \\<in> ChiPlus A\"", "lemma ChiPlus_ChiStar [simp]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A  \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiStar A\"", "lemma HARootState_Range_ChiStar [simp]:\n  \"\\<lbrakk> x \\<noteq> S; S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> (x,S) \\<notin> (ChiStar A)\"", "lemma ChiStar_Self [simp]:\n \"(S,S) \\<in> ChiStar A\"", "lemma ChiStar_Image [simp]:  \n  \"S \\<in> M \\<Longrightarrow> S \\<in> (ChiStar A `` M)\"", "lemma ChiStar_ChiPlus_noteq: \n  \"\\<lbrakk> S \\<noteq> T; (S,T) \\<in> ChiStar A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiPlus A\"", "lemma ChiRel_ChiStar_trans:\n  \"\\<lbrakk> (S,U) \\<in> ChiStar A; (U,T) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiStar A\"", "lemma InitConf_HAStates [simp]:\n  \"InitConf A \\<subseteq> HAStates A\"", "lemma InitConf_HAStates2 [simp]:\n \"S \\<in> InitConf A \\<Longrightarrow> S \\<in> HAStates A\"", "lemma HAInitState_InitConf [simp]:\n  \"HAInitState A \\<in> InitConf A\"", "lemma InitConf_HAInitState_HARoot:\n \"[| S \\<in> InitConf A; S \\<noteq> HAInitState A |] ==> S \\<notin> States (HARoot A)\"", "lemma InitConf_HARoot_HAInitState [simp]:\n \"\\<lbrakk> S \\<in> InitConf A; S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> S = HAInitState A\"", "lemma HAInitState_CompFun_InitConf [simp]:\n \"[|SA \\<in> the (CompFun A  (HAInitState A)) |] ==> (InitState SA) \\<in> InitConf A\"", "lemma InitState_CompFun_InitConf:\n \"[| S \\<in> HAStates A; SA \\<in> the (CompFun A S); S \\<in> InitConf A |] ==> (InitState SA) \\<in> InitConf A\"", "lemma InitConf_HAInitStates:\n  \"InitConf A \\<subseteq> HAInitStates A\"", "lemma InitState_notmem_InitConf:\n \"[| SA \\<in> the (CompFun A S); S \\<in> InitConf A; T \\<in> States SA;\n     T \\<noteq> InitState SA |] ==>  T \\<notin> InitConf A\"", "lemma InitConf_CompFun_InitState [simp]:\n \"\\<lbrakk> SA \\<in> the (CompFun A S); S \\<in> InitConf A; T \\<in> States SA;\n    T \\<in> InitConf A \\<rbrakk> \\<Longrightarrow> T = InitState SA\"", "lemma InitConf_ChiRel_Ancestor:\n  \"\\<lbrakk> T \\<in> InitConf A; (S,T) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> S \\<in> InitConf A\"", "lemma InitConf_CompFun_Ancestor:\n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S); T \\<in> InitConf A; T \\<in> States SA \\<rbrakk>\n    \\<Longrightarrow>  S \\<in> InitConf A\"", "lemma StepConf_EmptySet [simp]:\n  \"StepConf A C {} = C\""], "translations": [["", "lemma HierAuto_EmptySet:\n \"((@x. True),{Abs_seqauto ({@x. True}, (@x. True), {}, {})}, {}, \n  Map.empty ( @x. True \\<mapsto> {})) \\<in> {(D,F,E,G) | D F E G. HierAuto D F E G}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME x. True, {Abs_seqauto ({SOME x. True}, SOME x. True, {}, {})}, {},\n     [SOME x. True \\<mapsto> {}])\n    \\<in> {(D, F, E, G) |D F E G. HierAuto D F E G}", "apply (unfold HierAuto_def IsCompFun_def Root_def RootEx_def MutuallyDistinct_def\n           OneAncestor_def NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SOME x. True, {Abs_seqauto ({SOME x. True}, SOME x. True, {}, {})}, {},\n     [SOME x. True \\<mapsto> {}])\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           (\\<forall>a\\<in>F.\n               \\<forall>b\\<in>F.\n                  a \\<noteq> b \\<longrightarrow>\n                  States a \\<inter> States b = {}) \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) =\n           F - {SOME A. A \\<in> F \\<and> A \\<notin> \\<Union> (ran G)} \\<and>\n           (\\<exists>!A.\n               A \\<in> F \\<and> A \\<notin> \\<Union> (ran G)) \\<and>\n           (\\<forall>A\\<in>F -\n                           {SOME A.\n                               A \\<in> F \\<and>\n                               A \\<notin> \\<Union> (ran G)}.\n               \\<exists>!s.\n                  s \\<in> \\<Union> (States ` (F - {A})) \\<and>\n                  A \\<in> the (G s)) \\<and>\n           (\\<forall>S\\<in>Pow (\\<Union> (States ` F)).\n               S \\<noteq> {} \\<longrightarrow>\n               (\\<exists>s\\<in>S.\n                   S \\<inter> \\<Union> (States ` the (G s)) = {}))}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  \"hierauto =\n    {(D,F,E,G) |\n        (D::'d data)\n        (F::(('s,'e,'d) seqauto) set)\n        (E::('e set))\n        (G::('s \\<rightharpoonup> (('s,'e,'d) seqauto) set)).\n                                HierAuto D F E G}\""], ["", "typedef ('s,'e,'d) hierauto =\n    \"hierauto :: ('d data * ('s,'e,'d) seqauto set * 'e set * ('s \\<rightharpoonup> ('s,'e,'d) seqauto set)) set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> hierauto", "unfolding hierauto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {(D, F, E, G) |D F E G. HierAuto D F E G}", "apply (rule exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ?x \\<in> {(D, F, E, G) |D F E G. HierAuto D F E G}", "apply (rule HierAuto_EmptySet)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition\n  SAs :: \"(('s,'e,'d) hierauto)  => (('s,'e,'d) seqauto) set\" where\n  \"SAs = fst o snd o Rep_hierauto\""], ["", "definition\n  HAEvents :: \"(('s,'e,'d) hierauto) => ('e set)\" where\n  \"HAEvents = fst o snd o snd o Rep_hierauto\""], ["", "definition\n  CompFun :: \"(('s,'e,'d) hierauto) => ('s \\<rightharpoonup> ('s,'e,'d) seqauto set)\" where\n  \"CompFun = (snd o snd o snd o Rep_hierauto)\""], ["", "definition\n  HAStates :: \"(('s,'e,'d) hierauto) => ('s set)\" where\n  \"HAStates HA = (\\<Union>  A \\<in> (SAs HA). States A)\""], ["", "definition\n  HADelta :: \"(('s,'e,'d) hierauto) => (('s,'e,'d)trans)set\" where\n  \"HADelta HA = (\\<Union> F \\<in> (SAs HA). Delta F)\""], ["", "definition\n  HAInitValue :: \"(('s,'e,'d) hierauto) => 'd data\" where\n  \"HAInitValue == fst o Rep_hierauto\""], ["", "definition\n  HAInitStates :: \"(('s,'e,'d) hierauto) => 's set\" where\n  \"HAInitStates HA == \\<Union> A \\<in> (SAs HA). { InitState A }\""], ["", "definition\n  HARoot :: \"(('s,'e,'d) hierauto) => ('s,'e,'d)seqauto\" where\n  \"HARoot HA == Root (SAs HA) (CompFun HA)\""], ["", "definition\n  HAInitState :: \"(('s,'e,'d) hierauto) => 's\" where\n  \"HAInitState HA == InitState (HARoot HA)\""], ["", "subsubsection \\<open>State successor function\\<close>"], ["", "(* state successor function Chi *)"], ["", "definition\n  Chi   :: \"('s,'e,'d)hierauto => 's => 's set\" where\n  \"Chi A ==  (\\<lambda>  S \\<in>  (HAStates A) .\n                 {S'. \\<exists> SA \\<in> (SAs A) . SA \\<in> the ((CompFun A) S) \\<and> S' \\<in> States SA })\""], ["", "(* direct state successor relation ChiRel *)"], ["", "definition\n  ChiRel :: \"('s,'e,'d)hierauto => ('s *'s) set\" where\n  \"ChiRel A == { (S,S'). S \\<in> HAStates A \\<and> S' \\<in> HAStates A \\<and> S' \\<in> (Chi A) S }\""], ["", "(* indirect state successor relation ChiPlus *)"], ["", "definition\n  ChiPlus :: \"('s,'e,'d)hierauto => ('s *'s) set\" where\n  \"ChiPlus A == (ChiRel A) ^+\""], ["", "definition\n  ChiStar :: \"('s,'e,'d)hierauto => ('s *'s) set\" where\n  \"ChiStar A == (ChiRel A) ^*\""], ["", "(* priority on transitions that are successors *)"], ["", "definition\n  HigherPriority :: \"[('s,'e,'d)hierauto,\n                      ('s,'e,'d)trans * ('s,'e,'d)trans] => bool\" where\n  \"HigherPriority A ==\n             \\<lambda> (t,t') \\<in> (HADelta A) \\<times> (HADelta A).\n                          (source t',source t) \\<in>  ChiPlus A\""], ["", "subsubsection \\<open>Configurations\\<close>"], ["", "(* initial configuration *)"], ["", "definition\n  InitConf :: \"('s,'e,'d)hierauto => 's set\" where\n  \"InitConf A == (((((HAInitStates A) \\<times> (HAInitStates A)) \\<inter> (ChiRel A))^* )\n                     `` {HAInitState A})\""], ["", "(*  -------------------------------------------------------------- *)\n(*  First, the original definition calculating a step on           *)\n(*  configurations given by                                        *)\n(*                                                                 *)\n(*  E. Mikk, Y. Lakhnech, and M. Siegel. Hierarchical automata as  *)\n(*  model for statecharts. In Asian Computing Science Conference   *)\n(*  (ASIAN~97), Springer LNCS, 1345, 1997.                         *)\n(*                                                                \n    \"StepConf A C TS ==                                           \n       (C - ((ChiStar A) `` (Source TS))) \\<union>                       \n        (Target TS) \\<union> (((ChiPlus A) `` (Target TS)) \n                    \\<inter> (HAInitStates A))\"           \n                                                                   *)\n(*                                                                 *)\n(* Note, that this semantic definition not preserves the           *)\n(* well-formedness of a Statecharts. Hence we use our definition.  *)\n(*  -------------------------------------------------------------- *)\n\n(* step on configurations *)"], ["", "definition\n  StepConf  :: \"[('s,'e,'d)hierauto, 's set,\n                 ('s,'e,'d)trans set] => 's set\" where\n\n  \"StepConf A C TS ==\n               (C - ((ChiStar A) `` (Source TS))) \\<union> \n               (Target TS) \\<union>\n               ((ChiRel A) `` (Target TS)) \\<inter> (HAInitStates A) \\<union>\n               ((((ChiRel A) \\<inter> ((HAInitStates A) \\<times> (HAInitStates A)))\\<^sup>+) \n                   `` (((ChiRel A)`` (Target TS)) \\<inter> (HAInitStates A)))\""], ["", "subsection \\<open>Lemmas\\<close>"], ["", "lemma Rep_hierauto_tuple:\n\"Rep_hierauto HA = (HAInitValue HA, SAs HA, HAEvents HA, CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Rep_hierauto HA = (HAInitValue HA, SAs HA, HAEvents HA, CompFun HA)", "by (unfold SAs_def HAEvents_def CompFun_def HAInitValue_def, simp)"], ["", "lemma Rep_hierauto_select: \n  \"(HAInitValue HA, SAs HA, HAEvents HA, CompFun HA): hierauto\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue HA, SAs HA, HAEvents HA, CompFun HA) \\<in> hierauto", "by (rule Rep_hierauto_tuple [THEN subst], rule Rep_hierauto)"], ["", "lemma HierAuto_select [simp]: \n  \"HierAuto (HAInitValue HA) (SAs HA) (HAEvents HA) (CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HierAuto (HAInitValue HA) (SAs HA) (HAEvents HA) (CompFun HA)", "by (cut_tac Rep_hierauto_select, unfold hierauto_def, simp)"], ["", "subsubsection \\<open>\\<open>HAStates\\<close>\\<close>"], ["", "lemma finite_HAStates [simp]:\n  \"finite (HAStates HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (HAStates HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    finite (HAStates HA)", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    finite (HAStates HA)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n     MutuallyDistinct (SAs ?HA1); finite (SAs ?HA1);\n     IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n    \\<Longrightarrow> finite (HAStates HA)", "apply (simp add: HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n     MutuallyDistinct (SAs ?HA1); finite (SAs ?HA1);\n     IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n    \\<Longrightarrow> finite (\\<Union> (States ` SAs HA))", "apply (rule finite_UN_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n     MutuallyDistinct (SAs ?HA1); finite (SAs ?HA1);\n     IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n    \\<Longrightarrow> finite (SAs HA)\n 2. \\<And>A.\n       \\<lbrakk>\\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n        MutuallyDistinct (SAs ?HA1); finite (SAs ?HA1);\n        IsCompFun (SAs ?HA1) (CompFun ?HA1); A \\<in> SAs HA\\<rbrakk>\n       \\<Longrightarrow> finite (States A)", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<Union> (SAEvents ` SAs HA) \\<subseteq> HAEvents HA;\n        MutuallyDistinct (SAs HA); finite (SAs HA);\n        IsCompFun (SAs HA) (CompFun HA); A \\<in> SAs HA\\<rbrakk>\n       \\<Longrightarrow> finite (States A)", "apply (rule finite_States)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_SA_mem:\n \"\\<lbrakk> SA \\<in> SAs A; S \\<in> States SA \\<rbrakk> \\<Longrightarrow> S \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> SAs A; S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A", "by (unfold HAStates_def, auto)"], ["", "lemma ChiRel_HAStates [simp]:\n \"(a,b) \\<in> ChiRel A \\<Longrightarrow> a \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> ChiRel A \\<Longrightarrow> a \\<in> HAStates A", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> {(S, S').\n           S \\<in> HAStates A \\<and>\n           S' \\<in> HAStates A \\<and> S' \\<in> Chi A S} \\<Longrightarrow>\n    a \\<in> HAStates A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_HAStates2 [simp]:\n \"(a,b) \\<in>  ChiRel A \\<Longrightarrow> b \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> ChiRel A \\<Longrightarrow> b \\<in> HAStates A", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> {(S, S').\n           S \\<in> HAStates A \\<and>\n           S' \\<in> HAStates A \\<and> S' \\<in> Chi A S} \\<Longrightarrow>\n    b \\<in> HAStates A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>HAEvents\\<close>\\<close>"], ["", "lemma HAEvents_SAEvents_SAs:\n  \"\\<Union>(SAEvents ` (SAs HA)) \\<subseteq> HAEvents HA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (SAEvents ` SAs HA) \\<subseteq> HAEvents HA", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    \\<Union> (SAEvents ` SAs HA) \\<subseteq> HAEvents HA", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    \\<Union> (SAEvents ` SAs HA) \\<subseteq> HAEvents HA", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>NoCycles\\<close>\\<close>"], ["", "lemma NoCycles_EmptySet [simp]:\n  \"NoCycles {} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NoCycles {} S", "by (unfold NoCycles_def, auto)"], ["", "lemma NoCycles_HA [simp]: \n  \"NoCycles (SAs HA) (CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NoCycles (SAs HA) (CompFun HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    NoCycles (SAs HA) (CompFun HA)", "apply (unfold hierauto_def HierAuto_def IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    NoCycles (SAs HA) (CompFun HA)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>OneAncestor\\<close>\\<close>"], ["", "lemma OneAncestor_HA [simp]:\n  \"OneAncestor (SAs HA) (CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OneAncestor (SAs HA) (CompFun HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    OneAncestor (SAs HA) (CompFun HA)", "apply (unfold hierauto_def HierAuto_def IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    OneAncestor (SAs HA) (CompFun HA)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>MutuallyDistinct\\<close>\\<close>"], ["", "lemma MutuallyDistinct_Single [simp]:\n  \"MutuallyDistinct {SA}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MutuallyDistinct {SA}", "by (unfold MutuallyDistinct_def, auto)"], ["", "lemma MutuallyDistinct_EmptySet [simp]:\n  \"MutuallyDistinct {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MutuallyDistinct {}", "by (unfold MutuallyDistinct_def, auto)"], ["", "lemma MutuallyDistinct_Insert:\n  \"\\<lbrakk> MutuallyDistinct S; (States A) \\<inter>  (\\<Union> B \\<in> S. States B) = {} \\<rbrakk>\n  \\<Longrightarrow> MutuallyDistinct (insert A S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>MutuallyDistinct S;\n     States A \\<inter> \\<Union> (States ` S) = {}\\<rbrakk>\n    \\<Longrightarrow> MutuallyDistinct (insert A S)", "by (unfold MutuallyDistinct_def, safe, fast+)"], ["", "lemma MutuallyDistinct_Union:\n  \"\\<lbrakk> MutuallyDistinct A; MutuallyDistinct B;\n  (\\<Union> C \\<in> A. States C) \\<inter> (\\<Union> C \\<in> B. States C) = {} \\<rbrakk>\n  \\<Longrightarrow> MutuallyDistinct (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>MutuallyDistinct A; MutuallyDistinct B;\n     \\<Union> (States ` A) \\<inter> \\<Union> (States ` B) = {}\\<rbrakk>\n    \\<Longrightarrow> MutuallyDistinct (A \\<union> B)", "by (unfold MutuallyDistinct_def, safe, blast+)"], ["", "lemma MutuallyDistinct_HA [simp]:\n  \"MutuallyDistinct (SAs HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. MutuallyDistinct (SAs HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    MutuallyDistinct (SAs HA)", "apply (unfold hierauto_def HierAuto_def IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    MutuallyDistinct (SAs HA)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>RootEx\\<close>\\<close>"], ["", "lemma RootEx_Root [simp]:\n  \"RootEx F G \\<Longrightarrow> Root F G \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RootEx F G \\<Longrightarrow> Root F G \\<in> F", "apply (unfold RootEx_def Root_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!A.\n       A \\<in> F \\<and> A \\<notin> \\<Union> (ran G) \\<Longrightarrow>\n    (SOME A. A \\<in> F \\<and> A \\<notin> \\<Union> (ran G)) \\<in> F", "apply (erule ex1E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> F \\<and> A \\<notin> \\<Union> (ran G);\n        \\<forall>y.\n           y \\<in> F \\<and> y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n           y = A\\<rbrakk>\n       \\<Longrightarrow> (SOME A.\n                             A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<in> F", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> (SOME A.\n                             A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<in> F", "apply (rule someI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> ?a4 A \\<in> F \\<and>\n                         ?a4 A \\<notin> \\<Union> (ran G)\n 2. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G);\n        x \\<in> F \\<and> x \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> F", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RootEx_Root_ran [simp]:\n  \"RootEx F G \\<Longrightarrow> Root F G \\<notin> \\<Union> (ran G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RootEx F G \\<Longrightarrow> Root F G \\<notin> \\<Union> (ran G)", "apply (unfold RootEx_def Root_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!A.\n       A \\<in> F \\<and> A \\<notin> \\<Union> (ran G) \\<Longrightarrow>\n    (SOME A. A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n    \\<notin> \\<Union> (ran G)", "apply (erule ex1E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> F \\<and> A \\<notin> \\<Union> (ran G);\n        \\<forall>y.\n           y \\<in> F \\<and> y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n           y = A\\<rbrakk>\n       \\<Longrightarrow> (SOME A.\n                             A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<notin> \\<Union> (ran G)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> (SOME A.\n                             A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<notin> \\<Union> (ran G)", "apply (rule someI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> ?a4 A \\<in> F \\<and>\n                         ?a4 A \\<notin> \\<Union> (ran G)\n 2. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G);\n        x \\<in> F \\<and> x \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> \\<Union> (ran G)", "apply blast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RootEx_States_Subset [simp]:\n  \"(RootEx F G) \\<Longrightarrow> States (Root F G) \\<subseteq> (\\<Union> x \\<in> F . States x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RootEx F G \\<Longrightarrow>\n    States (Root F G) \\<subseteq> \\<Union> (States ` F)", "apply (unfold RootEx_def Root_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!A.\n       A \\<in> F \\<and> A \\<notin> \\<Union> (ran G) \\<Longrightarrow>\n    States (SOME A. A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n    \\<subseteq> \\<Union> (States ` F)", "apply (erule ex1E)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>A \\<in> F \\<and> A \\<notin> \\<Union> (ran G);\n        \\<forall>y.\n           y \\<in> F \\<and> y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n           y = A\\<rbrakk>\n       \\<Longrightarrow> States\n                          (SOME A.\n                              A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<subseteq> \\<Union> (States ` F)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> States\n                          (SOME A.\n                              A \\<in> F \\<and> A \\<notin> \\<Union> (ran G))\n                         \\<subseteq> \\<Union> (States ` F)", "apply (rule someI2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> ?a4 A \\<in> F \\<and>\n                         ?a4 A \\<notin> \\<Union> (ran G)\n 2. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G);\n        x \\<in> F \\<and> x \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> States x \\<subseteq> \\<Union> (States ` F)", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G);\n        x \\<in> F \\<and> x \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> States x \\<subseteq> \\<Union> (States ` F)", "apply (unfold UNION_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   y \\<notin> \\<Union> (ran G) \\<longrightarrow>\n                   y = A;\n        A \\<in> F; A \\<notin> \\<Union> (ran G);\n        x \\<in> F \\<and> x \\<notin> \\<Union> (ran G)\\<rbrakk>\n       \\<Longrightarrow> States x\n                         \\<subseteq> {y. \\<exists>x\\<in>F. y \\<in> States x}", "apply (simp add: subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A x.\n       \\<lbrakk>\\<forall>y.\n                   y \\<in> F \\<and>\n                   (\\<forall>x\\<in>ran G. y \\<notin> x) \\<longrightarrow>\n                   y = A;\n        x \\<in> F \\<and> (\\<forall>xa\\<in>ran G. x \\<notin> xa)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x\\<in>States x.\n                            \\<exists>xa\\<in>F. x \\<in> States xa", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RootEx_States_notdisjunct [simp]:\n  \"RootEx F G \\<Longrightarrow> States (Root F G) \\<inter> (\\<Union> x \\<in> F . States x) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RootEx F G \\<Longrightarrow>\n    States (Root F G) \\<inter> \\<Union> (States ` F) \\<noteq> {}", "apply (frule RootEx_States_Subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F)\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}", "apply (case_tac \"States (Root F G)={}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F);\n     States (Root F G) = {}\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}\n 2. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F);\n     States (Root F G) \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F);\n     States (Root F G) \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}\n 2. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F);\n     States (Root F G) = {}\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>RootEx F G;\n     States (Root F G) \\<subseteq> \\<Union> (States ` F);\n     States (Root F G) = {}\\<rbrakk>\n    \\<Longrightarrow> States (Root F G) \\<inter>\n                      \\<Union> (States ` F) \\<noteq>\n                      {}", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Root_neq_SA [simp]:\n  \"\\<lbrakk> RootEx F G; (\\<Union> x \\<in> F . States x) \\<inter> States SA = {} \\<rbrakk> \\<Longrightarrow> Root F G \\<noteq> SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>RootEx F G;\n     \\<Union> (States ` F) \\<inter> States SA = {}\\<rbrakk>\n    \\<Longrightarrow> Root F G \\<noteq> SA", "apply (rule  SA_States_disjunct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>RootEx F G;\n     \\<Union> (States ` F) \\<inter> States SA = {}\\<rbrakk>\n    \\<Longrightarrow> States SA \\<inter> States (Root F G) = {}", "apply (frule RootEx_States_Subset)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>RootEx F G; \\<Union> (States ` F) \\<inter> States SA = {};\n     States (Root F G) \\<subseteq> \\<Union> (States ` F)\\<rbrakk>\n    \\<Longrightarrow> States SA \\<inter> States (Root F G) = {}", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma RootEx_HA [simp]:\n  \"RootEx (SAs HA) (CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RootEx (SAs HA) (CompFun HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    RootEx (SAs HA) (CompFun HA)", "apply (unfold hierauto_def HierAuto_def IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    RootEx (SAs HA) (CompFun HA)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>HARoot\\<close>\\<close>"], ["", "lemma HARoot_SAs [simp]:  \n  \"(HARoot HA) \\<in> SAs HA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HARoot HA \\<in> SAs HA", "apply (unfold HARoot_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Root (SAs HA) (CompFun HA) \\<in> SAs HA", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<in> SAs HA", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<in> SAs HA", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma States_HARoot_HAStates:\n  \"States (HARoot HA) \\<subseteq>  HAStates HA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. States (HARoot HA) \\<subseteq> HAStates HA", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. States (HARoot HA) \\<subseteq> \\<Union> (States ` SAs HA)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> States (HARoot HA) \\<Longrightarrow>\n       \\<exists>xa\\<in>SAs HA. x \\<in> States xa", "apply (rule_tac x=\"HARoot HA\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> States (HARoot HA) \\<Longrightarrow>\n       x \\<in> States (HARoot HA)\n 2. \\<And>x.\n       x \\<in> States (HARoot HA) \\<Longrightarrow> HARoot HA \\<in> SAs HA", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAEvents_HARoot_HAEvents:\n  \"SAEvents (HARoot HA) \\<subseteq> HAEvents HA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SAEvents (HARoot HA) \\<subseteq> HAEvents HA", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    SAEvents (HARoot HA) \\<subseteq> HAEvents HA", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    SAEvents (HARoot HA) \\<subseteq> HAEvents HA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> SAEvents (HARoot HA);\n        \\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n        finite (SAs ?HA1); IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAEvents HA", "apply (rename_tac S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<in> SAEvents (HARoot HA);\n        \\<Union> (SAEvents ` SAs ?HA1) \\<subseteq> HAEvents ?HA1;\n        finite (SAs ?HA1); IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAEvents HA", "apply (unfold UNION_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<in> SAEvents (HARoot HA);\n        {y. \\<exists>x\\<in>SAs ?HA1. y \\<in> SAEvents x}\n        \\<subseteq> HAEvents ?HA1;\n        finite (SAs ?HA1); IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAEvents HA", "apply (simp add: subset_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<in> SAEvents (HARoot HA);\n        \\<forall>x.\n           (\\<exists>xa\\<in>SAs ?HA1. x \\<in> SAEvents xa) \\<longrightarrow>\n           x \\<in> HAEvents ?HA1;\n        finite (SAs ?HA1); IsCompFun (SAs ?HA1) (CompFun ?HA1)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAEvents HA", "apply (erule_tac x=S in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       \\<lbrakk>S \\<in> SAEvents (HARoot HA); finite (SAs ?HA1);\n        IsCompFun (SAs ?HA1) (CompFun ?HA1);\n        (\\<exists>x\\<in>SAs ?HA1. S \\<in> SAEvents x) \\<longrightarrow>\n        S \\<in> HAEvents ?HA1\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAEvents HA", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HARoot_ran_CompFun:\n  \"HARoot HA \\<notin> Union (ran (CompFun HA))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HARoot HA \\<notin> \\<Union> (ran (CompFun HA))", "apply (unfold HARoot_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Root (SAs HA) (CompFun HA) \\<notin> \\<Union> (ran (CompFun HA))", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<notin> \\<Union> (ran (CompFun HA))", "apply (unfold IsCompFun_def hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<notin> \\<Union> (ran (CompFun HA))", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HARoot_ran_CompFun2:\n  \"S \\<in> ran (CompFun HA) \\<longrightarrow> HARoot HA \\<notin> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> ran (CompFun HA) \\<longrightarrow> HARoot HA \\<notin> S", "apply (unfold HARoot_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> ran (CompFun HA) \\<longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<notin> S", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    S \\<in> ran (CompFun HA) \\<longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<notin> S", "apply (unfold IsCompFun_def hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and>\n           dom G = \\<Union> (States ` F) \\<and>\n           \\<Union> (ran G) = F - {Root F G} \\<and>\n           RootEx F G \\<and>\n           OneAncestor F G \\<and> NoCycles F G} \\<Longrightarrow>\n    S \\<in> ran (CompFun HA) \\<longrightarrow>\n    Root (SAs HA) (CompFun HA) \\<notin> S", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>CompFun\\<close>\\<close>"], ["", "lemma IsCompFun_HA [simp]:\n  \"IsCompFun (SAs HA) (CompFun HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IsCompFun (SAs HA) (CompFun HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    IsCompFun (SAs HA) (CompFun HA)", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    IsCompFun (SAs HA) (CompFun HA)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dom_CompFun [simp]:\n  \"dom (CompFun HA) = HAStates HA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (CompFun HA) = HAStates HA", "apply (cut_tac HA=HA in IsCompFun_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. IsCompFun (SAs HA) (CompFun HA) \\<Longrightarrow>\n    dom (CompFun HA) = HAStates HA", "apply (unfold IsCompFun_def HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (CompFun HA) = \\<Union> (States ` SAs HA) \\<and>\n    \\<Union> (ran (CompFun HA)) =\n    SAs HA - {Root (SAs HA) (CompFun HA)} \\<and>\n    RootEx (SAs HA) (CompFun HA) \\<and>\n    OneAncestor (SAs HA) (CompFun HA) \\<and>\n    NoCycles (SAs HA) (CompFun HA) \\<Longrightarrow>\n    dom (CompFun HA) = \\<Union> (States ` SAs HA)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ran_CompFun [simp]:\n  \"Union (ran (CompFun HA)) = ((SAs HA) - {Root  (SAs HA)(CompFun HA)})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (ran (CompFun HA)) = SAs HA - {Root (SAs HA) (CompFun HA)}", "apply (cut_tac HA=HA in IsCompFun_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. IsCompFun (SAs HA) (CompFun HA) \\<Longrightarrow>\n    \\<Union> (ran (CompFun HA)) = SAs HA - {Root (SAs HA) (CompFun HA)}", "apply (unfold IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (CompFun HA) = \\<Union> (States ` SAs HA) \\<and>\n    \\<Union> (ran (CompFun HA)) =\n    SAs HA - {Root (SAs HA) (CompFun HA)} \\<and>\n    RootEx (SAs HA) (CompFun HA) \\<and>\n    OneAncestor (SAs HA) (CompFun HA) \\<and>\n    NoCycles (SAs HA) (CompFun HA) \\<Longrightarrow>\n    \\<Union> (ran (CompFun HA)) = SAs HA - {Root (SAs HA) (CompFun HA)}", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ran_CompFun_subseteq:\n  \"Union (ran (CompFun HA)) \\<subseteq> (SAs HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (ran (CompFun HA)) \\<subseteq> SAs HA", "apply (cut_tac HA=HA in IsCompFun_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. IsCompFun (SAs HA) (CompFun HA) \\<Longrightarrow>\n    \\<Union> (ran (CompFun HA)) \\<subseteq> SAs HA", "apply (unfold IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (CompFun HA) = \\<Union> (States ` SAs HA) \\<and>\n    \\<Union> (ran (CompFun HA)) =\n    SAs HA - {Root (SAs HA) (CompFun HA)} \\<and>\n    RootEx (SAs HA) (CompFun HA) \\<and>\n    OneAncestor (SAs HA) (CompFun HA) \\<and>\n    NoCycles (SAs HA) (CompFun HA) \\<Longrightarrow>\n    \\<Union> (ran (CompFun HA)) \\<subseteq> SAs HA", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ran_CompFun_is_not_SA:\n  \"\\<not> Sas \\<subseteq> (SAs HA) \\<Longrightarrow> Sas \\<notin> (ran (CompFun HA))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Sas \\<subseteq> SAs HA \\<Longrightarrow>\n    Sas \\<notin> ran (CompFun HA)", "apply (cut_tac HA=HA in IsCompFun_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> Sas \\<subseteq> SAs HA;\n     IsCompFun (SAs HA) (CompFun HA)\\<rbrakk>\n    \\<Longrightarrow> Sas \\<notin> ran (CompFun HA)", "apply (unfold IsCompFun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> Sas \\<subseteq> SAs HA;\n     dom (CompFun HA) = \\<Union> (States ` SAs HA) \\<and>\n     \\<Union> (ran (CompFun HA)) =\n     SAs HA - {Root (SAs HA) (CompFun HA)} \\<and>\n     RootEx (SAs HA) (CompFun HA) \\<and>\n     OneAncestor (SAs HA) (CompFun HA) \\<and>\n     NoCycles (SAs HA) (CompFun HA)\\<rbrakk>\n    \\<Longrightarrow> Sas \\<notin> ran (CompFun HA)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_HARoot_CompFun [simp]:\n  \"S \\<in> HAStates HA \\<Longrightarrow> HARoot HA \\<notin> the (CompFun HA S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAStates HA \\<Longrightarrow>\n    HARoot HA \\<notin> the (CompFun HA S)", "apply (rule ran_dom_the)"], ["proof (prove)\ngoal (2 subgoals):\n 1. S \\<in> HAStates HA \\<Longrightarrow>\n    HARoot HA \\<notin> \\<Union> (ran (\\<lambda>a. a))\n 2. S \\<in> HAStates HA \\<Longrightarrow>\n    CompFun HA S \\<in> dom (\\<lambda>a. a)", "back"], ["proof (prove)\ngoal (2 subgoals):\n 1. S \\<in> HAStates HA \\<Longrightarrow>\n    HARoot HA \\<notin> \\<Union> (ran (CompFun HA))\n 2. S \\<in> HAStates HA \\<Longrightarrow> S \\<in> dom (CompFun HA)", "apply (simp add: HARoot_ran_CompFun2 HARoot_def HAStates_def)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_CompFun_SAs:\n \"S \\<in> HAStates A \\<Longrightarrow> the (CompFun A S) \\<subseteq> SAs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAStates A \\<Longrightarrow> the (CompFun A S) \\<subseteq> SAs A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>S \\<in> HAStates A; x \\<in> the (CompFun A S)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> SAs A", "apply (rename_tac T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S)\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A", "apply (cut_tac HA=A in ran_CompFun)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        \\<Union> (ran (CompFun A)) =\n        SAs A - {Root (SAs A) (CompFun A)}\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A", "apply (erule equalityE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        \\<Union> (ran (CompFun A))\n        \\<subseteq> SAs A - {Root (SAs A) (CompFun A)};\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A))\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A", "apply (erule_tac c=T in subsetCE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A));\n        T \\<notin> \\<Union> (ran (CompFun A))\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A\n 2. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A));\n        T \\<in> SAs A - {Root (SAs A) (CompFun A)}\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A", "apply (drule ran_dom_the)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A))\\<rbrakk>\n       \\<Longrightarrow> ?x6 T \\<in> dom (CompFun A)\n 2. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A));\n        T \\<notin> the (CompFun A (?x6 T))\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A\n 3. \\<And>T.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n        SAs A - {Root (SAs A) (CompFun A)}\n        \\<subseteq> \\<Union> (ran (CompFun A));\n        T \\<in> SAs A - {Root (SAs A) (CompFun A)}\\<rbrakk>\n       \\<Longrightarrow> T \\<in> SAs A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_CompFun_notmem [simp]:\n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> S \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States SA", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> \\<Union> (States ` SAs A);\n     SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>SA \\<in> the (CompFun A S); x \\<in> SAs A; S \\<in> States x;\n        S \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=T in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA;\n        SA \\<noteq> T \\<longrightarrow>\n        States SA \\<inter> States T = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; T \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac A=A and S=S in  HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAStates A\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> \\<Union> (States ` SAs A)\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. S \\<in> States x\n 2. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>SA \\<in> the (CompFun A S); T \\<in> SAs A; S \\<in> States T;\n        S \\<in> States SA; SA \\<notin> SAs A;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A; S \\<in> States SA;\n     NoCycles (SAs A) (CompFun A)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A; S \\<in> States SA;\n     \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n        S \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>S.\n            S \\<inter> \\<Union> (States ` the (CompFun A s)) = {})\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule_tac x=\"{S}\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A; S \\<in> States SA;\n     {S} \\<noteq> {} \\<longrightarrow>\n     (\\<exists>s\\<in>{S}.\n         {S} \\<inter> \\<Union> (States ` the (CompFun A s)) = {})\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S); SA \\<in> SAs A; S \\<in> States SA;\n     {S} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CompFun_Int_disjoint: \n  \"\\<lbrakk> S \\<noteq> T; S \\<in>  HAStates A; T \\<in>  HAStates A \\<rbrakk> \\<Longrightarrow> the (CompFun A T) \\<inter> the (CompFun A S) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> the (CompFun A T) \\<inter> the (CompFun A S) = {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        x \\<in> the (CompFun A T); x \\<in> the (CompFun A S)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in OneAncestor_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        OneAncestor (SAs A) (CompFun A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold OneAncestor_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<forall>Aa\\<in>SAs A - {Root (SAs A) (CompFun A)}.\n           \\<exists>!s.\n              s \\<in> \\<Union> (States ` (SAs A - {Aa})) \\<and>\n              Aa \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=U in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<notin> SAs A - {Root (SAs A) (CompFun A)}\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<notin> SAs A - {Root (SAs A) (CompFun A)}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> SAs A \\<longrightarrow>\n        U = Root (SAs A) (CompFun A)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold HARoot_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> SAs A \\<longrightarrow> U = HARoot A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule HAStates_HARoot_CompFun)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> SAs A \\<longrightarrow> U = HARoot A;\n        HARoot A \\<notin> the (CompFun A S)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> SAs A \\<longrightarrow> U = HARoot A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> SAs A \\<longrightarrow> U = HARoot A;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>U.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {U})) \\<and>\n           U \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        \\<forall>y y'.\n           (\\<exists>x\\<in>SAs A - {U}. y \\<in> States x) \\<and>\n           U \\<in> the (CompFun A y) \\<and>\n           (\\<exists>x\\<in>SAs A - {U}. y' \\<in> States x) \\<and>\n           U \\<in> the (CompFun A y') \\<longrightarrow>\n           y = y';\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (erule_tac x=S in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>y'.\n           (\\<exists>x\\<in>SAs A - {U}. S \\<in> States x) \\<and>\n           U \\<in> the (CompFun A S) \\<and>\n           (\\<exists>x\\<in>SAs A - {U}. y' \\<in> States x) \\<and>\n           U \\<in> the (CompFun A y') \\<longrightarrow>\n           S = y'\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (erule_tac x=T in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        (\\<exists>x\\<in>SAs A - {U}. S \\<in> States x) \\<and>\n        U \\<in> the (CompFun A S) \\<and>\n        (\\<exists>x\\<in>SAs A - {U}. T \\<in> States x) \\<and>\n        U \\<in> the (CompFun A T) \\<longrightarrow>\n        S = T\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x;\n        NoCycles (SAs A) (CompFun A)\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (simp only: HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> \\<Union> (States ` SAs A);\n        T \\<in> \\<Union> (States ` SAs A); U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) = {});\n        Aa \\<in> SAs A; S \\<in> States Aa; Aaa \\<in> SAs A;\n        T \\<in> States Aaa\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (erule_tac x=\"{S}\" in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {S} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>{S}.\n            {S} \\<inter> \\<Union> (States ` the (CompFun A s)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {S} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U\n 3. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        \\<forall>x\\<in>the (CompFun A S). S \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {S} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U\n 3. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. S \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {S} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x;\n        NoCycles (SAs A) (CompFun A)\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        U \\<in> the (CompFun A T); U \\<in> the (CompFun A S);\n        U \\<in> the (CompFun A s); s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (simp only: HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> \\<Union> (States ` SAs A);\n        T \\<in> \\<Union> (States ` SAs A); U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) = {});\n        Aa \\<in> SAs A; S \\<in> States Aa; Aaa \\<in> SAs A;\n        T \\<in> States Aaa\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply (erule_tac x=\"{T}\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {T} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>{T}.\n            {T} \\<inter> \\<Union> (States ` the (CompFun A s)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> x = U\n 2. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U s x Aa Aaa.\n       \\<lbrakk>S \\<noteq> T; U \\<in> the (CompFun A T);\n        U \\<in> the (CompFun A S); U \\<in> the (CompFun A s);\n        s \\<in> States x; x \\<in> SAs A;\n        \\<forall>x\\<in>SAs A - {U}. T \\<notin> States x; Aa \\<in> SAs A;\n        S \\<in> States Aa; Aaa \\<in> SAs A; T \\<in> States Aaa;\n        {T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> x = U", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>SAs\\<close>\\<close>"], ["", "lemma finite_SAs [simp]:\n  \"finite (SAs HA)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (SAs HA)", "apply (cut_tac Rep_hierauto_select)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> hierauto \\<Longrightarrow>\n    finite (SAs HA)", "apply (unfold hierauto_def HierAuto_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitValue ?HA1, SAs ?HA1, HAEvents ?HA1, CompFun ?HA1)\n    \\<in> {(D, F, E, G) |D F E G.\n           \\<Union> (SAEvents ` F) \\<subseteq> E \\<and>\n           MutuallyDistinct F \\<and>\n           finite F \\<and> IsCompFun F G} \\<Longrightarrow>\n    finite (SAs HA)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_SAs_disjunct:\n  \"HAStates HA1 \\<inter> HAStates HA2 = {} \\<Longrightarrow> SAs HA1 \\<inter> SAs HA2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAStates HA1 \\<inter> HAStates HA2 = {} \\<Longrightarrow>\n    SAs HA1 \\<inter> SAs HA2 = {}", "apply (unfold UNION_eq HAStates_def Int_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> {y. \\<exists>x\\<in>SAs HA1. y \\<in> States x}.\n     x \\<in> {y. \\<exists>x\\<in>SAs HA2. y \\<in> States x}} =\n    {} \\<Longrightarrow>\n    {x \\<in> SAs HA1. x \\<in> SAs HA2} = {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa\\<in>SAs HA1. x \\<notin> States xa) \\<or>\n                   (\\<forall>xa\\<in>SAs HA2. x \\<notin> States xa);\n        x \\<in> SAs HA1; x \\<in> SAs HA2\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa\\<in>SAs HA1. x \\<notin> States xa) \\<or>\n                   (\\<forall>xa\\<in>SAs HA2. x \\<notin> States xa);\n        SA \\<in> SAs HA1; SA \\<in> SAs HA2\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac SA=SA in EX_State_SA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa\\<in>SAs HA1. x \\<notin> States xa) \\<or>\n                   (\\<forall>xa\\<in>SAs HA2. x \\<notin> States xa);\n        SA \\<in> SAs HA1; SA \\<in> SAs HA2;\n        \\<exists>S. S \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA S.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>xa\\<in>SAs HA1. x \\<notin> States xa) \\<or>\n                   (\\<forall>xa\\<in>SAs HA2. x \\<notin> States xa);\n        SA \\<in> SAs HA1; SA \\<in> SAs HA2; S \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_CompFun_SAs_mem [simp]:\n \"\\<lbrakk> S \\<in> HAStates A; T \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> T \\<in> SAs A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> T \\<in> SAs A", "apply (cut_tac A=A and S=S in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A\n 2. \\<lbrakk>S \\<in> HAStates A; T \\<in> the (CompFun A S);\n     the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<in> SAs A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAs_States_HAStates:\n \"SA \\<in> SAs A \\<Longrightarrow> States SA \\<subseteq> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> SAs A \\<Longrightarrow> States SA \\<subseteq> HAStates A", "by (unfold HAStates_def, auto)"], ["", "subsubsection \\<open>\\<open>HAInitState\\<close>\\<close>"], ["", "lemma HAInitState_HARoot [simp]:\n  \"HAInitState A \\<in> States (HARoot A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> States (HARoot A)", "by (unfold HAInitState_def, auto)"], ["", "lemma HAInitState_HARoot2 [simp]:\n  \"HAInitState A \\<in> States (Root (SAs A) (CompFun A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> States (Root (SAs A) (CompFun A))", "by (fold HARoot_def, simp)"], ["", "lemma HAInitStates_HAStates [simp]:\n  \"HAInitStates A \\<subseteq> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitStates A \\<subseteq> HAStates A", "apply (unfold HAInitStates_def HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>A\\<in>SAs A. {InitState A})\n    \\<subseteq> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitStates_HAStates2 [simp]:\n  \"S \\<in> HAInitStates A \\<Longrightarrow> S \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAInitStates A \\<Longrightarrow> S \\<in> HAStates A", "apply (cut_tac A=A in HAInitStates_HAStates)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates A;\n     HAInitStates A \\<subseteq> HAStates A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_HAStates [simp]:\n  \"HAInitState A \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> HAStates A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>SAs A. HAInitState A \\<in> States x", "apply (rule_tac x=\"HARoot A\" in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. HAInitState A \\<in> States (HARoot A)\n 2. HARoot A \\<in> SAs A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_HAInitStates [simp]:\n  \"HAInitState A \\<in> HAInitStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> HAInitStates A", "by (unfold HAInitStates_def HAInitState_def, auto)"], ["", "lemma CompFun_HAInitStates_HAStates [simp]:\n \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> (InitState SA) \\<in> HAInitStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> HAInitStates A", "apply (unfold HAInitStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> InitState SA\n                      \\<in> (\\<Union>A\\<in>SAs A. {InitState A})", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CompFun_HAInitState_HAInitStates [simp]:\n \"\\<lbrakk> SA \\<in> the (CompFun A (HAInitState A)) \\<rbrakk> \\<Longrightarrow> (InitState SA) \\<in> HAInitStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    InitState SA \\<in> HAInitStates A", "apply (unfold HAInitStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    InitState SA \\<in> (\\<Union>A\\<in>SAs A. {InitState A})", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    \\<exists>x\\<in>SAs A. InitState SA = InitState x", "apply (rule_tac x=SA in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    InitState SA = InitState SA\n 2. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    SA \\<in> SAs A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    SA \\<in> SAs A", "apply (cut_tac A=A and S=\"HAInitState A\" in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    HAInitState A \\<in> HAStates A\n 2. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     the (CompFun A (HAInitState A)) \\<subseteq> SAs A\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> SAs A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_notmem_States [simp]: \n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S) \\<rbrakk> \\<Longrightarrow> HAInitState A \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     MutuallyDistinct (SAs A)\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     \\<forall>a\\<in>SAs A.\n        \\<forall>b\\<in>SAs A.\n           a \\<noteq> b \\<longrightarrow>\n           States a \\<inter> States b = {}\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     \\<forall>b\\<in>SAs A.\n        SA \\<noteq> b \\<longrightarrow>\n        States SA \\<inter> States b = {}\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     SA \\<notin> SAs A\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA", "apply (erule_tac x=\"HARoot A\" in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     SA \\<noteq> HARoot A \\<longrightarrow>\n     States SA \\<inter> States (HARoot A) = {}\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     HARoot A \\<notin> SAs A\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA\n 3. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     SA \\<notin> SAs A\\<rbrakk>\n    \\<Longrightarrow> HAInitState A \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitState_notmem_States [simp]: \n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S); \n     T \\<in> HAInitStates A; T \\<noteq> InitState SA \\<rbrakk> \n    \\<Longrightarrow>  T \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> HAInitStates A; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (unfold HAInitStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> (\\<Union>A\\<in>SAs A. {InitState A});\n     T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState x \\<noteq> InitState SA; x \\<in> SAs A; T = InitState x;\n        InitState x \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SAA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SAA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        SA \\<noteq> SAA \\<longrightarrow>\n        States SA \\<inter> States SAA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SAA.\n       \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n        InitState SAA \\<noteq> InitState SA; SAA \\<in> SAs A;\n        T = InitState SAA; InitState SAA \\<in> States SA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitState_States_notmem [simp]:\n    \"\\<lbrakk> B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C \\<rbrakk> \\<Longrightarrow> InitState B \\<notin> States C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C\\<rbrakk>\n    \\<Longrightarrow> InitState B \\<notin> States C", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C;\n     InitState B \\<in> States C\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C;\n     InitState B \\<in> States C; MutuallyDistinct (SAs A)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<in> SAs A; C \\<in> SAs A; B \\<noteq> C;\n     InitState B \\<in> States C;\n     \\<forall>a\\<in>SAs A.\n        \\<forall>b\\<in>SAs A.\n           a \\<noteq> b \\<longrightarrow>\n           States a \\<inter> States b = {}\\<rbrakk>\n    \\<Longrightarrow> False", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma OneHAInitState_SAStates:\n   \"\\<lbrakk> S \\<in> HAInitStates A; T \\<in> HAInitStates A;\n      S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> \n      S = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates A; T \\<in> HAInitStates A;\n     S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> S = T", "apply (unfold HAInitStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> (\\<Union>A\\<in>SAs A. {InitState A});\n     T \\<in> (\\<Union>A\\<in>SAs A. {InitState A}); S \\<in> States SA;\n     T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> S = T", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>InitState x \\<in> States SA; InitState xa \\<in> States SA;\n        SA \\<in> SAs A; x \\<in> SAs A; S = InitState x; xa \\<in> SAs A;\n        T = InitState xa\\<rbrakk>\n       \\<Longrightarrow> InitState x = InitState xa", "apply (rename_tac AA AAA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>AA AAA.\n       \\<lbrakk>InitState AA \\<in> States SA; InitState AAA \\<in> States SA;\n        SA \\<in> SAs A; AA \\<in> SAs A; S = InitState AA; AAA \\<in> SAs A;\n        T = InitState AAA\\<rbrakk>\n       \\<Longrightarrow> InitState AA = InitState AAA", "apply (case_tac \"AA = SA\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>AA AAA.\n       \\<lbrakk>InitState AA \\<in> States SA; InitState AAA \\<in> States SA;\n        SA \\<in> SAs A; AA \\<in> SAs A; S = InitState AA; AAA \\<in> SAs A;\n        T = InitState AAA; AA = SA\\<rbrakk>\n       \\<Longrightarrow> InitState AA = InitState AAA\n 2. \\<And>AA AAA.\n       \\<lbrakk>InitState AA \\<in> States SA; InitState AAA \\<in> States SA;\n        SA \\<in> SAs A; AA \\<in> SAs A; S = InitState AA; AAA \\<in> SAs A;\n        T = InitState AAA; AA \\<noteq> SA\\<rbrakk>\n       \\<Longrightarrow> InitState AA = InitState AAA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>AAA.\n       \\<lbrakk>InitState AAA \\<in> States SA; SA \\<in> SAs A;\n        S = InitState SA; AAA \\<in> SAs A; T = InitState AAA\\<rbrakk>\n       \\<Longrightarrow> InitState SA = InitState AAA", "apply (case_tac \"AAA = SA\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>AAA.\n       \\<lbrakk>InitState AAA \\<in> States SA; SA \\<in> SAs A;\n        S = InitState SA; AAA \\<in> SAs A; T = InitState AAA;\n        AAA = SA\\<rbrakk>\n       \\<Longrightarrow> InitState SA = InitState AAA\n 2. \\<And>AAA.\n       \\<lbrakk>InitState AAA \\<in> States SA; SA \\<in> SAs A;\n        S = InitState SA; AAA \\<in> SAs A; T = InitState AAA;\n        AAA \\<noteq> SA\\<rbrakk>\n       \\<Longrightarrow> InitState SA = InitState AAA", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>Chi\\<close>\\<close>"], ["", "lemma HARootStates_notmem_Chi [simp]:\n  \"\\<lbrakk> S \\<in> HAStates A;  T \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> T \\<notin>  Chi A S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> Chi A S", "apply (unfold Chi_def restrict_def, auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=\"A\" in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"HARoot A\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        \\<forall>b\\<in>SAs A.\n           HARoot A \\<noteq> b \\<longrightarrow>\n           States (HARoot A) \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        HARoot A \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"SA\" in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        HARoot A \\<noteq> SA \\<longrightarrow>\n        States (HARoot A) \\<inter> States SA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SA.\n       \\<lbrakk>S \\<in> HAStates A; T \\<in> States (HARoot A);\n        SA \\<in> the (CompFun A S); T \\<in> States SA;\n        HARoot A \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_notmem_Chi [simp]:\n  \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA;\n     SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<notin> Chi A S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> Chi A S", "apply (unfold Chi_def restrict_def, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAa.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAa \\<in> the (CompFun A S);\n        T \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rename_tac SAA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S);\n        T \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (cut_tac HA=\"A\" in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule_tac x=\"SAA\" in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        \\<forall>b\\<in>SAs A.\n           SAA \\<noteq> b \\<longrightarrow>\n           States SAA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (erule_tac x=\"SA\" in ballE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SAA \\<noteq> SA \\<longrightarrow>\n        States SAA \\<inter> States SA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SAA.\n       \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n        S \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> HAStates A; T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     S \\<notin> \\<Union> (States ` SAs A); T \\<in> (SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_notmem_Chi [simp]:\n  \"S \\<in> HAStates A \\<Longrightarrow> HAInitState A \\<notin> Chi A S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAStates A \\<Longrightarrow> HAInitState A \\<notin> Chi A S", "by (unfold Chi_def restrict_def, auto)"], ["", "lemma Chi_HAStates [simp]:\n  \"T \\<in> HAStates A \\<Longrightarrow> (Chi A T) \\<subseteq> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> HAStates A \\<Longrightarrow> Chi A T \\<subseteq> HAStates A", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<in> HAStates A \\<Longrightarrow>\n    (if T \\<in> HAStates A\n     then {S'.\n           \\<exists>SA\\<in>SAs A.\n              SA \\<in> the (CompFun A T) \\<and> S' \\<in> States SA}\n     else SOME y. True)\n    \\<subseteq> HAStates A", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x SA.\n       \\<lbrakk>T \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        x \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates A", "apply (cut_tac A=A and S=T in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x SA.\n       \\<lbrakk>T \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        x \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> T \\<in> HAStates A\n 2. \\<And>x SA.\n       \\<lbrakk>T \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        x \\<in> States SA; the (CompFun A T) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x SA.\n       \\<lbrakk>T \\<in> \\<Union> (States ` SAs A);\n        SA \\<in> the (CompFun A T); x \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> T \\<in> \\<Union> (States ` SAs A)\n 2. \\<And>x SA.\n       \\<lbrakk>T \\<in> \\<Union> (States ` SAs A);\n        SA \\<in> the (CompFun A T); x \\<in> States SA;\n        the (CompFun A T) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Chi_HAStates_Self [simp]:\n  \"s \\<in>  HAStates a \\<Longrightarrow> s \\<notin> (Chi a s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> HAStates a \\<Longrightarrow> s \\<notin> Chi a s", "by (unfold Chi_def restrict_def, auto)"], ["", "lemma ChiRel_HAStates_Self [simp]:\n  \"(s,s) \\<notin> (ChiRel a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, s) \\<notin> ChiRel a", "by( unfold ChiRel_def, auto)"], ["", "lemma HAStates_Chi_NoCycles:\n  \"\\<lbrakk> s \\<in> HAStates a; t \\<in> HAStates a; s \\<in> Chi a t \\<rbrakk> \\<Longrightarrow> t \\<notin> Chi a s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n     s \\<in> Chi a t\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> Chi a s", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n     s \\<in> (if t \\<in> HAStates a\n              then {S'.\n                    \\<exists>SA\\<in>SAs a.\n                       SA \\<in> the (CompFun a t) \\<and> S' \\<in> States SA}\n              else SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> t \\<notin> (if s \\<in> HAStates a\n                                  then {S'.\n  \\<exists>SA\\<in>SAs a.\n     SA \\<in> the (CompFun a s) \\<and> S' \\<in> States SA}\n                                  else SOME y. True)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n        SA \\<in> the (CompFun a t); s \\<in> States SA;\n        SAa \\<in> the (CompFun a s); t \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=a in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n        SA \\<in> the (CompFun a t); s \\<in> States SA;\n        SAa \\<in> the (CompFun a s); t \\<in> States SAa;\n        NoCycles (SAs a) (CompFun a)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n        SA \\<in> the (CompFun a t); s \\<in> States SA;\n        SAa \\<in> the (CompFun a s); t \\<in> States SAa;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs a)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun a s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"{s,t}\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAa.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n        SA \\<in> the (CompFun a t); s \\<in> States SA;\n        SAa \\<in> the (CompFun a s); t \\<in> States SAa;\n        {s, t} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>sa\\<in>{s, t}.\n            {s, t} \\<inter> \\<Union> (States ` the (CompFun a sa)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAa.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a;\n        SA \\<in> the (CompFun a t); s \\<in> States SA;\n        SAa \\<in> the (CompFun a s); t \\<in> States SAa;\n        {s, t} \\<notin> Pow (\\<Union> (States ` SAs a))\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_Chi_NoCycles_trans:\n \"\\<lbrakk> s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n    t \\<in> Chi a s; u \\<in> Chi a t \\<rbrakk> \\<Longrightarrow> s \\<notin> Chi a u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n     t \\<in> Chi a s; u \\<in> Chi a t\\<rbrakk>\n    \\<Longrightarrow> s \\<notin> Chi a u", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n     t \\<in> (if s \\<in> HAStates a\n              then {S'.\n                    \\<exists>SA\\<in>SAs a.\n                       SA \\<in> the (CompFun a s) \\<and> S' \\<in> States SA}\n              else SOME y. True);\n     u \\<in> (if t \\<in> HAStates a\n              then {S'.\n                    \\<exists>SA\\<in>SAs a.\n                       SA \\<in> the (CompFun a t) \\<and> S' \\<in> States SA}\n              else SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> s \\<notin> (if u \\<in> HAStates a\n                                  then {S'.\n  \\<exists>SA\\<in>SAs a.\n     SA \\<in> the (CompFun a u) \\<and> S' \\<in> States SA}\n                                  else SOME y. True)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=a in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        NoCycles (SAs a) (CompFun a)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs a)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun a s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"{s,t,u}\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>sa\\<in>{s, t, u}.\n            {s, t, u} \\<inter> \\<Union> (States ` the (CompFun a sa)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<notin> Pow (\\<Union> (States ` SAs a))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<notin> Pow (\\<Union> (States ` SAs a))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>sa\\<in>{s, t, u}.\n            {s, t, u} \\<inter> \\<Union> (States ` the (CompFun a sa)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        (\\<forall>x\\<in>SAs a. s \\<notin> States x) \\<or>\n        (\\<forall>x\\<in>SAs a. t \\<notin> States x) \\<or>\n        (\\<forall>x\\<in>SAs a. u \\<notin> States x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; u \\<in> HAStates a;\n        SA \\<in> the (CompFun a s); t \\<in> States SA;\n        SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>sa\\<in>{s, t, u}.\n            {s, t, u} \\<inter> \\<Union> (States ` the (CompFun a sa)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> \\<Union> (States ` SAs a);\n        t \\<in> \\<Union> (States ` SAs a);\n        u \\<in> \\<Union> (States ` SAs a); SA \\<in> the (CompFun a s);\n        t \\<in> States SA; SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        (\\<forall>x\\<in>SAs a. s \\<notin> States x) \\<or>\n        (\\<forall>x\\<in>SAs a. t \\<notin> States x) \\<or>\n        (\\<forall>x\\<in>SAs a. u \\<notin> States x)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAa SAb.\n       \\<lbrakk>s \\<in> \\<Union> (States ` SAs a);\n        t \\<in> \\<Union> (States ` SAs a);\n        u \\<in> \\<Union> (States ` SAs a); SA \\<in> the (CompFun a s);\n        t \\<in> States SA; SAa \\<in> the (CompFun a t); u \\<in> States SAa;\n        SAb \\<in> the (CompFun a u); s \\<in> States SAb;\n        {s, t, u} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>sa\\<in>{s, t, u}.\n            {s, t, u} \\<inter> \\<Union> (States ` the (CompFun a sa)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Chi_range_disjoint:\n  \"\\<lbrakk> S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A; U \\<in> Chi A S \\<rbrakk> \\<Longrightarrow> U \\<notin> Chi A T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> U \\<notin> Chi A T", "apply (frule CompFun_Int_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates ?A\n 2. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> T \\<in> HAStates ?A\n 3. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> Chi A S;\n     the (CompFun ?A T) \\<inter> the (CompFun ?A S) = {}\\<rbrakk>\n    \\<Longrightarrow> U \\<notin> Chi A T", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> Chi A S; the (CompFun A T) \\<inter> the (CompFun A S) = {};\n     U \\<in> Chi A T\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n     U \\<in> (if S \\<in> HAStates A\n              then {S'.\n                    \\<exists>SA\\<in>SAs A.\n                       SA \\<in> the (CompFun A S) \\<and> S' \\<in> States SA}\n              else SOME y. True);\n     the (CompFun A T) \\<inter> the (CompFun A S) = {};\n     U \\<in> (if T \\<in> HAStates A\n              then {S'.\n                    \\<exists>SA\\<in>SAs A.\n                       SA \\<in> the (CompFun A T) \\<and> S' \\<in> States SA}\n              else SOME y. True)\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAa.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAa \\<in> the (CompFun A T); U \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SA SAA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SAA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        SA \\<noteq> SAA \\<longrightarrow>\n        States SA \\<inter> States SAA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SA SAA.\n       \\<lbrakk>S \\<noteq> T; T \\<in> HAStates A; S \\<in> HAStates A;\n        the (CompFun A T) \\<inter> the (CompFun A S) = {};\n        SA \\<in> the (CompFun A S); U \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_Chi_trans [rule_format]:\n  \"\\<lbrakk> U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA; \n     SA \\<in> SAs A; U \\<in> HAStates A \\<rbrakk> \\<Longrightarrow> S \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA;\n     SA \\<in> SAs A; U \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States SA", "apply (frule HAStates_SA_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA;\n     SA \\<in> SAs A; U \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> ?S \\<in> States SA\n 2. \\<lbrakk>U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA;\n     SA \\<in> SAs A; U \\<in> HAStates A; ?S \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<in> Chi A T; S \\<in> Chi A U; T \\<in> States SA;\n     SA \\<in> SAs A; U \\<in> HAStates A; T \\<in> HAStates A;\n     S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<in> (if T \\<in> HAStates A\n                      then {S'.\n                            \\<exists>SA\\<in>SAs A.\n                               SA \\<in> the (CompFun A T) \\<and>\n                               S' \\<in> States SA}\n                      else SOME y. True);\n     S \\<in> (if U \\<in> HAStates A\n              then {S'.\n                    \\<exists>SA\\<in>SAs A.\n                       SA \\<in> the (CompFun A U) \\<and> S' \\<in> States SA}\n              else SOME y. True);\n     T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n     T \\<in> HAStates A; S \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAa SAaa.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAa \\<in> the (CompFun A T);\n        U \\<in> States SAa; SAaa \\<in> the (CompFun A U);\n        S \\<in> States SAaa\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SAA SAAA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA; NoCycles (SAs A) (CompFun A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n           S \\<noteq> {} \\<longrightarrow>\n           (\\<exists>s\\<in>S.\n               S \\<inter> \\<Union> (States ` the (CompFun A s)) =\n               {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"{U,T}\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        {U, T} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>{U, T}.\n            {U, T} \\<inter> \\<Union> (States ` the (CompFun A s)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        {U, T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> False", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        {U, T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        {U, T} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>{U, T}.\n            {U, T} \\<inter> \\<Union> (States ` the (CompFun A s)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only: HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        U \\<in> \\<Union> (States ` SAs A);\n        T \\<in> \\<Union> (States ` SAs A); S \\<in> States SA;\n        SAA \\<in> the (CompFun A T); U \\<in> States SAA;\n        SAAA \\<in> the (CompFun A U); S \\<in> States SAAA;\n        {U, T} \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        {U, T} \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>{U, T}.\n            {U, T} \\<inter> \\<Union> (States ` the (CompFun A s)) =\n            {})\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>\\<forall>a\\<in>SAs A.\n                   \\<forall>b\\<in>SAs A.\n                      a \\<noteq> b \\<longrightarrow>\n                      States a \\<inter> States b = {};\n        T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>\\<forall>b\\<in>SAs A.\n                   SA \\<noteq> b \\<longrightarrow>\n                   States SA \\<inter> States b = {};\n        T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SAAA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        SA \\<noteq> SAAA \\<longrightarrow>\n        States SA \\<inter> States SAAA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        SAAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SAA SAAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; U \\<in> HAStates A;\n        T \\<in> HAStates A; S \\<in> States SA; SAA \\<in> the (CompFun A T);\n        U \\<in> States SAA; SAAA \\<in> the (CompFun A U);\n        S \\<in> States SAAA;\n        \\<forall>x\\<in>the (CompFun A U). T \\<notin> States x;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>ChiRel\\<close>\\<close>"], ["", "lemma finite_ChiRel [simp]:\n  \"finite (ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (ChiRel A)", "apply (rule_tac B=\"HAStates A \\<times> HAStates A\" in finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ChiRel A \\<subseteq> HAStates A \\<times> HAStates A\n 2. finite (HAStates A \\<times> HAStates A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_HAStates_subseteq [simp]:\n  \"(ChiRel A) \\<subseteq> (HAStates A \\<times> HAStates A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiRel A \\<subseteq> HAStates A \\<times> HAStates A", "apply (unfold ChiRel_def Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(S, S').\n     S \\<in> HAStates A \\<and>\n     S' \\<in> HAStates A \\<and>\n     S' \\<in> (if S \\<in> HAStates A\n               then {S'.\n                     \\<exists>SA\\<in>SAs A.\n                        SA \\<in> the (CompFun A S) \\<and>\n                        S' \\<in> States SA}\n               else SOME y. True)}\n    \\<subseteq> HAStates A \\<times> HAStates A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_CompFun:\n  \"s \\<in> HAStates a \\<Longrightarrow> ChiRel a `` {s} = (\\<Union> x \\<in> the (CompFun a s). States x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> HAStates a \\<Longrightarrow>\n    ChiRel a `` {s} = \\<Union> (States ` the (CompFun a s))", "apply (unfold ChiRel_def Chi_def restrict_def Image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> HAStates a \\<Longrightarrow>\n    {y. \\<exists>x\\<in>{s}.\n           (x, y)\n           \\<in> {(S, S').\n                  S \\<in> HAStates a \\<and>\n                  S' \\<in> HAStates a \\<and>\n                  S' \\<in> (if S \\<in> HAStates a\n                            then {S'.\n                                  \\<exists>SA\\<in>SAs a.\n                                     SA \\<in> the (CompFun a S) \\<and>\n                                     S' \\<in> States SA}\n                            else SOME y. True)}} =\n    \\<Union> (States ` the (CompFun a s))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> HAStates a \\<Longrightarrow>\n    {y \\<in> HAStates a.\n     \\<exists>SA\\<in>SAs a.\n        SA \\<in> the (CompFun a s) \\<and> y \\<in> States SA} =\n    \\<Union> (States ` the (CompFun a s))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>s \\<in> HAStates a; xa \\<in> the (CompFun a s);\n        x \\<in> States xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates a", "apply (frule HAStates_CompFun_SAs_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>s \\<in> HAStates a; xa \\<in> the (CompFun a s);\n        x \\<in> States xa\\<rbrakk>\n       \\<Longrightarrow> ?T38 x xa \\<in> the (CompFun a s)\n 2. \\<And>x xa.\n       \\<lbrakk>s \\<in> HAStates a; xa \\<in> the (CompFun a s);\n        x \\<in> States xa; ?T38 x xa \\<in> SAs a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates a", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>s \\<in> HAStates a; xa \\<in> the (CompFun a s);\n        x \\<in> States xa; xa \\<in> SAs a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates a", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>s \\<in> \\<Union> (States ` SAs a);\n        xa \\<in> the (CompFun a s); x \\<in> States xa;\n        xa \\<in> SAs a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<Union> (States ` SAs a)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_HARoot:\n \"\\<lbrakk> (x,y) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> y \\<notin> States (HARoot A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ChiRel A \\<Longrightarrow> y \\<notin> States (HARoot A)", "apply (unfold ChiRel_def Chi_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y)\n    \\<in> {(S, S').\n           S \\<in> HAStates A \\<and>\n           S' \\<in> HAStates A \\<and>\n           S' \\<in> (\\<lambda>S\\<in>HAStates A.\n                        {S'.\n                         \\<exists>SA\\<in>SAs A.\n                            SA \\<in> the (CompFun A S) \\<and>\n                            S' \\<in> States SA})\n                     S} \\<Longrightarrow>\n    y \\<notin> States (HARoot A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n     y \\<in> (\\<lambda>S\\<in>HAStates A.\n                 {S'.\n                  \\<exists>SA\\<in>SAs A.\n                     SA \\<in> the (CompFun A S) \\<and> S' \\<in> States SA})\n              x;\n     y \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n     y \\<in> (if x \\<in> HAStates A\n              then {S'.\n                    \\<exists>SA\\<in>SAs A.\n                       SA \\<in> the (CompFun A x) \\<and> S' \\<in> States SA}\n              else SOME y. True);\n     y \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac SA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule HAStates_HARoot_CompFun)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; HARoot A \\<notin> the (CompFun A x)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; HARoot A \\<notin> the (CompFun A x);\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; HARoot A \\<notin> the (CompFun A x);\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=\"HARoot A\" in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA;\n        SA \\<noteq> HARoot A \\<longrightarrow>\n        States SA \\<inter> States (HARoot A) = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; HARoot A \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>SA.\n       \\<lbrakk>x \\<in> HAStates A; y \\<in> HAStates A;\n        y \\<in> States (HARoot A); SA \\<in> the (CompFun A x);\n        y \\<in> States SA; SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_CompFun_States_ChiRel:\n \"S \\<in> HAStates A \\<Longrightarrow> \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAStates A \\<Longrightarrow>\n    \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}", "apply (unfold ChiRel_def Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> HAStates A \\<Longrightarrow>\n    \\<Union> (States ` the (CompFun A S)) =\n    {(S, S').\n     S \\<in> HAStates A \\<and>\n     S' \\<in> HAStates A \\<and>\n     S' \\<in> (if S \\<in> HAStates A\n               then {S'.\n                     \\<exists>SA\\<in>SAs A.\n                        SA \\<in> the (CompFun A S) \\<and>\n                        S' \\<in> States SA}\n               else SOME y. True)} ``\n    {S}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>S \\<in> HAStates A; xa \\<in> the (CompFun A S);\n        x \\<in> States xa\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates A", "apply (drule HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> the (CompFun A S); x \\<in> States xa;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAStates A", "apply (subst HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>xa \\<in> the (CompFun A S); x \\<in> States xa;\n        the (CompFun A S) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> \\<Union> (States ` SAs A)", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_notmem_Range_ChiRel [simp]: \n  \"HAInitState A \\<notin> Range (ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<notin> Range (ChiRel A)", "by (unfold ChiRel_def, auto)"], ["", "lemma HAInitState_notmem_Range_ChiRel2 [simp]: \n  \"(S,HAInitState A) \\<notin>  (ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, HAInitState A) \\<notin> ChiRel A", "by (unfold ChiRel_def, auto)"], ["", "lemma ChiRel_OneAncestor_notmem:\n  \"\\<lbrakk> S \\<noteq> T; (S,U) \\<in> ChiRel A\\<rbrakk> \\<Longrightarrow> (T,U) \\<notin> ChiRel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; (S, U) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (T, U) \\<notin> ChiRel A", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T;\n     (S, U)\n     \\<in> {(S, S').\n            S \\<in> HAStates A \\<and>\n            S' \\<in> HAStates A \\<and> S' \\<in> Chi A S}\\<rbrakk>\n    \\<Longrightarrow> (T, U)\n                      \\<notin> {(S, S').\n                                S \\<in> HAStates A \\<and>\n                                S' \\<in> HAStates A \\<and> S' \\<in> Chi A S}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; U \\<in> HAStates A;\n     U \\<in> Chi A S; T \\<in> HAStates A; U \\<in> Chi A T\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp only: Chi_range_disjoint)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_OneAncestor:\n  \"\\<lbrakk> (S1,U) \\<in> ChiRel A; (S2,U) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> S1 = S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S1, U) \\<in> ChiRel A; (S2, U) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> S1 = S2", "apply (rule notnotD, rule notI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S1, U) \\<in> ChiRel A; (S2, U) \\<in> ChiRel A;\n     S1 \\<noteq> S2\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add: ChiRel_OneAncestor_notmem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CompFun_ChiRel:\n  \"\\<lbrakk> S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1); \n     S2 \\<in> States SA \\<rbrakk> \\<Longrightarrow> (S1,S2) \\<in> ChiRel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1);\n     S2 \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> (S1, S2) \\<in> ChiRel A", "apply (unfold ChiRel_def Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1);\n     S2 \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> (S1, S2)\n                      \\<in> {(S, S').\n                             S \\<in> HAStates A \\<and>\n                             S' \\<in> HAStates A \\<and>\n                             S' \\<in> (if S \\<in> HAStates A\n then {S'.\n       \\<exists>SA\\<in>SAs A.\n          SA \\<in> the (CompFun A S) \\<and> S' \\<in> States SA}\n else SOME y. True)}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1);\n     S2 \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S2 \\<in> HAStates A", "apply (cut_tac A=A and S=S1 in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1);\n     S2 \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S1 \\<in> HAStates A\n 2. \\<lbrakk>S1 \\<in> HAStates A; SA \\<in> the (CompFun A S1);\n     S2 \\<in> States SA; the (CompFun A S1) \\<subseteq> SAs A\\<rbrakk>\n    \\<Longrightarrow> S2 \\<in> HAStates A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S1 \\<in> \\<Union> (States ` SAs A);\n     SA \\<in> the (CompFun A S1); S2 \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S1 \\<in> \\<Union> (States ` SAs A)\n 2. \\<lbrakk>S1 \\<in> \\<Union> (States ` SAs A);\n     SA \\<in> the (CompFun A S1); S2 \\<in> States SA;\n     the (CompFun A S1) \\<subseteq> SAs A\\<rbrakk>\n    \\<Longrightarrow> S2 \\<in> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma CompFun_ChiRel2:\n \"\\<lbrakk> (S,T) \\<in> ChiRel A; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> SA \\<in> the (CompFun A S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (unfold ChiRel_def Chi_def restrict_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T)\n             \\<in> {(S, S').\n                    S \\<in> HAStates A \\<and>\n                    S' \\<in> HAStates A \\<and>\n                    S' \\<in> (if S \\<in> HAStates A\n                              then {S'.\n                                    \\<exists>SA\\<in>SAs A.\n SA \\<in> the (CompFun A S) \\<and> S' \\<in> States SA}\n                              else SOME y. True)};\n     T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAa.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAa \\<in> the (CompFun A S);\n        T \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (rename_tac SAA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S);\n        T \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        \\<forall>b\\<in>SAs A.\n           SA \\<noteq> b \\<longrightarrow>\n           States SA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)\n 2. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>\\<forall>b\\<in>SAs A.\n                   SA \\<noteq> b \\<longrightarrow>\n                   States SA \\<inter> States b = {};\n        T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S);\n        T \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)\n 2. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply (erule_tac x=SAA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SA \\<noteq> SAA \\<longrightarrow>\n        States SA \\<inter> States SAA = {}\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)\n 2. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)\n 3. \\<And>SAA.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; S \\<in> HAStates A;\n        T \\<in> HAStates A; SAA \\<in> the (CompFun A S); T \\<in> States SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_HAStates_NoCycles:\n  \"(s,t) \\<in> (ChiRel a) \\<Longrightarrow> (t,s) \\<notin> (ChiRel a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t) \\<in> ChiRel a \\<Longrightarrow> (t, s) \\<notin> ChiRel a", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, t)\n    \\<in> {(S, S').\n           S \\<in> HAStates a \\<and>\n           S' \\<in> HAStates a \\<and> S' \\<in> Chi a S} \\<Longrightarrow>\n    (t, s)\n    \\<notin> {(S, S').\n              S \\<in> HAStates a \\<and>\n              S' \\<in> HAStates a \\<and> S' \\<in> Chi a S}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; t \\<in> Chi a s;\n     s \\<in> Chi a t\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule HAStates_Chi_NoCycles)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; t \\<in> Chi a s;\n     s \\<in> Chi a t\\<rbrakk>\n    \\<Longrightarrow> ?t6 \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; t \\<in> Chi a s;\n     s \\<in> Chi a t\\<rbrakk>\n    \\<Longrightarrow> s \\<in> Chi a ?t6\n 3. \\<lbrakk>s \\<in> HAStates a; t \\<in> HAStates a; t \\<in> Chi a s;\n     s \\<in> Chi a t; ?t6 \\<notin> Chi a s\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAStates_ChiRel_NoCycles_trans:\n  \"\\<lbrakk> (s,t) \\<in> (ChiRel a); (t,u) \\<in> (ChiRel a) \\<rbrakk> \\<Longrightarrow> (u,s) \\<notin> (ChiRel a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(s, t) \\<in> ChiRel a; (t, u) \\<in> ChiRel a\\<rbrakk>\n    \\<Longrightarrow> (u, s) \\<notin> ChiRel a", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(s, t)\n             \\<in> {(S, S').\n                    S \\<in> HAStates a \\<and>\n                    S' \\<in> HAStates a \\<and> S' \\<in> Chi a S};\n     (t, u)\n     \\<in> {(S, S').\n            S \\<in> HAStates a \\<and>\n            S' \\<in> HAStates a \\<and> S' \\<in> Chi a S}\\<rbrakk>\n    \\<Longrightarrow> (u, s)\n                      \\<notin> {(S, S').\n                                S \\<in> HAStates a \\<and>\n                                S' \\<in> HAStates a \\<and> S' \\<in> Chi a S}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule HAStates_Chi_NoCycles_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?t7 \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> HAStates a\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?t7 \\<in> Chi a s\n 4. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> Chi a ?t7\n 5. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a ?u7\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> s \\<in> Chi a s\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> Chi a s\n 4. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a ?u7\\<rbrakk>\n    \\<Longrightarrow> False", "back"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> u \\<in> Chi a s\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> Chi a u\n 4. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a ?u7\\<rbrakk>\n    \\<Longrightarrow> False", "back"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> t \\<in> Chi a s\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> Chi a t\n 4. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a ?u7\\<rbrakk>\n    \\<Longrightarrow> False", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> Chi a t\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> ?u7 \\<in> HAStates a\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> t \\<in> Chi a s\n 4. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a ?u7\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> u \\<in> HAStates a\n 2. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u\\<rbrakk>\n    \\<Longrightarrow> t \\<in> Chi a s\n 3. \\<lbrakk>s \\<in> HAStates a; u \\<in> HAStates a; u \\<in> Chi a t;\n     t \\<in> HAStates a; t \\<in> Chi a s; s \\<in> Chi a u;\n     s \\<notin> Chi a u\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiRel:\n  \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA;\n     SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> (ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<notin> ChiRel A", "by (unfold ChiRel_def, auto)"], ["", "lemma ChiRel_SA_OneAncestor: \n   \"\\<lbrakk> (S,T) \\<in> ChiRel A; T \\<in> States SA; \n      U \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> \n      (S,U) \\<in> ChiRel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> ChiRel A", "apply (frule CompFun_ChiRel2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States ?SA\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> ?SA \\<in> SAs A\n 3. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A; ?SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> ChiRel A", "apply (rule CompFun_ChiRel)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> ?SA4 \\<in> the (CompFun A S)\n 3. \\<lbrakk>(S, T) \\<in> ChiRel A; T \\<in> States SA; U \\<in> States SA;\n     SA \\<in> SAs A; SA \\<in> the (CompFun A S)\\<rbrakk>\n    \\<Longrightarrow> U \\<in> States ?SA4", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_OneAncestor2: \n  \"\\<lbrakk> S \\<in> HAStates A; S \\<notin> States (HARoot A) \\<rbrakk> \\<Longrightarrow> \n     \\<exists>! T. (T,S) \\<in> ChiRel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!T. (T, S) \\<in> ChiRel A", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!T.\n                         (T, S)\n                         \\<in> {(S, S').\n                                S \\<in> HAStates A \\<and>\n                                S' \\<in> HAStates A \\<and> S' \\<in> Chi A S}", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. T \\<in> HAStates A \\<and> S \\<in> Chi A T\n 2. \\<And>T y.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; S \\<in> Chi A T; y \\<in> HAStates A;\n        S \\<in> Chi A y\\<rbrakk>\n       \\<Longrightarrow> T = y", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T y.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; S \\<in> Chi A T; y \\<in> HAStates A;\n        S \\<in> Chi A y\\<rbrakk>\n       \\<Longrightarrow> T = y\n 2. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. T \\<in> HAStates A \\<and> S \\<in> Chi A T", "apply (rename_tac T U)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; S \\<in> Chi A T; U \\<in> HAStates A;\n        S \\<in> Chi A U\\<rbrakk>\n       \\<Longrightarrow> T = U\n 2. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. T \\<in> HAStates A \\<and> S \\<in> Chi A T", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. T \\<in> HAStates A \\<and> S \\<in> Chi A T\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; S \\<in> Chi A T; U \\<in> HAStates A;\n        S \\<in> Chi A U\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (unfold Chi_def restrict_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         T \\<in> HAStates A \\<and>\n                         S \\<in> (if T \\<in> HAStates A\n                                  then {S'.\n  \\<exists>SA\\<in>SAs A.\n     SA \\<in> the (CompFun A T) \\<and> S' \\<in> States SA}\n                                  else SOME y. True)\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A;\n        S \\<in> (if T \\<in> HAStates A\n                 then {S'.\n                       \\<exists>SA\\<in>SAs A.\n                          SA \\<in> the (CompFun A T) \\<and>\n                          S' \\<in> States SA}\n                 else SOME y. True);\n        U \\<in> HAStates A;\n        S \\<in> (if U \\<in> HAStates A\n                 then {S'.\n                       \\<exists>SA\\<in>SAs A.\n                          SA \\<in> the (CompFun A U) \\<and>\n                          S' \\<in> States SA}\n                 else SOME y. True)\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAa.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAa \\<in> the (CompFun A U);\n        S \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> T = U", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAa.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAa \\<in> the (CompFun A U);\n        S \\<in> States SAa\\<rbrakk>\n       \\<Longrightarrow> T = U\n 2. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A", "apply (rename_tac SA SAA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U\n 2. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (cut_tac HA=A in OneAncestor_HA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     OneAncestor (SAs A) (CompFun A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (unfold OneAncestor_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     \\<forall>Aa\\<in>SAs A - {Root (SAs A) (CompFun A)}.\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {Aa})) \\<and>\n           Aa \\<in> the (CompFun A s)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (fold HARoot_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     \\<forall>Aa\\<in>SAs A - {HARoot A}.\n        \\<exists>!s.\n           s \\<in> \\<Union> (States ` (SAs A - {Aa})) \\<and>\n           Aa \\<in> the (CompFun A s)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     \\<forall>Aa\\<in>SAs A - {HARoot A}.\n        \\<exists>!s.\n           (\\<exists>x\\<in>SAs A - {Aa}. s \\<in> States x) \\<and>\n           Aa \\<in> the (CompFun A s)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (T \\<in> HAStates A \\<longrightarrow>\n                          (\\<exists>SA\\<in>SAs A.\n                              SA \\<in> the (CompFun A T) \\<and>\n                              S \\<in> States SA)) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (simp cong: rev_conj_cong)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     \\<forall>Aa\\<in>SAs A - {HARoot A}.\n        \\<exists>!s.\n           (\\<exists>x\\<in>SAs A - {Aa}. s \\<in> States x) \\<and>\n           Aa \\<in> the (CompFun A s)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (\\<exists>SA\\<in>SAs A.\n                             SA \\<in> the (CompFun A T) \\<and>\n                             S \\<in> States SA) \\<and>\n                         T \\<in> HAStates A\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n        T \\<in> HAStates A; U \\<in> HAStates A; SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> \\<Union> (States ` SAs A);\n     S \\<notin> States (HARoot A);\n     \\<forall>Aa\\<in>SAs A - {HARoot A}.\n        \\<exists>!s.\n           (\\<exists>x\\<in>SAs A - {Aa}. s \\<in> States x) \\<and>\n           Aa \\<in> the (CompFun A s)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T.\n                         (\\<exists>SA\\<in>SAs A.\n                             SA \\<in> the (CompFun A T) \\<and>\n                             S \\<in> States SA) \\<and>\n                         T \\<in> \\<Union> (States ` SAs A)\n 2. \\<And>T U SA SAA.\n       \\<lbrakk>S \\<in> \\<Union> (States ` SAs A);\n        S \\<notin> States (HARoot A); T \\<in> \\<Union> (States ` SAs A);\n        U \\<in> \\<Union> (States ` SAs A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U);\n        S \\<in> States SAA\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>S \\<notin> States (HARoot A);\n        \\<forall>Aa\\<in>SAs A - {HARoot A}.\n           \\<exists>!s.\n              (\\<exists>x\\<in>SAs A - {Aa}. s \\<in> States x) \\<and>\n              Aa \\<in> the (CompFun A s);\n        x \\<in> SAs A; S \\<in> States x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T.\n                            (\\<exists>SA\\<in>SAs A.\n                                SA \\<in> the (CompFun A T) \\<and>\n                                S \\<in> States SA) \\<and>\n                            (\\<exists>x\\<in>SAs A. T \\<in> States x)\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (rename_tac SA)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<notin> States (HARoot A);\n        \\<forall>Aa\\<in>SAs A - {HARoot A}.\n           \\<exists>!s.\n              (\\<exists>x\\<in>SAs A - {Aa}. s \\<in> States x) \\<and>\n              Aa \\<in> the (CompFun A s);\n        SA \\<in> SAs A; S \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T.\n                            (\\<exists>SA\\<in>SAs A.\n                                SA \\<in> the (CompFun A T) \\<and>\n                                S \\<in> States SA) \\<and>\n                            (\\<exists>x\\<in>SAs A. T \\<in> States x)\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>SA.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> SAs A;\n        S \\<in> States SA;\n        \\<exists>!s.\n           (\\<exists>x\\<in>SAs A - {SA}. s \\<in> States x) \\<and>\n           SA \\<in> the (CompFun A s)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T.\n                            (\\<exists>SA\\<in>SAs A.\n                                SA \\<in> the (CompFun A T) \\<and>\n                                S \\<in> States SA) \\<and>\n                            (\\<exists>x\\<in>SAs A. T \\<in> States x)\n 2. \\<And>SA.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> SAs A;\n        S \\<in> States SA; SA \\<notin> SAs A - {HARoot A}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T.\n                            (\\<exists>SA\\<in>SAs A.\n                                SA \\<in> the (CompFun A T) \\<and>\n                                S \\<in> States SA) \\<and>\n                            (\\<exists>x\\<in>SAs A. T \\<in> States x)\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply (case_tac \"T = U\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T = U\\<rbrakk>\n       \\<Longrightarrow> T = U\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> T = U", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule CompFun_Int_disjoint)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> T \\<in> HAStates (?A130 T U SA SAA x xa xb)\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> U \\<in> HAStates (?A130 T U SA SAA x xa xb)\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun (?A130 T U SA SAA x xa xb) U) \\<inter>\n        the (CompFun (?A130 T U SA SAA x xa xb) T) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> T \\<in> \\<Union>\n                                  (States ` SAs (?A130 T U SA SAA x xa xb))\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U\\<rbrakk>\n       \\<Longrightarrow> U \\<in> \\<Union>\n                                  (States ` SAs (?A130 T U SA SAA x xa xb))\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun (?A130 T U SA SAA x xa xb) U) \\<inter>\n        the (CompFun (?A130 T U SA SAA x xa xb) T) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (case_tac \"SA=SAA\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA = SAA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {};\n        SA \\<noteq> SAA\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {};\n        SA \\<noteq> SAA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac HA=A in MutuallyDistinct_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        MutuallyDistinct (SAs A)\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold MutuallyDistinct_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        \\<forall>a\\<in>SAs A.\n           \\<forall>b\\<in>SAs A.\n              a \\<noteq> b \\<longrightarrow>\n              States a \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SAA in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        \\<forall>b\\<in>SAs A.\n           SAA \\<noteq> b \\<longrightarrow>\n           States SAA \\<inter> States b = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<noteq> SA \\<longrightarrow>\n        States SAA \\<inter> States SA = {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac S=T and A=A in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> HAStates A\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A; the (CompFun A T) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> \\<Union> (States ` SAs A)\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A; the (CompFun A T) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SA \\<notin> SAs A; the (CompFun A T) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (cut_tac S=U and A=A in HAStates_CompFun_SAs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> HAStates A\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A; the (CompFun A U) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> \\<Union> (States ` SAs A)\n 2. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A; the (CompFun A U) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U SA SAA x xa xb.\n       \\<lbrakk>S \\<notin> States (HARoot A); SA \\<in> the (CompFun A T);\n        S \\<in> States SA; SAA \\<in> the (CompFun A U); S \\<in> States SAA;\n        x \\<in> SAs A; S \\<in> States x; xa \\<in> SAs A; T \\<in> States xa;\n        xb \\<in> SAs A; U \\<in> States xb; T \\<noteq> U;\n        the (CompFun A U) \\<inter> the (CompFun A T) = {}; SA \\<noteq> SAA;\n        SAA \\<notin> SAs A; the (CompFun A U) \\<subseteq> SAs A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HARootStates_notmem_Range_ChiRel [simp]:\n  \"S \\<in> States (HARoot A) \\<Longrightarrow> S \\<notin> Range (ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> States (HARoot A) \\<Longrightarrow> S \\<notin> Range (ChiRel A)", "by (unfold ChiRel_def, auto)"], ["", "lemma ChiRel_int_disjoint:\n  \"S \\<noteq> T \\<Longrightarrow> (ChiRel A `` {S}) \\<inter> (ChiRel A `` {T}) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> T \\<Longrightarrow>\n    ChiRel A `` {S} \\<inter> ChiRel A `` {T} = {}", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<noteq> T \\<Longrightarrow>\n    {(S, S').\n     S \\<in> HAStates A \\<and>\n     S' \\<in> HAStates A \\<and> S' \\<in> Chi A S} ``\n    {S} \\<inter>\n    {(S, S').\n     S \\<in> HAStates A \\<and>\n     S' \\<in> HAStates A \\<and> S' \\<in> Chi A S} ``\n    {T} =\n    {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>S \\<noteq> T; S \\<in> HAStates A; T \\<in> HAStates A;\n        x \\<in> Chi A S; x \\<in> HAStates A; x \\<in> Chi A T\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only: Chi_range_disjoint)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiRel_trans [rule_format]:\n  \"\\<lbrakk> (S,U) \\<in> (ChiRel A); (U,T) \\<in> ChiRel A; \n     S \\<in> States SA; SA \\<in> SAs A  \\<rbrakk> \\<Longrightarrow> T \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiRel A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiRel A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (unfold ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U)\n             \\<in> {(S, S').\n                    S \\<in> HAStates A \\<and>\n                    S' \\<in> HAStates A \\<and> S' \\<in> Chi A S};\n     (U, T)\n     \\<in> {(S, S').\n            S \\<in> HAStates A \\<and>\n            S' \\<in> HAStates A \\<and> S' \\<in> Chi A S};\n     S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule SAStates_Chi_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> ?S6 \\<in> Chi A T\n 2. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> U \\<in> States ?SA6\n 3. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> ?SA6 \\<in> SAs A\n 4. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> T \\<in> HAStates A\n 5. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S; ?S6 \\<notin> States ?SA6\\<rbrakk>\n    \\<Longrightarrow> False", "back"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> ?S6 \\<in> Chi A U\n 2. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> S \\<in> States ?SA6\n 3. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> ?SA6 \\<in> SAs A\n 4. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S\\<rbrakk>\n    \\<Longrightarrow> U \\<in> HAStates A\n 5. \\<lbrakk>S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n     S \\<in> HAStates A; T \\<in> HAStates A; T \\<in> Chi A U;\n     U \\<in> HAStates A; U \\<in> Chi A S; ?S6 \\<notin> States ?SA6\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitStates_InitState_trancl: \n  \" \\<lbrakk> S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S) \\<rbrakk> \\<Longrightarrow> \n       (S, InitState A) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST);\n     A \\<in> the (CompFun (HA ST) S)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply (case_tac \"S \\<in> HAStates (HA ST)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<notin> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply (frule CompFun_ChiRel)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> ?SA1 \\<in> the (CompFun (HA ST) S)\n 2. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> ?S2.1 \\<in> States ?SA1\n 3. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST); (S, ?S2.1) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+\n 4. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<notin> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply fast+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> ?S2.1 \\<in> States A\n 2. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST); (S, ?S2.1) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<notin> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply (rule InitState_States)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<in> HAStates (HA ST);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     S \\<notin> HAStates (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply (rule r_into_trancl')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> (S, InitState A)\n                      \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> InitState A \\<in> HAInitStates (HA ST)", "apply (rule CompFun_HAInitStates_HAStates)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> ?S10 \\<in> HAStates (HA ST)\n 2. \\<lbrakk>S \\<in> HAInitStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n    \\<Longrightarrow> A \\<in> the (CompFun (HA ST) ?S10)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitStates_InitState_trancl2:\n \"\\<lbrakk> S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S); \n   (x, S) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+ \\<rbrakk>\n  \\<Longrightarrow> (x, InitState A) \\<in> (ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST))\\<^sup>+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (x, S)\n     \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (x, InitState A)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+", "apply (rule_tac a=\"x\" and b=\"S\" and r=\"ChiRel (HA ST) \\<inter> HAInitStates (HA ST) \\<times> HAInitStates (HA ST)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n     (x, S)\n     \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (x, S)\n                      \\<in> (Restr (ChiRel (HA ST))\n                              (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST))\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>y z.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, z) \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST));\n        (z, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (z, InitState A)\n        \\<in> (Restr (ChiRel (HA ST))\n                (HAInitStates (HA ST)))\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (z, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (z, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, z) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        z \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (z, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (z, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, z) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        z \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rename_tac T U)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (case_tac \"S \\<in> HAStates (HA ST)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (frule CompFun_ChiRel)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> ?SA9 y \\<in> the (CompFun (HA ST) S)\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> ?S2.9 y \\<in> States (?SA9 y)\n 3. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST);\n        (S, ?S2.9 y) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 4. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 5. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply fast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> ?S2.9 y \\<in> States A\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST);\n        (S, ?S2.9 y) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 4. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule InitState_States)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<in> HAStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule trancl_trans [of _ S])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, S)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (S, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 4. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule r_into_trancl')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, S)\n                         \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST))\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (S, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 3. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST); S \\<notin> HAStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (y, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 4. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (S, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule r_into_trancl')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (S, InitState A)\n                         \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST))\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> InitState A \\<in> HAInitStates (HA ST)\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule CompFun_HAInitStates_HAStates)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> ?S23 y \\<in> HAStates (HA ST)\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> A \\<in> the (CompFun (HA ST) (?S23 y))\n 3. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> A \\<in> the (CompFun (HA ST) (?S23 y))\n 2. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> ?S23 y \\<in> HAStates (HA ST)\n 3. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (y, S) \\<in> ChiRel (HA ST); y \\<in> HAInitStates (HA ST);\n        S \\<in> HAInitStates (HA ST);\n        (S, InitState A) \\<in> ChiRel (HA ST)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> HAStates (HA ST)\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (cut_tac A=\"HA ST\" in HAInitStates_HAStates, fast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule_tac y = U in trancl_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, U)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (U, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply (rule r_into_trancl')"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (T, U)\n                         \\<in> Restr (ChiRel (HA ST)) (HAInitStates (HA ST))\n 2. \\<And>T U.\n       \\<lbrakk>S \\<in> HAStates (HA ST); A \\<in> the (CompFun (HA ST) S);\n        (x, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, S)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (U, InitState A)\n        \\<in> (Restr (ChiRel (HA ST)) (HAInitStates (HA ST)))\\<^sup>+;\n        (T, U) \\<in> ChiRel (HA ST); T \\<in> HAInitStates (HA ST);\n        U \\<in> HAInitStates (HA ST)\\<rbrakk>\n       \\<Longrightarrow> (U, InitState A)\n                         \\<in> (Restr (ChiRel (HA ST))\n                                 (HAInitStates (HA ST)))\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>ChiPlus\\<close>\\<close>"], ["", "lemma ChiPlus_ChiRel [simp]:\n  \"(S,T) \\<in> ChiRel A \\<Longrightarrow> (S,T) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiRel A \\<Longrightarrow> (S, T) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiRel A \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>+", "apply (frule r_into_trancl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (S, T) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_HAStates [simp]:\n  \"(ChiPlus A) \\<subseteq> (HAStates A \\<times> HAStates A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ChiRel A)\\<^sup>+ \\<subseteq> HAStates A \\<times> HAStates A", "apply (rule trancl_subset_Sigma)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiRel A \\<subseteq> HAStates A \\<times> HAStates A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_subset_States:\n  \"ChiPlus a `` {t} \\<subseteq>  \\<Union>(States ` (SAs a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiPlus a `` {t} \\<subseteq> \\<Union> (States ` SAs a)", "apply (cut_tac A=a in ChiPlus_HAStates)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiPlus a \\<subseteq> HAStates a \\<times> HAStates a \\<Longrightarrow>\n    ChiPlus a `` {t} \\<subseteq> \\<Union> (States ` SAs a)", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ChiPlus a\n    \\<subseteq> \\<Union> (States ` SAs a) \\<times>\n                \\<Union> (States ` SAs a) \\<Longrightarrow>\n    ChiPlus a `` {t} \\<subseteq> \\<Union> (States ` SAs a)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma finite_ChiPlus [simp]: \n  \"finite (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (ChiPlus A)", "apply (rule_tac B=\"HAStates A \\<times> HAStates A\" in finite_subset)"], ["proof (prove)\ngoal (2 subgoals):\n 1. ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A\n 2. finite (HAStates A \\<times> HAStates A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_OneAncestor: \n  \"\\<lbrakk> S \\<in> HAStates A; S \\<notin> States (HARoot A) \\<rbrakk> \\<Longrightarrow> \n     \\<exists> T. (T,S) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. (T, S) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (frule ChiRel_OneAncestor2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States (HARoot A)\n 2. \\<lbrakk>S \\<in> HAStates A; S \\<notin> States (HARoot A);\n     \\<exists>!T. (T, S) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T. (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_HAStates_Left:\n \"(S,T) \\<in> ChiPlus A \\<Longrightarrow> S \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow> S \\<in> HAStates A", "apply (cut_tac A=A in ChiPlus_HAStates)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A;\n     ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A;\n     ChiPlus A\n     \\<subseteq> \\<Union> (States ` SAs A) \\<times>\n                 \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> S \\<in> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_HAStates_Right:\n \"(S,T) \\<in> ChiPlus A \\<Longrightarrow> T \\<in>  HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow> T \\<in> HAStates A", "apply (cut_tac A=A in ChiPlus_HAStates)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A;\n     ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A\\<rbrakk>\n    \\<Longrightarrow> T \\<in> HAStates A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A;\n     ChiPlus A\n     \\<subseteq> \\<Union> (States ` SAs A) \\<times>\n                 \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> T \\<in> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_int [rule_format]:\n  \"\\<lbrakk> (T,S) \\<in> (ChiPlus A)\\<rbrakk> \\<Longrightarrow> (ChiPlus A `` {T}) \\<inter> (ChiRel A `` {S}) = (ChiRel A `` {S})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    ChiPlus A `` {T} \\<inter> ChiRel A `` {S} = ChiRel A `` {S}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (ChiRel A)\\<^sup>+ `` {T} \\<inter> ChiRel A `` {S} = ChiRel A `` {S}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (ChiRel A)\\<^sup>+ `` {y} \\<inter>\n                         ChiRel A `` {S} =\n                         ChiRel A `` {S}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        (ChiRel A)\\<^sup>+ `` {z} \\<inter> ChiRel A `` {S} =\n        ChiRel A `` {S}\\<rbrakk>\n       \\<Longrightarrow> (ChiRel A)\\<^sup>+ `` {y} \\<inter>\n                         ChiRel A `` {S} =\n                         ChiRel A `` {S}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiPlus_int [rule_format]:\n  \"\\<lbrakk> (T,S) \\<in> (ChiPlus A)\\<rbrakk> \\<Longrightarrow> (ChiPlus A `` {T}) \\<inter> (ChiPlus A `` {S}) = (ChiPlus A `` {S})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    ChiPlus A `` {T} \\<inter> ChiPlus A `` {S} = ChiPlus A `` {S}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (ChiRel A)\\<^sup>+ `` {T} \\<inter> (ChiRel A)\\<^sup>+ `` {S} =\n    (ChiRel A)\\<^sup>+ `` {S}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (ChiRel A)\\<^sup>+ `` {y} \\<inter>\n                         (ChiRel A)\\<^sup>+ `` {S} =\n                         (ChiRel A)\\<^sup>+ `` {S}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        (ChiRel A)\\<^sup>+ `` {z} \\<inter> (ChiRel A)\\<^sup>+ `` {S} =\n        (ChiRel A)\\<^sup>+ `` {S}\\<rbrakk>\n       \\<Longrightarrow> (ChiRel A)\\<^sup>+ `` {y} \\<inter>\n                         (ChiRel A)\\<^sup>+ `` {S} =\n                         (ChiRel A)\\<^sup>+ `` {S}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_NoCycle_1 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>    \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {T}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n    ChiRel A `` {T} \\<noteq>\n    {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n           (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n    ChiRel A `` {T} \\<noteq>\n    {}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> insert S\n                          (insert y\n                            {U. (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {y} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        insert S\n         (insert z\n           {U. (z, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {z} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> insert S\n                          (insert y\n                            {U. (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {y} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> {x \\<in> insert S\n                                   (insert y\n                                     {U.\n(y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {ya.\n                                   \\<exists>x\\<in>{y}.\n(x, ya) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert z\n                    {U. (z, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{z}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> {x \\<in> insert S\n                                   (insert y\n                                     {U.\n(y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {ya.\n                                   \\<exists>x\\<in>{y}.\n(x, ya) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_NoCycle_2 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  (S,T) \\<in> (ChiRel A) \\<longrightarrow> \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {S}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n    ChiRel A `` {S} \\<noteq>\n    {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n           (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n    ChiRel A `` {S} \\<noteq>\n    {}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<in> ChiRel A \\<longrightarrow>\n                         insert S\n                          (insert y\n                            {U. (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {S} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        (S, z) \\<in> ChiRel A \\<longrightarrow>\n        insert S\n         (insert z\n           {U. (z, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<in> ChiRel A \\<longrightarrow>\n                         insert S\n                          (insert y\n                            {U. (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {S} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (y, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> insert S\n                                   (insert y\n                                     {U.\n(y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{S}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, S) \\<in> (ChiRel A)\\<^sup>+;\n        (S, z) \\<in> ChiRel A \\<longrightarrow>\n        {x \\<in> insert S\n                  (insert z\n                    {U. (z, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{S}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> insert S\n                                   (insert y\n                                     {U.\n(y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, S) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{S}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_NoCycle_3 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  (S,T) \\<in> (ChiRel A) \\<longrightarrow> (T,U) \\<in>  ChiPlus A \\<longrightarrow> (U, S) \\<in> ChiPlus A \\<longrightarrow> \n   (insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {U}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    (T, U) \\<in> ChiPlus A \\<longrightarrow>\n    (U, S) \\<in> ChiPlus A \\<longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n    ChiRel A `` {U} \\<noteq>\n    {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n    (U, S) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n    insert S\n     (insert T\n       {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n           (U, S) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n    ChiRel A `` {U} \\<noteq>\n    {}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert y\n                          (insert T\n                            {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {U} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert y\n         (insert T\n           {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (U, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert z\n                          (insert T\n                            {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (U, z) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {U} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert y\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, y) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert y\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, y) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert z\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, z) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply (rename_tac V)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (V, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert V\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert y\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, y) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert z\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, z) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert y\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, y) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert z\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, z) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>V.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (V, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert V\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply (rename_tac V W)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (V, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert V\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert W\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>V.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (V, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert V\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (V, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert V\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (V, T) \\<in> ChiRel A \\<longrightarrow>\n        (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (U, V) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert V\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, V) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (U, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert W\n                                   (insert T\n                                     {U.\n(T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{U}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply (simp, safe)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (T, V) \\<in> ChiRel A;\n        (V, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, V) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = V \\<or>\n                             x = T \\<or>\n                             (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                             (x, V) \\<in> (ChiRel A)\\<^sup>+) \\<and>\n                            (U, x) \\<in> ChiRel A\n 2. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (V, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (U, V) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> V \\<in> {}\n 5. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> {}\n 6. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, V) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (simp only: ChiRel_HAStates_NoCycles)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (V, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (U, V) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> V \\<in> {}\n 4. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> {}\n 5. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, V) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        \\<forall>x.\n           x \\<noteq> W \\<and>\n           x \\<noteq> T \\<and>\n           ((T, x) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n            (x, W) \\<notin> (ChiRel A)\\<^sup>+) \\<or>\n           (U, x) \\<notin> ChiRel A;\n        (V, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V W.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (U, V) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, V) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> V \\<in> {}\n 4. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> {}\n 5. \\<And>V W x xa.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, W) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert W\n                  (insert T\n                    {U. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (U, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{U}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, V) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (case_tac \"(U,W) \\<in> (ChiRel A)\", fast, rotate_tac 5, frule tranclD3, fast, blast intro: trancl_into_trancl)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_NoCycle_4 [rule_format]:\n \"\\<lbrakk> (T,S) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in>  (ChiRel A) \\<longrightarrow> ((ChiPlus A ``{T}) \\<inter> (ChiRel A `` {S})) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> ChiPlus A \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    ChiPlus A `` {T} \\<inter> ChiRel A `` {S} \\<noteq> {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> ChiRel A \\<longrightarrow>\n    (ChiRel A)\\<^sup>+ `` {T} \\<inter> ChiRel A `` {S} \\<noteq> {}", "apply (rule_tac a=\"T\" and b=\"S\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         (ChiRel A)\\<^sup>+ `` {T} \\<inter>\n                         ChiRel A `` {y} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (ChiRel A)\\<^sup>+ `` {T} \\<inter> ChiRel A `` {y} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (ChiRel A)\\<^sup>+ `` {T} \\<inter>\n                         ChiRel A `` {z} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, S) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> {y. \\<exists>x\\<in>{T}.\n   (x, y) \\<in> (ChiRel A)\\<^sup>+}.\n                          x \\<in> {ya.\n                                   \\<exists>x\\<in>{y}.\n(x, ya) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        {x \\<in> {y. \\<exists>x\\<in>{T}. (x, y) \\<in> (ChiRel A)\\<^sup>+}.\n         x \\<in> {ya. \\<exists>x\\<in>{y}. (x, ya) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> {y. \\<exists>x\\<in>{T}.\n   (x, y) \\<in> (ChiRel A)\\<^sup>+}.\n                          x \\<in> {y. \\<exists>x\\<in>{z}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+; (T, y) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (y, x) \\<in> ChiRel A\n 2. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (y, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A\n 3. \\<And>y z x.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (y, x) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A", "apply (simp only: ChiRel_HAStates_NoCycles)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (y, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A\n 2. \\<And>y z x.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (y, x) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A", "apply (rule_tac x=T in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (y, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, T) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                         (z, T) \\<in> ChiRel A\n 2. \\<And>y z x.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (y, x) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (y, x) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (T, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (z, x) \\<in> ChiRel A", "apply (rule_tac x=T in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       \\<lbrakk>(T, S) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> ChiRel A; (T, x) \\<in> (ChiRel A)\\<^sup>+;\n        (y, x) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, T) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                         (z, T) \\<in> ChiRel A", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_ChiPlus_NoCycles:\n \"(S,T) \\<in> (ChiRel A) \\<Longrightarrow> (T,S) \\<notin> (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiRel A \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; NoCycles (SAs A) (CompFun A)\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n        S \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>S.\n            S \\<inter> \\<Union> (States ` the (CompFun A s)) = {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (erule_tac x=\"insert S (insert T ({U. (T,U) \\<in> ChiPlus A \\<and> (U,S) \\<in> ChiPlus A}))\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert T\n                        {U. (T, U) \\<in> ChiPlus A \\<and>\n                            (U, S) \\<in> ChiPlus A}).\n         insert S\n          (insert T\n            {U. (T, U) \\<in> ChiPlus A \\<and>\n                (U, S) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A})\n     \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A})\n     \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert T\n                        {U. (T, U) \\<in> ChiPlus A \\<and>\n                            (U, S) \\<in> ChiPlus A}).\n         insert S\n          (insert T\n            {U. (T, U) \\<in> ChiPlus A \\<and>\n                (U, S) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (simp add: ChiPlus_subset_States)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. T \\<notin> States x) \\<or>\n     \\<not> {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert T\n                        {U. (T, U) \\<in> ChiPlus A \\<and>\n                            (U, S) \\<in> ChiPlus A}).\n         insert S\n          (insert T\n            {U. (T, U) \\<in> ChiPlus A \\<and>\n                (U, S) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (cut_tac A=A in ChiPlus_HAStates)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. T \\<notin> States x) \\<or>\n     \\<not> {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A);\n     ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert T\n                        {U. (T, U) \\<in> ChiPlus A \\<and>\n                            (U, S) \\<in> ChiPlus A}).\n         insert S\n          (insert T\n            {U. (T, U) \\<in> ChiPlus A \\<and>\n                (U, S) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. T \\<notin> States x) \\<or>\n     \\<not> {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A);\n     ChiPlus A\n     \\<subseteq> \\<Union> (States ` SAs A) \\<times>\n                 \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A;\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert T\n                        {U. (T, U) \\<in> ChiPlus A \\<and>\n                            (U, S) \\<in> ChiPlus A}).\n         insert S\n          (insert T\n            {U. (T, U) \\<in> ChiPlus A \\<and>\n                (U, S) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A S). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A S). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A S)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A T). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A T)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule ChiPlus_ChiRel_NoCycle_2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A S). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A S). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A S)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> ChiRel A\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A S). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A S). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A S)) =\n     {};\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n     ChiRel A `` {S} \\<noteq>\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A T). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A T)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A S). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A S). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A S)) =\n     {};\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n     ChiRel A `` {S} \\<noteq>\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A T). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A T)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add:ChiRel_CompFun)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A T). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A T)) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule ChiPlus_ChiRel_NoCycle_1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n     \\<forall>x\\<in>the (CompFun A T). S \\<notin> States x;\n     \\<forall>x\\<in>the (CompFun A T). T \\<notin> States x;\n     {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n     \\<Union> (States ` the (CompFun A T)) =\n     {};\n     insert S\n      (insert T\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A}) \\<inter>\n     ChiRel A `` {T} \\<noteq>\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add:ChiRel_CompFun)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule ChiPlus_ChiRel_NoCycle_3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (S, T) \\<in> ChiRel A\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (T, ?U98 s) \\<in> ChiPlus A\n 3. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (?U98 s, S) \\<in> ChiPlus A\n 4. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {?U98 s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (T, ?U98 s) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (?U98 s, S) \\<in> ChiPlus A\n 3. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {?U98 s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (S, S) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "back"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (s, S) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, s) \\<in> ChiPlus A; (s, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A s). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A s). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac V)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, V) \\<in> ChiPlus A; (V, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A V). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A V). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A V)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {V} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (case_tac \"V \\<in> HAStates A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, V) \\<in> ChiPlus A; (V, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A V). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A V). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A V)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {V} \\<noteq>\n        {};\n        V \\<in> HAStates A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, V) \\<in> ChiPlus A; (V, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A V). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A V). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A V)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {V} \\<noteq>\n        {};\n        V \\<notin> HAStates A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add: ChiRel_CompFun)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, V) \\<in> ChiPlus A; (V, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A V). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A V). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A V)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {V} \\<noteq>\n        {};\n        V \\<notin> HAStates A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only: ChiPlus_HAStates_Right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V.\n       \\<lbrakk>(S, T) \\<in> ChiRel A; (T, S) \\<in> ChiPlus A;\n        (T, V) \\<in> ChiPlus A; (V, S) \\<in> ChiPlus A;\n        \\<forall>x\\<in>the (CompFun A V). S \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A V). T \\<notin> States x;\n        {U. (T, U) \\<in> ChiPlus A \\<and> (U, S) \\<in> ChiPlus A} \\<inter>\n        \\<Union> (States ` the (CompFun A V)) =\n        {};\n        insert S\n         (insert T\n           {U. (T, U) \\<in> ChiPlus A \\<and>\n               (U, S) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {V} \\<noteq>\n        {};\n        \\<not> True\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiPlus_NoCycles:\n \"(S,T) \\<in> (ChiPlus A) \\<Longrightarrow> (T,S) \\<notin> (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, S) \\<notin> (ChiRel A)\\<^sup>+", "apply (rule_tac a=\"S\" and b=\"T\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, S) \\<notin> (ChiRel A)\\<^sup>+\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, S) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (z, S) \\<notin> (ChiRel A)\\<^sup>+", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, S) \\<notin> (ChiRel A)\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, S) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (z, S) \\<notin> (ChiRel A)\\<^sup>+", "apply (frule ChiRel_ChiPlus_NoCycles)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> ChiRel A;\n        (y, S) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (y, S) \\<notin> (ChiRel A)\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, S) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> (z, S) \\<notin> (ChiRel A)\\<^sup>+", "apply (auto intro: trancl_into_trancl2 simp add:ChiPlus_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_NoCycles [rule_format]:\n \"(S,T) \\<in> (ChiPlus A) \\<Longrightarrow> S \\<noteq> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow> S \\<noteq> T", "apply (frule ChiPlus_ChiPlus_NoCycles)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A; (T, S) \\<notin> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> T", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_NoCycles_2 [simp]:\n \"(S,S) \\<notin> (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, S) \\<notin> ChiPlus A", "apply (rule notI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, S) \\<in> ChiPlus A \\<Longrightarrow> False", "apply (frule ChiPlus_NoCycles)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, S) \\<in> ChiPlus A; S \\<noteq> S\\<rbrakk>\n    \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiPlus_NoCycles_2:\n  \"\\<lbrakk> (S,U) \\<in> ChiPlus A; (U,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (T,S) \\<notin>  ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> (T, S) \\<notin> ChiPlus A", "apply (rule ChiPlus_ChiPlus_NoCycles)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> ChiPlus A", "apply (auto intro: trancl_trans simp add: ChiPlus_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_ChiPlus_trans:\n   \"\\<lbrakk> (U,S) \\<in> ChiPlus A; (S,T) \\<in> ChiRel A\\<rbrakk> \\<Longrightarrow> (U,T) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(U, S) \\<in> ChiPlus A; (S, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(U, S) \\<in> (ChiRel A)\\<^sup>+; (S, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_ChiPlus_trans2:\n   \"\\<lbrakk> (U,S) \\<in> ChiRel A; (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (U,T) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(U, S) \\<in> ChiRel A; (S, T) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(U, S) \\<in> ChiRel A; (S, T) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_Ex [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiRel A \\<longrightarrow> \n    (\\<exists> U. (S,U) \\<in> ChiPlus A \\<and> (U,T) \\<in> ChiRel A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow>\n    (S, T) \\<notin> ChiRel A \\<longrightarrow>\n    (\\<exists>U. (S, U) \\<in> ChiPlus A \\<and> (U, T) \\<in> ChiRel A)", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<notin> ChiRel A \\<longrightarrow>\n    (\\<exists>U.\n        (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<and> (U, T) \\<in> ChiRel A)", "apply (rule_tac a=\"S\" and b=\"T\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (y, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<notin> ChiRel A \\<longrightarrow>\n                         (\\<exists>U.\n                             (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                             (U, T) \\<in> ChiRel A)\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+;\n        (z, T) \\<notin> ChiRel A \\<longrightarrow>\n        (\\<exists>U.\n            (z, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (U, T) \\<in> ChiRel A)\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<notin> ChiRel A \\<longrightarrow>\n                         (\\<exists>U.\n                             (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                             (U, T) \\<in> ChiRel A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+; (y, T) \\<notin> ChiRel A;\n        (z, U) \\<in> (ChiRel A)\\<^sup>+; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>U.\n                            (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (U, T) \\<in> ChiRel A", "apply (rename_tac U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+; (y, T) \\<notin> ChiRel A;\n        (z, U) \\<in> (ChiRel A)\\<^sup>+; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>U.\n                            (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                            (U, T) \\<in> ChiRel A", "apply (rule_tac x=U in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+; (y, T) \\<notin> ChiRel A;\n        (z, U) \\<in> (ChiRel A)\\<^sup>+; (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, U) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                         (U, T) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_ChiRel_Ex2 [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiRel A \\<longrightarrow> \n    (\\<exists> U. (S,U) \\<in> ChiRel A \\<and> (U,T) \\<in> ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow>\n    (S, T) \\<notin> ChiRel A \\<longrightarrow>\n    (\\<exists>U. (S, U) \\<in> ChiRel A \\<and> (U, T) \\<in> ChiPlus A)", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<notin> ChiRel A \\<longrightarrow>\n    (\\<exists>U.\n        (S, U) \\<in> ChiRel A \\<and> (U, T) \\<in> (ChiRel A)\\<^sup>+)", "apply (rule_tac a=\"S\" and b=\"T\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, T) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+;\n        (y, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<notin> ChiRel A \\<longrightarrow>\n                         (\\<exists>U.\n                             (y, U) \\<in> ChiRel A \\<and>\n                             (U, T) \\<in> (ChiRel A)\\<^sup>+)\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+;\n        (z, T) \\<notin> ChiRel A \\<longrightarrow>\n        (\\<exists>U.\n            (z, U) \\<in> ChiRel A \\<and>\n            (U, T) \\<in> (ChiRel A)\\<^sup>+)\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<notin> ChiRel A \\<longrightarrow>\n                         (\\<exists>U.\n                             (y, U) \\<in> ChiRel A \\<and>\n                             (U, T) \\<in> (ChiRel A)\\<^sup>+)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HARootStates_Range_ChiPlus [simp]:\n  \"\\<lbrakk> S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> S \\<notin> Range (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> States (HARoot A) \\<Longrightarrow> S \\<notin> Range (ChiPlus A)", "by (unfold ChiPlus_def, auto)"], ["", "lemma HARootStates_Range_ChiPlus2 [simp]:\n  \"\\<lbrakk> S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> (x,S) \\<notin> (ChiPlus A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> States (HARoot A) \\<Longrightarrow> (x, S) \\<notin> ChiPlus A", "by (frule HARootStates_Range_ChiPlus, unfold Domain_converse [symmetric], fast)"], ["", "lemma SAStates_ChiPlus_ChiRel_NoCycle_1 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in> ChiPlus A; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (U,T) \\<in> (ChiRel A) \\<longrightarrow> S \\<in> States SA \\<longrightarrow> T \\<in> States SA \\<longrightarrow> \n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A}))) \\<inter> (ChiRel A `` {U}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      insert S\n                       (insert U\n                         {V. (S, V) \\<in> ChiPlus A \\<and>\n                             (V, U) \\<in> ChiPlus A}) \\<inter>\n                      ChiRel A `` {U} \\<noteq>\n                      {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      insert S\n                       (insert U\n                         {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                             (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                      ChiRel A `` {U} \\<noteq>\n                      {}", "apply (rule_tac a=\"S\" and b=\"U\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         y \\<in> States SA \\<longrightarrow>\n                         T \\<in> States SA \\<longrightarrow>\n                         insert y\n                          (insert U\n                            {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {U} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A \\<longrightarrow>\n        z \\<in> States SA \\<longrightarrow>\n        T \\<in> States SA \\<longrightarrow>\n        insert z\n         (insert U\n           {V. (z, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         y \\<in> States SA \\<longrightarrow>\n                         T \\<in> States SA \\<longrightarrow>\n                         insert y\n                          (insert U\n                            {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {U} \\<noteq>\n                         {}", "apply (simp, safe)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, U) \\<in> ChiRel A; (U, T) \\<in> ChiRel A; y \\<in> States SA;\n        T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        z \\<notin> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> z \\<in> {}\n 4. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 5. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (simp only: SAStates_ChiRel_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        z \\<notin> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> z \\<in> {}\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 4. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (simp add:ChiRel_CompFun)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (\\<forall>x\\<in>the (CompFun A U). y \\<notin> States x) \\<and>\n        (\\<forall>x\\<in>the (CompFun A U). U \\<notin> States x) \\<and>\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        z \\<notin> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> z \\<in> {}\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 4. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        z \\<notin> States SA;\n        \\<forall>x\\<in>the (CompFun A U). y \\<notin> States x;\n        \\<forall>x\\<in>the (CompFun A U). U \\<notin> States x;\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> z \\<in> {}\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 4. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (erule_tac x=SA in ballE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        z \\<notin> States SA;\n        \\<forall>x\\<in>the (CompFun A U). U \\<notin> States x;\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        y \\<notin> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        z \\<notin> States SA;\n        \\<forall>x\\<in>the (CompFun A U). U \\<notin> States x;\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        SA \\<notin> the (CompFun A U)\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> z \\<in> {}\n 4. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 5. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (simp add: CompFun_ChiRel2)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, y) \\<notin> ChiRel A \\<and>\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        ChiRel A `` {U} =\n        {};\n        (U, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 3. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (simp add:Int_def, fast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> U \\<in> {}\n 2. \\<And>y z x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        insert y\n         (insert U\n           {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {U} =\n        {};\n        \\<not> False; (U, x) \\<in> ChiRel A;\n        (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, x) \\<in> ChiRel A; (z, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, U) \\<in> (ChiRel A)\\<^sup>+; (U, y) \\<notin> ChiRel A;\n        {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n            (V, U) \\<in> (ChiRel A)\\<^sup>+} \\<inter>\n        ChiRel A `` {U} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z x.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> ChiPlus A;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, x) \\<in> ChiRel A; (z, x) \\<in> ChiPlus A;\n        (x, U) \\<in> ChiPlus A; (U, y) \\<notin> ChiRel A;\n        {V. (y, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A} \\<inter>\n        ChiRel A `` {U} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac W)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> ChiPlus A;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, W) \\<in> ChiRel A; (z, W) \\<in> ChiPlus A;\n        (W, U) \\<in> ChiPlus A; (U, y) \\<notin> ChiRel A;\n        {V. (y, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A} \\<inter>\n        ChiRel A `` {U} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac U=U and T=U and S=W in ChiRel_ChiPlus_trans2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> ChiPlus A;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, W) \\<in> ChiRel A; (z, W) \\<in> ChiPlus A;\n        (W, U) \\<in> ChiPlus A; (U, y) \\<notin> ChiRel A;\n        {V. (y, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A} \\<inter>\n        ChiRel A `` {U} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (W, U) \\<in> ChiPlus A\n 2. \\<And>y z W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; SA \\<in> SAs A;\n        (y, z) \\<in> ChiRel A; (z, U) \\<in> ChiPlus A;\n        (U, T) \\<in> ChiRel A; y \\<in> States SA; T \\<in> States SA;\n        (U, W) \\<in> ChiRel A; (z, W) \\<in> ChiPlus A;\n        (W, U) \\<in> ChiPlus A; (U, y) \\<notin> ChiRel A;\n        {V. (y, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A} \\<inter>\n        ChiRel A `` {U} =\n        {};\n        (U, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus_ChiRel_NoCycle_2 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in>  ChiPlus A \\<rbrakk> \\<Longrightarrow>  (U,T) \\<in> (ChiRel A) \\<longrightarrow> \n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {S}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, U) \\<in> ChiPlus A \\<Longrightarrow>\n    (U, T) \\<in> ChiRel A \\<longrightarrow>\n    insert S\n     (insert U\n       {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<inter>\n    ChiRel A `` {S} \\<noteq>\n    {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (U, T) \\<in> ChiRel A \\<longrightarrow>\n    insert S\n     (insert U\n       {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n           (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n    ChiRel A `` {S} \\<noteq>\n    {}", "apply (rule_tac a=\"S\" and b=\"U\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (y, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         insert y\n                          (insert U\n                            {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {y} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A \\<longrightarrow>\n        insert z\n         (insert U\n           {V. (z, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {z} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         insert y\n                          (insert U\n                            {V. (y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {y} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (y, U) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> insert y\n                                   (insert U\n                                     {V.\n(y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and> (V, U) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {ya.\n                                   \\<exists>x\\<in>{y}.\n(x, ya) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (z, U) \\<in> (ChiRel A)\\<^sup>+;\n        (U, T) \\<in> ChiRel A \\<longrightarrow>\n        {x \\<in> insert z\n                  (insert U\n                    {V. (z, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, U) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{z}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (U, T) \\<in> ChiRel A \\<longrightarrow>\n                         {x \\<in> insert y\n                                   (insert U\n                                     {V.\n(y, V) \\<in> (ChiRel A)\\<^sup>+ \\<and> (V, U) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {ya.\n                                   \\<exists>x\\<in>{y}.\n(x, ya) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* TO DO *)"], ["", "lemma SAStates_ChiPlus_ChiRel_NoCycle_3 [rule_format]:\n \"\\<lbrakk> (S,U) \\<in>  ChiPlus A \\<rbrakk> \\<Longrightarrow>  (U,T) \\<in> (ChiRel A) \\<longrightarrow> (S,s) \\<in> ChiPlus A \\<longrightarrow> (s,U) \\<in> ChiPlus A \\<longrightarrow>\n   (insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A})))  \\<inter> (ChiRel A `` {s}) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, U) \\<in> ChiPlus A \\<Longrightarrow>\n    (U, T) \\<in> ChiRel A \\<longrightarrow>\n    (S, s) \\<in> ChiPlus A \\<longrightarrow>\n    (s, U) \\<in> ChiPlus A \\<longrightarrow>\n    insert S\n     (insert U\n       {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<inter>\n    ChiRel A `` {s} \\<noteq>\n    {}", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (U, T) \\<in> ChiRel A \\<longrightarrow>\n    (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n    (s, U) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n    insert S\n     (insert U\n       {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n           (V, U) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n    ChiRel A `` {s} \\<noteq>\n    {}", "apply (rule_tac a=\"S\" and b=\"U\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert y\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 3. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert y\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert z\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, z) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert y\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 2. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert y\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert z\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, z) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "apply (rename_tac W)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert W\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 2. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert y\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert z\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, z) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        (y, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, y) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert y\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, y) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (z, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, z) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert z\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, z) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 2. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert W\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "apply (rename_tac W X)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert W\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (X, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, X) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert X\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, X) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 2. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert W\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert W\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        insert S\n         (insert W\n           {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n               (V, W) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (X, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, X) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         insert S\n                          (insert X\n                            {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                                (V, X) \\<in> (ChiRel A)\\<^sup>+}) \\<inter>\n                         ChiRel A `` {s} \\<noteq>\n                         {}", "apply (unfold Image_def Int_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (W, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert S\n                                   (insert W\n                                     {V.\n(S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and> (V, W) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{s}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A \\<longrightarrow>\n        (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        (s, W) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n        {x \\<in> insert S\n                  (insert W\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, W) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> (X, T) \\<in> ChiRel A \\<longrightarrow>\n                         (S, s) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         (s, X) \\<in> (ChiRel A)\\<^sup>+ \\<longrightarrow>\n                         {x \\<in> insert S\n                                   (insert X\n                                     {V.\n(S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and> (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n                          x \\<in> {y. \\<exists>x\\<in>{s}.\n   (x, y) \\<in> ChiRel A}} \\<noteq>\n                         {}", "apply (simp, safe)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, W) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                             (x, W) \\<in> (ChiRel A)\\<^sup>+) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (X, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, X) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (X, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, X) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (X, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, X) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (X, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, X) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>+;\n        (S, W) \\<in> (ChiRel A)\\<^sup>+; (W, X) \\<in> ChiRel A;\n        (X, T) \\<in> ChiRel A; (S, s) \\<in> (ChiRel A)\\<^sup>+;\n        (s, X) \\<in> (ChiRel A)\\<^sup>+;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> (ChiRel A)\\<^sup>+ \\<and>\n                        (V, X) \\<in> (ChiRel A)\\<^sup>+}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A;\n        (S, x) \\<in> (ChiRel A)\\<^sup>+;\n        (x, W) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (case_tac \"(s,W) \\<in> ChiRel A\")"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 7. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply fast"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (frule_tac S=s and T=W in ChiPlus_ChiRel_Ex2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (s, W) \\<notin> ChiRel A\n 2. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 7. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply safe"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W Ua.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A;\n        (s, Ua) \\<in> ChiRel A; (Ua, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (rename_tac X)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A;\n        (s, X) \\<in> ChiRel A; (X, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x.\n                            (x = S \\<or>\n                             x = W \\<or>\n                             (S, x) \\<in> ChiPlus A \\<and>\n                             (x, W) \\<in> ChiPlus A) \\<and>\n                            (s, x) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (rule_tac x=X in exI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiRel A;\n        (W, T) \\<in> ChiRel A; (S, s) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiPlus A; (s, W) \\<notin> ChiRel A;\n        (s, X) \\<in> ChiRel A; (X, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (X = S \\<or>\n                          X = W \\<or>\n                          (S, X) \\<in> ChiPlus A \\<and>\n                          (X, W) \\<in> ChiPlus A) \\<and>\n                         (s, X) \\<in> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (fast intro: ChiRel_ChiPlus_trans)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (case_tac \"(s,X) \\<in> ChiRel A\")"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply force"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (frule_tac S=s and T=X in ChiPlus_ChiRel_Ex2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (s, X) \\<notin> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 6. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply safe"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X Ua.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        (s, Ua) \\<in> ChiRel A; (Ua, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (rename_tac Y)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (erule_tac x=Y in allE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and>\n        ((S, Y) \\<in> ChiPlus A \\<longrightarrow>\n         (Y, X) \\<notin> ChiPlus A) \\<or>\n        (s, Y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (W, T) \\<notin> ChiRel A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and> (S, Y) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (fast intro: ChiRel_ChiPlus_trans)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (case_tac \"(s,X) \\<in> ChiRel A\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply force"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (frule_tac S=s and T=X in ChiPlus_ChiRel_Ex2)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (s, X) \\<notin> ChiRel A\n 2. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 5. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        \\<exists>U.\n           (s, U) \\<in> ChiRel A \\<and> (U, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X Ua.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        (s, Ua) \\<in> ChiRel A; (Ua, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (rename_tac Y)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (erule_tac x=Y in allE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and>\n        ((S, Y) \\<in> ChiPlus A \\<longrightarrow>\n         (Y, X) \\<notin> ChiPlus A) \\<or>\n        (s, Y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (s, W) \\<notin> ChiPlus A; (s, X) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (Y, X) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and> (S, Y) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 4. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (fast intro: ChiRel_ChiPlus_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, S) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> {}\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 3. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> W \\<in> {}\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply (erule_tac x=W in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>W X.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (s, W) \\<in> ChiRel A;\n        W \\<noteq> S \\<and>\n        W \\<noteq> X \\<and>\n        ((S, W) \\<in> ChiPlus A \\<longrightarrow>\n         (W, X) \\<notin> ChiPlus A) \\<or>\n        (s, W) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>W X x xa.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        {x \\<in> insert S\n                  (insert X\n                    {V. (S, V) \\<in> ChiPlus A \\<and>\n                        (V, X) \\<in> ChiPlus A}).\n         x \\<in> {y. \\<exists>x\\<in>{s}. (x, y) \\<in> ChiRel A}} =\n        {};\n        \\<not> False; (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>W X x.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, x) \\<in> ChiRel A; (S, x) \\<in> ChiPlus A;\n        (x, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac Y)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        \\<forall>x.\n           x \\<noteq> S \\<and>\n           x \\<noteq> X \\<and>\n           ((S, x) \\<in> ChiPlus A \\<longrightarrow>\n            (x, X) \\<notin> ChiPlus A) \\<or>\n           (s, x) \\<notin> ChiRel A;\n        (s, Y) \\<in> ChiRel A; (S, Y) \\<in> ChiPlus A;\n        (Y, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule_tac x=Y in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (s, Y) \\<in> ChiRel A; (S, Y) \\<in> ChiPlus A;\n        (Y, W) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and>\n        ((S, Y) \\<in> ChiPlus A \\<longrightarrow>\n         (Y, X) \\<notin> ChiPlus A) \\<or>\n        (s, Y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>W X Y.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (S, W) \\<in> ChiPlus A;\n        (W, X) \\<in> ChiRel A; (X, T) \\<in> ChiRel A;\n        (S, s) \\<in> ChiPlus A; (s, X) \\<in> ChiPlus A;\n        (s, Y) \\<in> ChiRel A; (S, Y) \\<in> ChiPlus A;\n        (Y, W) \\<in> ChiPlus A;\n        Y \\<noteq> S \\<and>\n        Y \\<noteq> X \\<and> (Y, X) \\<notin> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fast intro: ChiRel_ChiPlus_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus_ChiRel_trans [rule_format]:\n  \"\\<lbrakk> (S,U) \\<in> (ChiPlus A); (U,T) \\<in> (ChiRel A); S \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (cut_tac HA=A in NoCycles_HA)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     NoCycles (SAs A) (CompFun A)\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (unfold NoCycles_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     \\<forall>S\\<in>Pow (\\<Union> (States ` SAs A)).\n        S \\<noteq> {} \\<longrightarrow>\n        (\\<exists>s\\<in>S.\n            S \\<inter> \\<Union> (States ` the (CompFun A s)) = {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (erule_tac x=\"insert S (insert U ({V. (S,V) \\<in> ChiPlus A \\<and> (V,U) \\<in> ChiPlus A}))\" in ballE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA\n 2. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A})\n     \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A})\n     \\<notin> Pow (\\<Union> (States ` SAs A))\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA\n 2. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (simp add: ChiPlus_subset_States)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. U \\<notin> States x) \\<or>\n     \\<not> {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA\n 2. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (cut_tac A=A in ChiPlus_HAStates)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. U \\<notin> States x) \\<or>\n     \\<not> {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A);\n     ChiPlus A \\<subseteq> HAStates A \\<times> HAStates A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA\n 2. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply (unfold HAStates_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     (\\<forall>x\\<in>SAs A. S \\<notin> States x) \\<or>\n     (\\<forall>x\\<in>SAs A. U \\<notin> States x) \\<or>\n     \\<not> {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}\n            \\<subseteq> \\<Union> (States ` SAs A);\n     ChiPlus A\n     \\<subseteq> \\<Union> (States ` SAs A) \\<times>\n                 \\<Union> (States ` SAs A)\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA\n 2. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A;\n     insert S\n      (insert U\n        {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) \\<noteq>\n     {} \\<longrightarrow>\n     (\\<exists>s\\<in>insert S\n                      (insert U\n                        {V. (S, V) \\<in> ChiPlus A \\<and>\n                            (V, U) \\<in> ChiPlus A}).\n         insert S\n          (insert U\n            {V. (S, V) \\<in> ChiPlus A \\<and>\n                (V, U) \\<in> ChiPlus A}) \\<inter>\n         \\<Union> (States ` the (CompFun A s)) =\n         {})\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> States SA", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n     S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA; \\<not> False;\n     insert S\n      (insert U {V. (S, V) \\<in> ChiPlus A \\<and> (V, U) \\<in> ChiPlus A}) =\n     {}\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule SAStates_ChiPlus_ChiRel_NoCycle_2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (U, ?T82 s) \\<in> ChiRel A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule HAStates_SA_mem)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> ?S87 s \\<in> States SA\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {};\n        ?S87 s \\<in> HAStates A\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A S)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {S} \\<noteq>\n        {};\n        S \\<in> HAStates A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only:ChiRel_CompFun)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule SAStates_ChiPlus_ChiRel_NoCycle_1)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> ?SA109 s \\<in> SAs A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> (U, ?T109 s) \\<in> ChiRel A\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> S \\<in> States (?SA109 s)\n 4. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> ?T109 s \\<in> States (?SA109 s)\n 5. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto[3]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {}\\<rbrakk>\n       \\<Longrightarrow> T \\<in> States SA\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A U)) =\n        {};\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add:ChiRel_CompFun)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule SAStates_ChiPlus_ChiRel_NoCycle_3)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (U, ?T124 s) \\<in> ChiRel A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (S, ?s124 s) \\<in> ChiPlus A\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (?s124 s, U) \\<in> ChiPlus A\n 4. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {?s124 s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (S, ?s124 s) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (?s124 s, U) \\<in> ChiPlus A\n 3. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {?s124 s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (U, U) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {U} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "back"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (s, U) \\<in> ChiPlus A\n 2. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>(S, U) \\<in> ChiPlus A; (U, T) \\<in> ChiRel A;\n        S \\<in> States SA; SA \\<in> SAs A; T \\<in> States SA;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        \\<Union> (States ` the (CompFun A s)) =\n        {};\n        (S, s) \\<in> ChiPlus A; (s, U) \\<in> ChiPlus A;\n        insert S\n         (insert U\n           {V. (S, V) \\<in> ChiPlus A \\<and>\n               (V, U) \\<in> ChiPlus A}) \\<inter>\n        ChiRel A `` {s} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only:ChiPlus_HAStates_Left ChiRel_CompFun)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus2 [rule_format]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A; SA \\<in> SAs A  \\<rbrakk> \\<Longrightarrow> S \\<in> States SA \\<longrightarrow> T \\<notin> States SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> States SA \\<longrightarrow>\n                      T \\<notin> States SA", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> States SA \\<longrightarrow>\n                      T \\<notin> States SA", "apply (rule_tac a=\"S\" and b=\"T\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> States SA \\<longrightarrow>\n                         y \\<notin> States SA\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        S \\<in> States SA \\<longrightarrow> y \\<notin> States SA\\<rbrakk>\n       \\<Longrightarrow> S \\<in> States SA \\<longrightarrow>\n                         z \\<notin> States SA", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> ChiRel A; S \\<in> States SA; y \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        S \\<in> States SA; y \\<notin> States SA; z \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac U)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, U) \\<in> ChiRel A; S \\<in> States SA; U \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        S \\<in> States SA; y \\<notin> States SA; z \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac S=S and T=U in SAStates_ChiRel)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, U) \\<in> ChiRel A; S \\<in> States SA; U \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> U \\<in> States SA\n 2. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, U) \\<in> ChiRel A; S \\<in> States SA; U \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> SAs (?A7 U)\n 3. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, U) \\<in> ChiRel A; S \\<in> States SA; U \\<in> States SA;\n        (S, U) \\<notin> ChiRel (?A7 U)\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        S \\<in> States SA; y \\<notin> States SA; z \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; SA \\<in> SAs A;\n        (S, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        S \\<in> States SA; y \\<notin> States SA; z \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> ChiPlus A; SA \\<in> SAs A;\n        (S, y) \\<in> ChiPlus A; (y, z) \\<in> ChiRel A; S \\<in> States SA;\n        y \\<notin> States SA; z \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp only: SAStates_ChiPlus_ChiRel_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus [rule_format]:\n \"\\<lbrakk> S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> (S,T) \\<notin> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<notin> ChiPlus A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> States SA; T \\<in> States SA; SA \\<in> SAs A;\n     (S, T) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp only: SAStates_ChiPlus2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus_ChiRel_OneAncestor [rule_format]:\n  \"\\<lbrakk> T \\<in> States SA; SA \\<in> SAs A; (S,U) \\<in> ChiPlus A\\<rbrakk> \\<Longrightarrow>  S \\<noteq> T \\<longrightarrow> S \\<in> States SA \\<longrightarrow> (T,U) \\<notin> ChiRel A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      (T, U) \\<notin> ChiRel A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      (T, U) \\<notin> ChiRel A", "apply (rule_tac a=\"S\" and b=\"U\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                         S \\<in> States SA \\<longrightarrow>\n                         (T, y) \\<notin> ChiRel A\n 3. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> (ChiRel A)\\<^sup>+;\n        (y, z) \\<in> ChiRel A;\n        S \\<noteq> T \\<longrightarrow>\n        S \\<in> States SA \\<longrightarrow>\n        (T, y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                         S \\<in> States SA \\<longrightarrow>\n                         (T, z) \\<notin> ChiRel A", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> ChiRel A;\n        S \\<noteq> T; S \\<in> States SA; (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> (ChiRel A)\\<^sup>+;\n        (y, z) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, y) \\<notin> ChiRel A; (T, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add: ChiRel_OneAncestor_notmem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> (ChiRel A)\\<^sup>+;\n        (y, z) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, y) \\<notin> ChiRel A; (T, z) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac V W)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, V) \\<in> (ChiRel A)\\<^sup>+;\n        (V, W) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<notin> ChiRel A; (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiRel A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (case_tac \"V=T\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiRel A; (T, W) \\<in> ChiRel A;\n        V = T\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiRel A; (T, W) \\<in> ChiRel A;\n        V \\<noteq> T\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add: ChiRel_OneAncestor_notmem SAStates_ChiPlus)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma SAStates_ChiPlus_OneAncestor [rule_format]:\n  \"\\<lbrakk> T \\<in> States SA; SA \\<in> SAs A; (S,U) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow>  S \\<noteq> T \\<longrightarrow>  \n     S \\<in> States SA \\<longrightarrow> (T,U) \\<notin> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> ChiPlus A\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      (T, U) \\<notin> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                      S \\<in> States SA \\<longrightarrow>\n                      (T, U) \\<notin> (ChiRel A)\\<^sup>+", "apply (rule_tac a=\"S\" and b=\"U\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n     (S, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> (S, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                         S \\<in> States SA \\<longrightarrow>\n                         (T, y) \\<notin> (ChiRel A)\\<^sup>+\n 3. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> (ChiRel A)\\<^sup>+;\n        (y, z) \\<in> ChiRel A;\n        S \\<noteq> T \\<longrightarrow>\n        S \\<in> States SA \\<longrightarrow>\n        (T, y) \\<notin> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> S \\<noteq> T \\<longrightarrow>\n                         S \\<in> States SA \\<longrightarrow>\n                         (T, z) \\<notin> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> ChiRel A;\n        S \\<noteq> T; S \\<in> States SA;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A;\n        (S, U) \\<in> (ChiRel A)\\<^sup>+; (S, y) \\<in> (ChiRel A)\\<^sup>+;\n        (y, z) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, y) \\<notin> (ChiRel A)\\<^sup>+;\n        (T, z) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> False", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, y) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, y) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, y) \\<in> ChiPlus A; (y, z) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, y) \\<notin> ChiPlus A;\n        (T, z) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac V)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, y) \\<in> ChiPlus A; (y, z) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, y) \\<notin> ChiPlus A;\n        (T, z) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac T=S and S=T and U=V in SAStates_ChiPlus_ChiRel_OneAncestor)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> SAs (?A10 V)\n 2. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (T, V) \\<in> ChiPlus (?A10 V)\n 3. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> T \\<noteq> S\n 4. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> States SA\n 5. \\<And>V.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiRel A; S \\<noteq> T; S \\<in> States SA;\n        (T, V) \\<in> ChiPlus A; (S, V) \\<notin> ChiRel (?A10 V)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, y) \\<in> ChiPlus A; (y, z) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, y) \\<notin> ChiPlus A;\n        (T, z) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, y) \\<in> ChiPlus A; (y, z) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, y) \\<notin> ChiPlus A;\n        (T, z) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac V W)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac S=T and T=W in ChiPlus_ChiRel_Ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A\\<rbrakk>\n       \\<Longrightarrow> (T, W) \\<notin> ChiRel A\n 2. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A;\n        \\<exists>U.\n           (T, U) \\<in> ChiPlus A \\<and> (U, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V W Ua.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, Ua) \\<in> ChiPlus A;\n        (Ua, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (frule_tac T=T and S=S and U=W in SAStates_ChiPlus_ChiRel_OneAncestor)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> SA \\<in> SAs (?A18 V W)\n 2. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (S, W) \\<in> ChiPlus (?A18 V W)\n 3. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<noteq> T\n 4. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> S \\<in> States SA\n 5. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A; (T, W) \\<in> ChiRel A;\n        (T, W) \\<notin> ChiRel (?A18 V W)\\<rbrakk>\n       \\<Longrightarrow> False\n 6. \\<And>V W Ua.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, Ua) \\<in> ChiPlus A;\n        (Ua, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (S, W) \\<in> ChiPlus A\n 2. \\<And>V W Ua.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, Ua) \\<in> ChiPlus A;\n        (Ua, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rule ChiRel_ChiPlus_trans)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (S, ?S21 V W) \\<in> ChiPlus A\n 2. \\<And>V W.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (?S21 V W, W) \\<in> ChiRel A\n 3. \\<And>V W Ua.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, Ua) \\<in> ChiPlus A;\n        (Ua, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W Ua.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, Ua) \\<in> ChiPlus A;\n        (Ua, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (rename_tac X)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W X.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, X) \\<in> ChiPlus A;\n        (X, W) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> False", "apply (case_tac \"V=X\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W X.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, X) \\<in> ChiPlus A;\n        (X, W) \\<in> ChiRel A; V = X\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>V W X.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, X) \\<in> ChiPlus A;\n        (X, W) \\<in> ChiRel A; V \\<noteq> X\\<rbrakk>\n       \\<Longrightarrow> False", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W X.\n       \\<lbrakk>T \\<in> States SA; SA \\<in> SAs A; (S, U) \\<in> ChiPlus A;\n        (S, V) \\<in> ChiPlus A; (V, W) \\<in> ChiRel A; S \\<noteq> T;\n        S \\<in> States SA; (T, V) \\<notin> ChiPlus A;\n        (T, W) \\<in> ChiPlus A; (T, X) \\<in> ChiPlus A;\n        (X, W) \\<in> ChiRel A; V \\<noteq> X\\<rbrakk>\n       \\<Longrightarrow> False", "apply (simp add: ChiRel_OneAncestor_notmem)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_ChiPlus_OneAncestor [rule_format]:\n  \"\\<lbrakk> (T,U) \\<in> ChiPlus A \\<rbrakk> \\<Longrightarrow> T \\<noteq> S \\<longrightarrow> (S,U) \\<in> ChiRel A \\<longrightarrow> (T,S) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, U) \\<in> ChiPlus A \\<Longrightarrow>\n    T \\<noteq> S \\<longrightarrow>\n    (S, U) \\<in> ChiRel A \\<longrightarrow> (T, S) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    T \\<noteq> S \\<longrightarrow>\n    (S, U) \\<in> ChiRel A \\<longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (rule_tac a=\"T\" and b=\"U\" and r=\"(ChiRel A)\" in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (T, U) \\<in> (ChiRel A)\\<^sup>+ \\<Longrightarrow>\n    (T, U) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> T \\<noteq> S \\<longrightarrow>\n                         (S, y) \\<in> ChiRel A \\<longrightarrow>\n                         (T, S) \\<in> (ChiRel A)\\<^sup>+\n 3. \\<And>y z.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        T \\<noteq> S \\<longrightarrow>\n        (S, y) \\<in> ChiRel A \\<longrightarrow>\n        (T, S) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> T \\<noteq> S \\<longrightarrow>\n                         (S, z) \\<in> ChiRel A \\<longrightarrow>\n                         (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+; (T, y) \\<in> ChiRel A;\n        T \\<noteq> S; (S, y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y z.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        T \\<noteq> S; (S, z) \\<in> ChiRel A;\n        (S, y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (fast intro:ChiRel_OneAncestor)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, y) \\<in> (ChiRel A)\\<^sup>+; (y, z) \\<in> ChiRel A;\n        T \\<noteq> S; (S, z) \\<in> ChiRel A;\n        (S, y) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (rename_tac V W)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        T \\<noteq> S; (S, W) \\<in> ChiRel A;\n        (S, V) \\<notin> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (case_tac \"S=V\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>V W.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        T \\<noteq> S; (S, W) \\<in> ChiRel A; (S, V) \\<notin> ChiRel A;\n        S = V\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>V W.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        T \\<noteq> S; (S, W) \\<in> ChiRel A; (S, V) \\<notin> ChiRel A;\n        S \\<noteq> V\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>V W.\n       \\<lbrakk>(T, U) \\<in> (ChiRel A)\\<^sup>+;\n        (T, V) \\<in> (ChiRel A)\\<^sup>+; (V, W) \\<in> ChiRel A;\n        T \\<noteq> S; (S, W) \\<in> ChiRel A; (S, V) \\<notin> ChiRel A;\n        S \\<noteq> V\\<rbrakk>\n       \\<Longrightarrow> (T, S) \\<in> (ChiRel A)\\<^sup>+", "apply (fast intro:ChiRel_OneAncestor)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiPlus_SA_OneAncestor [rule_format]: \n   \"\\<lbrakk> (S,T) \\<in> ChiPlus A; \n      U \\<in> States SA; SA \\<in> SAs A \\<rbrakk> \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n      (S,U) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> ChiPlus A; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      (S, U) \\<in> ChiPlus A", "apply (unfold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      (S, U) \\<in> (ChiRel A)\\<^sup>+", "apply (rule_tac a=\"S\" and b=\"T\" and r=\"(ChiRel A)\" in converse_trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n     SA \\<in> SAs A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                         (y, U) \\<in> (ChiRel A)\\<^sup>+\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, z) \\<in> ChiRel A;\n        (z, T) \\<in> (ChiRel A)\\<^sup>+;\n        T \\<in> States SA \\<longrightarrow>\n        (z, U) \\<in> (ChiRel A)\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                         (y, U) \\<in> (ChiRel A)\\<^sup>+", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A; T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> (y, U) \\<in> (ChiRel A)\\<^sup>+", "apply (frule ChiRel_SA_OneAncestor)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A; T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> T \\<in> States (?SA7 y)\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A; T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> ?U7 y \\<in> States (?SA7 y)\n 3. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A; T \\<in> States SA\\<rbrakk>\n       \\<Longrightarrow> ?SA7 y \\<in> SAs A\n 4. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> (ChiRel A)\\<^sup>+; U \\<in> States SA;\n        SA \\<in> SAs A; (y, T) \\<in> ChiRel A; T \\<in> States SA;\n        (y, ?U7 y) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (y, U) \\<in> (ChiRel A)\\<^sup>+", "apply fast+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>ChiStar\\<close>\\<close>"], ["", "lemma ChiPlus_ChiStar [simp]:\n  \"\\<lbrakk> (S,T) \\<in> ChiPlus A  \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiStar A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> ChiPlus A \\<Longrightarrow> (S, T) \\<in> ChiStar A", "by (unfold ChiPlus_def ChiStar_def, auto)"], ["", "lemma HARootState_Range_ChiStar [simp]:\n  \"\\<lbrakk> x \\<noteq> S; S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> (x,S) \\<notin> (ChiStar A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> S; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> (x, S) \\<notin> ChiStar A", "apply (unfold ChiStar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> S; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> (x, S) \\<notin> (ChiRel A)\\<^sup>*", "apply (subst rtrancl_eq_or_trancl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> S; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<not> (x = S \\<or>\n                              x \\<noteq> S \\<and>\n                              (x, S) \\<in> (ChiRel A)\\<^sup>+)", "apply (fold ChiPlus_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<noteq> S; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<not> (x = S \\<or>\n                              x \\<noteq> S \\<and> (x, S) \\<in> ChiPlus A)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiStar_Self [simp]:\n \"(S,S) \\<in> ChiStar A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, S) \\<in> ChiStar A", "apply (unfold ChiStar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, S) \\<in> (ChiRel A)\\<^sup>*", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiStar_Image [simp]:  \n  \"S \\<in> M \\<Longrightarrow> S \\<in> (ChiStar A `` M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> M \\<Longrightarrow> S \\<in> ChiStar A `` M", "apply (unfold Image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> M \\<Longrightarrow>\n    S \\<in> {y. \\<exists>x\\<in>M. (x, y) \\<in> ChiStar A}", "apply (auto intro: ChiStar_Self)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiStar_ChiPlus_noteq: \n  \"\\<lbrakk> S \\<noteq> T; (S,T) \\<in> ChiStar A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiPlus A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; (S, T) \\<in> ChiStar A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> ChiPlus A", "apply (unfold ChiPlus_def ChiStar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<noteq> T; (S, T) \\<in> (ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>+", "apply (simp add: rtrancl_eq_or_trancl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ChiRel_ChiStar_trans:\n  \"\\<lbrakk> (S,U) \\<in> ChiStar A; (U,T) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> (S,T) \\<in> ChiStar A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> ChiStar A; (U, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> ChiStar A", "apply (unfold ChiStar_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(S, U) \\<in> (ChiRel A)\\<^sup>*; (U, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> (ChiRel A)\\<^sup>*", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>InitConf\\<close>\\<close>"], ["", "lemma InitConf_HAStates [simp]:\n  \"InitConf A \\<subseteq> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. InitConf A \\<subseteq> HAStates A", "apply (unfold InitConf_def HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitStates A \\<times> HAInitStates A \\<inter> ChiRel A)\\<^sup>* ``\n    {HAInitState A}\n    \\<subseteq> \\<Union> (States ` SAs A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       \\<exists>xa\\<in>SAs A. x \\<in> States xa", "apply (rule rtrancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       (?a8 x, \\<exists>xa\\<in>SAs A. x \\<in> States xa)\n       \\<in> (?r8 x)\\<^sup>*\n 2. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       ?a8 x\n 3. \\<And>x y z.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (?a8 x, y) \\<in> (?r8 x)\\<^sup>*; (y, z) \\<in> ?r8 x; y\\<rbrakk>\n       \\<Longrightarrow> z", "back"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       (?a8 x, x) \\<in> (?r8 x)\\<^sup>*\n 2. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       \\<exists>xa\\<in>SAs A. ?a8 x \\<in> States xa\n 3. \\<And>x y z.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (?a8 x, y) \\<in> (?r8 x)\\<^sup>*; (y, z) \\<in> ?r8 x;\n        \\<exists>x\\<in>SAs A. y \\<in> States x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. z \\<in> States x", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       \\<exists>x\\<in>SAs A. HAInitState A \\<in> States x\n 2. \\<And>x y z xa.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (y, z) \\<in> ChiRel A; xa \\<in> SAs A; y \\<in> States xa;\n        y \\<in> HAInitStates A; z \\<in> HAInitStates A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. z \\<in> States x", "apply (rule_tac x=\"HARoot A\" in bexI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       HAInitState A \\<in> States (HARoot A)\n 2. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       HARoot A \\<in> SAs A\n 3. \\<And>x y z xa.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (y, z) \\<in> ChiRel A; xa \\<in> SAs A; y \\<in> States xa;\n        y \\<in> HAInitStates A; z \\<in> HAInitStates A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. z \\<in> States x", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (y, z) \\<in> ChiRel A; xa \\<in> SAs A; y \\<in> States xa;\n        y \\<in> HAInitStates A; z \\<in> HAInitStates A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. z \\<in> States x", "apply (unfold HAStates_def ChiRel_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z xa.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       {(S, S').\n                        S \\<in> \\<Union> (States ` SAs A) \\<and>\n                        S' \\<in> \\<Union> (States ` SAs A) \\<and>\n                        S' \\<in> Chi A S})\\<^sup>*;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               {(S, S').\n                S \\<in> \\<Union> (States ` SAs A) \\<and>\n                S' \\<in> \\<Union> (States ` SAs A) \\<and>\n                S' \\<in> Chi A S})\\<^sup>*;\n        (y, z)\n        \\<in> {(S, S').\n               S \\<in> \\<Union> (States ` SAs A) \\<and>\n               S' \\<in> \\<Union> (States ` SAs A) \\<and> S' \\<in> Chi A S};\n        xa \\<in> SAs A; y \\<in> States xa; y \\<in> HAInitStates A;\n        z \\<in> HAInitStates A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>SAs A. z \\<in> States x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_HAStates2 [simp]:\n \"S \\<in> InitConf A \\<Longrightarrow> S \\<in> HAStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> InitConf A \\<Longrightarrow> S \\<in> HAStates A", "apply (cut_tac A=A in InitConf_HAStates)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> InitConf A; InitConf A \\<subseteq> HAStates A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_InitConf [simp]:\n  \"HAInitState A \\<in> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HAInitState A \\<in> InitConf A", "by (unfold HAInitState_def InitConf_def, auto)"], ["", "lemma InitConf_HAInitState_HARoot:\n \"[| S \\<in> InitConf A; S \\<noteq> HAInitState A |] ==> S \\<notin> States (HARoot A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> InitConf A; S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States (HARoot A)", "apply (unfold InitConf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                      ChiRel A)\\<^sup>* ``\n                     {HAInitState A};\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> S \\<notin> States (HARoot A)", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P1 \\<longrightarrow> False\n 2. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P1", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P1\n 2. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P1 \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> HAInitState A \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P6 \\<longrightarrow>\n                      S \\<noteq> HAInitState A \\<longrightarrow> False\n 2. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P6", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P6\n 2. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?P6 \\<longrightarrow>\n                      S \\<noteq> HAInitState A \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      S \\<noteq> HAInitState A \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> S \\<noteq> HAInitState A \\<longrightarrow>\n                      S \\<noteq> HAInitState A \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> S \\<in> States (HARoot A) \\<longrightarrow>\n                      S \\<noteq> HAInitState A \\<longrightarrow> False", "apply (rule_tac b=S in rtrancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> (?a11, S) \\<in> ?r11\\<^sup>*\n 2. \\<lbrakk>(HAInitState A, S)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     S \\<noteq> HAInitState A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> ?a11 \\<in> States (HARoot A) \\<longrightarrow>\n                      ?a11 \\<noteq> HAInitState A \\<longrightarrow> False\n 3. \\<And>y z.\n       \\<lbrakk>(HAInitState A, S)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        S \\<noteq> HAInitState A; S \\<in> States (HARoot A);\n        (?a11, y) \\<in> ?r11\\<^sup>*; (y, z) \\<in> ?r11;\n        y \\<in> States (HARoot A) \\<longrightarrow>\n        y \\<noteq> HAInitState A \\<longrightarrow> False\\<rbrakk>\n       \\<Longrightarrow> z \\<in> States (HARoot A) \\<longrightarrow>\n                         z \\<noteq> HAInitState A \\<longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y z.\n       \\<lbrakk>(HAInitState A, S)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        S \\<noteq> HAInitState A; S \\<in> States (HARoot A);\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (y, z) \\<in> ChiRel A; y \\<in> HAInitStates A;\n        z \\<in> HAInitStates A; z \\<in> States (HARoot A);\n        y \\<notin> States (HARoot A)\\<rbrakk>\n       \\<Longrightarrow> z = HAInitState A\n 2. \\<And>z.\n       \\<lbrakk>(HAInitState A, S)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        S \\<noteq> HAInitState A; S \\<in> States (HARoot A);\n        (HAInitState A, z) \\<in> ChiRel A; z \\<in> HAInitStates A;\n        z \\<in> States (HARoot A)\\<rbrakk>\n       \\<Longrightarrow> z = HAInitState A", "apply (simp add: ChiRel_HARoot)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_HARoot_HAInitState [simp]:\n \"\\<lbrakk> S \\<in> InitConf A; S \\<in> States (HARoot A) \\<rbrakk> \\<Longrightarrow> S = HAInitState A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> InitConf A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> S = HAInitState A", "apply (subst not_not [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> InitConf A; S \\<in> States (HARoot A)\\<rbrakk>\n    \\<Longrightarrow> \\<not> S \\<noteq> HAInitState A", "apply (rule notI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> InitConf A; S \\<in> States (HARoot A);\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:InitConf_HAInitState_HARoot)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HAInitState_CompFun_InitConf [simp]:\n \"[|SA \\<in> the (CompFun A  (HAInitState A)) |] ==> (InitState SA) \\<in> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    InitState SA \\<in> InitConf A", "apply (unfold InitConf_def HAStates_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    InitState SA\n    \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n           ChiRel A)\\<^sup>* ``\n          {HAInitState A}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    (HAInitState A, InitState SA)\n    \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter> ChiRel A)\\<^sup>*", "apply (rule rtrancl_Int)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    (HAInitState A, InitState SA)\n    \\<in> HAInitStates A \\<times> HAInitStates A\n 2. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    (HAInitState A, InitState SA) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    (HAInitState A, InitState SA) \\<in> ChiRel A", "apply (cut_tac A=A and S=\"HAInitState A\" in HAStates_CompFun_States_ChiRel)"], ["proof (prove)\ngoal (2 subgoals):\n 1. SA \\<in> the (CompFun A (HAInitState A)) \\<Longrightarrow>\n    HAInitState A \\<in> HAStates A\n 2. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     \\<Union> (States ` the (CompFun A (HAInitState A))) =\n     ChiRel A `` {HAInitState A}\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, InitState SA) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     \\<Union> (States ` the (CompFun A (HAInitState A))) =\n     ChiRel A `` {HAInitState A}\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, InitState SA) \\<in> ChiRel A", "apply (rule Image_singleton_iff [THEN subst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     \\<Union> (States ` the (CompFun A (HAInitState A))) =\n     ChiRel A `` {HAInitState A}\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {HAInitState A}", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> (States ` the (CompFun A (HAInitState A))) =\n             ChiRel A `` {HAInitState A};\n     SA \\<in> the (CompFun A (HAInitState A))\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {HAInitState A}", "apply (drule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     ChiRel A `` {HAInitState A} =\n     \\<Union> (States ` the (CompFun A (HAInitState A)))\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {HAInitState A}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     ChiRel A `` {HAInitState A} =\n     \\<Union> (States ` the (CompFun A (HAInitState A)))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>the (CompFun A (HAInitState A)).\n                         InitState SA \\<in> States x", "apply (rule_tac x=SA in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     ChiRel A `` {HAInitState A} =\n     \\<Union> (States ` the (CompFun A (HAInitState A)))\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> States SA\n 2. \\<lbrakk>SA \\<in> the (CompFun A (HAInitState A));\n     ChiRel A `` {HAInitState A} =\n     \\<Union> (States ` the (CompFun A (HAInitState A)))\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A (HAInitState A))", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitState_CompFun_InitConf:\n \"[| S \\<in> HAStates A; SA \\<in> the (CompFun A S); S \\<in> InitConf A |] ==> (InitState SA) \\<in> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     S \\<in> InitConf A\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> InitConf A", "apply (unfold InitConf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     S \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* ``\n             {HAInitState A}\\<rbrakk>\n    \\<Longrightarrow> InitState SA\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* ``\n                            {HAInitState A}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, InitState SA)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>*", "apply (rule_tac b=S in rtrancl_into_rtrancl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>*\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA)\n                      \\<in> HAInitStates A \\<times> HAInitStates A \\<inter>\n                            ChiRel A", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA)\n                      \\<in> HAInitStates A \\<times> HAInitStates A \\<inter>\n                            ChiRel A", "apply (frule rtrancl_Int1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA)\n                      \\<in> HAInitStates A \\<times> HAInitStates A \\<inter>\n                            ChiRel A", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAInitStates A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply (case_tac \"S = HAInitState A\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     S = HAInitState A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAInitStates A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAInitStates A\n 3. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAInitStates A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply (rule rtrancl_mem_Sigma)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> ?a7 \\<noteq> S\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     S \\<noteq> HAInitState A\\<rbrakk>\n    \\<Longrightarrow> (?a7, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\n 3. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply (cut_tac A=A and S=S in HAStates_CompFun_States_ChiRel)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}\\<rbrakk>\n    \\<Longrightarrow> (S, InitState SA) \\<in> ChiRel A", "apply (rule Image_singleton_iff [THEN subst])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     \\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S}\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {S}", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Union> (States ` the (CompFun A S)) = ChiRel A `` {S};\n     S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {S}", "apply (drule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     ChiRel A `` {S} = \\<Union> (States ` the (CompFun A S))\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> ChiRel A `` {S}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     ChiRel A `` {S} = \\<Union> (States ` the (CompFun A S))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>x\\<in>the (CompFun A S).\n                         InitState SA \\<in> States x", "apply (rule_tac x=SA in bexI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     ChiRel A `` {S} = \\<Union> (States ` the (CompFun A S))\\<rbrakk>\n    \\<Longrightarrow> InitState SA \\<in> States SA\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n     ChiRel A `` {S} = \\<Union> (States ` the (CompFun A S))\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_HAInitStates:\n  \"InitConf A \\<subseteq> HAInitStates A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. InitConf A \\<subseteq> HAInitStates A", "apply (unfold InitConf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (HAInitStates A \\<times> HAInitStates A \\<inter> ChiRel A)\\<^sup>* ``\n    {HAInitState A}\n    \\<subseteq> HAInitStates A", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                ChiRel A)\\<^sup>* ``\n               {HAInitState A} \\<Longrightarrow>\n       x \\<in> HAInitStates A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (HAInitState A, x)\n       \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* \\<Longrightarrow>\n       x \\<in> HAInitStates A", "apply (frule rtrancl_Int1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAInitStates A", "apply (case_tac \"x = HAInitState A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n        x = HAInitState A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAInitStates A\n 2. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n        x \\<noteq> HAInitState A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAInitStates A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n        x \\<noteq> HAInitState A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> HAInitStates A", "apply (rule rtrancl_mem_Sigma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n        x \\<noteq> HAInitState A\\<rbrakk>\n       \\<Longrightarrow> ?a5 x \\<noteq> x\n 2. \\<And>x.\n       \\<lbrakk>(HAInitState A, x)\n                \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                       ChiRel A)\\<^sup>*;\n        (HAInitState A, x)\n        \\<in> (HAInitStates A \\<times> HAInitStates A)\\<^sup>*;\n        x \\<noteq> HAInitState A\\<rbrakk>\n       \\<Longrightarrow> (?a5 x, x)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A)\\<^sup>*", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitState_notmem_InitConf:\n \"[| SA \\<in> the (CompFun A S); S \\<in> InitConf A; T \\<in> States SA;\n     T \\<noteq> InitState SA |] ==>  T \\<notin> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> InitConf A", "apply (frule InitConf_HAStates2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> InitConf A", "apply (unfold InitConf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     S \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A)\\<^sup>* ``\n             {HAInitState A};\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A\\<rbrakk>\n    \\<Longrightarrow> T \\<notin> (HAInitStates A \\<times>\n                                  HAInitStates A \\<inter>\n                                  ChiRel A)\\<^sup>* ``\n                                 {HAInitState A}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P3 \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P3", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P3\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P3 \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P8 \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P8", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P8\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P8 \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P13 \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P13", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P13\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P13 \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P18 \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P18", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P18\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P18 \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P23 \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P23", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P23\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P23 \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P28 \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P28", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P28\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> ?P28 \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> SA \\<in> the (CompFun A S) \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States SA \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> T \\<noteq> InitState SA \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, T)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      T \\<noteq> InitState SA \\<longrightarrow>\n                      T \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply (rule_tac b=T in rtrancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (?a33, T) \\<in> ?r33\\<^sup>*\n 2. \\<lbrakk>SA \\<in> the (CompFun A S);\n     (HAInitState A, S)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*;\n     T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n     (HAInitState A, T)\n     \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n            ChiRel A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, ?a33)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      S \\<in> HAStates A \\<longrightarrow>\n                      ?a33 \\<noteq> InitState SA \\<longrightarrow>\n                      ?a33 \\<in> States SA \\<longrightarrow>\n                      (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>* \\<longrightarrow>\n                      SA \\<in> the (CompFun A S) \\<longrightarrow> False\n 3. \\<And>y z.\n       \\<lbrakk>SA \\<in> the (CompFun A S);\n        (HAInitState A, S)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        T \\<in> States SA; T \\<noteq> InitState SA; S \\<in> HAStates A;\n        (HAInitState A, T)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (?a33, y) \\<in> ?r33\\<^sup>*; (y, z) \\<in> ?r33;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>* \\<longrightarrow>\n        S \\<in> HAStates A \\<longrightarrow>\n        y \\<noteq> InitState SA \\<longrightarrow>\n        y \\<in> States SA \\<longrightarrow>\n        (HAInitState A, S)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>* \\<longrightarrow>\n        SA \\<in> the (CompFun A S) \\<longrightarrow> False\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, z)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>* \\<longrightarrow>\n                         S \\<in> HAStates A \\<longrightarrow>\n                         z \\<noteq> InitState SA \\<longrightarrow>\n                         z \\<in> States SA \\<longrightarrow>\n                         (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>* \\<longrightarrow>\n                         SA \\<in> the (CompFun A S) \\<longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_CompFun_InitState [simp]:\n \"\\<lbrakk> SA \\<in> the (CompFun A S); S \\<in> InitConf A; T \\<in> States SA;\n    T \\<in> InitConf A \\<rbrakk> \\<Longrightarrow> T = InitState SA\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A\\<rbrakk>\n    \\<Longrightarrow> T = InitState SA", "apply (subst not_not [THEN sym])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A\\<rbrakk>\n    \\<Longrightarrow> \\<not> T \\<noteq> InitState SA", "apply (rule notI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> False", "apply (frule InitState_notmem_InitConf)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> S \\<in> InitConf A\n 2. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> ?T2 \\<in> States SA\n 3. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A; T \\<noteq> InitState SA\\<rbrakk>\n    \\<Longrightarrow> ?T2 \\<noteq> InitState SA\n 4. \\<lbrakk>SA \\<in> the (CompFun A S); S \\<in> InitConf A;\n     T \\<in> States SA; T \\<in> InitConf A; T \\<noteq> InitState SA;\n     ?T2 \\<notin> InitConf A\\<rbrakk>\n    \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_ChiRel_Ancestor:\n  \"\\<lbrakk> T \\<in> InitConf A; (S,T) \\<in> ChiRel A \\<rbrakk> \\<Longrightarrow> S \\<in> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> InitConf A; (S, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> InitConf A", "apply (unfold InitConf_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>T \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                      ChiRel A)\\<^sup>* ``\n                     {HAInitState A};\n     (S, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> S \\<in> (HAInitStates A \\<times>\n                               HAInitStates A \\<inter>\n                               ChiRel A)\\<^sup>* ``\n                              {HAInitState A}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(HAInitState A, T)\n             \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                    ChiRel A)\\<^sup>*;\n     (S, T) \\<in> ChiRel A\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>*", "apply (erule rtranclE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>(S, T) \\<in> ChiRel A; HAInitState A = T\\<rbrakk>\n    \\<Longrightarrow> (HAInitState A, S)\n                      \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n                             ChiRel A)\\<^sup>*\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        (y, T)\n        \\<in> HAInitStates A \\<times> HAInitStates A \\<inter>\n              ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, y)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        y \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (y, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply (rename_tac U)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, U)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        U \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply (cut_tac A=A  in HAInitState_notmem_Range_ChiRel)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, U)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        U \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (U, T) \\<in> ChiRel A;\n        HAInitState A \\<notin> Range (ChiRel A)\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, U)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        U \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (U, T) \\<in> ChiRel A\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply (case_tac \"U = S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, U)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        U \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (U, T) \\<in> ChiRel A; U = S\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*\n 2. \\<And>U.\n       \\<lbrakk>(S, T) \\<in> ChiRel A;\n        (HAInitState A, U)\n        \\<in> (HAInitStates A \\<times> HAInitStates A \\<inter>\n               ChiRel A)\\<^sup>*;\n        U \\<in> HAInitStates A; T \\<in> HAInitStates A;\n        (U, T) \\<in> ChiRel A; U \\<noteq> S\\<rbrakk>\n       \\<Longrightarrow> (HAInitState A, S)\n                         \\<in> (HAInitStates A \\<times>\n                                HAInitStates A \\<inter>\n                                ChiRel A)\\<^sup>*", "apply (auto simp add: ChiRel_OneAncestor)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma InitConf_CompFun_Ancestor:\n  \"\\<lbrakk> S \\<in> HAStates A; SA \\<in> the (CompFun A S); T \\<in> InitConf A; T \\<in> States SA \\<rbrakk>\n    \\<Longrightarrow>  S \\<in> InitConf A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S \\<in> InitConf A", "apply (rule InitConf_ChiRel_Ancestor)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> ?T \\<in> InitConf A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> (S, ?T) \\<in> ChiRel A", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> (S, T) \\<in> ChiRel A", "apply (rule CompFun_ChiRel)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> S \\<in> HAStates A\n 2. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> ?SA3 \\<in> the (CompFun A S)\n 3. \\<lbrakk>S \\<in> HAStates A; SA \\<in> the (CompFun A S);\n     T \\<in> InitConf A; T \\<in> States SA\\<rbrakk>\n    \\<Longrightarrow> T \\<in> States ?SA3", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>StepConf\\<close>\\<close>"], ["", "lemma StepConf_EmptySet [simp]:\n  \"StepConf A C {} = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. StepConf A C {} = C", "by (unfold StepConf_def, auto)"], ["", "end"]]}