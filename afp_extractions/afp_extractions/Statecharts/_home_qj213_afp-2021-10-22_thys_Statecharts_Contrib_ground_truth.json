{"file_name": "/home/qj213/afp-2021-10-22/thys/Statecharts/Contrib.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Statecharts", "problem_names": ["lemma map_some_list [simp]:\n   \"map the (map Some L) = L\"", "lemma dom_ran_the:\n  \"\\<lbrakk> ran G = {y}; x \\<in> (dom G) \\<rbrakk> \\<Longrightarrow> (the (G x)) = y\"", "lemma dom_None:\n  \"(S \\<notin> dom F) \\<Longrightarrow> (F S = None)\"", "lemma ran_dom_the:\n  \"\\<lbrakk> y \\<notin> Union (ran G); x \\<in> dom G \\<rbrakk> \\<Longrightarrow> y \\<notin> the (G x)\"", "lemma dom_map_upd: \"dom(m(a|->b)) = insert a (dom m)\"", "lemma rtrancl_Int:\n \"\\<lbrakk> (a,b) \\<in> A; (a,b) \\<in> B \\<rbrakk> \\<Longrightarrow> (a,b) \\<in> (A \\<inter>  B)^*\"", "lemma rtrancl_mem_Sigma:\n \"\\<lbrakk> a \\<noteq> b; (a, b) \\<in> (A \\<times> A)^* \\<rbrakk> \\<Longrightarrow> b \\<in> A\"", "lemma help_rtrancl_Range:\n \"\\<lbrakk> a \\<noteq> b; (a,b) \\<in> R ^* \\<rbrakk> \\<Longrightarrow> b \\<in> Range R\"", "lemma rtrancl_Int_help:\n  \"(a,b) \\<in> (A \\<inter> B) ^*  ==> (a,b) \\<in> A^* \\<and> (a,b) \\<in> B^*\"", "lemmas rtrancl_Int1 = rtrancl_Int_help [THEN conjunct1]", "lemmas rtrancl_Int2 = rtrancl_Int_help [THEN conjunct2]", "lemma tranclD3 [rule_format]:\n  \"(S,T) \\<in> R^+ \\<Longrightarrow> (S,T) \\<notin> R \\<longrightarrow> (\\<exists> U. (S,U) \\<in> R \\<and> (U,T) \\<in> R^+)\"", "lemma tranclD4 [rule_format]:\n  \"(S,T) \\<in> R^+ \\<Longrightarrow> (S,T) \\<notin> R \\<longrightarrow> (\\<exists> U. (S,U) \\<in> R^+ \\<and> (U,T) \\<in> R)\"", "lemma trancl_collect [rule_format]:\n  \"\\<lbrakk> (x,y) \\<in> R^*; S \\<notin> Domain R \\<rbrakk> \\<Longrightarrow> y \\<noteq> S \\<longrightarrow> (x,y) \\<in> {p. fst p \\<noteq> S \\<and> snd p \\<noteq> S \\<and> p \\<in> R}^*\"", "lemma trancl_subseteq:\n  \"\\<lbrakk> R \\<subseteq> Q; S \\<in> R^* \\<rbrakk> \\<Longrightarrow> S \\<in> Q^*\"", "lemma trancl_Int_subset:\n   \"(R \\<inter> (A \\<times> A))\\<^sup>+ \\<subseteq> R\\<^sup>+ \\<inter> (A \\<times> A)\"", "lemma trancl_Int_mem:\n   \"(S,T) \\<in> (R \\<inter> (A \\<times> A))\\<^sup>+ \\<Longrightarrow> (S,T)  \\<in> R\\<^sup>+ \\<inter> A \\<times> A\"", "lemma Int_expand: \n  \"{(S,S'). P S S' \\<and>  Q S S'} = ({(S,S'). P S S'} \\<inter> {(S,S'). Q S S'})\"", "lemma finite_conj:  \n \"finite ({(S,S'). P S S'}::(('a*'b)set)) \\<longrightarrow>  \n     finite {(S,S'). P (S::'a) (S'::'b) \\<and> Q (S::'a) (S'::'b)}\"", "lemma finite_conj2:\n  \"\\<lbrakk> finite A; finite B \\<rbrakk> \\<Longrightarrow> finite ({(S,S'). S: A \\<and> S' : B})\"", "lemma dom_override_the:\n  \"(x \\<in> (dom G2)) \\<longrightarrow> ((G1 ++ G2) x) = (G2 x)\"", "lemma dom_override_the2 [simp]:\n  \"\\<lbrakk> dom G1 \\<inter> dom G2 = {}; x \\<in> (dom G1) \\<rbrakk> \\<Longrightarrow> ((G1 ++ G2) x) = (G1 x)\"", "lemma dom_override_the3 [simp]:\n  \"\\<lbrakk> x \\<notin> dom G2; x \\<in> dom G1 \\<rbrakk> \\<Longrightarrow> ((G1 ++ G2) x) = (G1 x)\"", "lemma Union_ran_override [simp]:\n  \"S \\<in> dom G \\<Longrightarrow> \\<Union> (ran (G ++ Map.empty(S \\<mapsto> insert SA (the(G S))))) = \n   (insert SA (Union (ran G)))\"", "lemma Union_ran_override2 [simp]:\n  \"S \\<in> dom G \\<Longrightarrow> \\<Union> (ran (G(S \\<mapsto> insert SA (the(G S))))) = (insert SA (Union (ran G)))\"", "lemma ran_override [simp]:\n  \"(dom A \\<inter> dom B) = {} \\<Longrightarrow> ran (A ++ B) = (ran A) \\<union> (ran B)\"", "lemma chg_map_new [simp]:\n  \"m a = None \\<Longrightarrow> chg_map f a m = m\"", "lemma chg_map_upd [simp]:\n  \"m a = Some b \\<Longrightarrow> chg_map f a m = m(a|->f b)\"", "lemma ran_override_chg_map:\n  \"A \\<in> dom G \\<Longrightarrow> ran (G ++ Map.empty(A|->B)) = (ran (chg_map (\\<lambda> x. B) A G))\"", "lemma Part_UNIV_Inl_comp: \n \"((Part UNIV (Inl o f)) = (Part UNIV (Inl o g))) = ((Part UNIV f) = (Part UNIV g))\"", "lemma Part_eqI [intro]: \"\\<lbrakk> a \\<in> A; a=h(b) \\<rbrakk> \\<Longrightarrow> a \\<in> Part A h\"", "lemmas PartI = Part_eqI [OF _ refl]", "lemma PartE [elim!]: \"\\<lbrakk> a \\<in> Part A h;  !!z. \\<lbrakk> a \\<in> A;  a=h(z) \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma Part_subset: \"Part A h \\<subseteq> A\"", "lemma Part_mono: \"A \\<subseteq> B \\<Longrightarrow> Part A h \\<subseteq> Part B h\"", "lemmas basic_monos = basic_monos Part_mono", "lemma PartD1: \"a \\<in> Part A h \\<Longrightarrow> a \\<in> A\"", "lemma Part_id: \"Part A (\\<lambda> x. x) = A\"", "lemma Part_Int: \"Part (A \\<inter> B) h = (Part A h) \\<inter> (Part B h)\"", "lemma Part_Collect: \"Part (A \\<inter> {x. P x}) h = (Part A h) \\<inter> {x. P x}\"", "lemma subset_lemma:\n  \"\\<lbrakk> A \\<inter> B = {}; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> A = {}\"", "lemma subset_lemma2:\n \"\\<lbrakk> B \\<inter> A = {}; C \\<subseteq> A \\<rbrakk> \\<Longrightarrow> C \\<inter> B = {}\"", "lemma insert_inter:\n  \"\\<lbrakk> a \\<notin> A; (A \\<inter> B) = {} \\<rbrakk> \\<Longrightarrow> (A \\<inter> (insert a B)) = {}\"", "lemma insert_notmem:\n  \"\\<lbrakk> a \\<noteq> b; a \\<notin> B \\<rbrakk> \\<Longrightarrow> a \\<notin> (insert b B)\"", "lemma insert_union:\n \"A \\<union> (insert a B) = insert a A \\<union> B\"", "lemma insert_or:\n     \"{s. s = t1 \\<or>  (P s)} = insert t1 {s. P s }\"", "lemma Collect_subset: \n  \"{x . x \\<subseteq> A \\<and> P x} = {x \\<in> Pow A. P x}\"", "lemma OneElement_Card [simp]:\n  \"\\<lbrakk> finite M; card M <= Suc 0; t \\<in> M \\<rbrakk> \\<Longrightarrow> M = {t}\"", "lemma Ex1_one_point [simp]: \n  \"(\\<exists>! x. P x \\<and> x = a) = P a\"", "lemma Ex1_one_point2 [simp]:\n  \"(\\<exists>! x. P x \\<and> Q x \\<and> x = a) = (P a \\<and> Q a)\"", "lemma Some_one_point [simp]:\n \"P a \\<Longrightarrow> (SOME x. P x \\<and> x = a) = a\"", "lemma Some_one_point2 [simp]:\n \"\\<lbrakk> Q a; P a \\<rbrakk> \\<Longrightarrow> (SOME x. P x \\<and> Q x \\<and> x = a) = a\""], "translations": [["", "lemma map_some_list [simp]:\n   \"map the (map Some L) = L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map the (map Some L) = L", "apply (induct_tac L)"], ["proof (prove)\ngoal (2 subgoals):\n 1. map the (map Some []) = []\n 2. \\<And>a list.\n       map the (map Some list) = list \\<Longrightarrow>\n       map the (map Some (a # list)) = a # list", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dom_ran_the:\n  \"\\<lbrakk> ran G = {y}; x \\<in> (dom G) \\<rbrakk> \\<Longrightarrow> (the (G x)) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ran G = {y}; x \\<in> dom G\\<rbrakk>\n    \\<Longrightarrow> the (G x) = y", "apply (unfold ran_def dom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{b. \\<exists>a. G a = Some b} = {y};\n     x \\<in> {a. G a \\<noteq> None}\\<rbrakk>\n    \\<Longrightarrow> the (G x) = y", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dom_None:\n  \"(S \\<notin> dom F) \\<Longrightarrow> (F S = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<notin> dom F \\<Longrightarrow> F S = None", "by (unfold dom_def, auto)"], ["", "lemma ran_dom_the:\n  \"\\<lbrakk> y \\<notin> Union (ran G); x \\<in> dom G \\<rbrakk> \\<Longrightarrow> y \\<notin> the (G x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<notin> \\<Union> (ran G); x \\<in> dom G\\<rbrakk>\n    \\<Longrightarrow> y \\<notin> the (G x)", "by (unfold ran_def dom_def, auto)"], ["", "lemma dom_map_upd: \"dom(m(a|->b)) = insert a (dom m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (m(a \\<mapsto> b)) = insert a (dom m)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>rtrancl\\<close>\\<close>"], ["", "lemma rtrancl_Int:\n \"\\<lbrakk> (a,b) \\<in> A; (a,b) \\<in> B \\<rbrakk> \\<Longrightarrow> (a,b) \\<in> (A \\<inter>  B)^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> A; (a, b) \\<in> B\\<rbrakk>\n    \\<Longrightarrow> (a, b) \\<in> (A \\<inter> B)\\<^sup>*", "by auto"], ["", "lemma rtrancl_mem_Sigma:\n \"\\<lbrakk> a \\<noteq> b; (a, b) \\<in> (A \\<times> A)^* \\<rbrakk> \\<Longrightarrow> b \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; (a, b) \\<in> (A \\<times> A)\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> b \\<in> A", "apply (frule rtranclD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; (a, b) \\<in> (A \\<times> A)\\<^sup>*;\n     a = b \\<or>\n     a \\<noteq> b \\<and> (a, b) \\<in> (A \\<times> A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> b \\<in> A", "apply (cut_tac r=\"A \\<times> A\" and A=A in trancl_subset_Sigma)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> b; (a, b) \\<in> (A \\<times> A)\\<^sup>*;\n     a = b \\<or>\n     a \\<noteq> b \\<and> (a, b) \\<in> (A \\<times> A)\\<^sup>+\\<rbrakk>\n    \\<Longrightarrow> A \\<times> A \\<subseteq> A \\<times> A\n 2. \\<lbrakk>a \\<noteq> b; (a, b) \\<in> (A \\<times> A)\\<^sup>*;\n     a = b \\<or> a \\<noteq> b \\<and> (a, b) \\<in> (A \\<times> A)\\<^sup>+;\n     (A \\<times> A)\\<^sup>+ \\<subseteq> A \\<times> A\\<rbrakk>\n    \\<Longrightarrow> b \\<in> A", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma help_rtrancl_Range:\n \"\\<lbrakk> a \\<noteq> b; (a,b) \\<in> R ^* \\<rbrakk> \\<Longrightarrow> b \\<in> Range R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; (a, b) \\<in> R\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> b \\<in> Range R", "apply (erule rtranclE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<noteq> b; a = b\\<rbrakk> \\<Longrightarrow> b \\<in> Range R\n 2. \\<And>y.\n       \\<lbrakk>a \\<noteq> b; (a, y) \\<in> R\\<^sup>*;\n        (y, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> b \\<in> Range R", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rtrancl_Int_help:\n  \"(a,b) \\<in> (A \\<inter> B) ^*  ==> (a,b) \\<in> A^* \\<and> (a,b) \\<in> B^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> (A \\<inter> B)\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> A\\<^sup>* \\<and> (a, b) \\<in> B\\<^sup>*", "apply (unfold Int_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> A\\<^sup>* \\<and> (a, b) \\<in> B\\<^sup>*", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> A\\<^sup>*\n 2. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> B\\<^sup>*", "apply (rule_tac b=b in rtrancl_induct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (?a1, b) \\<in> ?r1\\<^sup>*\n 2. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, ?a1) \\<in> A\\<^sup>*\n 3. \\<And>y z.\n       \\<lbrakk>(a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>*;\n        (?a1, y) \\<in> ?r1\\<^sup>*; (y, z) \\<in> ?r1;\n        (a, y) \\<in> A\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (a, z) \\<in> A\\<^sup>*\n 4. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> B\\<^sup>*", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, b) \\<in> B\\<^sup>*", "apply (rule_tac b=b in rtrancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (?a7, b) \\<in> ?r7\\<^sup>*\n 2. (a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>* \\<Longrightarrow>\n    (a, ?a7) \\<in> B\\<^sup>*\n 3. \\<And>y z.\n       \\<lbrakk>(a, b) \\<in> {x \\<in> A. x \\<in> B}\\<^sup>*;\n        (?a7, y) \\<in> ?r7\\<^sup>*; (y, z) \\<in> ?r7;\n        (a, y) \\<in> B\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (a, z) \\<in> B\\<^sup>*", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemmas rtrancl_Int1 = rtrancl_Int_help [THEN conjunct1]"], ["", "lemmas rtrancl_Int2 = rtrancl_Int_help [THEN conjunct2]"], ["", "lemma tranclD3 [rule_format]:\n  \"(S,T) \\<in> R^+ \\<Longrightarrow> (S,T) \\<notin> R \\<longrightarrow> (\\<exists> U. (S,U) \\<in> R \\<and> (U,T) \\<in> R^+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> R\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<notin> R \\<longrightarrow>\n    (\\<exists>U. (S, U) \\<in> R \\<and> (U, T) \\<in> R\\<^sup>+)", "apply (rule_tac a=\"S\" and b=\"T\" and r=R in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, T) \\<in> R\\<^sup>+ \\<Longrightarrow> (S, T) \\<in> R\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> R\\<^sup>+; (S, y) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<notin> R \\<longrightarrow>\n                         (\\<exists>U.\n                             (S, U) \\<in> R \\<and> (U, y) \\<in> R\\<^sup>+)\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> R\\<^sup>+; (S, y) \\<in> R\\<^sup>+;\n        (y, z) \\<in> R;\n        (S, y) \\<notin> R \\<longrightarrow>\n        (\\<exists>U. (S, U) \\<in> R \\<and> (U, y) \\<in> R\\<^sup>+)\\<rbrakk>\n       \\<Longrightarrow> (S, z) \\<notin> R \\<longrightarrow>\n                         (\\<exists>U.\n                             (S, U) \\<in> R \\<and> (U, z) \\<in> R\\<^sup>+)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma tranclD4 [rule_format]:\n  \"(S,T) \\<in> R^+ \\<Longrightarrow> (S,T) \\<notin> R \\<longrightarrow> (\\<exists> U. (S,U) \\<in> R^+ \\<and> (U,T) \\<in> R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> R\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<notin> R \\<longrightarrow>\n    (\\<exists>U. (S, U) \\<in> R\\<^sup>+ \\<and> (U, T) \\<in> R)", "apply (rule_tac a=\"S\" and b=\"T\" and r=R in trancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. (S, T) \\<in> R\\<^sup>+ \\<Longrightarrow> (S, T) \\<in> R\\<^sup>+\n 2. \\<And>y.\n       \\<lbrakk>(S, T) \\<in> R\\<^sup>+; (S, y) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> (S, y) \\<notin> R \\<longrightarrow>\n                         (\\<exists>U.\n                             (S, U) \\<in> R\\<^sup>+ \\<and> (U, y) \\<in> R)\n 3. \\<And>y z.\n       \\<lbrakk>(S, T) \\<in> R\\<^sup>+; (S, y) \\<in> R\\<^sup>+;\n        (y, z) \\<in> R;\n        (S, y) \\<notin> R \\<longrightarrow>\n        (\\<exists>U. (S, U) \\<in> R\\<^sup>+ \\<and> (U, y) \\<in> R)\\<rbrakk>\n       \\<Longrightarrow> (S, z) \\<notin> R \\<longrightarrow>\n                         (\\<exists>U.\n                             (S, U) \\<in> R\\<^sup>+ \\<and> (U, z) \\<in> R)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trancl_collect [rule_format]:\n  \"\\<lbrakk> (x,y) \\<in> R^*; S \\<notin> Domain R \\<rbrakk> \\<Longrightarrow> y \\<noteq> S \\<longrightarrow> (x,y) \\<in> {p. fst p \\<noteq> S \\<and> snd p \\<noteq> S \\<and> p \\<in> R}^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R\\<rbrakk>\n    \\<Longrightarrow> y \\<noteq> S \\<longrightarrow>\n                      (x, y)\n                      \\<in> {p. fst p \\<noteq> S \\<and>\n                                snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*", "apply (rule_tac b=y in rtrancl_induct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R\\<rbrakk>\n    \\<Longrightarrow> (?a, y) \\<in> ?r\\<^sup>*\n 2. \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R\\<rbrakk>\n    \\<Longrightarrow> ?a \\<noteq> S \\<longrightarrow>\n                      (x, ?a)\n                      \\<in> {p. fst p \\<noteq> S \\<and>\n                                snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\n 3. \\<And>ya z.\n       \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R;\n        (?a, ya) \\<in> ?r\\<^sup>*; (ya, z) \\<in> ?r;\n        ya \\<noteq> S \\<longrightarrow>\n        (x, ya)\n        \\<in> {p. fst p \\<noteq> S \\<and>\n                  snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> z \\<noteq> S \\<longrightarrow>\n                         (x, z)\n                         \\<in> {p. fst p \\<noteq> S \\<and>\n                                   snd p \\<noteq> S \\<and>\n                                   p \\<in> R}\\<^sup>*", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya z.\n       \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R;\n        (x, ya) \\<in> R\\<^sup>*; (ya, z) \\<in> R; z \\<noteq> S;\n        (x, ya)\n        \\<in> {p. fst p \\<noteq> S \\<and>\n                  snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, z)\n                         \\<in> {p. fst p \\<noteq> S \\<and>\n                                   snd p \\<noteq> S \\<and>\n                                   p \\<in> R}\\<^sup>*", "apply (rule rtrancl_into_rtrancl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>ya z.\n       \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R;\n        (x, ya) \\<in> R\\<^sup>*; (ya, z) \\<in> R; z \\<noteq> S;\n        (x, ya)\n        \\<in> {p. fst p \\<noteq> S \\<and>\n                  snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (x, ?b13 ya z)\n                         \\<in> {p. fst p \\<noteq> S \\<and>\n                                   snd p \\<noteq> S \\<and>\n                                   p \\<in> R}\\<^sup>*\n 2. \\<And>ya z.\n       \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R;\n        (x, ya) \\<in> R\\<^sup>*; (ya, z) \\<in> R; z \\<noteq> S;\n        (x, ya)\n        \\<in> {p. fst p \\<noteq> S \\<and>\n                  snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (?b13 ya z, z)\n                         \\<in> {p. fst p \\<noteq> S \\<and>\n                                   snd p \\<noteq> S \\<and> p \\<in> R}", "apply fast"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya z.\n       \\<lbrakk>(x, y) \\<in> R\\<^sup>*; S \\<notin> Domain R;\n        (x, ya) \\<in> R\\<^sup>*; (ya, z) \\<in> R; z \\<noteq> S;\n        (x, ya)\n        \\<in> {p. fst p \\<noteq> S \\<and>\n                  snd p \\<noteq> S \\<and> p \\<in> R}\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> (ya, z)\n                         \\<in> {p. fst p \\<noteq> S \\<and>\n                                   snd p \\<noteq> S \\<and> p \\<in> R}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trancl_subseteq:\n  \"\\<lbrakk> R \\<subseteq> Q; S \\<in> R^* \\<rbrakk> \\<Longrightarrow> S \\<in> Q^*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<subseteq> Q; S \\<in> R\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> Q\\<^sup>*", "apply (frule rtrancl_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>R \\<subseteq> Q; S \\<in> R\\<^sup>*;\n     R\\<^sup>* \\<subseteq> Q\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> S \\<in> Q\\<^sup>*", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trancl_Int_subset:\n   \"(R \\<inter> (A \\<times> A))\\<^sup>+ \\<subseteq> R\\<^sup>+ \\<inter> (A \\<times> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Restr R A)\\<^sup>+ \\<subseteq> Restr (R\\<^sup>+) A", "apply (rule subsetI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow>\n       x \\<in> Restr (R\\<^sup>+) A", "apply (rename_tac S)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S.\n       S \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow>\n       S \\<in> Restr (R\\<^sup>+) A", "apply (case_tac \"S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S a b.\n       \\<lbrakk>S \\<in> (Restr R A)\\<^sup>+; S = (a, b)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> Restr (R\\<^sup>+) A", "apply (rename_tac T V)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S T V.\n       \\<lbrakk>S \\<in> (Restr R A)\\<^sup>+; S = (T, V)\\<rbrakk>\n       \\<Longrightarrow> S \\<in> Restr (R\\<^sup>+) A", "apply auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>T V.\n       (T, V) \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow>\n       (T, V) \\<in> R\\<^sup>+\n 2. \\<And>T V. (T, V) \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow> T \\<in> A\n 3. \\<And>T V. (T, V) \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow> V \\<in> A", "apply (rule_tac a=T and b=V and r=\"(R  \\<inter> A \\<times> A)\" in converse_trancl_induct, auto)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma trancl_Int_mem:\n   \"(S,T) \\<in> (R \\<inter> (A \\<times> A))\\<^sup>+ \\<Longrightarrow> (S,T)  \\<in> R\\<^sup>+ \\<inter> A \\<times> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (S, T) \\<in> (Restr R A)\\<^sup>+ \\<Longrightarrow>\n    (S, T) \\<in> Restr (R\\<^sup>+) A", "by (rule trancl_Int_subset [THEN subsetD], assumption)"], ["", "lemma Int_expand: \n  \"{(S,S'). P S S' \\<and>  Q S S'} = ({(S,S'). P S S'} \\<inter> {(S,S'). Q S S'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(S, S'). P S S' \\<and> Q S S'} =\n    {(S, S'). P S S'} \\<inter> {(S, S'). Q S S'}", "by auto"], ["", "subsubsection \\<open>\\<open>finite\\<close>\\<close>"], ["", "lemma finite_conj:  \n \"finite ({(S,S'). P S S'}::(('a*'b)set)) \\<longrightarrow>  \n     finite {(S,S'). P (S::'a) (S'::'b) \\<and> Q (S::'a) (S'::'b)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(S, S'). P S S'} \\<longrightarrow>\n    finite {(S, S'). P S S' \\<and> Q S S'}", "apply (rule impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(S, S'). P S S'} \\<Longrightarrow>\n    finite {(S, S'). P S S' \\<and> Q S S'}", "apply (subst Int_expand)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(S, S'). P S S'} \\<Longrightarrow>\n    finite ({(x, y). P x y} \\<inter> {(x, y). Q x y})", "apply (rule finite_Int)"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {(S, S'). P S S'} \\<Longrightarrow>\n    finite {(x, y). P x y} \\<or> finite {(x, y). Q x y}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma finite_conj2:\n  \"\\<lbrakk> finite A; finite B \\<rbrakk> \\<Longrightarrow> finite ({(S,S'). S: A \\<and> S' : B})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B\\<rbrakk>\n    \\<Longrightarrow> finite {(S, S'). S \\<in> A \\<and> S' \\<in> B}", "by auto"], ["", "subsubsection \\<open>\\<open>override\\<close>\\<close>"], ["", "lemma dom_override_the:\n  \"(x \\<in> (dom G2)) \\<longrightarrow> ((G1 ++ G2) x) = (G2 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> dom G2 \\<longrightarrow> (G1 ++ G2) x = G2 x", "by (auto)"], ["", "lemma dom_override_the2 [simp]:\n  \"\\<lbrakk> dom G1 \\<inter> dom G2 = {}; x \\<in> (dom G1) \\<rbrakk> \\<Longrightarrow> ((G1 ++ G2) x) = (G1 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom G1 \\<inter> dom G2 = {}; x \\<in> dom G1\\<rbrakk>\n    \\<Longrightarrow> (G1 ++ G2) x = G1 x", "apply (unfold dom_def map_add_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{a. G1 a \\<noteq> None} \\<inter> {a. G2 a \\<noteq> None} = {};\n     x \\<in> {a. G1 a \\<noteq> None}\\<rbrakk>\n    \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                       | Some x \\<Rightarrow> Some x) =\n                      G1 x", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>{a. \\<exists>y. G1 a = Some y} \\<inter>\n                {a. \\<exists>y. G2 a = Some y} =\n                {};\n        G1 x = Some y\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply (drule sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>G1 x = Some y;\n        {} =\n        {a. \\<exists>y. G1 a = Some y} \\<inter>\n        {a. \\<exists>y. G2 a = Some y}\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply (erule equalityE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>G1 x = Some y;\n        {} \\<subseteq> {a. \\<exists>y. G1 a = Some y} \\<inter>\n                       {a. \\<exists>y. G2 a = Some y};\n        {a. \\<exists>y. G1 a = Some y} \\<inter>\n        {a. \\<exists>y. G2 a = Some y}\n        \\<subseteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply (unfold Int_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>G1 x = Some y;\n        {} \\<subseteq> {x \\<in> {a. \\<exists>y. G1 a = Some y}.\n                        x \\<in> {a. \\<exists>y. G2 a = Some y}};\n        {x \\<in> {a. \\<exists>y. G1 a = Some y}.\n         x \\<in> {a. \\<exists>y. G2 a = Some y}}\n        \\<subseteq> {}\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>G1 x = Some y;\n        \\<forall>x. G1 x = None \\<or> G2 x = None\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply (erule_tac x=x in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>G1 x = Some y; G1 x = None \\<or> G2 x = None\\<rbrakk>\n       \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                          | Some x \\<Rightarrow> Some x) =\n                         Some y", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma dom_override_the3 [simp]:\n  \"\\<lbrakk> x \\<notin> dom G2; x \\<in> dom G1 \\<rbrakk> \\<Longrightarrow> ((G1 ++ G2) x) = (G1 x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> dom G2; x \\<in> dom G1\\<rbrakk>\n    \\<Longrightarrow> (G1 ++ G2) x = G1 x", "apply (unfold dom_def map_add_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<notin> {a. G2 a \\<noteq> None};\n     x \\<in> {a. G1 a \\<noteq> None}\\<rbrakk>\n    \\<Longrightarrow> (case G2 x of None \\<Rightarrow> G1 x\n                       | Some x \\<Rightarrow> Some x) =\n                      G1 x", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Union_ran_override [simp]:\n  \"S \\<in> dom G \\<Longrightarrow> \\<Union> (ran (G ++ Map.empty(S \\<mapsto> insert SA (the(G S))))) = \n   (insert SA (Union (ran G)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> dom G \\<Longrightarrow>\n    \\<Union> (ran (G ++ [S \\<mapsto> insert SA (the (G S))])) =\n    insert SA (\\<Union> (ran G))", "apply (unfold dom_def ran_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> {a. G a \\<noteq> None} \\<Longrightarrow>\n    \\<Union>\n     {b. \\<exists>a.\n            (G ++ [S \\<mapsto> insert SA (the (G S))]) a = Some b} =\n    insert SA (\\<Union> {b. \\<exists>a. G a = Some b})", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x X a.\n       \\<lbrakk>G S = Some y; x \\<in> X; G a = Some X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply (rename_tac T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply (case_tac \"T = S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X; T = S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa\n 2. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X; T \\<noteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Union_ran_override2 [simp]:\n  \"S \\<in> dom G \\<Longrightarrow> \\<Union> (ran (G(S \\<mapsto> insert SA (the(G S))))) = (insert SA (Union (ran G)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> dom G \\<Longrightarrow>\n    \\<Union> (ran (G(S \\<mapsto> insert SA (the (G S))))) =\n    insert SA (\\<Union> (ran G))", "apply (unfold dom_def ran_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> {a. G a \\<noteq> None} \\<Longrightarrow>\n    \\<Union>\n     {b. \\<exists>a. (G(S \\<mapsto> insert SA (the (G S)))) a = Some b} =\n    insert SA (\\<Union> {b. \\<exists>a. G a = Some b})", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x X a.\n       \\<lbrakk>G S = Some y; x \\<in> X; G a = Some X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply (rename_tac T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply (case_tac \"T = S\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X; T = S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa\n 2. \\<And>y x X T.\n       \\<lbrakk>G S = Some y; x \\<in> X; G T = Some X; T \\<noteq> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (\\<exists>a.\n                                (a = S \\<longrightarrow>\n                                 insert SA y = xa) \\<and>\n                                (a \\<noteq> S \\<longrightarrow>\n                                 G a = Some xa)) \\<and>\n                            x \\<in> xa", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma ran_override [simp]:\n  \"(dom A \\<inter> dom B) = {} \\<Longrightarrow> ran (A ++ B) = (ran A) \\<union> (ran B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom A \\<inter> dom B = {} \\<Longrightarrow>\n    ran (A ++ B) = ran A \\<union> ran B", "apply (unfold Int_def ran_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> dom A. x \\<in> dom B} = {} \\<Longrightarrow>\n    {b. \\<exists>a. (A ++ B) a = Some b} =\n    {b. \\<exists>a. A a = Some b} \\<union> {b. \\<exists>a. B a = Some b}", "apply (simp add: map_add_Some_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       x \\<in> dom A \\<longrightarrow> x \\<notin> dom B \\<Longrightarrow>\n    {b. \\<exists>a. B a = Some b \\<or> B a = None \\<and> A a = Some b} =\n    {b. \\<exists>a. A a = Some b} \\<union> {b. \\<exists>a. B a = Some b}", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma chg_map_new [simp]:\n  \"m a = None \\<Longrightarrow> chg_map f a m = m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m a = None \\<Longrightarrow> chg_map f a m = m", "by (unfold chg_map_def, auto)"], ["", "lemma chg_map_upd [simp]:\n  \"m a = Some b \\<Longrightarrow> chg_map f a m = m(a|->f b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m a = Some b \\<Longrightarrow> chg_map f a m = m(a \\<mapsto> f b)", "by (unfold chg_map_def, auto)"], ["", "lemma ran_override_chg_map:\n  \"A \\<in> dom G \\<Longrightarrow> ran (G ++ Map.empty(A|->B)) = (ran (chg_map (\\<lambda> x. B) A G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> dom G \\<Longrightarrow>\n    ran (G ++ [A \\<mapsto> B]) = ran (chg_map (\\<lambda>x. B) A G)", "apply (unfold dom_def ran_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> {a. G a \\<noteq> None} \\<Longrightarrow>\n    {b. \\<exists>a. (G ++ [A \\<mapsto> B]) a = Some b} =\n    {b. \\<exists>a. chg_map (\\<lambda>x. B) A G a = Some b}", "apply (subst map_add_Some_iff [THEN ext])"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> {a. G a \\<noteq> None} \\<Longrightarrow>\n    {b. \\<exists>x.\n           [A \\<mapsto> B] x = Some b \\<or>\n           [A \\<mapsto> B] x = None \\<and> G x = Some b} =\n    {b. \\<exists>a. chg_map (\\<lambda>x. B) A G a = Some b}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x a.\n       \\<lbrakk>G A = Some y;\n        (if a = A then Some B else G a) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (xa = A \\<longrightarrow> B = x) \\<and>\n                            (xa \\<noteq> A \\<longrightarrow> G xa = Some x)", "apply (rename_tac T)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x T.\n       \\<lbrakk>G A = Some y;\n        (if T = A then Some B else G T) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (xa = A \\<longrightarrow> B = x) \\<and>\n                            (xa \\<noteq> A \\<longrightarrow> G xa = Some x)", "apply (case_tac \"T = A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x T.\n       \\<lbrakk>G A = Some y; (if T = A then Some B else G T) = Some x;\n        T = A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (xa = A \\<longrightarrow> B = x) \\<and>\n                            (xa \\<noteq> A \\<longrightarrow> G xa = Some x)\n 2. \\<And>y x T.\n       \\<lbrakk>G A = Some y; (if T = A then Some B else G T) = Some x;\n        T \\<noteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>xa.\n                            (xa = A \\<longrightarrow> B = x) \\<and>\n                            (xa \\<noteq> A \\<longrightarrow> G xa = Some x)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>\\<open>Part\\<close>\\<close>"], ["", "definition  Part :: \"['a set, 'b => 'a] => 'a set\" where\n            \"Part A h = A \\<inter> {x. \\<exists> z. x = h(z)}\""], ["", "lemma Part_UNIV_Inl_comp: \n \"((Part UNIV (Inl o f)) = (Part UNIV (Inl o g))) = ((Part UNIV f) = (Part UNIV g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Part UNIV (Inl \\<circ> f) = Part UNIV (Inl \\<circ> g)) =\n    (Part UNIV f = Part UNIV g)", "apply (unfold Part_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (UNIV \\<inter> {x. \\<exists>z. x = (Inl \\<circ> f) z} =\n     UNIV \\<inter> {x. \\<exists>z. x = (Inl \\<circ> g) z}) =\n    (UNIV \\<inter> {x. \\<exists>z. x = f z} =\n     UNIV \\<inter> {x. \\<exists>z. x = g z})", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       {x. \\<exists>z. x = Inl (f z)} =\n       {x. \\<exists>z. x = Inl (g z)} \\<Longrightarrow>\n       \\<exists>za. f z = g za\n 2. \\<And>z.\n       {x. \\<exists>z. x = Inl (f z)} =\n       {x. \\<exists>z. x = Inl (g z)} \\<Longrightarrow>\n       \\<exists>za. g z = f za", "apply (erule equalityE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (f z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (g z)};\n        {x. \\<exists>z. x = Inl (g z)}\n        \\<subseteq> {x. \\<exists>z. x = Inl (f z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. f z = g za\n 2. \\<And>z.\n       {x. \\<exists>z. x = Inl (f z)} =\n       {x. \\<exists>z. x = Inl (g z)} \\<Longrightarrow>\n       \\<exists>za. g z = f za", "apply (erule subsetCE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (g z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (f z)};\n        ?c82 z \\<notin> {x. \\<exists>z. x = Inl (f z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. f z = g za\n 2. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (g z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (f z)};\n        ?c82 z \\<in> {x. \\<exists>z. x = Inl (g z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. f z = g za\n 3. \\<And>z.\n       {x. \\<exists>z. x = Inl (f z)} =\n       {x. \\<exists>z. x = Inl (g z)} \\<Longrightarrow>\n       \\<exists>za. g z = f za", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       {x. \\<exists>z. x = Inl (f z)} =\n       {x. \\<exists>z. x = Inl (g z)} \\<Longrightarrow>\n       \\<exists>za. g z = f za", "apply (erule equalityE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (f z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (g z)};\n        {x. \\<exists>z. x = Inl (g z)}\n        \\<subseteq> {x. \\<exists>z. x = Inl (f z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. g z = f za", "apply (erule subsetCE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (g z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (f z)};\n        ?c118 z \\<notin> {x. \\<exists>z. x = Inl (f z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. g z = f za\n 2. \\<And>z.\n       \\<lbrakk>{x. \\<exists>z. x = Inl (g z)}\n                \\<subseteq> {x. \\<exists>z. x = Inl (f z)};\n        ?c118 z \\<in> {x. \\<exists>z. x = Inl (g z)}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>za. g z = f za", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma Part_eqI [intro]: \"\\<lbrakk> a \\<in> A; a=h(b) \\<rbrakk> \\<Longrightarrow> a \\<in> Part A h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; a = h b\\<rbrakk> \\<Longrightarrow> a \\<in> Part A h", "by (auto simp add: Part_def)"], ["", "lemmas PartI = Part_eqI [OF _ refl]"], ["", "lemma PartE [elim!]: \"\\<lbrakk> a \\<in> Part A h;  !!z. \\<lbrakk> a \\<in> A;  a=h(z) \\<rbrakk> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> Part A h;\n     \\<And>z.\n        \\<lbrakk>a \\<in> A; a = h z\\<rbrakk> \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto simp add: Part_def)"], ["", "lemma Part_subset: \"Part A h \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Part A h \\<subseteq> A", "by (auto simp add: Part_def)"], ["", "lemma Part_mono: \"A \\<subseteq> B \\<Longrightarrow> Part A h \\<subseteq> Part B h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> Part A h \\<subseteq> Part B h", "by blast"], ["", "lemmas basic_monos = basic_monos Part_mono"], ["", "lemma PartD1: \"a \\<in> Part A h \\<Longrightarrow> a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> Part A h \\<Longrightarrow> a \\<in> A", "by (simp add: Part_def)"], ["", "lemma Part_id: \"Part A (\\<lambda> x. x) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Part A (\\<lambda>x. x) = A", "by blast"], ["", "lemma Part_Int: \"Part (A \\<inter> B) h = (Part A h) \\<inter> (Part B h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Part (A \\<inter> B) h = Part A h \\<inter> Part B h", "by blast"], ["", "lemma Part_Collect: \"Part (A \\<inter> {x. P x}) h = (Part A h) \\<inter> {x. P x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Part (A \\<inter> {x. P x}) h = Part A h \\<inter> {x. P x}", "by blast"], ["", "subsubsection \\<open>Set operators\\<close>"], ["", "lemma subset_lemma:\n  \"\\<lbrakk> A \\<inter> B = {}; A \\<subseteq> B \\<rbrakk> \\<Longrightarrow> A = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<inter> B = {}; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> A = {}", "by auto"], ["", "lemma subset_lemma2:\n \"\\<lbrakk> B \\<inter> A = {}; C \\<subseteq> A \\<rbrakk> \\<Longrightarrow> C \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<inter> A = {}; C \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> C \\<inter> B = {}", "by auto"], ["", "lemma insert_inter:\n  \"\\<lbrakk> a \\<notin> A; (A \\<inter> B) = {} \\<rbrakk> \\<Longrightarrow> (A \\<inter> (insert a B)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<notin> A; A \\<inter> B = {}\\<rbrakk>\n    \\<Longrightarrow> A \\<inter> insert a B = {}", "by auto"], ["", "lemma insert_notmem:\n  \"\\<lbrakk> a \\<noteq> b; a \\<notin> B \\<rbrakk> \\<Longrightarrow> a \\<notin> (insert b B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<noteq> b; a \\<notin> B\\<rbrakk>\n    \\<Longrightarrow> a \\<notin> insert b B", "by auto"], ["", "lemma insert_union:\n \"A \\<union> (insert a B) = insert a A \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> insert a B = insert a A \\<union> B", "by auto"], ["", "lemma insert_or:\n     \"{s. s = t1 \\<or>  (P s)} = insert t1 {s. P s }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {s. s = t1 \\<or> P s} = insert t1 {s. P s}", "by auto"], ["", "lemma Collect_subset: \n  \"{x . x \\<subseteq> A \\<and> P x} = {x \\<in> Pow A. P x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x. x \\<subseteq> A \\<and> P x} = {x \\<in> Pow A. P x}", "by auto"], ["", "lemma OneElement_Card [simp]:\n  \"\\<lbrakk> finite M; card M <= Suc 0; t \\<in> M \\<rbrakk> \\<Longrightarrow> M = {t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M\\<rbrakk>\n    \\<Longrightarrow> M = {t}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; x \\<in> M\\<rbrakk>\n       \\<Longrightarrow> x = t", "apply (rename_tac s)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s = t", "apply (rule_tac P=\"finite M\" in mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac P=\"card M <= Suc 0\" in mp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0 \\<longrightarrow>\n                         finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 3. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac P=\"t \\<in> M\" in mp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M \\<longrightarrow>\n                         card M \\<le> Suc 0 \\<longrightarrow>\n                         finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M\n 3. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 4. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac F=\"M\" in finite_induct)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> {} \\<longrightarrow>\n                         card {} \\<le> Suc 0 \\<longrightarrow>\n                         finite {} \\<longrightarrow> s = t\n 3. \\<And>s x F.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M;\n        finite F; x \\<notin> F;\n        t \\<in> F \\<longrightarrow>\n        card F \\<le> Suc 0 \\<longrightarrow>\n        finite F \\<longrightarrow> s = t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> insert x F \\<longrightarrow>\n                         card (insert x F) \\<le> Suc 0 \\<longrightarrow>\n                         finite (insert x F) \\<longrightarrow> s = t\n 4. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M\n 5. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 6. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s = t", "apply (rule_tac P=\"finite M\" in mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac P=\"card M <= Suc 0\" in mp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0 \\<longrightarrow>\n                         finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 3. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac P=\"s \\<in> M\" in mp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s \\<in> M \\<longrightarrow>\n                         card M \\<le> Suc 0 \\<longrightarrow>\n                         finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s \\<in> M\n 3. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 4. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac P=\"t \\<in> M\" in mp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M \\<longrightarrow>\n                         s \\<in> M \\<longrightarrow>\n                         card M \\<le> Suc 0 \\<longrightarrow>\n                         finite M \\<longrightarrow> s = t\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M\n 3. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s \\<in> M\n 4. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 5. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply (rule_tac F=\"M\" in finite_induct)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M\n 2. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> {} \\<longrightarrow>\n                         s \\<in> {} \\<longrightarrow>\n                         card {} \\<le> Suc 0 \\<longrightarrow>\n                         finite {} \\<longrightarrow> s = t\n 3. \\<And>s x F.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M;\n        finite F; x \\<notin> F;\n        t \\<in> F \\<longrightarrow>\n        s \\<in> F \\<longrightarrow>\n        card F \\<le> Suc 0 \\<longrightarrow>\n        finite F \\<longrightarrow> s = t\\<rbrakk>\n       \\<Longrightarrow> t \\<in> insert x F \\<longrightarrow>\n                         s \\<in> insert x F \\<longrightarrow>\n                         card (insert x F) \\<le> Suc 0 \\<longrightarrow>\n                         finite (insert x F) \\<longrightarrow> s = t\n 4. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> t \\<in> M\n 5. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> s \\<in> M\n 6. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> card M \\<le> Suc 0\n 7. \\<And>s.\n       \\<lbrakk>finite M; card M \\<le> Suc 0; t \\<in> M; s \\<in> M\\<rbrakk>\n       \\<Longrightarrow> finite M", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open>One point rule\\<close>"], ["", "lemma Ex1_one_point [simp]: \n  \"(\\<exists>! x. P x \\<and> x = a) = P a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>!x. P x \\<and> x = a) = P a", "by auto"], ["", "lemma Ex1_one_point2 [simp]:\n  \"(\\<exists>! x. P x \\<and> Q x \\<and> x = a) = (P a \\<and> Q a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>!x. P x \\<and> Q x \\<and> x = a) = (P a \\<and> Q a)", "by auto"], ["", "lemma Some_one_point [simp]:\n \"P a \\<Longrightarrow> (SOME x. P x \\<and> x = a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P a \\<Longrightarrow> (SOME x. P x \\<and> x = a) = a", "by auto"], ["", "lemma Some_one_point2 [simp]:\n \"\\<lbrakk> Q a; P a \\<rbrakk> \\<Longrightarrow> (SOME x. P x \\<and> Q x \\<and> x = a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Q a; P a\\<rbrakk>\n    \\<Longrightarrow> (SOME x. P x \\<and> Q x \\<and> x = a) = a", "by auto"], ["", "end"]]}