{"file_name": "/home/qj213/afp-2021-10-22/thys/Case_Labeling/Examples/Hoare/Labeled_Hoare_Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Case_Labeling", "problem_names": ["lemma multiply_by_add: \"VARS m s a b\n  {a=A \\<and> b=B}\n  m := 0; s := 0;\n  WHILE m\\<noteq>a\n  INV {s=m*b \\<and> a=A \\<and> b=B}\n  DO s := s+b; m := m+(1::nat) OD\n  {s = A*B}\"", "lemma \"VARS M N P :: int\n {m=M \\<and> n=N}\n IF M < 0 THEN M := -M; N := -N ELSE SKIP FI;\n P := 0;\n WHILE 0 < M\n INV {0 \\<le> M \\<and> (\\<exists>p. p = (if m<0 then -m else m) \\<and> p*N = m*n \\<and> P = (p-M)*N)}\n DO P := P+N; M := M - 1 OD\n {P = m*n}\"", "lemma Euclid_GCD: \"VARS a b\n {0<A \\<and> 0<B}\n a := A; b := B;\n WHILE  a \\<noteq> b\n INV {0<a \\<and> 0<b \\<and> gcd A B = gcd a b}\n DO IF a<b THEN b := b-a ELSE a := a-b FI OD\n {a = gcd A B}\"", "lemmas distribs =\n  diff_mult_distrib diff_mult_distrib2 add_mult_distrib add_mult_distrib2", "lemma gcd_scm: \"VARS a b x y\n {0<A \\<and> 0<B \\<and> a=A \\<and> b=B \\<and> x=B \\<and> y=A}\n WHILE  a \\<noteq> b\n INV {0<a \\<and> 0<b \\<and> gcd A B = gcd a b \\<and> 2*A*B = a*x + b*y}\n DO IF a<b THEN (b := b-a; x := x+y) ELSE (a := a-b; y := y+x) FI OD\n {a = gcd A B \\<and> 2*A*B = a*(x+y)}\"", "lemma power_by_mult: \"VARS a b c\n {a=A \\<and> b=B}\n c := (1::nat);\n WHILE b \\<noteq> 0\n INV {A^B = c * a^b}\n DO  WHILE b mod 2 = 0\n     INV {A^B = c * a^b}\n     DO  a := a*a; b := b div 2 OD;\n     c := c*a; b := b - 1\n OD\n {c = A^B}\"", "lemma factorial: \"VARS a b\n {a=A}\n b := 1;\n WHILE a \\<noteq> 0\n INV {fac A = b * fac a}\n DO b := b*a; a := a - 1 OD\n {b = fac A}\"", "lemma \"VARS i f\n {True}\n i := (1::nat); f := 1;\n WHILE i \\<le> n INV {f = fac(i - 1) \\<and> 1 \\<le> i \\<and> i \\<le> n+1}\n DO f := f*i; i := i+1 OD\n {f = fac n}\"", "lemma Partition:\n  fixes pivot\n  defines \"leq \\<equiv> \\<lambda>A i. \\<forall>k. k<i \\<longrightarrow> A!k \\<le> pivot\"\n  defines \"geq \\<equiv> \\<lambda>A i. \\<forall>k. i<k \\<and> k<length A \\<longrightarrow> pivot \\<le> A!k\"\n  shows \"\n   VARS A u l\n   {0 < length(A::('a::order)list)}\n   l := 0; u := length A - Suc 0;\n   WHILE l \\<le> u\n    INV {leq A l \\<and> geq A u \\<and> u<length A \\<and> l\\<le>length A}\n    DO WHILE l < length A \\<and> A!l \\<le> pivot\n        INV {leq A l \\<and> geq A u \\<and> u<length A \\<and> l\\<le>length A}\n        DO l := l+1 OD;\n       WHILE 0 < u \\<and> pivot \\<le> A!u\n        INV {leq A l \\<and> geq A u  \\<and> u<length A \\<and> l\\<le>length A}\n        DO u := u - 1 OD;\n       IF l \\<le> u THEN A := A[l := A!u, u := A!l] ELSE SKIP FI\n    OD\n   {leq A u \\<and> (\\<forall>k. u<k \\<and> k<l \\<longrightarrow> A!k = pivot) \\<and> geq A l}\""], "translations": [["", "lemma multiply_by_add: \"VARS m s a b\n  {a=A \\<and> b=B}\n  m := 0; s := 0;\n  WHILE m\\<noteq>a\n  INV {s=m*b \\<and> a=A \\<and> b=B}\n  DO s := s+b; m := m+(1::nat) OD\n  {s = A*B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a = A \\<and> b = B} \n     m := 0;\n     s := 0;\n     WHILE m \\<noteq> a INV {s = m * b \\<and> a = A \\<and> b = B} \n      VAR {\\<lambda>(m, s, a, b). 0} \n      DO s := s + b; m := m + 1 OD \n     {s = A * B}", "by vcg_simp"], ["", "lemma \"VARS M N P :: int\n {m=M \\<and> n=N}\n IF M < 0 THEN M := -M; N := -N ELSE SKIP FI;\n P := 0;\n WHILE 0 < M\n INV {0 \\<le> M \\<and> (\\<exists>p. p = (if m<0 then -m else m) \\<and> p*N = m*n \\<and> P = (p-M)*N)}\n DO P := P+N; M := M - 1 OD\n {P = m*n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {m = M \\<and> n = N} \n     IF M < 0 THEN M := - M; N := - N  ELSE SKIP FI;\n     P := 0;\n     WHILE 0 < M\n      INV {0 \\<le> M \\<and>\n           (\\<exists>p.\n               p = (if m < 0 then - m else m) \\<and>\n               p * N = m * n \\<and> P = (p - M) * N)} \n      VAR {\\<lambda>(M, N, P). 0} \n      DO P := P + N; M := M - 1 OD \n     {P = m * n}", "proof casified_vcg_simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)\n 2. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and>\n       \\<not> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)", "case while"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)\n 2. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and>\n       \\<not> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)\n 2. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and>\n       \\<not> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)", "case postcondition"], ["proof (state)\nthis:\n  0 \\<le> M \\<and>\n  (if m < 0 then - m else m) * N = m * n \\<and> \\<not> 0 < M\n\ngoal (2 subgoals):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)\n 2. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and>\n       \\<not> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> M \\<and>\n  (if m < 0 then - m else m) * N = m * n \\<and> \\<not> 0 < M", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<le> M \\<and>\n  (if m < 0 then - m else m) * N = m * n \\<and> \\<not> 0 < M\n\ngoal (1 subgoal):\n 1. (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n    (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)", "by auto"], ["proof (state)\nthis:\n  (m < 0 \\<longrightarrow> (- m - M) * N = m * n) \\<and>\n  (\\<not> m < 0 \\<longrightarrow> (m - M) * N = m * n)\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "{"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "case basic"], ["proof (state)\nthis:\n  0 \\<le> M \\<and> (if m < 0 then - m else m) * N = m * n \\<and> 0 < M\n\ngoal (1 subgoal):\n 1. \\<And>M N.\n       0 \\<le> M \\<and>\n       (if m < 0 then - m else m) * N = m * n \\<and> 0 < M \\<Longrightarrow>\n       (m < 0 \\<longrightarrow>\n        (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n       (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "then"], ["proof (chain)\npicking this:\n  0 \\<le> M \\<and> (if m < 0 then - m else m) * N = m * n \\<and> 0 < M", "show ?case"], ["proof (prove)\nusing this:\n  0 \\<le> M \\<and> (if m < 0 then - m else m) * N = m * n \\<and> 0 < M\n\ngoal (1 subgoal):\n 1. (m < 0 \\<longrightarrow> (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n    (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)", "by (auto simp: int_distrib)"], ["proof (state)\nthis:\n  (m < 0 \\<longrightarrow> (- m - M) * N + N = (- m - (M - 1)) * N) \\<and>\n  (\\<not> m < 0 \\<longrightarrow> (m - M) * N + N = (m - (M - 1)) * N)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  0 \\<le> ?M2 \\<and>\n  (if m < 0 then - m else m) * ?N2 = m * n \\<and> 0 < ?M2 \\<Longrightarrow>\n  (m < 0 \\<longrightarrow>\n   (- m - ?M2) * ?N2 + ?N2 = (- m - (?M2 - 1)) * ?N2) \\<and>\n  (\\<not> m < 0 \\<longrightarrow>\n   (m - ?M2) * ?N2 + ?N2 = (m - (?M2 - 1)) * ?N2)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  0 \\<le> ?M2 \\<and>\n  (if m < 0 then - m else m) * ?N2 = m * n \\<and> 0 < ?M2 \\<Longrightarrow>\n  (m < 0 \\<longrightarrow>\n   (- m - ?M2) * ?N2 + ?N2 = (- m - (?M2 - 1)) * ?N2) \\<and>\n  (\\<not> m < 0 \\<longrightarrow>\n   (m - ?M2) * ?N2 + ?N2 = (m - (?M2 - 1)) * ?N2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Euclid's algorithm for GCD\\<close>"], ["", "lemma Euclid_GCD: \"VARS a b\n {0<A \\<and> 0<B}\n a := A; b := B;\n WHILE  a \\<noteq> b\n INV {0<a \\<and> 0<b \\<and> gcd A B = gcd a b}\n DO IF a<b THEN b := b-a ELSE a := a-b FI OD\n {a = gcd A B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0 < A \\<and> 0 < B} \n     a := A;\n     b := B;\n     WHILE a \\<noteq> b\n      INV {0 < a \\<and> 0 < b \\<and> Arith2.gcd A B = Arith2.gcd a b} \n      VAR {\\<lambda>(a, b). 0} \n      DO IF a < b THEN b := b - a  ELSE a := a - b FI OD \n     {a = Arith2.gcd A B}", "proof casified_vcg_simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)\n 2. \\<And>a.\n       0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a \\<Longrightarrow>\n       a = Arith2.gcd a a", "case while"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)\n 2. \\<And>a.\n       0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a \\<Longrightarrow>\n       a = Arith2.gcd a a", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)\n 2. \\<And>a.\n       0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a \\<Longrightarrow>\n       a = Arith2.gcd a a", "case postcondition"], ["proof (state)\nthis:\n  0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)\n 2. \\<And>a.\n       0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a \\<Longrightarrow>\n       a = Arith2.gcd a a", "then"], ["proof (chain)\npicking this:\n  0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a", "show ?case"], ["proof (prove)\nusing this:\n  0 < a \\<and> Arith2.gcd A B = Arith2.gcd a a\n\ngoal (1 subgoal):\n 1. a = Arith2.gcd a a", "by (auto elim: gcd_nnn)"], ["proof (state)\nthis:\n  a = Arith2.gcd a a\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "{"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "case cond"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "{"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "case vc"], ["proof (state)\nthis:\n  0 < a \\<and>\n  0 < b \\<and> Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        Arith2.gcd a b = Arith2.gcd (a - b) b)", "then"], ["proof (chain)\npicking this:\n  0 < a \\<and>\n  0 < b \\<and> Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  0 < a \\<and>\n  0 < b \\<and> Arith2.gcd A B = Arith2.gcd a b \\<and> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (a < b \\<longrightarrow> Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n    (\\<not> a < b \\<longrightarrow> Arith2.gcd a b = Arith2.gcd (a - b) b)", "by (simp_all add: linorder_not_less gcd_diff_l gcd_diff_r less_imp_le)"], ["proof (state)\nthis:\n  (a < b \\<longrightarrow> Arith2.gcd a b = Arith2.gcd a (b - a)) \\<and>\n  (\\<not> a < b \\<longrightarrow> Arith2.gcd a b = Arith2.gcd (a - b) b)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  0 < ?a2 \\<and>\n  0 < ?b2 \\<and>\n  Arith2.gcd A B = Arith2.gcd ?a2 ?b2 \\<and>\n  ?a2 \\<noteq> ?b2 \\<Longrightarrow>\n  (?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd ?a2 (?b2 - ?a2)) \\<and>\n  (\\<not> ?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd (?a2 - ?b2) ?b2)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  0 < ?a2 \\<and>\n  0 < ?b2 \\<and>\n  Arith2.gcd A B = Arith2.gcd ?a2 ?b2 \\<and>\n  ?a2 \\<noteq> ?b2 \\<Longrightarrow>\n  (?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd ?a2 (?b2 - ?a2)) \\<and>\n  (\\<not> ?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd (?a2 - ?b2) ?b2)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  0 < ?a2 \\<and>\n  0 < ?b2 \\<and>\n  Arith2.gcd A B = Arith2.gcd ?a2 ?b2 \\<and>\n  ?a2 \\<noteq> ?b2 \\<Longrightarrow>\n  (?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd ?a2 (?b2 - ?a2)) \\<and>\n  (\\<not> ?a2 < ?b2 \\<longrightarrow>\n   Arith2.gcd ?a2 ?b2 = Arith2.gcd (?a2 - ?b2) ?b2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Dijkstra's extension of Euclid's algorithm for simultaneous GCD and SCM\\<close>"], ["", "text\\<open>\n  From E.W. Disjkstra. Selected Writings on Computing, p 98 (EWD474),\n  where it is given without the invariant. Instead of defining scm\n  explicitly we have used the theorem scm x y = x*y/gcd x y and avoided\n  division by mupltiplying with gcd x y.\n\\<close>"], ["", "lemmas distribs =\n  diff_mult_distrib diff_mult_distrib2 add_mult_distrib add_mult_distrib2"], ["", "lemma gcd_scm: \"VARS a b x y\n {0<A \\<and> 0<B \\<and> a=A \\<and> b=B \\<and> x=B \\<and> y=A}\n WHILE  a \\<noteq> b\n INV {0<a \\<and> 0<b \\<and> gcd A B = gcd a b \\<and> 2*A*B = a*x + b*y}\n DO IF a<b THEN (b := b-a; x := x+y) ELSE (a := a-b; y := y+x) FI OD\n {a = gcd A B \\<and> 2*A*B = a*(x+y)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0 < A \\<and>\n     0 < B \\<and> a = A \\<and> b = B \\<and> x = B \\<and> y = A} \n     WHILE a \\<noteq> b\n      INV {0 < a \\<and>\n           0 < b \\<and>\n           Arith2.gcd A B = Arith2.gcd a b \\<and>\n           2 * A * B = a * x + b * y} \n      VAR {\\<lambda>(a, b, x, y). 0} \n      DO IF a < b THEN b := b - a; x := x + y  ELSE a := a - b; y := y + x\n          FI \n      OD \n     {a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)}", "proof casified_vcg"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b x y.\n       0 < A \\<and>\n       0 < B \\<and>\n       a = A \\<and> b = B \\<and> x = B \\<and> y = A \\<Longrightarrow>\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 3. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case while"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>a b x y.\n       0 < A \\<and>\n       0 < B \\<and>\n       a = A \\<and> b = B \\<and> x = B \\<and> y = A \\<Longrightarrow>\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 3. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "{"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>a b x y.\n       0 < A \\<and>\n       0 < B \\<and>\n       a = A \\<and> b = B \\<and> x = B \\<and> y = A \\<Longrightarrow>\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 3. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case precondition"], ["proof (state)\nthis:\n  0 < A \\<and> 0 < B \\<and> a = A \\<and> b = B \\<and> x = B \\<and> y = A\n\ngoal (3 subgoals):\n 1. \\<And>a b x y.\n       0 < A \\<and>\n       0 < B \\<and>\n       a = A \\<and> b = B \\<and> x = B \\<and> y = A \\<Longrightarrow>\n       0 < a \\<and>\n       0 < b \\<and>\n       Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 3. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "then"], ["proof (chain)\npicking this:\n  0 < A \\<and> 0 < B \\<and> a = A \\<and> b = B \\<and> x = B \\<and> y = A", "show ?case"], ["proof (prove)\nusing this:\n  0 < A \\<and> 0 < B \\<and> a = A \\<and> b = B \\<and> x = B \\<and> y = A\n\ngoal (1 subgoal):\n 1. 0 < a \\<and>\n    0 < b \\<and>\n    Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y", "by simp"], ["proof (state)\nthis:\n  0 < a \\<and>\n  0 < b \\<and>\n  Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y\n\ngoal (2 subgoals):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case cond"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case vc"], ["proof (state)\nthis:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       a \\<noteq> b \\<Longrightarrow>\n       (a < b \\<longrightarrow>\n        0 < a \\<and>\n        0 < b - a \\<and>\n        Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n        2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n       (\\<not> a < b \\<longrightarrow>\n        0 < a - b \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n        2 * A * B = (a - b) * x + b * (y + x))\n 2. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "then"], ["proof (chain)\npicking this:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  a \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (a < b \\<longrightarrow>\n     0 < a \\<and>\n     0 < b - a \\<and>\n     Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n     2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n    (\\<not> a < b \\<longrightarrow>\n     0 < a - b \\<and>\n     0 < b \\<and>\n     Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n     2 * A * B = (a - b) * x + b * (y + x))", "by (simp add: distribs gcd_diff_r linorder_not_less gcd_diff_l)"], ["proof (state)\nthis:\n  (a < b \\<longrightarrow>\n   0 < a \\<and>\n   0 < b - a \\<and>\n   Arith2.gcd A B = Arith2.gcd a (b - a) \\<and>\n   2 * A * B = a * (x + y) + (b - a) * y) \\<and>\n  (\\<not> a < b \\<longrightarrow>\n   0 < a - b \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd (a - b) b \\<and>\n   2 * A * B = (a - b) * x + b * (y + x))\n\ngoal (1 subgoal):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "case postcondition"], ["proof (state)\nthis:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  \\<not> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>a b x y.\n       (0 < a \\<and>\n        0 < b \\<and>\n        Arith2.gcd A B = Arith2.gcd a b \\<and>\n        2 * A * B = a * x + b * y) \\<and>\n       \\<not> a \\<noteq> b \\<Longrightarrow>\n       a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "then"], ["proof (chain)\npicking this:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  \\<not> a \\<noteq> b", "show ?case"], ["proof (prove)\nusing this:\n  (0 < a \\<and>\n   0 < b \\<and>\n   Arith2.gcd A B = Arith2.gcd a b \\<and> 2 * A * B = a * x + b * y) \\<and>\n  \\<not> a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)", "by (simp add: distribs gcd_nnn)"], ["proof (state)\nthis:\n  a = Arith2.gcd A B \\<and> 2 * A * B = a * (x + y)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  (0 < ?a2 \\<and>\n   0 < ?b2 \\<and>\n   Arith2.gcd A B = Arith2.gcd ?a2 ?b2 \\<and>\n   2 * A * B = ?a2 * ?x2 + ?b2 * ?y2) \\<and>\n  \\<not> ?a2 \\<noteq> ?b2 \\<Longrightarrow>\n  ?a2 = Arith2.gcd A B \\<and> 2 * A * B = ?a2 * (?x2 + ?y2)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Power by iterated squaring and multiplication\\<close>"], ["", "lemma power_by_mult: \"VARS a b c\n {a=A \\<and> b=B}\n c := (1::nat);\n WHILE b \\<noteq> 0\n INV {A^B = c * a^b}\n DO  WHILE b mod 2 = 0\n     INV {A^B = c * a^b}\n     DO  a := a*a; b := b div 2 OD;\n     c := c*a; b := b - 1\n OD\n {c = A^B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a = A \\<and> b = B} \n     c := 1;\n     WHILE b \\<noteq> 0 INV {A ^ B = c * a ^ b} \n      VAR {\\<lambda>(a, b, c). 0} \n      DO WHILE b mod 2 = 0 INV {A ^ B = c * a ^ b} \n          VAR {\\<lambda>(a, b, c). 0} \n          DO a := a * a; b := b div 2 OD;\n         c := c * a; b := b - 1 \n      OD \n     {c = A ^ B}", "proof casified_vcg_simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0 \\<Longrightarrow>\n       c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "case while"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0 \\<Longrightarrow>\n       c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0 \\<Longrightarrow>\n       c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "case while"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0 \\<Longrightarrow>\n       c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "case postcondition"], ["proof (state)\nthis:\n  A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0 \\<Longrightarrow>\n       c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "then"], ["proof (chain)\npicking this:\n  A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0", "show ?case"], ["proof (prove)\nusing this:\n  A ^ B = c * a ^ b \\<and> b mod 2 = Suc 0\n\ngoal (1 subgoal):\n 1. c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)", "by (cases b) simp_all"], ["proof (state)\nthis:\n  c = 0 \\<or> a ^ b = a * a ^ (b - Suc 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Factorial\\<close>"], ["", "lemma factorial: \"VARS a b\n {a=A}\n b := 1;\n WHILE a \\<noteq> 0\n INV {fac A = b * fac a}\n DO b := b*a; a := a - 1 OD\n {b = fac A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a = A} \n     b := 1;\n     WHILE a \\<noteq> 0 INV {fac A = b * fac a}  VAR {\\<lambda>(a, b). 0} \n      DO b := b * a; a := a - 1 OD \n     {b = fac A}", "apply vcg_simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       fac A = b * fac a \\<and> 0 < a \\<Longrightarrow>\n       b = 0 \\<or> fac a = a * fac (a - Suc 0)", "apply(clarsimp split: nat_diff_split)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"VARS i f\n {True}\n i := (1::nat); f := 1;\n WHILE i \\<le> n INV {f = fac(i - 1) \\<and> 1 \\<le> i \\<and> i \\<le> n+1}\n DO f := f*i; i := i+1 OD\n {f = fac n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {True} \n     i := 1;\n     f := 1;\n     WHILE i \\<le> n\n      INV {f = fac (i - 1) \\<and> 1 \\<le> i \\<and> i \\<le> n + 1} \n      VAR {\\<lambda>(i, f). 0} \n      DO f := f * i; i := i + 1 OD \n     {f = fac n}", "proof casified_vcg_simp"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "case while"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "case basic"], ["proof (state)\nthis:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) * i = fac i\n 2. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "then"], ["proof (chain)\npicking this:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n", "show ?case"], ["proof (prove)\nusing this:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> i \\<le> n\n\ngoal (1 subgoal):\n 1. fac (i - Suc 0) * i = fac i", "by (induct i) simp_all"], ["proof (state)\nthis:\n  fac (i - Suc 0) * i = fac i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "}"], ["proof (state)\nthis:\n  Suc 0 \\<le> ?i2 \\<and>\n  ?i2 \\<le> Suc n \\<and> ?i2 \\<le> n \\<Longrightarrow>\n  fac (?i2 - Suc 0) * ?i2 = fac ?i2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "case postcondition"], ["proof (state)\nthis:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "then"], ["proof (chain)\npicking this:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> \\<not> i \\<le> n", "have \"i = Suc n\""], ["proof (prove)\nusing this:\n  Suc 0 \\<le> i \\<and> i \\<le> Suc n \\<and> \\<not> i \\<le> n\n\ngoal (1 subgoal):\n 1. i = Suc n", "by simp"], ["proof (state)\nthis:\n  i = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       Suc 0 \\<le> i \\<and>\n       i \\<le> Suc n \\<and> \\<not> i \\<le> n \\<Longrightarrow>\n       fac (i - Suc 0) = fac n", "then"], ["proof (chain)\npicking this:\n  i = Suc n", "show ?case"], ["proof (prove)\nusing this:\n  i = Suc n\n\ngoal (1 subgoal):\n 1. fac (i - Suc 0) = fac n", "by simp"], ["proof (state)\nthis:\n  fac (i - Suc 0) = fac n\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  Suc 0 \\<le> ?i2 \\<and>\n  ?i2 \\<le> Suc n \\<and> \\<not> ?i2 \\<le> n \\<Longrightarrow>\n  fac (?i2 - Suc 0) = fac n\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Quicksort\\<close>"], ["", "text \\<open>\n  The `partition' procedure for quicksort.\n  `A' is the array to be sorted (modelled as a list).\n  Elements of A must be of class order to infer at the end\n  that the elements between u and l are equal to pivot.\n\n  Ambiguity warnings of parser are due to := being used\n  both for assignment and list update.\n\\<close>"], ["", "lemma Partition:\n  fixes pivot\n  defines \"leq \\<equiv> \\<lambda>A i. \\<forall>k. k<i \\<longrightarrow> A!k \\<le> pivot\"\n  defines \"geq \\<equiv> \\<lambda>A i. \\<forall>k. i<k \\<and> k<length A \\<longrightarrow> pivot \\<le> A!k\"\n  shows \"\n   VARS A u l\n   {0 < length(A::('a::order)list)}\n   l := 0; u := length A - Suc 0;\n   WHILE l \\<le> u\n    INV {leq A l \\<and> geq A u \\<and> u<length A \\<and> l\\<le>length A}\n    DO WHILE l < length A \\<and> A!l \\<le> pivot\n        INV {leq A l \\<and> geq A u \\<and> u<length A \\<and> l\\<le>length A}\n        DO l := l+1 OD;\n       WHILE 0 < u \\<and> pivot \\<le> A!u\n        INV {leq A l \\<and> geq A u  \\<and> u<length A \\<and> l\\<le>length A}\n        DO u := u - 1 OD;\n       IF l \\<le> u THEN A := A[l := A!u, u := A!l] ELSE SKIP FI\n    OD\n   {leq A u \\<and> (\\<forall>k. u<k \\<and> k<l \\<longrightarrow> A!k = pivot) \\<and> geq A l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0 < length A} \n     l := 0;\n     u := length A - Suc 0;\n     WHILE l \\<le> u\n      INV {leq A l \\<and>\n           geq A u \\<and> u < length A \\<and> l \\<le> length A} \n      VAR {\\<lambda>(A, u, l). 0} \n      DO WHILE l < length A \\<and> A ! l \\<le> pivot\n          INV {leq A l \\<and>\n               geq A u \\<and> u < length A \\<and> l \\<le> length A} \n          VAR {\\<lambda>(A, u, l). 0} \n          DO l := l + 1 OD;\n         WHILE 0 < u \\<and> pivot \\<le> A ! u\n          INV {leq A l \\<and>\n               geq A u \\<and> u < length A \\<and> l \\<le> length A} \n          VAR {\\<lambda>(A, u, l). 0} \n          DO u := u - 1 OD;\n         IF l \\<le> u THEN A := A[l := A ! u, u := A ! l]  ELSE SKIP FI \n      OD \n     {leq A u \\<and>\n      (\\<forall>k.\n          u < k \\<and> k < l \\<longrightarrow> A ! k = pivot) \\<and>\n      geq A l}", "unfolding leq_def geq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0 < length A} \n     l := 0;\n     u := length A - Suc 0;\n     WHILE l \\<le> u\n      INV {(\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n           (\\<forall>k.\n               u < k \\<and> k < length A \\<longrightarrow>\n               pivot \\<le> A ! k) \\<and>\n           u < length A \\<and> l \\<le> length A} \n      VAR {\\<lambda>(A, u, l). 0} \n      DO WHILE l < length A \\<and> A ! l \\<le> pivot\n          INV {(\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n               (\\<forall>k.\n                   u < k \\<and> k < length A \\<longrightarrow>\n                   pivot \\<le> A ! k) \\<and>\n               u < length A \\<and> l \\<le> length A} \n          VAR {\\<lambda>(A, u, l). 0} \n          DO l := l + 1 OD;\n         WHILE 0 < u \\<and> pivot \\<le> A ! u\n          INV {(\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n               (\\<forall>k.\n                   u < k \\<and> k < length A \\<longrightarrow>\n                   pivot \\<le> A ! k) \\<and>\n               u < length A \\<and> l \\<le> length A} \n          VAR {\\<lambda>(A, u, l). 0} \n          DO u := u - 1 OD;\n         IF l \\<le> u THEN A := A[l := A ! u, u := A ! l]  ELSE SKIP FI \n      OD \n     {(\\<forall>k<u. A ! k \\<le> pivot) \\<and>\n      (\\<forall>k.\n          u < k \\<and> k < l \\<longrightarrow> A ! k = pivot) \\<and>\n      (\\<forall>k.\n          l < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k)}", "proof casified_vcg_simp"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>A.\n       A \\<noteq> [] \\<Longrightarrow>\n       \\<forall>k.\n          length A - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n          pivot \\<le> A ! k\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 4. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "case basic"], ["proof (state)\nthis:\n  A \\<noteq> []\n\ngoal (4 subgoals):\n 1. \\<And>A.\n       A \\<noteq> [] \\<Longrightarrow>\n       \\<forall>k.\n          length A - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n          pivot \\<le> A ! k\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 4. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "then"], ["proof (chain)\npicking this:\n  A \\<noteq> []", "show ?case"], ["proof (prove)\nusing this:\n  A \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<forall>k.\n       length A - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n       pivot \\<le> A ! k", "by auto"], ["proof (state)\nthis:\n  \\<forall>k.\n     length A - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n     pivot \\<le> A ! k\n\ngoal (3 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "case while"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "{"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "case postcondition"], ["proof (state)\nthis:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> \\<not> l \\<le> u\n\ngoal (3 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A\n 3. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and> \\<not> l \\<le> u \\<Longrightarrow>\n       \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "then"], ["proof (chain)\npicking this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> \\<not> l \\<le> u", "show ?case"], ["proof (prove)\nusing this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> \\<not> l \\<le> u\n\ngoal (1 subgoal):\n 1. \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot", "by (force simp: nth_list_update)"], ["proof (state)\nthis:\n  \\<forall>k. u < k \\<and> k < l \\<longrightarrow> A ! k = pivot\n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case while"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case basic"], ["proof (state)\nthis:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and>\n  l \\<le> length A \\<and> l < length A \\<and> A ! l \\<le> pivot\n\ngoal (2 subgoals):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       l < length A \\<and> A ! l \\<le> pivot \\<Longrightarrow>\n       \\<forall>k<Suc l. A ! k \\<le> pivot\n 2. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "then"], ["proof (chain)\npicking this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and>\n  l \\<le> length A \\<and> l < length A \\<and> A ! l \\<le> pivot", "show ?case"], ["proof (prove)\nusing this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and>\n  l \\<le> length A \\<and> l < length A \\<and> A ! l \\<le> pivot\n\ngoal (1 subgoal):\n 1. \\<forall>k<Suc l. A ! k \\<le> pivot", "by (blast elim!: less_SucE intro: Suc_leI)"], ["proof (state)\nthis:\n  \\<forall>k<Suc l. A ! k \\<le> pivot\n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  ?l2 < length ?A2 \\<and> ?A2 ! ?l2 \\<le> pivot \\<Longrightarrow>\n  \\<forall>k<Suc ?l2. ?A2 ! k \\<le> pivot\n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  ?l2 < length ?A2 \\<and> ?A2 ! ?l2 \\<le> pivot \\<Longrightarrow>\n  \\<forall>k<Suc ?l2. ?A2 ! k \\<le> pivot\n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case whilea"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "{"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case invariant"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "{"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "case basic"], ["proof (state)\nthis:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> 0 < u \\<and> pivot \\<le> A ! u\n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "have lem: \"\\<And>m n. m - Suc 0 < n \\<Longrightarrow> m < Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m n. m - Suc 0 < n \\<Longrightarrow> m < Suc n", "by linarith"], ["proof (state)\nthis:\n  ?m - Suc 0 < ?n \\<Longrightarrow> ?m < Suc ?n\n\ngoal (1 subgoal):\n 1. \\<And>A u l.\n       (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n       (\\<forall>k.\n           u < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u < length A \\<and>\n       l \\<le> length A \\<and>\n       0 < u \\<and> pivot \\<le> A ! u \\<Longrightarrow>\n       (\\<forall>k.\n           u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n           pivot \\<le> A ! k) \\<and>\n       u - Suc 0 < length A", "from basic"], ["proof (chain)\npicking this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> 0 < u \\<and> pivot \\<le> A ! u", "show ?case"], ["proof (prove)\nusing this:\n  (\\<forall>k<l. A ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      u < k \\<and> k < length A \\<longrightarrow> pivot \\<le> A ! k) \\<and>\n  u < length A \\<and> l \\<le> length A \\<and> 0 < u \\<and> pivot \\<le> A ! u\n\ngoal (1 subgoal):\n 1. (\\<forall>k.\n        u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n        pivot \\<le> A ! k) \\<and>\n    u - Suc 0 < length A", "by (blast elim!: less_SucE intro: less_imp_diff_less dest: lem)"], ["proof (state)\nthis:\n  (\\<forall>k.\n      u - Suc 0 < k \\<and> k < length A \\<longrightarrow>\n      pivot \\<le> A ! k) \\<and>\n  u - Suc 0 < length A\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  0 < ?u2 \\<and> pivot \\<le> ?A2 ! ?u2 \\<Longrightarrow>\n  (\\<forall>k.\n      ?u2 - Suc 0 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 - Suc 0 < length ?A2\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  0 < ?u2 \\<and> pivot \\<le> ?A2 ! ?u2 \\<Longrightarrow>\n  (\\<forall>k.\n      ?u2 - Suc 0 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 - Suc 0 < length ?A2\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  0 < ?u2 \\<and> pivot \\<le> ?A2 ! ?u2 \\<Longrightarrow>\n  (\\<forall>k.\n      ?u2 - Suc 0 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 - Suc 0 < length ?A2\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  (\\<forall>k<?l2. ?A2 ! k \\<le> pivot) \\<and>\n  (\\<forall>k.\n      ?u2 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 < length ?A2 \\<and>\n  ?l2 \\<le> length ?A2 \\<and>\n  0 < ?u2 \\<and> pivot \\<le> ?A2 ! ?u2 \\<Longrightarrow>\n  (\\<forall>k.\n      ?u2 - Suc 0 < k \\<and> k < length ?A2 \\<longrightarrow>\n      pivot \\<le> ?A2 ! k) \\<and>\n  ?u2 - Suc 0 < length ?A2\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}