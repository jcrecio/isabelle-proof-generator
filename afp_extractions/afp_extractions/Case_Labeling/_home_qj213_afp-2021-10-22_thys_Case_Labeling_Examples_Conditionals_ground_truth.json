{"file_name": "/home/qj213/afp-2021-10-22/thys/Case_Labeling/Examples/Conditionals.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Case_Labeling", "problem_names": ["lemma DC_conj:\n    assumes \"C\\<langle>inp,ct,outp': a\\<rangle>\" \"C\\<langle>outp',ct,outp: b\\<rangle>\"\n    shows \"C\\<langle>inp,ct,outp: a \\<and> b\\<rangle>\"", "lemma DC_if:\n    fixes ct defines \"ct' \\<equiv> \\<lambda>pos name. (name, pos,[]) # ct\"\n    assumes \"H\\<langle>ct' inp ''then'': a\\<rangle> \\<Longrightarrow> C\\<langle>Suc inp,ct' inp ''then'', outp': b\\<rangle>\"\n    assumes \"H\\<langle>ct' outp' ''else'': \\<not>a\\<rangle> \\<Longrightarrow> C\\<langle>Suc outp',ct' outp' ''else'', outp: c\\<rangle>\"\n    shows \"C\\<langle>inp,ct,outp: if a then b else c\\<rangle>\"", "lemma DC_final:\n    assumes \"V\\<langle>(''g'',inp,[]), ct: a\\<rangle>\"\n    shows \"C\\<langle>inp,ct,Suc inp: a\\<rangle>\"", "lemma\n  assumes a: \"a\"\n    and d: \"b \\<Longrightarrow> c \\<Longrightarrow> d\"\n    and d': \"b \\<Longrightarrow> c \\<Longrightarrow> d'\"\n    and e: \"b \\<Longrightarrow> \\<not>c \\<Longrightarrow> e\"\n    and f: \"\\<not>b \\<Longrightarrow> f\"\n  shows \"a \\<and> (if b then (if c then d \\<and> d' else e) else f)\"", "lemma\n  assumes b\n  shows \"(if a then b else b) \\<and> b\"", "lemma\n  assumes \"a \\<Longrightarrow> b\" \"\\<not>a \\<Longrightarrow> c\" \"d\"\n  shows \"(if a then b else c) \\<and> d\""], "translations": [["", "lemma DC_conj:\n    assumes \"C\\<langle>inp,ct,outp': a\\<rangle>\" \"C\\<langle>outp',ct,outp: b\\<rangle>\"\n    shows \"C\\<langle>inp,ct,outp: a \\<and> b\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct outp (a \\<and> b)", "using assms"], ["proof (prove)\nusing this:\n  Case_Labeling.CTXT inp ct outp' a\n  Case_Labeling.CTXT outp' ct outp b\n\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct outp (a \\<and> b)", "unfolding LABEL_simps"], ["proof (prove)\nusing this:\n  a\n  b\n\ngoal (1 subgoal):\n 1. a \\<and> b", "by auto"], ["", "lemma DC_if:\n    fixes ct defines \"ct' \\<equiv> \\<lambda>pos name. (name, pos,[]) # ct\"\n    assumes \"H\\<langle>ct' inp ''then'': a\\<rangle> \\<Longrightarrow> C\\<langle>Suc inp,ct' inp ''then'', outp': b\\<rangle>\"\n    assumes \"H\\<langle>ct' outp' ''else'': \\<not>a\\<rangle> \\<Longrightarrow> C\\<langle>Suc outp',ct' outp' ''else'', outp: c\\<rangle>\"\n    shows \"C\\<langle>inp,ct,outp: if a then b else c\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct outp (if a then b else c)", "using assms(2-)"], ["proof (prove)\nusing this:\n  Case_Labeling.HIER (ct' inp ''then'') a \\<Longrightarrow>\n  Case_Labeling.CTXT (Suc inp) (ct' inp ''then'') outp' b\n  Case_Labeling.HIER (ct' outp' ''else'') (\\<not> a) \\<Longrightarrow>\n  Case_Labeling.CTXT (Suc outp') (ct' outp' ''else'') outp c\n\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct outp (if a then b else c)", "unfolding LABEL_simps"], ["proof (prove)\nusing this:\n  a \\<Longrightarrow> b\n  \\<not> a \\<Longrightarrow> c\n\ngoal (1 subgoal):\n 1. if a then b else c", "by auto"], ["", "lemma DC_final:\n    assumes \"V\\<langle>(''g'',inp,[]), ct: a\\<rangle>\"\n    shows \"C\\<langle>inp,ct,Suc inp: a\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct (Suc inp) a", "using assms"], ["proof (prove)\nusing this:\n  Case_Labeling.VC ((''g'', inp, []) # ct) a\n\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT inp ct (Suc inp) a", "unfolding LABEL_simps"], ["proof (prove)\nusing this:\n  a\n\ngoal (1 subgoal):\n 1. a", "by auto"], ["", "end"], ["", "method vcg_dc = (intro DC_conj DC_if; rule DC_final)"], ["", "lemma\n  assumes a: \"a\"\n    and d: \"b \\<Longrightarrow> c \\<Longrightarrow> d\"\n    and d': \"b \\<Longrightarrow> c \\<Longrightarrow> d'\"\n    and e: \"b \\<Longrightarrow> \\<not>c \\<Longrightarrow> e\"\n    and f: \"\\<not>b \\<Longrightarrow> f\"\n  shows \"a \\<and> (if b then (if c then d \\<and> d' else e) else f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<and> (if b then if c then d \\<and> d' else e else f)", "apply (rule Initial_Label)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT 0 [] ?outp\n     (a \\<and> (if b then if c then d \\<and> d' else e else f))", "apply vcg_dc"], ["proof (prove)\ngoal (5 subgoals):\n 1. Case_Labeling.VC [(''g'', 0, [])] a\n 2. \\<lbrakk>Case_Labeling.HIER [(''then'', Suc 0, [])] b;\n     Case_Labeling.HIER [(''then'', Suc (Suc 0), []), (''then'', Suc 0, [])]\n      c\\<rbrakk>\n    \\<Longrightarrow> Case_Labeling.VC\n                       [(''g'', Suc (Suc (Suc 0)), []),\n                        (''then'', Suc (Suc 0), []), (''then'', Suc 0, [])]\n                       d\n 3. \\<lbrakk>Case_Labeling.HIER [(''then'', Suc 0, [])] b;\n     Case_Labeling.HIER [(''then'', Suc (Suc 0), []), (''then'', Suc 0, [])]\n      c\\<rbrakk>\n    \\<Longrightarrow> Case_Labeling.VC\n                       [(''g'', Suc (Suc (Suc (Suc 0))), []),\n                        (''then'', Suc (Suc 0), []), (''then'', Suc 0, [])]\n                       d'\n 4. \\<lbrakk>Case_Labeling.HIER [(''then'', Suc 0, [])] b;\n     Case_Labeling.HIER\n      [(''else'', Suc (Suc (Suc (Suc (Suc 0)))), []), (''then'', Suc 0, [])]\n      (\\<not> c)\\<rbrakk>\n    \\<Longrightarrow> Case_Labeling.VC\n                       [(''g'', Suc (Suc (Suc (Suc (Suc (Suc 0))))), []),\n                        (''else'', Suc (Suc (Suc (Suc (Suc 0)))), []),\n                        (''then'', Suc 0, [])]\n                       e\n 5. Case_Labeling.HIER\n     [(''else'', Suc (Suc (Suc (Suc (Suc (Suc (Suc 0)))))), [])]\n     (\\<not> b) \\<Longrightarrow>\n    Case_Labeling.VC\n     [(''g'', Suc (Suc (Suc (Suc (Suc (Suc (Suc (Suc 0))))))), []),\n      (''else'', Suc (Suc (Suc (Suc (Suc (Suc (Suc 0)))))), [])]\n     f", "proof casify"], ["proof (state)\ngoal (5 subgoals):\n 1. a\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 3. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 4. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 5. \\<not> b \\<Longrightarrow> f", "case g"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. a\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 3. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 4. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 5. \\<not> b \\<Longrightarrow> f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a", "by (fact a)"], ["proof (state)\nthis:\n  a\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "case \"then\""], ["proof (state)\nthis:\n  b\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "note b = \\<open>b\\<close>"], ["proof (state)\nthis:\n  b\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "{"], ["proof (state)\nthis:\n  b\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "case \"then\""], ["proof (state)\nthis:\n  c\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "note c = \\<open>c\\<close>"], ["proof (state)\nthis:\n  c\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "{"], ["proof (state)\nthis:\n  c\n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "case g"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d\n 2. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 3. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 4. \\<not> b \\<Longrightarrow> f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. d", "using b c"], ["proof (prove)\nusing this:\n  b\n  c\n\ngoal (1 subgoal):\n 1. d", "by (fact d)"], ["proof (state)\nthis:\n  d\n\ngoal (3 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 2. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 3. \\<not> b \\<Longrightarrow> f", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 2. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 3. \\<not> b \\<Longrightarrow> f", "case ga"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<lbrakk>b; c\\<rbrakk> \\<Longrightarrow> d'\n 2. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 3. \\<not> b \\<Longrightarrow> f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. d'", "using b c"], ["proof (prove)\nusing this:\n  b\n  c\n\ngoal (1 subgoal):\n 1. d'", "by (fact d')"], ["proof (state)\nthis:\n  d'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "}"], ["proof (state)\nthis:\n  d'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "case else"], ["proof (state)\nthis:\n  \\<not> c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "{"], ["proof (state)\nthis:\n  \\<not> c\n\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "case g"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<lbrakk>b; \\<not> c\\<rbrakk> \\<Longrightarrow> e\n 2. \\<not> b \\<Longrightarrow> f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. e", "using \"then\" else"], ["proof (prove)\nusing this:\n  b\n  \\<not> c\n\ngoal (1 subgoal):\n 1. e", "by (fact e)"], ["proof (state)\nthis:\n  e\n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "}"], ["proof (state)\nthis:\n  e\n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "}"], ["proof (state)\nthis:\n  \\<not> c \\<Longrightarrow> e\n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "case \"else\""], ["proof (state)\nthis:\n  \\<not> b\n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "{"], ["proof (state)\nthis:\n  \\<not> b\n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "case g"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<not> b \\<Longrightarrow> f", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f", "using else"], ["proof (prove)\nusing this:\n  \\<not> b\n\ngoal (1 subgoal):\n 1. f", "by (fact f)"], ["proof (state)\nthis:\n  f\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  f\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Protecting similar subgoals\\<close>"], ["", "text \\<open>\n  The proof below fails if the @{verbatim disambig_subgoals} option is omitted: all three\n  subgoals have the same conclusion and can be discharged without using their assumptions.\n  If the case @{verbatim g} is solved first, it discharges instead the subgoal @{prop \"a \\<Longrightarrow> b\"},\n  making the case @{command then} fail afterwards.\n\n  The @{verbatim disambig_subgoals} options prevents this by inserting vacuous assumptions.\n\\<close>"], ["", "lemma\n  assumes b\n  shows \"(if a then b else b) \\<and> b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a then b else b) \\<and> b", "apply (rule Initial_Label)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT 0 [] ?outp ((if a then b else b) \\<and> b)", "apply vcg_dc"], ["proof (prove)\ngoal (3 subgoals):\n 1. Case_Labeling.HIER [(''then'', 0, [])] a \\<Longrightarrow>\n    Case_Labeling.VC [(''g'', Suc 0, []), (''then'', 0, [])] b\n 2. Case_Labeling.HIER [(''else'', Suc (Suc 0), [])]\n     (\\<not> a) \\<Longrightarrow>\n    Case_Labeling.VC\n     [(''g'', Suc (Suc (Suc 0)), []), (''else'', Suc (Suc 0), [])] b\n 3. Case_Labeling.VC [(''g'', Suc (Suc (Suc (Suc 0))), [])] b", "proof (casify (disambig_subgoals))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b\n 3. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> b", "case g"], ["proof (state)\nthis:\n  Case_Labeling.DISAMBIG 3\n\ngoal (3 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b\n 3. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. b", "by (fact \\<open>b\\<close>)"], ["proof (state)\nthis:\n  b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "case \"then\""], ["proof (state)\nthis:\n  a\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "case g"], ["proof (state)\nthis:\n  Case_Labeling.DISAMBIG 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. b", "by (fact \\<open>b\\<close>)"], ["proof (state)\nthis:\n  b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "case \"else\""], ["proof (state)\nthis:\n  \\<not> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "case g"], ["proof (state)\nthis:\n  Case_Labeling.DISAMBIG 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. b", "by (fact \\<open>b\\<close>)"], ["proof (state)\nthis:\n  b\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Unnamed Cases\\<close>"], ["", "lemma\n  assumes \"a \\<Longrightarrow> b\" \"\\<not>a \\<Longrightarrow> c\" \"d\"\n  shows \"(if a then b else c) \\<and> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a then b else c) \\<and> d", "apply (rule Initial_Label)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Case_Labeling.CTXT 0 [] ?outp ((if a then b else c) \\<and> d)", "apply vcg_dc"], ["proof (prove)\ngoal (3 subgoals):\n 1. Case_Labeling.HIER [(''then'', 0, [])] a \\<Longrightarrow>\n    Case_Labeling.VC [(''g'', Suc 0, []), (''then'', 0, [])] b\n 2. Case_Labeling.HIER [(''else'', Suc (Suc 0), [])]\n     (\\<not> a) \\<Longrightarrow>\n    Case_Labeling.VC\n     [(''g'', Suc (Suc (Suc 0)), []), (''else'', Suc (Suc 0), [])] c\n 3. Case_Labeling.VC [(''g'', Suc (Suc (Suc (Suc 0))), [])] d", "apply (simp_all only: LABEL_simps)[2]"], ["proof (prove)\ngoal (3 subgoals):\n 1. a \\<Longrightarrow> b\n 2. \\<not> a \\<Longrightarrow> c\n 3. Case_Labeling.VC [(''g'', Suc (Suc (Suc (Suc 0))), [])] d", "proof (casify (disambig_subgoals))"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> c\n 3. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "case unnamed"], ["proof (state)\nthis:\n  a\n  Case_Labeling.DISAMBIG 1\n\ngoal (3 subgoals):\n 1. \\<lbrakk>a; Case_Labeling.DISAMBIG 1\\<rbrakk> \\<Longrightarrow> b\n 2. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> c\n 3. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "from \\<open>a\\<close>"], ["proof (chain)\npicking this:\n  a", "show ?case"], ["proof (prove)\nusing this:\n  a\n\ngoal (1 subgoal):\n 1. b", "by fact"], ["proof (state)\nthis:\n  b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> c\n 2. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> c\n 2. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "case unnameda"], ["proof (state)\nthis:\n  \\<not> a\n  Case_Labeling.DISAMBIG 2\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<not> a; Case_Labeling.DISAMBIG 2\\<rbrakk> \\<Longrightarrow> c\n 2. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "from \\<open>\\<not>a\\<close>"], ["proof (chain)\npicking this:\n  \\<not> a", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> a\n\ngoal (1 subgoal):\n 1. c", "by fact"], ["proof (state)\nthis:\n  c\n\ngoal (1 subgoal):\n 1. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "case g"], ["proof (state)\nthis:\n  Case_Labeling.DISAMBIG 3\n\ngoal (1 subgoal):\n 1. Case_Labeling.DISAMBIG 3 \\<Longrightarrow> d", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. d", "by fact"], ["proof (state)\nthis:\n  d\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}