{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordered_Resolution_Prover/Ground_Resolution_Model.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordered_Resolution_Prover", "problem_names": ["lemma production_unfold:\n  \"production C = {A. C \\<in> N \\<and> C \\<noteq> {#} \\<and> Max_mset C = Pos A \\<and> \\<not> interp C \\<Turnstile> C \\<and> S C = {#}}\"", "lemma producesD: \"produces C A \\<Longrightarrow> C \\<in> N \\<and> C \\<noteq> {#} \\<and> Pos A = Max_mset C \\<and> \\<not> interp C \\<Turnstile> C \\<and> S C = {#}\"", "lemma interp_subseteq_Interp[simp]: \"interp C \\<subseteq> Interp C\"", "lemma Interp_as_UNION: \"Interp C = (\\<Union>D \\<in> {D. D \\<le> C}. production D)\"", "lemma productive_not_empty: \"productive C \\<Longrightarrow> C \\<noteq> {#}\"", "lemma productive_imp_produces_Max_literal: \"productive C \\<Longrightarrow> produces C (atm_of (Max_mset C))\"", "lemma productive_imp_produces_Max_atom: \"productive C \\<Longrightarrow> produces C (Max (atms_of C))\"", "lemma produces_imp_Max_literal: \"produces C A \\<Longrightarrow> A = atm_of (Max_mset C)\"", "lemma produces_imp_Max_atom: \"produces C A \\<Longrightarrow> A = Max (atms_of C)\"", "lemma produces_imp_Pos_in_lits: \"produces C A \\<Longrightarrow> Pos A \\<in># C\"", "lemma productive_in_N: \"productive C \\<Longrightarrow> C \\<in> N\"", "lemma produces_imp_atms_leq: \"produces C A \\<Longrightarrow> B \\<in> atms_of C \\<Longrightarrow> B \\<le> A\"", "lemma produces_imp_neg_notin_lits: \"produces C A \\<Longrightarrow> \\<not> Neg A \\<in># C\"", "lemma less_eq_imp_interp_subseteq_interp: \"C \\<le> D \\<Longrightarrow> interp C \\<subseteq> interp D\"", "lemma less_eq_imp_interp_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> interp C \\<subseteq> Interp D\"", "lemma less_imp_production_subseteq_interp: \"C < D \\<Longrightarrow> production C \\<subseteq> interp D\"", "lemma less_eq_imp_production_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> production C \\<subseteq> Interp D\"", "lemma less_imp_Interp_subseteq_interp: \"C < D \\<Longrightarrow> Interp C \\<subseteq> interp D\"", "lemma less_eq_imp_Interp_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> Interp C \\<subseteq> Interp D\"", "lemma not_Interp_to_interp_imp_less: \"A \\<notin> Interp C \\<Longrightarrow> A \\<in> interp D \\<Longrightarrow> C < D\"", "lemma not_interp_to_interp_imp_less: \"A \\<notin> interp C \\<Longrightarrow> A \\<in> interp D \\<Longrightarrow> C < D\"", "lemma not_Interp_to_Interp_imp_less: \"A \\<notin> Interp C \\<Longrightarrow> A \\<in> Interp D \\<Longrightarrow> C < D\"", "lemma not_interp_to_Interp_imp_le: \"A \\<notin> interp C \\<Longrightarrow> A \\<in> Interp D \\<Longrightarrow> C \\<le> D\"", "lemma interp_subseteq_INTERP: \"interp C \\<subseteq> INTERP\"", "lemma production_subseteq_INTERP: \"production C \\<subseteq> INTERP\"", "lemma Interp_subseteq_INTERP: \"Interp C \\<subseteq> INTERP\"", "lemma produces_imp_in_interp:\n  assumes a_in_c: \"Neg A \\<in># C\" and d: \"produces D A\"\n  shows \"A \\<in> interp C\"", "lemma neg_notin_Interp_not_produce: \"Neg A \\<in># C \\<Longrightarrow> A \\<notin> Interp D \\<Longrightarrow> C \\<le> D \\<Longrightarrow> \\<not> produces D'' A\"", "lemma in_production_imp_produces: \"A \\<in> production C \\<Longrightarrow> produces C A\"", "lemma not_produces_imp_notin_production: \"\\<not> produces C A \\<Longrightarrow> A \\<notin> production C\"", "lemma not_produces_imp_notin_interp: \"(\\<And>D. \\<not> produces D A) \\<Longrightarrow> A \\<notin> interp C\"", "lemma Interp_imp_general:\n  assumes\n    c_le_d: \"C \\<le> D\" and\n    d_lt_d': \"D < D'\" and\n    c_at_d: \"Interp D \\<Turnstile> C\" and\n    subs: \"interp D' \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"(\\<Union>C \\<in> CC. production C) \\<Turnstile> C\"", "lemma Interp_imp_interp: \"C \\<le> D \\<Longrightarrow> D < D' \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> interp D' \\<Turnstile> C\"", "lemma Interp_imp_Interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> Interp D' \\<Turnstile> C\"", "lemma Interp_imp_INTERP: \"C \\<le> D \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> INTERP \\<Turnstile> C\"", "lemma interp_imp_general:\n  assumes\n    c_le_d: \"C \\<le> D\" and\n    d_le_d': \"D \\<le> D'\" and\n    c_at_d: \"interp D \\<Turnstile> C\" and\n    subs: \"interp D' \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"(\\<Union>C \\<in> CC. production C) \\<Turnstile> C\"", "lemma interp_imp_interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> interp D' \\<Turnstile> C\"", "lemma interp_imp_Interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> Interp D' \\<Turnstile> C\"", "lemma interp_imp_INTERP: \"C \\<le> D \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> INTERP \\<Turnstile> C\"", "lemma productive_imp_not_interp: \"productive C \\<Longrightarrow> \\<not> interp C \\<Turnstile> C\"", "lemma productive_imp_Interp:\n  assumes \"productive C\"\n  shows \"Interp C \\<Turnstile> C\"", "lemma productive_imp_INTERP: \"productive C \\<Longrightarrow> INTERP \\<Turnstile> C\"", "lemma max_pos_imp_Interp:\n  assumes \"C \\<in> N\" and \"C \\<noteq> {#}\" and \"Max_mset C = Pos A\" and \"S C = {#}\"\n  shows \"Interp C \\<Turnstile> C\"", "lemma max_atm_imp_Interp:\n  assumes\n    c_in_n: \"C \\<in> N\" and\n    pos_in: \"Pos A \\<in># C\" and\n    max_atm: \"A = Max (atms_of C)\" and\n    s_c_e: \"S C = {#}\"\n  shows \"Interp C \\<Turnstile> C\"", "lemma not_Interp_imp_general:\n  assumes\n    d'_le_d: \"D' \\<le> D\" and\n    in_n_or_max_gt: \"D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D)\" and\n    d'_at_d: \"\\<not> Interp D \\<Turnstile> D'\" and\n    d_lt_c: \"D < C\" and\n    subs: \"interp C \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"\\<not> (\\<Union>C \\<in> CC. production C) \\<Turnstile> D'\"", "lemma not_Interp_imp_not_interp:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   D < C \\<Longrightarrow> \\<not> interp C \\<Turnstile> D'\"", "lemma not_Interp_imp_not_Interp:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   D < C \\<Longrightarrow> \\<not> Interp C \\<Turnstile> D'\"", "lemma not_Interp_imp_not_INTERP:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   \\<not> INTERP \\<Turnstile> D'\"", "lemma\n  assumes \"D \\<in> N\" and \"\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C\"\n  shows \"interp D \\<Turnstile> C\"", "lemma\n  assumes d: \"D = {#}\" and n: \"N = {D, C}\" and c: \"C = {#Pos A#}\"\n  shows \"D \\<in> N\" and \"\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C\" and \"\\<not> interp D \\<Turnstile> C\""], "translations": [["", "lemma production_unfold:\n  \"production C = {A. C \\<in> N \\<and> C \\<noteq> {#} \\<and> Max_mset C = Pos A \\<and> \\<not> interp C \\<Turnstile> C \\<and> S C = {#}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C =\n    {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}}", "unfolding interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. production C =\n    {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> \\<Union> (production ` {D. D < C}) \\<Turnstile> C \\<and>\n        S C = {#}}", "by (rule production.simps)"], ["", "abbreviation productive :: \"'a clause \\<Rightarrow> bool\" where\n  \"productive C \\<equiv> production C \\<noteq> {}\""], ["", "abbreviation produces :: \"'a clause \\<Rightarrow> 'a \\<Rightarrow> bool\" where\n  \"produces C A \\<equiv> production C = {A}\""], ["", "lemma producesD: \"produces C A \\<Longrightarrow> C \\<in> N \\<and> C \\<noteq> {#} \\<and> Pos A = Max_mset C \\<and> \\<not> interp C \\<Turnstile> C \\<and> S C = {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow>\n    C \\<in> N \\<and>\n    C \\<noteq> {#} \\<and>\n    Pos A = Max_mset C \\<and>\n    \\<not> interp C \\<Turnstile> C \\<and> S C = {#}", "unfolding production_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} =\n    {A} \\<Longrightarrow>\n    C \\<in> N \\<and>\n    C \\<noteq> {#} \\<and>\n    Pos A = Max_mset C \\<and>\n    \\<not> interp C \\<Turnstile> C \\<and> S C = {#}", "by auto"], ["", "definition Interp :: \"'a clause \\<Rightarrow> 'a interp\" where\n  \"Interp C = interp C \\<union> production C\""], ["", "lemma interp_subseteq_Interp[simp]: \"interp C \\<subseteq> Interp C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interp C \\<subseteq> Interp C", "by (simp add: Interp_def)"], ["", "lemma Interp_as_UNION: \"Interp C = (\\<Union>D \\<in> {D. D \\<le> C}. production D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp C = \\<Union> (production ` {D. D \\<le> C})", "unfolding Interp_def interp_def less_eq_multiset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (production ` {D. D < C}) \\<union> production C =\n    \\<Union> (production ` {D. D < C \\<or> D = C})", "by fast"], ["", "lemma productive_not_empty: \"productive C \\<Longrightarrow> C \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow> C \\<noteq> {#}", "unfolding production_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} \\<noteq>\n    {} \\<Longrightarrow>\n    C \\<noteq> {#}", "by simp"], ["", "lemma productive_imp_produces_Max_literal: \"productive C \\<Longrightarrow> produces C (atm_of (Max_mset C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow>\n    production C = {atm_of (Max_mset C)}", "unfolding production_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} \\<noteq>\n    {} \\<Longrightarrow>\n    {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} =\n    {atm_of (Max_mset C)}", "by (auto simp del: atm_of_Max_lit)"], ["", "lemma productive_imp_produces_Max_atom: \"productive C \\<Longrightarrow> produces C (Max (atms_of C))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow>\n    production C = {Max (atms_of C)}", "unfolding atms_of_def Max_atm_of_set_mset_commute[OF productive_not_empty]"], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow>\n    production C = {atm_of (Max_mset C)}", "by (rule productive_imp_produces_Max_literal)"], ["", "lemma produces_imp_Max_literal: \"produces C A \\<Longrightarrow> A = atm_of (Max_mset C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> A = atm_of (Max_mset C)", "using productive_imp_produces_Max_literal"], ["proof (prove)\nusing this:\n  production ?C \\<noteq> {} \\<Longrightarrow>\n  production ?C = {atm_of (Max_mset ?C)}\n\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> A = atm_of (Max_mset C)", "by auto"], ["", "lemma produces_imp_Max_atom: \"produces C A \\<Longrightarrow> A = Max (atms_of C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> A = Max (atms_of C)", "using producesD produces_imp_Max_literal"], ["proof (prove)\nusing this:\n  production ?C = {?A} \\<Longrightarrow>\n  ?C \\<in> N \\<and>\n  ?C \\<noteq> {#} \\<and>\n  Pos ?A = Max_mset ?C \\<and>\n  \\<not> interp ?C \\<Turnstile> ?C \\<and> S ?C = {#}\n  production ?C = {?A} \\<Longrightarrow> ?A = atm_of (Max_mset ?C)\n\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> A = Max (atms_of C)", "by auto"], ["", "lemma produces_imp_Pos_in_lits: \"produces C A \\<Longrightarrow> Pos A \\<in># C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> Pos A \\<in># C", "by (simp add: producesD)"], ["", "lemma productive_in_N: \"productive C \\<Longrightarrow> C \\<in> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow> C \\<in> N", "unfolding production_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} \\<noteq>\n    {} \\<Longrightarrow>\n    C \\<in> N", "by simp"], ["", "lemma produces_imp_atms_leq: \"produces C A \\<Longrightarrow> B \\<in> atms_of C \\<Longrightarrow> B \\<le> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>production C = {A}; B \\<in> atms_of C\\<rbrakk>\n    \\<Longrightarrow> B \\<le> A", "using Max.coboundedI produces_imp_Max_atom"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?a \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?a \\<le> Max ?A\n  production ?C = {?A} \\<Longrightarrow> ?A = Max (atms_of ?C)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>production C = {A}; B \\<in> atms_of C\\<rbrakk>\n    \\<Longrightarrow> B \\<le> A", "by blast"], ["", "lemma produces_imp_neg_notin_lits: \"produces C A \\<Longrightarrow> \\<not> Neg A \\<in># C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C = {A} \\<Longrightarrow> Neg A \\<notin># C", "by (simp add: pos_Max_imp_neg_notin producesD)"], ["", "lemma less_eq_imp_interp_subseteq_interp: \"C \\<le> D \\<Longrightarrow> interp C \\<subseteq> interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow> interp C \\<subseteq> interp D", "unfolding interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow>\n    \\<Union> (production ` {D. D < C})\n    \\<subseteq> \\<Union> (production ` {Da. Da < D})", "by auto (metis order.strict_trans2)"], ["", "lemma less_eq_imp_interp_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> interp C \\<subseteq> Interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow> interp C \\<subseteq> Interp D", "unfolding Interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow>\n    interp C \\<subseteq> interp D \\<union> production D", "using less_eq_imp_interp_subseteq_interp"], ["proof (prove)\nusing this:\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> interp ?D\n\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow>\n    interp C \\<subseteq> interp D \\<union> production D", "by blast"], ["", "lemma less_imp_production_subseteq_interp: \"C < D \\<Longrightarrow> production C \\<subseteq> interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C < D \\<Longrightarrow> production C \\<subseteq> interp D", "unfolding interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C < D \\<Longrightarrow>\n    production C \\<subseteq> \\<Union> (production ` {Da. Da < D})", "by fast"], ["", "lemma less_eq_imp_production_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> production C \\<subseteq> Interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow> production C \\<subseteq> Interp D", "unfolding Interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow>\n    production C \\<subseteq> interp D \\<union> production D", "using less_imp_production_subseteq_interp"], ["proof (prove)\nusing this:\n  ?C < ?D \\<Longrightarrow> production ?C \\<subseteq> interp ?D\n\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow>\n    production C \\<subseteq> interp D \\<union> production D", "by (metis le_imp_less_or_eq le_supI1 sup_ge2)"], ["", "lemma less_imp_Interp_subseteq_interp: \"C < D \\<Longrightarrow> Interp C \\<subseteq> interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C < D \\<Longrightarrow> Interp C \\<subseteq> interp D", "by (simp add: Interp_def less_eq_imp_interp_subseteq_interp less_imp_production_subseteq_interp)"], ["", "lemma less_eq_imp_Interp_subseteq_Interp: \"C \\<le> D \\<Longrightarrow> Interp C \\<subseteq> Interp D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow> Interp C \\<subseteq> Interp D", "using Interp_def less_eq_imp_interp_subseteq_Interp less_eq_imp_production_subseteq_Interp"], ["proof (prove)\nusing this:\n  Interp ?C = interp ?C \\<union> production ?C\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> Interp ?D\n  ?C \\<le> ?D \\<Longrightarrow> production ?C \\<subseteq> Interp ?D\n\ngoal (1 subgoal):\n 1. C \\<le> D \\<Longrightarrow> Interp C \\<subseteq> Interp D", "by auto"], ["", "lemma not_Interp_to_interp_imp_less: \"A \\<notin> Interp C \\<Longrightarrow> A \\<in> interp D \\<Longrightarrow> C < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> Interp C; A \\<in> interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "using less_eq_imp_interp_subseteq_Interp not_less"], ["proof (prove)\nusing this:\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> Interp ?D\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> Interp C; A \\<in> interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "by blast"], ["", "lemma not_interp_to_interp_imp_less: \"A \\<notin> interp C \\<Longrightarrow> A \\<in> interp D \\<Longrightarrow> C < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> interp C; A \\<in> interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "using less_eq_imp_interp_subseteq_interp not_less"], ["proof (prove)\nusing this:\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> interp ?D\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> interp C; A \\<in> interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "by blast"], ["", "lemma not_Interp_to_Interp_imp_less: \"A \\<notin> Interp C \\<Longrightarrow> A \\<in> Interp D \\<Longrightarrow> C < D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> Interp C; A \\<in> Interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "using less_eq_imp_Interp_subseteq_Interp not_less"], ["proof (prove)\nusing this:\n  ?C \\<le> ?D \\<Longrightarrow> Interp ?C \\<subseteq> Interp ?D\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> Interp C; A \\<in> Interp D\\<rbrakk>\n    \\<Longrightarrow> C < D", "by blast"], ["", "lemma not_interp_to_Interp_imp_le: \"A \\<notin> interp C \\<Longrightarrow> A \\<in> Interp D \\<Longrightarrow> C \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> interp C; A \\<in> Interp D\\<rbrakk>\n    \\<Longrightarrow> C \\<le> D", "using less_imp_Interp_subseteq_interp not_less"], ["proof (prove)\nusing this:\n  ?C < ?D \\<Longrightarrow> Interp ?C \\<subseteq> interp ?D\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<notin> interp C; A \\<in> Interp D\\<rbrakk>\n    \\<Longrightarrow> C \\<le> D", "by blast"], ["", "definition INTERP :: \"'a interp\" where\n  \"INTERP = (\\<Union>C \\<in> N. production C)\""], ["", "lemma interp_subseteq_INTERP: \"interp C \\<subseteq> INTERP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interp C \\<subseteq> INTERP", "unfolding interp_def INTERP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (production ` {D. D < C}) \\<subseteq> \\<Union> (production ` N)", "by (auto simp: production_unfold)"], ["", "lemma production_subseteq_INTERP: \"production C \\<subseteq> INTERP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<subseteq> INTERP", "unfolding INTERP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<subseteq> \\<Union> (production ` N)", "using production_unfold"], ["proof (prove)\nusing this:\n  production ?C =\n  {A. ?C \\<in> N \\<and>\n      ?C \\<noteq> {#} \\<and>\n      Max_mset ?C = Pos A \\<and>\n      \\<not> interp ?C \\<Turnstile> ?C \\<and> S ?C = {#}}\n\ngoal (1 subgoal):\n 1. production C \\<subseteq> \\<Union> (production ` N)", "by blast"], ["", "lemma Interp_subseteq_INTERP: \"Interp C \\<subseteq> INTERP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp C \\<subseteq> INTERP", "by (simp add: Interp_def interp_subseteq_INTERP production_subseteq_INTERP)"], ["", "lemma produces_imp_in_interp:\n  assumes a_in_c: \"Neg A \\<in># C\" and d: \"produces D A\"\n  shows \"A \\<in> interp C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> interp C", "by (metis Interp_def Max_pos_neg_less_multiset UnCI a_in_c d\n      not_interp_to_Interp_imp_le not_less producesD singletonI)"], ["", "lemma neg_notin_Interp_not_produce: \"Neg A \\<in># C \\<Longrightarrow> A \\<notin> Interp D \\<Longrightarrow> C \\<le> D \\<Longrightarrow> \\<not> produces D'' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Neg A \\<in># C; A \\<notin> Interp D; C \\<le> D\\<rbrakk>\n    \\<Longrightarrow> production D'' \\<noteq> {A}", "using less_eq_imp_interp_subseteq_Interp produces_imp_in_interp"], ["proof (prove)\nusing this:\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> Interp ?D\n  \\<lbrakk>Neg ?A \\<in># ?C; production ?D = {?A}\\<rbrakk>\n  \\<Longrightarrow> ?A \\<in> interp ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Neg A \\<in># C; A \\<notin> Interp D; C \\<le> D\\<rbrakk>\n    \\<Longrightarrow> production D'' \\<noteq> {A}", "by blast"], ["", "lemma in_production_imp_produces: \"A \\<in> production C \\<Longrightarrow> produces C A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> production C \\<Longrightarrow> production C = {A}", "using productive_imp_produces_Max_atom"], ["proof (prove)\nusing this:\n  production ?C \\<noteq> {} \\<Longrightarrow>\n  production ?C = {Max (atms_of ?C)}\n\ngoal (1 subgoal):\n 1. A \\<in> production C \\<Longrightarrow> production C = {A}", "by fastforce"], ["", "lemma not_produces_imp_notin_production: \"\\<not> produces C A \\<Longrightarrow> A \\<notin> production C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {A} \\<Longrightarrow> A \\<notin> production C", "using in_production_imp_produces"], ["proof (prove)\nusing this:\n  ?A \\<in> production ?C \\<Longrightarrow> production ?C = {?A}\n\ngoal (1 subgoal):\n 1. production C \\<noteq> {A} \\<Longrightarrow> A \\<notin> production C", "by blast"], ["", "lemma not_produces_imp_notin_interp: \"(\\<And>D. \\<not> produces D A) \\<Longrightarrow> A \\<notin> interp C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D. production D \\<noteq> {A}) \\<Longrightarrow>\n    A \\<notin> interp C", "unfolding interp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D. production D \\<noteq> {A}) \\<Longrightarrow>\n    A \\<notin> \\<Union> (production ` {D. D < C})", "by (fast intro!: in_production_imp_produces)"], ["", "text \\<open>\nThe results below corresponds to Lemma 3.4.\n\\<close>"], ["", "lemma Interp_imp_general:\n  assumes\n    c_le_d: \"C \\<le> D\" and\n    d_lt_d': \"D < D'\" and\n    c_at_d: \"Interp D \\<Turnstile> C\" and\n    subs: \"interp D' \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"(\\<Union>C \\<in> CC. production C) \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "proof (cases \"\\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "case True"], ["proof (state)\nthis:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D", "obtain A where a_in_c: \"Pos A \\<in># C\" and a_at_d: \"A \\<in> Interp D\""], ["proof (prove)\nusing this:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Pos A \\<in># C; A \\<in> Interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Pos A \\<in># C\n  A \\<in> Interp D\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "from a_at_d"], ["proof (chain)\npicking this:\n  A \\<in> Interp D", "have \"A \\<in> interp D'\""], ["proof (prove)\nusing this:\n  A \\<in> Interp D\n\ngoal (1 subgoal):\n 1. A \\<in> interp D'", "using d_lt_d' less_imp_Interp_subseteq_interp"], ["proof (prove)\nusing this:\n  A \\<in> Interp D\n  D < D'\n  ?C < ?D \\<Longrightarrow> Interp ?C \\<subseteq> interp ?D\n\ngoal (1 subgoal):\n 1. A \\<in> interp D'", "by blast"], ["proof (state)\nthis:\n  A \\<in> interp D'\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  A \\<in> interp D'", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in> interp D'\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "using subs a_in_c"], ["proof (prove)\nusing this:\n  A \\<in> interp D'\n  interp D' \\<subseteq> \\<Union> (production ` CC)\n  Pos A \\<in># C\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "by (blast dest: contra_subsetD)"], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "case False"], ["proof (state)\nthis:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D", "obtain A where a_in_c: \"Neg A \\<in># C\" and \"A \\<notin> Interp D\""], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> Interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c_at_d"], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n  Interp D \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> Interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding true_cls_def"], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D\n  Multiset.Bex C ((\\<Turnstile>l) (Interp D))\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> Interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Neg A \\<in># C\n  A \\<notin> Interp D\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  Neg A \\<in># C\n  A \\<notin> Interp D", "have \"\\<And>D''. \\<not> produces D'' A\""], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  A \\<notin> Interp D\n\ngoal (1 subgoal):\n 1. \\<And>D''. production D'' \\<noteq> {A}", "using c_le_d neg_notin_Interp_not_produce"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  A \\<notin> Interp D\n  C \\<le> D\n  \\<lbrakk>Neg ?A \\<in># ?C; ?A \\<notin> Interp ?D; ?C \\<le> ?D\\<rbrakk>\n  \\<Longrightarrow> production ?D'' \\<noteq> {?A}\n\ngoal (1 subgoal):\n 1. \\<And>D''. production D'' \\<noteq> {A}", "by simp"], ["proof (state)\nthis:\n  production ?D'' \\<noteq> {A}\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> Interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  production ?D'' \\<noteq> {A}", "show ?thesis"], ["proof (prove)\nusing this:\n  production ?D'' \\<noteq> {A}\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "using a_in_c subs not_produces_imp_notin_production"], ["proof (prove)\nusing this:\n  production ?D'' \\<noteq> {A}\n  Neg A \\<in># C\n  interp D' \\<subseteq> \\<Union> (production ` CC)\n  production ?C \\<noteq> {?A} \\<Longrightarrow> ?A \\<notin> production ?C\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "by auto"], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Interp_imp_interp: \"C \\<le> D \\<Longrightarrow> D < D' \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> interp D' \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D < D'; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> interp D' \\<Turnstile> C", "using interp_def Interp_imp_general"], ["proof (prove)\nusing this:\n  interp ?C = \\<Union> (production ` {D. D < ?C})\n  \\<lbrakk>?C \\<le> ?D; ?D < ?D'; Interp ?D \\<Turnstile> ?C;\n   interp ?D' \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D < D'; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> interp D' \\<Turnstile> C", "by simp"], ["", "lemma Interp_imp_Interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> Interp D' \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> Interp D' \\<Turnstile> C", "using Interp_as_UNION interp_subseteq_Interp Interp_imp_general"], ["proof (prove)\nusing this:\n  Interp ?C = \\<Union> (production ` {D. D \\<le> ?C})\n  interp ?C \\<subseteq> Interp ?C\n  \\<lbrakk>?C \\<le> ?D; ?D < ?D'; Interp ?D \\<Turnstile> ?C;\n   interp ?D' \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> Interp D' \\<Turnstile> C", "by (metis antisym_conv2)"], ["", "lemma Interp_imp_INTERP: \"C \\<le> D \\<Longrightarrow> Interp D \\<Turnstile> C \\<Longrightarrow> INTERP \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> INTERP \\<Turnstile> C", "using INTERP_def interp_subseteq_INTERP Interp_imp_general[OF _ le_multiset_right_total]"], ["proof (prove)\nusing this:\n  INTERP = \\<Union> (production ` N)\n  interp ?C \\<subseteq> INTERP\n  \\<lbrakk>?C \\<le> ?D; Interp ?D \\<Turnstile> ?C;\n   interp (add_mset ?x1 ?D) \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; Interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> INTERP \\<Turnstile> C", "by simp"], ["", "lemma interp_imp_general:\n  assumes\n    c_le_d: \"C \\<le> D\" and\n    d_le_d': \"D \\<le> D'\" and\n    c_at_d: \"interp D \\<Turnstile> C\" and\n    subs: \"interp D' \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"(\\<Union>C \\<in> CC. production C) \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "proof (cases \"\\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "case True"], ["proof (state)\nthis:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D", "obtain A where a_in_c: \"Pos A \\<in># C\" and a_at_d: \"A \\<in> interp D\""], ["proof (prove)\nusing this:\n  \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Pos A \\<in># C; A \\<in> interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Pos A \\<in># C\n  A \\<in> interp D\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "from a_at_d"], ["proof (chain)\npicking this:\n  A \\<in> interp D", "have \"A \\<in> interp D'\""], ["proof (prove)\nusing this:\n  A \\<in> interp D\n\ngoal (1 subgoal):\n 1. A \\<in> interp D'", "using d_le_d' less_eq_imp_interp_subseteq_interp"], ["proof (prove)\nusing this:\n  A \\<in> interp D\n  D \\<le> D'\n  ?C \\<le> ?D \\<Longrightarrow> interp ?C \\<subseteq> interp ?D\n\ngoal (1 subgoal):\n 1. A \\<in> interp D'", "by blast"], ["proof (state)\nthis:\n  A \\<in> interp D'\n\ngoal (2 subgoals):\n 1. \\<exists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C\n 2. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  A \\<in> interp D'", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<in> interp D'\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "using subs a_in_c"], ["proof (prove)\nusing this:\n  A \\<in> interp D'\n  interp D' \\<subseteq> \\<Union> (production ` CC)\n  Pos A \\<in># C\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "by (blast dest: contra_subsetD)"], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "case False"], ["proof (state)\nthis:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D", "obtain A where a_in_c: \"Neg A \\<in># C\" and \"A \\<notin> interp D\""], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using c_at_d"], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n  interp D \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding true_cls_def"], ["proof (prove)\nusing this:\n  \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D\n  Multiset.Bex C ((\\<Turnstile>l) (interp D))\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Neg A \\<in># C; A \\<notin> interp D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Neg A \\<in># C\n  A \\<notin> interp D\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  Neg A \\<in># C\n  A \\<notin> interp D", "have \"\\<And>D''. \\<not> produces D'' A\""], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  A \\<notin> interp D\n\ngoal (1 subgoal):\n 1. \\<And>D''. production D'' \\<noteq> {A}", "using c_le_d"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  A \\<notin> interp D\n  C \\<le> D\n\ngoal (1 subgoal):\n 1. \\<And>D''. production D'' \\<noteq> {A}", "by (auto dest: produces_imp_in_interp less_eq_imp_interp_subseteq_interp)"], ["proof (state)\nthis:\n  production ?D'' \\<noteq> {A}\n\ngoal (1 subgoal):\n 1. \\<nexists>A. Pos A \\<in># C \\<and> A \\<in> interp D \\<Longrightarrow>\n    \\<Union> (production ` CC) \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  production ?D'' \\<noteq> {A}", "show ?thesis"], ["proof (prove)\nusing this:\n  production ?D'' \\<noteq> {A}\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "using a_in_c subs not_produces_imp_notin_production"], ["proof (prove)\nusing this:\n  production ?D'' \\<noteq> {A}\n  Neg A \\<in># C\n  interp D' \\<subseteq> \\<Union> (production ` CC)\n  production ?C \\<noteq> {?A} \\<Longrightarrow> ?A \\<notin> production ?C\n\ngoal (1 subgoal):\n 1. \\<Union> (production ` CC) \\<Turnstile> C", "by auto"], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma interp_imp_interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> interp D' \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> interp D' \\<Turnstile> C", "using interp_def interp_imp_general"], ["proof (prove)\nusing this:\n  interp ?C = \\<Union> (production ` {D. D < ?C})\n  \\<lbrakk>?C \\<le> ?D; ?D \\<le> ?D'; interp ?D \\<Turnstile> ?C;\n   interp ?D' \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> interp D' \\<Turnstile> C", "by simp"], ["", "lemma interp_imp_Interp: \"C \\<le> D \\<Longrightarrow> D \\<le> D' \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> Interp D' \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> Interp D' \\<Turnstile> C", "using Interp_as_UNION interp_subseteq_Interp[of D'] interp_imp_general"], ["proof (prove)\nusing this:\n  Interp ?C = \\<Union> (production ` {D. D \\<le> ?C})\n  interp D' \\<subseteq> Interp D'\n  \\<lbrakk>?C \\<le> ?D; ?D \\<le> ?D'; interp ?D \\<Turnstile> ?C;\n   interp ?D' \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; D \\<le> D'; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> Interp D' \\<Turnstile> C", "by simp"], ["", "lemma interp_imp_INTERP: \"C \\<le> D \\<Longrightarrow> interp D \\<Turnstile> C \\<Longrightarrow> INTERP \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> INTERP \\<Turnstile> C", "using INTERP_def interp_subseteq_INTERP interp_imp_general linear"], ["proof (prove)\nusing this:\n  INTERP = \\<Union> (production ` N)\n  interp ?C \\<subseteq> INTERP\n  \\<lbrakk>?C \\<le> ?D; ?D \\<le> ?D'; interp ?D \\<Turnstile> ?C;\n   interp ?D' \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<Union> (production ` ?CC) \\<Turnstile> ?C\n  ?x \\<le> ?y \\<or> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<le> D; interp D \\<Turnstile> C\\<rbrakk>\n    \\<Longrightarrow> INTERP \\<Turnstile> C", "by metis"], ["", "lemma productive_imp_not_interp: \"productive C \\<Longrightarrow> \\<not> interp C \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow>\n    \\<not> interp C \\<Turnstile> C", "unfolding production_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A. C \\<in> N \\<and>\n        C \\<noteq> {#} \\<and>\n        Max_mset C = Pos A \\<and>\n        \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<not> interp C \\<Turnstile> C", "by simp"], ["", "text \\<open>\nThis corresponds to Lemma 3.3:\n\\<close>"], ["", "lemma productive_imp_Interp:\n  assumes \"productive C\"\n  shows \"Interp C \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "obtain A where a: \"produces C A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>A. production C = {A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms productive_imp_produces_Max_atom"], ["proof (prove)\nusing this:\n  production C \\<noteq> {}\n  production ?C \\<noteq> {} \\<Longrightarrow>\n  production ?C = {Max (atms_of ?C)}\n\ngoal (1 subgoal):\n 1. (\\<And>A. production C = {A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  production C = {A}\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  production C = {A}", "have a_in_c: \"Pos A \\<in># C\""], ["proof (prove)\nusing this:\n  production C = {A}\n\ngoal (1 subgoal):\n 1. Pos A \\<in># C", "by (rule produces_imp_Pos_in_lits)"], ["proof (state)\nthis:\n  Pos A \\<in># C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "moreover"], ["proof (state)\nthis:\n  Pos A \\<in># C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "have \"A \\<in> Interp C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> Interp C", "using a less_eq_imp_production_subseteq_Interp"], ["proof (prove)\nusing this:\n  production C = {A}\n  ?C \\<le> ?D \\<Longrightarrow> production ?C \\<subseteq> Interp ?D\n\ngoal (1 subgoal):\n 1. A \\<in> Interp C", "by blast"], ["proof (state)\nthis:\n  A \\<in> Interp C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "ultimately"], ["proof (chain)\npicking this:\n  Pos A \\<in># C\n  A \\<in> Interp C", "show ?thesis"], ["proof (prove)\nusing this:\n  Pos A \\<in># C\n  A \\<in> Interp C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "by fast"], ["proof (state)\nthis:\n  Interp C \\<Turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma productive_imp_INTERP: \"productive C \\<Longrightarrow> INTERP \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production C \\<noteq> {} \\<Longrightarrow> INTERP \\<Turnstile> C", "by (fast intro: productive_imp_Interp Interp_imp_INTERP)"], ["", "text \\<open>\nThis corresponds to Lemma 3.5:\n\\<close>"], ["", "lemma max_pos_imp_Interp:\n  assumes \"C \\<in> N\" and \"C \\<noteq> {#}\" and \"Max_mset C = Pos A\" and \"S C = {#}\"\n  shows \"Interp C \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "proof (cases \"productive C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. production C \\<noteq> {} \\<Longrightarrow> Interp C \\<Turnstile> C\n 2. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "case True"], ["proof (state)\nthis:\n  production C \\<noteq> {}\n\ngoal (2 subgoals):\n 1. production C \\<noteq> {} \\<Longrightarrow> Interp C \\<Turnstile> C\n 2. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  production C \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  production C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "by (fast intro: productive_imp_Interp)"], ["proof (state)\nthis:\n  Interp C \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "case False"], ["proof (state)\nthis:\n  \\<not> production C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  \\<not> production C \\<noteq> {}", "have \"interp C \\<Turnstile> C\""], ["proof (prove)\nusing this:\n  \\<not> production C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. interp C \\<Turnstile> C", "using assms"], ["proof (prove)\nusing this:\n  \\<not> production C \\<noteq> {}\n  C \\<in> N\n  C \\<noteq> {#}\n  Max_mset C = Pos A\n  S C = {#}\n\ngoal (1 subgoal):\n 1. interp C \\<Turnstile> C", "unfolding production_unfold"], ["proof (prove)\nusing this:\n  \\<not> {A. C \\<in> N \\<and>\n             C \\<noteq> {#} \\<and>\n             Max_mset C = Pos A \\<and>\n             \\<not> interp C \\<Turnstile> C \\<and> S C = {#}} \\<noteq>\n         {}\n  C \\<in> N\n  C \\<noteq> {#}\n  Max_mset C = Pos A\n  S C = {#}\n\ngoal (1 subgoal):\n 1. interp C \\<Turnstile> C", "by simp"], ["proof (state)\nthis:\n  interp C \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. \\<not> production C \\<noteq> {} \\<Longrightarrow>\n    Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  interp C \\<Turnstile> C", "show ?thesis"], ["proof (prove)\nusing this:\n  interp C \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "unfolding Interp_def"], ["proof (prove)\nusing this:\n  interp C \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. interp C \\<union> production C \\<Turnstile> C", "using False"], ["proof (prove)\nusing this:\n  interp C \\<Turnstile> C\n  \\<not> production C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. interp C \\<union> production C \\<Turnstile> C", "by auto"], ["proof (state)\nthis:\n  Interp C \\<Turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following results correspond to Lemma 3.6:\n\\<close>"], ["", "lemma max_atm_imp_Interp:\n  assumes\n    c_in_n: \"C \\<in> N\" and\n    pos_in: \"Pos A \\<in># C\" and\n    max_atm: \"A = Max (atms_of C)\" and\n    s_c_e: \"S C = {#}\"\n  shows \"Interp C \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "proof (cases \"Neg A \\<in># C\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Neg A \\<in># C \\<Longrightarrow> Interp C \\<Turnstile> C\n 2. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "case True"], ["proof (state)\nthis:\n  Neg A \\<in># C\n\ngoal (2 subgoals):\n 1. Neg A \\<in># C \\<Longrightarrow> Interp C \\<Turnstile> C\n 2. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  Neg A \\<in># C", "show ?thesis"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "using pos_in pos_neg_in_imp_true"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  Pos A \\<in># C\n  \\<lbrakk>Pos ?A \\<in># ?C; Neg ?A \\<in># ?C\\<rbrakk>\n  \\<Longrightarrow> ?I \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "by metis"], ["proof (state)\nthis:\n  Interp C \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "case False"], ["proof (state)\nthis:\n  Neg A \\<notin># C\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "moreover"], ["proof (state)\nthis:\n  Neg A \\<notin># C\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "have ne: \"C \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<noteq> {#}", "using pos_in"], ["proof (prove)\nusing this:\n  Pos A \\<in># C\n\ngoal (1 subgoal):\n 1. C \\<noteq> {#}", "by auto"], ["proof (state)\nthis:\n  C \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "ultimately"], ["proof (chain)\npicking this:\n  Neg A \\<notin># C\n  C \\<noteq> {#}", "have \"Max_mset C = Pos A\""], ["proof (prove)\nusing this:\n  Neg A \\<notin># C\n  C \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. Max_mset C = Pos A", "using max_atm"], ["proof (prove)\nusing this:\n  Neg A \\<notin># C\n  C \\<noteq> {#}\n  A = Max (atms_of C)\n\ngoal (1 subgoal):\n 1. Max_mset C = Pos A", "using Max_in_lits Max_lit_eq_pos_or_neg_Max_atm"], ["proof (prove)\nusing this:\n  Neg A \\<notin># C\n  C \\<noteq> {#}\n  A = Max (atms_of C)\n  ?C \\<noteq> {#} \\<Longrightarrow> Max_mset ?C \\<in># ?C\n  ?C \\<noteq> {#} \\<Longrightarrow>\n  Max_mset ?C = Pos (Max (atms_of ?C)) \\<or>\n  Max_mset ?C = Neg (Max (atms_of ?C))\n\ngoal (1 subgoal):\n 1. Max_mset C = Pos A", "by metis"], ["proof (state)\nthis:\n  Max_mset C = Pos A\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># C \\<Longrightarrow> Interp C \\<Turnstile> C", "then"], ["proof (chain)\npicking this:\n  Max_mset C = Pos A", "show ?thesis"], ["proof (prove)\nusing this:\n  Max_mset C = Pos A\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "using ne c_in_n s_c_e"], ["proof (prove)\nusing this:\n  Max_mset C = Pos A\n  C \\<noteq> {#}\n  C \\<in> N\n  S C = {#}\n\ngoal (1 subgoal):\n 1. Interp C \\<Turnstile> C", "by (blast intro: max_pos_imp_Interp)"], ["proof (state)\nthis:\n  Interp C \\<Turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_Interp_imp_general:\n  assumes\n    d'_le_d: \"D' \\<le> D\" and\n    in_n_or_max_gt: \"D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D)\" and\n    d'_at_d: \"\\<not> Interp D \\<Turnstile> D'\" and\n    d_lt_c: \"D < C\" and\n    subs: \"interp C \\<subseteq> (\\<Union>C \\<in> CC. production C)\"\n  shows \"\\<not> (\\<Union>C \\<in> CC. production C) \\<Turnstile> D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "assume cc_blw_d': \"(\\<Union>C \\<in> CC. production C) \\<Turnstile> D'\""], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "have \"Interp D \\<subseteq> (\\<Union>C \\<in> CC. production C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Interp D \\<subseteq> \\<Union> (production ` CC)", "using less_imp_Interp_subseteq_interp d_lt_c subs"], ["proof (prove)\nusing this:\n  ?C < ?D \\<Longrightarrow> Interp ?C \\<subseteq> interp ?D\n  D < C\n  interp C \\<subseteq> \\<Union> (production ` CC)\n\ngoal (1 subgoal):\n 1. Interp D \\<subseteq> \\<Union> (production ` CC)", "by blast"], ["proof (state)\nthis:\n  Interp D \\<subseteq> \\<Union> (production ` CC)\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  Interp D \\<subseteq> \\<Union> (production ` CC)", "obtain A where a_in_d': \"Pos A \\<in># D'\" and a_blw_cc: \"A \\<in> (\\<Union>C \\<in> CC. production C)\""], ["proof (prove)\nusing this:\n  Interp D \\<subseteq> \\<Union> (production ` CC)\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Pos A \\<in># D';\n         A \\<in> \\<Union> (production ` CC)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cc_blw_d' d'_at_d false_to_true_imp_ex_pos"], ["proof (prove)\nusing this:\n  Interp D \\<subseteq> \\<Union> (production ` CC)\n  \\<Union> (production ` CC) \\<Turnstile> D'\n  \\<not> Interp D \\<Turnstile> D'\n  \\<lbrakk>?I \\<subseteq> ?J; \\<not> ?I \\<Turnstile> ?C;\n   ?J \\<Turnstile> ?C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A\\<in>?J. Pos A \\<in># ?C\n\ngoal (1 subgoal):\n 1. (\\<And>A.\n        \\<lbrakk>Pos A \\<in># D';\n         A \\<in> \\<Union> (production ` CC)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  Pos A \\<in># D'\n  A \\<in> \\<Union> (production ` CC)\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "from a_in_d'"], ["proof (chain)\npicking this:\n  Pos A \\<in># D'", "have a_at_d: \"A \\<notin> Interp D\""], ["proof (prove)\nusing this:\n  Pos A \\<in># D'\n\ngoal (1 subgoal):\n 1. A \\<notin> Interp D", "using d'_at_d"], ["proof (prove)\nusing this:\n  Pos A \\<in># D'\n  \\<not> Interp D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. A \\<notin> Interp D", "by fast"], ["proof (state)\nthis:\n  A \\<notin> Interp D\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "from a_blw_cc"], ["proof (chain)\npicking this:\n  A \\<in> \\<Union> (production ` CC)", "obtain C' where prod_c': \"production C' = {A}\""], ["proof (prove)\nusing this:\n  A \\<in> \\<Union> (production ` CC)\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        production C' = {A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (fast intro!: in_production_imp_produces)"], ["proof (state)\nthis:\n  production C' = {A}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "have max_c': \"Max (atms_of C') = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max (atms_of C') = A", "using prod_c' productive_imp_produces_Max_atom"], ["proof (prove)\nusing this:\n  production C' = {A}\n  production ?C \\<noteq> {} \\<Longrightarrow>\n  production ?C = {Max (atms_of ?C)}\n\ngoal (1 subgoal):\n 1. Max (atms_of C') = A", "by force"], ["proof (state)\nthis:\n  Max (atms_of C') = A\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "have leq_dc': \"D \\<le> C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<le> C'", "using a_at_d d'_at_d prod_c'"], ["proof (prove)\nusing this:\n  A \\<notin> Interp D\n  \\<not> Interp D \\<Turnstile> D'\n  production C' = {A}\n\ngoal (1 subgoal):\n 1. D \\<le> C'", "by (auto simp: Interp_def intro: not_interp_to_Interp_imp_le)"], ["proof (state)\nthis:\n  D \\<le> C'\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  D \\<le> C'", "have \"D' \\<le> C'\""], ["proof (prove)\nusing this:\n  D \\<le> C'\n\ngoal (1 subgoal):\n 1. D' \\<le> C'", "using d'_le_d order_trans"], ["proof (prove)\nusing this:\n  D \\<le> C'\n  D' \\<le> D\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. D' \\<le> C'", "by blast"], ["proof (state)\nthis:\n  D' \\<le> C'\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  D' \\<le> C'", "have max_d': \"Max (atms_of D') = A\""], ["proof (prove)\nusing this:\n  D' \\<le> C'\n\ngoal (1 subgoal):\n 1. Max (atms_of D') = A", "using a_in_d' max_c'"], ["proof (prove)\nusing this:\n  D' \\<le> C'\n  Pos A \\<in># D'\n  Max (atms_of C') = A\n\ngoal (1 subgoal):\n 1. Max (atms_of D') = A", "by (fast intro: pos_lit_in_atms_of le_multiset_Max_in_imp_Max)"], ["proof (state)\nthis:\n  Max (atms_of D') = A\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "{"], ["proof (state)\nthis:\n  Max (atms_of D') = A\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "assume \"D' \\<in> N \\<and> S D' = {#}\""], ["proof (state)\nthis:\n  D' \\<in> N \\<and> S D' = {#}\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  D' \\<in> N \\<and> S D' = {#}", "have \"Interp D' \\<Turnstile> D'\""], ["proof (prove)\nusing this:\n  D' \\<in> N \\<and> S D' = {#}\n\ngoal (1 subgoal):\n 1. Interp D' \\<Turnstile> D'", "using a_in_d' max_d'"], ["proof (prove)\nusing this:\n  D' \\<in> N \\<and> S D' = {#}\n  Pos A \\<in># D'\n  Max (atms_of D') = A\n\ngoal (1 subgoal):\n 1. Interp D' \\<Turnstile> D'", "by (blast intro: max_atm_imp_Interp)"], ["proof (state)\nthis:\n  Interp D' \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  Interp D' \\<Turnstile> D'", "have \"Interp D \\<Turnstile> D'\""], ["proof (prove)\nusing this:\n  Interp D' \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. Interp D \\<Turnstile> D'", "using d'_le_d"], ["proof (prove)\nusing this:\n  Interp D' \\<Turnstile> D'\n  D' \\<le> D\n\ngoal (1 subgoal):\n 1. Interp D \\<Turnstile> D'", "by (auto intro: Interp_imp_Interp simp: less_eq_multiset_def)"], ["proof (state)\nthis:\n  Interp D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  Interp D \\<Turnstile> D'", "have False"], ["proof (prove)\nusing this:\n  Interp D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. False", "using d'_at_d"], ["proof (prove)\nusing this:\n  Interp D \\<Turnstile> D'\n  \\<not> Interp D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. False", "by satx"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "}"], ["proof (state)\nthis:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "moreover"], ["proof (state)\nthis:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "{"], ["proof (state)\nthis:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "assume \"Max (atms_of D') < Max (atms_of D)\""], ["proof (state)\nthis:\n  Max (atms_of D') < Max (atms_of D)\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  Max (atms_of D') < Max (atms_of D)", "have False"], ["proof (prove)\nusing this:\n  Max (atms_of D') < Max (atms_of D)\n\ngoal (1 subgoal):\n 1. False", "using max_d' leq_dc' max_c' d'_le_d"], ["proof (prove)\nusing this:\n  Max (atms_of D') < Max (atms_of D)\n  Max (atms_of D') = A\n  D \\<le> C'\n  Max (atms_of C') = A\n  D' \\<le> D\n\ngoal (1 subgoal):\n 1. False", "by (metis le_imp_less_or_eq le_multiset_empty_right less_eq_Max_atms_of less_imp_not_less)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "}"], ["proof (state)\nthis:\n  Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "ultimately"], ["proof (chain)\npicking this:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n  Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> False", "have False"], ["proof (prove)\nusing this:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n  Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "using in_n_or_max_gt"], ["proof (prove)\nusing this:\n  D' \\<in> N \\<and> S D' = {#} \\<Longrightarrow> False\n  Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> False\n  D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D)\n\ngoal (1 subgoal):\n 1. False", "by satx"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "}"], ["proof (state)\nthis:\n  \\<Union> (production ` CC) \\<Turnstile> D' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "then"], ["proof (chain)\npicking this:\n  \\<Union> (production ` CC) \\<Turnstile> D' \\<Longrightarrow> False", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Union> (production ` CC) \\<Turnstile> D' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (production ` CC) \\<Turnstile> D'", "by satx"], ["proof (state)\nthis:\n  \\<not> \\<Union> (production ` CC) \\<Turnstile> D'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_Interp_imp_not_interp:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   D < C \\<Longrightarrow> \\<not> interp C \\<Turnstile> D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'; D < C\\<rbrakk>\n    \\<Longrightarrow> \\<not> interp C \\<Turnstile> D'", "using interp_def not_Interp_imp_general"], ["proof (prove)\nusing this:\n  interp ?C = \\<Union> (production ` {D. D < ?C})\n  \\<lbrakk>?D' \\<le> ?D;\n   ?D' \\<in> N \\<and> S ?D' = {#} \\<or>\n   Max (atms_of ?D') < Max (atms_of ?D);\n   \\<not> Interp ?D \\<Turnstile> ?D'; ?D < ?C;\n   interp ?C \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<Union> (production ` ?CC) \\<Turnstile> ?D'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'; D < C\\<rbrakk>\n    \\<Longrightarrow> \\<not> interp C \\<Turnstile> D'", "by simp"], ["", "lemma not_Interp_imp_not_Interp:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   D < C \\<Longrightarrow> \\<not> Interp C \\<Turnstile> D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'; D < C\\<rbrakk>\n    \\<Longrightarrow> \\<not> Interp C \\<Turnstile> D'", "using Interp_as_UNION interp_subseteq_Interp not_Interp_imp_general"], ["proof (prove)\nusing this:\n  Interp ?C = \\<Union> (production ` {D. D \\<le> ?C})\n  interp ?C \\<subseteq> Interp ?C\n  \\<lbrakk>?D' \\<le> ?D;\n   ?D' \\<in> N \\<and> S ?D' = {#} \\<or>\n   Max (atms_of ?D') < Max (atms_of ?D);\n   \\<not> Interp ?D \\<Turnstile> ?D'; ?D < ?C;\n   interp ?C \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<Union> (production ` ?CC) \\<Turnstile> ?D'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'; D < C\\<rbrakk>\n    \\<Longrightarrow> \\<not> Interp C \\<Turnstile> D'", "by metis"], ["", "lemma not_Interp_imp_not_INTERP:\n  \"D' \\<le> D \\<Longrightarrow> D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D) \\<Longrightarrow> \\<not> Interp D \\<Turnstile> D' \\<Longrightarrow>\n   \\<not> INTERP \\<Turnstile> D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'\\<rbrakk>\n    \\<Longrightarrow> \\<not> INTERP \\<Turnstile> D'", "using INTERP_def interp_subseteq_INTERP not_Interp_imp_general[OF _ _ _ le_multiset_right_total]"], ["proof (prove)\nusing this:\n  INTERP = \\<Union> (production ` N)\n  interp ?C \\<subseteq> INTERP\n  \\<lbrakk>?D' \\<le> ?D;\n   ?D' \\<in> N \\<and> S ?D' = {#} \\<or>\n   Max (atms_of ?D') < Max (atms_of ?D);\n   \\<not> Interp ?D \\<Turnstile> ?D';\n   interp (add_mset ?x1 ?D) \\<subseteq> \\<Union> (production ` ?CC)\\<rbrakk>\n  \\<Longrightarrow> \\<not> \\<Union> (production ` ?CC) \\<Turnstile> ?D'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>D' \\<le> D;\n     D' \\<in> N \\<and> S D' = {#} \\<or> Max (atms_of D') < Max (atms_of D);\n     \\<not> Interp D \\<Turnstile> D'\\<rbrakk>\n    \\<Longrightarrow> \\<not> INTERP \\<Turnstile> D'", "by simp"], ["", "text \\<open>\nLemma 3.7 is a problem child. It is stated below but not proved; instead, a counterexample is\ndisplayed. This is not much of a problem, because it is not invoked in the rest of the chapter.\n\\<close>"], ["", "lemma\n  assumes \"D \\<in> N\" and \"\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C\"\n  shows \"interp D \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. interp D \\<Turnstile> C", "oops"], ["", "lemma\n  assumes d: \"D = {#}\" and n: \"N = {D, C}\" and c: \"C = {#Pos A#}\"\n  shows \"D \\<in> N\" and \"\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C\" and \"\\<not> interp D \\<Turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> N &&&\n    (\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C) &&&\n    \\<not> interp D \\<Turnstile> C", "using n"], ["proof (prove)\nusing this:\n  N = {D, C}\n\ngoal (1 subgoal):\n 1. D \\<in> N &&&\n    (\\<And>D'. D' < D \\<Longrightarrow> Interp D' \\<Turnstile> C) &&&\n    \\<not> interp D \\<Turnstile> C", "unfolding d c interp_def"], ["proof (prove)\nusing this:\n  N = {{#}, {#Pos A#}}\n\ngoal (1 subgoal):\n 1. {#} \\<in> N &&&\n    (\\<And>D'.\n        D' < {#} \\<Longrightarrow> Interp D' \\<Turnstile> {#Pos A#}) &&&\n    \\<not> \\<Union> (production ` {D. D < {#}}) \\<Turnstile> {#Pos A#}", "by auto"], ["", "end"], ["", "end"], ["", "end"]]}