{"file_name": "/home/qj213/afp-2021-10-22/thys/Ordered_Resolution_Prover/Unordered_Ground_Resolution.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ordered_Resolution_Prover", "problem_names": ["lemma unord_resolve_sound: \"unord_resolve C D E \\<Longrightarrow> I \\<Turnstile> C \\<Longrightarrow> I \\<Turnstile> D \\<Longrightarrow> I \\<Turnstile> E\"", "theorem unord_resolve_counterex_reducing:\n  assumes\n    ec_ni_n: \"{#} \\<notin> N\" and\n    c_in_n: \"C \\<in> N\" and\n    c_cex: \"\\<not> INTERP N \\<Turnstile> C\" and\n    c_min: \"\\<And>D. D \\<in> N \\<Longrightarrow> \\<not> INTERP N \\<Turnstile> D \\<Longrightarrow> C \\<le> D\"\n  obtains D E where\n    \"D \\<in> N\"\n    \"INTERP N \\<Turnstile> D\"\n    \"productive N D\"\n    \"unord_resolve D C E\"\n    \"\\<not> INTERP N \\<Turnstile> E\"\n    \"E < C\"", "lemmas clausal_logic_compact = unord_\\<Gamma>_sound_counterex_reducing.clausal_logic_compact", "lemmas clausal_logic_compact = ground_resolution_without_selection.clausal_logic_compact"], "translations": [["", "lemma unord_resolve_sound: \"unord_resolve C D E \\<Longrightarrow> I \\<Turnstile> C \\<Longrightarrow> I \\<Turnstile> D \\<Longrightarrow> I \\<Turnstile> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>unord_resolve C D E; I \\<Turnstile> C;\n     I \\<Turnstile> D\\<rbrakk>\n    \\<Longrightarrow> I \\<Turnstile> E", "using unord_resolve.cases"], ["proof (prove)\nusing this:\n  \\<lbrakk>unord_resolve ?a1.0 ?a2.0 ?a3.0;\n   \\<And>C n A D.\n      \\<lbrakk>?a1.0 = C + replicate_mset (Suc n) (Pos A);\n       ?a2.0 = add_mset (Neg A) D; ?a3.0 = C + D\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>unord_resolve C D E; I \\<Turnstile> C;\n     I \\<Turnstile> D\\<rbrakk>\n    \\<Longrightarrow> I \\<Turnstile> E", "by fastforce"], ["", "text \\<open>\nThe following result corresponds to Theorem 3.8, except that the conclusion is strengthened slightly\nto make it fit better with the counterexample-reducing inference system framework.\n\\<close>"], ["", "theorem unord_resolve_counterex_reducing:\n  assumes\n    ec_ni_n: \"{#} \\<notin> N\" and\n    c_in_n: \"C \\<in> N\" and\n    c_cex: \"\\<not> INTERP N \\<Turnstile> C\" and\n    c_min: \"\\<And>D. D \\<in> N \\<Longrightarrow> \\<not> INTERP N \\<Turnstile> D \\<Longrightarrow> C \\<le> D\"\n  obtains D E where\n    \"D \\<in> N\"\n    \"INTERP N \\<Turnstile> D\"\n    \"productive N D\"\n    \"unord_resolve D C E\"\n    \"\\<not> INTERP N \\<Turnstile> E\"\n    \"E < C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have c_ne: \"C \\<noteq> {#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C \\<noteq> {#}", "using c_in_n ec_ni_n"], ["proof (prove)\nusing this:\n  C \\<in> N\n  {#} \\<notin> N\n\ngoal (1 subgoal):\n 1. C \\<noteq> {#}", "by blast"], ["proof (state)\nthis:\n  C \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)", "using c_ne"], ["proof (prove)\nusing this:\n  C \\<noteq> {#}\n\ngoal (1 subgoal):\n 1. \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)", "by (blast intro: Max_in_lits atm_of_Max_lit atm_of_lit_in_atms_of)"], ["proof (state)\nthis:\n  \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)", "have \"\\<exists>A. Neg A \\<in># C\""], ["proof (prove)\nusing this:\n  \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)\n\ngoal (1 subgoal):\n 1. \\<exists>A. Neg A \\<in># C", "using c_ne c_in_n c_cex c_min Max_in_lits Max_lit_eq_pos_or_neg_Max_atm  max_pos_imp_Interp\n      Interp_imp_INTERP"], ["proof (prove)\nusing this:\n  \\<exists>A. A \\<in> atms_of C \\<and> A = Max (atms_of C)\n  C \\<noteq> {#}\n  C \\<in> N\n  \\<not> INTERP N \\<Turnstile> C\n  \\<lbrakk>?D1 \\<in> N; \\<not> INTERP N \\<Turnstile> ?D1\\<rbrakk>\n  \\<Longrightarrow> C \\<le> ?D1\n  ?C \\<noteq> {#} \\<Longrightarrow> Max_mset ?C \\<in># ?C\n  ?C \\<noteq> {#} \\<Longrightarrow>\n  Max_mset ?C = Pos (Max (atms_of ?C)) \\<or>\n  Max_mset ?C = Neg (Max (atms_of ?C))\n  \\<lbrakk>?C \\<in> ?N; ?C \\<noteq> {#}; Max_mset ?C = Pos ?A;\n   {#} = {#}\\<rbrakk>\n  \\<Longrightarrow> Interp ?N ?C \\<Turnstile> ?C\n  \\<lbrakk>?C \\<le> ?D; Interp ?N ?D \\<Turnstile> ?C\\<rbrakk>\n  \\<Longrightarrow> INTERP ?N \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<exists>A. Neg A \\<in># C", "by metis"], ["proof (state)\nthis:\n  \\<exists>A. Neg A \\<in># C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>A. Neg A \\<in># C", "obtain A where neg_a_in_c: \"Neg A \\<in># C\""], ["proof (prove)\nusing this:\n  \\<exists>A. Neg A \\<in># C\n\ngoal (1 subgoal):\n 1. (\\<And>A. Neg A \\<in># C \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Neg A \\<in># C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Neg A \\<in># C", "obtain C' where c: \"C = add_mset (Neg A) C'\""], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        C = add_mset (Neg A) C' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insert_DiffM"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  ?x \\<in># ?M \\<Longrightarrow> add_mset ?x (remove1_mset ?x ?M) = ?M\n\ngoal (1 subgoal):\n 1. (\\<And>C'.\n        C = add_mset (Neg A) C' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  C = add_mset (Neg A) C'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"A \\<in> INTERP N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> INTERP N", "using neg_a_in_c c_cex[unfolded true_cls_def]"], ["proof (prove)\nusing this:\n  Neg A \\<in># C\n  \\<not> Multiset.Bex C ((\\<Turnstile>l) (INTERP N))\n\ngoal (1 subgoal):\n 1. A \\<in> INTERP N", "by fast"], ["proof (state)\nthis:\n  A \\<in> INTERP N\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  A \\<in> INTERP N", "obtain D where d0: \"produces N D A\""], ["proof (prove)\nusing this:\n  A \\<in> INTERP N\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        production N D = {A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding INTERP_def"], ["proof (prove)\nusing this:\n  A \\<in> \\<Union> (production N ` N)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        production N D = {A} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis UN_E not_produces_imp_notin_production)"], ["proof (state)\nthis:\n  production N D = {A}\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have prod_d: \"productive N D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. production N D \\<noteq> {}", "unfolding d0"], ["proof (prove)\ngoal (1 subgoal):\n 1. {A} \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  production N D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  production N D \\<noteq> {}", "have d_in_n: \"D \\<in> N\""], ["proof (prove)\nusing this:\n  production N D \\<noteq> {}\n\ngoal (1 subgoal):\n 1. D \\<in> N", "using productive_in_N"], ["proof (prove)\nusing this:\n  production N D \\<noteq> {}\n  production ?N ?C \\<noteq> {} \\<Longrightarrow> ?C \\<in> ?N\n\ngoal (1 subgoal):\n 1. D \\<in> N", "by fast"], ["proof (state)\nthis:\n  D \\<in> N\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have d_true: \"INTERP N \\<Turnstile> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. INTERP N \\<Turnstile> D", "using prod_d productive_imp_INTERP"], ["proof (prove)\nusing this:\n  production N D \\<noteq> {}\n  production ?N ?C \\<noteq> {} \\<Longrightarrow> INTERP ?N \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. INTERP N \\<Turnstile> D", "by blast"], ["proof (state)\nthis:\n  INTERP N \\<Turnstile> D\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain D' AAA where\n    d: \"D = D' + AAA\" and\n    d': \"D' = {#L \\<in># D. L \\<noteq> Pos A#}\" and\n    aa: \"AAA = {#L \\<in># D. L = Pos A#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>D' AAA.\n        \\<lbrakk>D = D' + AAA; D' = {#L \\<in># D. L \\<noteq> Pos A#};\n         AAA = {#L \\<in># D. L = Pos A#}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using multiset_partition union_commute"], ["proof (prove)\nusing this:\n  ?M = filter_mset ?P ?M + {#x \\<in># ?M. \\<not> ?P x#}\n  ?M + ?N = ?N + ?M\n\ngoal (1 subgoal):\n 1. (\\<And>D' AAA.\n        \\<lbrakk>D = D' + AAA; D' = {#L \\<in># D. L \\<noteq> Pos A#};\n         AAA = {#L \\<in># D. L = Pos A#}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  D = D' + AAA\n  D' = {#L \\<in># D. L \\<noteq> Pos A#}\n  AAA = {#L \\<in># D. L = Pos A#}\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have d'_subs: \"set_mset D' \\<subseteq> set_mset D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset D' \\<subseteq> set_mset D", "unfolding d'"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset {#L \\<in># D. L \\<noteq> Pos A#} \\<subseteq> set_mset D", "by auto"], ["proof (state)\nthis:\n  set_mset D' \\<subseteq> set_mset D\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not> Neg A \\<in># D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Neg A \\<notin># D", "using d0"], ["proof (prove)\nusing this:\n  production N D = {A}\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># D", "by (blast dest: produces_imp_neg_notin_lits)"], ["proof (state)\nthis:\n  Neg A \\<notin># D\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  Neg A \\<notin># D", "have neg_a_ni_d': \"\\<not> Neg A \\<in># D'\""], ["proof (prove)\nusing this:\n  Neg A \\<notin># D\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># D'", "using d'_subs"], ["proof (prove)\nusing this:\n  Neg A \\<notin># D\n  set_mset D' \\<subseteq> set_mset D\n\ngoal (1 subgoal):\n 1. Neg A \\<notin># D'", "by auto"], ["proof (state)\nthis:\n  Neg A \\<notin># D'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have a_ni_d': \"A \\<notin> atms_of D'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<notin> atms_of D'", "using d' neg_a_ni_d'"], ["proof (prove)\nusing this:\n  D' = {#L \\<in># D. L \\<noteq> Pos A#}\n  Neg A \\<notin># D'\n\ngoal (1 subgoal):\n 1. A \\<notin> atms_of D'", "by (auto dest: atm_imp_pos_or_neg_lit)"], ["proof (state)\nthis:\n  A \\<notin> atms_of D'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<exists>n. AAA = replicate_mset (Suc n) (Pos A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)", "using aa d0 not0_implies_Suc produces_imp_Pos_in_lits[of N]"], ["proof (prove)\nusing this:\n  AAA = {#L \\<in># D. L = Pos A#}\n  production N D = {A}\n  ?n \\<noteq> 0 \\<Longrightarrow> \\<exists>m. ?n = Suc m\n  production N ?C = {?A} \\<Longrightarrow> Pos ?A \\<in># ?C\n\ngoal (1 subgoal):\n 1. \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)", "by (simp add: filter_eq_replicate_mset del: replicate_mset_Suc)"], ["proof (state)\nthis:\n  \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)", "have res_e: \"unord_resolve D C (D' + C')\""], ["proof (prove)\nusing this:\n  \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)\n\ngoal (1 subgoal):\n 1. unord_resolve D C (D' + C')", "unfolding c d"], ["proof (prove)\nusing this:\n  \\<exists>n. AAA = replicate_mset (Suc n) (Pos A)\n\ngoal (1 subgoal):\n 1. unord_resolve (D' + AAA) (add_mset (Neg A) C') (D' + C')", "by (fastforce intro: unord_resolve.intros)"], ["proof (state)\nthis:\n  unord_resolve D C (D' + C')\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have d'_le_d: \"D' \\<le> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D' \\<le> D", "unfolding d"], ["proof (prove)\ngoal (1 subgoal):\n 1. D' \\<le> D' + AAA", "by simp"], ["proof (state)\nthis:\n  D' \\<le> D\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have a_max_d: \"A = Max (atms_of D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = Max (atms_of D)", "using d0 productive_imp_produces_Max_atom"], ["proof (prove)\nusing this:\n  production N D = {A}\n  production ?N ?C \\<noteq> {} \\<Longrightarrow>\n  production ?N ?C = {Max (atms_of ?C)}\n\ngoal (1 subgoal):\n 1. A = Max (atms_of D)", "by auto"], ["proof (state)\nthis:\n  A = Max (atms_of D)\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  A = Max (atms_of D)", "have \"D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\""], ["proof (prove)\nusing this:\n  A = Max (atms_of D)\n\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A", "using d'_le_d"], ["proof (prove)\nusing this:\n  A = Max (atms_of D)\n  D' \\<le> D\n\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A", "by (blast intro: less_eq_Max_atms_of)"], ["proof (state)\nthis:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A", "using a_ni_d' Max_in"], ["proof (prove)\nusing this:\n  A \\<notin> atms_of D'\n  \\<lbrakk>finite ?A; ?A \\<noteq> {}\\<rbrakk>\n  \\<Longrightarrow> Max ?A \\<in> ?A\n\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A", "by (blast intro: atms_empty_iff_empty[THEN iffD1])"], ["proof (state)\nthis:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A", "have max_d'_lt_a: \"D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') < A\""], ["proof (prove)\nusing this:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A\n\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') < A", "using dual_order.strict_iff_order"], ["proof (prove)\nusing this:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<le> A\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') \\<noteq> A\n  (?b < ?a) = (?b \\<le> ?a \\<and> ?a \\<noteq> ?b)\n\ngoal (1 subgoal):\n 1. D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') < A", "by blast"], ["proof (state)\nthis:\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') < A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not> interp N D \\<Turnstile> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> interp N D \\<Turnstile> D", "using d0 productive_imp_not_interp"], ["proof (prove)\nusing this:\n  production N D = {A}\n  production ?N ?C \\<noteq> {} \\<Longrightarrow>\n  \\<not> interp ?N ?C \\<Turnstile> ?C\n\ngoal (1 subgoal):\n 1. \\<not> interp N D \\<Turnstile> D", "by blast"], ["proof (state)\nthis:\n  \\<not> interp N D \\<Turnstile> D\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<not> interp N D \\<Turnstile> D", "have \"\\<not> Interp N D \\<Turnstile> D'\""], ["proof (prove)\nusing this:\n  \\<not> interp N D \\<Turnstile> D\n\ngoal (1 subgoal):\n 1. \\<not> Interp N D \\<Turnstile> D'", "unfolding d0 d' Interp_def true_cls_def"], ["proof (prove)\nusing this:\n  \\<not> Multiset.Bex D ((\\<Turnstile>l) (interp N D))\n\ngoal (1 subgoal):\n 1. \\<not> Multiset.Bex {#L \\<in># D. L \\<noteq> Pos A#}\n            ((\\<Turnstile>l) (interp N D \\<union> {A}))", "by (auto simp: true_lit_def simp del: not_gr_zero)"], ["proof (state)\nthis:\n  \\<not> Interp N D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  \\<not> Interp N D \\<Turnstile> D'", "have \"\\<not> INTERP N \\<Turnstile> D'\""], ["proof (prove)\nusing this:\n  \\<not> Interp N D \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> D'", "using a_max_d d'_le_d max_d'_lt_a not_Interp_imp_not_INTERP"], ["proof (prove)\nusing this:\n  \\<not> Interp N D \\<Turnstile> D'\n  A = Max (atms_of D)\n  D' \\<le> D\n  D' \\<noteq> {#} \\<Longrightarrow> Max (atms_of D') < A\n  \\<lbrakk>?D' \\<le> ?D;\n   ?D' \\<in> ?N \\<and> {#} = {#} \\<or> Max (atms_of ?D') < Max (atms_of ?D);\n   \\<not> Interp ?N ?D \\<Turnstile> ?D'\\<rbrakk>\n  \\<Longrightarrow> \\<not> INTERP ?N \\<Turnstile> ?D'\n\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> D'", "by blast"], ["proof (state)\nthis:\n  \\<not> INTERP N \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<not> INTERP N \\<Turnstile> D'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not> INTERP N \\<Turnstile> C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> C'", "using c_cex"], ["proof (prove)\nusing this:\n  \\<not> INTERP N \\<Turnstile> C\n\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> C'", "unfolding c"], ["proof (prove)\nusing this:\n  \\<not> INTERP N \\<Turnstile> add_mset (Neg A) C'\n\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> C'", "by simp"], ["proof (state)\nthis:\n  \\<not> INTERP N \\<Turnstile> C'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> INTERP N \\<Turnstile> D'\n  \\<not> INTERP N \\<Turnstile> C'", "have e_cex: \"\\<not> INTERP N \\<Turnstile> D' + C'\""], ["proof (prove)\nusing this:\n  \\<not> INTERP N \\<Turnstile> D'\n  \\<not> INTERP N \\<Turnstile> C'\n\ngoal (1 subgoal):\n 1. \\<not> INTERP N \\<Turnstile> D' + C'", "by simp"], ["proof (state)\nthis:\n  \\<not> INTERP N \\<Turnstile> D' + C'\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<And>B. B \\<in> atms_of D' \\<Longrightarrow> B \\<le> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>B. B \\<in> atms_of D' \\<Longrightarrow> B \\<le> A", "using d0 d'_subs contra_subsetD lits_subseteq_imp_atms_subseteq produces_imp_atms_leq"], ["proof (prove)\nusing this:\n  production N D = {A}\n  set_mset D' \\<subseteq> set_mset D\n  \\<lbrakk>?A \\<subseteq> ?B; ?c \\<notin> ?B\\<rbrakk>\n  \\<Longrightarrow> ?c \\<notin> ?A\n  set_mset ?C \\<subseteq> set_mset ?D \\<Longrightarrow>\n  atms_of ?C \\<subseteq> atms_of ?D\n  \\<lbrakk>production ?N ?C = {?A}; ?B \\<in> atms_of ?C\\<rbrakk>\n  \\<Longrightarrow> ?B \\<le> ?A\n\ngoal (1 subgoal):\n 1. \\<And>B. B \\<in> atms_of D' \\<Longrightarrow> B \\<le> A", "by metis"], ["proof (state)\nthis:\n  ?B1 \\<in> atms_of D' \\<Longrightarrow> ?B1 \\<le> A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?B1 \\<in> atms_of D' \\<Longrightarrow> ?B1 \\<le> A", "have \"\\<And>L. L \\<in># D' \\<Longrightarrow> L < Neg A\""], ["proof (prove)\nusing this:\n  ?B1 \\<in> atms_of D' \\<Longrightarrow> ?B1 \\<le> A\n\ngoal (1 subgoal):\n 1. \\<And>L. L \\<in># D' \\<Longrightarrow> L < Neg A", "using neg_a_ni_d' antisym_conv1 atms_less_eq_imp_lit_less_eq_neg"], ["proof (prove)\nusing this:\n  ?B1 \\<in> atms_of D' \\<Longrightarrow> ?B1 \\<le> A\n  Neg A \\<notin># D'\n  \\<not> ?x < ?y \\<Longrightarrow> (?x \\<le> ?y) = (?x = ?y)\n  \\<lbrakk>\\<And>B. B \\<in> atms_of ?C \\<Longrightarrow> B \\<le> ?A;\n   ?L \\<in># ?C\\<rbrakk>\n  \\<Longrightarrow> ?L \\<le> Neg ?A\n\ngoal (1 subgoal):\n 1. \\<And>L. L \\<in># D' \\<Longrightarrow> L < Neg A", "by metis"], ["proof (state)\nthis:\n  ?L1 \\<in># D' \\<Longrightarrow> ?L1 < Neg A\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ?L1 \\<in># D' \\<Longrightarrow> ?L1 < Neg A", "have lt_cex: \"D' + C' < C\""], ["proof (prove)\nusing this:\n  ?L1 \\<in># D' \\<Longrightarrow> ?L1 < Neg A\n\ngoal (1 subgoal):\n 1. D' + C' < C", "by (force intro: add.commute simp: c less_multiset\\<^sub>D\\<^sub>M intro: exI[of _ \"{#Neg A#}\"])"], ["proof (state)\nthis:\n  D' + C' < C\n\ngoal (1 subgoal):\n 1. (\\<And>D E.\n        \\<lbrakk>D \\<in> N; INTERP N \\<Turnstile> D;\n         production N D \\<noteq> {}; unord_resolve D C E;\n         \\<not> INTERP N \\<Turnstile> E; E < C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from d_in_n d_true prod_d res_e e_cex lt_cex"], ["proof (chain)\npicking this:\n  D \\<in> N\n  INTERP N \\<Turnstile> D\n  production N D \\<noteq> {}\n  unord_resolve D C (D' + C')\n  \\<not> INTERP N \\<Turnstile> D' + C'\n  D' + C' < C", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> N\n  INTERP N \\<Turnstile> D\n  production N D \\<noteq> {}\n  unord_resolve D C (D' + C')\n  \\<not> INTERP N \\<Turnstile> D' + C'\n  D' + C' < C\n\ngoal (1 subgoal):\n 1. thesis", ".."], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Inference System\\<close>"], ["", "text \\<open>\nTheorem 3.9 and Corollary 3.10 are subsumed in the counterexample-reducing inference system\nframework, which is instantiated below.\n\\<close>"], ["", "definition unord_\\<Gamma> :: \"'a inference set\" where\n  \"unord_\\<Gamma> = {Infer {#C#} D E | C D E. unord_resolve C D E}\""], ["", "sublocale unord_\\<Gamma>_sound_counterex_reducing?:\n  sound_counterex_reducing_inference_system unord_\\<Gamma> INTERP"], ["proof (prove)\ngoal (1 subgoal):\n 1. sound_counterex_reducing_inference_system unord_\\<Gamma> INTERP", "proof unfold_locales"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "fix D E and N :: \"('b :: wellorder) clause set\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "assume \"{#} \\<notin> N\" and \"D \\<in> N\" and \"\\<not> INTERP N \\<Turnstile> D\" and \"\\<And>C. C \\<in> N \\<Longrightarrow> \\<not> INTERP N \\<Turnstile> C \\<Longrightarrow> D \\<le> C\""], ["proof (state)\nthis:\n  {#} \\<notin> N\n  D \\<in> N\n  \\<not> INTERP N \\<Turnstile> D\n  \\<lbrakk>?C1 \\<in> N; \\<not> INTERP N \\<Turnstile> ?C1\\<rbrakk>\n  \\<Longrightarrow> D \\<le> ?C1\n\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "then"], ["proof (chain)\npicking this:\n  {#} \\<notin> N\n  D \\<in> N\n  \\<not> INTERP N \\<Turnstile> D\n  \\<lbrakk>?C1 \\<in> N; \\<not> INTERP N \\<Turnstile> ?C1\\<rbrakk>\n  \\<Longrightarrow> D \\<le> ?C1", "obtain C E where\n    c_in_n: \"C \\<in> N\" and\n    c_true: \"INTERP N \\<Turnstile> C\" and\n    res_e: \"unord_resolve C D E\" and\n    e_cex: \"\\<not> INTERP N \\<Turnstile> E\" and\n    e_lt_d: \"E < D\""], ["proof (prove)\nusing this:\n  {#} \\<notin> N\n  D \\<in> N\n  \\<not> INTERP N \\<Turnstile> D\n  \\<lbrakk>?C1 \\<in> N; \\<not> INTERP N \\<Turnstile> ?C1\\<rbrakk>\n  \\<Longrightarrow> D \\<le> ?C1\n\ngoal (1 subgoal):\n 1. (\\<And>C E.\n        \\<lbrakk>C \\<in> N; INTERP N \\<Turnstile> C; unord_resolve C D E;\n         \\<not> INTERP N \\<Turnstile> E; E < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using unord_resolve_counterex_reducing"], ["proof (prove)\nusing this:\n  {#} \\<notin> N\n  D \\<in> N\n  \\<not> INTERP N \\<Turnstile> D\n  \\<lbrakk>?C1 \\<in> N; \\<not> INTERP N \\<Turnstile> ?C1\\<rbrakk>\n  \\<Longrightarrow> D \\<le> ?C1\n  \\<lbrakk>{#} \\<notin> ?N; ?C \\<in> ?N; \\<not> INTERP ?N \\<Turnstile> ?C;\n   \\<And>D.\n      \\<lbrakk>D \\<in> ?N; \\<not> INTERP ?N \\<Turnstile> D\\<rbrakk>\n      \\<Longrightarrow> ?C \\<le> D;\n   \\<And>D E.\n      \\<lbrakk>D \\<in> ?N; INTERP ?N \\<Turnstile> D;\n       production ?N D \\<noteq> {}; unord_resolve D ?C E;\n       \\<not> INTERP ?N \\<Turnstile> E; E < ?C\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>C E.\n        \\<lbrakk>C \\<in> N; INTERP N \\<Turnstile> C; unord_resolve C D E;\n         \\<not> INTERP N \\<Turnstile> E; E < D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types))"], ["proof (state)\nthis:\n  C \\<in> N\n  INTERP N \\<Turnstile> C\n  unord_resolve C D E\n  \\<not> INTERP N \\<Turnstile> E\n  E < D\n\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "from c_in_n"], ["proof (chain)\npicking this:\n  C \\<in> N", "have \"set_mset {#C#} \\<subseteq> N\""], ["proof (prove)\nusing this:\n  C \\<in> N\n\ngoal (1 subgoal):\n 1. set_mset {#C#} \\<subseteq> N", "by auto"], ["proof (state)\nthis:\n  set_mset {#C#} \\<subseteq> N\n\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "moreover"], ["proof (state)\nthis:\n  set_mset {#C#} \\<subseteq> N\n\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "have \"Infer {#C#} D E \\<in> unord_\\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Infer {#C#} D E \\<in> unord_\\<Gamma>", "unfolding unord_\\<Gamma>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Infer {#C#} D E \\<in> {Infer {#C#} D E |C D E. unord_resolve C D E}", "using res_e"], ["proof (prove)\nusing this:\n  unord_resolve C D E\n\ngoal (1 subgoal):\n 1. Infer {#C#} D E \\<in> {Infer {#C#} D E |C D E. unord_resolve C D E}", "by blast"], ["proof (state)\nthis:\n  Infer {#C#} D E \\<in> unord_\\<Gamma>\n\ngoal (2 subgoals):\n 1. \\<And>N D.\n       \\<lbrakk>{#} \\<notin> N; D \\<in> N; \\<not> INTERP N \\<Turnstile> D;\n        \\<And>C.\n           \\<lbrakk>C \\<in> N; \\<not> INTERP N \\<Turnstile> C\\<rbrakk>\n           \\<Longrightarrow> D \\<le> C\\<rbrakk>\n       \\<Longrightarrow> \\<exists>CC E.\n                            set_mset CC \\<subseteq> N \\<and>\n                            INTERP N \\<Turnstile>m CC \\<and>\n                            Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n                            \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n 2. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "ultimately"], ["proof (chain)\npicking this:\n  set_mset {#C#} \\<subseteq> N\n  Infer {#C#} D E \\<in> unord_\\<Gamma>", "show\n    \"\\<exists>CC E. set_mset CC \\<subseteq> N \\<and> INTERP N \\<Turnstile>m CC \\<and> Infer CC D E \\<in> unord_\\<Gamma> \\<and> \\<not> INTERP N \\<Turnstile> E \\<and> E < D\""], ["proof (prove)\nusing this:\n  set_mset {#C#} \\<subseteq> N\n  Infer {#C#} D E \\<in> unord_\\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<exists>CC E.\n       set_mset CC \\<subseteq> N \\<and>\n       INTERP N \\<Turnstile>m CC \\<and>\n       Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n       \\<not> INTERP N \\<Turnstile> E \\<and> E < D", "using c_in_n c_true e_cex e_lt_d"], ["proof (prove)\nusing this:\n  set_mset {#C#} \\<subseteq> N\n  Infer {#C#} D E \\<in> unord_\\<Gamma>\n  C \\<in> N\n  INTERP N \\<Turnstile> C\n  \\<not> INTERP N \\<Turnstile> E\n  E < D\n\ngoal (1 subgoal):\n 1. \\<exists>CC E.\n       set_mset CC \\<subseteq> N \\<and>\n       INTERP N \\<Turnstile>m CC \\<and>\n       Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n       \\<not> INTERP N \\<Turnstile> E \\<and> E < D", "by blast"], ["proof (state)\nthis:\n  \\<exists>CC E.\n     set_mset CC \\<subseteq> N \\<and>\n     INTERP N \\<Turnstile>m CC \\<and>\n     Infer CC D E \\<in> unord_\\<Gamma> \\<and>\n     \\<not> INTERP N \\<Turnstile> E \\<and> E < D\n\ngoal (1 subgoal):\n 1. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "fix CC D E and I :: \"'b interp\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "assume \"Infer CC D E \\<in> unord_\\<Gamma>\" and \"I \\<Turnstile>m CC\" and \"I \\<Turnstile> D\""], ["proof (state)\nthis:\n  Infer CC D E \\<in> unord_\\<Gamma>\n  I \\<Turnstile>m CC\n  I \\<Turnstile> D\n\ngoal (1 subgoal):\n 1. \\<And>CC D E I.\n       \\<lbrakk>Infer CC D E \\<in> unord_\\<Gamma>; I \\<Turnstile>m CC;\n        I \\<Turnstile> D\\<rbrakk>\n       \\<Longrightarrow> I \\<Turnstile> E", "then"], ["proof (chain)\npicking this:\n  Infer CC D E \\<in> unord_\\<Gamma>\n  I \\<Turnstile>m CC\n  I \\<Turnstile> D", "show \"I \\<Turnstile> E\""], ["proof (prove)\nusing this:\n  Infer CC D E \\<in> unord_\\<Gamma>\n  I \\<Turnstile>m CC\n  I \\<Turnstile> D\n\ngoal (1 subgoal):\n 1. I \\<Turnstile> E", "by (clarsimp simp: unord_\\<Gamma>_def true_cls_mset_def) (erule unord_resolve_sound, auto)"], ["proof (state)\nthis:\n  I \\<Turnstile> E\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas clausal_logic_compact = unord_\\<Gamma>_sound_counterex_reducing.clausal_logic_compact"], ["", "end"], ["", "text \\<open>\nTheorem 3.12, compactness of clausal logic, has finally been derived for a concrete inference\nsystem:\n\\<close>"], ["", "lemmas clausal_logic_compact = ground_resolution_without_selection.clausal_logic_compact"], ["", "end"]]}