{"file_name": "/home/qj213/afp-2021-10-22/thys/Aristotles_Assertoric_Syllogistic/AristotlesAssertoric.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Aristotles_Assertoric_Syllogistic", "problem_names": ["lemma aristo_conversion1 : \n  assumes \"A E B\" shows \"B E A\"", "lemma aristo_conversion2 : \n  assumes \"A I B\" shows \"B I A\"", "lemma aristo_conversion3 : assumes \"A Q B\" and \"B \\<noteq>{} \"  shows \"B I A\"", "lemma Barbara:\n  assumes \"A Q B \" and \"B Q C\" shows \"A Q C\"", "lemma Celarent:\n  assumes \"A E B \" and \"B Q C\" shows \"A E C\"", "lemma Darii:\n  assumes  \"A Q B\" and \"B I C\" shows \"A I C\"", "lemma Ferio:\n  assumes  \"A E B\" and \"B I C\" shows \"A Z C\"", "lemma Cesare:\n  assumes  \"A E B \" and \"A Q C\" shows \"B E C\"", "lemma Camestres:\n  assumes  \"A Q B \" and \"A E C\" shows \"B E C \"", "lemma Festino:\n  assumes  \"A E B \" and \"A I C\" shows \"B Z C \"", "lemma Baroco:\n  assumes  \"A Q B \" and \"A Z C\" shows \"B Z C   \"", "lemma Darapti:\n  assumes  \"A Q C \" and \"B Q C\" and \"C \\<noteq>{}\"   shows \"A I B \"", "lemma Felapton:\n  assumes  \"A E C\" and \"B Q C\"  and  \"C \\<noteq>{}\"   shows \"A Z B\"", "lemma Disamis:\n  assumes  \"A I C\" and \"B Q C\" shows \"A I B\"", "lemma Datisi:\n  assumes  \"A Q C\" and \"B I C\" shows \"A I B\"", "lemma Bocardo:\n  assumes  \"A Z C\" and \"B Q C\" shows \"A Z B\"", "lemma Ferison:  \n  assumes  \"A E C \" and \"B I C\" shows \"A Z B   \"", "lemma GreekMortal : \n  assumes  \"Mortal Q Human\" and \"Human Q Greek \"\n  shows \" Mortal Q Greek \"", "lemma SocratesMortal:\n  assumes \"Socrates \\<in> Human \" and \"Mortal Q Human\"  \n  shows \"Socrates \\<in> Mortal \"", "lemma Darii_reducedto_Camestres:  \n  assumes \"A Q B \" and \"B I C\" and \"A E C  \" (*assms, concl. of Darii  and A E C *)\n  shows \"A I C\"", "lemma Ferio_reducedto_Cesare:  assumes\n  \"A E B \" and \"B I C\" and \"A Q C  \" (*assms, concl. of Ferio  and A Q C *)\nshows \"A Z C\"", "lemma Baroco_reducedto_Barbara :\n  assumes \"A Q B \" and \" A Z C  \" and \" B Q C \" \n  shows \"B Z C\"", "lemma Bocardo_reducedto_Barbara :\n  assumes \" A Z C\" and \"B Q C\" and \"A Q B\" \n  shows \"A Z B\""], "translations": [["", "lemma aristo_conversion1 : \n  assumes \"A E B\" shows \"B E A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B E A", "using assms universal_denial_def"], ["proof (prove)\nusing this:\n  A E B\n  ?A E ?B \\<equiv> \\<forall>b\\<in>?B. b \\<notin> ?A\n\ngoal (1 subgoal):\n 1. B E A", "by blast"], ["", "lemma aristo_conversion2 : \n  assumes \"A I B\" shows \"B I A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B I A", "using assms"], ["proof (prove)\nusing this:\n  A I B\n\ngoal (1 subgoal):\n 1. B I A", "unfolding  particular_affirmation_def"], ["proof (prove)\nusing this:\n  \\<exists>b\\<in>B. b \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>A. b \\<in> B", "by blast"], ["", "lemma aristo_conversion3 : assumes \"A Q B\" and \"B \\<noteq>{} \"  shows \"B I A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B I A", "using assms"], ["proof (prove)\nusing this:\n  A Q B\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. B I A", "unfolding universal_affirmation_def particular_affirmation_def"], ["proof (prove)\nusing this:\n  \\<forall>b\\<in>B. b \\<in> A\n  B \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>A. b \\<in> B", "by blast"], ["", "text\\<open>Remark: Aristotle in general supposes that sets have to be nonempty. Indeed, we observe that \n in many instances it is necessary to assume that the sets are nonempty,\n otherwise Isabelle's automation finds counterexamples.\\<close>"], ["", "subsection\\<open>The Deductions in the Figures (\"Moods\")\\<close>"], ["", "text\\<open>The medieval mnemonic names are used.\\<close>"], ["", "subsubsection\\<open>First Figure\\<close>"], ["", "lemma Barbara:\n  assumes \"A Q B \" and \"B Q C\" shows \"A Q C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Q C", "by (meson assms universal_affirmation_def)"], ["", "lemma Celarent:\n  assumes \"A E B \" and \"B Q C\" shows \"A E C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A E C", "by (meson assms universal_affirmation_def universal_denial_def)"], ["", "lemma Darii:\n  assumes  \"A Q B\" and \"B I C\" shows \"A I C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A I C", "by (meson assms particular_affirmation_def universal_affirmation_def)"], ["", "lemma Ferio:\n  assumes  \"A E B\" and \"B I C\" shows \"A Z C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z C", "by (meson assms particular_affirmation_def particular_denial_def universal_denial_def)"], ["", "subsubsection\\<open>Second Figure\\<close>"], ["", "lemma Cesare:\n  assumes  \"A E B \" and \"A Q C\" shows \"B E C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B E C", "using Celarent aristo_conversion1 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?B Q ?C\\<rbrakk> \\<Longrightarrow> ?A E ?C\n  ?A E ?B \\<Longrightarrow> ?B E ?A\n  A E B\n  A Q C\n\ngoal (1 subgoal):\n 1. B E C", "by blast"], ["", "lemma Camestres:\n  assumes  \"A Q B \" and \"A E C\" shows \"B E C \""], ["proof (prove)\ngoal (1 subgoal):\n 1. B E C", "using Cesare aristo_conversion1 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?A Q ?C\\<rbrakk> \\<Longrightarrow> ?B E ?C\n  ?A E ?B \\<Longrightarrow> ?B E ?A\n  A Q B\n  A E C\n\ngoal (1 subgoal):\n 1. B E C", "by blast"], ["", "lemma Festino:\n  assumes  \"A E B \" and \"A I C\" shows \"B Z C \""], ["proof (prove)\ngoal (1 subgoal):\n 1. B Z C", "using Ferio aristo_conversion1 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?B I ?C\\<rbrakk> \\<Longrightarrow> ?A Z ?C\n  ?A E ?B \\<Longrightarrow> ?B E ?A\n  A E B\n  A I C\n\ngoal (1 subgoal):\n 1. B Z C", "by blast"], ["", "lemma Baroco:\n  assumes  \"A Q B \" and \"A Z C\" shows \"B Z C   \""], ["proof (prove)\ngoal (1 subgoal):\n 1. B Z C", "by (meson assms particular_denial_def universal_affirmation_def)"], ["", "subsubsection\\<open>Third Figure\\<close>"], ["", "lemma Darapti:\n  assumes  \"A Q C \" and \"B Q C\" and \"C \\<noteq>{}\"   shows \"A I B \""], ["proof (prove)\ngoal (1 subgoal):\n 1. A I B", "using Darii assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A Q ?B; ?B I ?C\\<rbrakk> \\<Longrightarrow> ?A I ?C\n  A Q C\n  B Q C\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A I B", "unfolding  universal_affirmation_def particular_affirmation_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>b\\<in>?B. b \\<in> ?A;\n   \\<exists>b\\<in>?C. b \\<in> ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b\\<in>?C. b \\<in> ?A\n  \\<forall>b\\<in>C. b \\<in> A\n  \\<forall>b\\<in>C. b \\<in> B\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>b\\<in>B. b \\<in> A", "by blast"], ["", "lemma Felapton:\n  assumes  \"A E C\" and \"B Q C\"  and  \"C \\<noteq>{}\"   shows \"A Z B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "using Festino aristo_conversion1 aristo_conversion3 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?A I ?C\\<rbrakk> \\<Longrightarrow> ?B Z ?C\n  ?A E ?B \\<Longrightarrow> ?B E ?A\n  \\<lbrakk>?A Q ?B; ?B \\<noteq> {}\\<rbrakk> \\<Longrightarrow> ?B I ?A\n  A E C\n  B Q C\n  C \\<noteq> {}\n\ngoal (1 subgoal):\n 1. A Z B", "by blast"], ["", "lemma Disamis:\n  assumes  \"A I C\" and \"B Q C\" shows \"A I B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A I B", "using Darii aristo_conversion2 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A Q ?B; ?B I ?C\\<rbrakk> \\<Longrightarrow> ?A I ?C\n  ?A I ?B \\<Longrightarrow> ?B I ?A\n  A I C\n  B Q C\n\ngoal (1 subgoal):\n 1. A I B", "by blast"], ["", "lemma Datisi:\n  assumes  \"A Q C\" and \"B I C\" shows \"A I B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A I B", "using Disamis aristo_conversion2 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A I ?C; ?B Q ?C\\<rbrakk> \\<Longrightarrow> ?A I ?B\n  ?A I ?B \\<Longrightarrow> ?B I ?A\n  A Q C\n  B I C\n\ngoal (1 subgoal):\n 1. A I B", "by blast"], ["", "lemma Bocardo:\n  assumes  \"A Z C\" and \"B Q C\" shows \"A Z B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "by (meson assms particular_denial_def universal_affirmation_def)"], ["", "lemma Ferison:  \n  assumes  \"A E C \" and \"B I C\" shows \"A Z B   \""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "using Ferio aristo_conversion2 assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?B I ?C\\<rbrakk> \\<Longrightarrow> ?A Z ?C\n  ?A I ?B \\<Longrightarrow> ?B I ?A\n  A E C\n  B I C\n\ngoal (1 subgoal):\n 1. A Z B", "by blast"], ["", "subsubsection\\<open>Examples\\<close>"], ["", "text\\<open>Example of a deduction with general predication.\\<close>"], ["", "lemma GreekMortal : \n  assumes  \"Mortal Q Human\" and \"Human Q Greek \"\n  shows \" Mortal Q Greek \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mortal Q Greek", "using assms Barbara"], ["proof (prove)\nusing this:\n  Mortal Q Human\n  Human Q Greek\n  \\<lbrakk>?A Q ?B; ?B Q ?C\\<rbrakk> \\<Longrightarrow> ?A Q ?C\n\ngoal (1 subgoal):\n 1. Mortal Q Greek", "by auto"], ["", "text\\<open>Example of a deduction with individual predication.\\<close>"], ["", "lemma SocratesMortal:\n  assumes \"Socrates \\<in> Human \" and \"Mortal Q Human\"  \n  shows \"Socrates \\<in> Mortal \""], ["proof (prove)\ngoal (1 subgoal):\n 1. Socrates \\<in> Mortal", "using assms"], ["proof (prove)\nusing this:\n  Socrates \\<in> Human\n  Mortal Q Human\n\ngoal (1 subgoal):\n 1. Socrates \\<in> Mortal", "by (simp add: universal_affirmation_def)"], ["", "subsection\\<open>Metatheoretical comments\\<close>"], ["", "text\\<open>The following are presented to demonstrate one of Aristotle's metatheoretical\nexplorations. Namely, Aristotle's metatheorem that:\n\"All deductions in all three Figures can eventually be reduced to either Barbara or Celarent\"\nis demonstrated by the proofs below and by considering the proofs from the previous subsection. \\<close>"], ["", "lemma Darii_reducedto_Camestres:  \n  assumes \"A Q B \" and \"B I C\" and \"A E C  \" (*assms, concl. of Darii  and A E C *)\n  shows \"A I C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A I C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A I C", "have \"B E C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B E C", "using Camestres \\<open> A Q B   \\<close>  \\<open>A E C\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A Q ?B; ?A E ?C\\<rbrakk> \\<Longrightarrow> ?B E ?C\n  A Q B\n  A E C\n\ngoal (1 subgoal):\n 1. B E C", "by blast"], ["proof (state)\nthis:\n  B E C\n\ngoal (1 subgoal):\n 1. A I C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. A I C", "using \\<open> B I C \\<close>   \\<open>B E C\\<close>"], ["proof (prove)\nusing this:\n  B I C\n  B E C\n\ngoal (1 subgoal):\n 1. A I C", "by (simp add: particular_affirmation_def universal_denial_def)"], ["proof (state)\nthis:\n  A I C\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>It is already evident from the proofs in the previous subsection that:\n\nCamestres can be reduced to Cesare.\n\nCesare can be reduced to Celarent.\n\nFestino can be reduced to Ferio.\\<close>"], ["", "lemma Ferio_reducedto_Cesare:  assumes\n  \"A E B \" and \"B I C\" and \"A Q C  \" (*assms, concl. of Ferio  and A Q C *)\nshows \"A Z C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A Z C", "have \"B E C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B E C", "using Cesare \\<open>A E B \\<close>  \\<open>A Q C\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A E ?B; ?A Q ?C\\<rbrakk> \\<Longrightarrow> ?B E ?C\n  A E B\n  A Q C\n\ngoal (1 subgoal):\n 1. B E C", "by blast"], ["proof (state)\nthis:\n  B E C\n\ngoal (1 subgoal):\n 1. A Z C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z C", "using  \\<open>B I C \\<close>  \\<open>B E C\\<close>"], ["proof (prove)\nusing this:\n  B I C\n  B E C\n\ngoal (1 subgoal):\n 1. A Z C", "by (simp add: particular_affirmation_def universal_denial_def)"], ["proof (state)\nthis:\n  A Z C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Baroco_reducedto_Barbara :\n  assumes \"A Q B \" and \" A Z C  \" and \" B Q C \" \n  shows \"B Z C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B Z C", "(*assms , concl. of Baroco and  B Q C *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. B Z C", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. B Z C", "have \"A Q C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Q C", "using  \\<open>A Q B \\<close>  \\<open> B Q C \\<close> Barbara"], ["proof (prove)\nusing this:\n  A Q B\n  B Q C\n  \\<lbrakk>?A Q ?B; ?B Q ?C\\<rbrakk> \\<Longrightarrow> ?A Q ?C\n\ngoal (1 subgoal):\n 1. A Q C", "by blast"], ["proof (state)\nthis:\n  A Q C\n\ngoal (1 subgoal):\n 1. B Z C", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. B Z C", "using  \\<open>A Q C\\<close>  \\<open> A Z C \\<close>"], ["proof (prove)\nusing this:\n  A Q C\n  A Z C\n\ngoal (1 subgoal):\n 1. B Z C", "by (simp add: particular_denial_def universal_affirmation_def)"], ["proof (state)\nthis:\n  B Z C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Bocardo_reducedto_Barbara :\n  assumes \" A Z C\" and \"B Q C\" and \"A Q B\" \n  shows \"A Z B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "(*assms, concl of Bocardo and A Q B *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. A Z B", "have \"A Q C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A Q C", "using  \\<open>B Q C\\<close>  \\<open> A Q B\\<close>"], ["proof (prove)\nusing this:\n  B Q C\n  A Q B\n\ngoal (1 subgoal):\n 1. A Q C", "using Barbara"], ["proof (prove)\nusing this:\n  B Q C\n  A Q B\n  \\<lbrakk>?A Q ?B; ?B Q ?C\\<rbrakk> \\<Longrightarrow> ?A Q ?C\n\ngoal (1 subgoal):\n 1. A Q C", "by blast"], ["proof (state)\nthis:\n  A Q C\n\ngoal (1 subgoal):\n 1. A Z B", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. A Z B", "using  \\<open>A Q C\\<close> \\<open> A Z C\\<close>"], ["proof (prove)\nusing this:\n  A Q C\n  A Z C\n\ngoal (1 subgoal):\n 1. A Z B", "by (simp add: particular_denial_def universal_affirmation_def)"], ["proof (state)\nthis:\n  A Z B\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Finally, it is already evident from the proofs in the previous subsection that :\n\n Darapti can be reduced to Darii.\n\n Felapton can be reduced to Festino. \n\n Disamis can be reduced to Darii. \n\n Datisi can be reduced to Disamis. \n\n Ferison can be reduced to Ferio. \\<close>"], ["", "text\\<open>In conclusion, the aforementioned deductions have thus been shown to be reduced to either \nBarbara or Celarent as follows:\n\nBaroco  $\\Rightarrow$ Barbara \n\nBocardo $\\Rightarrow$ Barbara \n\nFelapton $\\Rightarrow$ Festino $\\Rightarrow$ Ferio $\\Rightarrow$ Cesare $\\Rightarrow$ Celarent \n\nDatisi $\\Rightarrow$ Disamis $\\Rightarrow$ Darii $\\Rightarrow$ Camestres $\\Rightarrow$ Cesare \n\nDarapti $\\Rightarrow$ Darii \n\nFerison $\\Rightarrow$ Ferio \n\\<close>"], ["", "subsection\\<open>Acknowledgements\\<close>"], ["", "text\\<open>A.K.-A. was supported by the ERC Advanced Grant ALEXANDRIA (Project 742178)\n funded by the European Research Council and led by Professor Lawrence Paulson\n at the University of Cambridge, UK. Thanks to Wenda Li.\\<close>"], ["", "subsection\\<open>Bibliography\\<close>"], ["", "text\\<open>Smith, Robin, \"Aristotle?s Logic\", \nThe Stanford Encyclopedia of Philosophy (Summer 2019 Edition),\nEdward N. Zalta (ed.), URL = @{url \"https://plato.stanford.edu/archives/sum2019/entries/aristotle-logic/\"}\n\\<close>"], ["", "end"]]}