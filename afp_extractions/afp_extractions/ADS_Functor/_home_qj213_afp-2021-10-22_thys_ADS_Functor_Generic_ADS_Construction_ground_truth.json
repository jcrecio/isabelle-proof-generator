{"file_name": "/home/qj213/afp-2021-10-22/thys/ADS_Functor/Generic_ADS_Construction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ADS_Functor", "problem_names": ["lemma root_hash_T_simps [simp]:\n  \"root_hash_T rha (T\\<^sub>m x) = T\\<^sub>h (root_hash_F rha (root_hash_T rha) x)\"", "lemma root_hash_G_unfold:\n  \"root_hash_G rha rhb = G\\<^sub>h \\<circ> root_hash_F (root_hash_T rha) rhb \\<circ> the_G\\<^sub>m\"", "lemma root_hash_G_simps [simp]:\n  \"root_hash_G rha rhb (G\\<^sub>m x) = G\\<^sub>h (root_hash_F (root_hash_T rha) rhb x)\"", "lemma blinding_of_F_mono_inductive:\n  assumes a: \"\\<And>x y. boa x y \\<longrightarrow> boa' x y\"\n    and b: \"\\<And>x y. bob x y \\<longrightarrow> bob' x y\"\n  shows \"blinding_of_F rha boa rhb bob x y \\<longrightarrow> blinding_of_F rha boa' rhb bob' x y\"", "lemma blinding_of_T_mono:\n  assumes \"bo \\<le> bo'\"\n  shows \"blinding_of_T rh bo \\<le> blinding_of_T rh bo'\"", "lemma blinding_of_T_root_hash:\n  assumes \"bo \\<le> vimage2p rh rh (=)\"\n  shows \"blinding_of_T rh bo \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)\"", "lemma blinding_respects_hashes_T [locale_witness]:\n  \"blinding_respects_hashes rh bo \\<Longrightarrow> blinding_respects_hashes (root_hash_T rh) (blinding_of_T rh bo)\"", "lemma blinding_of_on_T [locale_witness]:\n  assumes \"blinding_of_on A rh bo\"\n  shows \"blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh) (blinding_of_T rh bo)\"\n  (is \"blinding_of_on ?A ?h ?bo\")", "lemmas blinding_of_T [locale_witness] = blinding_of_on_T[where A=UNIV, simplified]", "lemma blinding_of_G_unfold:\n  \"blinding_of_G = vimage2p the_G\\<^sub>m the_G\\<^sub>m (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)\"", "lemma blinding_of_G_mono:\n  assumes \"boa \\<le> boa'\" \"bob \\<le> bob'\"\n  shows \"blinding_of_G rha boa rhb bob \\<le> blinding_of_G rha boa' rhb bob'\"", "lemma blinding_of_G_root_hash:\n  assumes \"boa \\<le> vimage2p rha rha (=)\" and \"bob \\<le> vimage2p rhb rhb (=)\"\n  shows \"blinding_of_G rha boa rhb bob \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)\"", "lemma blinding_of_on_G [locale_witness]:\n  assumes \"blinding_of_on A rha boa\" \"blinding_of_on B rhb bob\"\n  shows \"blinding_of_on {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B} (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)\"\n  (is \"blinding_of_on ?A ?h ?bo\")", "lemmas blinding_of_G [locale_witness] = blinding_of_on_G[where A=UNIV and B=UNIV, simplified]", "lemmas merge_F [locale_witness] = merge_on_F[where A=UNIV and B=UNIV, simplified]", "lemma wfP_subterm_T: \"wfP (\\<lambda>x y. x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y))\"", "lemma irrefl_subterm_T: \"x \\<in> set3_F\\<^sub>m y \\<Longrightarrow> y \\<noteq> the_T\\<^sub>m x\"", "lemma merge_on_T [locale_witness]:\n  assumes \"merge_on A rh bo m\"\n  shows \"merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh) (blinding_of_T rh bo) merge_T\"\n  (is \"merge_on ?A ?h ?bo ?m\")", "lemmas merge_T [locale_witness] = merge_on_T[where A=UNIV, simplified]", "lemma merge_T_cong [fundef_cong]:\n  assumes \"\\<And>a b. a \\<in> set1_T\\<^sub>m x \\<Longrightarrow> m a b = m' a b\"\n  shows \"merge_T rh m x y = merge_T rh m' x y\"", "lemma merge_G_simps [simp]:\n  \"merge_G (G\\<^sub>m x) (G\\<^sub>m y) = map_option G\\<^sub>m (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb x y)\"", "lemma merge_on_G:\n  assumes a: \"merge_on A rha boa ma\" and b: \"merge_on B rhb bob mb\"\n  shows \"merge_on {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B} (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) merge_G\"\n  (is \"merge_on ?A ?h ?bo ?m\")", "lemmas merge_G [locale_witness] = merge_on_G[where A=UNIV and B=UNIV, simplified]", "lemma merge_G_cong [fundef_cong]: \n  \"\\<lbrakk> \\<And>a b. a \\<in> set1_G\\<^sub>m x \\<Longrightarrow> ma a b = ma' a b; \\<And>a b. a \\<in> set3_G\\<^sub>m x \\<Longrightarrow> mb a b = mb' a b \\<rbrakk>\n   \\<Longrightarrow> merge_G rha ma rhb mb x y = merge_G rha ma' rhb mb' x y\""], "translations": [["", "lemma root_hash_T_simps [simp]:\n  \"root_hash_T rha (T\\<^sub>m x) = T\\<^sub>h (root_hash_F rha (root_hash_T rha) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root_hash_T rha (T\\<^sub>m x) =\n    T\\<^sub>h (root_hash_F rha (root_hash_T rha) x)", "by(simp add: root_hash_T_def F\\<^sub>m.map_comp root_hash_F_def T\\<^sub>h.map_id0)"], ["", "subsubsection \\<open>Composition\\<close>"], ["", "primrec root_hash_G' :: \"(('a\\<^sub>h, 'a\\<^sub>h, 'b\\<^sub>h, 'b\\<^sub>h) G\\<^sub>m, ('a\\<^sub>h, 'b\\<^sub>h) G\\<^sub>h) hash\" where\n  \"root_hash_G' (G\\<^sub>m x) = G\\<^sub>h (root_hash_F' (map_F\\<^sub>m root_hash_T' id id id x))\""], ["", "definition root_hash_G :: \"('a\\<^sub>m, 'a\\<^sub>h) hash \\<Rightarrow> ('b\\<^sub>m, 'b\\<^sub>h) hash \\<Rightarrow> (('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) G\\<^sub>m, ('a\\<^sub>h, 'b\\<^sub>h) G\\<^sub>h) hash\" where\n  \"root_hash_G rha rhb = root_hash_G' \\<circ> map_G\\<^sub>m rha id rhb id\""], ["", "lemma root_hash_G_unfold:\n  \"root_hash_G rha rhb = G\\<^sub>h \\<circ> root_hash_F (root_hash_T rha) rhb \\<circ> the_G\\<^sub>m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root_hash_G rha rhb =\n    G\\<^sub>h \\<circ> root_hash_F (root_hash_T rha) rhb \\<circ>\n    the_G\\<^sub>m", "apply(rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       root_hash_G rha rhb x =\n       (G\\<^sub>h \\<circ> root_hash_F (root_hash_T rha) rhb \\<circ>\n        the_G\\<^sub>m)\n        x", "subgoal for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. root_hash_G rha rhb x =\n    (G\\<^sub>h \\<circ> root_hash_F (root_hash_T rha) rhb \\<circ>\n     the_G\\<^sub>m)\n     x", "by(cases x)(simp add: root_hash_G_def fun_eq_iff root_hash_F_def root_hash_T_def F\\<^sub>m.map_comp T\\<^sub>m.map_comp o_def T\\<^sub>h.map_id id_def[symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma root_hash_G_simps [simp]:\n  \"root_hash_G rha rhb (G\\<^sub>m x) = G\\<^sub>h (root_hash_F (root_hash_T rha) rhb x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. root_hash_G rha rhb (G\\<^sub>m x) =\n    G\\<^sub>h (root_hash_F (root_hash_T rha) rhb x)", "by(simp add: root_hash_G_def root_hash_T_def F\\<^sub>m.map_comp root_hash_F_def T\\<^sub>h.map_id0)"], ["", "subsection \\<open>Blinding relation\\<close>"], ["", "text \\<open>\nThe blinding relation determines whether one ADS value is a blinding of another.\n\\<close>"], ["", "subsubsection \\<open> Blinding on the base functor (@{type F\\<^sub>m}) \\<close>"], ["", "type_synonym ('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) blinding_of_F =\n  \"('a\\<^sub>m, 'a\\<^sub>h) hash \\<Rightarrow> 'a\\<^sub>m blinding_of \\<Rightarrow> ('b\\<^sub>m, 'b\\<^sub>h) hash \\<Rightarrow> 'b\\<^sub>m blinding_of \\<Rightarrow> ('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) F\\<^sub>m blinding_of\"\n\n\\<comment> \\<open> Computes whether a partially blinded ADS is a blinding of another one \\<close>"], ["", "axiomatization blinding_of_F :: \"('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) blinding_of_F\" where\n  blinding_of_F_mono: \"\\<lbrakk> boa \\<le> boa'; bob \\<le> bob' \\<rbrakk>\n    \\<Longrightarrow> blinding_of_F rha boa rhb bob \\<le> blinding_of_F rha boa' rhb bob'\"\n    \\<comment> \\<open> Monotonicity must be unconditional (without the assumption @{text \"blinding_of_on\"}) \n         such that we can justify the recursive definition for the least fixpoint. \\<close>\n  and blinding_respects_hashes_F [locale_witness]:\n  \"\\<lbrakk> blinding_respects_hashes rha boa; blinding_respects_hashes rhb bob \\<rbrakk>\n   \\<Longrightarrow> blinding_respects_hashes (root_hash_F rha rhb) (blinding_of_F rha boa rhb bob)\"\n  and blinding_of_on_F [locale_witness]:\n  \"\\<lbrakk> blinding_of_on A rha boa; blinding_of_on B rhb bob \\<rbrakk>\n   \\<Longrightarrow> blinding_of_on {x. set1_F\\<^sub>m x \\<subseteq> A \\<and> set3_F\\<^sub>m x \\<subseteq> B} (root_hash_F rha rhb) (blinding_of_F rha boa rhb bob)\""], ["", "lemma blinding_of_F_mono_inductive:\n  assumes a: \"\\<And>x y. boa x y \\<longrightarrow> boa' x y\"\n    and b: \"\\<And>x y. bob x y \\<longrightarrow> bob' x y\"\n  shows \"blinding_of_F rha boa rhb bob x y \\<longrightarrow> blinding_of_F rha boa' rhb bob' x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_F rha boa rhb bob x y \\<longrightarrow>\n    blinding_of_F rha boa' rhb bob' x y", "using assms"], ["proof (prove)\nusing this:\n  boa ?x ?y \\<longrightarrow> boa' ?x ?y\n  bob ?x ?y \\<longrightarrow> bob' ?x ?y\n\ngoal (1 subgoal):\n 1. blinding_of_F rha boa rhb bob x y \\<longrightarrow>\n    blinding_of_F rha boa' rhb bob' x y", "by(blast intro: blinding_of_F_mono[THEN predicate2D, OF predicate2I predicate2I])"], ["", "subsubsection \\<open> Blinding on least fixpoints \\<close>"], ["", "context\n  fixes rh :: \"('a\\<^sub>m, 'a\\<^sub>h) hash\"\n    and bo :: \"'a\\<^sub>m blinding_of\"\nbegin"], ["", "inductive blinding_of_T :: \"('a\\<^sub>m, 'a\\<^sub>h) T\\<^sub>m blinding_of\" where\n  \"blinding_of_T (T\\<^sub>m x) (T\\<^sub>m y)\" if \n  \"blinding_of_F rh bo (root_hash_T rh) blinding_of_T x y\"\nmonos blinding_of_F_mono_inductive"], ["", "end"], ["", "lemma blinding_of_T_mono:\n  assumes \"bo \\<le> bo'\"\n  shows \"blinding_of_T rh bo \\<le> blinding_of_T rh bo'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_T rh bo \\<le> blinding_of_T rh bo'", "by(rule predicate2I; erule blinding_of_T.induct)\n    (blast intro: blinding_of_T.intros blinding_of_F_mono[THEN predicate2D, OF assms, rotated -1])"], ["", "lemma blinding_of_T_root_hash:\n  assumes \"bo \\<le> vimage2p rh rh (=)\"\n  shows \"blinding_of_T rh bo \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_T rh bo \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)", "apply(rule predicate2I vimage2pI)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       blinding_of_T rh bo x y \\<Longrightarrow>\n       root_hash_T rh x = root_hash_T rh y", "apply(erule blinding_of_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y xa ya.\n       blinding_of_F rh bo (root_hash_T rh)\n        (\\<lambda>x1 x2.\n            blinding_of_T rh bo x1 x2 \\<and>\n            root_hash_T rh x1 = root_hash_T rh x2)\n        xa ya \\<Longrightarrow>\n       root_hash_T rh (T\\<^sub>m xa) = root_hash_T rh (T\\<^sub>m ya)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       blinding_of_F rh bo (root_hash_T rh)\n        (\\<lambda>x1 x2.\n            blinding_of_T rh bo x1 x2 \\<and>\n            root_hash_T rh x1 = root_hash_T rh x2)\n        xa ya \\<Longrightarrow>\n       root_hash_F rh (root_hash_T rh) xa =\n       root_hash_F rh (root_hash_T rh) ya", "apply(drule blinding_respects_hashes_F[unfolded blinding_respects_hashes_def, THEN predicate2D, rotated -1])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>xa ya. bo \\<le> vimage2p rh rh (=)\n 2. \\<And>xa ya.\n       (\\<lambda>x1 x2.\n           blinding_of_T rh bo x1 x2 \\<and>\n           root_hash_T rh x1 = root_hash_T rh x2)\n       \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)\n 3. \\<And>xa ya.\n       vimage2p (root_hash_F rh (root_hash_T rh))\n        (root_hash_F rh (root_hash_T rh)) (=) xa ya \\<Longrightarrow>\n       root_hash_F rh (root_hash_T rh) xa =\n       root_hash_F rh (root_hash_T rh) ya", "apply(rule assms)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa ya.\n       (\\<lambda>x1 x2.\n           blinding_of_T rh bo x1 x2 \\<and>\n           root_hash_T rh x1 = root_hash_T rh x2)\n       \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)\n 2. \\<And>xa ya.\n       vimage2p (root_hash_F rh (root_hash_T rh))\n        (root_hash_F rh (root_hash_T rh)) (=) xa ya \\<Longrightarrow>\n       root_hash_F rh (root_hash_T rh) xa =\n       root_hash_F rh (root_hash_T rh) ya", "apply(blast intro: vimage2pI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa ya.\n       vimage2p (root_hash_F rh (root_hash_T rh))\n        (root_hash_F rh (root_hash_T rh)) (=) xa ya \\<Longrightarrow>\n       root_hash_F rh (root_hash_T rh) xa =\n       root_hash_F rh (root_hash_T rh) ya", "apply(simp add: vimage2p_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma blinding_respects_hashes_T [locale_witness]:\n  \"blinding_respects_hashes rh bo \\<Longrightarrow> blinding_respects_hashes (root_hash_T rh) (blinding_of_T rh bo)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_respects_hashes rh bo \\<Longrightarrow>\n    blinding_respects_hashes (root_hash_T rh) (blinding_of_T rh bo)", "unfolding blinding_respects_hashes_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bo \\<le> vimage2p rh rh (=) \\<Longrightarrow>\n    blinding_of_T rh bo \\<le> vimage2p (root_hash_T rh) (root_hash_T rh) (=)", "by(rule blinding_of_T_root_hash)"], ["", "lemma blinding_of_on_T [locale_witness]:\n  assumes \"blinding_of_on A rh bo\"\n  shows \"blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh) (blinding_of_T rh bo)\"\n  (is \"blinding_of_on ?A ?h ?bo\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo)", "interpret a: blinding_of_on A rh bo"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on A rh bo", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo)", "proof"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n       blinding_of_T rh bo x x\n 2. \\<And>x y z.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y z;\n        x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo x z\n 3. \\<And>x y.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n        x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"?bo x x \\<and> (?bo x y \\<longrightarrow> ?bo y z \\<longrightarrow> ?bo x z) \\<and> (?bo x y \\<longrightarrow> ?bo y x \\<longrightarrow> x = y)\" \n      if \"x \\<in> ?A\" for x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_T rh bo x x \\<and>\n    (blinding_of_T rh bo x y \\<longrightarrow>\n     blinding_of_T rh bo y z \\<longrightarrow>\n     blinding_of_T rh bo x z) \\<and>\n    (blinding_of_T rh bo x y \\<longrightarrow>\n     blinding_of_T rh bo y x \\<longrightarrow> x = y)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. blinding_of_T rh bo x x \\<and>\n    (blinding_of_T rh bo x y \\<longrightarrow>\n     blinding_of_T rh bo y z \\<longrightarrow>\n     blinding_of_T rh bo x z) \\<and>\n    (blinding_of_T rh bo x y \\<longrightarrow>\n     blinding_of_T rh bo y x \\<longrightarrow> x = y)", "proof(induction x arbitrary: y z)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa y z.\n       \\<lbrakk>\\<And>xaa y z.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    xaa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n                   \\<Longrightarrow> blinding_of_T rh bo xaa xaa \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y z \\<longrightarrow> blinding_of_T rh bo xaa z) \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y xaa \\<longrightarrow> xaa = y);\n        T\\<^sub>m xa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo (T\\<^sub>m xa)\n                          (T\\<^sub>m xa) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y z \\<longrightarrow>\n                          blinding_of_T rh bo (T\\<^sub>m xa) z) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y\n                           (T\\<^sub>m xa) \\<longrightarrow>\n                          T\\<^sub>m xa = y)", "case (T\\<^sub>m x)"], ["proof (state)\nthis:\n  \\<lbrakk>?xaa \\<in> set3_F\\<^sub>m x;\n   ?xaa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_T rh bo ?xaa ?xaa \\<and>\n                    (blinding_of_T rh bo ?xaa ?y \\<longrightarrow>\n                     blinding_of_T rh bo ?y ?z \\<longrightarrow>\n                     blinding_of_T rh bo ?xaa ?z) \\<and>\n                    (blinding_of_T rh bo ?xaa ?y \\<longrightarrow>\n                     blinding_of_T rh bo ?y ?xaa \\<longrightarrow>\n                     ?xaa = ?y)\n  T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<And>xa y z.\n       \\<lbrakk>\\<And>xaa y z.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    xaa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n                   \\<Longrightarrow> blinding_of_T rh bo xaa xaa \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y z \\<longrightarrow> blinding_of_T rh bo xaa z) \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y xaa \\<longrightarrow> xaa = y);\n        T\\<^sub>m xa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo (T\\<^sub>m xa)\n                          (T\\<^sub>m xa) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y z \\<longrightarrow>\n                          blinding_of_T rh bo (T\\<^sub>m xa) z) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y\n                           (T\\<^sub>m xa) \\<longrightarrow>\n                          T\\<^sub>m xa = y)", "interpret blinding_of_on \n        \"{a. set1_F\\<^sub>m a \\<subseteq> A \\<and> set3_F\\<^sub>m a \\<subseteq> set3_F\\<^sub>m x}\" \n        \"root_hash_F rh ?h\" \n        \"blinding_of_F rh bo ?h ?bo\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {a. set1_F\\<^sub>m a \\<subseteq> A \\<and>\n         set3_F\\<^sub>m a \\<subseteq> set3_F\\<^sub>m x}\n     (root_hash_F rh (root_hash_T rh))\n     (blinding_of_F rh bo (root_hash_T rh) (blinding_of_T rh bo))", "apply(rule blinding_of_on_F[OF assms])"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on (set3_F\\<^sub>m x) (root_hash_T rh) (blinding_of_T rh bo)", "apply unfold_locales"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> set3_F\\<^sub>m x \\<Longrightarrow> blinding_of_T rh bo x x\n 2. \\<And>x y z.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y z;\n        x \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo x z\n 3. \\<And>x y.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n        x \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> x = y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<in> set3_F\\<^sub>m x \\<Longrightarrow> blinding_of_T rh bo x_ x_", "using T\\<^sub>m.IH T\\<^sub>m.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>?xaa \\<in> set3_F\\<^sub>m x;\n   ?xaa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_T rh bo ?xaa ?xaa \\<and>\n                    (blinding_of_T rh bo ?xaa ?y \\<longrightarrow>\n                     blinding_of_T rh bo ?y ?z \\<longrightarrow>\n                     blinding_of_T rh bo ?xaa ?z) \\<and>\n                    (blinding_of_T rh bo ?xaa ?y \\<longrightarrow>\n                     blinding_of_T rh bo ?y ?xaa \\<longrightarrow>\n                     ?xaa = ?y)\n  T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. x_ \\<in> set3_F\\<^sub>m x \\<Longrightarrow> blinding_of_T rh bo x_ x_", "by(force simp add: eq_onp_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y z;\n        x \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo x z\n 2. \\<And>x y.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n        x \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> x = y", "subgoal for a b c"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>blinding_of_T rh bo a b; blinding_of_T rh bo b c;\n     a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n    \\<Longrightarrow> blinding_of_T rh bo a c", "using T\\<^sub>m.IH[of a b c] T\\<^sub>m.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in> set3_F\\<^sub>m x;\n   a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_T rh bo a a \\<and>\n                    (blinding_of_T rh bo a b \\<longrightarrow>\n                     blinding_of_T rh bo b c \\<longrightarrow>\n                     blinding_of_T rh bo a c) \\<and>\n                    (blinding_of_T rh bo a b \\<longrightarrow>\n                     blinding_of_T rh bo b a \\<longrightarrow> a = b)\n  T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>blinding_of_T rh bo a b; blinding_of_T rh bo b c;\n     a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n    \\<Longrightarrow> blinding_of_T rh bo a c", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n        x \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> x = y", "subgoal for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>blinding_of_T rh bo a b; blinding_of_T rh bo b a;\n     a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n    \\<Longrightarrow> a = b", "using T\\<^sub>m.IH[of a b] T\\<^sub>m.prems"], ["proof (prove)\nusing this:\n  \\<lbrakk>a \\<in> set3_F\\<^sub>m x;\n   a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_T rh bo a a \\<and>\n                    (blinding_of_T rh bo a b \\<longrightarrow>\n                     blinding_of_T rh bo b ?z \\<longrightarrow>\n                     blinding_of_T rh bo a ?z) \\<and>\n                    (blinding_of_T rh bo a b \\<longrightarrow>\n                     blinding_of_T rh bo b a \\<longrightarrow> a = b)\n  T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>blinding_of_T rh bo a b; blinding_of_T rh bo b a;\n     a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n    \\<Longrightarrow> a = b", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa y z.\n       \\<lbrakk>\\<And>xaa y z.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    xaa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n                   \\<Longrightarrow> blinding_of_T rh bo xaa xaa \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y z \\<longrightarrow> blinding_of_T rh bo xaa z) \\<and>\n                                     (blinding_of_T rh bo xaa\n y \\<longrightarrow>\nblinding_of_T rh bo y xaa \\<longrightarrow> xaa = y);\n        T\\<^sub>m xa \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo (T\\<^sub>m xa)\n                          (T\\<^sub>m xa) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y z \\<longrightarrow>\n                          blinding_of_T rh bo (T\\<^sub>m xa) z) \\<and>\n                         (blinding_of_T rh bo (T\\<^sub>m xa)\n                           y \\<longrightarrow>\n                          blinding_of_T rh bo y\n                           (T\\<^sub>m xa) \\<longrightarrow>\n                          T\\<^sub>m xa = y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_T rh bo (T\\<^sub>m x) (T\\<^sub>m x) \\<and>\n    (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n     blinding_of_T rh bo y z \\<longrightarrow>\n     blinding_of_T rh bo (T\\<^sub>m x) z) \\<and>\n    (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n     blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y)", "using T\\<^sub>m.prems"], ["proof (prove)\nusing this:\n  T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. blinding_of_T rh bo (T\\<^sub>m x) (T\\<^sub>m x) \\<and>\n    (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n     blinding_of_T rh bo y z \\<longrightarrow>\n     blinding_of_T rh bo (T\\<^sub>m x) z) \\<and>\n    (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n     blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y)", "apply(intro conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) (T\\<^sub>m x)\n 2. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y z \\<longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) z\n 3. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) (T\\<^sub>m x)", "by(auto intro: blinding_of_T.intros refl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y z \\<longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) z\n 2. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y z \\<longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) z", "by(auto elim!: blinding_of_T.cases trans intro!: blinding_of_T.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. T\\<^sub>m x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n    blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n    blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y", "by(auto elim!: blinding_of_T.cases dest: antisym)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  blinding_of_T rh bo (T\\<^sub>m x) (T\\<^sub>m x) \\<and>\n  (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n   blinding_of_T rh bo y z \\<longrightarrow>\n   blinding_of_T rh bo (T\\<^sub>m x) z) \\<and>\n  (blinding_of_T rh bo (T\\<^sub>m x) y \\<longrightarrow>\n   blinding_of_T rh bo y (T\\<^sub>m x) \\<longrightarrow> T\\<^sub>m x = y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  blinding_of_T rh bo ?x ?x \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?z \\<longrightarrow>\n   blinding_of_T rh bo ?x ?z) \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?x \\<longrightarrow> ?x = ?y)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n       blinding_of_T rh bo x x\n 2. \\<And>x y z.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y z;\n        x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_T rh bo x z\n 3. \\<And>x y.\n       \\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n        x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> x = y", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  blinding_of_T rh bo ?x ?x \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?z \\<longrightarrow>\n   blinding_of_T rh bo ?x ?z) \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?x \\<longrightarrow> ?x = ?y)", "show \"x \\<in> ?A \\<Longrightarrow> ?bo x x\" \n      and \"\\<lbrakk> ?bo x y; ?bo y z; x \\<in> ?A \\<rbrakk> \\<Longrightarrow> ?bo x z\"\n      and \"\\<lbrakk> ?bo x y; ?bo y x; x \\<in> ?A \\<rbrakk> \\<Longrightarrow> x = y\"\n      for x y z"], ["proof (prove)\nusing this:\n  ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  blinding_of_T rh bo ?x ?x \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?z \\<longrightarrow>\n   blinding_of_T rh bo ?x ?z) \\<and>\n  (blinding_of_T rh bo ?x ?y \\<longrightarrow>\n   blinding_of_T rh bo ?y ?x \\<longrightarrow> ?x = ?y)\n\ngoal (1 subgoal):\n 1. (x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n     blinding_of_T rh bo x x) &&&\n    (\\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y z;\n      x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n     \\<Longrightarrow> blinding_of_T rh bo x z) &&&\n    (\\<lbrakk>blinding_of_T rh bo x y; blinding_of_T rh bo y x;\n      x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n     \\<Longrightarrow> x = y)", "by blast+"], ["proof (state)\nthis:\n  ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  blinding_of_T rh bo ?x ?x\n  \\<lbrakk>blinding_of_T rh bo ?x ?y; blinding_of_T rh bo ?y ?z;\n   ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_T rh bo ?x ?z\n  \\<lbrakk>blinding_of_T rh bo ?x ?y; blinding_of_T rh bo ?y ?x;\n   ?x \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  blinding_of_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n   (blinding_of_T rh bo)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas blinding_of_T [locale_witness] = blinding_of_on_T[where A=UNIV, simplified]"], ["", "subsubsection \\<open> Blinding on composition \\<close>"], ["", "context\n  fixes rha :: \"('a\\<^sub>m, 'a\\<^sub>h) hash\"\n    and boa :: \"'a\\<^sub>m blinding_of\"\n    and rhb :: \"('b\\<^sub>m, 'b\\<^sub>h) hash\"\n    and bob :: \"'b\\<^sub>m blinding_of\"\nbegin"], ["", "inductive blinding_of_G :: \"('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) G\\<^sub>m blinding_of\" where\n  \"blinding_of_G (G\\<^sub>m x) (G\\<^sub>m y)\" if \n  \"blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob x y\""], ["", "lemma blinding_of_G_unfold:\n  \"blinding_of_G = vimage2p the_G\\<^sub>m the_G\\<^sub>m (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.blinding_of_G =\n    vimage2p the_G\\<^sub>m the_G\\<^sub>m\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)", "apply(rule ext)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       local.blinding_of_G x xa =\n       vimage2p the_G\\<^sub>m the_G\\<^sub>m\n        (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob) x\n        xa", "subgoal for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.blinding_of_G x y =\n    vimage2p the_G\\<^sub>m the_G\\<^sub>m\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob) x y", "by(cases x; cases y)(simp_all add: blinding_of_G.simps fun_eq_iff vimage2p_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "lemma blinding_of_G_mono:\n  assumes \"boa \\<le> boa'\" \"bob \\<le> bob'\"\n  shows \"blinding_of_G rha boa rhb bob \\<le> blinding_of_G rha boa' rhb bob'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob \\<le> blinding_of_G rha boa' rhb bob'", "unfolding blinding_of_G_unfold"], ["proof (prove)\ngoal (1 subgoal):\n 1. vimage2p the_G\\<^sub>m the_G\\<^sub>m\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)\n    \\<le> vimage2p the_G\\<^sub>m the_G\\<^sub>m\n           (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa') rhb\n             bob')", "by(rule vimage2p_mono' blinding_of_F_mono blinding_of_T_mono assms)+"], ["", "lemma blinding_of_G_root_hash:\n  assumes \"boa \\<le> vimage2p rha rha (=)\" and \"bob \\<le> vimage2p rhb rhb (=)\"\n  shows \"blinding_of_G rha boa rhb bob \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob\n    \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)", "unfolding blinding_of_G_unfold root_hash_G_unfold vimage2p_comp o_apply"], ["proof (prove)\ngoal (1 subgoal):\n 1. vimage2p the_G\\<^sub>m the_G\\<^sub>m\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)\n    \\<le> vimage2p the_G\\<^sub>m the_G\\<^sub>m\n           (vimage2p (root_hash_F (root_hash_T rha) rhb)\n             (root_hash_F (root_hash_T rha) rhb)\n             (vimage2p G\\<^sub>h G\\<^sub>h (=)))", "apply(rule vimage2p_mono')"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob\n    \\<le> vimage2p (root_hash_F (root_hash_T rha) rhb)\n           (root_hash_F (root_hash_T rha) rhb)\n           (vimage2p G\\<^sub>h G\\<^sub>h (=))", "apply(rule order_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob\n    \\<le> ?y2\n 2. ?y2\n    \\<le> vimage2p (root_hash_F (root_hash_T rha) rhb)\n           (root_hash_F (root_hash_T rha) rhb)\n           (vimage2p G\\<^sub>h G\\<^sub>h (=))", "apply(rule blinding_respects_hashes_F[unfolded blinding_respects_hashes_def])"], ["proof (prove)\ngoal (3 subgoals):\n 1. blinding_of_T rha boa\n    \\<le> vimage2p (root_hash_T rha) (root_hash_T rha) (=)\n 2. bob \\<le> vimage2p rhb rhb (=)\n 3. vimage2p (root_hash_F (root_hash_T rha) rhb)\n     (root_hash_F (root_hash_T rha) rhb) (=)\n    \\<le> vimage2p (root_hash_F (root_hash_T rha) rhb)\n           (root_hash_F (root_hash_T rha) rhb)\n           (vimage2p G\\<^sub>h G\\<^sub>h (=))", "apply(rule blinding_of_T_root_hash)"], ["proof (prove)\ngoal (3 subgoals):\n 1. boa \\<le> vimage2p rha rha (=)\n 2. bob \\<le> vimage2p rhb rhb (=)\n 3. vimage2p (root_hash_F (root_hash_T rha) rhb)\n     (root_hash_F (root_hash_T rha) rhb) (=)\n    \\<le> vimage2p (root_hash_F (root_hash_T rha) rhb)\n           (root_hash_F (root_hash_T rha) rhb)\n           (vimage2p G\\<^sub>h G\\<^sub>h (=))", "apply(rule assms)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. vimage2p (root_hash_F (root_hash_T rha) rhb)\n     (root_hash_F (root_hash_T rha) rhb) (=)\n    \\<le> vimage2p (root_hash_F (root_hash_T rha) rhb)\n           (root_hash_F (root_hash_T rha) rhb)\n           (vimage2p G\\<^sub>h G\\<^sub>h (=))", "apply(rule vimage2p_mono')"], ["proof (prove)\ngoal (1 subgoal):\n 1. (=) \\<le> vimage2p G\\<^sub>h G\\<^sub>h (=)", "apply(simp add: vimage2p_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma blinding_of_on_G [locale_witness]:\n  assumes \"blinding_of_on A rha boa\" \"blinding_of_on B rhb bob\"\n  shows \"blinding_of_on {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B} (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)\"\n  (is \"blinding_of_on ?A ?h ?bo\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "interpret a: blinding_of_on A rha boa"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on A rha boa", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "interpret b: blinding_of_on B rhb bob"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on B rhb bob", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "interpret FT: blinding_of_on \n    \"{x. set1_F\\<^sub>m x \\<subseteq> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<and> set3_F\\<^sub>m x \\<subseteq> B}\" \n    \"root_hash_F (root_hash_T rha) rhb\"\n    \"blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_F\\<^sub>m x\n         \\<subseteq> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<and>\n         set3_F\\<^sub>m x \\<subseteq> B}\n     (root_hash_F (root_hash_T rha) rhb)\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)", ".."], ["proof (state)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. blinding_of_G rha boa rhb bob\n    \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)\n 2. \\<And>x.\n       x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                   set3_G\\<^sub>m x \\<subseteq> B} \\<Longrightarrow>\n       blinding_of_G rha boa rhb bob x x\n 3. \\<And>x y z.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y z;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_G rha boa rhb bob x z\n 4. \\<And>x y.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y x;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"?bo \\<le> vimage2p ?h ?h (=)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob\n    \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)", "using a.hash b.hash"], ["proof (prove)\nusing this:\n  boa \\<le> vimage2p rha rha (=)\n  bob \\<le> vimage2p rhb rhb (=)\n\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob\n    \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)", "by(rule blinding_of_G_root_hash)"], ["proof (state)\nthis:\n  blinding_of_G rha boa rhb bob\n  \\<le> vimage2p (root_hash_G rha rhb) (root_hash_G rha rhb) (=)\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                   set3_G\\<^sub>m x \\<subseteq> B} \\<Longrightarrow>\n       blinding_of_G rha boa rhb bob x x\n 2. \\<And>x y z.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y z;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_G rha boa rhb bob x z\n 3. \\<And>x y.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y x;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"?bo x x\" if \"x \\<in> ?A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob x x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n              set3_G\\<^sub>m x \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob x x", "by(cases x; hypsubst)(rule blinding_of_G.intros; rule FT.refl; auto)"], ["proof (state)\nthis:\n  ?x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n               set3_G\\<^sub>m x \\<subseteq> B} \\<Longrightarrow>\n  blinding_of_G rha boa rhb bob ?x ?x\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y z;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> blinding_of_G rha boa rhb bob x z\n 2. \\<And>x y.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y x;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"?bo x z\" if \"?bo x y\" \"?bo y z\" \"x \\<in> ?A\" for x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob x z", "using that"], ["proof (prove)\nusing this:\n  blinding_of_G rha boa rhb bob x y\n  blinding_of_G rha boa rhb bob y z\n  x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n              set3_G\\<^sub>m x \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. blinding_of_G rha boa rhb bob x z", "by(fastforce elim!: blinding_of_G.cases intro!: blinding_of_G.intros elim!: FT.trans)"], ["proof (state)\nthis:\n  \\<lbrakk>blinding_of_G rha boa rhb bob ?x ?y;\n   blinding_of_G rha boa rhb bob ?y ?z;\n   ?x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n  \\<Longrightarrow> blinding_of_G rha boa rhb bob ?x ?z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>blinding_of_G rha boa rhb bob x y;\n        blinding_of_G rha boa rhb bob y x;\n        x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"x = y\" if \"?bo x y\" \"?bo y x\" \"x \\<in> ?A\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "using that"], ["proof (prove)\nusing this:\n  blinding_of_G rha boa rhb bob x y\n  blinding_of_G rha boa rhb bob y x\n  x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n              set3_G\\<^sub>m x \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. x = y", "by(clarsimp elim!: blinding_of_G.cases)(erule (1) FT.antisym; auto)"], ["proof (state)\nthis:\n  \\<lbrakk>blinding_of_G rha boa rhb bob ?x ?y;\n   blinding_of_G rha boa rhb bob ?y ?x;\n   ?x \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  blinding_of_on\n   {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B}\n   (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas blinding_of_G [locale_witness] = blinding_of_on_G[where A=UNIV and B=UNIV, simplified]"], ["", "subsection \\<open>Merging\\<close>"], ["", "text \\<open>Two Merkle values with the same root hash can be merged into a less blinded Merkle value.\nThe operation is unspecified for trees with different root hashes.\n\\<close>"], ["", "subsubsection \\<open> Merging on the base functor \\<close>"], ["", "axiomatization merge_F :: \"('a\\<^sub>m, 'a\\<^sub>h) hash \\<Rightarrow> 'a\\<^sub>m merge \\<Rightarrow> ('b\\<^sub>m, 'b\\<^sub>h) hash \\<Rightarrow> 'b\\<^sub>m merge \n  \\<Rightarrow> ('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) F\\<^sub>m merge\" where\n  merge_F_cong [fundef_cong]: \n  \"\\<lbrakk> \\<And>a b. a \\<in> set1_F\\<^sub>m x \\<Longrightarrow> ma a b = ma' a b; \\<And>a b. a \\<in> set3_F\\<^sub>m x \\<Longrightarrow> mb a b = mb' a b \\<rbrakk>\n   \\<Longrightarrow> merge_F rha ma rhb mb x y = merge_F rha ma' rhb mb' x y\"\n  and\n  merge_on_F [locale_witness]:\n  \"\\<lbrakk> merge_on A rha boa ma; merge_on B rhb bob mb \\<rbrakk>\n  \\<Longrightarrow> merge_on {x. set1_F\\<^sub>m x \\<subseteq> A \\<and> set3_F\\<^sub>m x \\<subseteq> B} (root_hash_F rha rhb) (blinding_of_F rha boa rhb bob) (merge_F rha ma rhb mb)\""], ["", "lemmas merge_F [locale_witness] = merge_on_F[where A=UNIV and B=UNIV, simplified]"], ["", "subsubsection \\<open> Merging on the least fixpoint \\<close>"], ["", "lemma wfP_subterm_T: \"wfP (\\<lambda>x y. x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>x y. x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y))", "apply(rule wfPUNIVI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       \\<forall>x.\n          (\\<forall>y.\n              y \\<in> set3_F\\<^sub>m (the_T\\<^sub>m x) \\<longrightarrow>\n              P y) \\<longrightarrow>\n          P x \\<Longrightarrow>\n       P x", "subgoal premises IH[rule_format] for P x"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "by(induct x)(auto intro: IH)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma irrefl_subterm_T: \"x \\<in> set3_F\\<^sub>m y \\<Longrightarrow> y \\<noteq> the_T\\<^sub>m x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> set3_F\\<^sub>m y \\<Longrightarrow> y \\<noteq> the_T\\<^sub>m x", "using wfP_subterm_T"], ["proof (prove)\nusing this:\n  wfP (\\<lambda>x y. x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y))\n\ngoal (1 subgoal):\n 1. x \\<in> set3_F\\<^sub>m y \\<Longrightarrow> y \\<noteq> the_T\\<^sub>m x", "by (auto simp: wfP_def elim!: wf_irrefl)"], ["", "context\n  fixes rh :: \"('a\\<^sub>m, 'a\\<^sub>h) hash\"\n  fixes m :: \"'a\\<^sub>m merge\"\nbegin"], ["", "function merge_T :: \"('a\\<^sub>m, 'a\\<^sub>h) T\\<^sub>m merge\" where\n  \"merge_T (T\\<^sub>m x) (T\\<^sub>m y) = map_option T\\<^sub>m (merge_F rh m (root_hash_T rh) merge_T x y)\""], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       (\\<And>xa y.\n           x = (T\\<^sub>m xa, T\\<^sub>m y) \\<Longrightarrow>\n           P) \\<Longrightarrow>\n       P\n 2. \\<And>x y xa ya.\n       (T\\<^sub>m x, T\\<^sub>m y) =\n       (T\\<^sub>m xa, T\\<^sub>m ya) \\<Longrightarrow>\n       map_option T\\<^sub>m\n        (merge_F rh m (root_hash_T rh)\n          (\\<lambda>x0 x1. merge_T_sumC (x0, x1)) x y) =\n       map_option T\\<^sub>m\n        (merge_F rh m (root_hash_T rh)\n          (\\<lambda>x0 x1. merge_T_sumC (x0, x1)) xa ya)", "by pat_completeness auto"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All local.merge_T_dom", "apply(relation \"{(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)} <*lex*> {(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. wf ({(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)} <*lex*>\n        {(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)})\n 2. \\<And>x y a b.\n       a \\<in> set3_F\\<^sub>m x \\<Longrightarrow>\n       ((a, b), T\\<^sub>m x, T\\<^sub>m y)\n       \\<in> {(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)} <*lex*>\n             {(x, y). x \\<in> set3_F\\<^sub>m (the_T\\<^sub>m y)}", "apply(auto simp add: wfP_def[symmetric] wfP_subterm_T)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma merge_on_T [locale_witness]:\n  assumes \"merge_on A rh bo m\"\n  shows \"merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh) (blinding_of_T rh bo) merge_T\"\n  (is \"merge_on ?A ?h ?bo ?m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo) local.merge_T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo) local.merge_T", "interpret a: merge_on A rh bo m"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on A rh bo m", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo) local.merge_T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n     (blinding_of_T rh bo) local.merge_T", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "have \"(?h a = ?h b \\<longrightarrow> (\\<exists>ab. ?m a b = Some ab \\<and> ?bo a ab \\<and> ?bo b ab \\<and> (\\<forall>u. ?bo a u \\<longrightarrow> ?bo b u \\<longrightarrow> ?bo ab u))) \\<and>\n      (?h a \\<noteq> ?h b \\<longrightarrow> ?m a b = None)\"\n      if \"a \\<in> ?A\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<longrightarrow>\n     (\\<exists>ab.\n         local.merge_T a b = Some ab \\<and>\n         blinding_of_T rh bo a ab \\<and>\n         blinding_of_T rh bo b ab \\<and>\n         (\\<forall>u.\n             blinding_of_T rh bo a u \\<longrightarrow>\n             blinding_of_T rh bo b u \\<longrightarrow>\n             blinding_of_T rh bo ab u))) \\<and>\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<longrightarrow>\n     local.merge_T a b = None)", "using that"], ["proof (prove)\nusing this:\n  a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<longrightarrow>\n     (\\<exists>ab.\n         local.merge_T a b = Some ab \\<and>\n         blinding_of_T rh bo a ab \\<and>\n         blinding_of_T rh bo b ab \\<and>\n         (\\<forall>u.\n             blinding_of_T rh bo a u \\<longrightarrow>\n             blinding_of_T rh bo b u \\<longrightarrow>\n             blinding_of_T rh bo ab u))) \\<and>\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<longrightarrow>\n     local.merge_T a b = None)", "unfolding mem_Collect_eq"], ["proof (prove)\nusing this:\n  set1_T\\<^sub>m a \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<longrightarrow>\n     (\\<exists>ab.\n         local.merge_T a b = Some ab \\<and>\n         blinding_of_T rh bo a ab \\<and>\n         blinding_of_T rh bo b ab \\<and>\n         (\\<forall>u.\n             blinding_of_T rh bo a u \\<longrightarrow>\n             blinding_of_T rh bo b u \\<longrightarrow>\n             blinding_of_T rh bo ab u))) \\<and>\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<longrightarrow>\n     local.merge_T a b = None)", "proof(induction a arbitrary: b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa b.\n       \\<lbrakk>\\<And>xaa b.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    set1_T\\<^sub>m xaa \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> (root_hash_T rh xaa =\nroot_hash_T rh b \\<longrightarrow>\n(\\<exists>ab.\n    local.merge_T xaa b = Some ab \\<and>\n    blinding_of_T rh bo xaa ab \\<and>\n    blinding_of_T rh bo b ab \\<and>\n    (\\<forall>u.\n        blinding_of_T rh bo xaa u \\<longrightarrow>\n        blinding_of_T rh bo b u \\<longrightarrow>\n        blinding_of_T rh bo ab u))) \\<and>\n                                     (root_hash_T rh xaa \\<noteq>\nroot_hash_T rh b \\<longrightarrow>\nlocal.merge_T xaa b = None);\n        set1_T\\<^sub>m (T\\<^sub>m xa) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (root_hash_T rh (T\\<^sub>m xa) =\n                          root_hash_T rh b \\<longrightarrow>\n                          (\\<exists>ab.\n                              local.merge_T (T\\<^sub>m xa) b =\n                              Some ab \\<and>\n                              blinding_of_T rh bo (T\\<^sub>m xa) ab \\<and>\n                              blinding_of_T rh bo b ab \\<and>\n                              (\\<forall>u.\n                                  blinding_of_T rh bo (T\\<^sub>m xa)\n                                   u \\<longrightarrow>\n                                  blinding_of_T rh bo b u \\<longrightarrow>\n                                  blinding_of_T rh bo ab u))) \\<and>\n                         (root_hash_T rh (T\\<^sub>m xa) \\<noteq>\n                          root_hash_T rh b \\<longrightarrow>\n                          local.merge_T (T\\<^sub>m xa) b = None)", "case (T\\<^sub>m x y)"], ["proof (state)\nthis:\n  \\<lbrakk>?xaa \\<in> set3_F\\<^sub>m x;\n   set1_T\\<^sub>m ?xaa \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> (root_hash_T rh ?xaa =\n                     root_hash_T rh ?b \\<longrightarrow>\n                     (\\<exists>ab.\n                         local.merge_T ?xaa ?b = Some ab \\<and>\n                         blinding_of_T rh bo ?xaa ab \\<and>\n                         blinding_of_T rh bo ?b ab \\<and>\n                         (\\<forall>u.\n                             blinding_of_T rh bo ?xaa u \\<longrightarrow>\n                             blinding_of_T rh bo ?b u \\<longrightarrow>\n                             blinding_of_T rh bo ab u))) \\<and>\n                    (root_hash_T rh ?xaa \\<noteq>\n                     root_hash_T rh ?b \\<longrightarrow>\n                     local.merge_T ?xaa ?b = None)\n  set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>xa b.\n       \\<lbrakk>\\<And>xaa b.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    set1_T\\<^sub>m xaa \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> (root_hash_T rh xaa =\nroot_hash_T rh b \\<longrightarrow>\n(\\<exists>ab.\n    local.merge_T xaa b = Some ab \\<and>\n    blinding_of_T rh bo xaa ab \\<and>\n    blinding_of_T rh bo b ab \\<and>\n    (\\<forall>u.\n        blinding_of_T rh bo xaa u \\<longrightarrow>\n        blinding_of_T rh bo b u \\<longrightarrow>\n        blinding_of_T rh bo ab u))) \\<and>\n                                     (root_hash_T rh xaa \\<noteq>\nroot_hash_T rh b \\<longrightarrow>\nlocal.merge_T xaa b = None);\n        set1_T\\<^sub>m (T\\<^sub>m xa) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (root_hash_T rh (T\\<^sub>m xa) =\n                          root_hash_T rh b \\<longrightarrow>\n                          (\\<exists>ab.\n                              local.merge_T (T\\<^sub>m xa) b =\n                              Some ab \\<and>\n                              blinding_of_T rh bo (T\\<^sub>m xa) ab \\<and>\n                              blinding_of_T rh bo b ab \\<and>\n                              (\\<forall>u.\n                                  blinding_of_T rh bo (T\\<^sub>m xa)\n                                   u \\<longrightarrow>\n                                  blinding_of_T rh bo b u \\<longrightarrow>\n                                  blinding_of_T rh bo ab u))) \\<and>\n                         (root_hash_T rh (T\\<^sub>m xa) \\<noteq>\n                          root_hash_T rh b \\<longrightarrow>\n                          local.merge_T (T\\<^sub>m xa) b = None)", "interpret merge_on \"{y. set1_F\\<^sub>m y \\<subseteq> A \\<and> set3_F\\<^sub>m y \\<subseteq> set3_F\\<^sub>m x}\"\n        \"root_hash_F rh ?h\" \"blinding_of_F rh bo ?h ?bo\" \"merge_F rh m ?h ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on\n     {y. set1_F\\<^sub>m y \\<subseteq> A \\<and>\n         set3_F\\<^sub>m y \\<subseteq> set3_F\\<^sub>m x}\n     (root_hash_F rh (root_hash_T rh))\n     (blinding_of_F rh bo (root_hash_T rh) (blinding_of_T rh bo))\n     (merge_F rh m (root_hash_T rh) local.merge_T)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "assume a: \"a \\<in> set3_F\\<^sub>m x\""], ["proof (state)\nthis:\n  a \\<in> set3_F\\<^sub>m x\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "with T\\<^sub>m.prems"], ["proof (chain)\npicking this:\n  set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A\n  a \\<in> set3_F\\<^sub>m x", "have a': \"set1_T\\<^sub>m a \\<subseteq> A\""], ["proof (prove)\nusing this:\n  set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A\n  a \\<in> set3_F\\<^sub>m x\n\ngoal (1 subgoal):\n 1. set1_T\\<^sub>m a \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set1_T\\<^sub>m a \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> set3_F\\<^sub>m x\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "from T\\<^sub>m.IH[OF a a', rule_format, of b]"], ["proof (chain)\npicking this:\n  (root_hash_T rh a = root_hash_T rh b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T a b = Some ab \\<and>\n       blinding_of_T rh bo a ab \\<and>\n       blinding_of_T rh bo b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo a u \\<longrightarrow>\n           blinding_of_T rh bo b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh a \\<noteq> root_hash_T rh b \\<longrightarrow>\n   local.merge_T a b = None)", "show \"root_hash_T rh a = root_hash_T rh b\n           \\<Longrightarrow> \\<exists>ab. merge_T a b = Some ab \\<and> blinding_of_T rh bo a ab \\<and> blinding_of_T rh bo b ab \\<and>\n                    (\\<forall>u. blinding_of_T rh bo a u \\<longrightarrow> blinding_of_T rh bo b u \\<longrightarrow> blinding_of_T rh bo ab u)\"\n          and \"root_hash_T rh a \\<noteq> root_hash_T rh b \\<Longrightarrow> merge_T a b = None\""], ["proof (prove)\nusing this:\n  (root_hash_T rh a = root_hash_T rh b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T a b = Some ab \\<and>\n       blinding_of_T rh bo a ab \\<and>\n       blinding_of_T rh bo b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo a u \\<longrightarrow>\n           blinding_of_T rh bo b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh a \\<noteq> root_hash_T rh b \\<longrightarrow>\n   local.merge_T a b = None)\n\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<Longrightarrow>\n     \\<exists>ab.\n        local.merge_T a b = Some ab \\<and>\n        blinding_of_T rh bo a ab \\<and>\n        blinding_of_T rh bo b ab \\<and>\n        (\\<forall>u.\n            blinding_of_T rh bo a u \\<longrightarrow>\n            blinding_of_T rh bo b u \\<longrightarrow>\n            blinding_of_T rh bo ab u)) &&&\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<Longrightarrow>\n     local.merge_T a b = None)", "by(auto dest: sym)"], ["proof (state)\nthis:\n  root_hash_T rh a = root_hash_T rh b \\<Longrightarrow>\n  \\<exists>ab.\n     local.merge_T a b = Some ab \\<and>\n     blinding_of_T rh bo a ab \\<and>\n     blinding_of_T rh bo b ab \\<and>\n     (\\<forall>u.\n         blinding_of_T rh bo a u \\<longrightarrow>\n         blinding_of_T rh bo b u \\<longrightarrow> blinding_of_T rh bo ab u)\n  root_hash_T rh a \\<noteq> root_hash_T rh b \\<Longrightarrow>\n  local.merge_T a b = None\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa b.\n       \\<lbrakk>\\<And>xaa b.\n                   \\<lbrakk>xaa \\<in> set3_F\\<^sub>m xa;\n                    set1_T\\<^sub>m xaa \\<subseteq> A\\<rbrakk>\n                   \\<Longrightarrow> (root_hash_T rh xaa =\nroot_hash_T rh b \\<longrightarrow>\n(\\<exists>ab.\n    local.merge_T xaa b = Some ab \\<and>\n    blinding_of_T rh bo xaa ab \\<and>\n    blinding_of_T rh bo b ab \\<and>\n    (\\<forall>u.\n        blinding_of_T rh bo xaa u \\<longrightarrow>\n        blinding_of_T rh bo b u \\<longrightarrow>\n        blinding_of_T rh bo ab u))) \\<and>\n                                     (root_hash_T rh xaa \\<noteq>\nroot_hash_T rh b \\<longrightarrow>\nlocal.merge_T xaa b = None);\n        set1_T\\<^sub>m (T\\<^sub>m xa) \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> (root_hash_T rh (T\\<^sub>m xa) =\n                          root_hash_T rh b \\<longrightarrow>\n                          (\\<exists>ab.\n                              local.merge_T (T\\<^sub>m xa) b =\n                              Some ab \\<and>\n                              blinding_of_T rh bo (T\\<^sub>m xa) ab \\<and>\n                              blinding_of_T rh bo b ab \\<and>\n                              (\\<forall>u.\n                                  blinding_of_T rh bo (T\\<^sub>m xa)\n                                   u \\<longrightarrow>\n                                  blinding_of_T rh bo b u \\<longrightarrow>\n                                  blinding_of_T rh bo ab u))) \\<and>\n                         (root_hash_T rh (T\\<^sub>m xa) \\<noteq>\n                          root_hash_T rh b \\<longrightarrow>\n                          local.merge_T (T\\<^sub>m xa) b = None)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (root_hash_T rh (T\\<^sub>m x) = root_hash_T rh y \\<longrightarrow>\n     (\\<exists>ab.\n         local.merge_T (T\\<^sub>m x) y = Some ab \\<and>\n         blinding_of_T rh bo (T\\<^sub>m x) ab \\<and>\n         blinding_of_T rh bo y ab \\<and>\n         (\\<forall>u.\n             blinding_of_T rh bo (T\\<^sub>m x) u \\<longrightarrow>\n             blinding_of_T rh bo y u \\<longrightarrow>\n             blinding_of_T rh bo ab u))) \\<and>\n    (root_hash_T rh (T\\<^sub>m x) \\<noteq>\n     root_hash_T rh y \\<longrightarrow>\n     local.merge_T (T\\<^sub>m x) y = None)", "using T\\<^sub>m.prems"], ["proof (prove)\nusing this:\n  set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (root_hash_T rh (T\\<^sub>m x) = root_hash_T rh y \\<longrightarrow>\n     (\\<exists>ab.\n         local.merge_T (T\\<^sub>m x) y = Some ab \\<and>\n         blinding_of_T rh bo (T\\<^sub>m x) ab \\<and>\n         blinding_of_T rh bo y ab \\<and>\n         (\\<forall>u.\n             blinding_of_T rh bo (T\\<^sub>m x) u \\<longrightarrow>\n             blinding_of_T rh bo y u \\<longrightarrow>\n             blinding_of_T rh bo ab u))) \\<and>\n    (root_hash_T rh (T\\<^sub>m x) \\<noteq>\n     root_hash_T rh y \\<longrightarrow>\n     local.merge_T (T\\<^sub>m x) y = None)", "apply(intro conjI strip)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A;\n     root_hash_T rh (T\\<^sub>m x) = root_hash_T rh y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ab.\n                         local.merge_T (T\\<^sub>m x) y = Some ab \\<and>\n                         blinding_of_T rh bo (T\\<^sub>m x) ab \\<and>\n                         blinding_of_T rh bo y ab \\<and>\n                         (\\<forall>u.\n                             blinding_of_T rh bo (T\\<^sub>m x)\n                              u \\<longrightarrow>\n                             blinding_of_T rh bo y u \\<longrightarrow>\n                             blinding_of_T rh bo ab u)\n 2. \\<lbrakk>set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A;\n     root_hash_T rh (T\\<^sub>m x) \\<noteq> root_hash_T rh y\\<rbrakk>\n    \\<Longrightarrow> local.merge_T (T\\<^sub>m x) y = None", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A;\n     root_hash_T rh (T\\<^sub>m x) = root_hash_T rh y\\<rbrakk>\n    \\<Longrightarrow> \\<exists>ab.\n                         local.merge_T (T\\<^sub>m x) y = Some ab \\<and>\n                         blinding_of_T rh bo (T\\<^sub>m x) ab \\<and>\n                         blinding_of_T rh bo y ab \\<and>\n                         (\\<forall>u.\n                             blinding_of_T rh bo (T\\<^sub>m x)\n                              u \\<longrightarrow>\n                             blinding_of_T rh bo y u \\<longrightarrow>\n                             blinding_of_T rh bo ab u)", "by(cases y)(auto dest!: join simp add: blinding_of_T.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A;\n     root_hash_T rh (T\\<^sub>m x) \\<noteq> root_hash_T rh y\\<rbrakk>\n    \\<Longrightarrow> local.merge_T (T\\<^sub>m x) y = None", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set1_T\\<^sub>m (T\\<^sub>m x) \\<subseteq> A;\n     root_hash_T rh (T\\<^sub>m x) \\<noteq> root_hash_T rh y\\<rbrakk>\n    \\<Longrightarrow> local.merge_T (T\\<^sub>m x) y = None", "by(cases y)(auto dest!: undefined)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (root_hash_T rh (T\\<^sub>m x) = root_hash_T rh y \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T (T\\<^sub>m x) y = Some ab \\<and>\n       blinding_of_T rh bo (T\\<^sub>m x) ab \\<and>\n       blinding_of_T rh bo y ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo (T\\<^sub>m x) u \\<longrightarrow>\n           blinding_of_T rh bo y u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh (T\\<^sub>m x) \\<noteq> root_hash_T rh y \\<longrightarrow>\n   local.merge_T (T\\<^sub>m x) y = None)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  (root_hash_T rh ?a = root_hash_T rh ?b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T ?a ?b = Some ab \\<and>\n       blinding_of_T rh bo ?a ab \\<and>\n       blinding_of_T rh bo ?b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo ?a u \\<longrightarrow>\n           blinding_of_T rh bo ?b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh ?a \\<noteq> root_hash_T rh ?b \\<longrightarrow>\n   local.merge_T ?a ?b = None)\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a = root_hash_T rh b;\n        a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_T a b = Some ab \\<and>\n                            blinding_of_T rh bo a ab \\<and>\n                            blinding_of_T rh bo b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_T rh bo a u \\<longrightarrow>\n                                blinding_of_T rh bo b u \\<longrightarrow>\n                                blinding_of_T rh bo ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_T rh a \\<noteq> root_hash_T rh b;\n        a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\\<rbrakk>\n       \\<Longrightarrow> local.merge_T a b = None", "then"], ["proof (chain)\npicking this:\n  ?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  (root_hash_T rh ?a = root_hash_T rh ?b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T ?a ?b = Some ab \\<and>\n       blinding_of_T rh bo ?a ab \\<and>\n       blinding_of_T rh bo ?b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo ?a u \\<longrightarrow>\n           blinding_of_T rh bo ?b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh ?a \\<noteq> root_hash_T rh ?b \\<longrightarrow>\n   local.merge_T ?a ?b = None)", "show\n      \"?h a = ?h b \\<Longrightarrow> \\<exists>ab. ?m a b = Some ab \\<and> ?bo a ab \\<and> ?bo b ab \\<and> (\\<forall>u. ?bo a u \\<longrightarrow> ?bo b u \\<longrightarrow> ?bo ab u)\"\n      \"?h a \\<noteq> ?h b \\<Longrightarrow> ?m a b = None\"\n      if \"a \\<in> ?A\" for a b"], ["proof (prove)\nusing this:\n  ?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  (root_hash_T rh ?a = root_hash_T rh ?b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T ?a ?b = Some ab \\<and>\n       blinding_of_T rh bo ?a ab \\<and>\n       blinding_of_T rh bo ?b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo ?a u \\<longrightarrow>\n           blinding_of_T rh bo ?b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh ?a \\<noteq> root_hash_T rh ?b \\<longrightarrow>\n   local.merge_T ?a ?b = None)\n\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<Longrightarrow>\n     \\<exists>ab.\n        local.merge_T a b = Some ab \\<and>\n        blinding_of_T rh bo a ab \\<and>\n        blinding_of_T rh bo b ab \\<and>\n        (\\<forall>u.\n            blinding_of_T rh bo a u \\<longrightarrow>\n            blinding_of_T rh bo b u \\<longrightarrow>\n            blinding_of_T rh bo ab u)) &&&\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<Longrightarrow>\n     local.merge_T a b = None)", "using that"], ["proof (prove)\nusing this:\n  ?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<Longrightarrow>\n  (root_hash_T rh ?a = root_hash_T rh ?b \\<longrightarrow>\n   (\\<exists>ab.\n       local.merge_T ?a ?b = Some ab \\<and>\n       blinding_of_T rh bo ?a ab \\<and>\n       blinding_of_T rh bo ?b ab \\<and>\n       (\\<forall>u.\n           blinding_of_T rh bo ?a u \\<longrightarrow>\n           blinding_of_T rh bo ?b u \\<longrightarrow>\n           blinding_of_T rh bo ab u))) \\<and>\n  (root_hash_T rh ?a \\<noteq> root_hash_T rh ?b \\<longrightarrow>\n   local.merge_T ?a ?b = None)\n  a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A}\n\ngoal (1 subgoal):\n 1. (root_hash_T rh a = root_hash_T rh b \\<Longrightarrow>\n     \\<exists>ab.\n        local.merge_T a b = Some ab \\<and>\n        blinding_of_T rh bo a ab \\<and>\n        blinding_of_T rh bo b ab \\<and>\n        (\\<forall>u.\n            blinding_of_T rh bo a u \\<longrightarrow>\n            blinding_of_T rh bo b u \\<longrightarrow>\n            blinding_of_T rh bo ab u)) &&&\n    (root_hash_T rh a \\<noteq> root_hash_T rh b \\<Longrightarrow>\n     local.merge_T a b = None)", "by blast+"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A};\n   root_hash_T rh ?a = root_hash_T rh ?b\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ab.\n                       local.merge_T ?a ?b = Some ab \\<and>\n                       blinding_of_T rh bo ?a ab \\<and>\n                       blinding_of_T rh bo ?b ab \\<and>\n                       (\\<forall>u.\n                           blinding_of_T rh bo ?a u \\<longrightarrow>\n                           blinding_of_T rh bo ?b u \\<longrightarrow>\n                           blinding_of_T rh bo ab u)\n  \\<lbrakk>?a \\<in> {x. set1_T\\<^sub>m x \\<subseteq> A};\n   root_hash_T rh ?a \\<noteq> root_hash_T rh ?b\\<rbrakk>\n  \\<Longrightarrow> local.merge_T ?a ?b = None\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  merge_on {x. set1_T\\<^sub>m x \\<subseteq> A} (root_hash_T rh)\n   (blinding_of_T rh bo) local.merge_T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas merge_T [locale_witness] = merge_on_T[where A=UNIV, simplified]"], ["", "end"], ["", "lemma merge_T_cong [fundef_cong]:\n  assumes \"\\<And>a b. a \\<in> set1_T\\<^sub>m x \\<Longrightarrow> m a b = m' a b\"\n  shows \"merge_T rh m x y = merge_T rh m' x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_T rh m x y = merge_T rh m' x y", "using assms"], ["proof (prove)\nusing this:\n  ?a \\<in> set1_T\\<^sub>m x \\<Longrightarrow> m ?a ?b = m' ?a ?b\n\ngoal (1 subgoal):\n 1. merge_T rh m x y = merge_T rh m' x y", "apply(induction x y rule: merge_T.induct)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>a \\<in> set3_F\\<^sub>m x;\n                    \\<And>aa b.\n                       aa \\<in> set1_T\\<^sub>m a \\<Longrightarrow>\n                       m aa b = m' aa b\\<rbrakk>\n                   \\<Longrightarrow> merge_T rh m a b = merge_T rh m' a b;\n        \\<And>a b.\n           a \\<in> set1_T\\<^sub>m (T\\<^sub>m x) \\<Longrightarrow>\n           m a b = m' a b\\<rbrakk>\n       \\<Longrightarrow> merge_T rh m (T\\<^sub>m x) (T\\<^sub>m y) =\n                         merge_T rh m' (T\\<^sub>m x) (T\\<^sub>m y)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>a \\<in> set3_F\\<^sub>m x;\n                    \\<And>aa b.\n                       aa \\<in> set1_T\\<^sub>m a \\<Longrightarrow>\n                       m aa b = m' aa b\\<rbrakk>\n                   \\<Longrightarrow> merge_T rh m a b = merge_T rh m' a b;\n        \\<And>a b.\n           a \\<in> set1_F\\<^sub>m x \\<or>\n           (\\<exists>x\\<in>set3_F\\<^sub>m x.\n               a \\<in> set1_T\\<^sub>m x) \\<Longrightarrow>\n           m a b = m' a b\\<rbrakk>\n       \\<Longrightarrow> map_option T\\<^sub>m\n                          (merge_F rh m (root_hash_T rh) (merge_T rh m) x\n                            y) =\n                         map_option T\\<^sub>m\n                          (merge_F rh m' (root_hash_T rh) (merge_T rh m') x\n                            y)", "apply(rule arg_cong[where f=\"map_option _\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>a b.\n                   \\<lbrakk>a \\<in> set3_F\\<^sub>m x;\n                    \\<And>aa b.\n                       aa \\<in> set1_T\\<^sub>m a \\<Longrightarrow>\n                       m aa b = m' aa b\\<rbrakk>\n                   \\<Longrightarrow> merge_T rh m a b = merge_T rh m' a b;\n        \\<And>a b.\n           a \\<in> set1_F\\<^sub>m x \\<or>\n           (\\<exists>x\\<in>set3_F\\<^sub>m x.\n               a \\<in> set1_T\\<^sub>m x) \\<Longrightarrow>\n           m a b = m' a b\\<rbrakk>\n       \\<Longrightarrow> merge_F rh m (root_hash_T rh) (merge_T rh m) x y =\n                         merge_F rh m' (root_hash_T rh) (merge_T rh m') x y", "apply(blast intro: merge_F_cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsubsection \\<open> Merging and composition \\<close>"], ["", "context\n  fixes rha :: \"('a\\<^sub>m, 'a\\<^sub>h) hash\"\n  fixes ma :: \"'a\\<^sub>m merge\"\n  fixes rhb :: \"('b\\<^sub>m, 'b\\<^sub>h) hash\"\n  fixes mb :: \"'b\\<^sub>m merge\"\nbegin"], ["", "primrec merge_G :: \"('a\\<^sub>m, 'a\\<^sub>h, 'b\\<^sub>m, 'b\\<^sub>h) G\\<^sub>m merge\" where\n  \"merge_G (G\\<^sub>m x) y' = (case y' of G\\<^sub>m y \\<Rightarrow>\n    map_option G\\<^sub>m (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb x y))\""], ["", "lemma merge_G_simps [simp]:\n  \"merge_G (G\\<^sub>m x) (G\\<^sub>m y) = map_option G\\<^sub>m (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.merge_G (G\\<^sub>m x) (G\\<^sub>m y) =\n    map_option G\\<^sub>m\n     (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb x y)", "by(simp)"], ["", "declare merge_G.simps [simp del]"], ["", "lemma merge_on_G:\n  assumes a: \"merge_on A rha boa ma\" and b: \"merge_on B rhb bob mb\"\n  shows \"merge_on {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B} (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) merge_G\"\n  (is \"merge_on ?A ?h ?bo ?m\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "interpret a: merge_on A rha boa ma"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on A rha boa ma", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "interpret b: merge_on B rhb bob mb"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on B rhb bob mb", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "interpret F: merge_on \n    \"{x. set1_F\\<^sub>m x \\<subseteq> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<and> set3_F\\<^sub>m x \\<subseteq> B}\"\n    \"root_hash_F (root_hash_T rha) rhb\"\n    \"blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob\"\n    \"merge_F (root_hash_T rha) (merge_T rha ma) rhb mb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_F\\<^sub>m x\n         \\<subseteq> {x. set1_T\\<^sub>m x \\<subseteq> A} \\<and>\n         set3_F\\<^sub>m x \\<subseteq> B}\n     (root_hash_F (root_hash_T rha) rhb)\n     (blinding_of_F (root_hash_T rha) (blinding_of_T rha boa) rhb bob)\n     (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb)", ".."], ["proof (state)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. merge_on\n     {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n         set3_G\\<^sub>m x \\<subseteq> B}\n     (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_G rha rhb a = root_hash_G rha rhb b;\n        a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ab.\n                            local.merge_G a b = Some ab \\<and>\n                            blinding_of_G rha boa rhb bob a ab \\<and>\n                            blinding_of_G rha boa rhb bob b ab \\<and>\n                            (\\<forall>u.\n                                blinding_of_G rha boa rhb bob a\n                                 u \\<longrightarrow>\n                                blinding_of_G rha boa rhb bob b\n                                 u \\<longrightarrow>\n                                blinding_of_G rha boa rhb bob ab u)\n 2. \\<And>a b.\n       \\<lbrakk>root_hash_G rha rhb a \\<noteq> root_hash_G rha rhb b;\n        a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> local.merge_G a b = None", "show \"\\<exists>ab. ?m a b = Some ab \\<and> ?bo a ab \\<and> ?bo b ab \\<and> (\\<forall>u. ?bo a u \\<longrightarrow> ?bo b u \\<longrightarrow> ?bo ab u)\"\n      if \"?h a = ?h b\" \"a \\<in> ?A\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ab.\n       local.merge_G a b = Some ab \\<and>\n       blinding_of_G rha boa rhb bob a ab \\<and>\n       blinding_of_G rha boa rhb bob b ab \\<and>\n       (\\<forall>u.\n           blinding_of_G rha boa rhb bob a u \\<longrightarrow>\n           blinding_of_G rha boa rhb bob b u \\<longrightarrow>\n           blinding_of_G rha boa rhb bob ab u)", "using that"], ["proof (prove)\nusing this:\n  root_hash_G rha rhb a = root_hash_G rha rhb b\n  a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n              set3_G\\<^sub>m x \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. \\<exists>ab.\n       local.merge_G a b = Some ab \\<and>\n       blinding_of_G rha boa rhb bob a ab \\<and>\n       blinding_of_G rha boa rhb bob b ab \\<and>\n       (\\<forall>u.\n           blinding_of_G rha boa rhb bob a u \\<longrightarrow>\n           blinding_of_G rha boa rhb bob b u \\<longrightarrow>\n           blinding_of_G rha boa rhb bob ab u)", "by(cases a; cases b)(auto dest!: F.join simp add: blinding_of_G.simps)"], ["proof (state)\nthis:\n  \\<lbrakk>root_hash_G rha rhb ?a = root_hash_G rha rhb ?b;\n   ?a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>ab.\n                       local.merge_G ?a ?b = Some ab \\<and>\n                       blinding_of_G rha boa rhb bob ?a ab \\<and>\n                       blinding_of_G rha boa rhb bob ?b ab \\<and>\n                       (\\<forall>u.\n                           blinding_of_G rha boa rhb bob ?a\n                            u \\<longrightarrow>\n                           blinding_of_G rha boa rhb bob ?b\n                            u \\<longrightarrow>\n                           blinding_of_G rha boa rhb bob ab u)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>root_hash_G rha rhb a \\<noteq> root_hash_G rha rhb b;\n        a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                    set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n       \\<Longrightarrow> local.merge_G a b = None", "show \"?m a b = None\" if \"?h a \\<noteq> ?h b\" \"a \\<in> ?A\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. local.merge_G a b = None", "using that"], ["proof (prove)\nusing this:\n  root_hash_G rha rhb a \\<noteq> root_hash_G rha rhb b\n  a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n              set3_G\\<^sub>m x \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. local.merge_G a b = None", "by(cases a; cases b)(auto dest!: F.undefined)"], ["proof (state)\nthis:\n  \\<lbrakk>root_hash_G rha rhb ?a \\<noteq> root_hash_G rha rhb ?b;\n   ?a \\<in> {x. set1_G\\<^sub>m x \\<subseteq> A \\<and>\n                set3_G\\<^sub>m x \\<subseteq> B}\\<rbrakk>\n  \\<Longrightarrow> local.merge_G ?a ?b = None\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  merge_on\n   {x. set1_G\\<^sub>m x \\<subseteq> A \\<and> set3_G\\<^sub>m x \\<subseteq> B}\n   (root_hash_G rha rhb) (blinding_of_G rha boa rhb bob) local.merge_G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas merge_G [locale_witness] = merge_on_G[where A=UNIV and B=UNIV, simplified]"], ["", "end"], ["", "lemma merge_G_cong [fundef_cong]: \n  \"\\<lbrakk> \\<And>a b. a \\<in> set1_G\\<^sub>m x \\<Longrightarrow> ma a b = ma' a b; \\<And>a b. a \\<in> set3_G\\<^sub>m x \\<Longrightarrow> mb a b = mb' a b \\<rbrakk>\n   \\<Longrightarrow> merge_G rha ma rhb mb x y = merge_G rha ma' rhb mb' x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>a b.\n                a \\<in> set1_G\\<^sub>m x \\<Longrightarrow> ma a b = ma' a b;\n     \\<And>a b.\n        a \\<in> set3_G\\<^sub>m x \\<Longrightarrow> mb a b = mb' a b\\<rbrakk>\n    \\<Longrightarrow> merge_G rha ma rhb mb x y =\n                      merge_G rha ma' rhb mb' x y", "apply(cases x; cases y; simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa.\n       \\<lbrakk>\\<And>a b.\n                   \\<exists>x\\<in>set1_F\\<^sub>m xa.\n                      a \\<in> set1_T\\<^sub>m x \\<Longrightarrow>\n                   ma a b = ma' a b;\n        \\<And>a b.\n           a \\<in> set3_F\\<^sub>m xa \\<Longrightarrow> mb a b = mb' a b;\n        x = G\\<^sub>m xa; y = G\\<^sub>m xaa\\<rbrakk>\n       \\<Longrightarrow> map_option G\\<^sub>m\n                          (merge_F (root_hash_T rha) (merge_T rha ma) rhb mb\n                            xa xaa) =\n                         map_option G\\<^sub>m\n                          (merge_F (root_hash_T rha) (merge_T rha ma') rhb\n                            mb' xa xaa)", "apply(rule arg_cong[where f=\"map_option _\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa xaa.\n       \\<lbrakk>\\<And>a b.\n                   \\<exists>x\\<in>set1_F\\<^sub>m xa.\n                      a \\<in> set1_T\\<^sub>m x \\<Longrightarrow>\n                   ma a b = ma' a b;\n        \\<And>a b.\n           a \\<in> set3_F\\<^sub>m xa \\<Longrightarrow> mb a b = mb' a b;\n        x = G\\<^sub>m xa; y = G\\<^sub>m xaa\\<rbrakk>\n       \\<Longrightarrow> merge_F (root_hash_T rha) (merge_T rha ma) rhb mb\n                          xa xaa =\n                         merge_F (root_hash_T rha) (merge_T rha ma') rhb mb'\n                          xa xaa", "apply(blast intro: merge_F_cong merge_T_cong)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}