{"file_name": "/home/qj213/afp-2021-10-22/thys/AVL-Trees/AVL2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/AVL-Trees", "problem_names": ["lemma height_l_bal:\n \"height l = height r + 2\n  \\<Longrightarrow> height (l_bal\\<^sub>0 n l r) = height r + 2 \\<or>\n      height (l_bal\\<^sub>0 n l r)  = height r + 3\"", "lemma height_r_bal:\n \"height r = height l + 2\n  \\<Longrightarrow> height (r_bal\\<^sub>0 n l r) = height l + 2 \\<or>\n      height (r_bal\\<^sub>0 n l r) = height l + 3\"", "lemma height_insrt:\n \"is_bal t\n  \\<Longrightarrow> height (insrt\\<^sub>0 x t) = height t \\<or> height (insrt\\<^sub>0 x t) = height t + 1\"", "lemma is_bal_l_bal:\n  \"is_bal l \\<Longrightarrow> is_bal r \\<Longrightarrow> height l = height r + 2 \\<Longrightarrow> is_bal (l_bal\\<^sub>0 n l r)\"", "lemma is_bal_r_bal:\n  \"is_bal l \\<Longrightarrow> is_bal r \\<Longrightarrow> height r = height l + 2 \\<Longrightarrow> is_bal (r_bal\\<^sub>0 n l r)\"", "theorem is_bal_insrt: \n  \"is_bal t \\<Longrightarrow> is_bal(insrt\\<^sub>0 x t)\"", "lemma set_of_l_bal: \"height l = height r + 2 \\<Longrightarrow>\n  set_of (l_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)\"", "lemma set_of_r_bal: \"height r = height l + 2 \\<Longrightarrow>\n  set_of (r_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)\"", "theorem set_of_insrt: \n  \"set_of (insrt\\<^sub>0 x t) = insert x (set_of t)\"", "theorem is_in_correct: \"is_ord t \\<Longrightarrow> is_in\\<^sub>0 k t = (k : set_of t)\"", "lemma is_ord_l_bal:\n \"is_ord (MKT\\<^sub>0 x l r) \\<Longrightarrow> height l = Suc (Suc (height r)) \\<Longrightarrow>\n  is_ord (l_bal\\<^sub>0 x l r)\"", "lemma is_ord_r_bal:\n \"is_ord (MKT\\<^sub>0 x l r) \\<Longrightarrow> height r = height l + 2 \\<Longrightarrow>\n  is_ord (r_bal\\<^sub>0 x l r)\"", "theorem is_ord_insrt:\n \"is_ord t \\<Longrightarrow> is_ord (insrt\\<^sub>0 (x::'a::linorder) t)\"", "lemma height_hinv: \"hinv t \\<Longrightarrow> ht t = height (erase t)\"", "lemma erase_mkt: \"erase (mkt n l r) = MKT\\<^sub>0 n (erase l) (erase r)\"", "lemma erase_l_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height (erase l) = height(erase r) + 2 \\<Longrightarrow>\n  erase (l_bal n l r) = l_bal\\<^sub>0 n (erase l) (erase r)\"", "lemma erase_r_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase r) = height(erase l) + 2 \\<Longrightarrow>\n  erase (r_bal n l r) = r_bal\\<^sub>0 n (erase l) (erase r)\"", "lemma hinv_mkt: \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> hinv (mkt x l r)\"", "lemma hinv_l_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase l) = height(erase r) + 2 \\<Longrightarrow>\n  hinv (l_bal n l r)\"", "lemma hinv_r_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase r) = height(erase l) + 2 \\<Longrightarrow>\n  hinv (r_bal n l r)\"", "theorem hinv_insrt: \"hinv t \\<Longrightarrow> hinv (insrt x t)\"", "lemma erase_insrt: \"hinv t \\<Longrightarrow> erase (insrt x t) = insrt\\<^sub>0 x (erase t)\"", "theorem is_in: \"is_in x t = is_in\\<^sub>0 x (erase t)\""], "translations": [["", "lemma height_l_bal:\n \"height l = height r + 2\n  \\<Longrightarrow> height (l_bal\\<^sub>0 n l r) = height r + 2 \\<or>\n      height (l_bal\\<^sub>0 n l r)  = height r + 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height l = height r + 2 \\<Longrightarrow>\n    height (l_bal\\<^sub>0 n l r) = height r + 2 \\<or>\n    height (l_bal\\<^sub>0 n l r) = height r + 3", "by (cases l) (auto split: tree\\<^sub>0.split if_split_asm)"], ["", "lemma height_r_bal:\n \"height r = height l + 2\n  \\<Longrightarrow> height (r_bal\\<^sub>0 n l r) = height l + 2 \\<or>\n      height (r_bal\\<^sub>0 n l r) = height l + 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height r = height l + 2 \\<Longrightarrow>\n    height (r_bal\\<^sub>0 n l r) = height l + 2 \\<or>\n    height (r_bal\\<^sub>0 n l r) = height l + 3", "by (cases r) (auto split: tree\\<^sub>0.split if_split_asm)"], ["", "lemma height_insrt:\n \"is_bal t\n  \\<Longrightarrow> height (insrt\\<^sub>0 x t) = height t \\<or> height (insrt\\<^sub>0 x t) = height t + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal t \\<Longrightarrow>\n    height (insrt\\<^sub>0 x t) = height t \\<or>\n    height (insrt\\<^sub>0 x t) = height t + 1", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_bal ET\\<^sub>0 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 \\<or>\n    height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 + 1\n 2. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow>\n                height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n                height (insrt\\<^sub>0 x t1) = height t1 + 1;\n        is_bal t2 \\<Longrightarrow>\n        height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n        height (insrt\\<^sub>0 x t2) = height t2 + 1;\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) \\<or>\n                         height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) + 1", "case ET\\<^sub>0"], ["proof (state)\nthis:\n  is_bal ET\\<^sub>0\n\ngoal (2 subgoals):\n 1. is_bal ET\\<^sub>0 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 \\<or>\n    height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 + 1\n 2. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow>\n                height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n                height (insrt\\<^sub>0 x t1) = height t1 + 1;\n        is_bal t2 \\<Longrightarrow>\n        height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n        height (insrt\\<^sub>0 x t2) = height t2 + 1;\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) \\<or>\n                         height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) + 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 \\<or>\n    height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 + 1", "by simp"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 \\<or>\n  height (insrt\\<^sub>0 x ET\\<^sub>0) = height ET\\<^sub>0 + 1\n\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow>\n                height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n                height (insrt\\<^sub>0 x t1) = height t1 + 1;\n        is_bal t2 \\<Longrightarrow>\n        height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n        height (insrt\\<^sub>0 x t2) = height t2 + 1;\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) \\<or>\n                         height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow>\n                height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n                height (insrt\\<^sub>0 x t1) = height t1 + 1;\n        is_bal t2 \\<Longrightarrow>\n        height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n        height (insrt\\<^sub>0 x t2) = height t2 + 1;\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) \\<or>\n                         height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) + 1", "case (MKT\\<^sub>0 n t1 t2)"], ["proof (state)\nthis:\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow>\n                height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n                height (insrt\\<^sub>0 x t1) = height t1 + 1;\n        is_bal t2 \\<Longrightarrow>\n        height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n        height (insrt\\<^sub>0 x t2) = height t2 + 1;\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) \\<or>\n                         height (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2)) =\n                         height (MKT\\<^sub>0 x1 t1 t2) + 1", "then"], ["proof (chain)\npicking this:\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)", "show ?case"], ["proof (prove)\nusing this:\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "proof (cases \"x < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1\n 2. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); \\<not> x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1", "case True"], ["proof (state)\nthis:\n  x < n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1\n 2. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); \\<not> x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "proof (cases \"height (insrt\\<^sub>0 x t1) = height t2 + 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t1) = height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "case True"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t1) = height t2 + 2\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t1) = height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with height_l_bal [of _ _ n]"], ["proof (chain)\npicking this:\n  height ?l = height ?r + 2 \\<Longrightarrow>\n  height (l_bal\\<^sub>0 n ?l ?r) = height ?r + 2 \\<or>\n  height (l_bal\\<^sub>0 n ?l ?r) = height ?r + 3\n  height (insrt\\<^sub>0 x t1) = height t2 + 2", "have \"height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) =\n        height t2 + 2 \\<or> height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 3\""], ["proof (prove)\nusing this:\n  height ?l = height ?r + 2 \\<Longrightarrow>\n  height (l_bal\\<^sub>0 n ?l ?r) = height ?r + 2 \\<or>\n  height (l_bal\\<^sub>0 n ?l ?r) = height ?r + 3\n  height (insrt\\<^sub>0 x t1) = height t2 + 2\n\ngoal (1 subgoal):\n 1. height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 2 \\<or>\n    height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 3", "by simp"], ["proof (state)\nthis:\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 2 \\<or>\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 3\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t1) = height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with \\<open>x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 2 \\<or>\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 3", "show ?thesis"], ["proof (prove)\nusing this:\n  x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 2 \\<or>\n  height (l_bal\\<^sub>0 n (insrt\\<^sub>0 x t1) t2) = height t2 + 3\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "by auto"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "case False"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with \\<open>x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "by auto"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); \\<not> x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); \\<not> x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1", "case False"], ["proof (state)\nthis:\n  \\<not> x < n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>is_bal t1 \\<Longrightarrow>\n             height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n             height (insrt\\<^sub>0 x t1) = height t1 + 1;\n     is_bal t2 \\<Longrightarrow>\n     height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n     height (insrt\\<^sub>0 x t2) = height t2 + 1;\n     is_bal (MKT\\<^sub>0 n t1 t2); \\<not> x < n\\<rbrakk>\n    \\<Longrightarrow> height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) \\<or>\n                      height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n                      height (MKT\\<^sub>0 n t1 t2) + 1", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "proof (cases \"height (insrt\\<^sub>0 x t2) = height t1 + 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t2) = height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "case True"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t2) = height t1 + 2\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t2) = height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with height_r_bal [of _ _ n]"], ["proof (chain)\npicking this:\n  height ?r = height ?l + 2 \\<Longrightarrow>\n  height (r_bal\\<^sub>0 n ?l ?r) = height ?l + 2 \\<or>\n  height (r_bal\\<^sub>0 n ?l ?r) = height ?l + 3\n  height (insrt\\<^sub>0 x t2) = height t1 + 2", "have \"height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 2 \\<or>\n        height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 3\""], ["proof (prove)\nusing this:\n  height ?r = height ?l + 2 \\<Longrightarrow>\n  height (r_bal\\<^sub>0 n ?l ?r) = height ?l + 2 \\<or>\n  height (r_bal\\<^sub>0 n ?l ?r) = height ?l + 3\n  height (insrt\\<^sub>0 x t2) = height t1 + 2\n\ngoal (1 subgoal):\n 1. height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 2 \\<or>\n    height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 3", "by simp"], ["proof (state)\nthis:\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 2 \\<or>\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 3\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t2) = height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1\n 2. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with \\<open>\\<not> x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 2 \\<or>\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 3", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 2 \\<or>\n  height (r_bal\\<^sub>0 n t1 (insrt\\<^sub>0 x t2)) = height t1 + 3\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "by auto"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "case False"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "with \\<open>\\<not> x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) \\<or>\n    height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n    height (MKT\\<^sub>0 n t1 t2) + 1", "by auto"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) \\<or>\n  height (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2)) =\n  height (MKT\\<^sub>0 n t1 t2) + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_bal_l_bal:\n  \"is_bal l \\<Longrightarrow> is_bal r \\<Longrightarrow> height l = height r + 2 \\<Longrightarrow> is_bal (l_bal\\<^sub>0 n l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_bal l; is_bal r; height l = height r + 2\\<rbrakk>\n    \\<Longrightarrow> is_bal (l_bal\\<^sub>0 n l r)", "by (cases l) (auto, auto split: tree\\<^sub>0.split)  \\<comment> \\<open>separating the two auto's is just for speed\\<close>"], ["", "lemma is_bal_r_bal:\n  \"is_bal l \\<Longrightarrow> is_bal r \\<Longrightarrow> height r = height l + 2 \\<Longrightarrow> is_bal (r_bal\\<^sub>0 n l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_bal l; is_bal r; height r = height l + 2\\<rbrakk>\n    \\<Longrightarrow> is_bal (r_bal\\<^sub>0 n l r)", "by (cases r) (auto, auto split: tree\\<^sub>0.split)  \\<comment> \\<open>separating the two auto's is just for speed\\<close>"], ["", "theorem is_bal_insrt: \n  \"is_bal t \\<Longrightarrow> is_bal(insrt\\<^sub>0 x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal t \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t)", "proof (induct t)"], ["proof (state)\ngoal (2 subgoals):\n 1. is_bal ET\\<^sub>0 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x ET\\<^sub>0)\n 2. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1);\n        is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2);\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2))", "case ET\\<^sub>0"], ["proof (state)\nthis:\n  is_bal ET\\<^sub>0\n\ngoal (2 subgoals):\n 1. is_bal ET\\<^sub>0 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x ET\\<^sub>0)\n 2. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1);\n        is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2);\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x ET\\<^sub>0)", "by simp"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x ET\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1);\n        is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2);\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1);\n        is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2);\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2))", "case (MKT\\<^sub>0 n t1 t2)"], ["proof (state)\nthis:\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n\ngoal (1 subgoal):\n 1. \\<And>x1 t1 t2.\n       \\<lbrakk>is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1);\n        is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2);\n        is_bal (MKT\\<^sub>0 x1 t1 t2)\\<rbrakk>\n       \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 x1 t1 t2))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "proof (cases \"x < n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. \\<not> x < n \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case True"], ["proof (state)\nthis:\n  x < n\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. \\<not> x < n \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "proof (cases \"height (insrt\\<^sub>0 x t1) = height t2 + 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t1) = height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case True"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t1) = height t2 + 2\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t1) = height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "with \\<open>x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) = height t2 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) = height t2 + 2\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "by (simp add: is_bal_l_bal)"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case False"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "with \\<open>x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "using height_insrt [of t1 x]"], ["proof (prove)\nusing this:\n  x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t1) \\<noteq> height t2 + 2\n  is_bal t1 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t1) = height t1 \\<or>\n  height (insrt\\<^sub>0 x t1) = height t1 + 1\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "by auto"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case False"], ["proof (state)\nthis:\n  \\<not> x < n\n\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "proof (cases \"height (insrt\\<^sub>0 x t2) = height t1 + 2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t2) = height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case True"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t2) = height t1 + 2\n\ngoal (2 subgoals):\n 1. height (insrt\\<^sub>0 x t2) = height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n 2. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "with \\<open>\\<not> x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) = height t1 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) = height t1 + 2\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "by (simp add: is_bal_r_bal)"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "case False"], ["proof (state)\nthis:\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2\n\ngoal (1 subgoal):\n 1. height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2 \\<Longrightarrow>\n    is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "with \\<open>\\<not> x < n\\<close> MKT\\<^sub>0"], ["proof (chain)\npicking this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "using height_insrt [of t2 x]"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  is_bal t1 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t1)\n  is_bal t2 \\<Longrightarrow> is_bal (insrt\\<^sub>0 x t2)\n  is_bal (MKT\\<^sub>0 n t1 t2)\n  height (insrt\\<^sub>0 x t2) \\<noteq> height t1 + 2\n  is_bal t2 \\<Longrightarrow>\n  height (insrt\\<^sub>0 x t2) = height t2 \\<or>\n  height (insrt\\<^sub>0 x t2) = height t2 + 1\n\ngoal (1 subgoal):\n 1. is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))", "by auto"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_bal (insrt\\<^sub>0 x (MKT\\<^sub>0 n t1 t2))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Correctness of insertion\\<close>"], ["", "lemma set_of_l_bal: \"height l = height r + 2 \\<Longrightarrow>\n  set_of (l_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height l = height r + 2 \\<Longrightarrow>\n    set_of (l_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)", "by (cases l) (auto split: tree\\<^sub>0.splits)"], ["", "lemma set_of_r_bal: \"height r = height l + 2 \\<Longrightarrow>\n  set_of (r_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. height r = height l + 2 \\<Longrightarrow>\n    set_of (r_bal\\<^sub>0 x l r) = insert x (set_of l \\<union> set_of r)", "by (cases r) (auto split: tree\\<^sub>0.splits)"], ["", "theorem set_of_insrt: \n  \"set_of (insrt\\<^sub>0 x t) = insert x (set_of t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_of (insrt\\<^sub>0 x t) = insert x (set_of t)", "by (induct t) (auto simp add:set_of_l_bal set_of_r_bal Let_def)"], ["", "subsubsection \\<open>Correctness of lookup\\<close>"], ["", "theorem is_in_correct: \"is_ord t \\<Longrightarrow> is_in\\<^sub>0 k t = (k : set_of t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_ord t \\<Longrightarrow> is_in\\<^sub>0 k t = (k \\<in> set_of t)", "by (induct t) (auto simp add: less_le_not_le)"], ["", "subsubsection \\<open>Insertion maintains order\\<close>"], ["", "lemma is_ord_l_bal:\n \"is_ord (MKT\\<^sub>0 x l r) \\<Longrightarrow> height l = Suc (Suc (height r)) \\<Longrightarrow>\n  is_ord (l_bal\\<^sub>0 x l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_ord (MKT\\<^sub>0 x l r);\n     height l = Suc (Suc (height r))\\<rbrakk>\n    \\<Longrightarrow> is_ord (l_bal\\<^sub>0 x l r)", "by (cases l) (auto split: tree\\<^sub>0.splits intro: order_less_trans)"], ["", "lemma is_ord_r_bal:\n \"is_ord (MKT\\<^sub>0 x l r) \\<Longrightarrow> height r = height l + 2 \\<Longrightarrow>\n  is_ord (r_bal\\<^sub>0 x l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_ord (MKT\\<^sub>0 x l r); height r = height l + 2\\<rbrakk>\n    \\<Longrightarrow> is_ord (r_bal\\<^sub>0 x l r)", "by (cases r) (auto split:tree\\<^sub>0.splits intro: order_less_trans)"], ["", "text \\<open>If the order is linear, @{const insrt\\<^sub>0} maintains the order:\\<close>"], ["", "theorem is_ord_insrt:\n \"is_ord t \\<Longrightarrow> is_ord (insrt\\<^sub>0 (x::'a::linorder) t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_ord t \\<Longrightarrow> is_ord (insrt\\<^sub>0 x t)", "by (induct t) (simp_all add:is_ord_l_bal is_ord_r_bal set_of_insrt\n    linorder_not_less order_neq_le_trans Let_def)"], ["", "subsection \\<open>Step 2: Binary and AVL trees with height information\\<close>"], ["", "datatype 'a tree = ET |  MKT 'a \"'a tree\" \"'a tree\" nat"], ["", "subsubsection \\<open>Auxiliary functions\\<close>"], ["", "primrec erase :: \"'a tree \\<Rightarrow> 'a tree\\<^sub>0\" where\n  \"erase ET = ET\\<^sub>0\"\n  | \"erase (MKT x l r h) = MKT\\<^sub>0 x (erase l) (erase r)\""], ["", "primrec hinv :: \"'a tree \\<Rightarrow> bool\" where\n  \"hinv ET \\<longleftrightarrow> True\"\n  | \"hinv (MKT x l r h) \\<longleftrightarrow> h = 1 + max (height (erase l)) (height (erase r))\n                        \\<and> hinv l \\<and> hinv r\""], ["", "definition avl :: \"'a tree \\<Rightarrow> bool\" where\n  \"avl t \\<longleftrightarrow> is_bal (erase t) \\<and> hinv t\""], ["", "subsubsection \\<open>AVL interface and efficient implementation\\<close>"], ["", "primrec is_in :: \"('a::preorder) \\<Rightarrow> 'a tree \\<Rightarrow> bool\" where\n  \"is_in k ET \\<longleftrightarrow> False\"\n  | \"is_in k (MKT n l r h) \\<longleftrightarrow> (if k = n then True else\n                            if k < n then (is_in k l)\n                            else (is_in k r))\""], ["", "primrec ht :: \"'a tree \\<Rightarrow> nat\" where\n  \"ht ET = 0\"\n  | \"ht (MKT x l r h) = h\""], ["", "definition mkt :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n  \"mkt x l r = MKT x l r (max (ht l) (ht r) + 1)\""], ["", "primrec l_bal :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n  \"l_bal n (MKT ln ll lr h) r =\n   (if ht ll < ht lr\n    then case lr of ET \\<Rightarrow> ET \\<comment> \\<open>impossible\\<close>\n                  | MKT lrn lrl lrr lrh \\<Rightarrow>\n                    mkt lrn (mkt ln ll lrl) (mkt n lrr r)\n    else mkt ln ll (mkt n lr r))\""], ["", "primrec r_bal :: \"'a \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n \"r_bal n l (MKT rn rl rr h) =\n   (if ht rl > ht rr\n    then case rl of ET \\<Rightarrow> ET \\<comment> \\<open>impossible\\<close>\n                  | MKT rln rll rlr h \\<Rightarrow> mkt rln (mkt n l rll) (mkt rn rlr rr)\n    else mkt rn (mkt n l rl) rr)\""], ["", "primrec insrt :: \"'a::preorder \\<Rightarrow> 'a tree \\<Rightarrow> 'a tree\" where\n  \"insrt x ET = MKT x ET ET 1\"\n  | \"insrt x (MKT n l r h) = \n     (if x=n\n      then MKT n l r h\n      else if x<n\n           then let l' = insrt x l; hl' = ht l'; hr = ht r\n                in if hl' = 2+hr then l_bal n l' r\n                   else MKT n l' r (1 + max hl' hr)\n           else let r' = insrt x r; hl = ht l; hr' = ht r'\n                in if hr' = 2+hl then r_bal n l r'\n                   else MKT n l r' (1 + max hl hr'))\""], ["", "subsubsection \\<open>Correctness proof\\<close>"], ["", "text\\<open>The auxiliary functions are implemented correctly:\\<close>"], ["", "lemma height_hinv: \"hinv t \\<Longrightarrow> ht t = height (erase t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hinv t \\<Longrightarrow> ht t = height (erase t)", "by (induct t) simp_all"], ["", "lemma erase_mkt: \"erase (mkt n l r) = MKT\\<^sub>0 n (erase l) (erase r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. erase (mkt n l r) = MKT\\<^sub>0 n (erase l) (erase r)", "by (simp add: mkt_def)"], ["", "lemma erase_l_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height (erase l) = height(erase r) + 2 \\<Longrightarrow>\n  erase (l_bal n l r) = l_bal\\<^sub>0 n (erase l) (erase r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hinv l; hinv r;\n     height (erase l) = height (erase r) + 2\\<rbrakk>\n    \\<Longrightarrow> erase (l_bal n l r) =\n                      l_bal\\<^sub>0 n (erase l) (erase r)", "by (cases l) (simp_all add: height_hinv erase_mkt split: tree.split)"], ["", "lemma erase_r_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase r) = height(erase l) + 2 \\<Longrightarrow>\n  erase (r_bal n l r) = r_bal\\<^sub>0 n (erase l) (erase r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hinv l; hinv r;\n     height (erase r) = height (erase l) + 2\\<rbrakk>\n    \\<Longrightarrow> erase (r_bal n l r) =\n                      r_bal\\<^sub>0 n (erase l) (erase r)", "by (cases r) (simp_all add: height_hinv erase_mkt split: tree.split)"], ["", "text \\<open>Function @{const insrt} maintains the invariant:\\<close>"], ["", "lemma hinv_mkt: \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> hinv (mkt x l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hinv l; hinv r\\<rbrakk> \\<Longrightarrow> hinv (mkt x l r)", "by (simp add: height_hinv mkt_def)"], ["", "lemma hinv_l_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase l) = height(erase r) + 2 \\<Longrightarrow>\n  hinv (l_bal n l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hinv l; hinv r;\n     height (erase l) = height (erase r) + 2\\<rbrakk>\n    \\<Longrightarrow> hinv (l_bal n l r)", "by (cases l) (auto simp add: hinv_mkt split: tree.splits)"], ["", "lemma hinv_r_bal:\n \"hinv l \\<Longrightarrow> hinv r \\<Longrightarrow> height(erase r) = height(erase l) + 2 \\<Longrightarrow>\n  hinv (r_bal n l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>hinv l; hinv r;\n     height (erase r) = height (erase l) + 2\\<rbrakk>\n    \\<Longrightarrow> hinv (r_bal n l r)", "by (cases r) (auto simp add: hinv_mkt split: tree.splits)"], ["", "theorem hinv_insrt: \"hinv t \\<Longrightarrow> hinv (insrt x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hinv t \\<Longrightarrow> hinv (insrt x t)", "by (induct t) (simp_all add: Let_def height_hinv hinv_l_bal hinv_r_bal)"], ["", "text\\<open>Function @{const insrt} implements @{const insrt\\<^sub>0}:\\<close>"], ["", "lemma erase_insrt: \"hinv t \\<Longrightarrow> erase (insrt x t) = insrt\\<^sub>0 x (erase t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hinv t \\<Longrightarrow> erase (insrt x t) = insrt\\<^sub>0 x (erase t)", "by (induct t) (simp_all add: Let_def hinv_insrt height_hinv erase_l_bal erase_r_bal)"], ["", "text\\<open>Function @{const insrt} meets its spec:\\<close>"], ["", "corollary \"avl t \\<Longrightarrow> set_of (erase (insrt x t)) = insert x (set_of (erase t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. avl t \\<Longrightarrow>\n    set_of (erase (insrt x t)) = insert x (set_of (erase t))", "by (simp add: avl_def erase_insrt set_of_insrt)"], ["", "text\\<open>Function @{const insrt} preserves the invariants:\\<close>"], ["", "corollary \"avl t \\<Longrightarrow> avl (insrt x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. avl t \\<Longrightarrow> avl (insrt x t)", "by (simp add: hinv_insrt avl_def erase_insrt is_bal_insrt)"], ["", "corollary\n  \"avl t \\<Longrightarrow> is_ord (erase t) \\<Longrightarrow> is_ord (erase (insrt (x::'a::linorder) t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>avl t; is_ord (erase t)\\<rbrakk>\n    \\<Longrightarrow> is_ord (erase (insrt x t))", "by (simp add: avl_def erase_insrt is_ord_insrt)"], ["", "text\\<open>Function @{const is_in} implements @{const is_in}:\\<close>"], ["", "theorem is_in: \"is_in x t = is_in\\<^sub>0 x (erase t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_in x t = is_in\\<^sub>0 x (erase t)", "by (induct t) simp_all"], ["", "text\\<open>Function @{const is_in} meets its spec:\\<close>"], ["", "corollary \"is_ord (erase t) \\<Longrightarrow> is_in x t \\<longleftrightarrow> x \\<in> set_of (erase t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_ord (erase t) \\<Longrightarrow>\n    is_in x t = (x \\<in> set_of (erase t))", "by (simp add:is_in is_in_correct)"], ["", "end"]]}