{"file_name": "/home/qj213/afp-2021-10-22/thys/Belief_Revision/AGM_Remainder.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Belief_Revision", "problem_names": ["lemma rem_inclusion: \\<open>B \\<in> A .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<subseteq> A\\<close>", "lemma rem_closure: \"K = Cn(A) \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B = Cn(B)\"", "lemma remainder_extensionality: \\<open>Cn({\\<phi>}) = Cn({\\<psi>}) \\<Longrightarrow> A .\\<bottom>. \\<phi> = A .\\<bottom>. \\<psi>\\<close>", "lemma nonconsequence_remainder: \\<open>A .\\<bottom>. \\<phi> = {A} \\<longleftrightarrow> \\<not> A \\<turnstile> \\<phi>\\<close>", "lemma taut2emptyrem: \\<open>\\<tturnstile> \\<phi> \\<Longrightarrow> A .\\<bottom>. \\<phi> = {}\\<close>", "lemma remainder_recovery: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\\<close>", "lemma remainder_recovery_bis: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> \\<not> B \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>\\<close>", "lemma remainder_expansion: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> \\<not> B \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<oplus> \\<psi> = K\\<close>", "lemma remainder_conj: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<phi> .\\<and>. \\<psi> \\<Longrightarrow> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>) = (K .\\<bottom>. \\<phi>) \\<union> (K .\\<bottom>. \\<psi>)\\<close>", "lemma upper_remainder: \\<open>B \\<subseteq> A \\<Longrightarrow> \\<not> B \\<turnstile> \\<phi> \\<Longrightarrow> \\<exists>B'. B \\<subseteq> B' \\<and>  B' \\<in> A .\\<bottom>. \\<phi>\\<close>"], "translations": [["", "lemma rem_inclusion: \\<open>B \\<in> A .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<subseteq> A\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> A .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<subseteq> A", "by (auto simp add:rem split:if_splits)"], ["", "lemma rem_closure: \"K = Cn(A) \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B = Cn(B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B = Cn B", "apply(cases \\<open>K .\\<bottom>. \\<phi> = {}\\<close>, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; B \\<in> K .\\<bottom>. \\<phi>;\n     K .\\<bottom>. \\<phi> \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> B = Cn B", "by (simp add:rem infer_def) (metis idempotency_L inclusion_L monotonicity_L psubsetI)"], ["", "lemma remainder_extensionality: \\<open>Cn({\\<phi>}) = Cn({\\<psi>}) \\<Longrightarrow> A .\\<bottom>. \\<phi> = A .\\<bottom>. \\<psi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. Cn {\\<phi>} = Cn {\\<psi>} \\<Longrightarrow>\n    A .\\<bottom>. \\<phi> = A .\\<bottom>. \\<psi>", "unfolding rem infer_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Cn {\\<phi>} = Cn {\\<psi>} \\<Longrightarrow>\n    {B. B \\<subseteq> A \\<and>\n        \\<phi> \\<notin> Cn B \\<and>\n        (\\<forall>B'\\<subseteq>A.\n            B \\<subset> B' \\<longrightarrow> \\<phi> \\<in> Cn B')} =\n    {B. B \\<subseteq> A \\<and>\n        \\<psi> \\<notin> Cn B \\<and>\n        (\\<forall>B'\\<subseteq>A.\n            B \\<subset> B' \\<longrightarrow> \\<psi> \\<in> Cn B')}", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>Cn {\\<phi>} = Cn {\\<psi>}; x \\<subseteq> A;\n        \\<phi> \\<notin> Cn x;\n        \\<forall>B'\\<subseteq>A.\n           x \\<subset> B' \\<longrightarrow> \\<phi> \\<in> Cn B';\n        \\<psi> \\<in> Cn x\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x B' xa.\n       \\<lbrakk>Cn {\\<phi>} = Cn {\\<psi>}; x \\<subseteq> A;\n        \\<phi> \\<notin> Cn x;\n        \\<forall>B'\\<subseteq>A.\n           x \\<subset> B' \\<longrightarrow> \\<phi> \\<in> Cn B';\n        B' \\<subseteq> A; x \\<subseteq> B'; \\<psi> \\<notin> Cn B';\n        xa \\<in> B'\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x\n 3. \\<And>x.\n       \\<lbrakk>Cn {\\<phi>} = Cn {\\<psi>}; x \\<subseteq> A;\n        \\<psi> \\<notin> Cn x;\n        \\<forall>B'\\<subseteq>A.\n           x \\<subset> B' \\<longrightarrow> \\<psi> \\<in> Cn B';\n        \\<phi> \\<in> Cn x\\<rbrakk>\n       \\<Longrightarrow> False\n 4. \\<And>x B' xa.\n       \\<lbrakk>Cn {\\<phi>} = Cn {\\<psi>}; x \\<subseteq> A;\n        \\<psi> \\<notin> Cn x;\n        \\<forall>B'\\<subseteq>A.\n           x \\<subset> B' \\<longrightarrow> \\<psi> \\<in> Cn B';\n        B' \\<subseteq> A; x \\<subseteq> B'; \\<phi> \\<notin> Cn B';\n        xa \\<in> B'\\<rbrakk>\n       \\<Longrightarrow> xa \\<in> x", "by (simp_all add: Cn_same) blast+"], ["", "lemma nonconsequence_remainder: \\<open>A .\\<bottom>. \\<phi> = {A} \\<longleftrightarrow> \\<not> A \\<turnstile> \\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A .\\<bottom>. \\<phi> = {A}) = (\\<not> A \\<turnstile> \\<phi>)", "unfolding rem"], ["proof (prove)\ngoal (1 subgoal):\n 1. ({B. B \\<subseteq> A \\<and>\n         \\<not> B \\<turnstile> \\<phi> \\<and>\n         (\\<forall>B'\\<subseteq>A.\n             B \\<subset> B' \\<longrightarrow> B' \\<turnstile> \\<phi>)} =\n     {A}) =\n    (\\<not> A \\<turnstile> \\<phi>)", "by auto                           \n\n\\<comment> \\<open>As we will see further, the other direction requires compactness!\\<close>"], ["", "lemma taut2emptyrem: \\<open>\\<tturnstile> \\<phi> \\<Longrightarrow> A .\\<bottom>. \\<phi> = {}\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tturnstile> \\<phi> \\<Longrightarrow> A .\\<bottom>. \\<phi> = {}", "unfolding rem"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tturnstile> \\<phi> \\<Longrightarrow>\n    {B. B \\<subseteq> A \\<and>\n        \\<not> B \\<turnstile> \\<phi> \\<and>\n        (\\<forall>B'\\<subseteq>A.\n            B \\<subset> B' \\<longrightarrow> B' \\<turnstile> \\<phi>)} =\n    {}", "by (simp add: infer_def validD_L)"], ["", "end"], ["", "subsection \\<open>Remainders in a supraclassical logic\\<close>"], ["", "text\\<open>In case of a supraclassical logic, remainders get impressive properties\\<close>"], ["", "context Supraclassical_logic\n\nbegin\n\n\\<comment> \\<open>As an effect of being maximal, a remainder keeps the eliminated proposition in its propositions hypothesis\\<close>"], ["", "lemma remainder_recovery: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "fix \\<psi> and B"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "assume  a:\\<open>K = Cn(A)\\<close> and c:\\<open>\\<psi> \\<in> K\\<close> and d:\\<open>B \\<in> K .\\<bottom>. \\<phi>\\<close> and e:\\<open>\\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn(B)\\<close>"], ["proof (state)\nthis:\n  K = Cn A\n  \\<psi> \\<in> K\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "with a"], ["proof (chain)\npicking this:\n  K = Cn A\n  K = Cn A\n  \\<psi> \\<in> K\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B", "have f:\\<open>\\<phi> .\\<longrightarrow>. \\<psi> \\<in> K\\<close>"], ["proof (prove)\nusing this:\n  K = Cn A\n  K = Cn A\n  \\<psi> \\<in> K\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B\n\ngoal (1 subgoal):\n 1. \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K", "using impI2 infer_def"], ["proof (prove)\nusing this:\n  K = Cn A\n  K = Cn A\n  \\<psi> \\<in> K\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B\n  ?A \\<turnstile> ?q \\<Longrightarrow>\n  ?A \\<turnstile> ?p .\\<longrightarrow>. ?q\n  ?A \\<turnstile> ?\\<phi> \\<equiv> ?\\<phi> \\<in> Cn ?A\n\ngoal (1 subgoal):\n 1. \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K", "by blast"], ["proof (state)\nthis:\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "with d e"], ["proof (chain)\npicking this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K", "have \\<open>\\<phi> \\<in> Cn(B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B\n  \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K\n\ngoal (1 subgoal):\n 1. \\<phi> \\<in> Cn (B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})", "apply (simp add:rem, elim conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B;\n     \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K;\n     B \\<in> K .\\<bottom>. \\<phi>;\n     \\<phi> .\\<longrightarrow>. \\<psi> \\<notin> Cn B;\n     \\<phi> .\\<longrightarrow>. \\<psi> \\<in> K; B \\<subseteq> K;\n     \\<phi> \\<notin> Cn B;\n     \\<forall>B'\\<subseteq>K.\n        B \\<subset> B' \\<longrightarrow> \\<phi> \\<in> Cn B'\\<rbrakk>\n    \\<Longrightarrow> \\<phi>\n                      \\<in> Cn (insert (\\<phi> .\\<longrightarrow>. \\<psi>)\n                                 B)", "by (metis dual_order.order_iff_strict inclusion_L insert_subset)"], ["proof (state)\nthis:\n  \\<phi> \\<in> Cn (B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "with d"], ["proof (chain)\npicking this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> \\<in> Cn (B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})", "have False"], ["proof (prove)\nusing this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> \\<in> Cn (B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})\n\ngoal (1 subgoal):\n 1. False", "using rem imp_recovery1"], ["proof (prove)\nusing this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  \\<phi> \\<in> Cn (B \\<union> {\\<phi> .\\<longrightarrow>. \\<psi>})\n  ?A .\\<bottom>. ?\\<phi> \\<equiv>\n  {B. B \\<subseteq> ?A \\<and>\n      \\<not> B \\<turnstile> ?\\<phi> \\<and>\n      (\\<forall>B'\\<subseteq>?A.\n          B \\<subset> B' \\<longrightarrow> B' \\<turnstile> ?\\<phi>)}\n  ?A \\<union> {?p .\\<longrightarrow>. ?q} \\<turnstile> ?p \\<Longrightarrow>\n  ?A \\<turnstile> ?p\n\ngoal (1 subgoal):\n 1. False", "by (metis (no_types, lifting) CollectD infer_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>K = Cn A; ?\\<psi>'2 \\<in> K; ?Ba2 \\<in> K .\\<bottom>. \\<phi>;\n   \\<phi> .\\<longrightarrow>. ?\\<psi>'2 \\<notin> Cn ?Ba2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "thus \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>K = Cn A; ?\\<psi>'2 \\<in> K; ?Ba2 \\<in> K .\\<bottom>. \\<phi>;\n   \\<phi> .\\<longrightarrow>. ?\\<psi>'2 \\<notin> Cn ?Ba2\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "using idempotency_L"], ["proof (prove)\nusing this:\n  \\<lbrakk>K = Cn A; ?\\<psi>'2 \\<in> K; ?Ba2 \\<in> K .\\<bottom>. \\<phi>;\n   \\<phi> .\\<longrightarrow>. ?\\<psi>'2 \\<notin> Cn ?Ba2\\<rbrakk>\n  \\<Longrightarrow> False\n  Cn (Cn ?A) = Cn ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n   B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n  \\<Longrightarrow> B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>When you remove some proposition \\<open>\\<phi>\\<close> several other propositions can be lost. \nAn important lemma states that the resulting remainder is also a remainder of any lost proposition\\<close>"], ["", "lemma remainder_recovery_bis: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> \\<not> B \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>", "assume a:\\<open>K = Cn(A)\\<close> and b:\\<open>\\<not> B \\<turnstile> \\<psi>\\<close> and c:\\<open>B \\<in> K .\\<bottom>. \\<phi>\\<close> and d:\\<open>K \\<turnstile> \\<psi>\\<close>"], ["proof (state)\nthis:\n  K = Cn A\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n  K \\<turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>", "hence d:\\<open>B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\\<close>"], ["proof (prove)\nusing this:\n  K = Cn A\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n  K \\<turnstile> \\<psi>\n\ngoal (1 subgoal):\n 1. B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "using remainder_recovery"], ["proof (prove)\nusing this:\n  K = Cn A\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n  K \\<turnstile> \\<psi>\n  \\<lbrakk>?K = Cn ?A; ?K \\<turnstile> ?\\<psi>;\n   ?B \\<in> ?K .\\<bottom>. ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?B \\<turnstile> ?\\<phi> .\\<longrightarrow>. ?\\<psi>\n\ngoal (1 subgoal):\n 1. B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "by simp"], ["proof (state)\nthis:\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>", "with c"], ["proof (chain)\npicking this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>", "show \\<open>B \\<in> K .\\<bottom>. \\<psi>\\<close>"], ["proof (prove)\nusing this:\n  B \\<in> K .\\<bottom>. \\<phi>\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<psi>\n\ngoal (1 subgoal):\n 1. B \\<in> K .\\<bottom>. \\<psi>", "by (simp add:rem) (meson b dual_order.trans infer_def insert_subset monotonicity_L mp_PL order_refl psubset_imp_subset)"], ["proof (state)\nthis:\n  B \\<in> K .\\<bottom>. \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary remainder_recovery_imp: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> \\<tturnstile> (\\<psi> .\\<longrightarrow>. \\<phi>) \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>;\n     \\<tturnstile> (\\<psi> .\\<longrightarrow>. \\<phi>);\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<psi>", "apply(rule remainder_recovery_bis, simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; \\<psi> \\<in> Cn (Cn A);\n     \\<tturnstile> (\\<psi> .\\<longrightarrow>. \\<phi>);\n     B \\<in> Cn A .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<psi> \\<notin> Cn B", "by (simp add:rem) (meson infer_def mp_PL validD_L)\n\n\\<comment> \\<open>If we integrate back the eliminated proposition into the remainder, we retrieve the original set!\\<close>"], ["", "lemma remainder_expansion: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<psi> \\<Longrightarrow> \\<not> B \\<turnstile> \\<psi> \\<Longrightarrow> B \\<in> K .\\<bottom>. \\<phi> \\<Longrightarrow> B \\<oplus> \\<psi> = K\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<oplus> \\<psi> = K", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<oplus> \\<psi> \\<subseteq> K\n 2. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "assume a:\\<open>K = Cn(A)\\<close> and b:\\<open>K \\<turnstile> \\<psi>\\<close> and c:\\<open>\\<not> B \\<turnstile> \\<psi>\\<close> and d:\\<open>B \\<in> K .\\<bottom>. \\<phi>\\<close>"], ["proof (state)\nthis:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> B \\<oplus> \\<psi> \\<subseteq> K\n 2. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "then"], ["proof (chain)\npicking this:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>", "show \\<open>B \\<oplus> \\<psi> \\<subseteq> K\\<close>"], ["proof (prove)\nusing this:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n\ngoal (1 subgoal):\n 1. B \\<oplus> \\<psi> \\<subseteq> K", "by (metis Un_insert_right expansion_def idempotency_L infer_def insert_subset \n              monotonicity_L rem_inclusion sup_bot.right_neutral)"], ["proof (state)\nthis:\n  B \\<oplus> \\<psi> \\<subseteq> K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "assume a:\\<open>K = Cn(A)\\<close> and b:\\<open>K \\<turnstile> \\<psi>\\<close> and c:\\<open>\\<not> B \\<turnstile> \\<psi>\\<close> and d:\\<open>B \\<in> K .\\<bottom>. \\<phi>\\<close>"], ["proof (state)\nthis:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "{"], ["proof (state)\nthis:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "fix \\<chi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "assume \\<open>\\<chi> \\<in> K\\<close>"], ["proof (state)\nthis:\n  \\<chi> \\<in> K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "hence e:\\<open>B \\<turnstile> \\<phi> .\\<longrightarrow>.\\<chi>\\<close>"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>", "using remainder_recovery[OF a _ d, of \\<chi>] assumption_L"], ["proof (prove)\nusing this:\n  \\<chi> \\<in> K\n  K \\<turnstile> \\<chi> \\<Longrightarrow>\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>\n  ?\\<phi> \\<in> ?A \\<Longrightarrow> ?A \\<turnstile> ?\\<phi>\n\ngoal (1 subgoal):\n 1. B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>", "by blast"], ["proof (state)\nthis:\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "have \\<open>\\<psi> \\<in> K\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<in> K", "using a b idempotency_L infer_def"], ["proof (prove)\nusing this:\n  K = Cn A\n  K \\<turnstile> \\<psi>\n  Cn (Cn ?A) = Cn ?A\n  ?A \\<turnstile> ?\\<phi> \\<equiv> ?\\<phi> \\<in> Cn ?A\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> K", "by blast"], ["proof (state)\nthis:\n  \\<psi> \\<in> K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "hence f:\\<open>B \\<union> {\\<psi>} \\<turnstile> \\<phi>\\<close>"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> K\n\ngoal (1 subgoal):\n 1. B \\<union> {\\<psi>} \\<turnstile> \\<phi>", "using b c d"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> K\n  K \\<turnstile> \\<psi>\n  \\<not> B \\<turnstile> \\<psi>\n  B \\<in> K .\\<bottom>. \\<phi>\n\ngoal (1 subgoal):\n 1. B \\<union> {\\<psi>} \\<turnstile> \\<phi>", "apply(simp add:rem)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<psi> \\<in> K; \\<psi> \\<in> Cn K; \\<psi> \\<notin> Cn B;\n     B \\<subseteq> K \\<and>\n     \\<phi> \\<notin> Cn B \\<and>\n     (\\<forall>B'\\<subseteq>K.\n         B \\<subset> B' \\<longrightarrow> \\<phi> \\<in> Cn B')\\<rbrakk>\n    \\<Longrightarrow> \\<phi> \\<in> Cn (insert \\<psi> B)", "by (meson inclusion_L insert_iff insert_subsetI less_le_not_le subset_iff)"], ["proof (state)\nthis:\n  B \\<union> {\\<psi>} \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "from e f"], ["proof (chain)\npicking this:\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>\n  B \\<union> {\\<psi>} \\<turnstile> \\<phi>", "have \\<open>B \\<union> {\\<psi>} \\<turnstile> \\<chi>\\<close>"], ["proof (prove)\nusing this:\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>\n  B \\<union> {\\<psi>} \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. B \\<union> {\\<psi>} \\<turnstile> \\<chi>", "using imp_PL imp_trans"], ["proof (prove)\nusing this:\n  B \\<turnstile> \\<phi> .\\<longrightarrow>. \\<chi>\n  B \\<union> {\\<psi>} \\<turnstile> \\<phi>\n  (?A \\<turnstile> ?p .\\<longrightarrow>. ?q) =\n  (?A \\<union> {?p} \\<turnstile> ?q)\n  \\<lbrakk>?A \\<turnstile> ?p .\\<longrightarrow>. ?q;\n   ?A \\<turnstile> ?q .\\<longrightarrow>. ?r\\<rbrakk>\n  \\<Longrightarrow> ?A \\<turnstile> ?p .\\<longrightarrow>. ?r\n\ngoal (1 subgoal):\n 1. B \\<union> {\\<psi>} \\<turnstile> \\<chi>", "by blast"], ["proof (state)\nthis:\n  B \\<union> {\\<psi>} \\<turnstile> \\<chi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "}"], ["proof (state)\nthis:\n  ?\\<chi>2 \\<in> K \\<Longrightarrow>\n  B \\<union> {\\<psi>} \\<turnstile> ?\\<chi>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<psi>; \\<not> B \\<turnstile> \\<psi>;\n     B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n    \\<Longrightarrow> K \\<subseteq> B \\<oplus> \\<psi>", "then"], ["proof (chain)\npicking this:\n  ?\\<chi>2 \\<in> K \\<Longrightarrow>\n  B \\<union> {\\<psi>} \\<turnstile> ?\\<chi>2", "show \\<open>K \\<subseteq> B \\<oplus> \\<psi>\\<close>"], ["proof (prove)\nusing this:\n  ?\\<chi>2 \\<in> K \\<Longrightarrow>\n  B \\<union> {\\<psi>} \\<turnstile> ?\\<chi>2\n\ngoal (1 subgoal):\n 1. K \\<subseteq> B \\<oplus> \\<psi>", "by (simp add: expansion_def subsetI)"], ["proof (state)\nthis:\n  K \\<subseteq> B \\<oplus> \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>To eliminate a conjunction, we only need to remove one side\\<close>"], ["", "lemma remainder_conj: \\<open>K = Cn(A) \\<Longrightarrow> K \\<turnstile> \\<phi> .\\<and>. \\<psi> \\<Longrightarrow> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>) = (K .\\<bottom>. \\<phi>) \\<union> (K .\\<bottom>. \\<psi>)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>\\<rbrakk>\n    \\<Longrightarrow> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>) =\n                      (K .\\<bottom>. \\<phi>) \\<union> (K .\\<bottom>. \\<psi>)", "apply(intro subset_antisym Un_least subsetI, simp add:rem)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K = Cn A; \\<phi> .\\<and>. \\<psi> \\<in> Cn (Cn A);\n        x \\<subseteq> Cn A \\<and>\n        \\<phi> .\\<and>. \\<psi> \\<notin> Cn x \\<and>\n        (\\<forall>B'\\<subseteq>Cn A.\n            x \\<subset> B' \\<longrightarrow>\n            \\<phi> .\\<and>. \\<psi> \\<in> Cn B')\\<rbrakk>\n       \\<Longrightarrow> \\<phi> \\<notin> Cn x \\<and>\n                         (\\<forall>B'\\<subseteq>Cn A.\n                             x \\<subset> B' \\<longrightarrow>\n                             \\<phi> \\<in> Cn B') \\<or>\n                         \\<psi> \\<notin> Cn x \\<and>\n                         (\\<forall>B'\\<subseteq>Cn A.\n                             x \\<subset> B' \\<longrightarrow>\n                             \\<psi> \\<in> Cn B')\n 2. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)\n 3. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)", "apply (meson conj_PL infer_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)\n 2. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)", "using remainder_recovery_imp[of K A \\<open>\\<phi> .\\<and>. \\<psi>\\<close> \\<phi>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n   \\<tturnstile> ((\\<phi> .\\<and>. \\<psi>) .\\<longrightarrow>. \\<phi>);\n   ?B \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<phi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)\n 2. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)", "apply (meson assumption_L conjE1_PL singletonI subsetI valid_imp_PL)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)", "using remainder_recovery_imp[of K A \\<open>\\<phi> .\\<and>. \\<psi>\\<close> \\<psi>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n   \\<tturnstile> ((\\<phi> .\\<and>. \\<psi>) .\\<longrightarrow>. \\<psi>);\n   ?B \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?B \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>K = Cn A; K \\<turnstile> \\<phi> .\\<and>. \\<psi>;\n        x \\<in> K .\\<bottom>. \\<psi>\\<rbrakk>\n       \\<Longrightarrow> x \\<in> K .\\<bottom>. (\\<phi> .\\<and>. \\<psi>)", "by (meson assumption_L conjE2_PL singletonI subsetI valid_imp_PL)"], ["", "end"], ["", "subsection \\<open>Remainders in a compact logic\\<close>"], ["", "text\\<open>In case of a supraclassical logic, remainders get impressive properties\\<close>"], ["", "context Compact_logic\nbegin"], ["", "text \\<open>The following lemma is the Lindembaum's lemma requiring the Zorn's lemma (already available in standard Isabelle/HOL). \n  For more details, please refer to the book \"Theory of logical calculi\" @{cite wojcicki2013theory}. \nThis very important lemma states that we can get a maximal set (remainder \\<open>B'\\<close>) starting from any set \n\\<open>B\\<close> if this latter does not infer the proposition \\<open>\\<phi>\\<close> we want to eliminate\\<close>"], ["", "lemma upper_remainder: \\<open>B \\<subseteq> A \\<Longrightarrow> \\<not> B \\<turnstile> \\<phi> \\<Longrightarrow> \\<exists>B'. B \\<subseteq> B' \\<and>  B' \\<in> A .\\<bottom>. \\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "assume a:\\<open>B \\<subseteq> A\\<close> and b:\\<open>\\<not> B \\<turnstile> \\<phi>\\<close>"], ["proof (state)\nthis:\n  B \\<subseteq> A\n  \\<not> B \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "have c:\\<open>\\<not> \\<tturnstile> \\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> \\<tturnstile> \\<phi>", "using b infer_def validD_L"], ["proof (prove)\nusing this:\n  \\<not> B \\<turnstile> \\<phi>\n  ?A \\<turnstile> ?\\<phi> \\<equiv> ?\\<phi> \\<in> Cn ?A\n  \\<tturnstile> ?\\<phi> \\<Longrightarrow> ?\\<phi> \\<in> Cn ?A\n\ngoal (1 subgoal):\n 1. \\<not> \\<tturnstile> \\<phi>", "by blast"], ["proof (state)\nthis:\n  \\<not> \\<tturnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "define \\<B> where \"\\<B> \\<equiv> {B'. B \\<subseteq> B' \\<and> B' \\<subseteq> A \\<and> \\<not> B' \\<turnstile> \\<phi>}\""], ["proof (state)\nthis:\n  \\<B> \\<equiv>\n  {B'.\n   B \\<subseteq> B' \\<and>\n   B' \\<subseteq> A \\<and> \\<not> B' \\<turnstile> \\<phi>}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "have d:\\<open>subset.chain \\<B> C \\<Longrightarrow> subset.chain {B. \\<not> B \\<turnstile> \\<phi>} C\\<close> for C"], ["proof (prove)\ngoal (1 subgoal):\n 1. subset.chain \\<B> C \\<Longrightarrow>\n    subset.chain {B. \\<not> B \\<turnstile> \\<phi>} C", "unfolding \\<B>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subset.chain\n     {B'.\n      B \\<subseteq> B' \\<and>\n      B' \\<subseteq> A \\<and> \\<not> B' \\<turnstile> \\<phi>}\n     C \\<Longrightarrow>\n    subset.chain {B. \\<not> B \\<turnstile> \\<phi>} C", "by (simp add: le_fun_def less_eq_set_def subset_chain_def)"], ["proof (state)\nthis:\n  subset.chain \\<B> ?C \\<Longrightarrow>\n  subset.chain {B. \\<not> B \\<turnstile> \\<phi>} ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "have e:\\<open>C \\<noteq> {} \\<Longrightarrow> subset.chain \\<B> C \\<Longrightarrow> B \\<subseteq> \\<Union> C\\<close> for C"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<noteq> {}; subset.chain \\<B> C\\<rbrakk>\n    \\<Longrightarrow> B \\<subseteq> \\<Union> C", "by (metis (no_types, lifting) \\<B>_def subset_chain_def less_eq_Sup mem_Collect_eq subset_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?C \\<noteq> {}; subset.chain \\<B> ?C\\<rbrakk>\n  \\<Longrightarrow> B \\<subseteq> \\<Union> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "{"], ["proof (state)\nthis:\n  \\<lbrakk>?C \\<noteq> {}; subset.chain \\<B> ?C\\<rbrakk>\n  \\<Longrightarrow> B \\<subseteq> \\<Union> ?C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "fix C"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "assume f:\\<open>C \\<noteq> {}\\<close> and g:\\<open>subset.chain \\<B> C\\<close>"], ["proof (state)\nthis:\n  C \\<noteq> {}\n  subset.chain \\<B> C\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "have \\<open>\\<Union> C \\<in> \\<B>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> C \\<in> \\<B>", "using \\<B>_def  e[OF f g] chain_closure[OF c d[OF g]]"], ["proof (prove)\nusing this:\n  \\<B> \\<equiv>\n  {B'.\n   B \\<subseteq> B' \\<and>\n   B' \\<subseteq> A \\<and> \\<not> B' \\<turnstile> \\<phi>}\n  B \\<subseteq> \\<Union> C\n  \\<not> \\<Union> C \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<Union> C \\<in> \\<B>", "by simp (metis (no_types, lifting) CollectD Sup_least Sup_subset_mono g subset.chain_def subset_trans)"], ["proof (state)\nthis:\n  \\<Union> C \\<in> \\<B>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?C2 \\<noteq> {}; subset.chain \\<B> ?C2\\<rbrakk>\n  \\<Longrightarrow> \\<Union> ?C2 \\<in> \\<B>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "note f=this"], ["proof (state)\nthis:\n  \\<lbrakk>?C2 \\<noteq> {}; subset.chain \\<B> ?C2\\<rbrakk>\n  \\<Longrightarrow> \\<Union> ?C2 \\<in> \\<B>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "have \\<open>subset.chain \\<B> C \\<Longrightarrow> \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U\\<close> for C"], ["proof (prove)\ngoal (1 subgoal):\n 1. subset.chain \\<B> C \\<Longrightarrow>\n    \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U", "apply (cases \\<open>C \\<noteq> {}\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>subset.chain \\<B> C; C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U\n 2. \\<lbrakk>subset.chain \\<B> C; \\<not> C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U", "apply (meson Union_upper f)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>subset.chain \\<B> C; \\<not> C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U", "using \\<B>_def a b"], ["proof (prove)\nusing this:\n  \\<B> \\<equiv>\n  {B'.\n   B \\<subseteq> B' \\<and>\n   B' \\<subseteq> A \\<and> \\<not> B' \\<turnstile> \\<phi>}\n  B \\<subseteq> A\n  \\<not> B \\<turnstile> \\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>subset.chain \\<B> C; \\<not> C \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>C. X \\<subseteq> U", "by blast"], ["proof (state)\nthis:\n  subset.chain \\<B> ?C \\<Longrightarrow>\n  \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>?C. X \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "with subset_Zorn[OF this, simplified]"], ["proof (chain)\npicking this:\n  \\<exists>M\\<in>\\<B>.\n     \\<forall>X\\<in>\\<B>. M \\<subseteq> X \\<longrightarrow> X = M\n  subset.chain \\<B> ?C \\<Longrightarrow>\n  \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>?C. X \\<subseteq> U", "obtain B' where f:\\<open>B'\\<in> \\<B> \\<and> (\\<forall>X\\<in>\\<B>. B' \\<subseteq> X \\<longrightarrow> X = B')\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>M\\<in>\\<B>.\n     \\<forall>X\\<in>\\<B>. M \\<subseteq> X \\<longrightarrow> X = M\n  subset.chain \\<B> ?C \\<Longrightarrow>\n  \\<exists>U\\<in>\\<B>. \\<forall>X\\<in>?C. X \\<subseteq> U\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        B' \\<in> \\<B> \\<and>\n        (\\<forall>X\\<in>\\<B>.\n            B' \\<subseteq> X \\<longrightarrow> X = B') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  B' \\<in> \\<B> \\<and>\n  (\\<forall>X\\<in>\\<B>. B' \\<subseteq> X \\<longrightarrow> X = B')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>B \\<subseteq> A; \\<not> B \\<turnstile> \\<phi>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>B'.\n                         B \\<subseteq> B' \\<and>\n                         B' \\<in> A .\\<bottom>. \\<phi>", "then"], ["proof (chain)\npicking this:\n  B' \\<in> \\<B> \\<and>\n  (\\<forall>X\\<in>\\<B>. B' \\<subseteq> X \\<longrightarrow> X = B')", "show ?thesis"], ["proof (prove)\nusing this:\n  B' \\<in> \\<B> \\<and>\n  (\\<forall>X\\<in>\\<B>. B' \\<subseteq> X \\<longrightarrow> X = B')\n\ngoal (1 subgoal):\n 1. \\<exists>B'. B \\<subseteq> B' \\<and> B' \\<in> A .\\<bottom>. \\<phi>", "by (simp add:rem \\<B>_def, rule_tac x=B' in exI) (metis psubsetE subset_trans)"], ["proof (state)\nthis:\n  \\<exists>B'. B \\<subseteq> B' \\<and> B' \\<in> A .\\<bottom>. \\<phi>\n\ngoal:\nNo subgoals!", "qed\n\n\\<comment> \\<open>An immediate corollary ruling tautologies\\<close>"], ["", "corollary emptyrem2taut: \\<open>A .\\<bottom>. \\<phi> = {} \\<Longrightarrow> \\<tturnstile> \\<phi>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. A .\\<bottom>. \\<phi> = {} \\<Longrightarrow> \\<tturnstile> \\<phi>", "by (metis bot.extremum empty_iff upper_remainder valid_def)"], ["", "end"], ["", "end"]]}