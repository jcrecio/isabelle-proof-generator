{"file_name": "/home/qj213/afp-2021-10-22/thys/MiniML/W.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/MiniML", "problem_names": ["lemma W_var_ge [rule_format (no_asm)]: \n  \"\\<forall>A n S t m. W e A n  = Some (S,t,m) \\<longrightarrow> n\\<le>m\"", "lemma W_var_geD: \n  \"Some (S,t,m) = W e A n \\<Longrightarrow> n\\<le>m\"", "lemma new_tv_compatible_W: \n  \"new_tv n A \\<Longrightarrow> Some (S,t,m) = W e A n \\<Longrightarrow> new_tv m A\"", "lemma new_tv_bound_typ_inst_sch [rule_format (no_asm)]: \n  \"new_tv n sch \\<longrightarrow> new_tv (n + (min_new_bound_tv sch)) (bound_typ_inst (\\<lambda>b. TVar (b + n)) sch)\"", "lemma new_tv_W [rule_format (no_asm)]: \n  \"\\<forall>n A S t m. new_tv n A \\<longrightarrow> W e A n = Some (S,t,m) \\<longrightarrow>     \n               new_tv m S \\<and> new_tv m t\"", "lemma free_tv_bound_typ_inst1 [rule_format (no_asm)]: \n  \"(v \\<notin> free_tv sch) \\<longrightarrow> (v \\<in> free_tv (bound_typ_inst (TVar \\<circ> S) sch)) \\<longrightarrow> (\\<exists>x. v = S x)\"", "lemma free_tv_W [rule_format (no_asm)]: \n  \"\\<forall>n A S t m v. W e A n = Some (S,t,m) \\<longrightarrow>             \n          (v\\<in>free_tv S \\<or> v\\<in>free_tv t) \\<longrightarrow> v<n \\<longrightarrow> v\\<in>free_tv A\"", "lemma weaken_A_Int_B_eq_empty: \"(\\<forall>x. x \\<in> A \\<longrightarrow> x \\<notin> B) \\<Longrightarrow> A \\<inter> B = {}\"", "lemma weaken_not_elem_A_minus_B: \"x \\<notin> A \\<or> x \\<in> B \\<Longrightarrow> x \\<notin> A - B\"", "lemma W_correct_lemma [rule_format (no_asm)]: \"\\<forall>A S t m n . new_tv n A \\<longrightarrow> Some (S,t,m) = W e A n \\<longrightarrow> $S A |- e :: t\"", "lemma W_complete_lemma [rule_format (no_asm)]: \n  \"\\<forall>S' A t' n. $S' A |- e :: t' \\<longrightarrow> new_tv n A \\<longrightarrow>\n               (\\<exists>S t. (\\<exists>m. W e A n = Some (S,t,m)) \\<and>\n                       (\\<exists>R. $S' A = $R ($S A) \\<and> t' = $R t))\"", "theorem W_complete: \n  \"[] |- e :: t' \\<Longrightarrow> (\\<exists>S t. (\\<exists>m. W e [] n = Some(S,t,m)) \\<and>\n                     (\\<exists>R. t' = $ R t))\""], "translations": [["", "lemma W_var_ge [rule_format (no_asm)]: \n  \"\\<forall>A n S t m. W e A n  = Some (S,t,m) \\<longrightarrow> n\\<le>m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A n S t m. W e A n = Some (S, t, m) \\<longrightarrow> n \\<le> m", "apply (induct_tac \"e\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>A n S t m.\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 2. \\<And>x.\n       \\<forall>A n S t m.\n          W x A n = Some (S, t, m) \\<longrightarrow>\n          n \\<le> m \\<Longrightarrow>\n       \\<forall>A n S t m.\n          W (Abs x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "(* case Var(n) *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>A n S t m.\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 2. \\<And>x.\n       \\<forall>A n S t m.\n          W x A n = Some (S, t, m) \\<longrightarrow>\n          n \\<le> m \\<Longrightarrow>\n       \\<forall>A n S t m.\n          W (Abs x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A n S t m.\n          W x A n = Some (S, t, m) \\<longrightarrow>\n          n \\<le> m \\<Longrightarrow>\n       \\<forall>A n S t m.\n          W (Abs x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "(* case Abs e *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A n S t m.\n          W x A n = Some (S, t, m) \\<longrightarrow>\n          n \\<le> m \\<Longrightarrow>\n       \\<forall>A n S t m.\n          W (Abs x) A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A n S t m.\n          W x A n = Some (S, t, m) \\<longrightarrow>\n          n \\<le> m \\<Longrightarrow>\n       \\<forall>A n a aa b.\n          W x (FVar n # A) (Suc n) = Some (a, aa, b) \\<longrightarrow>\n          n \\<le> b\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (fast dest: Suc_leD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "(* case App e1 e2 *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (App x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n a aa b ab ac ba.\n                            (\\<exists>s.\n                                mgu ($ ab aa) (ac -> TVar ba) =\n                                Some s) \\<longrightarrow>\n                            W x2a ($ a A) b =\n                            Some (ab, ac, ba) \\<longrightarrow>\n                            W x1a A n = Some (a, aa, b) \\<longrightarrow>\n                            n \\<le> Suc ba\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (blast intro: le_SucI le_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "(* case LET e1 e2 *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n S t m.\n                            W (LET x1a x2a) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            n \\<le> m", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A n S t m.\n                   W x1a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m;\n        \\<forall>A n S t m.\n           W x2a A n = Some (S, t, m) \\<longrightarrow> n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n a aa b ab ac ba.\n                            W x2a (gen ($ a A) aa # $ a A) b =\n                            Some (ab, ac, ba) \\<longrightarrow>\n                            W x1a A n = Some (a, aa, b) \\<longrightarrow>\n                            n \\<le> ba", "apply (blast intro: le_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare W_var_ge [simp]"], ["", "lemma W_var_geD: \n  \"Some (S,t,m) = W e A n \\<Longrightarrow> n\\<le>m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Some (S, t, m) = W e A n \\<Longrightarrow> n \\<le> m", "apply (simp add: eq_sym_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma new_tv_compatible_W: \n  \"new_tv n A \\<Longrightarrow> Some (S,t,m) = W e A n \\<Longrightarrow> new_tv m A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>new_tv n A; Some (S, t, m) = W e A n\\<rbrakk>\n    \\<Longrightarrow> new_tv m A", "apply (drule W_var_geD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>new_tv n A; n \\<le> m\\<rbrakk> \\<Longrightarrow> new_tv m A", "apply (rule new_scheme_list_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>new_tv n A; n \\<le> m\\<rbrakk> \\<Longrightarrow> ?n2 \\<le> m\n 2. \\<lbrakk>new_tv n A; n \\<le> m\\<rbrakk> \\<Longrightarrow> new_tv ?n2 A", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>new_tv n A; n \\<le> m\\<rbrakk> \\<Longrightarrow> new_tv n A", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma new_tv_bound_typ_inst_sch [rule_format (no_asm)]: \n  \"new_tv n sch \\<longrightarrow> new_tv (n + (min_new_bound_tv sch)) (bound_typ_inst (\\<lambda>b. TVar (b + n)) sch)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. new_tv n sch \\<longrightarrow>\n    new_tv (n + min_new_bound_tv sch)\n     (bound_typ_inst (\\<lambda>b. TVar (b + n)) sch)", "apply (induct_tac \"sch\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       new_tv n (FVar x) \\<longrightarrow>\n       new_tv (n + min_new_bound_tv (FVar x))\n        (bound_typ_inst (\\<lambda>b. TVar (b + n)) (FVar x))\n 2. \\<And>x.\n       new_tv n (BVar x) \\<longrightarrow>\n       new_tv (n + min_new_bound_tv (BVar x))\n        (bound_typ_inst (\\<lambda>b. TVar (b + n)) (BVar x))\n 3. \\<And>x1a x2a.\n       \\<lbrakk>new_tv n x1a \\<longrightarrow>\n                new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv n x2a \\<longrightarrow>\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)\\<rbrakk>\n       \\<Longrightarrow> new_tv n (x1a =-> x2a) \\<longrightarrow>\n                         new_tv (n + min_new_bound_tv (x1a =-> x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (x1a =-> x2a))", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       new_tv n (BVar x) \\<longrightarrow>\n       new_tv (n + min_new_bound_tv (BVar x))\n        (bound_typ_inst (\\<lambda>b. TVar (b + n)) (BVar x))\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv n x1a \\<longrightarrow>\n                new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv n x2a \\<longrightarrow>\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)\\<rbrakk>\n       \\<Longrightarrow> new_tv n (x1a =-> x2a) \\<longrightarrow>\n                         new_tv (n + min_new_bound_tv (x1a =-> x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (x1a =-> x2a))", "apply (simp add: add.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv n x1a \\<longrightarrow>\n                new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv n x2a \\<longrightarrow>\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)\\<rbrakk>\n       \\<Longrightarrow> new_tv n (x1a =-> x2a) \\<longrightarrow>\n                         new_tv (n + min_new_bound_tv (x1a =-> x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (x1a =-> x2a))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv n x1a \\<longrightarrow>\n                new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv n x2a \\<longrightarrow>\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n (x1a =-> x2a)\\<rbrakk>\n       \\<Longrightarrow> new_tv (n + min_new_bound_tv (x1a =-> x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (x1a =-> x2a))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a \\<and> new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            x1a) \\<and>\n                         new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            x1a) \\<and>\n                         new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (rule new_tv_le)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> ?n9 x1a x2a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n9 x1a x2a)\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a)\n 3. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n9 x1a x2a)\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> ?n9 x1a x2a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 3. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> n + min_new_bound_tv x1a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (rule add_le_mono)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> min_new_bound_tv x1a\n                         \\<le> max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 3. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (simp (no_asm))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> min_new_bound_tv x1a\n                         \\<le> max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (simp (no_asm) add: max_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv\n                          (n +\n                           max (min_new_bound_tv x1a)\n                            (min_new_bound_tv x2a))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "apply (rule new_tv_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> ?n19 x1a x2a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n19 x1a x2a)\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n19 x1a x2a)\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> ?n19 x1a x2a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)", "apply (assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> n + min_new_bound_tv x2a\n                         \\<le> n +\n                               max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)", "apply (rule add_le_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> n \\<le> n\n 2. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> min_new_bound_tv x2a\n                         \\<le> max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)", "apply (simp (no_asm))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>new_tv (n + min_new_bound_tv x1a)\n                 (bound_typ_inst (\\<lambda>b. TVar (b + n)) x1a);\n        new_tv (n + min_new_bound_tv x2a)\n         (bound_typ_inst (\\<lambda>b. TVar (b + n)) x2a);\n        new_tv n x1a; new_tv n x2a\\<rbrakk>\n       \\<Longrightarrow> min_new_bound_tv x2a\n                         \\<le> max (min_new_bound_tv x1a)\n                                (min_new_bound_tv x2a)", "apply (simp (no_asm) add: max_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare new_tv_bound_typ_inst_sch [simp]\n\n\\<comment> \\<open>resulting type variable is new\\<close>"], ["", "lemma new_tv_W [rule_format (no_asm)]: \n  \"\\<forall>n A S t m. new_tv n A \\<longrightarrow> W e A n = Some (S,t,m) \\<longrightarrow>     \n               new_tv m S \\<and> new_tv m t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W e A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t", "proof (induct e)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 2. \\<And>e.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "case Var"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 2. \\<And>e.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W (Var x_) A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A.\n       x_ < length A \\<longrightarrow>\n       new_tv n A \\<longrightarrow>\n       new_tv (n + min_new_bound_tv (A ! x_))\n        (bound_typ_inst (\\<lambda>b. TVar (b + n)) (A ! x_))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>x_ < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> new_tv (n + min_new_bound_tv (A ! x_))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x_))", "apply (drule new_tv_nth_nat_A)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A. new_tv n A \\<Longrightarrow> new_tv (?n25 n A) A\n 2. \\<And>n A.\n       \\<lbrakk>new_tv n A; new_tv (?n25 n A) (A ! x_)\\<rbrakk>\n       \\<Longrightarrow> new_tv (n + min_new_bound_tv (A ! x_))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x_))", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A.\n       \\<lbrakk>new_tv n A; new_tv n (A ! x_)\\<rbrakk>\n       \\<Longrightarrow> new_tv (n + min_new_bound_tv (A ! x_))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x_))", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W (Var x_) A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "case Abs"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n       \\<forall>n A S t m.\n          new_tv n A \\<longrightarrow>\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W (Abs e_) A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t", "apply (simp (no_asm) add: new_tv_subst new_tv_Suc_list split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W e_ A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t \\<Longrightarrow>\n    \\<forall>n A a aa b.\n       W e_ (FVar n # A) (Suc n) = Some (a, aa, b) \\<longrightarrow>\n       new_tv n A \\<longrightarrow>\n       (\\<forall>m\\<ge>b. a m = TVar m) \\<and>\n       (\\<forall>l<b. new_tv b (a l)) \\<and>\n       new_tv b (a n) \\<and> new_tv b aa", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        W e_ (FVar n # A) (Suc n) = Some (a, aa, b); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<ge>b. a m = TVar m) \\<and>\n                         (\\<forall>l<b. new_tv b (a l)) \\<and>\n                         new_tv b (a n) \\<and> new_tv b aa", "apply (erule_tac x = \"Suc n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (a, aa, b); new_tv n A;\n        \\<forall>A S t m.\n           new_tv (Suc n) A \\<longrightarrow>\n           W e_ A (Suc n) = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<ge>b. a m = TVar m) \\<and>\n                         (\\<forall>l<b. new_tv b (a l)) \\<and>\n                         new_tv b (a n) \\<and> new_tv b aa", "apply (erule_tac x = \" (FVar n) #A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (a, aa, b); new_tv n A;\n        \\<forall>S t m.\n           new_tv (Suc n) (FVar n # A) \\<longrightarrow>\n           W e_ (FVar n # A) (Suc n) = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>m\\<ge>b. a m = TVar m) \\<and>\n                         (\\<forall>l<b. new_tv b (a l)) \\<and>\n                         new_tv b (a n) \\<and> new_tv b aa", "apply (fastforce simp add: new_tv_subst new_tv_Suc_list)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W (Abs e_) A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "case App"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W (App e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n A S t m.\n                new_tv n A \\<longrightarrow>\n                W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                new_tv m S \\<and> new_tv m t;\n     \\<forall>n A S t m.\n        new_tv n A \\<longrightarrow>\n        W e2_ A n = Some (S, t, m) \\<longrightarrow>\n        new_tv m S \\<and> new_tv m t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n A a aa b ab ac ba s.\n                         mgu ($ ab aa) (ac -> TVar ba) =\n                         Some s \\<longrightarrow>\n                         W e2_ ($ a A) b =\n                         Some (ab, ac, ba) \\<longrightarrow>\n                         W e1_ A n = Some (a, aa, b) \\<longrightarrow>\n                         new_tv n A \\<longrightarrow>\n                         new_tv (Suc ba) ($ s \\<circ> $ ab \\<circ> a) \\<and>\n                         new_tv (Suc ba) (s ba)", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba s.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t;\n        mgu ($ ab aa) (ac -> TVar ba) = Some s;\n        W e2_ ($ a A) b = Some (ab, ac, ba); W e1_ A n = Some (a, aa, b);\n        new_tv n A\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc ba) ($ s \\<circ> $ ab \\<circ> a) \\<and>\n                         new_tv (Suc ba) (s ba)", "apply (rename_tac S1 t1 n1 S2 t2 n2 S3)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>A S t m.\n           new_tv n A \\<longrightarrow>\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>S t m.\n           new_tv n A \\<longrightarrow>\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"S1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>t m.\n           new_tv n A \\<longrightarrow>\n           W e1_ A n = Some (S1, t, m) \\<longrightarrow>\n           new_tv m S1 \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"t1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>m.\n           new_tv n A \\<longrightarrow>\n           W e1_ A n = Some (S1, t1, m) \\<longrightarrow>\n           new_tv m S1 \\<and> new_tv m t1\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"n1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>m.\n           new_tv n A \\<longrightarrow>\n           W e1_ A n = Some (S1, t1, m) \\<longrightarrow>\n           new_tv m S1 \\<and> new_tv m t1;\n        \\<forall>A S t m.\n           new_tv n1 A \\<longrightarrow>\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"n1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2);\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>A S t m.\n           new_tv n1 A \\<longrightarrow>\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t;\n        new_tv n A \\<longrightarrow>\n        W e1_ A n = Some (S1, t1, n1) \\<longrightarrow>\n        new_tv n1 S1 \\<and> new_tv n1 t1\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (simp add: eq_sym_conv del: all_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        \\<forall>A S t m.\n           new_tv n1 A \\<longrightarrow>\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t;\n        new_tv n1 S1 \\<and> new_tv n1 t1\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"$S1 A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        \\<forall>S t m.\n           new_tv n1 ($ S1 A) \\<longrightarrow>\n           W e2_ ($ S1 A) n1 = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"S2\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        \\<forall>t m.\n           new_tv n1 ($ S1 A) \\<longrightarrow>\n           W e2_ ($ S1 A) n1 = Some (S2, t, m) \\<longrightarrow>\n           new_tv m S2 \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"t2\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        \\<forall>m.\n           new_tv n1 ($ S1 A) \\<longrightarrow>\n           W e2_ ($ S1 A) n1 = Some (S2, t2, m) \\<longrightarrow>\n           new_tv m S2 \\<and> new_tv m t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (erule_tac x = \"n2\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        W e1_ A n = Some (S1, t1, n1); new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        W e2_ ($ S1 A) n1 = Some (S2, t2, n2) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          ($ S3 \\<circ> $ S2 \\<circ> S1) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply ( simp add: o_def rotate_Some)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2)\n                          (\\<lambda>x. $ S3 ($ S2 (S1 x))) \\<and>\n                         new_tv (Suc n2) (S3 n2)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (\\<lambda>x. $ S3 ($ S2 (S1 x)))\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (rule new_tv_subst_comp_2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (\\<lambda>v. $ S2 (S1 v))\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (rule new_tv_subst_comp_2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S1\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S2\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 4. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (rule lessI [THEN less_imp_le, THEN new_tv_le])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv n2 S1\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S2\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 4. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (rule_tac n = \"n1\" in new_tv_subst_le)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> n1 \\<le> n2\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv n1 S1\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S2\n 4. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 5. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (simp add: rotate_Some)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv n1 S1\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S2\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 4. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S2\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (fast dest: W_var_geD intro: new_scheme_list_le new_tv_subst_scheme_list lessI [THEN less_imp_le [THEN new_tv_subst_le]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (erule sym [THEN mgu_new])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) ($ S2 t1)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (blast dest!: W_var_geD\n      intro: lessI [THEN less_imp_le, THEN new_tv_le] new_tv_subst_te \n      new_tv_subst_scheme_list new_scheme_list_le new_tv_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1\\<rbrakk>\n       \\<Longrightarrow> new_tv n1 ($ S1 A)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)\n 3. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (blast dest: W_var_geD intro: new_tv_subst_scheme_list new_scheme_list_le new_tv_le)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (S3 n2)", "apply (rule lessI [THEN new_tv_subst_var])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) S3", "apply (erule sym [THEN mgu_new])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) ($ S2 t1)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)", "apply (blast dest!: W_var_geD\n      intro: lessI [THEN less_imp_le, THEN new_tv_le] new_tv_subst_te \n      new_tv_subst_scheme_list new_scheme_list_le new_tv_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n1 ($ S1 A) \\<longrightarrow>\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)", "apply (erule impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1\\<rbrakk>\n       \\<Longrightarrow> new_tv n1 ($ S1 A)\n 2. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)", "apply (blast dest: W_var_geD intro: new_tv_subst_scheme_list new_scheme_list_le new_tv_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W e2_ ($ S1 A) n1;\n        Some (S1, t1, n1) = W e1_ A n; new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1;\n        new_tv n2 S2 \\<and> new_tv n2 t2\\<rbrakk>\n       \\<Longrightarrow> new_tv (Suc n2) (t2 -> TVar n2)", "apply clarsimp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W (App e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "case LET"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m.\n                            new_tv n A \\<longrightarrow>\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            new_tv m S \\<and> new_tv m t", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m.\n       new_tv n A \\<longrightarrow>\n       W (LET e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n       new_tv m S \\<and> new_tv m t", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n A S t m.\n                new_tv n A \\<longrightarrow>\n                W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                new_tv m S \\<and> new_tv m t;\n     \\<forall>n A S t m.\n        new_tv n A \\<longrightarrow>\n        W e2_ A n = Some (S, t, m) \\<longrightarrow>\n        new_tv m S \\<and> new_tv m t\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n A a aa b ab ac ba.\n                         W e2_ (gen ($ a A) aa # $ a A) b =\n                         Some (ab, ac, ba) \\<longrightarrow>\n                         W e1_ A n = Some (a, aa, b) \\<longrightarrow>\n                         new_tv n A \\<longrightarrow>\n                         new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        \\<forall>n A S t m.\n           new_tv n A \\<longrightarrow>\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           new_tv m S \\<and> new_tv m t;\n        W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (erule allE,erule allE,erule allE,erule allE,erule allE, erule impE, assumption, erule impE, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A;\n        new_tv b a \\<and> new_tv b aa\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>\\<forall>n A S t m.\n                   new_tv n A \\<longrightarrow>\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   new_tv m S \\<and> new_tv m t;\n        W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a;\n        new_tv b aa\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (erule allE,erule allE,erule allE,erule allE,erule allE, erule impE, erule_tac [2] notE impE,\n      tactic \"assume_tac @{context} 2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a;\n        new_tv b aa\\<rbrakk>\n       \\<Longrightarrow> new_tv b (gen ($ a A) aa # $ a A)\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (simp only: new_tv_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b);\n        \\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m. m \\<in> free_tv a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m.\n                            m \\<in> free_tv\n                                     (gen ($ a A) aa #\n$ a A) \\<longrightarrow>\n                            m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b);\n        \\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m. m \\<in> free_tv a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m.\n                            m \\<in> free_tv ($ a A) \\<longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (drule W_var_ge)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>\\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m. m \\<in> free_tv a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b; b \\<le> ba;\n        n \\<le> b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m.\n                            m \\<in> free_tv ($ a A) \\<longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (rule allI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba m.\n       \\<lbrakk>\\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m. m \\<in> free_tv a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b; b \\<le> ba;\n        n \\<le> b\\<rbrakk>\n       \\<Longrightarrow> m \\<in> free_tv ($ a A) \\<longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (intro strip)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba m.\n       \\<lbrakk>\\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m. m \\<in> free_tv a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b; b \\<le> ba;\n        n \\<le> b; m \\<in> free_tv ($ a A)\\<rbrakk>\n       \\<Longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (simp only: free_tv_subst)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba m.\n       \\<lbrakk>\\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m.\n           m \\<in> Type.dom a \\<union> cod a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b; b \\<le> ba;\n        n \\<le> b; m \\<in> free_tv ($ a A)\\<rbrakk>\n       \\<Longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (drule free_tv_app_subst_scheme_list [THEN subsetD])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba m.\n       \\<lbrakk>\\<forall>m. m \\<in> free_tv A \\<longrightarrow> m < n;\n        \\<forall>m.\n           m \\<in> Type.dom a \\<union> cod a \\<longrightarrow> m < b;\n        \\<forall>m. m \\<in> free_tv aa \\<longrightarrow> m < b; b \\<le> ba;\n        n \\<le> b; m \\<in> cod a \\<union> free_tv A\\<rbrakk>\n       \\<Longrightarrow> m < b\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (best elim: less_le_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab \\<and> new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (erule conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a) \\<and> new_tv ba ac", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ($ ab \\<circ> a)\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply (simp only: o_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba (\\<lambda>x. $ ab (a x))\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply (rule new_tv_subst_comp_2)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba a\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ab\n 3. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply (erule W_var_ge [THEN new_tv_subst_le])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a;\n        new_tv b aa; new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv b a\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ab\n 3. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ab\n 2. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba.\n       \\<lbrakk>W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b); new_tv n A; new_tv b a; new_tv b aa;\n        new_tv ba ab; new_tv ba ac\\<rbrakk>\n       \\<Longrightarrow> new_tv ba ac", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m.\n     new_tv n A \\<longrightarrow>\n     W (LET e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n     new_tv m S \\<and> new_tv m t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma free_tv_bound_typ_inst1 [rule_format (no_asm)]: \n  \"(v \\<notin> free_tv sch) \\<longrightarrow> (v \\<in> free_tv (bound_typ_inst (TVar \\<circ> S) sch)) \\<longrightarrow> (\\<exists>x. v = S x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> free_tv sch \\<longrightarrow>\n    v \\<in> free_tv (bound_typ_inst (TVar \\<circ> S) sch) \\<longrightarrow>\n    (\\<exists>x. v = S x)", "apply (induct_tac \"sch\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       v \\<notin> free_tv (FVar x) \\<longrightarrow>\n       v \\<in> free_tv\n                (bound_typ_inst (TVar \\<circ> S) (FVar x)) \\<longrightarrow>\n       (\\<exists>x. v = S x)\n 2. \\<And>x.\n       v \\<notin> free_tv (BVar x) \\<longrightarrow>\n       v \\<in> free_tv\n                (bound_typ_inst (TVar \\<circ> S) (BVar x)) \\<longrightarrow>\n       (\\<exists>x. v = S x)\n 3. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       v \\<notin> free_tv (BVar x) \\<longrightarrow>\n       v \\<in> free_tv\n                (bound_typ_inst (TVar \\<circ> S) (BVar x)) \\<longrightarrow>\n       (\\<exists>x. v = S x)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. v = S x \\<longrightarrow> (\\<exists>xa. S x = S xa)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply (intro strip)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. v = S x \\<Longrightarrow> \\<exists>xa. S x = S xa\n 2. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply (rule exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. v = S x \\<Longrightarrow> S x = S (?x6 x)\n 2. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply (rule refl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>v \\<notin> free_tv x1a \\<longrightarrow>\n                v \\<in> free_tv\n                         (bound_typ_inst (TVar \\<circ> S)\n                           x1a) \\<longrightarrow>\n                (\\<exists>x. v = S x);\n        v \\<notin> free_tv x2a \\<longrightarrow>\n        v \\<in> free_tv\n                 (bound_typ_inst (TVar \\<circ> S) x2a) \\<longrightarrow>\n        (\\<exists>x. v = S x)\\<rbrakk>\n       \\<Longrightarrow> v \\<notin> free_tv (x1a =-> x2a) \\<longrightarrow>\n                         v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> S)\n                                    (x1a =-> x2a)) \\<longrightarrow>\n                         (\\<exists>x. v = S x)", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare free_tv_bound_typ_inst1 [simp]"], ["", "lemma free_tv_W [rule_format (no_asm)]: \n  \"\\<forall>n A S t m v. W e A n = Some (S,t,m) \\<longrightarrow>             \n          (v\\<in>free_tv S \\<or> v\\<in>free_tv t) \\<longrightarrow> v<n \\<longrightarrow> v\\<in>free_tv A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A S t m v.\n       W e A n = Some (S, t, m) \\<longrightarrow>\n       v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n       v < n \\<longrightarrow> v \\<in> free_tv A", "proof (induct e)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>n A S t m v.\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e.\n       \\<forall>n A S t m v.\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A \\<Longrightarrow>\n       \\<forall>n A S t m v.\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "case (Var n)"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>n A S t m v.\n          W (Var x) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e.\n       \\<forall>n A S t m v.\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A \\<Longrightarrow>\n       \\<forall>n A S t m v.\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>na A S t m v.\n       W (Var n) A na = Some (S, t, m) \\<longrightarrow>\n       v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n       v < na \\<longrightarrow> v \\<in> free_tv A", "apply (simp (no_asm) add: free_tv_subst split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>na A.\n       n < length A \\<longrightarrow>\n       (\\<forall>v.\n           v \\<in> free_tv\n                    (bound_typ_inst (\\<lambda>b. TVar (b + na))\n                      (A ! n)) \\<longrightarrow>\n           v < na \\<longrightarrow> v \\<in> free_tv A)", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (case_tac \"v : free_tv (A!n)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; v \\<in> free_tv (A ! n)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; v \\<notin> free_tv (A ! n)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; v \\<notin> free_tv (A ! n)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule free_tv_bound_typ_inst1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv\n                                  (bound_typ_inst (TVar \\<circ> ?S26 na A v)\n                                    (A ! n))\n 2. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; \\<exists>x. v = ?S26 na A v x\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (simp (no_asm) add: o_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na A v.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; \\<exists>x. v = x + na\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (erule exE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>na A v x.\n       \\<lbrakk>n < length A;\n        v \\<in> free_tv\n                 (bound_typ_inst (\\<lambda>b. TVar (b + na)) (A ! n));\n        v < na; v = x + na\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>na A S t m v.\n     W (Var n) A na = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < na \\<longrightarrow> v \\<in> free_tv A\n\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>n A S t m v.\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A \\<Longrightarrow>\n       \\<forall>n A S t m v.\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "case Abs"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>n A S t m v.\n          W e A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A \\<Longrightarrow>\n       \\<forall>n A S t m v.\n          W (Abs e) A n = Some (S, t, m) \\<longrightarrow>\n          v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n          v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m v.\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m v.\n     W e_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m v.\n       W (Abs e_) A n = Some (S, t, m) \\<longrightarrow>\n       v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n       v < n \\<longrightarrow> v \\<in> free_tv A", "apply (simp add: free_tv_subst split: split_option_bind del: all_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n A S t m v.\n       W e_ A n = Some (S, t, m) \\<longrightarrow>\n       (v \\<in> Type.dom S \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n       (v \\<in> cod S \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n       (v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A) \\<Longrightarrow>\n    \\<forall>n A a aa b.\n       W e_ (FVar n # A) (Suc n) = Some (a, aa, b) \\<longrightarrow>\n       (\\<forall>v.\n           (v \\<in> Type.dom a \\<longrightarrow>\n            v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n           (v \\<in> cod a \\<longrightarrow>\n            v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n           (v \\<in> free_tv (a n) \\<longrightarrow>\n            v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n           (v \\<in> free_tv aa \\<longrightarrow>\n            v < n \\<longrightarrow> v \\<in> free_tv A))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e_ A n = Some (S, t, m) \\<longrightarrow>\n                   (v \\<in> Type.dom S \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                   (v \\<in> cod S \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                   (v \\<in> free_tv t \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A);\n        W e_ (FVar n # A) (Suc n) = Some (a, aa, b)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom a \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod a \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (a n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv aa \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rename_tac S t n1 v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e_ A n = Some (S, t, m) \\<longrightarrow>\n                   (v \\<in> Type.dom S \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                   (v \\<in> cod S \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                   (v \\<in> free_tv t \\<longrightarrow>\n                    v < n \\<longrightarrow> v \\<in> free_tv A);\n        W e_ (FVar n # A) (Suc n) = Some (S, t, n1)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"Suc n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        \\<forall>A S t m v.\n           W e_ A (Suc n) = Some (S, t, m) \\<longrightarrow>\n           (v \\<in> Type.dom S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n           (v \\<in> cod S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n           (v \\<in> free_tv t \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"FVar n # A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        \\<forall>S t m v.\n           W e_ (FVar n # A) (Suc n) = Some (S, t, m) \\<longrightarrow>\n           (v \\<in> Type.dom S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> cod S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> free_tv t \\<longrightarrow>\n            v < Suc n \\<longrightarrow>\n            v \\<in> free_tv (FVar n # A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"S\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        \\<forall>t m v.\n           W e_ (FVar n # A) (Suc n) = Some (S, t, m) \\<longrightarrow>\n           (v \\<in> Type.dom S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> cod S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> free_tv t \\<longrightarrow>\n            v < Suc n \\<longrightarrow>\n            v \\<in> free_tv (FVar n # A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"t\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        \\<forall>m v.\n           W e_ (FVar n # A) (Suc n) = Some (S, t, m) \\<longrightarrow>\n           (v \\<in> Type.dom S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> cod S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> free_tv t \\<longrightarrow>\n            v < Suc n \\<longrightarrow>\n            v \\<in> free_tv (FVar n # A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        \\<forall>v.\n           W e_ (FVar n # A) (Suc n) = Some (S, t, n1) \\<longrightarrow>\n           (v \\<in> Type.dom S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> cod S \\<longrightarrow>\n            v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n           (v \\<in> free_tv t \\<longrightarrow>\n            v < Suc n \\<longrightarrow>\n            v \\<in> free_tv (FVar n # A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"v\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 v.\n       \\<lbrakk>W e_ (FVar n # A) (Suc n) = Some (S, t, n1);\n        W e_ (FVar n # A) (Suc n) = Some (S, t, n1) \\<longrightarrow>\n        (v \\<in> Type.dom S \\<longrightarrow>\n         v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n        (v \\<in> cod S \\<longrightarrow>\n         v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A)) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow>\n         v < Suc n \\<longrightarrow> v \\<in> free_tv (FVar n # A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> Type.dom S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> cod S \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S n) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (bestsimp intro: cod_app_subst simp add: less_Suc_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W (Abs e_) A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "case App"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (App e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m v.\n       W (App e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n       v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n       v < n \\<longrightarrow> v \\<in> free_tv A", "apply (simp (no_asm) split: split_option_bind del: all_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n A S t m v.\n                W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n                v < n \\<longrightarrow> v \\<in> free_tv A;\n     \\<forall>n A S t m v.\n        W e2_ A n = Some (S, t, m) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n A a aa b ab ac ba s.\n                         mgu ($ ab aa) (ac -> TVar ba) =\n                         Some s \\<longrightarrow>\n                         W e2_ ($ a A) b =\n                         Some (ab, ac, ba) \\<longrightarrow>\n                         W e1_ A n = Some (a, aa, b) \\<longrightarrow>\n                         (\\<forall>v.\n                             (v \\<in> free_tv\n ($ s \\<circ> $ ab \\<circ> a) \\<longrightarrow>\n                              v < n \\<longrightarrow>\n                              v \\<in> free_tv A) \\<and>\n                             (v \\<in> free_tv (s ba) \\<longrightarrow>\n                              v < n \\<longrightarrow> v \\<in> free_tv A))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba s v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ ab aa) (ac -> TVar ba) = Some s;\n        W e2_ ($ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ s \\<circ> $ ab \\<circ>\n                                    a) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (s ba) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rename_tac S t n1 S1 t1 n2 S2 v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2);\n        W e1_ A n = Some (S, t, n1)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>A S t m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>S t m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"S\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>t m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"t\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>A S t m v.\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>A S t m v.\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>v.\n           W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"v\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>A S t m v.\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv A;\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "(* second case *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        \\<forall>A S t m v.\n           W e2_ A n1 = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv A;\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"$ S A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>Sa t m v.\n           W e2_ ($ S A) n1 = Some (Sa, t, m) \\<longrightarrow>\n           v \\<in> free_tv Sa \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"S1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>t m v.\n           W e2_ ($ S A) n1 = Some (S1, t, m) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"t1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>m v.\n           W e2_ ($ S A) n1 = Some (S1, t1, m) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n2\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>v.\n           W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n           v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"v\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> $ S1 \\<circ>\n                                    S) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv (S2 n2) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (intro conjI impI | elim conjE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv ($ S2 \\<circ> $ S1 \\<circ> S); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (simp add: rotate_Some o_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2);\n        Some (S1, t1, n2) = W e2_ ($ S A) n1; Some (S, t, n1) = W e1_ A n;\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (\\<lambda>x. $ S2 ($ S1 (S x))); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule W_var_geD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2);\n        Some (S, t, n1) = W e1_ A n;\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (\\<lambda>x. $ S2 ($ S1 (S x))); v < n;\n        n1 \\<le> n2\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule W_var_geD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2);\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (\\<lambda>x. $ S2 ($ S1 (S x))); v < n; n1 \\<le> n2;\n        n \\<le> n1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply ( (frule less_le_trans) , (assumption))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2);\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (\\<lambda>x. $ S2 ($ S1 (S x))); v < n; n1 \\<le> n2;\n        n \\<le> n1; v < n1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2);\n        v \\<in> free_tv (\\<lambda>x. $ S2 ($ S1 (S x))); v < n; n1 \\<le> n2;\n        n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule free_tv_comp_subst [THEN subsetD])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>Some S2 = mgu ($ S1 t) (t1 -> TVar n2); v < n; n1 \\<le> n2;\n        n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t;\n        v \\<in> free_tv S2 \\<union>\n                free_tv (\\<lambda>x. $ S1 (S x))\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule sym [THEN mgu_free])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>v < n; n1 \\<le> n2; n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t;\n        v \\<in> free_tv S2 \\<union> free_tv (\\<lambda>x. $ S1 (S x));\n        free_tv S2\n        \\<subseteq> free_tv ($ S1 t) \\<union>\n                    free_tv (t1 -> TVar n2)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply clarsimp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>v < n; n1 \\<le> n2; n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t;\n        v \\<in> free_tv S2 \\<or> v \\<in> free_tv (\\<lambda>x. $ S1 (S x));\n        free_tv S2\n        \\<subseteq> insert n2\n                     (free_tv ($ S1 t) \\<union> free_tv t1)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (fastforce dest: free_tv_comp_subst [THEN subsetD] sym [THEN mgu_free] codD free_tv_app_subst_te [THEN subsetD] free_tv_app_subst_scheme_list [THEN subsetD] less_le_trans less_not_refl2 subsetD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        W e1_ A n = Some (S, t, n1) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e2_ ($ S A) n1 = Some (S1, t1, n2); W e1_ A n = Some (S, t, n1);\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (S2 n2); v < n\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule sym [THEN W_var_geD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        W e1_ A n = Some (S, t, n1);\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (S2 n2); v < n; n1 \\<le> n2\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule sym [THEN W_var_geD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (S2 n2); v < n; n1 \\<le> n2; n \\<le> n1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply ( (frule less_le_trans) , (assumption))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        (v \\<in> free_tv S \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A)) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n1 \\<longrightarrow> v \\<in> free_tv ($ S A));\n        v \\<in> free_tv (S2 n2); v < n; n1 \\<le> n2; n \\<le> n1;\n        v < n1\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>mgu ($ S1 t) (t1 -> TVar n2) = Some S2;\n        v \\<in> free_tv (S2 n2); v < n; n1 \\<le> n2; n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (drule mgu_free)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S t n1 S1 t1 n2 S2 v.\n       \\<lbrakk>v \\<in> free_tv (S2 n2); v < n; n1 \\<le> n2; n \\<le> n1;\n        v \\<in> free_tv S1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<in> free_tv t1 \\<longrightarrow> v \\<in> free_tv ($ S A);\n        v \\<notin> free_tv S; v \\<notin> free_tv t;\n        free_tv S2\n        \\<subseteq> free_tv ($ S1 t) \\<union>\n                    free_tv (t1 -> TVar n2)\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv A", "apply (fastforce dest: mgu_free codD free_tv_subst_var [THEN subsetD] free_tv_app_subst_te [THEN subsetD] free_tv_app_subst_scheme_list [THEN subsetD] less_le_trans subsetD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W (App e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "case LET"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (1 subgoal):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1 A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2 A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n A S t m v.\n                            W (LET e1 e2) A n =\n                            Some (S, t, m) \\<longrightarrow>\n                            v \\<in> free_tv S \\<or>\n                            v \\<in> free_tv t \\<longrightarrow>\n                            v < n \\<longrightarrow> v \\<in> free_tv A", "then"], ["proof (chain)\npicking this:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>n A S t m v.\n     W e1_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n  \\<forall>n A S t m v.\n     W e2_ A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal (1 subgoal):\n 1. \\<forall>n A S t m v.\n       W (LET e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n       v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n       v < n \\<longrightarrow> v \\<in> free_tv A", "apply (simp (no_asm) split: split_option_bind del: all_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>n A S t m v.\n                W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n                v < n \\<longrightarrow> v \\<in> free_tv A;\n     \\<forall>n A S t m v.\n        W e2_ A n = Some (S, t, m) \\<longrightarrow>\n        v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n    \\<Longrightarrow> \\<forall>n A a aa b ab ac ba.\n                         W e2_ (gen ($ a A) aa # $ a A) b =\n                         Some (ab, ac, ba) \\<longrightarrow>\n                         W e1_ A n = Some (a, aa, b) \\<longrightarrow>\n                         (\\<forall>v.\n                             (v \\<in> free_tv\n ($ ab \\<circ> a) \\<longrightarrow>\n                              v < n \\<longrightarrow>\n                              v \\<in> free_tv A) \\<and>\n                             (v \\<in> free_tv ac \\<longrightarrow>\n                              v < n \\<longrightarrow> v \\<in> free_tv A))", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A a aa b ab ac ba v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ a A) aa # $ a A) b = Some (ab, ac, ba);\n        W e1_ A n = Some (a, aa, b)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv ($ ab \\<circ> a) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv ac \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rename_tac S1 t1 n2 S2 t2 n3 v)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e1_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        \\<forall>A S t m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        \\<forall>S t m v.\n           W e1_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"S1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        \\<forall>t m v.\n           W e1_ A n = Some (S1, t, m) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"t1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        \\<forall>m v.\n           W e1_ A n = Some (S1, t1, m) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>m v.\n                   W e1_ A n = Some (S1, t1, m) \\<longrightarrow>\n                   v \\<in> free_tv S1 \\<or>\n                   v \\<in> free_tv t1 \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"n2\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        \\<forall>v.\n           W e1_ A n = Some (S1, t1, n2) \\<longrightarrow>\n           v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rotate_tac -1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>v.\n                   W e1_ A n = Some (S1, t1, n2) \\<longrightarrow>\n                   v \\<in> free_tv S1 \\<or>\n                   v \\<in> free_tv t1 \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        \\<forall>n A S t m v.\n           W e2_ A n = Some (S, t, m) \\<longrightarrow>\n           v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n           v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule_tac x = \"v\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        W e1_ A n = Some (S1, t1, n2) \\<longrightarrow>\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>\\<forall>n A S t m v.\n                   W e2_ A n = Some (S, t, m) \\<longrightarrow>\n                   v \\<in> free_tv S \\<or>\n                   v \\<in> free_tv t \\<longrightarrow>\n                   v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule allE,erule allE,erule allE,erule allE,erule allE,erule_tac  x = \"v\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        W e2_ (?A54 n A S1 t1 n2 S2 t2 n3 v)\n         (?n52 n A S1 t1 n2 S2 t2 n3 v) =\n        Some\n         (?S56 n A S1 t1 n2 S2 t2 n3 v, ?t58 n A S1 t1 n2 S2 t2 n3 v,\n          ?m60 n A S1 t1 n2 S2 t2 n3 v) \\<longrightarrow>\n        v \\<in> free_tv (?S56 n A S1 t1 n2 S2 t2 n3 v) \\<or>\n        v \\<in> free_tv (?t58 n A S1 t1 n2 S2 t2 n3 v) \\<longrightarrow>\n        v < ?n52 n A S1 t1 n2 S2 t2 n3 v \\<longrightarrow>\n        v \\<in> free_tv (?A54 n A S1 t1 n2 S2 t2 n3 v)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        v \\<in> free_tv S1 \\<or> v \\<in> free_tv t1 \\<longrightarrow>\n        v < n \\<longrightarrow> v \\<in> free_tv A;\n        v \\<in> free_tv S2 \\<or> v \\<in> free_tv t2 \\<longrightarrow>\n        v < n2 \\<longrightarrow>\n        v \\<in> free_tv (gen ($ S1 A) t1 # $ S1 A)\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A)) \\<and>\n        (v \\<in> free_tv t2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A))\\<rbrakk>\n       \\<Longrightarrow> (v \\<in> free_tv\n                                   ($ S2 \\<circ> S1) \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n                         (v \\<in> free_tv t2 \\<longrightarrow>\n                          v < n \\<longrightarrow> v \\<in> free_tv A)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A)) \\<and>\n        (v \\<in> free_tv t2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A))\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv ($ S2 \\<circ> S1) \\<longrightarrow>\n                         v < n \\<longrightarrow> v \\<in> free_tv A\n 2. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A)) \\<and>\n        (v \\<in> free_tv t2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A))\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv t2 \\<longrightarrow>\n                         v < n \\<longrightarrow> v \\<in> free_tv A", "apply (fast dest!: codD free_tv_app_subst_scheme_list [THEN subsetD] free_tv_o_subst [THEN subsetD] W_var_ge dest: less_le_trans)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n A S1 t1 n2 S2 t2 n3 v.\n       \\<lbrakk>W e2_ (gen ($ S1 A) t1 # $ S1 A) n2 = Some (S2, t2, n3);\n        W e1_ A n = Some (S1, t1, n2);\n        (v \\<in> free_tv S1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A) \\<and>\n        (v \\<in> free_tv t1 \\<longrightarrow>\n         v < n \\<longrightarrow> v \\<in> free_tv A);\n        (v \\<in> free_tv S2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A)) \\<and>\n        (v \\<in> free_tv t2 \\<longrightarrow>\n         v < n2 \\<longrightarrow> v \\<in> free_tv ($ S1 A))\\<rbrakk>\n       \\<Longrightarrow> v \\<in> free_tv t2 \\<longrightarrow>\n                         v < n \\<longrightarrow> v \\<in> free_tv A", "apply (fast dest!: codD free_tv_app_subst_scheme_list [THEN subsetD] W_var_ge dest: less_le_trans)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<forall>n A S t m v.\n     W (LET e1_ e2_) A n = Some (S, t, m) \\<longrightarrow>\n     v \\<in> free_tv S \\<or> v \\<in> free_tv t \\<longrightarrow>\n     v < n \\<longrightarrow> v \\<in> free_tv A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weaken_A_Int_B_eq_empty: \"(\\<forall>x. x \\<in> A \\<longrightarrow> x \\<notin> B) \\<Longrightarrow> A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> A \\<longrightarrow> x \\<notin> B \\<Longrightarrow>\n    A \\<inter> B = {}", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma weaken_not_elem_A_minus_B: \"x \\<notin> A \\<or> x \\<in> B \\<Longrightarrow> x \\<notin> A - B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> A \\<or> x \\<in> B \\<Longrightarrow> x \\<notin> A - B", "apply fast"], ["proof (prove)\ngoal:\nNo subgoals!", "done\n\n\\<comment> \\<open>correctness of W with respect to @{text has_type}\\<close>"], ["", "lemma W_correct_lemma [rule_format (no_asm)]: \"\\<forall>A S t m n . new_tv n A \\<longrightarrow> Some (S,t,m) = W e A n \\<longrightarrow> $S A |- e :: t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>A S t m n.\n       new_tv n A \\<longrightarrow>\n       Some (S, t, m) = W e A n \\<longrightarrow> $ S A |- e :: t", "apply (induct_tac \"e\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Var x) A n \\<longrightarrow>\n          $ S A |- Var x :: t\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "(* case Var n *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Var x) A n \\<longrightarrow>\n          $ S A |- Var x :: t\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>A.\n          x < length A \\<longrightarrow>\n          (\\<forall>n.\n              new_tv n A \\<longrightarrow>\n              A |-\n              Var x :: bound_typ_inst (\\<lambda>b. TVar (b + n)) (A ! x))\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (intro strip)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> A |-\n                         Var x :: bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                   (A ! x)\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule has_type.VarI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> x < length A\n 2. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> bound_typ_inst (\\<lambda>b. TVar (b + n))\n                          (A ! x) <|\n                         A ! x\n 3. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 5. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp (no_asm))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> bound_typ_inst (\\<lambda>b. TVar (b + n))\n                          (A ! x) <|\n                         A ! x\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp (no_asm) add: is_bound_typ_instance)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S.\n                            bound_typ_inst (\\<lambda>b. TVar (b + n))\n                             (A ! x) =\n                            bound_typ_inst S (A ! x)\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A n.\n       \\<lbrakk>x < length A; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> bound_typ_inst (\\<lambda>b. TVar (b + n)) (A ! x) =\n                         bound_typ_inst (?S31 x A n) (A ! x)\n 2. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "(* case Abs e *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          $ S A |- x :: t \\<Longrightarrow>\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W (Abs x) A n \\<longrightarrow>\n          $ S A |- Abs x :: t\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp add: app_subst_list split: split_option_bind)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<forall>A S t m n.\n          new_tv n A \\<longrightarrow>\n          Some (S, t, m) = W x A n \\<longrightarrow>\n          map ($ S) A |- x :: t \\<Longrightarrow>\n       \\<forall>A S m n a.\n          W x (FVar n # A) (Suc n) = Some (S, a, m) \\<longrightarrow>\n          new_tv n A \\<longrightarrow> map ($ S) A |- Abs x :: S n -> a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (intro strip)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x A n \\<longrightarrow>\n                   map ($ S) A |- x :: t;\n        W x (FVar n # A) (Suc n) = Some (S, a, m); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> map ($ S) A |- Abs x :: S n -> a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule_tac x = \" (mk_scheme (TVar n)) # A\" in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>W x (FVar n # A) (Suc n) = Some (S, a, m); new_tv n A;\n        \\<forall>S t m na.\n           new_tv na (mk_scheme (TVar n) # A) \\<longrightarrow>\n           Some (S, t, m) =\n           W x (mk_scheme (TVar n) # A) na \\<longrightarrow>\n           map ($ S) (mk_scheme (TVar n) # A) |- x :: t\\<rbrakk>\n       \\<Longrightarrow> map ($ S) A |- Abs x :: S n -> a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>W x (FVar n # A) (Suc n) = Some (S, a, m); new_tv n A;\n        \\<forall>S t m na.\n           n < na \\<and> new_tv na A \\<longrightarrow>\n           Some (S, t, m) = W x (FVar n # A) na \\<longrightarrow>\n           mk_scheme (S n) # map ($ S) A |- x :: t\\<rbrakk>\n       \\<Longrightarrow> map ($ S) A |- Abs x :: S n -> a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule has_type.AbsI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>W x (FVar n # A) (Suc n) = Some (S, a, m); new_tv n A;\n        \\<forall>S t m na.\n           n < na \\<and> new_tv na A \\<longrightarrow>\n           Some (S, t, m) = W x (FVar n # A) na \\<longrightarrow>\n           mk_scheme (S n) # map ($ S) A |- x :: t\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (drule le_refl [THEN le_SucI, THEN new_scheme_list_le])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>W x (FVar n # A) (Suc n) = Some (S, a, m);\n        \\<forall>S t m na.\n           n < na \\<and> new_tv na A \\<longrightarrow>\n           Some (S, t, m) = W x (FVar n # A) na \\<longrightarrow>\n           mk_scheme (S n) # map ($ S) A |- x :: t;\n        new_tv (Suc n) A\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (drule sym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>\\<forall>S t m na.\n                   n < na \\<and> new_tv na A \\<longrightarrow>\n                   Some (S, t, m) = W x (FVar n # A) na \\<longrightarrow>\n                   mk_scheme (S n) # map ($ S) A |- x :: t;\n        new_tv (Suc n) A; Some (S, a, m) = W x (FVar n # A) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule allE)+"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A; Some (S, a, m) = W x (FVar n # A) (Suc n);\n        n < ?n73 x A S m n a \\<and>\n        new_tv (?n73 x A S m n a) A \\<longrightarrow>\n        Some (?S67 x A S m n a, ?t69 x A S m n a, ?m71 x A S m n a) =\n        W x (FVar n # A) (?n73 x A S m n a) \\<longrightarrow>\n        mk_scheme (?S67 x A S m n a n) # map ($ (?S67 x A S m n a)) A |-\n        x :: ?t69 x A S m n a\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule impE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A;\n        Some (S, a, m) = W x (FVar n # A) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> n < ?n73 x A S m n a \\<and>\n                         new_tv (?n73 x A S m n a) A\n 2. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A; Some (S, a, m) = W x (FVar n # A) (Suc n);\n        Some (?S67 x A S m n a, ?t69 x A S m n a, ?m71 x A S m n a) =\n        W x (FVar n # A) (?n73 x A S m n a) \\<longrightarrow>\n        mk_scheme (?S67 x A S m n a n) # map ($ (?S67 x A S m n a)) A |-\n        x :: ?t69 x A S m n a\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule_tac [2] notE impE, tactic \"assume_tac @{context} 2\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A;\n        Some (S, a, m) = W x (FVar n # A) (Suc n)\\<rbrakk>\n       \\<Longrightarrow> n < Suc n \\<and> new_tv (Suc n) A\n 2. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A; Some (S, a, m) = W x (FVar n # A) (Suc n);\n        mk_scheme (S n) # map ($ S) A |- x :: a\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x A S m n a.\n       \\<lbrakk>new_tv (Suc n) A; Some (S, a, m) = W x (FVar n # A) (Suc n);\n        mk_scheme (S n) # map ($ S) A |- x :: a\\<rbrakk>\n       \\<Longrightarrow> mk_scheme (S n) # map ($ S) A |- x :: a\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "(* case App e1 e2 *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (App x1a x2a) A n \\<longrightarrow>\n                            $ S A |- App x1a x2a :: t\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A n a aa b ab ac ba s.\n                            mgu ($ ab aa) (ac -> TVar ba) =\n                            Some s \\<longrightarrow>\n                            W x2a ($ a A) b =\n                            Some (ab, ac, ba) \\<longrightarrow>\n                            W x1a A n = Some (a, aa, b) \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            $ ($ s \\<circ> $ ab \\<circ> a) A |-\n                            App x1a x2a :: s ba\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (intro strip)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n a aa b ab ac ba s.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ ab aa) (ac -> TVar ba) = Some s;\n        W x2a ($ a A) b = Some (ab, ac, ba); W x1a A n = Some (a, aa, b);\n        new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ s \\<circ> $ ab \\<circ> a) A |-\n                         App x1a x2a :: s ba\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rename_tac S1 t1 n1 S2 t2 n2 S3)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         App x1a x2a :: S3 n2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule_tac ?t2.0 = \"$ S3 t2\" in has_type.AppI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x1a :: $ S3 t2 -> S3 n2\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule_tac S1 = \"S3\" in app_subst_TVar [THEN subst])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x1a :: $ S3 t2 -> $ S3 (TVar n2)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule app_subst_Fun [THEN subst])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x1a :: $ S3 (t2 -> TVar n2)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule_tac t = \"$S3 (t2 -> (TVar n2))\" and s = \"$S3 ($S2 t1) \" in subst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S3 ($ S2 t1) = $ S3 (t2 -> TVar n2)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x1a :: $ S3 ($ S2 t1)\n 3. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x1a :: $ S3 ($ S2 t1)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp only: subst_comp_scheme_list [symmetric] o_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S3 ($ S2 ($ S1 A)) |- x1a :: $ S3 ($ S2 t1)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply ((rule has_type_cl_sub [THEN spec]) , (rule has_type_cl_sub [THEN spec]))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp add: eq_sym_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S3 \\<circ> $ S2 \\<circ> S1) A |-\n                         x2a :: $ S3 t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp add: subst_comp_scheme_list [symmetric] o_def has_type_cl_sub eq_sym_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S3 ($ S2 ($ S1 A)) |- x2a :: $ S3 t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule has_type_cl_sub [THEN spec])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (frule new_tv_W)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> W (?e202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) A n =\n                         Some\n                          (?S202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n                           ?t202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n                           ?m202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A;\n        new_tv (?m202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?S202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<and>\n        new_tv (?m202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?t202 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A;\n        new_tv n1 S1 \\<and> new_tv n1 t1\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (drule conjunct1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (frule new_tv_subst_scheme_list)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> new_tv n1 (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3))\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule new_scheme_list_le)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> ?n210 x1a x2a A n S1 t1 n1 S2 t2 n2 S3 \\<le> n1\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n210 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n                          (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n 3. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3))\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (rule W_var_ge)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> W (?e213 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n                          (?A213 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n                          (?n210 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n                         Some\n                          (?S213 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n                           ?t213 x1a x2a A n S1 t1 n1 S2 t2 n2 S3, n1)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> new_tv (?n210 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n                          (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n 3. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3))\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 4. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1\\<rbrakk>\n       \\<Longrightarrow> new_tv n (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n 2. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 (?A207 x1a x2a A n S1 t1 n1 S2 t2 n2 S3))\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 3. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x1a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           W x2a A n = Some (S, t, m) \\<longrightarrow> $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 A)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   W x2a A n = Some (S, t, m) \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 A)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule allE)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some S3 = mgu ($ S2 t1) (t2 -> TVar n2);\n        Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 A);\n        new_tv (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        W x2a (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (drule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>Some (S2, t2, n2) = W x2a ($ S1 A) n1;\n        W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 A);\n        new_tv (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        W x2a (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (drule sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>W x1a A n = Some (S1, t1, n1); new_tv n A; new_tv n1 S1;\n        new_tv n1 ($ S1 A);\n        new_tv (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        W x2a (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>new_tv n A; new_tv n1 S1; new_tv n1 ($ S1 A);\n        new_tv (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        W x2a (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>new_tv n1 S1; new_tv n1 ($ S1 A);\n        new_tv (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        W x2a (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?n225 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3)\n         (?A217 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3;\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2)\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>new_tv n1 S1; new_tv n1 ($ S1 A);\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        W x2a ($ S1 A) n1 =\n        Some\n         (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3,\n          ?m223 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) \\<longrightarrow>\n        $ (?S219 x1a x2a A n S1 t1 n1 S2 t2 n2 S3) ($ S1 A) |-\n        x2a :: ?t221 x1a x2a A n S1 t1 n1 S2 t2 n2 S3\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A n S1 t1 n1 S2 t2 n2 S3.\n       \\<lbrakk>new_tv n1 S1; new_tv n1 ($ S1 A);\n        mgu ($ S2 t1) (t2 -> TVar n2) = Some S3;\n        W x2a ($ S1 A) n1 = Some (S2, t2, n2);\n        $ S2 ($ S1 A) |- x2a :: t2\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x2a :: t2\n 2. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply assumption"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "(* case Let e1 e2 *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A S t m n.\n                            new_tv n A \\<longrightarrow>\n                            Some (S, t, m) =\n                            W (LET x1a x2a) A n \\<longrightarrow>\n                            $ S A |- LET x1a x2a :: t", "apply (simp (no_asm) split: split_option_bind)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow>\n           $ S A |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> \\<forall>A t m n a aa b ab.\n                            W x2a (gen ($ a A) aa # $ a A) b =\n                            Some (ab, t, m) \\<longrightarrow>\n                            W x1a A n = Some (a, aa, b) \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            $ ($ ab \\<circ> a) A |- LET x1a x2a :: t", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n a aa b ab.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ a A) aa # $ a A) b = Some (ab, t, m);\n        W x1a A n = Some (a, aa, b); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ ab \\<circ> a) A |- LET x1a x2a :: t", "(*by (rename_tac \"w q m1 S1 t1 m2 S2 t n2\" 1); *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n a aa b ab.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ a A) aa # $ a A) b = Some (ab, t, m);\n        W x1a A n = Some (a, aa, b); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ ab \\<circ> a) A |- LET x1a x2a :: t", "apply (rename_tac S1 t1 m1 S2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S2 \\<circ> S1) A |- LET x1a x2a :: t", "apply (rule_tac ?t1.0 = \"$ S2 t1\" in has_type.LETI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ ($ S2 \\<circ> S1) A |- x1a :: $ S2 t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (simp (no_asm) add: o_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x. $ S2 (S1 x)) A |- x1a :: $ S2 t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (simp only: subst_comp_scheme_list [symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S2 ($ S1 A) |- x1a :: $ S2 t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (rule has_type_cl_sub [THEN spec])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (drule_tac x = \"A\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x1a A n \\<longrightarrow>\n           $ S A |- x1a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (drule_tac x = \"S1\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S1, t, m) = W x1a A n \\<longrightarrow>\n           $ S1 A |- x1a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (drule_tac x = \"t1\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>m n.\n           new_tv n A \\<longrightarrow>\n           Some (S1, t1, m) = W x1a A n \\<longrightarrow>\n           $ S1 A |- x1a :: t1\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (drule_tac x = \"m1\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>n.\n           new_tv n A \\<longrightarrow>\n           Some (S1, t1, m1) = W x1a A n \\<longrightarrow>\n           $ S1 A |- x1a :: t1\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (drule_tac x = \"n\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv n A \\<longrightarrow>\n        Some (S1, t1, m1) = W x1a A n \\<longrightarrow>\n        $ S1 A |- x1a :: t1\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        Some (S1, t1, m1) = W x1a A n \\<longrightarrow>\n        $ S1 A |- x1a :: t1\\<rbrakk>\n       \\<Longrightarrow> $ S1 A |- x1a :: t1\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (simp add: eq_sym_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ ($ S2 \\<circ> S1) A) ($ S2 t1) #\n                         $ ($ S2 \\<circ> S1) A |-\n                         x2a :: t", "apply (simp (no_asm) add: o_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ (\\<lambda>x. $ S2 (S1 x)) A) ($ S2 t1) #\n                         $ (\\<lambda>x. $ S2 (S1 x)) A |-\n                         x2a :: t", "apply (simp only: subst_comp_scheme_list [symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> gen ($ S2 ($ S1 A)) ($ S2 t1) # $ S2 ($ S1 A) |-\n                         x2a :: t", "apply (rule gen_subst_commutes [symmetric, THEN subst])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1) # $ S2 ($ S1 A) |- x2a :: t", "apply (rule_tac [2] app_subst_Cons [THEN subst])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (erule_tac [2] thin_rl)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x2a A n \\<longrightarrow>\n                   $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (drule_tac [2] x = \"gen ($S1 A) t1 # $ S1 A\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>S t m n.\n           new_tv n (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n           Some (S, t, m) =\n           W x2a (gen ($ S1 A) t1 # $ S1 A) n \\<longrightarrow>\n           $ S (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (drule_tac [2] x = \"S2\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>t m n.\n           new_tv n (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n           Some (S2, t, m) =\n           W x2a (gen ($ S1 A) t1 # $ S1 A) n \\<longrightarrow>\n           $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (drule_tac [2] x = \"t\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>m n.\n           new_tv n (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n           Some (S2, t, m) =\n           W x2a (gen ($ S1 A) t1 # $ S1 A) n \\<longrightarrow>\n           $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (drule_tac [2] x = \"m\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        \\<forall>n.\n           new_tv n (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n           Some (S2, t, m) =\n           W x2a (gen ($ S1 A) t1 # $ S1 A) n \\<longrightarrow>\n           $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (drule_tac [2] x = \"m1\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (frule_tac [2] new_tv_W)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> W (?e335 x1a x2a A t m n S1 t1 m1 S2) A n =\n                         Some\n                          (?S335 x1a x2a A t m n S1 t1 m1 S2,\n                           ?t335 x1a x2a A t m n S1 t1 m1 S2,\n                           ?m335 x1a x2a A t m n S1 t1 m1 S2)\n 3. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t;\n        new_tv (?m335 x1a x2a A t m n S1 t1 m1 S2)\n         (?S335 x1a x2a A t m n S1 t1 m1 S2) \\<and>\n        new_tv (?m335 x1a x2a A t m n S1 t1 m1 S2)\n         (?t335 x1a x2a A t m n S1 t1 m1 S2)\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\\<rbrakk>\n       \\<Longrightarrow> W (?e335 x1a x2a A t m n S1 t1 m1 S2) A n =\n                         Some\n                          (?S335 x1a x2a A t m n S1 t1 m1 S2,\n                           ?t335 x1a x2a A t m n S1 t1 m1 S2,\n                           ?m335 x1a x2a A t m n S1 t1 m1 S2)\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 3. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t;\n        new_tv (?m335 x1a x2a A t m n S1 t1 m1 S2)\n         (?S335 x1a x2a A t m n S1 t1 m1 S2) \\<and>\n        new_tv (?m335 x1a x2a A t m n S1 t1 m1 S2)\n         (?t335 x1a x2a A t m n S1 t1 m1 S2)\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "apply (assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t;\n        new_tv m1 S1 \\<and> new_tv m1 t1\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        new_tv m1 (gen ($ S1 A) t1 # $ S1 A) \\<longrightarrow>\n        Some (S2, t, m) =\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 \\<longrightarrow>\n        $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t;\n        new_tv m1 S1 \\<and> new_tv m1 t1\\<rbrakk>\n       \\<Longrightarrow> $ S2 (gen ($ S1 A) t1 # $ S1 A) |- x2a :: t\n 2. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}", "apply (metis new_tv_Cons new_tv_compatible_W new_tv_compatible_gen new_tv_subst_scheme_list)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> free_tv S2 \\<inter>\n                         (free_tv t1 - free_tv ($ S1 A)) =\n                         {}", "apply (rule weaken_A_Int_B_eq_empty)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            x \\<in> free_tv S2 \\<longrightarrow>\n                            x \\<notin> free_tv t1 - free_tv ($ S1 A)", "apply (rule allI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2 x.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A\\<rbrakk>\n       \\<Longrightarrow> x \\<in> free_tv S2 \\<longrightarrow>\n                         x \\<notin> free_tv t1 - free_tv ($ S1 A)", "apply (intro strip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2 x.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        x \\<in> free_tv S2\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> free_tv t1 - free_tv ($ S1 A)", "apply (rule weaken_not_elem_A_minus_B)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1a x2a A t m n S1 t1 m1 S2 x.\n       \\<lbrakk>\\<forall>A S t m n.\n                   new_tv n A \\<longrightarrow>\n                   Some (S, t, m) = W x1a A n \\<longrightarrow>\n                   $ S A |- x1a :: t;\n        \\<forall>A S t m n.\n           new_tv n A \\<longrightarrow>\n           Some (S, t, m) = W x2a A n \\<longrightarrow> $ S A |- x2a :: t;\n        W x2a (gen ($ S1 A) t1 # $ S1 A) m1 = Some (S2, t, m);\n        W x1a A n = Some (S1, t1, m1); new_tv n A;\n        x \\<in> free_tv S2\\<rbrakk>\n       \\<Longrightarrow> x \\<notin> free_tv t1 \\<or>\n                         x \\<in> free_tv ($ S1 A)", "by (metis free_tv_W free_tv_gen_cons free_tv_le_new_tv new_tv_W)\n\n\\<comment> \\<open>Completeness of W w.r.t. @{text has_type}\\<close>"], ["", "lemma W_complete_lemma [rule_format (no_asm)]: \n  \"\\<forall>S' A t' n. $S' A |- e :: t' \\<longrightarrow> new_tv n A \\<longrightarrow>\n               (\\<exists>S t. (\\<exists>m. W e A n = Some (S,t,m)) \\<and>\n                       (\\<exists>R. $S' A = $R ($S A) \\<and> t' = $R t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>S' A t' n.\n       $ S' A |- e :: t' \\<longrightarrow>\n       new_tv n A \\<longrightarrow>\n       (\\<exists>S t.\n           (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n           (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (induct e)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>S' A t' n.\n          $ S' A |- Var x :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Var x) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "(* case Var n *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<forall>S' A t' n.\n          $ S' A |- Var x :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Var x) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (intro strip)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n.\n       \\<lbrakk>$ S' A |- Var x :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Var x) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (simp (no_asm) cong add: conj_cong)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n.\n       \\<lbrakk>$ S' A |- Var x :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> (x < length A \\<longrightarrow>\n                          (\\<exists>R.\n                              $ S' A = $ R A \\<and>\n                              t' =\n                              $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                    (A ! x)))) \\<and>\n                         x < length A\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule has_type_casesE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n.\n       \\<lbrakk>new_tv n A; x < length ($ S' A); t' <| $ S' A ! x\\<rbrakk>\n       \\<Longrightarrow> (x < length A \\<longrightarrow>\n                          (\\<exists>R.\n                              $ S' A = $ R A \\<and>\n                              t' =\n                              $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                    (A ! x)))) \\<and>\n                         x < length A\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (simp add: is_bound_typ_instance)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n.\n       \\<lbrakk>new_tv n A; x < length A;\n        \\<exists>S. t' = bound_typ_inst S ($ S' A ! x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ S' A = $ R A \\<and>\n                            t' =\n                            $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                  (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule exE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A;\n        t' = bound_typ_inst S ($ S' A ! x)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ S' A = $ R A \\<and>\n                            t' =\n                            $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                  (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (hypsubst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ S' A = $ R A \\<and>\n                            bound_typ_inst S ($ S' A ! x) =\n                            $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                  (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (rename_tac \"S\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ S' A = $ R A \\<and>\n                            bound_typ_inst S ($ S' A ! x) =\n                            $ R (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                                  (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (rule_tac x = \"\\<lambda>x. (if x < n then S' x else S (x - n))\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> $ S' A =\n                         $ (\\<lambda>x. if x < n then S' x else S (x - n))\n                          A \\<and>\n                         bound_typ_inst S ($ S' A ! x) =\n                         $ (\\<lambda>x. if x < n then S' x else S (x - n))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (rule conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> $ S' A =\n                         $ (\\<lambda>x. if x < n then S' x else S (x - n)) A\n 2. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> bound_typ_inst S ($ S' A ! x) =\n                         $ (\\<lambda>x. if x < n then S' x else S (x - n))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x))\n 3. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 5. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x S' A t' n S.\n       \\<lbrakk>new_tv n A; x < length A\\<rbrakk>\n       \\<Longrightarrow> bound_typ_inst S ($ S' A ! x) =\n                         $ (\\<lambda>x. if x < n then S' x else S (x - n))\n                          (bound_typ_inst (\\<lambda>b. TVar (b + n))\n                            (A ! x))\n 2. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 4. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (simp (no_asm_simp) add: bound_typ_inst_composed_subst [symmetric] new_tv_nth_nat_A o_def nth_subst \n      del: bound_typ_inst_composed_subst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "(* case Abs e *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e.\n       \\<forall>S' A t' n.\n          $ S' A |- e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n              (\\<exists>R.\n                  $ S' A = $ R ($ S A) \\<and> t' = $ R t)) \\<Longrightarrow>\n       \\<forall>S' A t' n.\n          $ S' A |- Abs e :: t' \\<longrightarrow>\n          new_tv n A \\<longrightarrow>\n          (\\<exists>S t.\n              (\\<exists>m. W (Abs e) A n = Some (S, t, m)) \\<and>\n              (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (intro strip)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- Abs e :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule has_type_casesE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n t1 t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; t' = t1 -> t2; mk_scheme t1 # $ S' A |- e :: t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"\\<lambda>x. if x=n then t1 else (S' x) \" in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n t1 t2.\n       \\<lbrakk>new_tv n A; t' = t1 -> t2; mk_scheme t1 # $ S' A |- e :: t2;\n        \\<forall>A t' na.\n           $ (\\<lambda>a. if a = n then t1 else S' a) A |-\n           e :: t' \\<longrightarrow>\n           new_tv na A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e A na = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ (\\<lambda>a. if a = n then t1 else S' a) A =\n                   $ R ($ S A) \\<and>\n                   t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \" (FVar n) #A\" in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n t1 t2.\n       \\<lbrakk>new_tv n A; t' = t1 -> t2; mk_scheme t1 # $ S' A |- e :: t2;\n        \\<forall>t' na.\n           $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) |-\n           e :: t' \\<longrightarrow>\n           new_tv na (FVar n # A) \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e (FVar n # A) na = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) =\n                   $ R ($ S (FVar n # A)) \\<and>\n                   t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"t2\" in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n t1 t2.\n       \\<lbrakk>new_tv n A; t' = t1 -> t2; mk_scheme t1 # $ S' A |- e :: t2;\n        \\<forall>na.\n           $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) |-\n           e :: t2 \\<longrightarrow>\n           new_tv na (FVar n # A) \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e (FVar n # A) na = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) =\n                   $ R ($ S (FVar n # A)) \\<and>\n                   t2 = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"Suc n\" in allE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e S' A t' n t1 t2.\n       \\<lbrakk>new_tv n A; t' = t1 -> t2; mk_scheme t1 # $ S' A |- e :: t2;\n        $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) |-\n        e :: t2 \\<longrightarrow>\n        new_tv (Suc n) (FVar n # A) \\<longrightarrow>\n        (\\<exists>S t.\n            (\\<exists>m. W e (FVar n # A) (Suc n) = Some (S, t, m)) \\<and>\n            (\\<exists>R.\n                $ (\\<lambda>a. if a = n then t1 else S' a) (FVar n # A) =\n                $ R ($ S (FVar n # A)) \\<and>\n                t2 = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (Abs e) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 3. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (bestsimp dest!: mk_scheme_injective cong: conj_cong split: split_option_bind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "(* case App e1 e2 *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- App e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (App e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (intro strip)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- App e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule has_type_casesE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"S'\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        \\<forall>A t' n.\n           $ S' A |- e1 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"A\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        \\<forall>t' n.\n           $ S' A |- e1 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"t2 -> t'\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        \\<forall>n.\n           $ S' A |- e1 :: t2 -> t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t2 -> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply (erule_tac x = \"n\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        $ S' A |- e1 :: t2 -> t' \\<longrightarrow>\n        new_tv n A \\<longrightarrow>\n        (\\<exists>S t.\n            (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n            (\\<exists>R.\n                $ S' A = $ R ($ S A) \\<and> t2 -> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>S' A t' n.\n                            $ S' A |- LET e1 e2 :: t' \\<longrightarrow>\n                            new_tv n A \\<longrightarrow>\n                            (\\<exists>S t.\n                                (\\<exists>m.\n                                    W (LET e1 e2) A n =\n                                    Some (S, t, m)) \\<and>\n                                (\\<exists>R.\n                                    $ S' A = $ R ($ S A) \\<and> t' = $ R t))", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        t2 -> t' = $ R t\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"R\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        \\<forall>A t' n.\n           $ R A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R A = $ Ra ($ S A) \\<and> t' = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"$ S A\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        \\<forall>t' n.\n           $ R ($ S A) |- e2 :: t' \\<longrightarrow>\n           new_tv n ($ S A) \\<longrightarrow>\n           (\\<exists>Sa t.\n               (\\<exists>m. W e2 ($ S A) n = Some (Sa, t, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                   t' = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"t2\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        \\<forall>n.\n           $ R ($ S A) |- e2 :: t2 \\<longrightarrow>\n           new_tv n ($ S A) \\<longrightarrow>\n           (\\<exists>Sa t.\n               (\\<exists>m. W e2 ($ S A) n = Some (Sa, t, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                   t2 = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"m\" in allE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: t2 -> t'; $ S' A |- e2 :: t2;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        $ R ($ S A) |- e2 :: t2 \\<longrightarrow>\n        new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa t.\n            (\\<exists>ma. W e2 ($ S A) m = Some (Sa, t, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t2 = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (App e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: t2; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa t.\n            (\\<exists>ma. W e2 ($ S A) m = Some (Sa, t, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t2 = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: t2; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); t2 -> t' = $ R t;\n        \\<not> new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (blast intro: sym [THEN W_var_geD] new_tv_W [THEN conjunct1] new_scheme_list_le new_tv_subst_scheme_list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(** LEVEL 33 **)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (subgoal_tac \"$ (\\<lambda>x. if x=ma then t' else (if x: (free_tv t - free_tv Sa) then R x else Ra x)) ($ Sa t) = $ (\\<lambda>x. if x=ma then t' else (if x: (free_tv t - free_tv Sa) then R x else Ra x)) (ta -> (TVar ma))\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ($ Sa t) =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac [2] t = \"$ (\\<lambda>x. if x = ma then t' else (if x: (free_tv t - free_tv Sa) then R x else Ra x)) ($ Sa t) \" and s = \" ($ Ra ta) -> t'\" in ssubst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ($ Sa t) =\n                         $ Ra ta -> t'\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ($ Sa t) =\n                         $ Ra ta -> t'\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm_simp) add: subst_comp_te)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               $ (\\<lambda>x.\n                                     if x = ma then t'\n                                     else if x \\<in> free_tv t - free_tv Sa\n    then R x else Ra x)\n                                (Sa x))\n                          t =\n                         $ R t\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               $ (\\<lambda>x.\n                                     if x = ma then t'\n                                     else if x \\<in> free_tv t - free_tv Sa\n    then R x else Ra x)\n                                (Sa x))\n                          t =\n                         $ R t\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac [2] eq_free_eq_subst_te)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv t \\<longrightarrow>\n                            $ (\\<lambda>x.\n                                  if x = ma then t'\n                                  else if x \\<in> free_tv t - free_tv Sa\n then R x else Ra x)\n                             (Sa n) =\n                            R n\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv t \\<longrightarrow>\n                            $ (\\<lambda>x.\n                                  if x = ma then t'\n                                  else if x \\<in> free_tv t - free_tv Sa\n then R x else Ra x)\n                             (Sa n) =\n                            R n\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (intro strip)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (subgoal_tac [2] \"na \\<noteq>ma\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (best dest: new_tv_W sym [THEN W_var_geD] new_tv_not_free_tv new_tv_le)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (case_tac [2] \"na:free_tv Sa\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* n1 \\<notin> free_tv S1 *)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (frule_tac [3] not_free_impl_id)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<notin> free_tv Sa; Sa na = TVar na\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<notin> free_tv Sa; Sa na = TVar na\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* na : free_tv Sa *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] A1 = \"$ S A\" in trans [OF _ subst_comp_scheme_list])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa;\n        $ R ($ S A) = $ (\\<lambda>x. $ Ra (Sa x)) ($ S A)\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] eq_subst_scheme_list_eq_free)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> ?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na\n                         \\<in> free_tv ($ S A)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa;\n        R (?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na) =\n        $ Ra (Sa (?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> ?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na\n                         \\<in> free_tv ($ S A)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa;\n        R (?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na) =\n        $ Ra (Sa (?n171 e1 e2 S' A t' n S t m R Sa ta ma Ra na))\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fast intro: free_tv_W free_tv_le_new_tv dest: new_tv_W)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (case_tac [2] \"na:dom Sa\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<notin> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* na \\<notin> dom Sa *)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<notin> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<notin> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp add: dom_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* na : dom Sa *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (Sa na) =\n                         $ Ra (Sa na)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac [2] eq_free_eq_subst_te)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv (Sa na) \\<longrightarrow>\n                            (if n = ma then t'\n                             else if n \\<in> free_tv t - free_tv Sa then R n\n                                  else Ra n) =\n                            Ra n\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv (Sa na) \\<longrightarrow>\n                            (if n = ma then t'\n                             else if n \\<in> free_tv t - free_tv Sa then R n\n                                  else Ra n) =\n                            Ra n\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (intro strip)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na)\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na)\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (subgoal_tac [2] \"nb \\<noteq> ma\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na)\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (frule_tac [3] new_tv_W)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na)\\<rbrakk>\n       \\<Longrightarrow> W (?e184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n                          A n =\n                         Some\n                          (?S184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb,\n                           ?t184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb,\n                           ?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        new_tv (?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n         (?S184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb) \\<and>\n        new_tv (?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n         (?t184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 6. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na)\\<rbrakk>\n       \\<Longrightarrow> W (?e184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n                          A n =\n                         Some\n                          (?S184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb,\n                           ?t184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb,\n                           ?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        new_tv (?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n         (?S184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb) \\<and>\n        new_tv (?m184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n         (?t184 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 6. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply assumption"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac [3] conjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m S;\n        new_tv m t\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [3] new_tv_subst_scheme_list)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv m\n                          (?A186 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t;\n        new_tv m\n         ($ S (?A186 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb))\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 6. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv m\n                          (?A186 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t;\n        new_tv m\n         ($ S (?A186 e1 e2 S' A t' n S t m R Sa ta ma Ra na nb))\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 6. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fast intro: new_scheme_list_le dest: sym [THEN W_var_geD])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t;\n        new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na); new_tv m t;\n        new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> nb \\<noteq> ma\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 4. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fastforce dest: new_tv_W new_tv_not_free_tv simp add: cod_def free_tv_subst)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na nb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv t;\n        na \\<noteq> ma; na \\<in> free_tv Sa; R na = $ Ra (Sa na);\n        na \\<in> Type.dom Sa; nb \\<in> free_tv (Sa na);\n        nb \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> (if nb = ma then t'\n                          else if nb \\<in> free_tv t - free_tv Sa then R nb\n                               else Ra nb) =\n                         Ra nb\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fastforce simp add: cod_def free_tv_subst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta -> t' =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          (ta -> TVar ma)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm))"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ta\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ta =\n                         $ (\\<lambda>x.\n                               if x = ma then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ta\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac [2] eq_free_eq_subst_te)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv ta \\<longrightarrow>\n                            Ra n =\n                            (if n = ma then t'\n                             else if n \\<in> free_tv t - free_tv Sa then R n\n                                  else Ra n)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv ta \\<longrightarrow>\n                            Ra n =\n                            (if n = ma then t'\n                             else if n \\<in> free_tv t - free_tv Sa then R n\n                                  else Ra n)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (intro strip)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (subgoal_tac [2] \"na \\<noteq> ma\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (frule_tac [3] new_tv_W)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta\\<rbrakk>\n       \\<Longrightarrow> W (?e216 e1 e2 S' A t' n S t m R Sa ta ma Ra na) A\n                          n =\n                         Some\n                          (?S216 e1 e2 S' A t' n S t m R Sa ta ma Ra na,\n                           ?t216 e1 e2 S' A t' n S t m R Sa ta ma Ra na,\n                           ?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        new_tv (?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n         (?S216 e1 e2 S' A t' n S t m R Sa ta ma Ra na) \\<and>\n        new_tv (?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n         (?t216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta\\<rbrakk>\n       \\<Longrightarrow> W (?e216 e1 e2 S' A t' n S t m R Sa ta ma Ra na) A\n                          n =\n                         Some\n                          (?S216 e1 e2 S' A t' n S t m R Sa ta ma Ra na,\n                           ?t216 e1 e2 S' A t' n S t m R Sa ta ma Ra na,\n                           ?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        new_tv (?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n         (?S216 e1 e2 S' A t' n S t m R Sa ta ma Ra na) \\<and>\n        new_tv (?m216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\n         (?t216 e1 e2 S' A t' n S t m R Sa ta ma Ra na)\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 5. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply assumption"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac [3] conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta; new_tv m S;\n        new_tv m t\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [3] sym [THEN W_var_geD])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; $ S' A = $ R ($ S A);\n        $ Ra ta -> t' = $ R t; W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta; new_tv m S;\n        new_tv m t; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; $ S' A = $ R ($ S A);\n        $ Ra ta -> t' = $ R t; W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta; new_tv m S;\n        new_tv m t; n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> na \\<noteq> ma\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fast dest: new_scheme_list_le new_tv_subst_scheme_list new_tv_W new_tv_not_free_tv)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (case_tac [2] \"na: free_tv t - free_tv Sa\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* case na \\<notin> free_tv t - free_tv Sa *)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma;\n        na \\<in> free_tv t \\<longrightarrow> na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> na \\<in> free_tv t \\<and>\n                         na \\<notin> free_tv Sa \\<longrightarrow>\n                         Ra na = R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply fast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* case na : free_tv t - free_tv Sa *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if na = ma then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A)); na \\<in> free_tv ta;\n        na \\<noteq> ma;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] A1 = \"$ S A\" and r = \"$ R ($ S A)\" in trans [OF _ subst_comp_scheme_list])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        $ R ($ S A) = $ (\\<lambda>x. $ Ra (Sa x)) ($ S A)\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] eq_subst_scheme_list_eq_free)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> ?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na\n                         \\<in> free_tv ($ S A)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        R (?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na) =\n        $ Ra (Sa (?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na))\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> ?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na\n                         \\<in> free_tv ($ S A)\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        R (?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na) =\n        $ Ra (Sa (?n247 e1 e2 S' A t' n S t m R Sa ta ma Ra na))\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fast intro: free_tv_W free_tv_le_new_tv dest: new_tv_W)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(** LEVEL 73 **)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ta;\n        na \\<noteq> ma; na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        R na = $ Ra (Sa na)\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 2. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp add: free_tv_subst dom_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n t2 S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2, m2) := W e2 ($ S A) m;\n                                 U := mgu ($ S2 t) (t2 -> TVar m2);\n                                 Some\n                                  ($ U \\<circ> $ S2 \\<circ> S, U m2,\n                                   Suc m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm_simp) split: split_option_bind)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>y.\n                             mgu ($ Sa t) (ta -> TVar ma) = Some y) \\<and>\n                         (\\<forall>s.\n                             mgu ($ Sa t) (ta -> TVar ma) =\n                             Some s \\<longrightarrow>\n                             (\\<exists>R.\n                                 $ Ra ($ Sa ($ S A)) =\n                                 $ R ($ ($ s \\<circ> $ Sa \\<circ> S)\n A) \\<and>\n                                 t' = $ R (s ma)))\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply safe"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. mgu ($ Sa t) (ta -> TVar ma) = Some y\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        mgu ($ Sa t) (ta -> TVar ma) = Some s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule mgu_Some)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        \\<exists>U. mgu ($ Sa t) (ta -> TVar ma) = Some U\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. mgu ($ Sa t) (ta -> TVar ma) = Some y\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        mgu ($ Sa t) (ta -> TVar ma) = Some s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply fastforce"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        mgu ($ Sa t) (ta -> TVar ma) = Some s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(** LEVEL 78 *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        mgu ($ Sa t) (ta -> TVar ma) = Some s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule mgu_mg, assumption)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        \\<exists>Rb.\n           (\\<lambda>x.\n               if x = ma then t'\n               else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n           $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule exE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                            t' = $ R (s ma)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac x = \"Rb\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Rb ($ ($ s \\<circ> $ Sa \\<circ> S) A) \\<and>\n                         t' = $ Rb (s ma)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule conjI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Rb ($ ($ s \\<circ> $ Sa \\<circ> S) A)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> t' = $ Rb (s ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] x = \"ma\" in fun_cong)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Rb ($ ($ s \\<circ> $ Sa \\<circ> S) A)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (if ma = ma then t'\n         else if ma \\<in> free_tv t - free_tv Sa then R ma else Ra ma) =\n        ($ Rb \\<circ> s) ma\\<rbrakk>\n       \\<Longrightarrow> t' = $ Rb (s ma)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (if ma = ma then t'\n         else if ma \\<in> free_tv t - free_tv Sa then R ma else Ra ma) =\n        ($ Rb \\<circ> s) ma\\<rbrakk>\n       \\<Longrightarrow> t' = $ Rb (s ma)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Rb ($ ($ s \\<circ> $ Sa \\<circ> S) A)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp add: eq_sym_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Rb ($ ($ s \\<circ> $ Sa \\<circ> S) A)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm) add: subst_comp_scheme_list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ (\\<lambda>x. $ Ra ($ Sa (S x))) A =\n                         $ (\\<lambda>x. $ Rb ($ s ($ Sa (S x)))) A\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm) add: subst_comp_scheme_list [symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) = $ Rb ($ s ($ Sa ($ S A)))\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule_tac A1 = \"($ Sa ($ S A))\" in trans [OF _ subst_comp_scheme_list [symmetric]])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        $ R ($ S A) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ R ($ S A); $ Ra ta -> t' = $ R t;\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t) =\n        $ (\\<lambda>x.\n              if x = ma then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         (ta -> TVar ma);\n        (\\<lambda>x.\n            if x = ma then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x) =\n        $ Rb \\<circ> s\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ (\\<lambda>x. $ Rb (s x)) ($ Sa ($ S A))\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp add: o_def eq_sym_conv)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        Some (Sa, ta, ma) = W e2 ($ S A) m;\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x\n                 else Ra x)\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ (\\<lambda>x.\n                               if ma = x then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ($ Sa ($ S A))\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac s = \"Some _\" in sym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma)\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ (\\<lambda>x.\n                               if ma = x then t'\n                               else if x \\<in> free_tv t - free_tv Sa\n                                    then R x else Ra x)\n                          ($ Sa ($ S A))\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (rule eq_free_eq_subst_scheme_list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n.\n                            n \\<in> free_tv ($ Sa ($ S A)) \\<longrightarrow>\n                            Ra n =\n                            (if ma = n then t'\n                             else if n \\<in> free_tv t - free_tv Sa then R n\n                                  else Ra n)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        na \\<in> free_tv ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (subgoal_tac \"ma \\<noteq> na\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        na \\<in> free_tv ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (frule_tac [2] new_tv_W)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        na \\<in> free_tv ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> W (?e293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                             na)\n                          A n =\n                         Some\n                          (?S293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?t293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv (?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?S293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na) \\<and>\n        new_tv (?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?t293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma);\n        na \\<in> free_tv ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> W (?e293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                             na)\n                          A n =\n                         Some\n                          (?S293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?t293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv (?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?S293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na) \\<and>\n        new_tv (?m293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?t293 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m S \\<and> new_tv m t\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac [2] conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m S; new_tv m t\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] new_tv_subst_scheme_list)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv m\n                          (?A295 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t;\n        new_tv m\n         ($ S (?A295 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na))\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t\\<rbrakk>\n       \\<Longrightarrow> new_tv m\n                          (?A295 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t;\n        new_tv m\n         ($ S (?A295 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na))\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fast intro: new_scheme_list_le dest: sym [THEN W_var_geD])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (frule_tac [2] n = \"m\" in new_tv_W)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> W (?e301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                             na)\n                          ($ S A) m =\n                         Some\n                          (?S301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?t301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A);\n        new_tv (?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?S301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na) \\<and>\n        new_tv (?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?t301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A)\\<rbrakk>\n       \\<Longrightarrow> W (?e301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                             na)\n                          ($ S A) m =\n                         Some\n                          (?S301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?t301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na,\n                           ?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb\n                            na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A);\n        new_tv (?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?S301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na) \\<and>\n        new_tv (?m301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\n         (?t301 e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 4. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A);\n        new_tv ma Sa \\<and> new_tv ma ta\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac [2] conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        new_tv m t; new_tv m ($ S A); new_tv ma Sa; new_tv ma ta\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule_tac [2] free_tv_app_subst_scheme_list [THEN subsetD])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); new_tv m t; new_tv m ($ S A);\n        new_tv ma Sa; new_tv ma ta;\n        na \\<in> cod Sa \\<union> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> ma \\<noteq> na\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (tactic \\<open>\n    (fast_tac (put_claset (claset_of @{theory_context Fun}) @{context}\n      addDs [sym RS @{thm W_var_geD}, @{thm new_scheme_list_le}, @{thm codD},\n        @{thm new_tv_not_free_tv}]) 2)\\<close>)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (case_tac \"na: free_tv t - free_tv Sa\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* case na \\<notin> free_tv t - free_tv Sa *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<notin> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na;\n        na \\<in> free_tv t \\<longrightarrow> na \\<in> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> na \\<in> free_tv t \\<and>\n                         na \\<notin> free_tv Sa \\<longrightarrow>\n                         Ra na = R na\n 2. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 3. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply blast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* case na : free_tv t - free_tv Sa *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na; na \\<in> free_tv t - free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na =\n                         (if ma = na then t'\n                          else if na \\<in> free_tv t - free_tv Sa then R na\n                               else Ra na)\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); na \\<in> free_tv ($ Sa ($ S A));\n        ma \\<noteq> na;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (drule free_tv_app_subst_scheme_list [THEN subsetD])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra s Rb na.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ Ra ta -> t';\n        $ Ra ($ Sa ($ S A)) |- e2 :: $ Ra ta; W e1 A n = Some (S, t, m);\n        $ S' A = $ Ra ($ Sa ($ S A)); $ R t = $ Ra ta -> t';\n        $ R ($ S A) = $ Ra ($ Sa ($ S A));\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ta ->\n        t' =\n        $ (\\<lambda>x.\n              if ma = x then t'\n              else if x \\<in> free_tv t - free_tv Sa then R x else Ra x)\n         ($ Sa t);\n        (\\<lambda>x. $ Rb (s x)) =\n        (\\<lambda>x.\n            if ma = x then t'\n            else if x \\<in> free_tv t - free_tv Sa then R x else Ra x);\n        W e2 ($ S A) m = Some (Sa, ta, ma); ma \\<noteq> na;\n        na \\<in> free_tv t \\<and> na \\<notin> free_tv Sa;\n        na \\<in> cod Sa \\<union> free_tv ($ S A)\\<rbrakk>\n       \\<Longrightarrow> Ra na = R na\n 2. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (fastforce dest: codD trans [OF _ subst_comp_scheme_list]\n      eq_subst_scheme_list_eq_free \n      simp add: free_tv_subst dom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "(* case Let e1 e2 *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        $ S' A |- LET e1 e2 :: t'; new_tv n A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule has_type_casesE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e1 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        \\<forall>S' A t' n.\n           $ S' A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"S'\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        \\<forall>A t' n.\n           $ S' A |- e1 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        \\<forall>t' n.\n           $ S' A |- e1 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t' = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"t1\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        \\<forall>n.\n           $ S' A |- e1 :: t1 \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n               (\\<exists>R.\n                   $ S' A = $ R ($ S A) \\<and> t1 = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule_tac x = \"n\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        $ S' A |- e1 :: t1 \\<longrightarrow>\n        new_tv n A \\<longrightarrow>\n        (\\<exists>S t.\n            (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n            (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t1 = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        new_tv n A \\<longrightarrow>\n        (\\<exists>S t.\n            (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n            (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t1 = $ R t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (erule (1) notE impE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: t1;\n        gen ($ S' A) t1 # $ S' A |- e2 :: t';\n        \\<exists>S t.\n           (\\<exists>m. W e1 A n = Some (S, t, m)) \\<and>\n           (\\<exists>R. $ S' A = $ R ($ S A) \\<and> t1 = $ R t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n t1 S t m R.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>S t.\n                            (\\<exists>m.\n                                W (LET e1 e2) A n = Some (S, t, m)) \\<and>\n                            (\\<exists>R.\n                                $ S' A = $ R ($ S A) \\<and> t' = $ R t)", "apply (simp (no_asm_simp))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>\\<forall>S' A t' n.\n                   $ S' A |- e2 :: t' \\<longrightarrow>\n                   new_tv n A \\<longrightarrow>\n                   (\\<exists>S t.\n                       (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n                       (\\<exists>R.\n                           $ S' A = $ R ($ S A) \\<and> t' = $ R t));\n        new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (erule_tac x = \"R\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<forall>A t' n.\n           $ R A |- e2 :: t' \\<longrightarrow>\n           new_tv n A \\<longrightarrow>\n           (\\<exists>S t.\n               (\\<exists>m. W e2 A n = Some (S, t, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R A = $ Ra ($ S A) \\<and> t' = $ Ra t))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (erule_tac x = \"gen ($ S A) t # $ S A\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<forall>t' n.\n           $ R (gen ($ S A) t # $ S A) |- e2 :: t' \\<longrightarrow>\n           new_tv n (gen ($ S A) t # $ S A) \\<longrightarrow>\n           (\\<exists>Sa ta.\n               (\\<exists>m.\n                   W e2 (gen ($ S A) t # $ S A) n = Some (Sa, ta, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R (gen ($ S A) t # $ S A) =\n                   $ Ra ($ Sa (gen ($ S A) t # $ S A)) \\<and>\n                   t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (erule_tac x = \"t'\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<forall>n.\n           $ R (gen ($ S A) t # $ S A) |- e2 :: t' \\<longrightarrow>\n           new_tv n (gen ($ S A) t # $ S A) \\<longrightarrow>\n           (\\<exists>Sa ta.\n               (\\<exists>m.\n                   W e2 (gen ($ S A) t # $ S A) n = Some (Sa, ta, m)) \\<and>\n               (\\<exists>Ra.\n                   $ R (gen ($ S A) t # $ S A) =\n                   $ Ra ($ Sa (gen ($ S A) t # $ S A)) \\<and>\n                   t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (erule_tac x = \"m\" in allE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ S' A |- e1 :: $ R t;\n        gen ($ S' A) ($ R t) # $ S' A |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        $ R (gen ($ S A) t # $ S A) |- e2 :: t' \\<longrightarrow>\n        new_tv m (gen ($ S A) t # $ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t # $ S A) =\n                $ Ra ($ Sa (gen ($ S A) t # $ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        $ R (gen ($ S A) t) # $ R ($ S A) |- e2 :: t' \\<longrightarrow>\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (drule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> $ R (gen ($ S A) t) # $ R ($ S A) |- e2 :: t'\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (rule has_type_le_env)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> ?A384 e1 e2 S' A t' n S t m R |- e2 :: t'\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> ?A384 e1 e2 S' A t' n S t m R\n                         \\<le> $ R (gen ($ S A) t) # $ R ($ S A)\n 3. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> gen ($ R ($ S A)) ($ R t) # $ R ($ S A)\n                         \\<le> $ R (gen ($ S A) t) # $ R ($ S A)\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (simp (no_asm))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> gen ($ R ($ S A)) ($ R t) \\<le> $ R (gen ($ S A) t)\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (rule gen_bound_typ_instance)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A) \\<longrightarrow>\n        (\\<exists>Sa ta.\n            (\\<exists>ma.\n                W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n            (\\<exists>Ra.\n                $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n                $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n                t' = $ Ra ta))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (drule mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A)\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<exists>Sa ta.\n           (\\<exists>ma.\n               W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n           (\\<exists>Ra.\n               $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n               $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n               t' = $ Ra ta)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (frule new_tv_compatible_W)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> Some\n                          (?S391 e1 e2 S' A t' n S t m R,\n                           ?t391 e1 e2 S' A t' n S t m R,\n                           ?m391 e1 e2 S' A t' n S t m R) =\n                         W (?e391 e1 e2 S' A t' n S t m R) A n\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv (?m391 e1 e2 S' A t' n S t m R) A\\<rbrakk>\n       \\<Longrightarrow> new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A)\n 3. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<exists>Sa ta.\n           (\\<exists>ma.\n               W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n           (\\<exists>Ra.\n               $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n               $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n               t' = $ Ra ta)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (rule sym)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A)\\<rbrakk>\n       \\<Longrightarrow> W (?e391 e1 e2 S' A t' n S t m R) A n =\n                         Some\n                          (?S391 e1 e2 S' A t' n S t m R,\n                           ?t391 e1 e2 S' A t' n S t m R,\n                           ?m391 e1 e2 S' A t' n S t m R)\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        new_tv (?m391 e1 e2 S' A t' n S t m R) A\\<rbrakk>\n       \\<Longrightarrow> new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A)\n 3. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<exists>Sa ta.\n           (\\<exists>ma.\n               W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n           (\\<exists>Ra.\n               $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n               $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n               t' = $ Ra ta)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply assumption"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A); new_tv m A\\<rbrakk>\n       \\<Longrightarrow> new_tv m (gen ($ S A) t) \\<and> new_tv m ($ S A)\n 2. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<exists>Sa ta.\n           (\\<exists>ma.\n               W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n           (\\<exists>Ra.\n               $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n               $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n               t' = $ Ra ta)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply (fast dest: new_tv_compatible_gen new_tv_subst_scheme_list new_tv_W)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: t';\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        \\<exists>Sa ta.\n           (\\<exists>ma.\n               W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma)) \\<and>\n           (\\<exists>Ra.\n               $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t)) \\<and>\n               $ R ($ S A) = $ Ra ($ Sa ($ S A)) \\<and>\n               t' = $ Ra ta)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa ta.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, ta, ma)) \\<and>\n                            (\\<exists>Ra.\n                                $ R ($ S A) = $ Ra ($ Sa A) \\<and>\n                                t' = $ Ra ta)", "apply safe"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A t' n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ R ($ S A) |- e1 :: $ R t;\n        gen ($ R ($ S A)) ($ R t) # $ R ($ S A) |- e2 :: $ Ra ta;\n        W e1 A n = Some (S, t, m); $ S' A = $ R ($ S A);\n        W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma);\n        $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t));\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Sa tb.\n                            (\\<exists>ma.\n                                ((S2, t2,\n                                 m2) := W e2 (gen ($ S A) t # $ S A) m;\n                                 Some ($ S2 \\<circ> S, t2, m2)) =\n                                Some (Sa, tb, ma)) \\<and>\n                            (\\<exists>Rb.\n                                $ R ($ S A) = $ Rb ($ Sa A) \\<and>\n                                $ Ra ta = $ Rb tb)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        gen ($ Ra ($ Sa ($ S A))) ($ R t) # $ Ra ($ Sa ($ S A)) |-\n        e2 :: $ Ra ta;\n        W e1 A n = Some (S, t, m); $ S' A = $ Ra ($ Sa ($ S A));\n        W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma);\n        $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t));\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>R.\n                            $ Ra ($ Sa ($ S A)) =\n                            $ R ($ ($ Sa \\<circ> S) A) \\<and>\n                            $ Ra ta = $ R ta", "apply (rule_tac x = \"Ra\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>e1 e2 S' A n S t m R Sa ta ma Ra.\n       \\<lbrakk>new_tv n A; $ Ra ($ Sa ($ S A)) |- e1 :: $ R t;\n        gen ($ Ra ($ Sa ($ S A))) ($ R t) # $ Ra ($ Sa ($ S A)) |-\n        e2 :: $ Ra ta;\n        W e1 A n = Some (S, t, m); $ S' A = $ Ra ($ Sa ($ S A));\n        W e2 (gen ($ S A) t # $ S A) m = Some (Sa, ta, ma);\n        $ R (gen ($ S A) t) = $ Ra ($ Sa (gen ($ S A) t));\n        $ R ($ S A) = $ Ra ($ Sa ($ S A))\\<rbrakk>\n       \\<Longrightarrow> $ Ra ($ Sa ($ S A)) =\n                         $ Ra ($ ($ Sa \\<circ> S) A) \\<and>\n                         $ Ra ta = $ Ra ta", "apply (simp (no_asm) add: o_def subst_comp_scheme_list [symmetric])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem W_complete: \n  \"[] |- e :: t' \\<Longrightarrow> (\\<exists>S t. (\\<exists>m. W e [] n = Some(S,t,m)) \\<and>\n                     (\\<exists>R. t' = $ R t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [] |- e :: t' \\<Longrightarrow>\n    \\<exists>S t.\n       (\\<exists>m. W e [] n = Some (S, t, m)) \\<and>\n       (\\<exists>R. t' = $ R t)", "by (metis W_complete_lemma app_subst_Nil new_tv_Nil)"], ["", "end"]]}