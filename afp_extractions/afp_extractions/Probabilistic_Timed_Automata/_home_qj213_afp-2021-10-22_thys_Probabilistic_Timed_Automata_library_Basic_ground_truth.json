{"file_name": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Timed_Automata/library/Basic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Probabilistic_Timed_Automata", "problem_names": ["lemma infinite_subset[trans]: \"infinite A \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> infinite B\"", "lemma finite_subset[trans]: \"A \\<subseteq> B \\<Longrightarrow> finite B \\<Longrightarrow> finite A\"", "lemma infinite_psubset_coinduct[case_names infinite, consumes 1]:\n    assumes \"R A\"\n    assumes \"\\<And> A. R A \\<Longrightarrow> \\<exists> B \\<subset> A. R B\"\n    shows \"infinite A\"", "lemma GreatestI:\n    fixes k :: nat\n    assumes \"P k\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"P (GREATEST k. P k)\"", "lemma Greatest_le:\n    fixes k :: nat\n    assumes \"P k\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"k \\<le> (GREATEST k. P k)\"", "lemma Greatest_not_less:\n    fixes k :: nat\n    assumes \"k > (GREATEST k. P k)\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"\\<not> P k\"", "lemma finite_set_of_finite_maps':\n    assumes \"finite A\" \"finite B\"\n    shows \"finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}\"", "lemma alternate_Suc[simp]: \"alternate f g (Suc k) = (if even k then f else g) \\<circ> alternate f g k\"", "lemma alternate_antimono:\n    assumes \"\\<And> x. f x \\<le> x\" \"\\<And> x. g x \\<le> x\"\n    shows \"antimono (alternate f g)\""], "translations": [["", "lemma infinite_subset[trans]: \"infinite A \\<Longrightarrow> A \\<subseteq> B \\<Longrightarrow> infinite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> infinite B", "using infinite_super"], ["proof (prove)\nusing this:\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; A \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> infinite B", "by this"], ["", "lemma finite_subset[trans]: \"A \\<subseteq> B \\<Longrightarrow> finite B \\<Longrightarrow> finite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; finite B\\<rbrakk> \\<Longrightarrow> finite A", "using finite_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; finite B\\<rbrakk> \\<Longrightarrow> finite A", "by this"], ["", "declare infinite_coinduct[case_names infinite, coinduct pred: infinite]"], ["", "lemma infinite_psubset_coinduct[case_names infinite, consumes 1]:\n    assumes \"R A\"\n    assumes \"\\<And> A. R A \\<Longrightarrow> \\<exists> B \\<subset> A. R B\"\n    shows \"infinite A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> False", "assume \"finite A\""], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  finite A", "show \"False\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  R A\n  R ?A \\<Longrightarrow> \\<exists>B\\<subset>?A. R B\n\ngoal (1 subgoal):\n 1. False", "by (induct rule: finite_psubset_induct) (auto)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma GreatestI:\n    fixes k :: nat\n    assumes \"P k\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"P (GREATEST k. P k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (GREATEST k. P k)", "proof (rule GreatestI_nat)"], ["proof (state)\ngoal (2 subgoals):\n 1. P ?k\n 2. \\<And>y. P y \\<Longrightarrow> y \\<le> ?b", "show \"P k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k", "using assms(1)"], ["proof (prove)\nusing this:\n  P k\n\ngoal (1 subgoal):\n 1. P k", "by this"], ["proof (state)\nthis:\n  P k\n\ngoal (1 subgoal):\n 1. \\<And>y. P y \\<Longrightarrow> y \\<le> ?b", "show \"k \\<le> l\" if \"P k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> l", "using assms(2) that"], ["proof (prove)\nusing this:\n  P ?k \\<Longrightarrow> ?k \\<le> l\n  P k\n\ngoal (1 subgoal):\n 1. k \\<le> l", "by force"], ["proof (state)\nthis:\n  P ?k \\<Longrightarrow> ?k \\<le> l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Greatest_le:\n    fixes k :: nat\n    assumes \"P k\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"k \\<le> (GREATEST k. P k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> (GREATEST k. P k)", "proof (rule Greatest_le_nat)"], ["proof (state)\ngoal (2 subgoals):\n 1. P k\n 2. \\<And>y. P y \\<Longrightarrow> y \\<le> ?b", "show \"P k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P k", "using assms(1)"], ["proof (prove)\nusing this:\n  P k\n\ngoal (1 subgoal):\n 1. P k", "by this"], ["proof (state)\nthis:\n  P k\n\ngoal (1 subgoal):\n 1. \\<And>y. P y \\<Longrightarrow> y \\<le> ?b", "show \"k \\<le> l\" if \"P k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> l", "using assms(2) that"], ["proof (prove)\nusing this:\n  P ?k \\<Longrightarrow> ?k \\<le> l\n  P k\n\ngoal (1 subgoal):\n 1. k \\<le> l", "by force"], ["proof (state)\nthis:\n  P ?k \\<Longrightarrow> ?k \\<le> l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Greatest_not_less:\n    fixes k :: nat\n    assumes \"k > (GREATEST k. P k)\" \"\\<And> k. P k \\<Longrightarrow> k \\<le> l\"\n    shows \"\\<not> P k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. P k \\<Longrightarrow> False", "assume 1: \"P k\""], ["proof (state)\nthis:\n  P k\n\ngoal (1 subgoal):\n 1. P k \\<Longrightarrow> False", "have 2: \"k \\<le> (GREATEST k. P k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<le> (GREATEST k. P k)", "using Greatest_le 1 assms(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?P ?k; \\<And>k. ?P k \\<Longrightarrow> k \\<le> ?l\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> (GREATEST k. ?P k)\n  P k\n  P ?k \\<Longrightarrow> ?k \\<le> l\n\ngoal (1 subgoal):\n 1. k \\<le> (GREATEST k. P k)", "by this"], ["proof (state)\nthis:\n  k \\<le> (GREATEST k. P k)\n\ngoal (1 subgoal):\n 1. P k \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms(1) 2"], ["proof (prove)\nusing this:\n  (GREATEST k. P k) < k\n  k \\<le> (GREATEST k. P k)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_set_of_finite_maps':\n    assumes \"finite A\" \"finite B\"\n    shows \"finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "have \"{m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B} = (\\<Union> \\<A> \\<in> Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B} =\n    (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})", "by auto"], ["proof (state)\nthis:\n  {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B} =\n  (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})\n\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "also"], ["proof (state)\nthis:\n  {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B} =\n  (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})\n\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "have \"finite \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})", "using finite_subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; finite ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. finite\n     (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})", "by (auto intro: finite_set_of_finite_maps)"], ["proof (state)\nthis:\n  finite\n   (\\<Union>\\<A>\\<in>Pow A. {m. dom m = \\<A> \\<and> ran m \\<subseteq> B})\n\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "finally"], ["proof (chain)\npicking this:\n  finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}\n\ngoal (1 subgoal):\n 1. finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}", "by this"], ["proof (state)\nthis:\n  finite {m. dom m \\<subseteq> A \\<and> ran m \\<subseteq> B}\n\ngoal:\nNo subgoals!", "qed"], ["", "primrec alternate :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a) \\<Rightarrow> nat \\<Rightarrow> ('a \\<Rightarrow> 'a)\" where\n    \"alternate f g 0 = id\" | \"alternate f g (Suc k) = alternate g f k \\<circ> f\""], ["", "lemma alternate_Suc[simp]: \"alternate f g (Suc k) = (if even k then f else g) \\<circ> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc k) =\n    (if even k then f else g) \\<circ> alternate f g k", "proof (induct k arbitrary: f g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f g.\n       alternate f g (Suc 0) =\n       (if even 0 then f else g) \\<circ> alternate f g 0\n 2. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "case (0)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>f g.\n       alternate f g (Suc 0) =\n       (if even 0 then f else g) \\<circ> alternate f g 0\n 2. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc 0) =\n    (if even 0 then f else g) \\<circ> alternate f g 0", "by simp"], ["proof (state)\nthis:\n  alternate f g (Suc 0) = (if even 0 then f else g) \\<circ> alternate f g 0\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "case (Suc k)"], ["proof (state)\nthis:\n  alternate ?f ?g (Suc k) =\n  (if even k then ?f else ?g) \\<circ> alternate ?f ?g k\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f", "by auto"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "also"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) = alternate g f (Suc k) \\<circ> f\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"\\<dots> = (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate g f (Suc k) \\<circ> f =\n    (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)", "unfolding Suc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even k then g else f) \\<circ> alternate g f k \\<circ> f =\n    (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  alternate g f (Suc k) \\<circ> f =\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "also"], ["proof (state)\nthis:\n  alternate g f (Suc k) \\<circ> f =\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "have \"\\<dots> = (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if even k then g else f) \\<circ> (alternate g f k \\<circ> f) =\n    (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "by auto"], ["proof (state)\nthis:\n  (if even k then g else f) \\<circ> (alternate g f k \\<circ> f) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal (1 subgoal):\n 1. \\<And>k f g.\n       (\\<And>f g.\n           alternate f g (Suc k) =\n           (if even k then f else g) \\<circ>\n           alternate f g k) \\<Longrightarrow>\n       alternate f g (Suc (Suc k)) =\n       (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "finally"], ["proof (chain)\npicking this:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "show ?case"], ["proof (prove)\nusing this:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal (1 subgoal):\n 1. alternate f g (Suc (Suc k)) =\n    (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)", "by this"], ["proof (state)\nthis:\n  alternate f g (Suc (Suc k)) =\n  (if even (Suc k) then f else g) \\<circ> alternate f g (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "declare alternate.simps(2)[simp del]"], ["", "lemma alternate_antimono:\n    assumes \"\\<And> x. f x \\<le> x\" \"\\<And> x. g x \\<le> x\"\n    shows \"antimono (alternate f g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antimono (alternate f g)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "fix k l :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "assume 1: \"k \\<le> l\""], ["proof (state)\nthis:\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "obtain n where 2: \"l = k + n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n. l = k + n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using le_Suc_ex 1"], ["proof (prove)\nusing this:\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>n. l = k + n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  l = k + n\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "have 3: \"alternate f g (k + n) \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. alternate f g (k + 0) \\<le> alternate f g k\n 2. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "case (0)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. alternate f g (k + 0) \\<le> alternate f g k\n 2. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + 0) \\<le> alternate f g k", "by simp"], ["proof (state)\nthis:\n  alternate f g (k + 0) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "case (Suc n)"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "have \"alternate f g (k + Suc n) \\<le> alternate f g (k + n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g (k + n)", "using assms"], ["proof (prove)\nusing this:\n  f ?x \\<le> ?x\n  g ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g (k + n)", "by (auto intro: le_funI)"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g (k + n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "also"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g (k + n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "have \"\\<dots> \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "using Suc"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       alternate f g (k + n) \\<le> alternate f g k \\<Longrightarrow>\n       alternate f g (k + Suc n) \\<le> alternate f g k", "finally"], ["proof (chain)\npicking this:\n  alternate f g (k + Suc n) \\<le> alternate f g k", "show ?case"], ["proof (prove)\nusing this:\n  alternate f g (k + Suc n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + Suc n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g (k + Suc n) \\<le> alternate f g k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x \\<le> y \\<Longrightarrow> alternate f g y \\<le> alternate f g x", "show \"alternate f g l \\<le> alternate f g k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. alternate f g l \\<le> alternate f g k", "using 3"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g l \\<le> alternate f g k", "unfolding 2"], ["proof (prove)\nusing this:\n  alternate f g (k + n) \\<le> alternate f g k\n\ngoal (1 subgoal):\n 1. alternate f g (k + n) \\<le> alternate f g k", "by this"], ["proof (state)\nthis:\n  alternate f g l \\<le> alternate f g k\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}