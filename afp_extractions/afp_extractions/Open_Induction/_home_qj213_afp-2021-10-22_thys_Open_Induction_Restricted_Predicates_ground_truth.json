{"file_name": "/home/qj213/afp-2021-10-22/thys/Open_Induction/Restricted_Predicates.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Open_Induction", "problem_names": ["lemmas chain_on_def = pred_on.chain_def", "lemma chain_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> chain_on P C A \\<Longrightarrow> chain_on P C B\"", "lemma chain_on_imp_subset:\n  \"chain_on P C A \\<Longrightarrow> C \\<subseteq> A\"", "lemma subchain_on:\n  assumes \"C \\<subseteq> D\" and \"chain_on P D A\"\n  shows \"chain_on P C A\"", "lemma strict_reflclp_conv [simp]:\n  \"strict (P\\<^sup>=\\<^sup>=) = strict P\"", "lemma reflp_onI [Pure.intro]:\n  \"(\\<And>a. a \\<in> A \\<Longrightarrow> P a a) \\<Longrightarrow> reflp_on P A\"", "lemma transp_onI [Pure.intro]:\n  \"(\\<And>x y z. \\<lbrakk>x \\<in> A; y \\<in> A; z \\<in> A; P x y; P y z\\<rbrakk> \\<Longrightarrow> P x z) \\<Longrightarrow> transp_on P A\"", "lemma total_onI [Pure.intro]:\n  \"(\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y \\<or> P x y \\<or> P y x) \\<Longrightarrow> total_on P A\"", "lemma reflp_on_reflclp_simp [simp]:\n  assumes \"reflp_on P A\" and \"a \\<in> A\" and \"b \\<in> A\"\n  shows \"P\\<^sup>=\\<^sup>= a b = P a b\"", "lemma reflp_on_reflclp:\n  \"reflp_on (P\\<^sup>=\\<^sup>=) A\"", "lemma reflp_on_converse_simp [simp]:\n  \"reflp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> reflp_on P A\"", "lemma transp_on_converse:\n  \"transp_on P A \\<Longrightarrow> transp_on P\\<inverse>\\<inverse> A\"", "lemma transp_on_converse_simp [simp]:\n  \"transp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> transp_on P A\"", "lemma transp_on_reflclp:\n  \"transp_on P A \\<Longrightarrow> transp_on P\\<^sup>=\\<^sup>= A\"", "lemma transp_on_strict:\n  \"transp_on P A \\<Longrightarrow> transp_on (strict P) A\"", "lemma reflp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> reflp_on P B \\<Longrightarrow> reflp_on P A\"", "lemma transp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> transp_on P B \\<Longrightarrow> transp_on P A\"", "lemma inductive_onI [Pure.intro]:\n  assumes \"\\<And>Q x. \\<lbrakk>x \\<in> A; (\\<And>y. \\<lbrakk>y \\<in> A; \\<And>x. \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk> \\<Longrightarrow> Q y)\\<rbrakk> \\<Longrightarrow>  Q x\"\n  shows \"inductive_on P A\"", "lemma wfp_on_imp_minimal:\n  assumes \"wfp_on P A\"\n  shows \"\\<forall>Q x. x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow> (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\"", "lemma minimal_imp_inductive_on:\n  assumes \"\\<forall>Q x. x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow> (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\"\n  shows \"inductive_on P A\"", "lemmas wfp_on_imp_inductive_on =\n  wfp_on_imp_minimal [THEN minimal_imp_inductive_on]", "lemma inductive_on_induct [consumes 2, case_names less, induct pred: inductive_on]:\n  assumes \"inductive_on P A\" and \"x \\<in> A\"\n    and \"\\<And>y. \\<lbrakk> y \\<in> A; \\<And>x. \\<lbrakk> x \\<in> A; P x y \\<rbrakk> \\<Longrightarrow> Q x \\<rbrakk> \\<Longrightarrow> Q y\"\n  shows \"Q x\"", "lemma inductive_on_imp_wfp_on:\n  assumes \"inductive_on P A\"\n  shows \"wfp_on P A\"", "lemma antisymp_onI [Pure.intro]:\n  \"(\\<And>a b. \\<lbrakk>a \\<in> A; b \\<in> A; P a b; P b a\\<rbrakk> \\<Longrightarrow> a = b) \\<Longrightarrow> antisymp_on P A\"", "lemma antisymp_on_reflclp [simp]:\n  \"antisymp_on P\\<^sup>=\\<^sup>= A = antisymp_on P A\"", "lemma po_onI [Pure.intro]:\n  \"\\<lbrakk>irreflp_on P A; transp_on P A\\<rbrakk> \\<Longrightarrow> po_on P A\"", "lemma irreflp_onI [Pure.intro]:\n  \"(\\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a) \\<Longrightarrow> irreflp_on P A\"", "lemma irreflp_on_converse:\n  \"irreflp_on P A \\<Longrightarrow> irreflp_on P\\<inverse>\\<inverse> A\"", "lemma irreflp_on_converse_simp [simp]:\n  \"irreflp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> irreflp_on P A\"", "lemma po_on_converse_simp [simp]:\n  \"po_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> po_on P A\"", "lemma po_on_imp_qo_on:\n  \"po_on P A \\<Longrightarrow> qo_on (P\\<^sup>=\\<^sup>=) A\"", "lemma po_on_imp_irreflp_on:\n  \"po_on P A \\<Longrightarrow> irreflp_on P A\"", "lemma po_on_imp_transp_on:\n  \"po_on P A \\<Longrightarrow> transp_on P A\"", "lemma irreflp_on_subset:\n  assumes \"A \\<subseteq> B\" and \"irreflp_on P B\"\n  shows \"irreflp_on P A\"", "lemma po_on_subset:\n  assumes \"A \\<subseteq> B\" and \"po_on P B\"\n  shows \"po_on P A\"", "lemma transp_on_irreflp_on_imp_antisymp_on:\n  assumes \"transp_on P A\" and \"irreflp_on P A\"\n  shows \"antisymp_on (P\\<^sup>=\\<^sup>=) A\"", "lemma po_on_imp_antisymp_on:\n  assumes \"po_on P A\"\n  shows \"antisymp_on P A\"", "lemma strict_reflclp [simp]:\n  assumes \"x \\<in> A\" and \"y \\<in> A\"\n    and \"transp_on P A\" and \"irreflp_on P A\"\n  shows \"strict (P\\<^sup>=\\<^sup>=) x y = P x y\"", "lemma qo_on_imp_reflp_on:\n  \"qo_on P A \\<Longrightarrow> reflp_on P A\"", "lemma qo_on_imp_transp_on:\n  \"qo_on P A \\<Longrightarrow> transp_on P A\"", "lemma qo_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> qo_on P B \\<Longrightarrow> qo_on P A\"", "lemma qo_on_UNIV_conv:\n  \"qo_on P UNIV \\<longleftrightarrow> class.preorder P (strict P)\" (is \"?lhs = ?rhs\")", "lemma wfp_on_iff_inductive_on:\n  \"wfp_on P A \\<longleftrightarrow> inductive_on P A\"", "lemma wfp_on_iff_minimal:\n  \"wfp_on P A \\<longleftrightarrow> (\\<forall>Q x.\n     x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n     (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))\"", "lemma wfp_on_imp_has_min_elt:\n  assumes \"wfp_on P A\" and \"A \\<noteq> {}\"\n  shows \"\\<exists>x\\<in>A. \\<forall>y\\<in>A. \\<not> P y x\"", "lemma wfp_on_induct [consumes 2, case_names less, induct pred: wfp_on]:\n  assumes \"wfp_on P A\" and \"x \\<in> A\"\n    and \"\\<And>y. \\<lbrakk> y \\<in> A; \\<And>x. \\<lbrakk> x \\<in> A; P x y \\<rbrakk> \\<Longrightarrow> Q x \\<rbrakk> \\<Longrightarrow> Q y\"\n  shows \"Q x\"", "lemma wfp_on_UNIV [simp]:\n  \"wfp_on P UNIV \\<longleftrightarrow> wfP P\"", "lemma in_inv_image_betw [simp]:\n  \"inv_image_betw P f A B x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> f x \\<in> B \\<and> f y \\<in> B \\<and> P (f x) (f y)\"", "lemma in_measure_on [simp, code_unfold]:\n  \"measure_on f A x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> f x < f y\"", "lemma wfp_on_inv_image_betw [simp, intro!]:\n  assumes \"wfp_on P B\"\n  shows \"wfp_on (inv_image_betw P f A B) A\" (is \"wfp_on ?P A\")", "lemma wfp_less:\n  \"wfp_on (<) (UNIV :: nat set)\"", "lemma wfp_on_measure_on [iff]:\n  \"wfp_on (measure_on f A) A\"", "lemma wfp_on_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> (\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> P x y \\<Longrightarrow> Q x y) \\<Longrightarrow> wfp_on Q B \\<Longrightarrow> wfp_on P A\"", "lemma wfp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> wfp_on P B \\<Longrightarrow> wfp_on P A\"", "lemma restrict_to_iff [iff]:\n  \"restrict_to P A x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> P x y\"", "lemma wfp_on_restrict_to [simp]:\n  \"wfp_on (restrict_to P A) A = wfp_on P A\"", "lemma irreflp_on_strict [simp, intro]:\n  \"irreflp_on (strict P) A\"", "lemma transp_on_map':\n  assumes \"transp_on Q B\"\n    and \"g ` A \\<subseteq> B\"\n    and \"h ` A \\<subseteq> B\"\n    and \"\\<And>x. x \\<in> A \\<Longrightarrow> Q\\<^sup>=\\<^sup>= (h x) (g x)\"\n  shows \"transp_on (\\<lambda>x y. Q (g x) (h y)) A\"", "lemma transp_on_map:\n  assumes \"transp_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"transp_on (\\<lambda>x y. Q (h x) (h y)) A\"", "lemma irreflp_on_map:\n  assumes \"irreflp_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"irreflp_on (\\<lambda>x y. Q (h x) (h y)) A\"", "lemma po_on_map:\n  assumes \"po_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"po_on (\\<lambda>x y. Q (h x) (h y)) A\"", "lemma chain_transp_on_less:\n  assumes \"\\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\" and \"transp_on P A\" and \"i < j\"\n  shows \"P (f i) (f j)\"", "lemma wfp_on_imp_irreflp_on:\n  assumes \"wfp_on P A\"\n  shows \"irreflp_on P A\"", "lemma accessible_on_imp_mem:\n  assumes \"accessible_on P A a\"\n  shows \"a \\<in> A\"", "lemma accessible_on_induct [consumes 1, induct pred: accessible_on]:\n  assumes *: \"accessible_on P A a\"\n    and IH: \"\\<And>x. \\<lbrakk>accessible_on P A x; \\<And>y. \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> Q y\\<rbrakk> \\<Longrightarrow> Q x\"\n  shows \"Q a\"", "lemma accessible_on_downward:\n  \"accessible_on P A b \\<Longrightarrow> a \\<in> A \\<Longrightarrow> P a b \\<Longrightarrow> accessible_on P A a\"", "lemma accessible_on_restrict_to_downwards:\n  assumes \"(restrict_to P A)\\<^sup>+\\<^sup>+ a b\" and \"accessible_on P A b\"\n  shows \"accessible_on P A a\"", "lemma accessible_on_imp_inductive_on:\n  assumes \"\\<forall>x\\<in>A. accessible_on P A x\"\n  shows \"inductive_on P A\"", "lemmas accessible_on_imp_wfp_on = accessible_on_imp_inductive_on [THEN inductive_on_imp_wfp_on]", "lemma wfp_on_tranclp_imp_wfp_on:\n  assumes \"wfp_on (P\\<^sup>+\\<^sup>+) A\"\n  shows \"wfp_on P A\"", "lemma inductive_on_imp_accessible_on:\n  assumes \"inductive_on P A\"\n  shows \"\\<forall>x\\<in>A. accessible_on P A x\"", "lemma inductive_on_accessible_on_conv:\n  \"inductive_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. accessible_on P A x)\"", "lemmas wfp_on_imp_accessible_on =\n  wfp_on_imp_inductive_on [THEN inductive_on_imp_accessible_on]", "lemma wfp_on_accessible_on_iff:\n  \"wfp_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. accessible_on P A x)\"", "lemma accessible_on_tranclp:\n  assumes \"accessible_on P A x\"\n  shows \"accessible_on ((restrict_to P A)\\<^sup>+\\<^sup>+) A x\"\n    (is \"accessible_on ?P A x\")", "lemma wfp_on_restrict_to_tranclp:\n  assumes \"wfp_on P A\"\n  shows \"wfp_on ((restrict_to P A)\\<^sup>+\\<^sup>+) A\"", "lemma wfp_on_restrict_to_tranclp':\n  assumes \"wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A\"\n  shows \"wfp_on P A\"", "lemma wfp_on_restrict_to_tranclp_wfp_on_conv:\n  \"wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A \\<longleftrightarrow> wfp_on P A\"", "lemma tranclp_idemp [simp]:\n  \"(P\\<^sup>+\\<^sup>+)\\<^sup>+\\<^sup>+ = P\\<^sup>+\\<^sup>+\" (is \"?l = ?r\")", "lemma stepfun_imp_tranclp:\n  assumes \"f 0 = x\" and \"f (Suc n) = z\"\n    and \"\\<forall>i\\<le>n. P (f i) (f (Suc i))\"\n  shows \"P\\<^sup>+\\<^sup>+ x z\"", "lemma tranclp_imp_stepfun:\n  assumes \"P\\<^sup>+\\<^sup>+ x z\"\n  shows \"\\<exists>f n. f 0 = x \\<and> f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\"\n    (is \"\\<exists>f n. ?P x z f n\")", "lemma tranclp_stepfun_conv:\n  \"P\\<^sup>+\\<^sup>+ x y \\<longleftrightarrow> (\\<exists>f n. f 0 = x \\<and> f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i))))\"", "lemma qo_on_predecessor_subset_conv':\n  assumes \"qo_on P A\" and \"B \\<subseteq> A\" and \"C \\<subseteq> A\"\n  shows \"{x\\<in>A. \\<exists>y\\<in>B. P x y} \\<subseteq> {x\\<in>A. \\<exists>y\\<in>C. P x y} \\<longleftrightarrow> (\\<forall>x\\<in>B. \\<exists>y\\<in>C. P x y)\"", "lemma qo_on_predecessor_subset_conv:\n  \"\\<lbrakk>qo_on P A; x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> {z\\<in>A. P z x} \\<subseteq> {z\\<in>A. P z y} \\<longleftrightarrow> P x y\"", "lemma po_on_predecessors_eq_conv:\n  assumes \"po_on P A\" and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"{z\\<in>A. P\\<^sup>=\\<^sup>= z x} = {z\\<in>A. P\\<^sup>=\\<^sup>= z y} \\<longleftrightarrow> x = y\"", "lemma restrict_to_rtranclp:\n  assumes \"transp_on P A\"\n    and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"(restrict_to P A)\\<^sup>*\\<^sup>* x y \\<longleftrightarrow> P\\<^sup>=\\<^sup>= x y\"", "lemma reflp_on_restrict_to_rtranclp:\n  assumes \"reflp_on P A\" and \"transp_on P A\"\n    and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"(restrict_to P A)\\<^sup>*\\<^sup>* x y \\<longleftrightarrow> P x y\""], "translations": [["", "lemmas chain_on_def = pred_on.chain_def"], ["", "lemma chain_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> chain_on P C A \\<Longrightarrow> chain_on P C B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; chain_on P C A\\<rbrakk>\n    \\<Longrightarrow> chain_on P C B", "by (force simp: chain_on_def)"], ["", "lemma chain_on_imp_subset:\n  \"chain_on P C A \\<Longrightarrow> C \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_on P C A \\<Longrightarrow> C \\<subseteq> A", "by (simp add: chain_on_def)"], ["", "lemma subchain_on:\n  assumes \"C \\<subseteq> D\" and \"chain_on P D A\"\n  shows \"chain_on P C A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain_on P C A", "using assms"], ["proof (prove)\nusing this:\n  C \\<subseteq> D\n  chain_on P D A\n\ngoal (1 subgoal):\n 1. chain_on P C A", "by (auto simp: chain_on_def)"], ["", "definition restrict_to :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> ('a \\<Rightarrow> 'a \\<Rightarrow> bool)\" where\n  \"restrict_to P A = (\\<lambda>x y. x \\<in> A \\<and> y \\<in> A \\<and> P x y)\""], ["", "definition reflp_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"reflp_on P A \\<longleftrightarrow> (\\<forall>a\\<in>A. P a a)\""], ["", "definition transp_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"transp_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. \\<forall>y\\<in>A. \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z)\""], ["", "definition total_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"total_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. \\<forall>y\\<in>A. x = y \\<or> P x y \\<or> P y x)\""], ["", "abbreviation \"strict P \\<equiv> \\<lambda>x y. P x y \\<and> \\<not> (P y x)\""], ["", "abbreviation \"incomparable P \\<equiv> \\<lambda>x y. \\<not> P x y \\<and> \\<not> P y x\""], ["", "abbreviation \"antichain_on P f A \\<equiv> \\<forall>(i::nat) j. f i \\<in> A \\<and> (i < j \\<longrightarrow> incomparable P (f i) (f j))\""], ["", "lemma strict_reflclp_conv [simp]:\n  \"strict (P\\<^sup>=\\<^sup>=) = strict P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict P\\<^sup>=\\<^sup>= = strict P", "by auto"], ["", "lemma reflp_onI [Pure.intro]:\n  \"(\\<And>a. a \\<in> A \\<Longrightarrow> P a a) \\<Longrightarrow> reflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> P a a) \\<Longrightarrow>\n    reflp_on P A", "unfolding reflp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> P a a) \\<Longrightarrow>\n    \\<forall>a\\<in>A. P a a", "by blast"], ["", "lemma transp_onI [Pure.intro]:\n  \"(\\<And>x y z. \\<lbrakk>x \\<in> A; y \\<in> A; z \\<in> A; P x y; P y z\\<rbrakk> \\<Longrightarrow> P x z) \\<Longrightarrow> transp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        \\<lbrakk>x \\<in> A; y \\<in> A; z \\<in> A; P x y; P y z\\<rbrakk>\n        \\<Longrightarrow> P x z) \\<Longrightarrow>\n    transp_on P A", "unfolding transp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        \\<lbrakk>x \\<in> A; y \\<in> A; z \\<in> A; P x y; P y z\\<rbrakk>\n        \\<Longrightarrow> P x z) \\<Longrightarrow>\n    \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z", "by blast"], ["", "lemma total_onI [Pure.intro]:\n  \"(\\<And>x y. \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> x = y \\<or> P x y \\<or> P y x) \\<Longrightarrow> total_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n        \\<Longrightarrow> x = y \\<or> P x y \\<or> P y x) \\<Longrightarrow>\n    Restricted_Predicates.total_on P A", "unfolding total_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A\\<rbrakk>\n        \\<Longrightarrow> x = y \\<or> P x y \\<or> P y x) \\<Longrightarrow>\n    \\<forall>x\\<in>A. \\<forall>y\\<in>A. x = y \\<or> P x y \\<or> P y x", "by blast"], ["", "lemma reflp_on_reflclp_simp [simp]:\n  assumes \"reflp_on P A\" and \"a \\<in> A\" and \"b \\<in> A\"\n  shows \"P\\<^sup>=\\<^sup>= a b = P a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>=\\<^sup>= a b = P a b", "using assms"], ["proof (prove)\nusing this:\n  reflp_on P A\n  a \\<in> A\n  b \\<in> A\n\ngoal (1 subgoal):\n 1. P\\<^sup>=\\<^sup>= a b = P a b", "by (auto simp: reflp_on_def)"], ["", "lemma reflp_on_reflclp:\n  \"reflp_on (P\\<^sup>=\\<^sup>=) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp_on P\\<^sup>=\\<^sup>= A", "by (auto simp: reflp_on_def)"], ["", "lemma reflp_on_converse_simp [simp]:\n  \"reflp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> reflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. reflp_on P\\<inverse>\\<inverse> A = reflp_on P A", "by (auto simp: reflp_on_def)"], ["", "lemma transp_on_converse:\n  \"transp_on P A \\<Longrightarrow> transp_on P\\<inverse>\\<inverse> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on P A \\<Longrightarrow> transp_on P\\<inverse>\\<inverse> A", "unfolding transp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             P x y \\<and> P y z \\<longrightarrow> P x z \\<Longrightarrow>\n    \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             P\\<inverse>\\<inverse> x y \\<and>\n             P\\<inverse>\\<inverse> y z \\<longrightarrow>\n             P\\<inverse>\\<inverse> x z", "by blast"], ["", "lemma transp_on_converse_simp [simp]:\n  \"transp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> transp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on P\\<inverse>\\<inverse> A = transp_on P A", "unfolding transp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x\\<in>A.\n        \\<forall>y\\<in>A.\n           \\<forall>z\\<in>A.\n              P\\<inverse>\\<inverse> x y \\<and>\n              P\\<inverse>\\<inverse> y z \\<longrightarrow>\n              P\\<inverse>\\<inverse> x z) =\n    (\\<forall>x\\<in>A.\n        \\<forall>y\\<in>A.\n           \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z)", "by blast"], ["", "lemma transp_on_reflclp:\n  \"transp_on P A \\<Longrightarrow> transp_on P\\<^sup>=\\<^sup>= A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on P A \\<Longrightarrow> transp_on P\\<^sup>=\\<^sup>= A", "unfolding transp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             P x y \\<and> P y z \\<longrightarrow> P x z \\<Longrightarrow>\n    \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             P\\<^sup>=\\<^sup>= x y \\<and>\n             P\\<^sup>=\\<^sup>= y z \\<longrightarrow>\n             P\\<^sup>=\\<^sup>= x z", "by blast"], ["", "lemma transp_on_strict:\n  \"transp_on P A \\<Longrightarrow> transp_on (strict P) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on P A \\<Longrightarrow> transp_on (strict P) A", "unfolding transp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             P x y \\<and> P y z \\<longrightarrow> P x z \\<Longrightarrow>\n    \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             strict P x y \\<and> strict P y z \\<longrightarrow> strict P x z", "by blast"], ["", "lemma reflp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> reflp_on P B \\<Longrightarrow> reflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; reflp_on P B\\<rbrakk>\n    \\<Longrightarrow> reflp_on P A", "by (auto simp: reflp_on_def)"], ["", "lemma transp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> transp_on P B \\<Longrightarrow> transp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; transp_on P B\\<rbrakk>\n    \\<Longrightarrow> transp_on P A", "by (auto simp: transp_on_def)"], ["", "definition wfp_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\"\nwhere\n  \"wfp_on P A \\<longleftrightarrow> \\<not> (\\<exists>f. \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\""], ["", "definition inductive_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"inductive_on P A \\<longleftrightarrow> (\\<forall>Q. (\\<forall>y\\<in>A. (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow> Q y) \\<longrightarrow> (\\<forall>x\\<in>A. Q x))\""], ["", "lemma inductive_onI [Pure.intro]:\n  assumes \"\\<And>Q x. \\<lbrakk>x \\<in> A; (\\<And>y. \\<lbrakk>y \\<in> A; \\<And>x. \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk> \\<Longrightarrow> Q y)\\<rbrakk> \\<Longrightarrow>  Q x\"\n  shows \"inductive_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inductive_on P A", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A;\n   \\<And>y.\n      \\<lbrakk>y \\<in> A;\n       \\<And>x.\n          \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> ?Q x\\<rbrakk>\n      \\<Longrightarrow> ?Q y\\<rbrakk>\n  \\<Longrightarrow> ?Q ?x\n\ngoal (1 subgoal):\n 1. inductive_on P A", "unfolding inductive_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A;\n   \\<And>y.\n      \\<lbrakk>y \\<in> A;\n       \\<And>x.\n          \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> ?Q x\\<rbrakk>\n      \\<Longrightarrow> ?Q y\\<rbrakk>\n  \\<Longrightarrow> ?Q ?x\n\ngoal (1 subgoal):\n 1. \\<forall>Q.\n       (\\<forall>y\\<in>A.\n           (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow>\n           Q y) \\<longrightarrow>\n       Ball A Q", "by metis"], ["", "text \\<open>\n  If @{term P} is well-founded on @{term A} then every non-empty subset @{term Q} of @{term A} has a\n  minimal element @{term z} w.r.t. @{term P}, i.e., all elements that are @{term P}-smaller than\n  @{term z} are not in @{term Q}.\n\\<close>"], ["", "lemma wfp_on_imp_minimal:\n  assumes \"wfp_on P A\"\n  shows \"\\<forall>Q x. x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow> (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>Q x.\n       x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n       (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>Q x.\n             x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n             (\\<exists>z\\<in>Q.\n                 \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>Q x.\n             x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n             (\\<exists>z\\<in>Q.\n                 \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))", "obtain Q x where *: \"x \\<in> Q\" \"Q \\<subseteq> A\"\n    and \"\\<forall>z. \\<exists>y. z \\<in> Q \\<longrightarrow> P y z \\<and> y \\<in> Q\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>Q x.\n             x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n             (\\<exists>z\\<in>Q.\n                 \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))\n\ngoal (1 subgoal):\n 1. (\\<And>x Q.\n        \\<lbrakk>x \\<in> Q; Q \\<subseteq> A;\n         \\<forall>z.\n            \\<exists>y.\n               z \\<in> Q \\<longrightarrow> P y z \\<and> y \\<in> Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  x \\<in> Q\n  Q \\<subseteq> A\n  \\<forall>z. \\<exists>y. z \\<in> Q \\<longrightarrow> P y z \\<and> y \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "from choice [OF this(3)]"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     \\<forall>x. x \\<in> Q \\<longrightarrow> P (f x) x \\<and> f x \\<in> Q", "obtain f\n    where **: \"\\<forall>x\\<in>Q. P (f x) x \\<and> f x \\<in> Q\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>x. x \\<in> Q \\<longrightarrow> P (f x) x \\<and> f x \\<in> Q\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<forall>x\\<in>Q. P (f x) x \\<and> f x \\<in> Q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>Q. P (f x) x \\<and> f x \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "let ?S = \"\\<lambda>i. (f ^^ i) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "have ***: \"\\<forall>i. ?S i \\<in> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. (f ^^ i) x \\<in> Q", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (f ^^ i) x \\<in> Q", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. (f ^^ i) x \\<in> Q", "show \"?S i \\<in> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f ^^ i) x \\<in> Q", "by (induct i) (auto simp: * **)"], ["proof (state)\nthis:\n  (f ^^ i) x \\<in> Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. (f ^^ i) x \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. (f ^^ i) x \\<in> Q", "have \"\\<forall>i. ?S i \\<in> A\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f ^^ i) x \\<in> Q\n\ngoal (1 subgoal):\n 1. \\<forall>i. (f ^^ i) x \\<in> A", "using *"], ["proof (prove)\nusing this:\n  \\<forall>i. (f ^^ i) x \\<in> Q\n  x \\<in> Q\n  Q \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<forall>i. (f ^^ i) x \\<in> A", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. (f ^^ i) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<forall>i. (f ^^ i) x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "have \"\\<forall>i. P (?S (Suc i)) (?S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i. P ((f ^^ Suc i) x) ((f ^^ i) x)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. P ((f ^^ Suc i) x) ((f ^^ i) x)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. P ((f ^^ Suc i) x) ((f ^^ i) x)", "show \"P (?S (Suc i)) (?S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P ((f ^^ Suc i) x) ((f ^^ i) x)", "by (induct i) (auto simp: * ** ***)"], ["proof (state)\nthis:\n  P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i. P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>i. (f ^^ i) x \\<in> A\n  \\<forall>i. P ((f ^^ Suc i) x) ((f ^^ i) x)", "have \"\\<forall>i. ?S i \\<in> A \\<and> P (?S (Suc i)) (?S i)\""], ["proof (prove)\nusing this:\n  \\<forall>i. (f ^^ i) x \\<in> A\n  \\<forall>i. P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal (1 subgoal):\n 1. \\<forall>i. (f ^^ i) x \\<in> A \\<and> P ((f ^^ Suc i) x) ((f ^^ i) x)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. (f ^^ i) x \\<in> A \\<and> P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>Q x.\n               x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n               (\\<exists>z\\<in>Q.\n                   \\<forall>y.\n                      P y z \\<longrightarrow>\n                      y \\<notin> Q)) \\<Longrightarrow>\n    False", "with assms(1)"], ["proof (chain)\npicking this:\n  wfp_on P A\n  \\<forall>i. (f ^^ i) x \\<in> A \\<and> P ((f ^^ Suc i) x) ((f ^^ i) x)", "show False"], ["proof (prove)\nusing this:\n  wfp_on P A\n  \\<forall>i. (f ^^ i) x \\<in> A \\<and> P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal (1 subgoal):\n 1. False", "unfolding wfp_on_def"], ["proof (prove)\nusing this:\n  \\<nexists>f. \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  \\<forall>i. (f ^^ i) x \\<in> A \\<and> P ((f ^^ Suc i) x) ((f ^^ i) x)\n\ngoal (1 subgoal):\n 1. False", "by fast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma minimal_imp_inductive_on:\n  assumes \"\\<forall>Q x. x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow> (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\"\n  shows \"inductive_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inductive_on P A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> inductive_on P A\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> inductive_on P A", "obtain Q x\n    where *: \"\\<forall>y\\<in>A. (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow> Q y\"\n    and **: \"x \\<in> A\" \"\\<not> Q x\""], ["proof (prove)\nusing this:\n  \\<not> inductive_on P A\n\ngoal (1 subgoal):\n 1. (\\<And>Q x.\n        \\<lbrakk>\\<forall>y\\<in>A.\n                    (\\<forall>x\\<in>A.\n                        P x y \\<longrightarrow> Q x) \\<longrightarrow>\n                    Q y;\n         x \\<in> A; \\<not> Q x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: inductive_on_def)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>A.\n     (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow> Q y\n  x \\<in> A\n  \\<not> Q x\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "let ?Q = \"{x\\<in>A. \\<not> Q x}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "from **"], ["proof (chain)\npicking this:\n  x \\<in> A\n  \\<not> Q x", "have \"x \\<in> ?Q\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<not> Q x\n\ngoal (1 subgoal):\n 1. x \\<in> {x \\<in> A. \\<not> Q x}", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  x \\<in> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "have \"?Q \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x \\<in> A. \\<not> Q x} \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  {x \\<in> A. \\<not> Q x} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> {x \\<in> A. \\<not> Q x}\n  {x \\<in> A. \\<not> Q x} \\<subseteq> A", "obtain z where \"z \\<in> ?Q\"\n    and min: \"\\<forall>y. P y z \\<longrightarrow> y \\<notin> ?Q\""], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A. \\<not> Q x}\n  {x \\<in> A. \\<not> Q x} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> {x \\<in> A. \\<not> Q x};\n         \\<forall>y.\n            P y z \\<longrightarrow>\n            y \\<notin> {x \\<in> A. \\<not> Q x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms [THEN spec [of _ ?Q], THEN spec [of _ x]]"], ["proof (prove)\nusing this:\n  x \\<in> {x \\<in> A. \\<not> Q x}\n  {x \\<in> A. \\<not> Q x} \\<subseteq> A\n  x \\<in> {x \\<in> A. \\<not> Q x} \\<and>\n  {x \\<in> A. \\<not> Q x} \\<subseteq> A \\<longrightarrow>\n  (\\<exists>z\\<in>{x \\<in> A. \\<not> Q x}.\n      \\<forall>y.\n         P y z \\<longrightarrow> y \\<notin> {x \\<in> A. \\<not> Q x})\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<in> {x \\<in> A. \\<not> Q x};\n         \\<forall>y.\n            P y z \\<longrightarrow>\n            y \\<notin> {x \\<in> A. \\<not> Q x}\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z \\<in> {x \\<in> A. \\<not> Q x}\n  \\<forall>y. P y z \\<longrightarrow> y \\<notin> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "from \\<open>z \\<in> ?Q\\<close>"], ["proof (chain)\npicking this:\n  z \\<in> {x \\<in> A. \\<not> Q x}", "have \"z \\<in> A\" and \"\\<not> Q z\""], ["proof (prove)\nusing this:\n  z \\<in> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. z \\<in> A &&& \\<not> Q z", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n  \\<not> Q z\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  \\<forall>y\\<in>A.\n     (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow> Q y\n  z \\<in> A\n  \\<not> Q z", "obtain y where \"y \\<in> A\" and \"P y z\" and \"\\<not> Q y\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>A.\n     (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow> Q y\n  z \\<in> A\n  \\<not> Q z\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> A; P y z; \\<not> Q y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> A\n  P y z\n  \\<not> Q y\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> A\n  P y z\n  \\<not> Q y", "have \"y \\<in> ?Q\""], ["proof (prove)\nusing this:\n  y \\<in> A\n  P y z\n  \\<not> Q y\n\ngoal (1 subgoal):\n 1. y \\<in> {x \\<in> A. \\<not> Q x}", "by auto"], ["proof (state)\nthis:\n  y \\<in> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. \\<not> inductive_on P A \\<Longrightarrow> False", "with \\<open>P y z\\<close> and min"], ["proof (chain)\npicking this:\n  P y z\n  \\<forall>y. P y z \\<longrightarrow> y \\<notin> {x \\<in> A. \\<not> Q x}\n  y \\<in> {x \\<in> A. \\<not> Q x}", "show False"], ["proof (prove)\nusing this:\n  P y z\n  \\<forall>y. P y z \\<longrightarrow> y \\<notin> {x \\<in> A. \\<not> Q x}\n  y \\<in> {x \\<in> A. \\<not> Q x}\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas wfp_on_imp_inductive_on =\n  wfp_on_imp_minimal [THEN minimal_imp_inductive_on]"], ["", "lemma inductive_on_induct [consumes 2, case_names less, induct pred: inductive_on]:\n  assumes \"inductive_on P A\" and \"x \\<in> A\"\n    and \"\\<And>y. \\<lbrakk> y \\<in> A; \\<And>x. \\<lbrakk> x \\<in> A; P x y \\<rbrakk> \\<Longrightarrow> Q x \\<rbrakk> \\<Longrightarrow> Q y\"\n  shows \"Q x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q x", "using assms"], ["proof (prove)\nusing this:\n  inductive_on P A\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. Q x", "unfolding inductive_on_def"], ["proof (prove)\nusing this:\n  \\<forall>Q.\n     (\\<forall>y\\<in>A.\n         (\\<forall>x\\<in>A. P x y \\<longrightarrow> Q x) \\<longrightarrow>\n         Q y) \\<longrightarrow>\n     Ball A Q\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. Q x", "by metis"], ["", "lemma inductive_on_imp_wfp_on:\n  assumes \"inductive_on P A\"\n  shows \"wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wfp_on P A", "let ?Q = \"\\<lambda>x. \\<not> (\\<exists>f. f 0 = x \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. wfp_on P A", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. wfp_on P A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. wfp_on P A", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. wfp_on P A", "with assms"], ["proof (chain)\npicking this:\n  inductive_on P A\n  x \\<in> A", "have \"?Q x\""], ["proof (prove)\nusing this:\n  inductive_on P A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       f 0 = x \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))", "proof (induct rule: inductive_on_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n           \\<Longrightarrow> \\<nexists>f.\n                                f 0 = x \\<and>\n                                (\\<forall>i.\n                                    f i \\<in> A \\<and>\n                                    P (f (Suc i)) (f i))\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>f.\n                            f 0 = y \\<and>\n                            (\\<forall>i.\n                                f i \\<in> A \\<and> P (f (Suc i)) (f i))", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n           \\<Longrightarrow> \\<nexists>f.\n                                f 0 = x \\<and>\n                                (\\<forall>i.\n                                    f i \\<in> A \\<and>\n                                    P (f (Suc i)) (f i))\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>f.\n                            f 0 = y \\<and>\n                            (\\<forall>i.\n                                f i \\<in> A \\<and> P (f (Suc i)) (f i))", "assume \"y \\<in> A\" and IH: \"\\<And>x. x \\<in> A \\<Longrightarrow> P x y \\<Longrightarrow> ?Q x\""], ["proof (state)\nthis:\n  y \\<in> A\n  \\<lbrakk>?x \\<in> A; P ?x y\\<rbrakk>\n  \\<Longrightarrow> \\<nexists>f.\n                       f 0 = ?x \\<and>\n                       (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A;\n        \\<And>x.\n           \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n           \\<Longrightarrow> \\<nexists>f.\n                                f 0 = x \\<and>\n                                (\\<forall>i.\n                                    f i \\<in> A \\<and>\n                                    P (f (Suc i)) (f i))\\<rbrakk>\n       \\<Longrightarrow> \\<nexists>f.\n                            f 0 = y \\<and>\n                            (\\<forall>i.\n                                f i \\<in> A \\<and> P (f (Suc i)) (f i))", "show \"?Q y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       f 0 = y \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 = y \\<and>\n               (\\<forall>i.\n                   f i \\<in> A \\<and>\n                   P (f (Suc i)) (f i))) \\<Longrightarrow>\n    False", "assume \"\\<not> ?Q y\""], ["proof (state)\nthis:\n  \\<not> (\\<nexists>f.\n             f 0 = y \\<and>\n             (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 = y \\<and>\n               (\\<forall>i.\n                   f i \\<in> A \\<and>\n                   P (f (Suc i)) (f i))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<nexists>f.\n             f 0 = y \\<and>\n             (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)))", "obtain f where *: \"f 0 = y\"\n          \"\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\""], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>f.\n             f 0 = y \\<and>\n             (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)))\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f 0 = y;\n         \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 = y \\<and>\n               (\\<forall>i.\n                   f i \\<in> A \\<and>\n                   P (f (Suc i)) (f i))) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)", "have \"P (f (Suc 0)) (f 0)\" and \"f (Suc 0) \\<in> A\""], ["proof (prove)\nusing this:\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n\ngoal (1 subgoal):\n 1. P (f (Suc 0)) (f 0) &&& f (Suc 0) \\<in> A", "by auto"], ["proof (state)\nthis:\n  P (f (Suc 0)) (f 0)\n  f (Suc 0) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 = y \\<and>\n               (\\<forall>i.\n                   f i \\<in> A \\<and>\n                   P (f (Suc i)) (f i))) \\<Longrightarrow>\n    False", "with IH and *"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x \\<in> A; P ?x y\\<rbrakk>\n  \\<Longrightarrow> \\<nexists>f.\n                       f 0 = ?x \\<and>\n                       (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  P (f (Suc 0)) (f 0)\n  f (Suc 0) \\<in> A", "have \"?Q (f (Suc 0))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; P ?x y\\<rbrakk>\n  \\<Longrightarrow> \\<nexists>f.\n                       f 0 = ?x \\<and>\n                       (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  P (f (Suc 0)) (f 0)\n  f (Suc 0) \\<in> A\n\ngoal (1 subgoal):\n 1. \\<nexists>fa.\n       fa 0 = f (Suc 0) \\<and>\n       (\\<forall>i. fa i \\<in> A \\<and> P (fa (Suc i)) (fa i))", "by auto"], ["proof (state)\nthis:\n  \\<nexists>fa.\n     fa 0 = f (Suc 0) \\<and>\n     (\\<forall>i. fa i \\<in> A \\<and> P (fa (Suc i)) (fa i))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>f.\n               f 0 = y \\<and>\n               (\\<forall>i.\n                   f i \\<in> A \\<and>\n                   P (f (Suc i)) (f i))) \\<Longrightarrow>\n    False", "with *"], ["proof (chain)\npicking this:\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  \\<nexists>fa.\n     fa 0 = f (Suc 0) \\<and>\n     (\\<forall>i. fa i \\<in> A \\<and> P (fa (Suc i)) (fa i))", "show False"], ["proof (prove)\nusing this:\n  f 0 = y\n  \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)\n  \\<nexists>fa.\n     fa 0 = f (Suc 0) \\<and>\n     (\\<forall>i. fa i \\<in> A \\<and> P (fa (Suc i)) (fa i))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>f.\n     f 0 = y \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>f.\n     f 0 = x \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. wfp_on P A", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> A \\<Longrightarrow>\n  \\<nexists>f.\n     f 0 = ?x2 \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. wfp_on P A", "then"], ["proof (chain)\npicking this:\n  ?x2 \\<in> A \\<Longrightarrow>\n  \\<nexists>f.\n     f 0 = ?x2 \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> A \\<Longrightarrow>\n  \\<nexists>f.\n     f 0 = ?x2 \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. wfp_on P A", "unfolding wfp_on_def"], ["proof (prove)\nusing this:\n  ?x2 \\<in> A \\<Longrightarrow>\n  \\<nexists>f.\n     f 0 = ?x2 \\<and> (\\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i))\n\ngoal (1 subgoal):\n 1. \\<nexists>f. \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)", "by blast"], ["proof (state)\nthis:\n  wfp_on P A\n\ngoal:\nNo subgoals!", "qed"], ["", "definition antisymp_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"antisymp_on P A \\<longleftrightarrow> (\\<forall>a\\<in>A. \\<forall>b\\<in>A. P a b \\<and> P b a \\<longrightarrow> a = b)\""], ["", "lemma antisymp_onI [Pure.intro]:\n  \"(\\<And>a b. \\<lbrakk>a \\<in> A; b \\<in> A; P a b; P b a\\<rbrakk> \\<Longrightarrow> a = b) \\<Longrightarrow> antisymp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> A; P a b; P b a\\<rbrakk>\n        \\<Longrightarrow> a = b) \\<Longrightarrow>\n    antisymp_on P A", "by (auto simp: antisymp_on_def)"], ["", "lemma antisymp_on_reflclp [simp]:\n  \"antisymp_on P\\<^sup>=\\<^sup>= A = antisymp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antisymp_on P\\<^sup>=\\<^sup>= A = antisymp_on P A", "by (auto simp: antisymp_on_def)"], ["", "definition qo_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"qo_on P A \\<longleftrightarrow> reflp_on P A \\<and> transp_on P A\""], ["", "definition irreflp_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"irreflp_on P A \\<longleftrightarrow> (\\<forall>a\\<in>A. \\<not> P a a)\""], ["", "definition po_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> bool\" where\n  \"po_on P A \\<longleftrightarrow> (irreflp_on P A \\<and> transp_on P A)\""], ["", "lemma po_onI [Pure.intro]:\n  \"\\<lbrakk>irreflp_on P A; transp_on P A\\<rbrakk> \\<Longrightarrow> po_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>irreflp_on P A; transp_on P A\\<rbrakk>\n    \\<Longrightarrow> po_on P A", "by (auto simp: po_on_def)"], ["", "lemma irreflp_onI [Pure.intro]:\n  \"(\\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a) \\<Longrightarrow> irreflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a) \\<Longrightarrow>\n    irreflp_on P A", "unfolding irreflp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a) \\<Longrightarrow>\n    \\<forall>a\\<in>A. \\<not> P a a", "by blast"], ["", "lemma irreflp_on_converse:\n  \"irreflp_on P A \\<Longrightarrow> irreflp_on P\\<inverse>\\<inverse> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on P A \\<Longrightarrow> irreflp_on P\\<inverse>\\<inverse> A", "unfolding irreflp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A. \\<not> P a a \\<Longrightarrow>\n    \\<forall>a\\<in>A. \\<not> P\\<inverse>\\<inverse> a a", "by blast"], ["", "lemma irreflp_on_converse_simp [simp]:\n  \"irreflp_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> irreflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on P\\<inverse>\\<inverse> A = irreflp_on P A", "by (auto simp: irreflp_on_def)"], ["", "lemma po_on_converse_simp [simp]:\n  \"po_on P\\<inverse>\\<inverse> A \\<longleftrightarrow> po_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on P\\<inverse>\\<inverse> A = po_on P A", "by (simp add: po_on_def)"], ["", "lemma po_on_imp_qo_on:\n  \"po_on P A \\<Longrightarrow> qo_on (P\\<^sup>=\\<^sup>=) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on P A \\<Longrightarrow> qo_on P\\<^sup>=\\<^sup>= A", "unfolding po_on_def qo_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on P A \\<and> transp_on P A \\<Longrightarrow>\n    reflp_on P\\<^sup>=\\<^sup>= A \\<and> transp_on P\\<^sup>=\\<^sup>= A", "by (metis reflp_on_reflclp transp_on_reflclp)"], ["", "lemma po_on_imp_irreflp_on:\n  \"po_on P A \\<Longrightarrow> irreflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on P A \\<Longrightarrow> irreflp_on P A", "by (auto simp: po_on_def)"], ["", "lemma po_on_imp_transp_on:\n  \"po_on P A \\<Longrightarrow> transp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on P A \\<Longrightarrow> transp_on P A", "by (auto simp: po_on_def)"], ["", "lemma irreflp_on_subset:\n  assumes \"A \\<subseteq> B\" and \"irreflp_on P B\"\n  shows \"irreflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on P A", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> B\n  irreflp_on P B\n\ngoal (1 subgoal):\n 1. irreflp_on P A", "by (auto simp: irreflp_on_def)"], ["", "lemma po_on_subset:\n  assumes \"A \\<subseteq> B\" and \"po_on P B\"\n  shows \"po_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on P A", "using transp_on_subset and irreflp_on_subset and assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; transp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> transp_on ?P ?A\n  \\<lbrakk>?A \\<subseteq> ?B; irreflp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> irreflp_on ?P ?A\n  A \\<subseteq> B\n  po_on P B\n\ngoal (1 subgoal):\n 1. po_on P A", "unfolding po_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; transp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> transp_on ?P ?A\n  \\<lbrakk>?A \\<subseteq> ?B; irreflp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> irreflp_on ?P ?A\n  A \\<subseteq> B\n  irreflp_on P B \\<and> transp_on P B\n\ngoal (1 subgoal):\n 1. irreflp_on P A \\<and> transp_on P A", "by blast"], ["", "lemma transp_on_irreflp_on_imp_antisymp_on:\n  assumes \"transp_on P A\" and \"irreflp_on P A\"\n  shows \"antisymp_on (P\\<^sup>=\\<^sup>=) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antisymp_on P\\<^sup>=\\<^sup>= A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> A; b \\<in> A; P\\<^sup>=\\<^sup>= a b;\n        P\\<^sup>=\\<^sup>= b a\\<rbrakk>\n       \\<Longrightarrow> a = b", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> A; b \\<in> A; P\\<^sup>=\\<^sup>= a b;\n        P\\<^sup>=\\<^sup>= b a\\<rbrakk>\n       \\<Longrightarrow> a = b", "assume \"a \\<in> A\"\n    and \"b \\<in> A\" and \"P\\<^sup>=\\<^sup>= a b\" and \"P\\<^sup>=\\<^sup>= b a\""], ["proof (state)\nthis:\n  a \\<in> A\n  b \\<in> A\n  P\\<^sup>=\\<^sup>= a b\n  P\\<^sup>=\\<^sup>= b a\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> A; b \\<in> A; P\\<^sup>=\\<^sup>= a b;\n        P\\<^sup>=\\<^sup>= b a\\<rbrakk>\n       \\<Longrightarrow> a = b", "show \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "assume \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>P\\<^sup>=\\<^sup>= a b\\<close> and \\<open>P\\<^sup>=\\<^sup>= b a\\<close>"], ["proof (chain)\npicking this:\n  P\\<^sup>=\\<^sup>= a b\n  P\\<^sup>=\\<^sup>= b a\n  a \\<noteq> b", "have \"P a b\" and \"P b a\""], ["proof (prove)\nusing this:\n  P\\<^sup>=\\<^sup>= a b\n  P\\<^sup>=\\<^sup>= b a\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. P a b &&& P b a", "by auto"], ["proof (state)\nthis:\n  P a b\n  P b a\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>transp_on P A\\<close> and \\<open>a \\<in> A\\<close> and \\<open>b \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  transp_on P A\n  a \\<in> A\n  b \\<in> A\n  P a b\n  P b a", "have \"P a a\""], ["proof (prove)\nusing this:\n  transp_on P A\n  a \\<in> A\n  b \\<in> A\n  P a b\n  P b a\n\ngoal (1 subgoal):\n 1. P a a", "unfolding transp_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A.\n     \\<forall>y\\<in>A.\n        \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z\n  a \\<in> A\n  b \\<in> A\n  P a b\n  P b a\n\ngoal (1 subgoal):\n 1. P a a", "by blast"], ["proof (state)\nthis:\n  P a a\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> False", "with \\<open>irreflp_on P A\\<close> and \\<open>a \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  irreflp_on P A\n  a \\<in> A\n  P a a", "show False"], ["proof (prove)\nusing this:\n  irreflp_on P A\n  a \\<in> A\n  P a a\n\ngoal (1 subgoal):\n 1. False", "unfolding irreflp_on_def"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>A. \\<not> P a a\n  a \\<in> A\n  P a a\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a = b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma po_on_imp_antisymp_on:\n  assumes \"po_on P A\"\n  shows \"antisymp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. antisymp_on P A", "using transp_on_irreflp_on_imp_antisymp_on [of P A] and assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>transp_on P A; irreflp_on P A\\<rbrakk>\n  \\<Longrightarrow> antisymp_on P\\<^sup>=\\<^sup>= A\n  po_on P A\n\ngoal (1 subgoal):\n 1. antisymp_on P A", "by (auto simp: po_on_def)"], ["", "lemma strict_reflclp [simp]:\n  assumes \"x \\<in> A\" and \"y \\<in> A\"\n    and \"transp_on P A\" and \"irreflp_on P A\"\n  shows \"strict (P\\<^sup>=\\<^sup>=) x y = P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict P\\<^sup>=\\<^sup>= x y = P x y", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  transp_on P A\n  irreflp_on P A\n\ngoal (1 subgoal):\n 1. strict P\\<^sup>=\\<^sup>= x y = P x y", "unfolding transp_on_def irreflp_on_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  \\<forall>x\\<in>A.\n     \\<forall>y\\<in>A.\n        \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z\n  \\<forall>a\\<in>A. \\<not> P a a\n\ngoal (1 subgoal):\n 1. strict P\\<^sup>=\\<^sup>= x y = P x y", "by blast"], ["", "lemma qo_on_imp_reflp_on:\n  \"qo_on P A \\<Longrightarrow> reflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qo_on P A \\<Longrightarrow> reflp_on P A", "by (auto simp: qo_on_def)"], ["", "lemma qo_on_imp_transp_on:\n  \"qo_on P A \\<Longrightarrow> transp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. qo_on P A \\<Longrightarrow> transp_on P A", "by (auto simp: qo_on_def)"], ["", "lemma qo_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> qo_on P B \\<Longrightarrow> qo_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; qo_on P B\\<rbrakk> \\<Longrightarrow> qo_on P A", "unfolding qo_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; reflp_on P B \\<and> transp_on P B\\<rbrakk>\n    \\<Longrightarrow> reflp_on P A \\<and> transp_on P A", "using reflp_on_subset\n    and transp_on_subset"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B; reflp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> reflp_on ?P ?A\n  \\<lbrakk>?A \\<subseteq> ?B; transp_on ?P ?B\\<rbrakk>\n  \\<Longrightarrow> transp_on ?P ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; reflp_on P B \\<and> transp_on P B\\<rbrakk>\n    \\<Longrightarrow> reflp_on P A \\<and> transp_on P A", "by blast"], ["", "text \\<open>\n  Quasi-orders are instances of the @{class preorder} class.\n\\<close>"], ["", "lemma qo_on_UNIV_conv:\n  \"qo_on P UNIV \\<longleftrightarrow> class.preorder P (strict P)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. qo_on P UNIV = class.preorder P (strict P)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. qo_on P UNIV \\<Longrightarrow> class.preorder P (strict P)\n 2. class.preorder P (strict P) \\<Longrightarrow> qo_on P UNIV", "assume \"?lhs\""], ["proof (state)\nthis:\n  qo_on P UNIV\n\ngoal (2 subgoals):\n 1. qo_on P UNIV \\<Longrightarrow> class.preorder P (strict P)\n 2. class.preorder P (strict P) \\<Longrightarrow> qo_on P UNIV", "then"], ["proof (chain)\npicking this:\n  qo_on P UNIV", "show \"?rhs\""], ["proof (prove)\nusing this:\n  qo_on P UNIV\n\ngoal (1 subgoal):\n 1. class.preorder P (strict P)", "unfolding qo_on_def class.preorder_def"], ["proof (prove)\nusing this:\n  reflp_on P UNIV \\<and> transp_on P UNIV\n\ngoal (1 subgoal):\n 1. (\\<forall>x y. strict P x y = strict P x y) \\<and>\n    (\\<forall>x. P x x) \\<and>\n    (\\<forall>x y z. P x y \\<longrightarrow> P y z \\<longrightarrow> P x z)", "using qo_on_imp_reflp_on [of P UNIV]\n      and qo_on_imp_transp_on [of P UNIV]"], ["proof (prove)\nusing this:\n  reflp_on P UNIV \\<and> transp_on P UNIV\n  qo_on P UNIV \\<Longrightarrow> reflp_on P UNIV\n  qo_on P UNIV \\<Longrightarrow> transp_on P UNIV\n\ngoal (1 subgoal):\n 1. (\\<forall>x y. strict P x y = strict P x y) \\<and>\n    (\\<forall>x. P x x) \\<and>\n    (\\<forall>x y z. P x y \\<longrightarrow> P y z \\<longrightarrow> P x z)", "by (auto simp: reflp_on_def) (unfold transp_on_def, blast)"], ["proof (state)\nthis:\n  class.preorder P (strict P)\n\ngoal (1 subgoal):\n 1. class.preorder P (strict P) \\<Longrightarrow> qo_on P UNIV", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. class.preorder P (strict P) \\<Longrightarrow> qo_on P UNIV", "assume \"?rhs\""], ["proof (state)\nthis:\n  class.preorder P (strict P)\n\ngoal (1 subgoal):\n 1. class.preorder P (strict P) \\<Longrightarrow> qo_on P UNIV", "then"], ["proof (chain)\npicking this:\n  class.preorder P (strict P)", "show \"?lhs\""], ["proof (prove)\nusing this:\n  class.preorder P (strict P)\n\ngoal (1 subgoal):\n 1. qo_on P UNIV", "unfolding class.preorder_def"], ["proof (prove)\nusing this:\n  (\\<forall>x y. strict P x y = strict P x y) \\<and>\n  (\\<forall>x. P x x) \\<and>\n  (\\<forall>x y z. P x y \\<longrightarrow> P y z \\<longrightarrow> P x z)\n\ngoal (1 subgoal):\n 1. qo_on P UNIV", "by (auto simp: qo_on_def reflp_on_def transp_on_def)"], ["proof (state)\nthis:\n  qo_on P UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wfp_on_iff_inductive_on:\n  \"wfp_on P A \\<longleftrightarrow> inductive_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A = inductive_on P A", "by (blast intro: inductive_on_imp_wfp_on wfp_on_imp_inductive_on)"], ["", "lemma wfp_on_iff_minimal:\n  \"wfp_on P A \\<longleftrightarrow> (\\<forall>Q x.\n     x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n     (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A =\n    (\\<forall>Q x.\n        x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n        (\\<exists>z\\<in>Q.\n            \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))", "using wfp_on_imp_minimal [of P A]\n    and minimal_imp_inductive_on [of A P]\n    and inductive_on_imp_wfp_on [of P A]"], ["proof (prove)\nusing this:\n  wfp_on P A \\<Longrightarrow>\n  \\<forall>Q x.\n     x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n     (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\n  \\<forall>Q x.\n     x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n     (\\<exists>z\\<in>Q.\n         \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q) \\<Longrightarrow>\n  inductive_on P A\n  inductive_on P A \\<Longrightarrow> wfp_on P A\n\ngoal (1 subgoal):\n 1. wfp_on P A =\n    (\\<forall>Q x.\n        x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n        (\\<exists>z\\<in>Q.\n            \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q))", "by blast"], ["", "text \\<open>\n  Every non-empty well-founded set @{term A} has a minimal element, i.e., an element that is not\n  greater than any other element.\n\\<close>"], ["", "lemma wfp_on_imp_has_min_elt:\n  assumes \"wfp_on P A\" and \"A \\<noteq> {}\"\n  shows \"\\<exists>x\\<in>A. \\<forall>y\\<in>A. \\<not> P y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>A. \\<forall>y\\<in>A. \\<not> P y x", "using assms"], ["proof (prove)\nusing this:\n  wfp_on P A\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>A. \\<forall>y\\<in>A. \\<not> P y x", "unfolding wfp_on_iff_minimal"], ["proof (prove)\nusing this:\n  \\<forall>Q x.\n     x \\<in> Q \\<and> Q \\<subseteq> A \\<longrightarrow>\n     (\\<exists>z\\<in>Q. \\<forall>y. P y z \\<longrightarrow> y \\<notin> Q)\n  A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>A. \\<forall>y\\<in>A. \\<not> P y x", "by force"], ["", "lemma wfp_on_induct [consumes 2, case_names less, induct pred: wfp_on]:\n  assumes \"wfp_on P A\" and \"x \\<in> A\"\n    and \"\\<And>y. \\<lbrakk> y \\<in> A; \\<And>x. \\<lbrakk> x \\<in> A; P x y \\<rbrakk> \\<Longrightarrow> Q x \\<rbrakk> \\<Longrightarrow> Q y\"\n  shows \"Q x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q x", "using assms and inductive_on_induct [of P A x]"], ["proof (prove)\nusing this:\n  wfp_on P A\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n  \\<lbrakk>inductive_on P A; x \\<in> A;\n   \\<And>y.\n      \\<lbrakk>y \\<in> A;\n       \\<And>x.\n          \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> ?Q x\\<rbrakk>\n      \\<Longrightarrow> ?Q y\\<rbrakk>\n  \\<Longrightarrow> ?Q x\n\ngoal (1 subgoal):\n 1. Q x", "unfolding wfp_on_iff_inductive_on"], ["proof (prove)\nusing this:\n  inductive_on P A\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n  \\<lbrakk>inductive_on P A; x \\<in> A;\n   \\<And>y.\n      \\<lbrakk>y \\<in> A;\n       \\<And>x.\n          \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> ?Q x\\<rbrakk>\n      \\<Longrightarrow> ?Q y\\<rbrakk>\n  \\<Longrightarrow> ?Q x\n\ngoal (1 subgoal):\n 1. Q x", "by blast"], ["", "lemma wfp_on_UNIV [simp]:\n  \"wfp_on P UNIV \\<longleftrightarrow> wfP P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P UNIV = wfP P", "unfolding wfp_on_iff_inductive_on inductive_on_def wfP_def wf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>Q.\n        (\\<forall>y\\<in>UNIV.\n            (\\<forall>x\\<in>UNIV.\n                P x y \\<longrightarrow> Q x) \\<longrightarrow>\n            Q y) \\<longrightarrow>\n        Ball UNIV Q) =\n    (\\<forall>Pa.\n        (\\<forall>x.\n            (\\<forall>y.\n                (y, x) \\<in> {(x, y). P x y} \\<longrightarrow>\n                Pa y) \\<longrightarrow>\n            Pa x) \\<longrightarrow>\n        All Pa)", "by force"], ["", "subsection \\<open>Measures on Sets (Instead of Full Types)\\<close>"], ["", "definition\n  inv_image_betw ::\n    \"('b \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> ('a \\<Rightarrow> 'b) \\<Rightarrow> 'a set \\<Rightarrow> 'b set \\<Rightarrow> ('a \\<Rightarrow> 'a \\<Rightarrow> bool)\"\nwhere\n  \"inv_image_betw P f A B = (\\<lambda>x y. x \\<in> A \\<and> y \\<in> A \\<and> f x \\<in> B \\<and> f y \\<in> B \\<and> P (f x) (f y))\""], ["", "definition\n  measure_on :: \"('a \\<Rightarrow> nat) \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> bool\"\nwhere\n  \"measure_on f A = inv_image_betw (<) f A UNIV\""], ["", "lemma in_inv_image_betw [simp]:\n  \"inv_image_betw P f A B x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> f x \\<in> B \\<and> f y \\<in> B \\<and> P (f x) (f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_image_betw P f A B x y =\n    (x \\<in> A \\<and>\n     y \\<in> A \\<and> f x \\<in> B \\<and> f y \\<in> B \\<and> P (f x) (f y))", "by (auto simp: inv_image_betw_def)"], ["", "lemma in_measure_on [simp, code_unfold]:\n  \"measure_on f A x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> f x < f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_on f A x y = (x \\<in> A \\<and> y \\<in> A \\<and> f x < f y)", "by (simp add: measure_on_def)"], ["", "lemma wfp_on_inv_image_betw [simp, intro!]:\n  assumes \"wfp_on P B\"\n  shows \"wfp_on (inv_image_betw P f A B) A\" (is \"wfp_on ?P A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (inv_image_betw P f A B) A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> wfp_on (inv_image_betw P f A B) A \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> wfp_on (inv_image_betw P f A B) A\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (inv_image_betw P f A B) A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> wfp_on (inv_image_betw P f A B) A", "obtain g where \"\\<forall>i. g i \\<in> A \\<and> ?P (g (Suc i)) (g i)\""], ["proof (prove)\nusing this:\n  \\<not> wfp_on (inv_image_betw P f A B) A\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<forall>i.\n           g i \\<in> A \\<and>\n           inv_image_betw P f A B (g (Suc i)) (g i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: wfp_on_def)"], ["proof (state)\nthis:\n  \\<forall>i. g i \\<in> A \\<and> inv_image_betw P f A B (g (Suc i)) (g i)\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on (inv_image_betw P f A B) A \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  wfp_on P B\n  \\<forall>i. g i \\<in> A \\<and> inv_image_betw P f A B (g (Suc i)) (g i)", "show False"], ["proof (prove)\nusing this:\n  wfp_on P B\n  \\<forall>i. g i \\<in> A \\<and> inv_image_betw P f A B (g (Suc i)) (g i)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: wfp_on_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wfp_less:\n  \"wfp_on (<) (UNIV :: nat set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (<) UNIV", "using wf_less"], ["proof (prove)\nusing this:\n  wf {(x, y). x < y}\n\ngoal (1 subgoal):\n 1. wfp_on (<) UNIV", "by (auto simp: wfP_def)"], ["", "lemma wfp_on_measure_on [iff]:\n  \"wfp_on (measure_on f A) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (measure_on f A) A", "unfolding measure_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (inv_image_betw (<) f A UNIV) A", "by (rule wfp_less [THEN wfp_on_inv_image_betw])"], ["", "lemma wfp_on_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> (\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> A \\<Longrightarrow> P x y \\<Longrightarrow> Q x y) \\<Longrightarrow> wfp_on Q B \\<Longrightarrow> wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B;\n     \\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A; P x y\\<rbrakk>\n        \\<Longrightarrow> Q x y;\n     wfp_on Q B\\<rbrakk>\n    \\<Longrightarrow> wfp_on P A", "unfolding wfp_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B;\n     \\<And>x y.\n        \\<lbrakk>x \\<in> A; y \\<in> A; P x y\\<rbrakk>\n        \\<Longrightarrow> Q x y;\n     \\<nexists>f.\n        \\<forall>i. f i \\<in> B \\<and> Q (f (Suc i)) (f i)\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>f.\n                         \\<forall>i. f i \\<in> A \\<and> P (f (Suc i)) (f i)", "by (metis subsetD)"], ["", "lemma wfp_on_subset:\n  \"A \\<subseteq> B \\<Longrightarrow> wfp_on P B \\<Longrightarrow> wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; wfp_on P B\\<rbrakk>\n    \\<Longrightarrow> wfp_on P A", "using wfp_on_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> ?B;\n   \\<And>x y.\n      \\<lbrakk>x \\<in> ?A; y \\<in> ?A; ?P x y\\<rbrakk>\n      \\<Longrightarrow> ?Q x y;\n   wfp_on ?Q ?B\\<rbrakk>\n  \\<Longrightarrow> wfp_on ?P ?A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> B; wfp_on P B\\<rbrakk>\n    \\<Longrightarrow> wfp_on P A", "by blast"], ["", "lemma restrict_to_iff [iff]:\n  \"restrict_to P A x y \\<longleftrightarrow> x \\<in> A \\<and> y \\<in> A \\<and> P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict_to P A x y = (x \\<in> A \\<and> y \\<in> A \\<and> P x y)", "by (simp add: restrict_to_def)"], ["", "lemma wfp_on_restrict_to [simp]:\n  \"wfp_on (restrict_to P A) A = wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (restrict_to P A) A = wfp_on P A", "by (auto simp: wfp_on_def)"], ["", "lemma irreflp_on_strict [simp, intro]:\n  \"irreflp_on (strict P) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on (strict P) A", "by (auto simp: irreflp_on_def)"], ["", "lemma transp_on_map':\n  assumes \"transp_on Q B\"\n    and \"g ` A \\<subseteq> B\"\n    and \"h ` A \\<subseteq> B\"\n    and \"\\<And>x. x \\<in> A \\<Longrightarrow> Q\\<^sup>=\\<^sup>= (h x) (g x)\"\n  shows \"transp_on (\\<lambda>x y. Q (g x) (h y)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on (\\<lambda>x y. Q (g x) (h y)) A", "using assms"], ["proof (prove)\nusing this:\n  transp_on Q B\n  g ` A \\<subseteq> B\n  h ` A \\<subseteq> B\n  ?x \\<in> A \\<Longrightarrow> Q\\<^sup>=\\<^sup>= (h ?x) (g ?x)\n\ngoal (1 subgoal):\n 1. transp_on (\\<lambda>x y. Q (g x) (h y)) A", "unfolding transp_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>B.\n     \\<forall>y\\<in>B.\n        \\<forall>z\\<in>B. Q x y \\<and> Q y z \\<longrightarrow> Q x z\n  g ` A \\<subseteq> B\n  h ` A \\<subseteq> B\n  ?x \\<in> A \\<Longrightarrow> Q\\<^sup>=\\<^sup>= (h ?x) (g ?x)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A.\n       \\<forall>y\\<in>A.\n          \\<forall>z\\<in>A.\n             Q (g x) (h y) \\<and> Q (g y) (h z) \\<longrightarrow>\n             Q (g x) (h z)", "by auto (metis imageI subsetD)"], ["", "lemma transp_on_map:\n  assumes \"transp_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"transp_on (\\<lambda>x y. Q (h x) (h y)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. transp_on (\\<lambda>x y. Q (h x) (h y)) A", "using transp_on_map' [of Q B h A h, simplified, OF assms]"], ["proof (prove)\nusing this:\n  transp_on (\\<lambda>x y. Q (h x) (h y)) A\n\ngoal (1 subgoal):\n 1. transp_on (\\<lambda>x y. Q (h x) (h y)) A", "by blast"], ["", "lemma irreflp_on_map:\n  assumes \"irreflp_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"irreflp_on (\\<lambda>x y. Q (h x) (h y)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on (\\<lambda>x y. Q (h x) (h y)) A", "using assms"], ["proof (prove)\nusing this:\n  irreflp_on Q B\n  h ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. irreflp_on (\\<lambda>x y. Q (h x) (h y)) A", "unfolding irreflp_on_def"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>B. \\<not> Q a a\n  h ` A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A. \\<not> Q (h a) (h a)", "by auto"], ["", "lemma po_on_map:\n  assumes \"po_on Q B\"\n    and \"h ` A \\<subseteq> B\"\n  shows \"po_on (\\<lambda>x y. Q (h x) (h y)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. po_on (\\<lambda>x y. Q (h x) (h y)) A", "using assms and transp_on_map and irreflp_on_map"], ["proof (prove)\nusing this:\n  po_on Q B\n  h ` A \\<subseteq> B\n  \\<lbrakk>transp_on ?Q ?B; ?h ` ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> transp_on (\\<lambda>x y. ?Q (?h x) (?h y)) ?A\n  \\<lbrakk>irreflp_on ?Q ?B; ?h ` ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> irreflp_on (\\<lambda>x y. ?Q (?h x) (?h y)) ?A\n\ngoal (1 subgoal):\n 1. po_on (\\<lambda>x y. Q (h x) (h y)) A", "unfolding po_on_def"], ["proof (prove)\nusing this:\n  irreflp_on Q B \\<and> transp_on Q B\n  h ` A \\<subseteq> B\n  \\<lbrakk>transp_on ?Q ?B; ?h ` ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> transp_on (\\<lambda>x y. ?Q (?h x) (?h y)) ?A\n  \\<lbrakk>irreflp_on ?Q ?B; ?h ` ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> irreflp_on (\\<lambda>x y. ?Q (?h x) (?h y)) ?A\n\ngoal (1 subgoal):\n 1. irreflp_on (\\<lambda>x y. Q (h x) (h y)) A \\<and>\n    transp_on (\\<lambda>x y. Q (h x) (h y)) A", "by auto"], ["", "lemma chain_transp_on_less:\n  assumes \"\\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\" and \"transp_on P A\" and \"i < j\"\n  shows \"P (f i) (f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (f i) (f j)", "using \\<open>i < j\\<close>"], ["proof (prove)\nusing this:\n  i < j\n\ngoal (1 subgoal):\n 1. P (f i) (f j)", "proof (induct j)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow> P (f i) (f 0)\n 2. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> P (f i) (f j); i < Suc j\\<rbrakk>\n       \\<Longrightarrow> P (f i) (f (Suc j))", "case 0"], ["proof (state)\nthis:\n  i < 0\n\ngoal (2 subgoals):\n 1. i < 0 \\<Longrightarrow> P (f i) (f 0)\n 2. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> P (f i) (f j); i < Suc j\\<rbrakk>\n       \\<Longrightarrow> P (f i) (f (Suc j))", "then"], ["proof (chain)\npicking this:\n  i < 0", "show ?case"], ["proof (prove)\nusing this:\n  i < 0\n\ngoal (1 subgoal):\n 1. P (f i) (f 0)", "by simp"], ["proof (state)\nthis:\n  P (f i) (f 0)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> P (f i) (f j); i < Suc j\\<rbrakk>\n       \\<Longrightarrow> P (f i) (f (Suc j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> P (f i) (f j); i < Suc j\\<rbrakk>\n       \\<Longrightarrow> P (f i) (f (Suc j))", "case (Suc j)"], ["proof (state)\nthis:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i < j \\<Longrightarrow> P (f i) (f j); i < Suc j\\<rbrakk>\n       \\<Longrightarrow> P (f i) (f (Suc j))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "proof (cases \"i = j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow> P (f i) (f (Suc j))\n 2. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "case True"], ["proof (state)\nthis:\n  i = j\n\ngoal (2 subgoals):\n 1. i = j \\<Longrightarrow> P (f i) (f (Suc j))\n 2. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "with Suc"], ["proof (chain)\npicking this:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n  i = j", "show ?thesis"], ["proof (prove)\nusing this:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n  i = j\n\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "using assms(1)"], ["proof (prove)\nusing this:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n  i = j\n  \\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "by simp"], ["proof (state)\nthis:\n  P (f i) (f (Suc j))\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "case False"], ["proof (state)\nthis:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "with Suc"], ["proof (chain)\npicking this:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n  i \\<noteq> j", "have \"P (f i) (f j)\""], ["proof (prove)\nusing this:\n  i < j \\<Longrightarrow> P (f i) (f j)\n  i < Suc j\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. P (f i) (f j)", "by force"], ["proof (state)\nthis:\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "moreover"], ["proof (state)\nthis:\n  P (f i) (f j)\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "from assms"], ["proof (chain)\npicking this:\n  \\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\n  transp_on P A\n  i < j", "have \"P (f j) (f (Suc j))\""], ["proof (prove)\nusing this:\n  \\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\n  transp_on P A\n  i < j\n\ngoal (1 subgoal):\n 1. P (f j) (f (Suc j))", "by auto"], ["proof (state)\nthis:\n  P (f j) (f (Suc j))\n\ngoal (1 subgoal):\n 1. i \\<noteq> j \\<Longrightarrow> P (f i) (f (Suc j))", "ultimately"], ["proof (chain)\npicking this:\n  P (f i) (f j)\n  P (f j) (f (Suc j))", "show ?thesis"], ["proof (prove)\nusing this:\n  P (f i) (f j)\n  P (f j) (f (Suc j))\n\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "using assms(1, 2)"], ["proof (prove)\nusing this:\n  P (f i) (f j)\n  P (f j) (f (Suc j))\n  \\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\n  transp_on P A\n\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "unfolding transp_on_def"], ["proof (prove)\nusing this:\n  P (f i) (f j)\n  P (f j) (f (Suc j))\n  \\<forall>i. f i \\<in> A \\<and> P (f i) (f (Suc i))\n  \\<forall>x\\<in>A.\n     \\<forall>y\\<in>A.\n        \\<forall>z\\<in>A. P x y \\<and> P y z \\<longrightarrow> P x z\n\ngoal (1 subgoal):\n 1. P (f i) (f (Suc j))", "by blast"], ["proof (state)\nthis:\n  P (f i) (f (Suc j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (f i) (f (Suc j))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wfp_on_imp_irreflp_on:\n  assumes \"wfp_on P A\"\n  shows \"irreflp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. irreflp_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> A \\<Longrightarrow> \\<not> P a a", "show \"\\<not> P x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P x x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. P x x \\<Longrightarrow> False", "let ?f = \"\\<lambda>_. x\""], ["proof (state)\ngoal (1 subgoal):\n 1. P x x \\<Longrightarrow> False", "assume \"P x x\""], ["proof (state)\nthis:\n  P x x\n\ngoal (1 subgoal):\n 1. P x x \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  P x x", "have \"\\<forall>i. P (?f (Suc i)) (?f i)\""], ["proof (prove)\nusing this:\n  P x x\n\ngoal (1 subgoal):\n 1. \\<forall>i. P x x", "by blast"], ["proof (state)\nthis:\n  \\<forall>i. P x x\n\ngoal (1 subgoal):\n 1. P x x \\<Longrightarrow> False", "with \\<open>x \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  x \\<in> A\n  \\<forall>i. P x x", "have \"\\<not> wfp_on P A\""], ["proof (prove)\nusing this:\n  x \\<in> A\n  \\<forall>i. P x x\n\ngoal (1 subgoal):\n 1. \\<not> wfp_on P A", "by (auto simp: wfp_on_def)"], ["proof (state)\nthis:\n  \\<not> wfp_on P A\n\ngoal (1 subgoal):\n 1. P x x \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  wfp_on P A\n  \\<not> wfp_on P A", "show False"], ["proof (prove)\nusing this:\n  wfp_on P A\n  \\<not> wfp_on P A\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> P x x\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive\n  accessible_on :: \"('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> 'a set \\<Rightarrow> 'a \\<Rightarrow> bool\"\n  for P and A\nwhere\n  accessible_onI [Pure.intro]:\n    \"\\<lbrakk>x \\<in> A; \\<And>y. \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> accessible_on P A y\\<rbrakk> \\<Longrightarrow> accessible_on P A x\""], ["", "lemma accessible_on_imp_mem:\n  assumes \"accessible_on P A a\"\n  shows \"a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  accessible_on P A a\n\ngoal (1 subgoal):\n 1. a \\<in> A", "by (induct) auto"], ["", "lemma accessible_on_induct [consumes 1, induct pred: accessible_on]:\n  assumes *: \"accessible_on P A a\"\n    and IH: \"\\<And>x. \\<lbrakk>accessible_on P A x; \\<And>y. \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> Q y\\<rbrakk> \\<Longrightarrow> Q x\"\n  shows \"Q a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q a", "by (rule * [THEN accessible_on.induct]) (auto intro: IH accessible_onI)"], ["", "lemma accessible_on_downward:\n  \"accessible_on P A b \\<Longrightarrow> a \\<in> A \\<Longrightarrow> P a b \\<Longrightarrow> accessible_on P A a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>accessible_on P A b; a \\<in> A; P a b\\<rbrakk>\n    \\<Longrightarrow> accessible_on P A a", "by (cases rule: accessible_on.cases) fast"], ["", "lemma accessible_on_restrict_to_downwards:\n  assumes \"(restrict_to P A)\\<^sup>+\\<^sup>+ a b\" and \"accessible_on P A b\"\n  shows \"accessible_on P A a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. accessible_on P A a", "using assms"], ["proof (prove)\nusing this:\n  (restrict_to P A)\\<^sup>+\\<^sup>+ a b\n  accessible_on P A b\n\ngoal (1 subgoal):\n 1. accessible_on P A a", "by (induct) (auto dest: accessible_on_imp_mem accessible_on_downward)"], ["", "lemma accessible_on_imp_inductive_on:\n  assumes \"\\<forall>x\\<in>A. accessible_on P A x\"\n  shows \"inductive_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inductive_on P A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> A;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A;\n            \\<And>x.\n               \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n               \\<Longrightarrow> Q x\\<rbrakk>\n           \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "fix Q x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> A;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A;\n            \\<And>x.\n               \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n               \\<Longrightarrow> Q x\\<rbrakk>\n           \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "assume \"x \\<in> A\"\n    and *: \"\\<And>y. \\<lbrakk>y \\<in> A; \\<And>x. \\<lbrakk>x \\<in> A; P x y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk> \\<Longrightarrow> Q y\""], ["proof (state)\nthis:\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> A;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A;\n            \\<And>x.\n               \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n               \\<Longrightarrow> Q x\\<rbrakk>\n           \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "with assms"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>A. accessible_on P A x\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y", "have \"accessible_on P A x\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. accessible_on P A x\n  x \\<in> A\n  \\<lbrakk>?y \\<in> A;\n   \\<And>x.\n      \\<lbrakk>x \\<in> A; P x ?y\\<rbrakk> \\<Longrightarrow> Q x\\<rbrakk>\n  \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. accessible_on P A x", "by auto"], ["proof (state)\nthis:\n  accessible_on P A x\n\ngoal (1 subgoal):\n 1. \\<And>Q x.\n       \\<lbrakk>x \\<in> A;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A;\n            \\<And>x.\n               \\<lbrakk>x \\<in> A; P x y\\<rbrakk>\n               \\<Longrightarrow> Q x\\<rbrakk>\n           \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "then"], ["proof (chain)\npicking this:\n  accessible_on P A x", "show \"Q x\""], ["proof (prove)\nusing this:\n  accessible_on P A x\n\ngoal (1 subgoal):\n 1. Q x", "proof (induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "case (1 z)"], ["proof (state)\nthis:\n  accessible_on P A z\n  \\<lbrakk>?y \\<in> A; P ?y z\\<rbrakk> \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "then"], ["proof (chain)\npicking this:\n  accessible_on P A z\n  \\<lbrakk>?y \\<in> A; P ?y z\\<rbrakk> \\<Longrightarrow> Q ?y", "have \"z \\<in> A\""], ["proof (prove)\nusing this:\n  accessible_on P A z\n  \\<lbrakk>?y \\<in> A; P ?y z\\<rbrakk> \\<Longrightarrow> Q ?y\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by (blast dest: accessible_on_imp_mem)"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk> \\<Longrightarrow> Q y\\<rbrakk>\n       \\<Longrightarrow> Q x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Q z", "by (rule *) fact+"], ["proof (state)\nthis:\n  Q z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Q x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas accessible_on_imp_wfp_on = accessible_on_imp_inductive_on [THEN inductive_on_imp_wfp_on]"], ["", "lemma wfp_on_tranclp_imp_wfp_on:\n  assumes \"wfp_on (P\\<^sup>+\\<^sup>+) A\"\n  shows \"wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A", "by (rule ccontr) (insert assms, auto simp: wfp_on_def)"], ["", "lemma inductive_on_imp_accessible_on:\n  assumes \"inductive_on P A\"\n  shows \"\\<forall>x\\<in>A. accessible_on P A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>A. accessible_on P A x", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> accessible_on P A x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> accessible_on P A x", "assume \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> accessible_on P A x", "with assms"], ["proof (chain)\npicking this:\n  inductive_on P A\n  x \\<in> A", "show \"accessible_on P A x\""], ["proof (prove)\nusing this:\n  inductive_on P A\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. accessible_on P A x", "by (induct) (auto intro: accessible_onI)"], ["proof (state)\nthis:\n  accessible_on P A x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inductive_on_accessible_on_conv:\n  \"inductive_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. accessible_on P A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inductive_on P A = (\\<forall>x\\<in>A. accessible_on P A x)", "using inductive_on_imp_accessible_on\n    and accessible_on_imp_inductive_on"], ["proof (prove)\nusing this:\n  inductive_on ?P ?A \\<Longrightarrow>\n  \\<forall>x\\<in>?A. accessible_on ?P ?A x\n  \\<forall>x\\<in>?A. accessible_on ?P ?A x \\<Longrightarrow>\n  inductive_on ?P ?A\n\ngoal (1 subgoal):\n 1. inductive_on P A = (\\<forall>x\\<in>A. accessible_on P A x)", "by blast"], ["", "lemmas wfp_on_imp_accessible_on =\n  wfp_on_imp_inductive_on [THEN inductive_on_imp_accessible_on]"], ["", "lemma wfp_on_accessible_on_iff:\n  \"wfp_on P A \\<longleftrightarrow> (\\<forall>x\\<in>A. accessible_on P A x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A = (\\<forall>x\\<in>A. accessible_on P A x)", "by (blast dest: wfp_on_imp_accessible_on accessible_on_imp_wfp_on)"], ["", "lemma accessible_on_tranclp:\n  assumes \"accessible_on P A x\"\n  shows \"accessible_on ((restrict_to P A)\\<^sup>+\\<^sup>+) A x\"\n    (is \"accessible_on ?P A x\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "using assms"], ["proof (prove)\nusing this:\n  accessible_on P A x\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "proof (induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+\n                              A y\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "case (1 x)"], ["proof (state)\nthis:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+\n                              A y\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "then"], ["proof (chain)\npicking this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y", "have \"x \\<in> A\""], ["proof (prove)\nusing this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by (blast dest: accessible_on_imp_mem)"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>accessible_on P A x;\n        \\<And>y.\n           \\<lbrakk>y \\<in> A; P y x\\<rbrakk>\n           \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+\n                              A y\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "then"], ["proof (chain)\npicking this:\n  x \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x", "proof (rule accessible_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A; (restrict_to P A)\\<^sup>+\\<^sup>+ y x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A; (restrict_to P A)\\<^sup>+\\<^sup>+ y x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "assume \"y \\<in> A\""], ["proof (state)\nthis:\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A; (restrict_to P A)\\<^sup>+\\<^sup>+ y x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "assume \"?P y x\""], ["proof (state)\nthis:\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>y \\<in> A; (restrict_to P A)\\<^sup>+\\<^sup>+ y x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "then"], ["proof (chain)\npicking this:\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y x", "show \"accessible_on ?P A y\""], ["proof (prove)\nusing this:\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y x\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. restrict_to P A y x \\<Longrightarrow>\n    accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n 2. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "assume \"restrict_to P A y x\""], ["proof (state)\nthis:\n  restrict_to P A y x\n\ngoal (2 subgoals):\n 1. restrict_to P A y x \\<Longrightarrow>\n    accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n 2. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "with 1 and \\<open>y \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n  y \\<in> A\n  restrict_to P A y x", "show ?thesis"], ["proof (prove)\nusing this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n  y \\<in> A\n  restrict_to P A y x\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "by blast"], ["proof (state)\nthis:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "assume \"?P y z\" and \"restrict_to P A z x\""], ["proof (state)\nthis:\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y z\n  restrict_to P A z x\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "with 1"], ["proof (chain)\npicking this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y z\n  restrict_to P A z x", "have \"accessible_on ?P A z\""], ["proof (prove)\nusing this:\n  accessible_on P A x\n  \\<lbrakk>?y \\<in> A; P ?y x\\<rbrakk>\n  \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?y\n  (restrict_to P A)\\<^sup>+\\<^sup>+ y z\n  restrict_to P A z x\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A z", "by (auto simp: restrict_to_def)"], ["proof (state)\nthis:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A z\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<lbrakk>(restrict_to P A)\\<^sup>+\\<^sup>+ y b;\n        restrict_to P A b x\\<rbrakk>\n       \\<Longrightarrow> accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "from accessible_on_downward [OF this \\<open>y \\<in> A\\<close> \\<open>?P y z\\<close>]"], ["proof (chain)\npicking this:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "show ?thesis"], ["proof (prove)\nusing this:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n\ngoal (1 subgoal):\n 1. accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y", "."], ["proof (state)\nthis:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wfp_on_restrict_to_tranclp:\n  assumes \"wfp_on P A\"\n  shows \"wfp_on ((restrict_to P A)\\<^sup>+\\<^sup>+) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A", "using wfp_on_imp_accessible_on [OF assms]\n    and accessible_on_tranclp [of P A]\n    and accessible_on_imp_wfp_on [of A \"(restrict_to P A)\\<^sup>+\\<^sup>+\"]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>A. accessible_on P A x\n  accessible_on P A ?x \\<Longrightarrow>\n  accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A ?x\n  \\<forall>x\\<in>A.\n     accessible_on (restrict_to P A)\\<^sup>+\\<^sup>+ A x \\<Longrightarrow>\n  wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A\n\ngoal (1 subgoal):\n 1. wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A", "by blast"], ["", "lemma wfp_on_restrict_to_tranclp':\n  assumes \"wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A\"\n  shows \"wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on P A", "by (rule ccontr) (insert assms, auto simp: wfp_on_def)"], ["", "lemma wfp_on_restrict_to_tranclp_wfp_on_conv:\n  \"wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A \\<longleftrightarrow> wfp_on P A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A = wfp_on P A", "using wfp_on_restrict_to_tranclp [of P A]\n    and wfp_on_restrict_to_tranclp' [of P A]"], ["proof (prove)\nusing this:\n  wfp_on P A \\<Longrightarrow> wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A\n  wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A \\<Longrightarrow> wfp_on P A\n\ngoal (1 subgoal):\n 1. wfp_on (restrict_to P A)\\<^sup>+\\<^sup>+ A = wfp_on P A", "by blast"], ["", "lemma tranclp_idemp [simp]:\n  \"(P\\<^sup>+\\<^sup>+)\\<^sup>+\\<^sup>+ = P\\<^sup>+\\<^sup>+\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ = P\\<^sup>+\\<^sup>+", "proof (intro ext)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x xa = P\\<^sup>+\\<^sup>+ x xa", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x xa = P\\<^sup>+\\<^sup>+ x xa", "show \"?l x y = ?r x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y = P\\<^sup>+\\<^sup>+ x y", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+ x y\n 2. P\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "assume \"?l x y\""], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y\n\ngoal (2 subgoals):\n 1. P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+ x y\n 2. P\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "then"], ["proof (chain)\npicking this:\n  P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "show \"?r x y\""], ["proof (prove)\nusing this:\n  P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y", "by (induct) auto"], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+ x y\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "assume \"?r x y\""], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+ x y\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y \\<Longrightarrow>\n    P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "then"], ["proof (chain)\npicking this:\n  P\\<^sup>+\\<^sup>+ x y", "show \"?l x y\""], ["proof (prove)\nusing this:\n  P\\<^sup>+\\<^sup>+ x y\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y", "by (induct) auto"], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+\\<^sup>+\\<^sup>+ x y = P\\<^sup>+\\<^sup>+ x y\n\ngoal:\nNo subgoals!", "qed"], ["", "(*TODO: move the following 3 lemmas to Transitive_Closure?*)"], ["", "lemma stepfun_imp_tranclp:\n  assumes \"f 0 = x\" and \"f (Suc n) = z\"\n    and \"\\<forall>i\\<le>n. P (f i) (f (Suc i))\"\n  shows \"P\\<^sup>+\\<^sup>+ x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x z", "using assms"], ["proof (prove)\nusing this:\n  f 0 = x\n  f (Suc n) = z\n  \\<forall>i\\<le>n. P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x z", "by (induct n arbitrary: x z)\n     (auto intro: tranclp.trancl_into_trancl)"], ["", "lemma tranclp_imp_stepfun:\n  assumes \"P\\<^sup>+\\<^sup>+ x z\"\n  shows \"\\<exists>f n. f 0 = x \\<and> f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\"\n    (is \"\\<exists>f n. ?P x z f n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f n.\n       f 0 = x \\<and>\n       f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "using assms"], ["proof (prove)\nusing this:\n  P\\<^sup>+\\<^sup>+ x z\n\ngoal (1 subgoal):\n 1. \\<exists>f n.\n       f 0 = x \\<and>\n       f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "proof (induct rule: tranclp_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "case (base y)"], ["proof (state)\nthis:\n  P x y\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "let ?f = \"(\\<lambda>_. y)(0 := x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "have \"?f 0 = x\" and \"?f (Suc 0) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. y)(0::'b := x)) (0::'b) = x &&&\n    ((\\<lambda>_. y)(0 := x)) (Suc 0) = y", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>_. y)(0::?'b1 := x)) (0::?'b1) = x\n  ((\\<lambda>_. y)(0 := x)) (Suc 0) = y\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "moreover"], ["proof (state)\nthis:\n  ((\\<lambda>_. y)(0::?'b1 := x)) (0::?'b1) = x\n  ((\\<lambda>_. y)(0 := x)) (Suc 0) = y\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "have \"\\<forall>i\\<le>0. P (?f i) (?f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>0.\n       P (((\\<lambda>_. y)(0 := x)) i) (((\\<lambda>_. y)(0 := x)) (Suc i))", "using base"], ["proof (prove)\nusing this:\n  P x y\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>0.\n       P (((\\<lambda>_. y)(0 := x)) i) (((\\<lambda>_. y)(0 := x)) (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>0.\n     P (((\\<lambda>_. y)(0 := x)) i) (((\\<lambda>_. y)(0 := x)) (Suc i))\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       P x y \\<Longrightarrow>\n       \\<exists>f n.\n          f 0 = x \\<and>\n          f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n 2. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "ultimately"], ["proof (chain)\npicking this:\n  ((\\<lambda>_. y)(0::?'b1 := x)) (0::?'b1) = x\n  ((\\<lambda>_. y)(0 := x)) (Suc 0) = y\n  \\<forall>i\\<le>0.\n     P (((\\<lambda>_. y)(0 := x)) i) (((\\<lambda>_. y)(0 := x)) (Suc i))", "show ?case"], ["proof (prove)\nusing this:\n  ((\\<lambda>_. y)(0::?'b1 := x)) (0::?'b1) = x\n  ((\\<lambda>_. y)(0 := x)) (Suc 0) = y\n  \\<forall>i\\<le>0.\n     P (((\\<lambda>_. y)(0 := x)) i) (((\\<lambda>_. y)(0 := x)) (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>f n.\n       f 0 = x \\<and>\n       f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>f n.\n     f 0 = x \\<and>\n     f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "case (step y z)"], ["proof (state)\nthis:\n  P\\<^sup>+\\<^sup>+ x y\n  P y z\n  \\<exists>f n.\n     f 0 = x \\<and>\n     f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "then"], ["proof (chain)\npicking this:\n  P\\<^sup>+\\<^sup>+ x y\n  P y z\n  \\<exists>f n.\n     f 0 = x \\<and>\n     f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "obtain f n where IH: \"?P x y f n\""], ["proof (prove)\nusing this:\n  P\\<^sup>+\\<^sup>+ x y\n  P y z\n  \\<exists>f n.\n     f 0 = x \\<and>\n     f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal (1 subgoal):\n 1. (\\<And>f n.\n        f 0 = x \\<and>\n        f (Suc n) = y \\<and>\n        (\\<forall>i\\<le>n. P (f i) (f (Suc i))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f 0 = x \\<and>\n  f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "then"], ["proof (chain)\npicking this:\n  f 0 = x \\<and>\n  f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "have *: \"\\<forall>i\\<le>n. P (f i) (f (Suc i))\"\n    and [simp]: \"f 0 = x\" \"f (Suc n) = y\""], ["proof (prove)\nusing this:\n  f 0 = x \\<and>\n  f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>n. P (f i) (f (Suc i)) &&& f 0 = x &&& f (Suc n) = y", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>n. P (f i) (f (Suc i))\n  f 0 = x\n  f (Suc n) = y\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "let ?n = \"Suc n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "let ?f = \"f(Suc ?n := z)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "have \"?f 0 = x\" and \"?f (Suc ?n) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f(Suc (Suc n) := z)) 0 = x &&& (f(Suc (Suc n) := z)) (Suc (Suc n)) = z", "by auto"], ["proof (state)\nthis:\n  (f(Suc (Suc n) := z)) 0 = x\n  (f(Suc (Suc n) := z)) (Suc (Suc n)) = z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "moreover"], ["proof (state)\nthis:\n  (f(Suc (Suc n) := z)) 0 = x\n  (f(Suc (Suc n) := z)) (Suc (Suc n)) = z\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "have \"\\<forall>i\\<le>?n. P (?f i) (?f (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>Suc n.\n       P ((f(Suc (Suc n) := z)) i) ((f(Suc (Suc n) := z)) (Suc i))", "using \\<open>P y z\\<close> and *"], ["proof (prove)\nusing this:\n  P y z\n  \\<forall>i\\<le>n. P (f i) (f (Suc i))\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>Suc n.\n       P ((f(Suc (Suc n) := z)) i) ((f(Suc (Suc n) := z)) (Suc i))", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<le>Suc n.\n     P ((f(Suc (Suc n) := z)) i) ((f(Suc (Suc n) := z)) (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>y z.\n       \\<lbrakk>P\\<^sup>+\\<^sup>+ x y; P y z;\n        \\<exists>f n.\n           f 0 = x \\<and>\n           f (Suc n) = y \\<and>\n           (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f n.\n                            f 0 = x \\<and>\n                            f (Suc n) = z \\<and>\n                            (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "ultimately"], ["proof (chain)\npicking this:\n  (f(Suc (Suc n) := z)) 0 = x\n  (f(Suc (Suc n) := z)) (Suc (Suc n)) = z\n  \\<forall>i\\<le>Suc n.\n     P ((f(Suc (Suc n) := z)) i) ((f(Suc (Suc n) := z)) (Suc i))", "show ?case"], ["proof (prove)\nusing this:\n  (f(Suc (Suc n) := z)) 0 = x\n  (f(Suc (Suc n) := z)) (Suc (Suc n)) = z\n  \\<forall>i\\<le>Suc n.\n     P ((f(Suc (Suc n) := z)) i) ((f(Suc (Suc n) := z)) (Suc i))\n\ngoal (1 subgoal):\n 1. \\<exists>f n.\n       f 0 = x \\<and>\n       f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))", "by blast"], ["proof (state)\nthis:\n  \\<exists>f n.\n     f 0 = x \\<and>\n     f (Suc n) = z \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tranclp_stepfun_conv:\n  \"P\\<^sup>+\\<^sup>+ x y \\<longleftrightarrow> (\\<exists>f n. f 0 = x \\<and> f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y =\n    (\\<exists>f n.\n        f 0 = x \\<and>\n        f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i))))", "using tranclp_imp_stepfun and stepfun_imp_tranclp"], ["proof (prove)\nusing this:\n  ?P\\<^sup>+\\<^sup>+ ?x ?z \\<Longrightarrow>\n  \\<exists>f n.\n     f 0 = ?x \\<and>\n     f (Suc n) = ?z \\<and> (\\<forall>i\\<le>n. ?P (f i) (f (Suc i)))\n  \\<lbrakk>?f 0 = ?x; ?f (Suc ?n) = ?z;\n   \\<forall>i\\<le>?n. ?P (?f i) (?f (Suc i))\\<rbrakk>\n  \\<Longrightarrow> ?P\\<^sup>+\\<^sup>+ ?x ?z\n\ngoal (1 subgoal):\n 1. P\\<^sup>+\\<^sup>+ x y =\n    (\\<exists>f n.\n        f 0 = x \\<and>\n        f (Suc n) = y \\<and> (\\<forall>i\\<le>n. P (f i) (f (Suc i))))", "by metis"], ["", "subsection \\<open>Facts About Predecessor Sets\\<close>"], ["", "lemma qo_on_predecessor_subset_conv':\n  assumes \"qo_on P A\" and \"B \\<subseteq> A\" and \"C \\<subseteq> A\"\n  shows \"{x\\<in>A. \\<exists>y\\<in>B. P x y} \\<subseteq> {x\\<in>A. \\<exists>y\\<in>C. P x y} \\<longleftrightarrow> (\\<forall>x\\<in>B. \\<exists>y\\<in>C. P x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({x \\<in> A. \\<exists>y\\<in>B. P x y}\n     \\<subseteq> {x \\<in> A. \\<exists>y\\<in>C. P x y}) =\n    (\\<forall>x\\<in>B. \\<exists>y\\<in>C. P x y)", "using assms"], ["proof (prove)\nusing this:\n  qo_on P A\n  B \\<subseteq> A\n  C \\<subseteq> A\n\ngoal (1 subgoal):\n 1. ({x \\<in> A. \\<exists>y\\<in>B. P x y}\n     \\<subseteq> {x \\<in> A. \\<exists>y\\<in>C. P x y}) =\n    (\\<forall>x\\<in>B. \\<exists>y\\<in>C. P x y)", "by (auto simp: subset_eq qo_on_def reflp_on_def, unfold transp_on_def) metis+"], ["", "lemma qo_on_predecessor_subset_conv:\n  \"\\<lbrakk>qo_on P A; x \\<in> A; y \\<in> A\\<rbrakk> \\<Longrightarrow> {z\\<in>A. P z x} \\<subseteq> {z\\<in>A. P z y} \\<longleftrightarrow> P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qo_on P A; x \\<in> A; y \\<in> A\\<rbrakk>\n    \\<Longrightarrow> ({z \\<in> A. P z x} \\<subseteq> {z \\<in> A. P z y}) =\n                      P x y", "using qo_on_predecessor_subset_conv' [of P A \"{x}\" \"{y}\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>qo_on P A; {x} \\<subseteq> A; {y} \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> ({xa \\<in> A. \\<exists>y\\<in>{x}. P xa y}\n                     \\<subseteq> {x \\<in> A. \\<exists>y\\<in>{y}. P x y}) =\n                    (\\<forall>x\\<in>{x}. \\<exists>y\\<in>{y}. P x y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>qo_on P A; x \\<in> A; y \\<in> A\\<rbrakk>\n    \\<Longrightarrow> ({z \\<in> A. P z x} \\<subseteq> {z \\<in> A. P z y}) =\n                      P x y", "by simp"], ["", "lemma po_on_predecessors_eq_conv:\n  assumes \"po_on P A\" and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"{z\\<in>A. P\\<^sup>=\\<^sup>= z x} = {z\\<in>A. P\\<^sup>=\\<^sup>= z y} \\<longleftrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ({z \\<in> A. P\\<^sup>=\\<^sup>= z x} =\n     {z \\<in> A. P\\<^sup>=\\<^sup>= z y}) =\n    (x = y)", "using assms(2-)\n    and reflp_on_reflclp [of P A]\n    and po_on_imp_antisymp_on [OF \\<open>po_on P A\\<close>]"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  reflp_on P\\<^sup>=\\<^sup>= A\n  antisymp_on P A\n\ngoal (1 subgoal):\n 1. ({z \\<in> A. P\\<^sup>=\\<^sup>= z x} =\n     {z \\<in> A. P\\<^sup>=\\<^sup>= z y}) =\n    (x = y)", "unfolding antisymp_on_def reflp_on_def"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n  \\<forall>a\\<in>A. P\\<^sup>=\\<^sup>= a a\n  \\<forall>a\\<in>A.\n     \\<forall>b\\<in>A. P a b \\<and> P b a \\<longrightarrow> a = b\n\ngoal (1 subgoal):\n 1. ({z \\<in> A. P\\<^sup>=\\<^sup>= z x} =\n     {z \\<in> A. P\\<^sup>=\\<^sup>= z y}) =\n    (x = y)", "by blast"], ["", "lemma restrict_to_rtranclp:\n  assumes \"transp_on P A\"\n    and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"(restrict_to P A)\\<^sup>*\\<^sup>* x y \\<longleftrightarrow> P\\<^sup>=\\<^sup>= x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "assume \"(restrict_to P A)\\<^sup>*\\<^sup>* x y\""], ["proof (state)\nthis:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y\n\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "then"], ["proof (chain)\npicking this:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y", "have \"P\\<^sup>=\\<^sup>= x y\""], ["proof (prove)\nusing this:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y\n\ngoal (1 subgoal):\n 1. P\\<^sup>=\\<^sup>= x y", "using assms"], ["proof (prove)\nusing this:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y\n  transp_on P A\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. P\\<^sup>=\\<^sup>= x y", "by (induct) (auto, unfold transp_on_def, blast)"], ["proof (state)\nthis:\n  P\\<^sup>=\\<^sup>= x y\n\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "}"], ["proof (state)\nthis:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y \\<Longrightarrow>\n  P\\<^sup>=\\<^sup>= x y\n\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "with assms"], ["proof (chain)\npicking this:\n  transp_on P A\n  x \\<in> A\n  y \\<in> A\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y \\<Longrightarrow>\n  P\\<^sup>=\\<^sup>= x y", "show ?thesis"], ["proof (prove)\nusing this:\n  transp_on P A\n  x \\<in> A\n  y \\<in> A\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y \\<Longrightarrow>\n  P\\<^sup>=\\<^sup>= x y\n\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y", "by auto"], ["proof (state)\nthis:\n  (restrict_to P A)\\<^sup>*\\<^sup>* x y = P\\<^sup>=\\<^sup>= x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma reflp_on_restrict_to_rtranclp:\n  assumes \"reflp_on P A\" and \"transp_on P A\"\n    and \"x \\<in> A\" and \"y \\<in> A\"\n  shows \"(restrict_to P A)\\<^sup>*\\<^sup>* x y \\<longleftrightarrow> P x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (restrict_to P A)\\<^sup>*\\<^sup>* x y = P x y", "unfolding restrict_to_rtranclp [OF assms(2-)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. P\\<^sup>=\\<^sup>= x y = P x y", "unfolding reflp_on_reflclp_simp [OF assms(1, 3-)]"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x y = P x y", ".."], ["", "end"]]}