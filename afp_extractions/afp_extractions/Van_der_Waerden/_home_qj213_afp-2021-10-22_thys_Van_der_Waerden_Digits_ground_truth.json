{"file_name": "/home/qj213/afp-2021-10-22/thys/Van_der_Waerden/Digits.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Van_der_Waerden", "problem_names": ["lemma split_sum_first_elt_less: assumes \"n<m\" \n  shows \"(\\<Sum>i\\<in>{n..<m}. f i) = f n + (\\<Sum>i\\<in>{Suc n ..<m}. f i)\"", "lemma split_sum_mid_less: assumes \"i<(n::nat)\"\n  shows \"(\\<Sum>j<n. f j) = (\\<Sum>j<i. f j) + (\\<Sum>j=i..<n. f j)\"", "lemma from_digits_altdef: \"from_digits n d = (\\<Sum>i<n. d i * base ^ i)\"", "lemma digit_altdef: \"digit x i = (x div (base ^ i)) mod base\"", "lemma digit_less_base: \"digit x i < base\"", "lemma from_digits_less: \n  assumes \"\\<forall>i<n. d i < base\" \n  shows \"from_digits n d < base ^ n\"", "lemma mod_base:  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\"\n  shows \"from_digits n d mod base = d 0 \"", "lemma mod_base_i:  \n  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\" \"i<n\"\n  shows \"(\\<Sum>j=i..<n. d j * base ^ (j-i)) mod base = d i \"", "lemma div_base_i: \n  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\" \"i<n\"\n  shows \"from_digits n d div (base ^i) = (\\<Sum>j=i..<n. d j * base ^ (j-i))\"", "lemma digit_from_digits:\n  assumes \"\\<And>j. j<n \\<Longrightarrow> d j < base\" \"n>0\" \"i<n\"\n  shows   \"digit (from_digits n d) i = d i\"", "lemma div_distrib: assumes \"i<n\" \n  shows \"(a*base^n + b) div base^i mod base = b div base^i mod base\"", "lemma from_digits_digit:\n  assumes \"x < base ^ n\"\n  shows   \"from_digits n (digit x) = x\"", "lemma from_digits_digit': \n  \"from_digits n (digit x) = x mod (base ^ n)\""], "translations": [["", "lemma split_sum_first_elt_less: assumes \"n<m\" \n  shows \"(\\<Sum>i\\<in>{n..<m}. f i) = f n + (\\<Sum>i\\<in>{Suc n ..<m}. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {n..<m} = f n + sum f {Suc n..<m}", "using sum.atLeast_Suc_lessThan assms"], ["proof (prove)\nusing this:\n  ?m < ?n \\<Longrightarrow> sum ?g {?m..<?n} = ?g ?m + sum ?g {Suc ?m..<?n}\n  n < m\n\ngoal (1 subgoal):\n 1. sum f {n..<m} = f n + sum f {Suc n..<m}", "by blast"], ["", "lemma split_sum_mid_less: assumes \"i<(n::nat)\"\n  shows \"(\\<Sum>j<n. f j) = (\\<Sum>j<i. f j) + (\\<Sum>j=i..<n. f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "have \"(\\<Sum>j<n. f j) = (\\<Sum>j\\<in>{..<i} \\<union> {i..<n}. f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f ({..<i} \\<union> {i..<n})", "using \\<open>i < n\\<close>"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f ({..<i} \\<union> {i..<n})", "by (intro sum.cong) auto"], ["proof (state)\nthis:\n  sum f {..<n} = sum f ({..<i} \\<union> {i..<n})\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "also"], ["proof (state)\nthis:\n  sum f {..<n} = sum f ({..<i} \\<union> {i..<n})\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "have \"\\<dots> = (\\<Sum>j<i. f j) + (\\<Sum>j=i..<n. f j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f ({..<i} \\<union> {i..<n}) = sum f {..<i} + sum f {i..<n}", "by (subst sum.union_disjoint) auto"], ["proof (state)\nthis:\n  sum f ({..<i} \\<union> {i..<n}) = sum f {..<i} + sum f {i..<n}\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "finally"], ["proof (chain)\npicking this:\n  sum f {..<n} = sum f {..<i} + sum f {i..<n}", "show \"(\\<Sum>j<n. f j) = (\\<Sum>j<i. f j) + (\\<Sum>j=i..<n. f j)\""], ["proof (prove)\nusing this:\n  sum f {..<n} = sum f {..<i} + sum f {i..<n}\n\ngoal (1 subgoal):\n 1. sum f {..<n} = sum f {..<i} + sum f {i..<n}", "."], ["proof (state)\nthis:\n  sum f {..<n} = sum f {..<i} + sum f {i..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In order to use representation of numbers in a basis \\<open>base\\<close> and to calculate the conversion \nto and from integers, we introduce the following locale.\\<close>"], ["", "locale digits =\n  fixes base :: nat\n  assumes base_pos: \"base > 0\"\nbegin"], ["", "text \\<open>Conversion from basis base to integers: \\<open>from_digits n d\\<close>\n\n\\begin{tabular}{lcp{8cm}}\n  n:& \\<open>nat\\<close>& length of representation in basis base\\\\\n  d:& \\<open>nat \\<Rightarrow> nat\\<close>& function of digits in basis base where \\<open>d i\\<close> is the $i$-th digit in basis base\\\\\n  output:& \\<open>nat\\<close>& natural number corresponding to $d(n-1) \\dots d(0)$ as integer\\\\\n\\end{tabular}\n\\<close>"], ["", "fun from_digits :: \"nat \\<Rightarrow> (nat \\<Rightarrow> nat) \\<Rightarrow> nat\" where\n  \"from_digits 0 d = 0\"\n| \"from_digits (Suc n) d = d 0 + base * from_digits n (d \\<circ> Suc)\""], ["", "text \\<open>Alternative definition using sum:\\<close>"], ["", "lemma from_digits_altdef: \"from_digits n d = (\\<Sum>i<n. d i * base ^ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n d = (\\<Sum>i<n. d i * base ^ i)", "by (induction n d rule: from_digits.induct)\n     (auto simp add: sum.lessThan_Suc_shift o_def sum_distrib_left \n       sum_distrib_right mult_ac simp del: sum.lessThan_Suc)"], ["", "text \\<open>Digit in basis base of some integer number: \\<open>digit x i\\<close>\n\n\\begin{tabular}{lcp{8cm}}\n  x:& \\<open>nat\\<close>& integer\\\\\n  i:& \\<open>nat\\<close>& index\\\\\n  output:& \\<open>nat\\<close>& $i$-th digit of representation in basis base of $x$\\\\\n\\end{tabular}\n\\<close>"], ["", "fun digit :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat\" where\n  \"digit x 0 = x mod base\"\n| \"digit x (Suc i) = digit (x div base) i\""], ["", "text \\<open>Alternative definition using divisor and modulo:\\<close>"], ["", "lemma digit_altdef: \"digit x i = (x div (base ^ i)) mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digit x i = x div base ^ i mod base", "by (induction x i rule: digit.induct) (auto simp: div_mult2_eq)"], ["", "text \\<open>Every digit must be smaller that the base.\\<close>"], ["", "lemma digit_less_base: \"digit x i < base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digit x i < base", "using base_pos"], ["proof (prove)\nusing this:\n  0 < base\n\ngoal (1 subgoal):\n 1. digit x i < base", "by (auto simp: digit_altdef)"], ["", "text \\<open>A representation in basis \\<open>base\\<close> of length $n$ must be less than $\\<open>base\\<close> ^ n$.\\<close>"], ["", "lemma from_digits_less: \n  assumes \"\\<forall>i<n. d i < base\" \n  shows \"from_digits n d < base ^ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n d < base ^ n", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>i<n. d i < base\n\ngoal (1 subgoal):\n 1. from_digits n d < base ^ n", "proof (induct n d rule: from_digits.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "case (2 n d)"], ["proof (state)\nthis:\n  \\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n  from_digits n (d \\<circ> Suc) < base ^ n\n  \\<forall>i<Suc n. d i < base\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "have \"from_digits n (d \\<circ> Suc) \\<le> base ^ n -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n  from_digits n (d \\<circ> Suc) < base ^ n\n  \\<forall>i<Suc n. d i < base\n\ngoal (1 subgoal):\n 1. from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1", "by (metis One_nat_def Suc_leI Suc_pred base_pos comp_apply \n        less_Suc_eq_le zero_less_power)"], ["proof (state)\nthis:\n  from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "moreover"], ["proof (state)\nthis:\n  from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "have \"d 0 \\<le> base -1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d 0 \\<le> base - 1", "using 2"], ["proof (prove)\nusing this:\n  \\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n  from_digits n (d \\<circ> Suc) < base ^ n\n  \\<forall>i<Suc n. d i < base\n\ngoal (1 subgoal):\n 1. d 0 \\<le> base - 1", "by (metis One_nat_def Suc_pred base_pos less_Suc_eq_0_disj \n        less_Suc_eq_le)"], ["proof (state)\nthis:\n  d 0 \\<le> base - 1\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "ultimately"], ["proof (chain)\npicking this:\n  from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1\n  d 0 \\<le> base - 1", "have \"d 0 + base * from_digits n (d \\<circ> Suc) \\<le> \n      base - 1 + base * (base^(n) - 1)\""], ["proof (prove)\nusing this:\n  from_digits n (d \\<circ> Suc) \\<le> base ^ n - 1\n  d 0 \\<le> base - 1\n\ngoal (1 subgoal):\n 1. d 0 + base * from_digits n (d \\<circ> Suc)\n    \\<le> base - 1 + base * (base ^ n - 1)", "by (simp add: add_mono_thms_linordered_semiring(1))"], ["proof (state)\nthis:\n  d 0 + base * from_digits n (d \\<circ> Suc)\n  \\<le> base - 1 + base * (base ^ n - 1)\n\ngoal (2 subgoals):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0\n 2. \\<And>n d.\n       \\<lbrakk>\\<forall>i<n. (d \\<circ> Suc) i < base \\<Longrightarrow>\n                from_digits n (d \\<circ> Suc) < base ^ n;\n        \\<forall>i<Suc n. d i < base\\<rbrakk>\n       \\<Longrightarrow> from_digits (Suc n) d < base ^ Suc n", "then"], ["proof (chain)\npicking this:\n  d 0 + base * from_digits n (d \\<circ> Suc)\n  \\<le> base - 1 + base * (base ^ n - 1)", "show \"from_digits (Suc n) d < base ^ Suc n\""], ["proof (prove)\nusing this:\n  d 0 + base * from_digits n (d \\<circ> Suc)\n  \\<le> base - 1 + base * (base ^ n - 1)\n\ngoal (1 subgoal):\n 1. from_digits (Suc n) d < base ^ Suc n", "using base_pos"], ["proof (prove)\nusing this:\n  d 0 + base * from_digits n (d \\<circ> Suc)\n  \\<le> base - 1 + base * (base ^ n - 1)\n  0 < base\n\ngoal (1 subgoal):\n 1. from_digits (Suc n) d < base ^ Suc n", "by (auto simp:comp_def) \n    (metis Suc_pred add_gr_0 le_imp_less_Suc mult_Suc_right \n      zero_less_power)"], ["proof (state)\nthis:\n  from_digits (Suc n) d < base ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<forall>i<0. d i < base \\<Longrightarrow> from_digits 0 d < base ^ 0", "qed auto"], ["", "text \\<open>Lemmas for \\<open>mod\\<close> and \\<open>div\\<close> in number systems of basis \\<open>base\\<close>:\\<close>"], ["", "lemma mod_base:  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\"\n  shows \"from_digits n d mod base = d 0 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n d mod base = d 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. from_digits n d mod base = d 0", "have \"(\\<Sum>i<n. d i * base ^ i) mod base = \n          (\\<Sum>i<n. d i * base ^ i mod base) mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) mod base =\n    (\\<Sum>i<n. d i * base ^ i mod base) mod base", "by (subst mod_sum_eq[symmetric]) simp"], ["proof (state)\nthis:\n  (\\<Sum>i<n. d i * base ^ i) mod base =\n  (\\<Sum>i<n. d i * base ^ i mod base) mod base\n\ngoal (1 subgoal):\n 1. from_digits n d mod base = d 0", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i<n. d i * base ^ i) mod base =\n  (\\<Sum>i<n. d i * base ^ i mod base) mod base", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. d i * base ^ i) mod base =\n  (\\<Sum>i<n. d i * base ^ i mod base) mod base\n\ngoal (1 subgoal):\n 1. from_digits n d mod base = d 0", "using assms \n      sum.lessThan_Suc_shift[of \"(\\<lambda>i. d i * base ^ i mod base)\" \"n-1\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. d i * base ^ i) mod base =\n  (\\<Sum>i<n. d i * base ^ i mod base) mod base\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  (\\<Sum>i<Suc (n - 1). d i * base ^ i mod base) =\n  d 0 * base ^ 0 mod base +\n  (\\<Sum>i<n - 1. d (Suc i) * base ^ Suc i mod base)\n\ngoal (1 subgoal):\n 1. from_digits n d mod base = d 0", "unfolding from_digits_altdef"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. d i * base ^ i) mod base =\n  (\\<Sum>i<n. d i * base ^ i mod base) mod base\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  (\\<Sum>i<Suc (n - 1). d i * base ^ i mod base) =\n  d 0 * base ^ 0 mod base +\n  (\\<Sum>i<n - 1. d (Suc i) * base ^ Suc i mod base)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) mod base = d 0", "by simp"], ["proof (state)\nthis:\n  from_digits n d mod base = d 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mod_base_i:  \n  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\" \"i<n\"\n  shows \"(\\<Sum>j=i..<n. d j * base ^ (j-i)) mod base = d i \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "have \"(\\<Sum>j=i..<n. d j * base ^ (j-i)) mod base = \n        (\\<Sum>j=i..<n. d j * base ^ (j-i) mod base) mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base", "by (subst mod_sum_eq[symmetric]) simp"], ["proof (state)\nthis:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "using assms split_sum_first_elt_less[where \n        f = \"(\\<lambda>j. d j * base ^ (j-i) mod base)\"]"], ["proof (prove)\nusing this:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  i < n\n  ?n < ?m \\<Longrightarrow>\n  (\\<Sum>ia = ?n..<?m. d ia * base ^ (ia - i) mod base) =\n  d ?n * base ^ (?n - i) mod base +\n  (\\<Sum>ia = Suc ?n..<?m. d ia * base ^ (ia - i) mod base)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "unfolding from_digits_altdef"], ["proof (prove)\nusing this:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i) mod base) mod base\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  i < n\n  ?n < ?m \\<Longrightarrow>\n  (\\<Sum>ia = ?n..<?m. d ia * base ^ (ia - i) mod base) =\n  d ?n * base ^ (?n - i) mod base +\n  (\\<Sum>ia = Suc ?n..<?m. d ia * base ^ (ia - i) mod base)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>j = i..<n. d j * base ^ (j - i)) mod base = d i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma div_base_i: \n  assumes \"\\<And>i. i<n \\<Longrightarrow> d i < base\" \"n>0\" \"i<n\"\n  shows \"from_digits n d div (base ^i) = (\\<Sum>j=i..<n. d j * base ^ (j-i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n d div base ^ i = (\\<Sum>j = i..<n. d j * base ^ (j - i))", "unfolding from_digits_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "have base_exp: \"base^(j) =  base^(j-i) * base^i\" \n    if \"j\\<in>{i..<n}\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. base ^ j = base ^ (j - i) * base ^ i", "by (metis Nat.add_diff_assoc2 add_diff_cancel_right' atLeastLessThan_iff \n        power_add that)"], ["proof (state)\nthis:\n  ?j \\<in> {i..<n} \\<Longrightarrow> base ^ ?j = base ^ (?j - i) * base ^ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "have first:\"(\\<Sum>j<i. d j * base ^ j)< base ^ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<i. d j * base ^ j) < base ^ i", "using assms from_digits_less[where n=\"i\"]"], ["proof (prove)\nusing this:\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  i < n\n  \\<forall>ia<i. ?d ia < base \\<Longrightarrow> from_digits i ?d < base ^ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<i. d j * base ^ j) < base ^ i", "unfolding from_digits_altdef"], ["proof (prove)\nusing this:\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  i < n\n  \\<forall>ia<i. ?d ia < base \\<Longrightarrow>\n  (\\<Sum>i<i. ?d i * base ^ i) < base ^ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<i. d j * base ^ j) < base ^ i", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j<i. d j * base ^ j) < base ^ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "have \"(\\<Sum>j<n. d j * base ^ j) = \n          (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j=i..<n. d j * base ^ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. d j * base ^ j) =\n    (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)", "using assms split_sum_mid_less[where f=\"(\\<lambda>j. d j * base^j)\"]"], ["proof (prove)\nusing this:\n  ?i < n \\<Longrightarrow> d ?i < base\n  0 < n\n  i < n\n  ?i < ?n \\<Longrightarrow>\n  (\\<Sum>j<?n. d j * base ^ j) =\n  (\\<Sum>j<?i. d j * base ^ j) + (\\<Sum>j = ?i..<?n. d j * base ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. d j * base ^ j) =\n    (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)", "have split_sum: \"(\\<Sum>j<n. d j * base ^ j) = \n      (\\<Sum>j<i. d j * base ^ j) + base^i * (\\<Sum>j=i..<n. d j * base ^ (j-i))\""], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. d j * base ^ j) =\n    (\\<Sum>j<i. d j * base ^ j) +\n    base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))", "using base_exp mult.assoc sum_distrib_right"], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) + (\\<Sum>j = i..<n. d j * base ^ j)\n  ?j \\<in> {i..<n} \\<Longrightarrow> base ^ ?j = base ^ (?j - i) * base ^ i\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  sum ?f ?A * ?r = (\\<Sum>n\\<in>?A. ?f n * ?r)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<n. d j * base ^ j) =\n    (\\<Sum>j<i. d j * base ^ j) +\n    base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))", "by (smt (z3) mult.commute sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) +\n  base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) +\n  base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))", "show \"(\\<Sum>i<n. d i * base ^ i) div base ^ i = \n              (\\<Sum>j = i..<n. d j * base ^ (j - i))\""], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) +\n  base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "using first"], ["proof (prove)\nusing this:\n  (\\<Sum>j<n. d j * base ^ j) =\n  (\\<Sum>j<i. d j * base ^ j) +\n  base ^ i * (\\<Sum>j = i..<n. d j * base ^ (j - i))\n  (\\<Sum>j<i. d j * base ^ j) < base ^ i\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n    (\\<Sum>j = i..<n. d j * base ^ (j - i))", "by (simp add:split_sum base_pos)"], ["proof (state)\nthis:\n  (\\<Sum>i<n. d i * base ^ i) div base ^ i =\n  (\\<Sum>j = i..<n. d j * base ^ (j - i))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Conversions are inverse to each other.\\<close>"], ["", "lemma digit_from_digits:\n  assumes \"\\<And>j. j<n \\<Longrightarrow> d j < base\" \"n>0\" \"i<n\"\n  shows   \"digit (from_digits n d) i = d i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. digit (from_digits n d) i = d i", "using assms"], ["proof (prove)\nusing this:\n  ?j < n \\<Longrightarrow> d ?j < base\n  0 < n\n  i < n\n\ngoal (1 subgoal):\n 1. digit (from_digits n d) i = d i", "proof (cases \"i=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i = 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i\n 2. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i = 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i\n 2. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. digit (from_digits n d) i = d i", "by (simp add: assms(1) assms(2) digits.mod_base digits_axioms)"], ["proof (state)\nthis:\n  digit (from_digits n d) i = d i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "have \"from_digits n d div base^i mod base = d i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n d div base ^ i mod base = d i", "using assms"], ["proof (prove)\nusing this:\n  ?j < n \\<Longrightarrow> d ?j < base\n  0 < n\n  i < n\n\ngoal (1 subgoal):\n 1. from_digits n d div base ^ i mod base = d i", "by (auto simp add: div_base_i mod_base_i)"], ["proof (state)\nthis:\n  from_digits n d div base ^ i mod base = d i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>j. j < n \\<Longrightarrow> d j < base; 0 < n; i < n;\n     i \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> digit (from_digits n d) i = d i", "then"], ["proof (chain)\npicking this:\n  from_digits n d div base ^ i mod base = d i", "show \"digit (from_digits n d) i = d i\""], ["proof (prove)\nusing this:\n  from_digits n d div base ^ i mod base = d i\n\ngoal (1 subgoal):\n 1. digit (from_digits n d) i = d i", "unfolding digit_altdef"], ["proof (prove)\nusing this:\n  from_digits n d div base ^ i mod base = d i\n\ngoal (1 subgoal):\n 1. from_digits n d div base ^ i mod base = d i", "by auto"], ["proof (state)\nthis:\n  digit (from_digits n d) i = d i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma div_distrib: assumes \"i<n\" \n  shows \"(a*base^n + b) div base^i mod base = b div base^i mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "have \"base^i dvd (a*base^n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. base ^ i dvd a * base ^ n", "using assms"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. base ^ i dvd a * base ^ n", "by (simp add: le_imp_power_dvd)"], ["proof (state)\nthis:\n  base ^ i dvd a * base ^ n\n\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "moreover"], ["proof (state)\nthis:\n  base ^ i dvd a * base ^ n\n\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "have \"a*base^n div base^i mod base = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * base ^ n div base ^ i mod base = 0", "by (metis Suc_leI assms dvd_imp_mod_0 dvd_mult \n        dvd_mult_imp_div le_imp_power_dvd power_Suc)"], ["proof (state)\nthis:\n  a * base ^ n div base ^ i mod base = 0\n\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "ultimately"], ["proof (chain)\npicking this:\n  base ^ i dvd a * base ^ n\n  a * base ^ n div base ^ i mod base = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  base ^ i dvd a * base ^ n\n  a * base ^ n div base ^ i mod base = 0\n\ngoal (1 subgoal):\n 1. (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base", "by (metis add.right_neutral div_mult_mod_eq \n        div_plus_div_distrib_dvd_left mod_mult_self3)"], ["proof (state)\nthis:\n  (a * base ^ n + b) div base ^ i mod base = b div base ^ i mod base\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma from_digits_digit:\n  assumes \"x < base ^ n\"\n  shows   \"from_digits n (digit x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n (digit x) = x", "using assms"], ["proof (prove)\nusing this:\n  x < base ^ n\n\ngoal (1 subgoal):\n 1. from_digits n (digit x) = x", "unfolding digit_altdef from_digits_altdef"], ["proof (prove)\nusing this:\n  x < base ^ n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x", "proof (induction n arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x < base ^ 0 \\<Longrightarrow>\n       (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "case 0"], ["proof (state)\nthis:\n  x < base ^ 0\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x < base ^ 0 \\<Longrightarrow>\n       (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x\n 2. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "then"], ["proof (chain)\npicking this:\n  x < base ^ 0", "show ?case"], ["proof (prove)\nusing this:\n  x < base ^ 0\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "case (Suc n)"], ["proof (state)\nthis:\n  ?x < base ^ n \\<Longrightarrow>\n  (\\<Sum>i<n. ?x div base ^ i mod base * base ^ i) = ?x\n  x < base ^ Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "define x_less where \"x_less = x mod base^n\""], ["proof (state)\nthis:\n  x_less = x mod base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "define x_n where \"x_n = x div base^n\""], ["proof (state)\nthis:\n  x_n = x div base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "have \"x_less < base^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_less < base ^ n", "using x_less_def base_pos mod_less_divisor"], ["proof (prove)\nusing this:\n  x_less = x mod base ^ n\n  0 < base\n  0 < ?n \\<Longrightarrow> ?m mod ?n < ?n\n\ngoal (1 subgoal):\n 1. x_less < base ^ n", "by presburger"], ["proof (state)\nthis:\n  x_less < base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "then"], ["proof (chain)\npicking this:\n  x_less < base ^ n", "have IH_x_less:\n    \"(\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\""], ["proof (prove)\nusing this:\n  x_less < base ^ n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less", "using Suc.IH"], ["proof (prove)\nusing this:\n  x_less < base ^ n\n  ?x < base ^ n \\<Longrightarrow>\n  (\\<Sum>i<n. ?x div base ^ i mod base * base ^ i) = ?x\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "have \"x_n < base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_n < base", "using \\<open>x<base^Suc n\\<close>"], ["proof (prove)\nusing this:\n  x < base ^ Suc n\n\ngoal (1 subgoal):\n 1. x_n < base", "by auto (metis less_mult_imp_div_less x_n_def)"], ["proof (state)\nthis:\n  x_n < base\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "then"], ["proof (chain)\npicking this:\n  x_n < base", "have \"x_n mod base = x_n\""], ["proof (prove)\nusing this:\n  x_n < base\n\ngoal (1 subgoal):\n 1. x_n mod base = x_n", "by simp"], ["proof (state)\nthis:\n  x_n mod base = x_n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "have x_less_i_eq_x_i:\"x mod base^n div base ^i mod base = \n    x div base^i mod base\" if \"i<n\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "have \"x div base^i mod base = \n          ((x div base^n) * base^n + x mod base^n) div base^i mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x div base ^ i mod base =\n    (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base", "using div_mult_mod_eq[of x \"base^n\"]"], ["proof (prove)\nusing this:\n  x div base ^ n * base ^ n + x mod base ^ n = x\n\ngoal (1 subgoal):\n 1. x div base ^ i mod base =\n    (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base", "by simp"], ["proof (state)\nthis:\n  x div base ^ i mod base =\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "also"], ["proof (state)\nthis:\n  x div base ^ i mod base =\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "have \"\\<dots> = x mod base^n div base^i mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n    x mod base ^ n div base ^ i mod base", "using div_distrib[where a=\"x div base^n\" and b = \"x mod base^n\"]\n        that"], ["proof (prove)\nusing this:\n  ?i < ?n \\<Longrightarrow>\n  (x div base ^ n * base ^ ?n + x mod base ^ n) div base ^ ?i mod base =\n  x mod base ^ n div base ^ ?i mod base\n  i < n\n\ngoal (1 subgoal):\n 1. (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n    x mod base ^ n div base ^ i mod base", "by auto"], ["proof (state)\nthis:\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n  x mod base ^ n div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "finally"], ["proof (chain)\npicking this:\n  x div base ^ i mod base = x mod base ^ n div base ^ i mod base", "show ?thesis"], ["proof (prove)\nusing this:\n  x div base ^ i mod base = x mod base ^ n div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "by simp"], ["proof (state)\nthis:\n  x mod base ^ n div base ^ i mod base = x div base ^ i mod base\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i < n \\<Longrightarrow>\n  x mod base ^ n div base ^ ?i mod base = x div base ^ ?i mod base\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "have \"x = (x_n mod base)*base^n + x_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x_n mod base * base ^ n + x_less", "unfolding \\<open>x_n mod base=x_n\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x_n * base ^ n + x_less", "using x_n_def x_less_def div_mod_decomp"], ["proof (prove)\nusing this:\n  x_n = x div base ^ n\n  x_less = x mod base ^ n\n  ?A = ?A div ?n * ?n + ?A mod ?n\n\ngoal (1 subgoal):\n 1. x = x_n * base ^ n + x_less", "by blast"], ["proof (state)\nthis:\n  x = x_n mod base * base ^ n + x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "also"], ["proof (state)\nthis:\n  x = x_n mod base * base ^ n + x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "have \"\\<dots> = (x div base^n mod base) * base^n + \n                (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_n mod base * base ^ n + x_less =\n    x div base ^ n mod base * base ^ n +\n    (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "using IH_x_less x_less_def x_less_i_eq_x_i x_n_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\n  x_less = x mod base ^ n\n  ?i < n \\<Longrightarrow>\n  x mod base ^ n div base ^ ?i mod base = x div base ^ ?i mod base\n  x_n = x div base ^ n\n\ngoal (1 subgoal):\n 1. x_n mod base * base ^ n + x_less =\n    x div base ^ n mod base * base ^ n +\n    (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "by auto"], ["proof (state)\nthis:\n  x_n mod base * base ^ n + x_less =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       \\<lbrakk>\\<And>x.\n                   x < base ^ n \\<Longrightarrow>\n                   (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x;\n        x < base ^ Suc n\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>i<Suc n.\n                             x div base ^ i mod base * base ^ i) =\n                         x", "finally"], ["proof (chain)\npicking this:\n  x =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "show ?case"], ["proof (prove)\nusing this:\n  x =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x", "using sum.atMost_Suc"], ["proof (prove)\nusing this:\n  x =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n  sum ?g {..Suc ?n} = sum ?g {..?n} + ?g (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Stronger formulation of above lemma.\\<close>"], ["", "lemma from_digits_digit': \n  \"from_digits n (digit x) = x mod (base ^ n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_digits n (digit x) = x mod base ^ n", "unfolding from_digits_altdef digit_altdef"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x div base ^ i mod base * base ^ i) = x mod base ^ n", "proof (induction n arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x mod base ^ 0\n 2. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x.\n       (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x mod base ^ 0\n 2. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x mod base ^ 0", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<0. x div base ^ i mod base * base ^ i) = x mod base ^ 0\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "case (Suc n)"], ["proof (state)\nthis:\n  (\\<Sum>i<n. ?x div base ^ i mod base * base ^ i) = ?x mod base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "define x_less where \"x_less = x mod base^n\""], ["proof (state)\nthis:\n  x_less = x mod base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "define x_n where \"x_n = x div base^n mod base\""], ["proof (state)\nthis:\n  x_n = x div base ^ n mod base\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "have \"x_less < base^n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_less < base ^ n", "using x_less_def base_pos \n      mod_less_divisor"], ["proof (prove)\nusing this:\n  x_less = x mod base ^ n\n  0 < base\n  0 < ?n \\<Longrightarrow> ?m mod ?n < ?n\n\ngoal (1 subgoal):\n 1. x_less < base ^ n", "by presburger"], ["proof (state)\nthis:\n  x_less < base ^ n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "then"], ["proof (chain)\npicking this:\n  x_less < base ^ n", "have IH_x_less:\n    \"(\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\""], ["proof (prove)\nusing this:\n  x_less < base ^ n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less", "using Suc.IH"], ["proof (prove)\nusing this:\n  x_less < base ^ n\n  (\\<Sum>i<n. ?x div base ^ i mod base * base ^ i) = ?x mod base ^ n\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "have \"x_n < base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_n < base", "using base_pos mod_less_divisor x_n_def"], ["proof (prove)\nusing this:\n  0 < base\n  0 < ?n \\<Longrightarrow> ?m mod ?n < ?n\n  x_n = x div base ^ n mod base\n\ngoal (1 subgoal):\n 1. x_n < base", "by blast"], ["proof (state)\nthis:\n  x_n < base\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "then"], ["proof (chain)\npicking this:\n  x_n < base", "have \"x_n mod base = x_n\""], ["proof (prove)\nusing this:\n  x_n < base\n\ngoal (1 subgoal):\n 1. x_n mod base = x_n", "by simp"], ["proof (state)\nthis:\n  x_n mod base = x_n\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "have x_less_i_eq_x_i:\"x mod base^n div base ^i mod base = \n    x div base^i mod base\" if \"i<n\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "have \"x div base^i mod base = \n      ((x div base^n) * base^n + x mod base^n) div base^i mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x div base ^ i mod base =\n    (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base", "using div_mult_mod_eq[of x \"base^n\"]"], ["proof (prove)\nusing this:\n  x div base ^ n * base ^ n + x mod base ^ n = x\n\ngoal (1 subgoal):\n 1. x div base ^ i mod base =\n    (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base", "by simp"], ["proof (state)\nthis:\n  x div base ^ i mod base =\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "also"], ["proof (state)\nthis:\n  x div base ^ i mod base =\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "have \"\\<dots> = x mod base^n div base^i mod base\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n    x mod base ^ n div base ^ i mod base", "using div_distrib[where a=\"x div base^n\" and b = \"x mod base^n\"] \n        that"], ["proof (prove)\nusing this:\n  ?i < ?n \\<Longrightarrow>\n  (x div base ^ n * base ^ ?n + x mod base ^ n) div base ^ ?i mod base =\n  x mod base ^ n div base ^ ?i mod base\n  i < n\n\ngoal (1 subgoal):\n 1. (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n    x mod base ^ n div base ^ i mod base", "by auto"], ["proof (state)\nthis:\n  (x div base ^ n * base ^ n + x mod base ^ n) div base ^ i mod base =\n  x mod base ^ n div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "finally"], ["proof (chain)\npicking this:\n  x div base ^ i mod base = x mod base ^ n div base ^ i mod base", "show ?thesis"], ["proof (prove)\nusing this:\n  x div base ^ i mod base = x mod base ^ n div base ^ i mod base\n\ngoal (1 subgoal):\n 1. x mod base ^ n div base ^ i mod base = x div base ^ i mod base", "by simp"], ["proof (state)\nthis:\n  x mod base ^ n div base ^ i mod base = x div base ^ i mod base\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i < n \\<Longrightarrow>\n  x mod base ^ n div base ^ ?i mod base = x div base ^ ?i mod base\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "have \"x mod base^Suc n = x_n*base^n + x_less\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x mod base ^ Suc n = x_n * base ^ n + x_less", "by (metis mod_mult2_eq mult.commute power_Suc2 x_less_def x_n_def)"], ["proof (state)\nthis:\n  x mod base ^ Suc n = x_n * base ^ n + x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "also"], ["proof (state)\nthis:\n  x mod base ^ Suc n = x_n * base ^ n + x_less\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "have \"\\<dots> = (x div base^n mod base) * base^n + \n                (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x_n * base ^ n + x_less =\n    x div base ^ n mod base * base ^ n +\n    (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "using IH_x_less x_less_def x_less_i_eq_x_i x_n_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n. x_less div base ^ i mod base * base ^ i) = x_less\n  x_less = x mod base ^ n\n  ?i < n \\<Longrightarrow>\n  x mod base ^ n div base ^ ?i mod base = x div base ^ ?i mod base\n  x_n = x div base ^ n mod base\n\ngoal (1 subgoal):\n 1. x_n * base ^ n + x_less =\n    x div base ^ n mod base * base ^ n +\n    (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "by auto"], ["proof (state)\nthis:\n  x_n * base ^ n + x_less =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n\ngoal (1 subgoal):\n 1. \\<And>n x.\n       (\\<And>x.\n           (\\<Sum>i<n. x div base ^ i mod base * base ^ i) =\n           x mod base ^ n) \\<Longrightarrow>\n       (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) =\n       x mod base ^ Suc n", "finally"], ["proof (chain)\npicking this:\n  x mod base ^ Suc n =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)", "show ?case"], ["proof (prove)\nusing this:\n  x mod base ^ Suc n =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x mod base ^ Suc n", "using sum.atMost_Suc"], ["proof (prove)\nusing this:\n  x mod base ^ Suc n =\n  x div base ^ n mod base * base ^ n +\n  (\\<Sum>i<n. x div base ^ i mod base * base ^ i)\n  sum ?g {..Suc ?n} = sum ?g {..?n} + ?g (Suc ?n)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x mod base ^ Suc n", "by (simp add: add.commute)"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc n. x div base ^ i mod base * base ^ i) = x mod base ^ Suc n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}