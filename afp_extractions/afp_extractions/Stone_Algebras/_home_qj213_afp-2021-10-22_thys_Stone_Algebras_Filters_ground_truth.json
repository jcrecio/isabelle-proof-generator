{"file_name": "/home/qj213/afp-2021-10-22/thys/Stone_Algebras/Filters.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stone_Algebras", "problem_names": ["lemma filter_map_filter:\n  assumes \"filter F\"\n      and \"mono f\"\n      and \"\\<forall>x y . f x \\<le> y \\<longrightarrow> (\\<exists>z . x \\<le> z \\<and> y = f z)\"\n    shows \"filter (f ` F)\"", "lemma self_in_downset [simp]:\n  \"x \\<in> \\<down>x\"", "lemma self_in_upset [simp]:\n  \"x \\<in> \\<up>x\"", "lemma up_filter [simp]:\n  \"filter (\\<up>x)\"", "lemma up_set_up_set [simp]:\n  \"is_up_set (\\<Up>X)\"", "lemma up_injective:\n  \"\\<up>x = \\<up>y \\<Longrightarrow> x = y\"", "lemma up_antitone:\n  \"x \\<le> y \\<longleftrightarrow> \\<up>y \\<subseteq> \\<up>x\"", "lemma bot_in_downset [simp]:\n  \"bot \\<in> \\<down>x\"", "lemma down_bot [simp]:\n  \"\\<down>bot = {bot}\"", "lemma up_bot [simp]:\n  \"\\<up>bot = UNIV\"", "lemma ultra_filter:\n  assumes \"proper_filter F\"\n    shows \"\\<exists>G . ultra_filter G \\<and> F \\<subseteq> G\"", "lemma down_top [simp]:\n  \"\\<down>top = UNIV\"", "lemma top_in_upset [simp]:\n  \"top \\<in> \\<up>x\"", "lemma up_top [simp]:\n  \"\\<up>top = {top}\"", "lemma filter_top [simp]:\n  \"filter {top}\"", "lemma top_in_filter [simp]:\n  \"filter F \\<Longrightarrow> top \\<in> F\"", "lemma proper_filter_exists:\n  \"\\<exists>F . proper_filter F\"", "lemma ultra_filter_exists:\n  \"\\<exists>F . ultra_filter F\"", "lemma proper_filter_top:\n  \"proper_filter {top}\"", "lemma ultra_filter_top:\n  \"\\<exists>G . ultra_filter G \\<and> top \\<in> G\"", "lemma filter_inf_closed:\n  \"filter F \\<Longrightarrow> x \\<in> F \\<Longrightarrow> y \\<in> F \\<Longrightarrow> x \\<sqinter> y \\<in> F\"", "lemma filter_univ:\n  \"filter UNIV\"", "lemma filter_sup:\n  assumes \"filter F\"\n      and \"filter G\"\n    shows \"filter (filter_sup F G)\"", "lemma filter_sup_left_upper_bound:\n  assumes \"filter G\"\n    shows \"F \\<subseteq> filter_sup F G\"", "lemma filter_sup_symmetric:\n  \"filter_sup F G = filter_sup G F\"", "lemma filter_sup_right_upper_bound:\n  \"filter F \\<Longrightarrow> G \\<subseteq> filter_sup F G\"", "lemma filter_sup_least_upper_bound:\n  assumes \"filter H\"\n      and \"F \\<subseteq> H\"\n      and \"G \\<subseteq> H\"\n    shows \"filter_sup F G \\<subseteq> H\"", "lemma filter_sup_left_isotone:\n  \"G \\<subseteq> H \\<Longrightarrow> filter_sup G F \\<subseteq> filter_sup H F\"", "lemma filter_sup_right_isotone:\n  \"G \\<subseteq> H \\<Longrightarrow> filter_sup F G \\<subseteq> filter_sup F H\"", "lemma filter_sup_right_isotone_var:\n  \"filter_sup F (G \\<inter> H) \\<subseteq> filter_sup F H\"", "lemma up_dist_inf:\n  \"\\<up>(x \\<sqinter> y) = filter_sup (\\<up>x) (\\<up>y)\"", "lemma filter_inf_filter [simp]:\n  assumes \"filter F\"\n    shows \"filter (\\<Up>{ y . \\<exists>z\\<in>F . x \\<sqinter> z = y})\"", "lemma filter_inf:\n  assumes \"filter F\"\n      and \"filter G\"\n    shows \"filter (F \\<inter> G)\"", "lemma simp_filter [simp]:\n  \"filter (Rep_filter x)\"", "lemma up_dist_sup:\n  \"\\<up>(x \\<squnion> y) = \\<up>x \\<inter> \\<up>y\"", "lemma up_filter_dist_inf:\n  \"up_filter ((x::'a::lattice) \\<sqinter> y) = up_filter x \\<squnion> up_filter y\"", "lemma up_filter_dist_sup:\n  \"up_filter ((x::'a::lattice) \\<squnion> y) = up_filter x \\<sqinter> up_filter y\"", "lemma up_filter_injective:\n  \"up_filter x = up_filter y \\<Longrightarrow> x = y\"", "lemma up_filter_antitone:\n  \"x \\<le> y \\<longleftrightarrow> up_filter y \\<le> up_filter x\"", "lemma filter_map_filter:\n  assumes \"mono f\"\n      and \"\\<forall>x y . f x \\<le> y \\<longrightarrow> (\\<exists>z . x \\<le> z \\<and> y = f z)\"\n    shows \"filter (f ` Rep_filter F)\"", "lemma filter_sup_left_dist_inf:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter H\"\n    shows \"filter_sup F (G \\<inter> H) = filter_sup F G \\<inter> filter_sup F H\"", "lemma filter_inf_principal_rep:\n  \"F \\<inter> G = \\<up>z \\<Longrightarrow> (\\<exists>x\\<in>F . \\<exists>y\\<in>G . z = x \\<squnion> y)\"", "lemma filter_sup_principal_rep:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter_sup F G = \\<up>z\"\n    shows \"\\<exists>x\\<in>F . \\<exists>y\\<in>G . z = x \\<sqinter> y\"", "lemma inf_sup_principal_aux:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"is_principal_up (filter_sup F G)\"\n      and \"is_principal_up (F \\<inter> G)\"\n    shows \"is_principal_up F\"", "lemma inf_sup_principal:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"is_principal_up (filter_sup F G)\"\n      and \"is_principal_up (F \\<inter> G)\"\n    shows \"is_principal_up F \\<and> is_principal_up G\"", "lemma filter_sup_absorb_inf: \"filter F \\<Longrightarrow> filter G \\<Longrightarrow> filter_sup (F \\<inter> G) G = G\"", "lemma filter_inf_absorb_sup: \"filter F \\<Longrightarrow> filter G \\<Longrightarrow> filter_sup F G \\<inter> G = G\"", "lemma filter_inf_right_dist_sup:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter H\"\n    shows \"filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)\"", "lemma ultra_filter_prime:\n  assumes \"ultra_filter F\"\n    shows \"prime_filter F\"", "lemma up_dist_inf_inter:\n  assumes \"is_up_set S\"\n    shows \"\\<up>(x \\<sqinter> y) \\<inter> S = filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\"", "lemma prime_filter:\n  \"proper_filter F \\<Longrightarrow> \\<exists>G . prime_filter G \\<and> F \\<subseteq> G\"", "lemma complemented_filter_inf_principal:\n  assumes \"filter_complements F G\"\n    shows \"is_principal_up (F \\<inter> \\<up>x)\""], "translations": [["", "lemma filter_map_filter:\n  assumes \"filter F\"\n      and \"mono f\"\n      and \"\\<forall>x y . f x \\<le> y \\<longrightarrow> (\\<exists>z . x \\<le> z \\<and> y = f z)\"\n    shows \"filter (f ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (f ` F)", "proof (unfold ord_class.filter_def, intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. f ` F \\<noteq> {}\n 2. \\<forall>x\\<in>f ` F.\n       \\<forall>y\\<in>f ` F.\n          \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y\n 3. is_up_set (f ` F)", "show \"f ` F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f ` F \\<noteq> {}", "using assms(1) ord_class.filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. f ` F \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  f ` F \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>f ` F.\n       \\<forall>y\\<in>f ` F.\n          \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y\n 2. is_up_set (f ` F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>f ` F.\n       \\<forall>y\\<in>f ` F.\n          \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y\n 2. is_up_set (f ` F)", "show \"\\<forall>x\\<in>f ` F . \\<forall>y\\<in>f ` F . \\<exists>z\\<in>f ` F . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>f ` F.\n       \\<forall>y\\<in>f ` F.\n          \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "proof (intro ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> f ` F; y \\<in> f ` F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> f ` F; y \\<in> f ` F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "assume \"x \\<in> f ` F\" and \"y \\<in> f ` F\""], ["proof (state)\nthis:\n  x \\<in> f ` F\n  y \\<in> f ` F\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> f ` F; y \\<in> f ` F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "then"], ["proof (chain)\npicking this:\n  x \\<in> f ` F\n  y \\<in> f ` F", "obtain u v where 1: \"x = f u \\<and> u \\<in> F \\<and> y = f v \\<and> v \\<in> F\""], ["proof (prove)\nusing this:\n  x \\<in> f ` F\n  y \\<in> f ` F\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        x = f u \\<and>\n        u \\<in> F \\<and> y = f v \\<and> v \\<in> F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = f u \\<and> u \\<in> F \\<and> y = f v \\<and> v \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> f ` F; y \\<in> f ` F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "then"], ["proof (chain)\npicking this:\n  x = f u \\<and> u \\<in> F \\<and> y = f v \\<and> v \\<in> F", "obtain w where \"w \\<le> u \\<and> w \\<le> v \\<and> w \\<in> F\""], ["proof (prove)\nusing this:\n  x = f u \\<and> u \\<in> F \\<and> y = f v \\<and> v \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        w \\<le> u \\<and> w \\<le> v \\<and> w \\<in> F \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson assms(1) ord_class.filter_def)"], ["proof (state)\nthis:\n  w \\<le> u \\<and> w \\<le> v \\<and> w \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> f ` F; y \\<in> f ` F\\<rbrakk>\n       \\<Longrightarrow> \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "thus \"\\<exists>z\\<in>f ` F . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\nusing this:\n  w \\<le> u \\<and> w \\<le> v \\<and> w \\<in> F\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "using 1 assms(2) mono_def image_eqI"], ["proof (prove)\nusing this:\n  w \\<le> u \\<and> w \\<le> v \\<and> w \\<in> F\n  x = f u \\<and> u \\<in> F \\<and> y = f v \\<and> v \\<in> F\n  mono f\n  mono ?f = (\\<forall>x y. x \\<le> y \\<longrightarrow> ?f x \\<le> ?f y)\n  \\<lbrakk>?b = ?f ?x; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> ?f ` ?A\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y", "by blast"], ["proof (state)\nthis:\n  \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>f ` F.\n     \\<forall>y\\<in>f ` F. \\<exists>z\\<in>f ` F. z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. is_up_set (f ` F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_up_set (f ` F)", "show \"is_up_set (f ` F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (f ` F)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f ` F \\<Longrightarrow> \\<forall>y\\<ge>x. y \\<in> f ` F", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f ` F \\<Longrightarrow> \\<forall>y\\<ge>x. y \\<in> f ` F", "assume \"x \\<in> f ` F\""], ["proof (state)\nthis:\n  x \\<in> f ` F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f ` F \\<Longrightarrow> \\<forall>y\\<ge>x. y \\<in> f ` F", "then"], ["proof (chain)\npicking this:\n  x \\<in> f ` F", "obtain u where 1: \"x = f u \\<and> u \\<in> F\""], ["proof (prove)\nusing this:\n  x \\<in> f ` F\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        x = f u \\<and> u \\<in> F \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x = f u \\<and> u \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> f ` F \\<Longrightarrow> \\<forall>y\\<ge>x. y \\<in> f ` F", "show \"\\<forall>y . x \\<le> y \\<longrightarrow> y \\<in> f ` F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>x. y \\<in> f ` F", "proof (rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. x \\<le> y \\<Longrightarrow> y \\<in> f ` F", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. x \\<le> y \\<Longrightarrow> y \\<in> f ` F", "assume \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>y. x \\<le> y \\<Longrightarrow> y \\<in> f ` F", "hence \"f u \\<le> y\""], ["proof (prove)\nusing this:\n  x \\<le> y\n\ngoal (1 subgoal):\n 1. f u \\<le> y", "using 1"], ["proof (prove)\nusing this:\n  x \\<le> y\n  x = f u \\<and> u \\<in> F\n\ngoal (1 subgoal):\n 1. f u \\<le> y", "by simp"], ["proof (state)\nthis:\n  f u \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>y. x \\<le> y \\<Longrightarrow> y \\<in> f ` F", "then"], ["proof (chain)\npicking this:\n  f u \\<le> y", "obtain z where \"u \\<le> z \\<and> y = f z\""], ["proof (prove)\nusing this:\n  f u \\<le> y\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        u \\<le> z \\<and> y = f z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(3)"], ["proof (prove)\nusing this:\n  f u \\<le> y\n  \\<forall>x y. f x \\<le> y \\<longrightarrow> (\\<exists>z\\<ge>x. y = f z)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        u \\<le> z \\<and> y = f z \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<le> z \\<and> y = f z\n\ngoal (1 subgoal):\n 1. \\<And>y. x \\<le> y \\<Longrightarrow> y \\<in> f ` F", "thus \"y \\<in> f ` F\""], ["proof (prove)\nusing this:\n  u \\<le> z \\<and> y = f z\n\ngoal (1 subgoal):\n 1. y \\<in> f ` F", "by (meson 1 assms(1) image_iff ord_class.filter_def)"], ["proof (state)\nthis:\n  y \\<in> f ` F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>x. y \\<in> f ` F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_up_set (f ` F)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context order\nbegin"], ["", "lemma self_in_downset [simp]:\n  \"x \\<in> \\<down>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<down>x", "by simp"], ["", "lemma self_in_upset [simp]:\n  \"x \\<in> \\<up>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<up>x", "by simp"], ["", "lemma up_filter [simp]:\n  \"filter (\\<up>x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<up>x)", "using filter_def order_lesseq_imp"], ["proof (prove)\nusing this:\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n  (\\<forall>z\\<ge>?x. ?y \\<le> z) = (?y \\<le> ?x)\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<up>x)", "by auto"], ["", "lemma up_set_up_set [simp]:\n  \"is_up_set (\\<Up>X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (\\<Up>X)", "using order.trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. is_up_set (\\<Up>X)", "by fastforce"], ["", "lemma up_injective:\n  \"\\<up>x = \\<up>y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>x = \\<up>y \\<Longrightarrow> x = y", "using antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<up>x = \\<up>y \\<Longrightarrow> x = y", "by auto"], ["", "lemma up_antitone:\n  \"x \\<le> y \\<longleftrightarrow> \\<up>y \\<subseteq> \\<up>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (\\<up>y \\<subseteq> \\<up>x)", "by auto"], ["", "end"], ["", "context order_bot\nbegin"], ["", "lemma bot_in_downset [simp]:\n  \"bot \\<in> \\<down>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bot \\<in> \\<down>x", "by simp"], ["", "lemma down_bot [simp]:\n  \"\\<down>bot = {bot}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<down>bot = {bot}", "by (simp add: bot_unique)"], ["", "lemma up_bot [simp]:\n  \"\\<up>bot = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>bot = UNIV", "by simp"], ["", "text \\<open>\nThe following result is the ultrafilter lemma, generalised from \\cite[10.17]{DaveyPriestley2002} to orders with a least element.\nIts proof uses Isabelle/HOL's \\<open>Zorn_Lemma\\<close>, which requires closure under union of arbitrary (possibly empty) chains.\nActually, the proof does not use any of the underlying order properties except \\<open>bot_least\\<close>.\n\\<close>"], ["", "lemma ultra_filter:\n  assumes \"proper_filter F\"\n    shows \"\\<exists>G . ultra_filter G \\<and> F \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "let ?A = \"{ G . (proper_filter G \\<and> F \\<subseteq> G) \\<or> G = {} }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "have \"\\<forall>C \\<in> chains ?A . \\<Union>C \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C\\<in>chains\n                    {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                        G = {}}.\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "fix C :: \"'a set set\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "let ?D = \"C - {{}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "assume 1: \"C \\<in> chains ?A\""], ["proof (state)\nthis:\n  C \\<in> chains {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "hence 2: \"\\<forall>x\\<in>\\<Union>?D . \\<exists>H\\<in>?D . x \\<in> H \\<and> proper_filter H\""], ["proof (prove)\nusing this:\n  C \\<in> chains {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>\\<Union> (C - {{}}).\n       \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H", "using chainsD2"], ["proof (prove)\nusing this:\n  C \\<in> chains {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n  ?c \\<in> chains ?S \\<Longrightarrow> ?c \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>\\<Union> (C - {{}}).\n       \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>\\<Union> (C - {{}}).\n     \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "have 3: \"\\<Union>?D = \\<Union>C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}}) = \\<Union> C", "by blast"], ["proof (state)\nthis:\n  \\<Union> (C - {{}}) = \\<Union> C\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "have \"\\<Union>?D \\<in> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "proof (cases \"?D = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C - {{}} = {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n 2. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "assume \"?D = {}\""], ["proof (state)\nthis:\n  C - {{}} = {}\n\ngoal (2 subgoals):\n 1. C - {{}} = {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n 2. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "thus ?thesis"], ["proof (prove)\nusing this:\n  C - {{}} = {}\n\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (C - {{}})\n  \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "assume 4: \"?D \\<noteq> {}\""], ["proof (state)\nthis:\n  C - {{}} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "then"], ["proof (chain)\npicking this:\n  C - {{}} \\<noteq> {}", "obtain G where \"G \\<in> ?D\""], ["proof (prove)\nusing this:\n  C - {{}} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>G. G \\<in> C - {{}} \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  G \\<in> C - {{}}\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "hence 5: \"F \\<subseteq> \\<Union>?D\""], ["proof (prove)\nusing this:\n  G \\<in> C - {{}}\n\ngoal (1 subgoal):\n 1. F \\<subseteq> \\<Union> (C - {{}})", "using 1 chainsD2"], ["proof (prove)\nusing this:\n  G \\<in> C - {{}}\n  C \\<in> chains {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n  ?c \\<in> chains ?S \\<Longrightarrow> ?c \\<subseteq> ?S\n\ngoal (1 subgoal):\n 1. F \\<subseteq> \\<Union> (C - {{}})", "by blast"], ["proof (state)\nthis:\n  F \\<subseteq> \\<Union> (C - {{}})\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "have 6: \"is_up_set (\\<Union>?D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (\\<Union> (C - {{}}))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n       \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n       \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "assume \"x \\<in> \\<Union>?D\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> (C - {{}})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n       \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (C - {{}})", "obtain H where \"x \\<in> H \\<and> H \\<in> ?D \\<and> filter H\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (C - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        x \\<in> H \\<and>\n        H \\<in> C - {{}} \\<and> ord_class.filter H \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 2"], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (C - {{}})\n  \\<forall>x\\<in>\\<Union> (C - {{}}).\n     \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        x \\<in> H \\<and>\n        H \\<in> C - {{}} \\<and> ord_class.filter H \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> H \\<and> H \\<in> C - {{}} \\<and> ord_class.filter H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n       \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "thus \"\\<forall>y . x \\<le> y \\<longrightarrow> y\\<in>\\<Union>?D\""], ["proof (prove)\nusing this:\n  x \\<in> H \\<and> H \\<in> C - {{}} \\<and> ord_class.filter H\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "using filter_def UnionI"], ["proof (prove)\nusing this:\n  x \\<in> H \\<and> H \\<in> C - {{}} \\<and> ord_class.filter H\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n  \\<lbrakk>?X \\<in> ?C; ?A \\<in> ?X\\<rbrakk>\n  \\<Longrightarrow> ?A \\<in> \\<Union> ?C\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>y\\<ge>x. y \\<in> \\<Union> (C - {{}})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_up_set (\\<Union> (C - {{}}))\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "have 7: \"\\<Union>?D \\<noteq> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}}) \\<noteq> UNIV", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV \\<Longrightarrow> False", "assume \"\\<not> \\<Union>?D \\<noteq> UNIV\""], ["proof (state)\nthis:\n  \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV", "obtain H where \"bot \\<in> H \\<and> proper_filter H\""], ["proof (prove)\nusing this:\n  \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        bot \\<in> H \\<and> proper_filter H \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 2"], ["proof (prove)\nusing this:\n  \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV\n  \\<forall>x\\<in>\\<Union> (C - {{}}).\n     \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. (\\<And>H.\n        bot \\<in> H \\<and> proper_filter H \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bot \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. \\<not> \\<Union> (C - {{}}) \\<noteq> UNIV \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  bot \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. False", "by (meson UNIV_I bot_least filter_def subsetI subset_antisym)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> (C - {{}}) \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "{"], ["proof (state)\nthis:\n  \\<Union> (C - {{}}) \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "assume \"x\\<in>\\<Union>?D \\<and> y\\<in>\\<Union>?D\""], ["proof (state)\nthis:\n  x \\<in> \\<Union> (C - {{}}) \\<and> y \\<in> \\<Union> (C - {{}})\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "then"], ["proof (chain)\npicking this:\n  x \\<in> \\<Union> (C - {{}}) \\<and> y \\<in> \\<Union> (C - {{}})", "obtain H I where 8: \"x \\<in> H \\<and> H \\<in> ?D \\<and> filter H \\<and> y \\<in> I \\<and> I \\<in> ?D \\<and> filter I\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (C - {{}}) \\<and> y \\<in> \\<Union> (C - {{}})\n\ngoal (1 subgoal):\n 1. (\\<And>H I.\n        x \\<in> H \\<and>\n        H \\<in> C - {{}} \\<and>\n        ord_class.filter H \\<and>\n        y \\<in> I \\<and>\n        I \\<in> C - {{}} \\<and> ord_class.filter I \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 2"], ["proof (prove)\nusing this:\n  x \\<in> \\<Union> (C - {{}}) \\<and> y \\<in> \\<Union> (C - {{}})\n  \\<forall>x\\<in>\\<Union> (C - {{}}).\n     \\<exists>H\\<in>C - {{}}. x \\<in> H \\<and> proper_filter H\n\ngoal (1 subgoal):\n 1. (\\<And>H I.\n        x \\<in> H \\<and>\n        H \\<in> C - {{}} \\<and>\n        ord_class.filter H \\<and>\n        y \\<in> I \\<and>\n        I \\<in> C - {{}} \\<and> ord_class.filter I \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "have \"\\<exists>z\\<in>\\<Union>?D . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "proof (cases \"H \\<subseteq> I\")"], ["proof (state)\ngoal (2 subgoals):\n 1. H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n 2. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "assume \"H \\<subseteq> I\""], ["proof (state)\nthis:\n  H \\<subseteq> I\n\ngoal (2 subgoals):\n 1. H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n 2. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "hence \"\\<exists>z\\<in>I . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\nusing this:\n  H \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>I. z \\<le> x \\<and> z \\<le> y", "using 8"], ["proof (prove)\nusing this:\n  H \\<subseteq> I\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>I. z \\<le> x \\<and> z \\<le> y", "by (metis subsetCE filter_def)"], ["proof (state)\nthis:\n  \\<exists>z\\<in>I. z \\<le> x \\<and> z \\<le> y\n\ngoal (2 subgoals):\n 1. H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n 2. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>I. z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "using 8"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>I. z \\<le> x \\<and> z \\<le> y\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "by (metis UnionI)"], ["proof (state)\nthis:\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "assume \"\\<not> (H \\<subseteq> I)\""], ["proof (state)\nthis:\n  \\<not> H \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "hence \"I \\<subseteq> H\""], ["proof (prove)\nusing this:\n  \\<not> H \\<subseteq> I\n\ngoal (1 subgoal):\n 1. I \\<subseteq> H", "using 1 8"], ["proof (prove)\nusing this:\n  \\<not> H \\<subseteq> I\n  C \\<in> chains {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. I \\<subseteq> H", "by (meson DiffE chainsD)"], ["proof (state)\nthis:\n  I \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "hence \"\\<exists>z\\<in>H . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\nusing this:\n  I \\<subseteq> H\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>H. z \\<le> x \\<and> z \\<le> y", "using 8"], ["proof (prove)\nusing this:\n  I \\<subseteq> H\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>H. z \\<le> x \\<and> z \\<le> y", "by (metis subsetCE filter_def)"], ["proof (state)\nthis:\n  \\<exists>z\\<in>H. z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. \\<not> H \\<subseteq> I \\<Longrightarrow>\n    \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>H. z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "using 8"], ["proof (prove)\nusing this:\n  \\<exists>z\\<in>H. z \\<le> x \\<and> z \\<le> y\n  x \\<in> H \\<and>\n  H \\<in> C - {{}} \\<and>\n  ord_class.filter H \\<and>\n  y \\<in> I \\<and> I \\<in> C - {{}} \\<and> ord_class.filter I\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y", "by (metis UnionI)"], ["proof (state)\nthis:\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "}"], ["proof (state)\nthis:\n  ?x2 \\<in> \\<Union> (C - {{}}) \\<and>\n  ?y2 \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> ?x2 \\<and> z \\<le> ?y2\n\ngoal (1 subgoal):\n 1. C - {{}} \\<noteq> {} \\<Longrightarrow>\n    \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<in> \\<Union> (C - {{}}) \\<and>\n  ?y2 \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> ?x2 \\<and> z \\<le> ?y2\n\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "using 4 5 6 7 filter_def"], ["proof (prove)\nusing this:\n  ?x2 \\<in> \\<Union> (C - {{}}) \\<and>\n  ?y2 \\<in> \\<Union> (C - {{}}) \\<Longrightarrow>\n  \\<exists>z\\<in>\\<Union> (C - {{}}). z \\<le> ?x2 \\<and> z \\<le> ?y2\n  C - {{}} \\<noteq> {}\n  F \\<subseteq> \\<Union> (C - {{}})\n  is_up_set (\\<Union> (C - {{}}))\n  \\<Union> (C - {{}}) \\<noteq> UNIV\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. \\<Union> (C - {{}})\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "by auto"], ["proof (state)\nthis:\n  \\<Union> (C - {{}})\n  \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Union> (C - {{}})\n  \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<And>C.\n       C \\<in> chains\n                {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<Longrightarrow>\n       \\<Union> C\n       \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "thus \"\\<Union>C \\<in> ?A\""], ["proof (prove)\nusing this:\n  \\<Union> (C - {{}})\n  \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<Union> C\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "using 3"], ["proof (prove)\nusing this:\n  \\<Union> (C - {{}})\n  \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n  \\<Union> (C - {{}}) = \\<Union> C\n\ngoal (1 subgoal):\n 1. \\<Union> C\n    \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}", "by simp"], ["proof (state)\nthis:\n  \\<Union> C \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>C\\<in>chains\n                  {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n     \\<Union> C\n     \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "hence \"\\<exists>M\\<in>?A . \\<forall>X\\<in>?A . M \\<subseteq> X \\<longrightarrow> X = M\""], ["proof (prove)\nusing this:\n  \\<forall>C\\<in>chains\n                  {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n     \\<Union> C\n     \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}\n\ngoal (1 subgoal):\n 1. \\<exists>M\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n       \\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                          G = {}}.\n          M \\<subseteq> X \\<longrightarrow> X = M", "by (rule Zorn_Lemma)"], ["proof (state)\nthis:\n  \\<exists>M\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n     \\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                        G = {}}.\n        M \\<subseteq> X \\<longrightarrow> X = M\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "then"], ["proof (chain)\npicking this:\n  \\<exists>M\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n     \\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                        G = {}}.\n        M \\<subseteq> X \\<longrightarrow> X = M", "obtain M where 9: \"M \\<in> ?A \\<and> (\\<forall>X\\<in>?A . M \\<subseteq> X \\<longrightarrow> X = M)\""], ["proof (prove)\nusing this:\n  \\<exists>M\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n     \\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                        G = {}}.\n        M \\<subseteq> X \\<longrightarrow> X = M\n\ngoal (1 subgoal):\n 1. (\\<And>M.\n        M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                    G = {}} \\<and>\n        (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or>\n                            G = {}}.\n            M \\<subseteq> X \\<longrightarrow> X = M) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "hence 10: \"M \\<noteq> {}\""], ["proof (prove)\nusing this:\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n\ngoal (1 subgoal):\n 1. M \\<noteq> {}", "using assms filter_def"], ["proof (prove)\nusing this:\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n  proper_filter F\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. M \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "{"], ["proof (state)\nthis:\n  M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "fix G"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "assume 11: \"proper_filter G \\<and> M \\<subseteq> G\""], ["proof (state)\nthis:\n  proper_filter G \\<and> M \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "hence \"F \\<subseteq> G\""], ["proof (prove)\nusing this:\n  proper_filter G \\<and> M \\<subseteq> G\n\ngoal (1 subgoal):\n 1. F \\<subseteq> G", "using 9 10"], ["proof (prove)\nusing this:\n  proper_filter G \\<and> M \\<subseteq> G\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n  M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. F \\<subseteq> G", "by blast"], ["proof (state)\nthis:\n  F \\<subseteq> G\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "hence \"M = G\""], ["proof (prove)\nusing this:\n  F \\<subseteq> G\n\ngoal (1 subgoal):\n 1. M = G", "using 9 11"], ["proof (prove)\nusing this:\n  F \\<subseteq> G\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n  proper_filter G \\<and> M \\<subseteq> G\n\ngoal (1 subgoal):\n 1. M = G", "by auto"], ["proof (state)\nthis:\n  M = G\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "}"], ["proof (state)\nthis:\n  proper_filter ?G2 \\<and> M \\<subseteq> ?G2 \\<Longrightarrow> M = ?G2\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "thus ?thesis"], ["proof (prove)\nusing this:\n  proper_filter ?G2 \\<and> M \\<subseteq> ?G2 \\<Longrightarrow> M = ?G2\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "using 9 10"], ["proof (prove)\nusing this:\n  proper_filter ?G2 \\<and> M \\<subseteq> ?G2 \\<Longrightarrow> M = ?G2\n  M \\<in> {G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}} \\<and>\n  (\\<forall>X\\<in>{G. proper_filter G \\<and> F \\<subseteq> G \\<or> G = {}}.\n      M \\<subseteq> X \\<longrightarrow> X = M)\n  M \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G", "by blast"], ["proof (state)\nthis:\n  \\<exists>G. ultra_filter G \\<and> F \\<subseteq> G\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context order_top\nbegin"], ["", "lemma down_top [simp]:\n  \"\\<down>top = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<down>top = UNIV", "by simp"], ["", "lemma top_in_upset [simp]:\n  \"top \\<in> \\<up>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. top \\<in> \\<up>x", "by simp"], ["", "lemma up_top [simp]:\n  \"\\<up>top = {top}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>top = {top}", "by (simp add: top_unique)"], ["", "lemma filter_top [simp]:\n  \"filter {top}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter {top}", "using filter_def top_unique"], ["proof (prove)\nusing this:\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n  (top \\<le> ?a) = (?a = top)\n\ngoal (1 subgoal):\n 1. ord_class.filter {top}", "by auto"], ["", "lemma top_in_filter [simp]:\n  \"filter F \\<Longrightarrow> top \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter F \\<Longrightarrow> top \\<in> F", "using filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. ord_class.filter F \\<Longrightarrow> top \\<in> F", "by fastforce"], ["", "end"], ["", "text \\<open>\nThe existence of proper filters and ultrafilters requires that the underlying order contains at least two elements.\n\\<close>"], ["", "context non_trivial_order\nbegin"], ["", "lemma proper_filter_exists:\n  \"\\<exists>F . proper_filter F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "from consistent"], ["proof (chain)\npicking this:\n  \\<exists>x y. x \\<noteq> y", "obtain x y :: 'a where \"x \\<noteq> y\""], ["proof (prove)\nusing this:\n  \\<exists>x y. x \\<noteq> y\n\ngoal (1 subgoal):\n 1. (\\<And>x y. x \\<noteq> y \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "hence \"\\<up>x \\<noteq> UNIV \\<or> \\<up>y \\<noteq> UNIV\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. \\<up>x \\<noteq> UNIV \\<or> \\<up>y \\<noteq> UNIV", "using antisym"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<up>x \\<noteq> UNIV \\<or> \\<up>y \\<noteq> UNIV", "by blast"], ["proof (state)\nthis:\n  \\<up>x \\<noteq> UNIV \\<or> \\<up>y \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "hence \"proper_filter (\\<up>x) \\<or> proper_filter (\\<up>y)\""], ["proof (prove)\nusing this:\n  \\<up>x \\<noteq> UNIV \\<or> \\<up>y \\<noteq> UNIV\n\ngoal (1 subgoal):\n 1. proper_filter (\\<up>x) \\<or> proper_filter (\\<up>y)", "by simp"], ["proof (state)\nthis:\n  proper_filter (\\<up>x) \\<or> proper_filter (\\<up>y)\n\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "thus ?thesis"], ["proof (prove)\nusing this:\n  proper_filter (\\<up>x) \\<or> proper_filter (\\<up>y)\n\ngoal (1 subgoal):\n 1. \\<exists>F. proper_filter F", "by blast"], ["proof (state)\nthis:\n  \\<exists>F. proper_filter F\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context non_trivial_order_bot\nbegin"], ["", "lemma ultra_filter_exists:\n  \"\\<exists>F . ultra_filter F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>F. ultra_filter F", "using ultra_filter proper_filter_exists"], ["proof (prove)\nusing this:\n  proper_filter ?F \\<Longrightarrow>\n  \\<exists>G. ultra_filter G \\<and> ?F \\<subseteq> G\n  \\<exists>F. proper_filter F\n\ngoal (1 subgoal):\n 1. \\<exists>F. ultra_filter F", "by blast"], ["", "end"], ["", "context non_trivial_bounded_order\nbegin"], ["", "lemma proper_filter_top:\n  \"proper_filter {top}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_filter {top}", "using bot_not_top filter_top"], ["proof (prove)\nusing this:\n  bot \\<noteq> top\n  ord_class.filter {top}\n\ngoal (1 subgoal):\n 1. proper_filter {top}", "by blast"], ["", "lemma ultra_filter_top:\n  \"\\<exists>G . ultra_filter G \\<and> top \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> top \\<in> G", "using ultra_filter proper_filter_top"], ["proof (prove)\nusing this:\n  proper_filter ?F \\<Longrightarrow>\n  \\<exists>G. ultra_filter G \\<and> ?F \\<subseteq> G\n  proper_filter {top}\n\ngoal (1 subgoal):\n 1. \\<exists>G. ultra_filter G \\<and> top \\<in> G", "by fastforce"], ["", "end"], ["", "subsection \\<open>Lattices\\<close>"], ["", "text \\<open>\nThis section develops the lattice structure of filters based on a semilattice structure of the underlying order.\nThe main results are that filters over a directed semilattice form a lattice with a greatest element and that filters over a bounded semilattice form a bounded lattice.\n\\<close>"], ["", "context semilattice_sup\nbegin"], ["", "abbreviation prime_filter :: \"'a set \\<Rightarrow> bool\"\n  where \"prime_filter F \\<equiv> proper_filter F \\<and> (\\<forall>x y . x \\<squnion> y \\<in> F \\<longrightarrow> x \\<in> F \\<or> y \\<in> F)\""], ["", "end"], ["", "context semilattice_inf\nbegin"], ["", "lemma filter_inf_closed:\n  \"filter F \\<Longrightarrow> x \\<in> F \\<Longrightarrow> y \\<in> F \\<Longrightarrow> x \\<sqinter> y \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ord_class.filter F; x \\<in> F; y \\<in> F\\<rbrakk>\n    \\<Longrightarrow> x \\<sqinter> y \\<in> F", "by (meson filter_def inf.boundedI)"], ["", "lemma filter_univ:\n  \"filter UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter UNIV", "by (meson UNIV_I UNIV_not_empty filter_def inf.cobounded1 inf.cobounded2)"], ["", "text \\<open>\nThe operation \\<open>filter_sup\\<close> is the join operation in the lattice of filters.\n\\<close>"], ["", "definition \"filter_sup F G \\<equiv> { z . \\<exists>x\\<in>F . \\<exists>y\\<in>G . x \\<sqinter> y \\<le> z }\""], ["", "lemma filter_sup:\n  assumes \"filter F\"\n      and \"filter G\"\n    shows \"filter (filter_sup F G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "have \"F \\<noteq> {} \\<and> G \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<and> G \\<noteq> {}", "using assms filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter G\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. F \\<noteq> {} \\<and> G \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  F \\<noteq> {} \\<and> G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "hence 1: \"filter_sup F G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  F \\<noteq> {} \\<and> G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<noteq> {}", "using filter_sup_def"], ["proof (prove)\nusing this:\n  F \\<noteq> {} \\<and> G \\<noteq> {}\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  filter_sup F G \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "have 2: \"\\<forall>x\\<in>filter_sup F G . \\<forall>y\\<in>filter_sup F G . \\<exists>z\\<in>filter_sup F G . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>filter_sup F G.\n       \\<forall>y\\<in>filter_sup F G.\n          \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<Longrightarrow>\n       \\<forall>y\\<in>filter_sup F G.\n          \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<Longrightarrow>\n       \\<forall>y\\<in>filter_sup F G.\n          \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "assume \"x\\<in>filter_sup F G\""], ["proof (state)\nthis:\n  x \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<Longrightarrow>\n       \\<forall>y\\<in>filter_sup F G.\n          \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "then"], ["proof (chain)\npicking this:\n  x \\<in> filter_sup F G", "obtain t u where 3: \"t \\<in> F \\<and> u \\<in> G \\<and> t \\<sqinter> u \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and> t \\<sqinter> u \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and> t \\<sqinter> u \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> F \\<and> u \\<in> G \\<and> t \\<sqinter> u \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<Longrightarrow>\n       \\<forall>y\\<in>filter_sup F G.\n          \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "show \"\\<forall>y\\<in>filter_sup F G . \\<exists>z\\<in>filter_sup F G . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>filter_sup F G.\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "assume \"y\\<in>filter_sup F G\""], ["proof (state)\nthis:\n  y \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "then"], ["proof (chain)\npicking this:\n  y \\<in> filter_sup F G", "obtain v w where 4: \"v \\<in> F \\<and> w \\<in> G \\<and> v \\<sqinter> w \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        v \\<in> F \\<and>\n        w \\<in> G \\<and> v \\<sqinter> w \\<le> y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  y \\<in> filter_sup F G\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        v \\<in> F \\<and>\n        w \\<in> G \\<and> v \\<sqinter> w \\<le> y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> F \\<and> w \\<in> G \\<and> v \\<sqinter> w \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "let ?z = \"(t \\<sqinter> v) \\<sqinter> (u \\<sqinter> w)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "have 5: \"?z \\<le> x \\<and> ?z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> x \\<and>\n    t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> y", "using 3 4"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and> u \\<in> G \\<and> t \\<sqinter> u \\<le> x\n  v \\<in> F \\<and> w \\<in> G \\<and> v \\<sqinter> w \\<le> y\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> x \\<and>\n    t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> y", "by (meson order.trans inf.cobounded1 inf.cobounded2 inf_mono)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> x \\<and>\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "have \"?z \\<in> filter_sup F G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<in> filter_sup F G", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w)\n    \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "using assms 3 4 filter_inf_closed"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter G\n  t \\<in> F \\<and> u \\<in> G \\<and> t \\<sqinter> u \\<le> x\n  v \\<in> F \\<and> w \\<in> G \\<and> v \\<sqinter> w \\<le> y\n  \\<lbrakk>ord_class.filter ?F; ?x \\<in> ?F; ?y \\<in> ?F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqinter> ?y \\<in> ?F\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w)\n    \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> filter_sup F G \\<Longrightarrow>\n       \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "thus \"\\<exists>z\\<in>filter_sup F G . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "using 5"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<in> filter_sup F G\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> x \\<and>\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) \\<le> y\n\ngoal (1 subgoal):\n 1. \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y", "by blast"], ["proof (state)\nthis:\n  \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>y\\<in>filter_sup F G.\n     \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>filter_sup F G.\n     \\<forall>y\\<in>filter_sup F G.\n        \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "have \"\\<forall>x\\<in>filter_sup F G . \\<forall>y . x \\<le> y \\<longrightarrow> y \\<in> filter_sup F G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (filter_sup F G)", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set\n     {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "using order_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. is_up_set\n     {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  is_up_set (filter_sup F G)\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_up_set (filter_sup F G)\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "using 1 2 filter_def"], ["proof (prove)\nusing this:\n  is_up_set (filter_sup F G)\n  filter_sup F G \\<noteq> {}\n  \\<forall>x\\<in>filter_sup F G.\n     \\<forall>y\\<in>filter_sup F G.\n        \\<exists>z\\<in>filter_sup F G. z \\<le> x \\<and> z \\<le> y\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. ord_class.filter (filter_sup F G)", "by presburger"], ["proof (state)\nthis:\n  ord_class.filter (filter_sup F G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filter_sup_left_upper_bound:\n  assumes \"filter G\"\n    shows \"F \\<subseteq> filter_sup F G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> filter_sup F G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. F \\<subseteq> filter_sup F G", "from assms"], ["proof (chain)\npicking this:\n  ord_class.filter G", "obtain y where \"y\\<in>G\""], ["proof (prove)\nusing this:\n  ord_class.filter G\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> G \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using all_not_in_conv filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter G\n  (\\<forall>x. x \\<notin> ?A) = (?A = {})\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> G \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. F \\<subseteq> filter_sup F G", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. F \\<subseteq> filter_sup F G", "unfolding filter_sup_def"], ["proof (prove)\nusing this:\n  y \\<in> G\n\ngoal (1 subgoal):\n 1. F \\<subseteq> {z. \\<exists>x\\<in>F.\n                         \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "using inf.cobounded1"], ["proof (prove)\nusing this:\n  y \\<in> G\n  ?a \\<sqinter> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. F \\<subseteq> {z. \\<exists>x\\<in>F.\n                         \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  F \\<subseteq> filter_sup F G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filter_sup_symmetric:\n  \"filter_sup F G = filter_sup G F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G = filter_sup G F", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} =\n    {z. \\<exists>x\\<in>G. \\<exists>y\\<in>F. x \\<sqinter> y \\<le> z}", "using inf.commute"], ["proof (prove)\nusing this:\n  ?a \\<sqinter> ?b = ?b \\<sqinter> ?a\n\ngoal (1 subgoal):\n 1. {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} =\n    {z. \\<exists>x\\<in>G. \\<exists>y\\<in>F. x \\<sqinter> y \\<le> z}", "by fastforce"], ["", "lemma filter_sup_right_upper_bound:\n  \"filter F \\<Longrightarrow> G \\<subseteq> filter_sup F G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter F \\<Longrightarrow> G \\<subseteq> filter_sup F G", "using filter_sup_symmetric filter_sup_left_upper_bound"], ["proof (prove)\nusing this:\n  filter_sup ?F ?G = filter_sup ?G ?F\n  ord_class.filter ?G \\<Longrightarrow> ?F \\<subseteq> filter_sup ?F ?G\n\ngoal (1 subgoal):\n 1. ord_class.filter F \\<Longrightarrow> G \\<subseteq> filter_sup F G", "by simp"], ["", "lemma filter_sup_least_upper_bound:\n  assumes \"filter H\"\n      and \"F \\<subseteq> H\"\n      and \"G \\<subseteq> H\"\n    shows \"filter_sup F G \\<subseteq> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G \\<subseteq> H", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "assume \"x \\<in> filter_sup F G\""], ["proof (state)\nthis:\n  x \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "then"], ["proof (chain)\npicking this:\n  x \\<in> filter_sup F G", "obtain y z where 1: \"y \\<in> F \\<and> z \\<in> G \\<and> y \\<sqinter> z \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. (\\<And>y z.\n        y \\<in> F \\<and>\n        z \\<in> G \\<and> y \\<sqinter> z \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>y z.\n        y \\<in> F \\<and>\n        z \\<in> G \\<and> y \\<sqinter> z \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> F \\<and> z \\<in> G \\<and> y \\<sqinter> z \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "hence \"y \\<in> H \\<and> z \\<in> H\""], ["proof (prove)\nusing this:\n  y \\<in> F \\<and> z \\<in> G \\<and> y \\<sqinter> z \\<le> x\n\ngoal (1 subgoal):\n 1. y \\<in> H \\<and> z \\<in> H", "using assms(2-3)"], ["proof (prove)\nusing this:\n  y \\<in> F \\<and> z \\<in> G \\<and> y \\<sqinter> z \\<le> x\n  F \\<subseteq> H\n  G \\<subseteq> H\n\ngoal (1 subgoal):\n 1. y \\<in> H \\<and> z \\<in> H", "by auto"], ["proof (state)\nthis:\n  y \\<in> H \\<and> z \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "hence \"y \\<sqinter> z \\<in> H\""], ["proof (prove)\nusing this:\n  y \\<in> H \\<and> z \\<in> H\n\ngoal (1 subgoal):\n 1. y \\<sqinter> z \\<in> H", "by (simp add: assms(1) filter_inf_closed)"], ["proof (state)\nthis:\n  y \\<sqinter> z \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> filter_sup F G \\<Longrightarrow> x \\<in> H", "thus \"x \\<in> H\""], ["proof (prove)\nusing this:\n  y \\<sqinter> z \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> H", "using 1 assms(1) filter_def"], ["proof (prove)\nusing this:\n  y \\<sqinter> z \\<in> H\n  y \\<in> F \\<and> z \\<in> G \\<and> y \\<sqinter> z \\<le> x\n  ord_class.filter H\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. x \\<in> H", "by auto"], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filter_sup_left_isotone:\n  \"G \\<subseteq> H \\<Longrightarrow> filter_sup G F \\<subseteq> filter_sup H F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow>\n    filter_sup G F \\<subseteq> filter_sup H F", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow>\n    {z. \\<exists>x\\<in>G. \\<exists>y\\<in>F. x \\<sqinter> y \\<le> z}\n    \\<subseteq> {z. \\<exists>x\\<in>H.\n                       \\<exists>y\\<in>F. x \\<sqinter> y \\<le> z}", "by blast"], ["", "lemma filter_sup_right_isotone:\n  \"G \\<subseteq> H \\<Longrightarrow> filter_sup F G \\<subseteq> filter_sup F H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow>\n    filter_sup F G \\<subseteq> filter_sup F H", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. G \\<subseteq> H \\<Longrightarrow>\n    {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}\n    \\<subseteq> {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>H. x \\<sqinter> y \\<le> z}", "by blast"], ["", "lemma filter_sup_right_isotone_var:\n  \"filter_sup F (G \\<inter> H) \\<subseteq> filter_sup F H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F (G \\<inter> H) \\<subseteq> filter_sup F H", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. \\<exists>x\\<in>F.\n           \\<exists>y\\<in>G \\<inter> H. x \\<sqinter> y \\<le> z}\n    \\<subseteq> {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>H. x \\<sqinter> y \\<le> z}", "by blast"], ["", "lemma up_dist_inf:\n  \"\\<up>(x \\<sqinter> y) = filter_sup (\\<up>x) (\\<up>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<sqinter> y) = filter_sup (\\<up>x) (\\<up>y)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>(x \\<sqinter> y) \\<subseteq> filter_sup (\\<up>x) (\\<up>y)\n 2. filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)", "show \"\\<up>(x \\<sqinter> y) \\<subseteq> filter_sup (\\<up>x) (\\<up>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<sqinter> y) \\<subseteq> filter_sup (\\<up>x) (\\<up>y)", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<sqinter> y)\n    \\<subseteq> {z. \\<exists>x\\<in>\\<up>x.\n                       \\<exists>y\\<in>\\<up>y. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  \\<up>(x \\<sqinter> y) \\<subseteq> filter_sup (\\<up>x) (\\<up>y)\n\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)", "show \"filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x) (\\<up>y) \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x) (\\<up>y) \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y)", "assume \"z \\<in> filter_sup (\\<up>x) (\\<up>y)\""], ["proof (state)\nthis:\n  z \\<in> filter_sup (\\<up>x) (\\<up>y)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x) (\\<up>y) \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y)", "then"], ["proof (chain)\npicking this:\n  z \\<in> filter_sup (\\<up>x) (\\<up>y)", "obtain u v where \"u\\<in>\\<up>x \\<and> v\\<in>\\<up>y \\<and> u \\<sqinter> v \\<le> z\""], ["proof (prove)\nusing this:\n  z \\<in> filter_sup (\\<up>x) (\\<up>y)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        u \\<in> \\<up>x \\<and>\n        v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  z \\<in> filter_sup (\\<up>x) (\\<up>y)\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        u \\<in> \\<up>x \\<and>\n        v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> \\<up>x \\<and> v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x) (\\<up>y) \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y)", "hence \"x \\<sqinter> y \\<le> z\""], ["proof (prove)\nusing this:\n  u \\<in> \\<up>x \\<and> v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> z", "using order.trans inf_mono"], ["proof (prove)\nusing this:\n  u \\<in> \\<up>x \\<and> v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c \\<sqinter> ?d\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> z", "by blast"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x) (\\<up>y) \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y)", "thus \"z \\<in> \\<up>(x \\<sqinter> y)\""], ["proof (prove)\nusing this:\n  x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<in> \\<up>(x \\<sqinter> y)", "by blast"], ["proof (state)\nthis:\n  z \\<in> \\<up>(x \\<sqinter> y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filter_sup (\\<up>x) (\\<up>y) \\<subseteq> \\<up>(x \\<sqinter> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following result is part of \\cite[Exercise 2.23]{DaveyPriestley2002}.\n\\<close>"], ["", "lemma filter_inf_filter [simp]:\n  assumes \"filter F\"\n    shows \"filter (\\<Up>{ y . \\<exists>z\\<in>F . x \\<sqinter> z = y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "let ?G = \"\\<Up>{ y . \\<exists>z\\<in>F . x \\<sqinter> z = y}\""], ["proof (state)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "have \"F \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "using assms filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. F \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "hence 1: \"?G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  F \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "have 2: \"is_up_set ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "by auto"], ["proof (state)\nthis:\n  is_up_set (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "{"], ["proof (state)\nthis:\n  is_up_set (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "fix y z"], ["proof (state)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "assume \"y \\<in> ?G \\<and> z \\<in> ?G\""], ["proof (state)\nthis:\n  y \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<and>\n  z \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "then"], ["proof (chain)\npicking this:\n  y \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<and>\n  z \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}", "obtain v w where \"v \\<in> F \\<and> w \\<in> F \\<and> x \\<sqinter> v \\<le> y \\<and> x \\<sqinter> w \\<le> z\""], ["proof (prove)\nusing this:\n  y \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<and>\n  z \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        v \\<in> F \\<and>\n        w \\<in> F \\<and>\n        x \\<sqinter> v \\<le> y \\<and>\n        x \\<sqinter> w \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> F \\<and>\n  w \\<in> F \\<and> x \\<sqinter> v \\<le> y \\<and> x \\<sqinter> w \\<le> z\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "hence \"v \\<sqinter> w \\<in> F \\<and> x \\<sqinter> (v \\<sqinter> w) \\<le> y \\<sqinter> z\""], ["proof (prove)\nusing this:\n  v \\<in> F \\<and>\n  w \\<in> F \\<and> x \\<sqinter> v \\<le> y \\<and> x \\<sqinter> w \\<le> z\n\ngoal (1 subgoal):\n 1. v \\<sqinter> w \\<in> F \\<and>\n    x \\<sqinter> (v \\<sqinter> w) \\<le> y \\<sqinter> z", "by (meson assms filter_inf_closed order.trans inf.boundedI inf.cobounded1 inf.cobounded2)"], ["proof (state)\nthis:\n  v \\<sqinter> w \\<in> F \\<and>\n  x \\<sqinter> (v \\<sqinter> w) \\<le> y \\<sqinter> z\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "hence \"\\<exists>u\\<in>?G . u \\<le> y \\<and> u \\<le> z\""], ["proof (prove)\nusing this:\n  v \\<sqinter> w \\<in> F \\<and>\n  x \\<sqinter> (v \\<sqinter> w) \\<le> y \\<sqinter> z\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n       u \\<le> y \\<and> u \\<le> z", "by auto"], ["proof (state)\nthis:\n  \\<exists>u\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     u \\<le> y \\<and> u \\<le> z\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "}"], ["proof (state)\nthis:\n  ?y2 \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<and>\n  ?z2 \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<Longrightarrow>\n  \\<exists>u\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     u \\<le> ?y2 \\<and> u \\<le> ?z2\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "hence \"\\<forall>x\\<in>?G . \\<forall>y\\<in>?G . \\<exists>z\\<in>?G . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\nusing this:\n  ?y2 \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<and>\n  ?z2 \\<in> \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<Longrightarrow>\n  \\<exists>u\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     u \\<le> ?y2 \\<and> u \\<le> ?z2\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n       \\<forall>y\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n          \\<exists>z\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n             z \\<le> xa \\<and> z \\<le> y", "by auto"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     \\<forall>y\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n        \\<exists>z\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n           z \\<le> xa \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     \\<forall>y\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n        \\<exists>z\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n           z \\<le> xa \\<and> z \\<le> y\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "using 1 2 filter_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n     \\<forall>y\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n        \\<exists>z\\<in>\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y}.\n           z \\<le> xa \\<and> z \\<le> y\n  \\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y} \\<noteq> {}\n  is_up_set (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})", "by presburger"], ["proof (state)\nthis:\n  ord_class.filter (\\<Up>{y. \\<exists>z\\<in>F. x \\<sqinter> z = y})\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context directed_semilattice_inf\nbegin"], ["", "text \\<open>\nSet intersection is the meet operation in the lattice of filters.\n\\<close>"], ["", "lemma filter_inf:\n  assumes \"filter F\"\n      and \"filter G\"\n    shows \"filter (F \\<inter> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (F \\<inter> G)", "proof (unfold filter_def, intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. F \\<inter> G \\<noteq> {}\n 2. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 3. is_up_set (F \\<inter> G)", "from assms"], ["proof (chain)\npicking this:\n  ord_class.filter F\n  ord_class.filter G", "obtain x y where 1: \"x\\<in>F \\<and> y\\<in>G\""], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter G\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x \\<in> F \\<and> y \\<in> G \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using all_not_in_conv filter_def"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter G\n  (\\<forall>x. x \\<notin> ?A) = (?A = {})\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x \\<in> F \\<and> y \\<in> G \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> F \\<and> y \\<in> G\n\ngoal (3 subgoals):\n 1. F \\<inter> G \\<noteq> {}\n 2. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 3. is_up_set (F \\<inter> G)", "from ub"], ["proof (chain)\npicking this:\n  \\<exists>z\\<ge>?x. ?y \\<le> z", "obtain z where \"x \\<le> z \\<and> y \\<le> z\""], ["proof (prove)\nusing this:\n  \\<exists>z\\<ge>?x. ?y \\<le> z\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        x \\<le> z \\<and> y \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<le> z \\<and> y \\<le> z\n\ngoal (3 subgoals):\n 1. F \\<inter> G \\<noteq> {}\n 2. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 3. is_up_set (F \\<inter> G)", "hence \"z \\<in> F \\<inter> G\""], ["proof (prove)\nusing this:\n  x \\<le> z \\<and> y \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<in> F \\<inter> G", "using 1"], ["proof (prove)\nusing this:\n  x \\<le> z \\<and> y \\<le> z\n  x \\<in> F \\<and> y \\<in> G\n\ngoal (1 subgoal):\n 1. z \\<in> F \\<inter> G", "by (meson assms Int_iff filter_def)"], ["proof (state)\nthis:\n  z \\<in> F \\<inter> G\n\ngoal (3 subgoals):\n 1. F \\<inter> G \\<noteq> {}\n 2. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 3. is_up_set (F \\<inter> G)", "thus \"F \\<inter> G \\<noteq> {}\""], ["proof (prove)\nusing this:\n  z \\<in> F \\<inter> G\n\ngoal (1 subgoal):\n 1. F \\<inter> G \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  F \\<inter> G \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 2. is_up_set (F \\<inter> G)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n 2. is_up_set (F \\<inter> G)", "show \"is_up_set (F \\<inter> G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_up_set (F \\<inter> G)", "by (meson assms Int_iff filter_def)"], ["proof (state)\nthis:\n  is_up_set (F \\<inter> G)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y", "show \"\\<forall>x\\<in>F \\<inter> G . \\<forall>y\\<in>F \\<inter> G . \\<exists>z\\<in>F \\<inter> G . z \\<le> x \\<and> z \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>F \\<inter> G.\n       \\<forall>y\\<in>F \\<inter> G.\n          \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y", "by (metis assms Int_iff filter_inf_closed inf.cobounded2 inf.commute)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>F \\<inter> G.\n     \\<forall>y\\<in>F \\<inter> G.\n        \\<exists>z\\<in>F \\<inter> G. z \\<le> x \\<and> z \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\nWe introduce the following type of filters to instantiate the lattice classes and thereby inherit the results shown about lattices.\n\\<close>"], ["", "typedef (overloaded) 'a filter = \"{ F::'a::order set . filter F }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> filters", "by (meson mem_Collect_eq up_filter)"], ["", "lemma simp_filter [simp]:\n  \"filter (Rep_filter x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (Filters.filter.Rep_filter x)", "using Rep_filter"], ["proof (prove)\nusing this:\n  Filters.filter.Rep_filter ?x \\<in> filters\n\ngoal (1 subgoal):\n 1. ord_class.filter (Filters.filter.Rep_filter x)", "by simp"], ["", "setup_lifting type_definition_filter"], ["", "text \\<open>\nThe set of filters over a directed semilattice forms a lattice with a greatest element.\n\\<close>"], ["", "instantiation filter :: (directed_semilattice_inf) bounded_lattice_top\nbegin"], ["", "lift_definition top_filter :: \"'a filter\" is UNIV"], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter UNIV", "by (simp add: filter_univ)"], ["", "lift_definition sup_filter :: \"'a filter \\<Rightarrow> 'a filter \\<Rightarrow> 'a filter\" is filter_sup"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>set1 set2.\n       \\<lbrakk>ord_class.filter set1; ord_class.filter set2\\<rbrakk>\n       \\<Longrightarrow> ord_class.filter (filter_sup set1 set2)", "by (simp add: filter_sup)"], ["", "lift_definition inf_filter :: \"'a filter \\<Rightarrow> 'a filter \\<Rightarrow> 'a filter\" is inter"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>set1 set2.\n       \\<lbrakk>ord_class.filter set1; ord_class.filter set2\\<rbrakk>\n       \\<Longrightarrow> ord_class.filter (set1 \\<inter> set2)", "by (simp add: filter_inf)"], ["", "lift_definition less_eq_filter :: \"'a filter \\<Rightarrow> 'a filter \\<Rightarrow> bool\" is subset_eq"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition less_filter :: \"'a filter \\<Rightarrow> 'a filter \\<Rightarrow> bool\" is subset"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a Filters.filter, bounded_lattice_top_class)", "apply intro_classes"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>x y. (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<sqinter> y \\<le> x\n 6. \\<And>x y. x \\<sqinter> y \\<le> y\n 7. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 8. \\<And>x y. x \\<le> x \\<squnion> y\n 9. \\<And>y x. y \\<le> x \\<squnion> y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y \\<squnion> z \\<le> x\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x_ < y_) = (x_ \\<le> y_ \\<and> \\<not> y_ \\<le> x_)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y\\<rbrakk>\n       \\<Longrightarrow> (x \\<subset> y) =\n                         (x \\<subseteq> y \\<and> \\<not> y \\<subseteq> x)", "by (simp add: less_le_not_le)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>x. x \\<le> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 4. \\<And>x y. x \\<sqinter> y \\<le> x\n 5. \\<And>x y. x \\<sqinter> y \\<le> y\n 6. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 7. \\<And>x y. x \\<le> x \\<squnion> y\n 8. \\<And>y x. y \\<le> x \\<squnion> y\n 9. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 10. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<le> x_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. ord_class.filter x \\<Longrightarrow> x \\<subseteq> x", "by simp"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; y \\<le> z\\<rbrakk> \\<Longrightarrow> x \\<le> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 3. \\<And>x y. x \\<sqinter> y \\<le> x\n 4. \\<And>x y. x \\<sqinter> y \\<le> y\n 5. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 6. \\<And>x y. x \\<le> x \\<squnion> y\n 7. \\<And>y x. y \\<le> x \\<squnion> y\n 8. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 9. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<le> y_; y_ \\<le> z_\\<rbrakk> \\<Longrightarrow> x_ \\<le> z_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y; x \\<subseteq> y;\n        ord_class.filter z; y \\<subseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<subseteq> z", "by simp"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<le> y; y \\<le> x\\<rbrakk> \\<Longrightarrow> x = y\n 2. \\<And>x y. x \\<sqinter> y \\<le> x\n 3. \\<And>x y. x \\<sqinter> y \\<le> y\n 4. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 5. \\<And>x y. x \\<le> x \\<squnion> y\n 6. \\<And>y x. y \\<le> x \\<squnion> y\n 7. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 8. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<le> y_; y_ \\<le> x_\\<rbrakk> \\<Longrightarrow> x_ = y_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y; x \\<subseteq> y;\n        y \\<subseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "by simp"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> x\n 2. \\<And>x y. x \\<sqinter> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 4. \\<And>x y. x \\<le> x \\<squnion> y\n 5. \\<And>y x. y \\<le> x \\<squnion> y\n 6. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 7. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<sqinter> y_ \\<le> x_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y \\<subseteq> x", "by simp"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y. x \\<sqinter> y \\<le> y\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 3. \\<And>x y. x \\<le> x \\<squnion> y\n 4. \\<And>y x. y \\<le> x \\<squnion> y\n 5. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 6. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<sqinter> y_ \\<le> y_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y\\<rbrakk>\n       \\<Longrightarrow> x \\<inter> y \\<subseteq> y", "by simp"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<sqinter> z\n 2. \\<And>x y. x \\<le> x \\<squnion> y\n 3. \\<And>y x. y \\<le> x \\<squnion> y\n 4. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 5. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x_ \\<le> y_; x_ \\<le> z_\\<rbrakk>\n    \\<Longrightarrow> x_ \\<le> y_ \\<sqinter> z_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y; x \\<subseteq> y;\n        ord_class.filter z; x \\<subseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<subseteq> y \\<inter> z", "by simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x y. x \\<le> x \\<squnion> y\n 2. \\<And>y x. y \\<le> x \\<squnion> y\n 3. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 4. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x_ \\<le> x_ \\<squnion> y_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y\\<rbrakk>\n       \\<Longrightarrow> x \\<subseteq> filter_sup x y", "by (simp add: filter_sup_left_upper_bound)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>y x. y \\<le> x \\<squnion> y\n 2. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 3. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. y_ \\<le> x_ \\<squnion> y_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x.\n       \\<lbrakk>ord_class.filter y; ord_class.filter x\\<rbrakk>\n       \\<Longrightarrow> y \\<subseteq> filter_sup x y", "by (simp add: filter_sup_right_upper_bound)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>y x z.\n       \\<lbrakk>y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y \\<squnion> z \\<le> x\n 2. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y_ \\<le> x_; z_ \\<le> x_\\<rbrakk>\n    \\<Longrightarrow> y_ \\<squnion> z_ \\<le> x_", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y x z.\n       \\<lbrakk>ord_class.filter y; ord_class.filter x; y \\<subseteq> x;\n        ord_class.filter z; z \\<subseteq> x\\<rbrakk>\n       \\<Longrightarrow> filter_sup y z \\<subseteq> x", "by (simp add: filter_sup_least_upper_bound)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a \\<le> top", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. a_ \\<le> top", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. ord_class.filter a \\<Longrightarrow> a \\<subseteq> UNIV", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "context bounded_semilattice_inf_top\nbegin"], ["", "abbreviation \"filter_complements F G \\<equiv> filter F \\<and> filter G \\<and> filter_sup F G = UNIV \\<and> F \\<inter> G = {top}\""], ["", "end"], ["", "text \\<open>\nThe set of filters over a bounded semilattice forms a bounded lattice.\n\\<close>"], ["", "instantiation filter :: (bounded_semilattice_inf_top) bounded_lattice\nbegin"], ["", "lift_definition bot_filter :: \"'a filter\" is \"{top}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter {top}", "by simp"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a Filters.filter, bounded_lattice_class)", "apply intro_classes"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. bot \\<le> a", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. ord_class.filter x \\<Longrightarrow> {top} \\<subseteq> x", "by simp"], ["", "end"], ["", "context lattice\nbegin"], ["", "lemma up_dist_sup:\n  \"\\<up>(x \\<squnion> y) = \\<up>x \\<inter> \\<up>y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<squnion> y) = \\<up>x \\<inter> \\<up>y", "by auto"], ["", "end"], ["", "text \\<open>\nFor convenience, the following function injects principal filters into the filter type.\nWe cannot define it in the \\<open>order\\<close> class since the type filter requires the sort constraint \\<open>order\\<close> that is not available in the class.\nThe result of the function is a filter by lemma \\<open>up_filter\\<close>.\n\\<close>"], ["", "abbreviation up_filter :: \"'a::order \\<Rightarrow> 'a filter\"\n  where \"up_filter x \\<equiv> Abs_filter (\\<up>x)\""], ["", "lemma up_filter_dist_inf:\n  \"up_filter ((x::'a::lattice) \\<sqinter> y) = up_filter x \\<squnion> up_filter y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. up_filter (x \\<sqinter> y) = up_filter x \\<squnion> up_filter y", "by (simp add: eq_onp_def sup_filter.abs_eq up_dist_inf)"], ["", "lemma up_filter_dist_sup:\n  \"up_filter ((x::'a::lattice) \\<squnion> y) = up_filter x \\<sqinter> up_filter y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. up_filter (x \\<squnion> y) = up_filter x \\<sqinter> up_filter y", "by (metis eq_onp_def inf_filter.abs_eq up_dist_sup up_filter)"], ["", "lemma up_filter_injective:\n  \"up_filter x = up_filter y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. up_filter x = up_filter y \\<Longrightarrow> x = y", "by (metis Abs_filter_inject mem_Collect_eq up_filter up_injective)"], ["", "lemma up_filter_antitone:\n  \"x \\<le> y \\<longleftrightarrow> up_filter y \\<le> up_filter x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (up_filter y \\<le> up_filter x)", "by (metis eq_onp_same_args less_eq_filter.abs_eq up_antitone up_filter)"], ["", "text \\<open>\nThe following definition applies a function to each element of a filter.\nThe subsequent lemma gives conditions under which the result of this application is a filter.\n\\<close>"], ["", "abbreviation filter_map :: \"('a::order \\<Rightarrow> 'b::order) \\<Rightarrow> 'a filter \\<Rightarrow> 'b filter\"\n  where \"filter_map f F \\<equiv> Abs_filter (f ` Rep_filter F)\""], ["", "lemma filter_map_filter:\n  assumes \"mono f\"\n      and \"\\<forall>x y . f x \\<le> y \\<longrightarrow> (\\<exists>z . x \\<le> z \\<and> y = f z)\"\n    shows \"filter (f ` Rep_filter F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (f ` Filters.filter.Rep_filter F)", "by (simp add: assms inf.filter_map_filter)"], ["", "subsection \\<open>Distributive Lattices\\<close>"], ["", "text \\<open>\nIn this section we additionally assume that the underlying order forms a distributive lattice.\nThen filters form a bounded distributive lattice if the underlying order has a greatest element.\nMoreover ultrafilters are prime filters.\nWe also prove a lemma of Gr\\\"atzer and Schmidt about principal filters.\n\\<close>"], ["", "context distrib_lattice\nbegin"], ["", "lemma filter_sup_left_dist_inf:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter H\"\n    shows \"filter_sup F (G \\<inter> H) = filter_sup F G \\<inter> filter_sup F H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F (G \\<inter> H) = filter_sup F G \\<inter> filter_sup F H", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. filter_sup F (G \\<inter> H)\n    \\<subseteq> filter_sup F G \\<inter> filter_sup F H\n 2. filter_sup F G \\<inter> filter_sup F H\n    \\<subseteq> filter_sup F (G \\<inter> H)", "show \"filter_sup F (G \\<inter> H) \\<subseteq> filter_sup F G \\<inter> filter_sup F H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F (G \\<inter> H)\n    \\<subseteq> filter_sup F G \\<inter> filter_sup F H", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {z. \\<exists>x\\<in>F.\n           \\<exists>y\\<in>G \\<inter> H. x \\<sqinter> y \\<le> z}\n    \\<subseteq> {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} \\<inter>\n                {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>H. x \\<sqinter> y \\<le> z}", "using filter_sup_right_isotone_var"], ["proof (prove)\nusing this:\n  filter_sup ?F (?G \\<inter> ?H) \\<subseteq> filter_sup ?F ?H\n\ngoal (1 subgoal):\n 1. {z. \\<exists>x\\<in>F.\n           \\<exists>y\\<in>G \\<inter> H. x \\<sqinter> y \\<le> z}\n    \\<subseteq> {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} \\<inter>\n                {z. \\<exists>x\\<in>F.\n                       \\<exists>y\\<in>H. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  filter_sup F (G \\<inter> H)\n  \\<subseteq> filter_sup F G \\<inter> filter_sup F H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> filter_sup F H\n    \\<subseteq> filter_sup F (G \\<inter> H)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> filter_sup F H\n    \\<subseteq> filter_sup F (G \\<inter> H)", "show \"filter_sup F G \\<inter> filter_sup F H \\<subseteq> filter_sup F (G \\<inter> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> filter_sup F H\n    \\<subseteq> filter_sup F (G \\<inter> H)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "assume \"x \\<in> filter_sup F G \\<inter> filter_sup F H\""], ["proof (state)\nthis:\n  x \\<in> filter_sup F G \\<inter> filter_sup F H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "then"], ["proof (chain)\npicking this:\n  x \\<in> filter_sup F G \\<inter> filter_sup F H", "obtain t u v w where 1: \"t \\<in> F \\<and> u \\<in> G \\<and> v \\<in> F \\<and> w \\<in> H \\<and> t \\<sqinter> u \\<le> x \\<and> v \\<sqinter> w \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G \\<inter> filter_sup F H\n\ngoal (1 subgoal):\n 1. (\\<And>t u v w.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and>\n        v \\<in> F \\<and>\n        w \\<in> H \\<and>\n        t \\<sqinter> u \\<le> x \\<and>\n        v \\<sqinter> w \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  x \\<in> filter_sup F G \\<inter> filter_sup F H\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>t u v w.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and>\n        v \\<in> F \\<and>\n        w \\<in> H \\<and>\n        t \\<sqinter> u \\<le> x \\<and>\n        v \\<sqinter> w \\<le> x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> F \\<and>\n  u \\<in> G \\<and>\n  v \\<in> F \\<and>\n  w \\<in> H \\<and> t \\<sqinter> u \\<le> x \\<and> v \\<sqinter> w \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "let ?y = \"t \\<sqinter> v\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "let ?z = \"u \\<squnion> w\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "have 2: \"?y \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<in> F", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and>\n  u \\<in> G \\<and>\n  v \\<in> F \\<and>\n  w \\<in> H \\<and> t \\<sqinter> u \\<le> x \\<and> v \\<sqinter> w \\<le> x\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<in> F", "by (simp add: assms(1) filter_inf_closed)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "have 3: \"?z \\<in> G \\<inter> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<squnion> w \\<in> G \\<inter> H", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and>\n  u \\<in> G \\<and>\n  v \\<in> F \\<and>\n  w \\<in> H \\<and> t \\<sqinter> u \\<le> x \\<and> v \\<sqinter> w \\<le> x\n\ngoal (1 subgoal):\n 1. u \\<squnion> w \\<in> G \\<inter> H", "by (meson assms(2-3) Int_iff filter_def sup_ge1 sup_ge2)"], ["proof (state)\nthis:\n  u \\<squnion> w \\<in> G \\<inter> H\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "have \"?y \\<sqinter> ?z = (t \\<sqinter> v \\<sqinter> u) \\<squnion> (t \\<sqinter> v \\<sqinter> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<squnion> w) =\n    t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w", "by (simp add: inf_sup_distrib1)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) =\n  t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "also"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) =\n  t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "have \"... \\<le> (t \\<sqinter> u) \\<squnion> (v \\<sqinter> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w\n    \\<le> t \\<sqinter> u \\<squnion> v \\<sqinter> w", "by (metis inf.cobounded1 inf.cobounded2 inf.left_idem inf_mono sup.mono)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w\n  \\<le> t \\<sqinter> u \\<squnion> v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "also"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> u \\<squnion> t \\<sqinter> v \\<sqinter> w\n  \\<le> t \\<sqinter> u \\<squnion> v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "have \"... \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> u \\<squnion> v \\<sqinter> w \\<le> x", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and>\n  u \\<in> G \\<and>\n  v \\<in> F \\<and>\n  w \\<in> H \\<and> t \\<sqinter> u \\<le> x \\<and> v \\<sqinter> w \\<le> x\n\ngoal (1 subgoal):\n 1. t \\<sqinter> u \\<squnion> v \\<sqinter> w \\<le> x", "by (simp add: le_supI)"], ["proof (state)\nthis:\n  t \\<sqinter> u \\<squnion> v \\<sqinter> w \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> filter_sup F G \\<inter> filter_sup F H \\<Longrightarrow>\n       x \\<in> filter_sup F (G \\<inter> H)", "finally"], ["proof (chain)\npicking this:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) \\<le> x", "show \"x \\<in> filter_sup F (G \\<inter> H)\""], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> filter_sup F (G \\<inter> H)", "unfolding filter_sup_def"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<in> {z. \\<exists>x\\<in>F.\n                   \\<exists>y\\<in>G \\<inter> H. x \\<sqinter> y \\<le> z}", "using 2 3"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<squnion> w) \\<le> x\n  t \\<sqinter> v \\<in> F\n  u \\<squnion> w \\<in> G \\<inter> H\n\ngoal (1 subgoal):\n 1. x \\<in> {z. \\<exists>x\\<in>F.\n                   \\<exists>y\\<in>G \\<inter> H. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  x \\<in> filter_sup F (G \\<inter> H)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filter_sup F G \\<inter> filter_sup F H\n  \\<subseteq> filter_sup F (G \\<inter> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filter_inf_principal_rep:\n  \"F \\<inter> G = \\<up>z \\<Longrightarrow> (\\<exists>x\\<in>F . \\<exists>y\\<in>G . z = x \\<squnion> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<inter> G = \\<up>z \\<Longrightarrow>\n    \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<squnion> y", "by force"], ["", "lemma filter_sup_principal_rep:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter_sup F G = \\<up>z\"\n    shows \"\\<exists>x\\<in>F . \\<exists>y\\<in>G . z = x \\<sqinter> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "from assms(3)"], ["proof (chain)\npicking this:\n  filter_sup F G = \\<up>z", "obtain x y where 1: \"x\\<in>F \\<and> y\\<in>G \\<and> x \\<sqinter> y \\<le> z\""], ["proof (prove)\nusing this:\n  filter_sup F G = \\<up>z\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x \\<in> F \\<and>\n        y \\<in> G \\<and> x \\<sqinter> y \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding filter_sup_def"], ["proof (prove)\nusing this:\n  {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} = \\<up>z\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x \\<in> F \\<and>\n        y \\<in> G \\<and> x \\<sqinter> y \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using order_refl"], ["proof (prove)\nusing this:\n  {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} = \\<up>z\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x \\<in> F \\<and>\n        y \\<in> G \\<and> x \\<sqinter> y \\<le> z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> F \\<and> y \\<in> G \\<and> x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "hence 2: \"x \\<squnion> z \\<in> F \\<and> y \\<squnion> z \\<in> G\""], ["proof (prove)\nusing this:\n  x \\<in> F \\<and> y \\<in> G \\<and> x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. x \\<squnion> z \\<in> F \\<and> y \\<squnion> z \\<in> G", "by (meson assms(1-2) sup_ge1 filter_def)"], ["proof (state)\nthis:\n  x \\<squnion> z \\<in> F \\<and> y \\<squnion> z \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "have \"(x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z", "using 1 sup_absorb2 sup_inf_distrib2"], ["proof (prove)\nusing this:\n  x \\<in> F \\<and> y \\<in> G \\<and> x \\<sqinter> y \\<le> z\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?y = ?y\n  ?y \\<sqinter> ?z \\<squnion> ?x =\n  (?y \\<squnion> ?x) \\<sqinter> (?z \\<squnion> ?x)\n\ngoal (1 subgoal):\n 1. (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z", "by fastforce"], ["proof (state)\nthis:\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "using 2"], ["proof (prove)\nusing this:\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) = z\n  x \\<squnion> z \\<in> F \\<and> y \\<squnion> z \\<in> G\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y", "by force"], ["proof (state)\nthis:\n  \\<exists>x\\<in>F. \\<exists>y\\<in>G. z = x \\<sqinter> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inf_sup_principal_aux:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"is_principal_up (filter_sup F G)\"\n      and \"is_principal_up (F \\<inter> G)\"\n    shows \"is_principal_up F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_principal_up F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_principal_up F", "from assms(3-4)"], ["proof (chain)\npicking this:\n  is_principal_up (filter_sup F G)\n  is_principal_up (F \\<inter> G)", "obtain x y where 1: \"filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\""], ["proof (prove)\nusing this:\n  is_principal_up (filter_sup F G)\n  is_principal_up (F \\<inter> G)\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        filter_sup F G = \\<up>x \\<and>\n        F \\<inter> G = \\<up>y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n\ngoal (1 subgoal):\n 1. is_principal_up F", "from filter_inf_principal_rep"], ["proof (chain)\npicking this:\n  ?F \\<inter> ?G = \\<up>?z \\<Longrightarrow>\n  \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. ?z = x \\<squnion> y", "obtain t u where 2: \"t\\<in>F \\<and> u\\<in>G \\<and> y = t \\<squnion> u\""], ["proof (prove)\nusing this:\n  ?F \\<inter> ?G = \\<up>?z \\<Longrightarrow>\n  \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. ?z = x \\<squnion> y\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and> y = t \\<squnion> u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  ?F \\<inter> ?G = \\<up>?z \\<Longrightarrow>\n  \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. ?z = x \\<squnion> y\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n\ngoal (1 subgoal):\n 1. (\\<And>t u.\n        t \\<in> F \\<and>\n        u \\<in> G \\<and> y = t \\<squnion> u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by meson"], ["proof (state)\nthis:\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n\ngoal (1 subgoal):\n 1. is_principal_up F", "from filter_sup_principal_rep"], ["proof (chain)\npicking this:\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   filter_sup ?F ?G = \\<up>?z\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?F.\n                       \\<exists>y\\<in>?G. ?z = x \\<sqinter> y", "obtain v w where 3: \"v\\<in>F \\<and> w\\<in>G \\<and> x = v \\<sqinter> w\""], ["proof (prove)\nusing this:\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   filter_sup ?F ?G = \\<up>?z\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?F.\n                       \\<exists>y\\<in>?G. ?z = x \\<sqinter> y\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        v \\<in> F \\<and>\n        w \\<in> G \\<and> x = v \\<sqinter> w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   filter_sup ?F ?G = \\<up>?z\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>?F.\n                       \\<exists>y\\<in>?G. ?z = x \\<sqinter> y\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n\ngoal (1 subgoal):\n 1. (\\<And>v w.\n        v \\<in> F \\<and>\n        w \\<in> G \\<and> x = v \\<sqinter> w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson assms(1-2))"], ["proof (state)\nthis:\n  v \\<in> F \\<and> w \\<in> G \\<and> x = v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. is_principal_up F", "have \"t \\<in> filter_sup F G \\<and> u \\<in> filter_sup F G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> filter_sup F G \\<and> u \\<in> filter_sup F G", "unfolding filter_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> {z. \\<exists>x\\<in>F.\n                   \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} \\<and>\n    u \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "using 2 inf.cobounded1 inf.cobounded2"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n  ?a \\<sqinter> ?b \\<le> ?a\n  ?a \\<sqinter> ?b \\<le> ?b\n\ngoal (1 subgoal):\n 1. t \\<in> {z. \\<exists>x\\<in>F.\n                   \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z} \\<and>\n    u \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  t \\<in> filter_sup F G \\<and> u \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. is_principal_up F", "hence \"x \\<le> t \\<and> x \\<le> u\""], ["proof (prove)\nusing this:\n  t \\<in> filter_sup F G \\<and> u \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. x \\<le> t \\<and> x \\<le> u", "using 1"], ["proof (prove)\nusing this:\n  t \\<in> filter_sup F G \\<and> u \\<in> filter_sup F G\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n\ngoal (1 subgoal):\n 1. x \\<le> t \\<and> x \\<le> u", "by blast"], ["proof (state)\nthis:\n  x \\<le> t \\<and> x \\<le> u\n\ngoal (1 subgoal):\n 1. is_principal_up F", "hence 4: \"(t \\<sqinter> v) \\<sqinter> (u \\<sqinter> w) = x\""], ["proof (prove)\nusing this:\n  x \\<le> t \\<and> x \\<le> u\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) = x", "using 3"], ["proof (prove)\nusing this:\n  x \\<le> t \\<and> x \\<le> u\n  v \\<in> F \\<and> w \\<in> G \\<and> x = v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) = x", "by (simp add: inf.absorb2 inf.assoc inf.left_commute)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) = x\n\ngoal (1 subgoal):\n 1. is_principal_up F", "have \"(t \\<sqinter> v) \\<squnion> (u \\<sqinter> w) \\<in> F \\<and> (t \\<sqinter> v) \\<squnion> (u \\<sqinter> w) \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> F \\<and>\n    t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> G", "using 2 3"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n  v \\<in> F \\<and> w \\<in> G \\<and> x = v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> F \\<and>\n    t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> G", "by (metis (no_types, lifting) assms(1-2) filter_inf_closed sup.cobounded1 sup.cobounded2 filter_def)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> F \\<and>\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> G\n\ngoal (1 subgoal):\n 1. is_principal_up F", "hence \"y \\<le> (t \\<sqinter> v) \\<squnion> (u \\<sqinter> w)\""], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> F \\<and>\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> G\n\ngoal (1 subgoal):\n 1. y \\<le> t \\<sqinter> v \\<squnion> u \\<sqinter> w", "using 1 Int_iff"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> F \\<and>\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w \\<in> G\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n  (?c \\<in> ?A \\<inter> ?B) = (?c \\<in> ?A \\<and> ?c \\<in> ?B)\n\ngoal (1 subgoal):\n 1. y \\<le> t \\<sqinter> v \\<squnion> u \\<sqinter> w", "by blast"], ["proof (state)\nthis:\n  y \\<le> t \\<sqinter> v \\<squnion> u \\<sqinter> w\n\ngoal (1 subgoal):\n 1. is_principal_up F", "hence 5: \"(t \\<sqinter> v) \\<squnion> (u \\<sqinter> w) = y\""], ["proof (prove)\nusing this:\n  y \\<le> t \\<sqinter> v \\<squnion> u \\<sqinter> w\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<squnion> u \\<sqinter> w = y", "using 2"], ["proof (prove)\nusing this:\n  y \\<le> t \\<sqinter> v \\<squnion> u \\<sqinter> w\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<squnion> u \\<sqinter> w = y", "by (simp add: antisym inf.coboundedI1)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w = y\n\ngoal (1 subgoal):\n 1. is_principal_up F", "have \"F = \\<up>(t \\<sqinter> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = \\<up>(t \\<sqinter> v)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. F \\<subseteq> \\<up>(t \\<sqinter> v)\n 2. \\<up>(t \\<sqinter> v) \\<subseteq> F", "show \"F \\<subseteq> \\<up>(t \\<sqinter> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> \\<up>(t \\<sqinter> v)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "assume 6: \"z \\<in> F\""], ["proof (state)\nthis:\n  z \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "hence \"z \\<in> filter_sup F G\""], ["proof (prove)\nusing this:\n  z \\<in> F\n\ngoal (1 subgoal):\n 1. z \\<in> filter_sup F G", "unfolding filter_sup_def"], ["proof (prove)\nusing this:\n  z \\<in> F\n\ngoal (1 subgoal):\n 1. z \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "using 2 inf.cobounded1"], ["proof (prove)\nusing this:\n  z \\<in> F\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n  ?a \\<sqinter> ?b \\<le> ?a\n\ngoal (1 subgoal):\n 1. z \\<in> {z. \\<exists>x\\<in>F. \\<exists>y\\<in>G. x \\<sqinter> y \\<le> z}", "by blast"], ["proof (state)\nthis:\n  z \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "hence \"x \\<le> z\""], ["proof (prove)\nusing this:\n  z \\<in> filter_sup F G\n\ngoal (1 subgoal):\n 1. x \\<le> z", "using 1"], ["proof (prove)\nusing this:\n  z \\<in> filter_sup F G\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n\ngoal (1 subgoal):\n 1. x \\<le> z", "by simp"], ["proof (state)\nthis:\n  x \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "hence 7: \"(t \\<sqinter> v \\<sqinter> z) \\<sqinter> (u \\<sqinter> w) = x\""], ["proof (prove)\nusing this:\n  x \\<le> z\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z \\<sqinter> (u \\<sqinter> w) = x", "using 4"], ["proof (prove)\nusing this:\n  x \\<le> z\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) = x\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z \\<sqinter> (u \\<sqinter> w) = x", "by (metis inf.absorb1 inf.assoc inf.commute)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> z \\<sqinter> (u \\<sqinter> w) = x\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "have \"z \\<squnion> u \\<in> F \\<and> z \\<squnion> u \\<in> G \\<and> z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<squnion> u \\<in> F \\<and>\n    z \\<squnion> u \\<in> G \\<and>\n    z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G", "using 2 3 6"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n  v \\<in> F \\<and> w \\<in> G \\<and> x = v \\<sqinter> w\n  z \\<in> F\n\ngoal (1 subgoal):\n 1. z \\<squnion> u \\<in> F \\<and>\n    z \\<squnion> u \\<in> G \\<and>\n    z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G", "by (meson assms(1-2) filter_def sup_ge1 sup_ge2)"], ["proof (state)\nthis:\n  z \\<squnion> u \\<in> F \\<and>\n  z \\<squnion> u \\<in> G \\<and>\n  z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "hence \"y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)\""], ["proof (prove)\nusing this:\n  z \\<squnion> u \\<in> F \\<and>\n  z \\<squnion> u \\<in> G \\<and>\n  z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G\n\ngoal (1 subgoal):\n 1. y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)", "using 1 Int_iff filter_inf_closed"], ["proof (prove)\nusing this:\n  z \\<squnion> u \\<in> F \\<and>\n  z \\<squnion> u \\<in> G \\<and>\n  z \\<squnion> w \\<in> F \\<and> z \\<squnion> w \\<in> G\n  filter_sup F G = \\<up>x \\<and> F \\<inter> G = \\<up>y\n  (?c \\<in> ?A \\<inter> ?B) = (?c \\<in> ?A \\<and> ?c \\<in> ?B)\n  \\<lbrakk>ord_class.filter ?F; ?x \\<in> ?F; ?y \\<in> ?F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqinter> ?y \\<in> ?F\n\ngoal (1 subgoal):\n 1. y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)", "by auto"], ["proof (state)\nthis:\n  y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "hence 8: \"(t \\<sqinter> v \\<sqinter> z) \\<squnion> (u \\<sqinter> w) = y\""], ["proof (prove)\nusing this:\n  y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z \\<squnion> u \\<sqinter> w = y", "using 5"], ["proof (prove)\nusing this:\n  y \\<le> (z \\<squnion> u) \\<sqinter> (z \\<squnion> w)\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w = y\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z \\<squnion> u \\<sqinter> w = y", "by (metis inf.absorb1 sup.commute sup_inf_distrib2)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> z \\<squnion> u \\<sqinter> w = y\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "have \"t \\<sqinter> v \\<sqinter> z = t \\<sqinter> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z = t \\<sqinter> v", "using 4 5 7 8 relative_equality"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> (u \\<sqinter> w) = x\n  t \\<sqinter> v \\<squnion> u \\<sqinter> w = y\n  t \\<sqinter> v \\<sqinter> z \\<sqinter> (u \\<sqinter> w) = x\n  t \\<sqinter> v \\<sqinter> z \\<squnion> u \\<sqinter> w = y\n  \\<lbrakk>?x \\<squnion> ?z = ?y \\<squnion> ?z;\n   ?x \\<sqinter> ?z = ?y \\<sqinter> ?z\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<sqinter> z = t \\<sqinter> v", "by blast"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<sqinter> z = t \\<sqinter> v\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> F \\<Longrightarrow> x \\<in> \\<up>(t \\<sqinter> v)", "thus \"z \\<in> \\<up>(t \\<sqinter> v)\""], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<sqinter> z = t \\<sqinter> v\n\ngoal (1 subgoal):\n 1. z \\<in> \\<up>(t \\<sqinter> v)", "by (simp add: inf.orderI)"], ["proof (state)\nthis:\n  z \\<in> \\<up>(t \\<sqinter> v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F \\<subseteq> \\<up>(t \\<sqinter> v)\n\ngoal (1 subgoal):\n 1. \\<up>(t \\<sqinter> v) \\<subseteq> F", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<up>(t \\<sqinter> v) \\<subseteq> F", "show \"\\<up>(t \\<sqinter> v) \\<subseteq> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(t \\<sqinter> v) \\<subseteq> F", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<up>(t \\<sqinter> v) \\<Longrightarrow> x \\<in> F", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<up>(t \\<sqinter> v) \\<Longrightarrow> x \\<in> F", "have 9: \"t \\<sqinter> v \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<in> F", "using 2 3"], ["proof (prove)\nusing this:\n  t \\<in> F \\<and> u \\<in> G \\<and> y = t \\<squnion> u\n  v \\<in> F \\<and> w \\<in> G \\<and> x = v \\<sqinter> w\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<in> F", "by (simp add: assms(1) filter_inf_closed)"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<up>(t \\<sqinter> v) \\<Longrightarrow> x \\<in> F", "assume \"z \\<in> \\<up>(t \\<sqinter> v)\""], ["proof (state)\nthis:\n  z \\<in> \\<up>(t \\<sqinter> v)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<up>(t \\<sqinter> v) \\<Longrightarrow> x \\<in> F", "hence \"t \\<sqinter> v \\<le> z\""], ["proof (prove)\nusing this:\n  z \\<in> \\<up>(t \\<sqinter> v)\n\ngoal (1 subgoal):\n 1. t \\<sqinter> v \\<le> z", "by simp"], ["proof (state)\nthis:\n  t \\<sqinter> v \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> \\<up>(t \\<sqinter> v) \\<Longrightarrow> x \\<in> F", "thus \"z \\<in> F\""], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<in> F", "using assms(1) 9 filter_def"], ["proof (prove)\nusing this:\n  t \\<sqinter> v \\<le> z\n  ord_class.filter F\n  t \\<sqinter> v \\<in> F\n  ord_class.filter ?F \\<equiv>\n  ?F \\<noteq> {} \\<and>\n  (\\<forall>x\\<in>?F.\n      \\<forall>y\\<in>?F.\n         \\<exists>z\\<in>?F. z \\<le> x \\<and> z \\<le> y) \\<and>\n  is_up_set ?F\n\ngoal (1 subgoal):\n 1. z \\<in> F", "by auto"], ["proof (state)\nthis:\n  z \\<in> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<up>(t \\<sqinter> v) \\<subseteq> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  F = \\<up>(t \\<sqinter> v)\n\ngoal (1 subgoal):\n 1. is_principal_up F", "thus ?thesis"], ["proof (prove)\nusing this:\n  F = \\<up>(t \\<sqinter> v)\n\ngoal (1 subgoal):\n 1. is_principal_up F", "by blast"], ["proof (state)\nthis:\n  is_principal_up F\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following result is \\cite[Lemma II]{GraetzerSchmidt1958}.\nIf both join and meet of two filters are principal filters, both filters are principal filters.\n\\<close>"], ["", "lemma inf_sup_principal:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"is_principal_up (filter_sup F G)\"\n      and \"is_principal_up (F \\<inter> G)\"\n    shows \"is_principal_up F \\<and> is_principal_up G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_principal_up F \\<and> is_principal_up G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_principal_up F \\<and> is_principal_up G", "have \"filter G \\<and> filter F \\<and> is_principal_up (filter_sup G F) \\<and> is_principal_up (G \\<inter> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter G \\<and>\n    ord_class.filter F \\<and>\n    is_principal_up (filter_sup G F) \\<and> is_principal_up (G \\<inter> F)", "by (simp add: assms Int_commute filter_sup_symmetric)"], ["proof (state)\nthis:\n  ord_class.filter G \\<and>\n  ord_class.filter F \\<and>\n  is_principal_up (filter_sup G F) \\<and> is_principal_up (G \\<inter> F)\n\ngoal (1 subgoal):\n 1. is_principal_up F \\<and> is_principal_up G", "thus ?thesis"], ["proof (prove)\nusing this:\n  ord_class.filter G \\<and>\n  ord_class.filter F \\<and>\n  is_principal_up (filter_sup G F) \\<and> is_principal_up (G \\<inter> F)\n\ngoal (1 subgoal):\n 1. is_principal_up F \\<and> is_principal_up G", "using assms(3) inf_sup_principal_aux"], ["proof (prove)\nusing this:\n  ord_class.filter G \\<and>\n  ord_class.filter F \\<and>\n  is_principal_up (filter_sup G F) \\<and> is_principal_up (G \\<inter> F)\n  is_principal_up (filter_sup F G)\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   is_principal_up (filter_sup ?F ?G);\n   is_principal_up (?F \\<inter> ?G)\\<rbrakk>\n  \\<Longrightarrow> is_principal_up ?F\n\ngoal (1 subgoal):\n 1. is_principal_up F \\<and> is_principal_up G", "by blast"], ["proof (state)\nthis:\n  is_principal_up F \\<and> is_principal_up G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma filter_sup_absorb_inf: \"filter F \\<Longrightarrow> filter G \\<Longrightarrow> filter_sup (F \\<inter> G) G = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ord_class.filter F; ord_class.filter G\\<rbrakk>\n    \\<Longrightarrow> filter_sup (F \\<inter> G) G = G", "by (simp add: filter_inf filter_sup_least_upper_bound filter_sup_left_upper_bound filter_sup_symmetric subset_antisym)"], ["", "lemma filter_inf_absorb_sup: \"filter F \\<Longrightarrow> filter G \\<Longrightarrow> filter_sup F G \\<inter> G = G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ord_class.filter F; ord_class.filter G\\<rbrakk>\n    \\<Longrightarrow> filter_sup F G \\<inter> G = G", "apply (rule subset_antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ord_class.filter F; ord_class.filter G\\<rbrakk>\n    \\<Longrightarrow> filter_sup F G \\<inter> G \\<subseteq> G\n 2. \\<lbrakk>ord_class.filter F; ord_class.filter G\\<rbrakk>\n    \\<Longrightarrow> G \\<subseteq> filter_sup F G \\<inter> G", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ord_class.filter F; ord_class.filter G\\<rbrakk>\n    \\<Longrightarrow> G \\<subseteq> filter_sup F G \\<inter> G", "by (simp add: filter_sup_right_upper_bound)"], ["", "lemma filter_inf_right_dist_sup:\n  assumes \"filter F\"\n      and \"filter G\"\n      and \"filter H\"\n    shows \"filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "have \"filter_sup (F \\<inter> H) (G \\<inter> H) = filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> H) (G \\<inter> H) =\n    filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H", "by (simp add: assms filter_sup_left_dist_inf filter_inf)"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) (G \\<inter> H) =\n  filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "also"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) (G \\<inter> H) =\n  filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "have \"... = filter_sup (F \\<inter> H) G \\<inter> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H =\n    filter_sup (F \\<inter> H) G \\<inter> H", "using assms(1,3) filter_sup_absorb_inf"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter H\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G\\<rbrakk>\n  \\<Longrightarrow> filter_sup (?F \\<inter> ?G) ?G = ?G\n\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H =\n    filter_sup (F \\<inter> H) G \\<inter> H", "by simp"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H =\n  filter_sup (F \\<inter> H) G \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "also"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) G \\<inter> filter_sup (F \\<inter> H) H =\n  filter_sup (F \\<inter> H) G \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "have \"... = filter_sup F G \\<inter> filter_sup G H \\<inter> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> H) G \\<inter> H =\n    filter_sup F G \\<inter> filter_sup G H \\<inter> H", "using assms filter_sup_left_dist_inf filter_sup_symmetric"], ["proof (prove)\nusing this:\n  ord_class.filter F\n  ord_class.filter G\n  ord_class.filter H\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   ord_class.filter ?H\\<rbrakk>\n  \\<Longrightarrow> filter_sup ?F (?G \\<inter> ?H) =\n                    filter_sup ?F ?G \\<inter> filter_sup ?F ?H\n  filter_sup ?F ?G = filter_sup ?G ?F\n\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> H) G \\<inter> H =\n    filter_sup F G \\<inter> filter_sup G H \\<inter> H", "by simp"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) G \\<inter> H =\n  filter_sup F G \\<inter> filter_sup G H \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "also"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> H) G \\<inter> H =\n  filter_sup F G \\<inter> filter_sup G H \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "have \"... = filter_sup F G \\<inter> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> filter_sup G H \\<inter> H =\n    filter_sup F G \\<inter> H", "by (simp add: assms(2-3) filter_inf_absorb_sup semilattice_inf_class.inf_assoc)"], ["proof (state)\nthis:\n  filter_sup F G \\<inter> filter_sup G H \\<inter> H =\n  filter_sup F G \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "finally"], ["proof (chain)\npicking this:\n  filter_sup (F \\<inter> H) (G \\<inter> H) = filter_sup F G \\<inter> H", "show ?thesis"], ["proof (prove)\nusing this:\n  filter_sup (F \\<inter> H) (G \\<inter> H) = filter_sup F G \\<inter> H\n\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)", "by simp"], ["proof (state)\nthis:\n  filter_sup F G \\<inter> H = filter_sup (F \\<inter> H) (G \\<inter> H)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe following result generalises \\cite[10.11]{DaveyPriestley2002} to distributive lattices as remarked after that section.\n\\<close>"], ["", "lemma ultra_filter_prime:\n  assumes \"ultra_filter F\"\n    shows \"prime_filter F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prime_filter F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_filter F", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_filter F", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. prime_filter F", "assume 1: \"x \\<squnion> y \\<in> F \\<and> x \\<notin> F\""], ["proof (state)\nthis:\n  x \\<squnion> y \\<in> F \\<and> x \\<notin> F\n\ngoal (1 subgoal):\n 1. prime_filter F", "let ?G = \"\\<Up>{ z . \\<exists>w\\<in>F . x \\<sqinter> w = z }\""], ["proof (state)\ngoal (1 subgoal):\n 1. prime_filter F", "have 2: \"filter ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z})", "using assms filter_inf_filter"], ["proof (prove)\nusing this:\n  ultra_filter F\n  ord_class.filter ?F \\<Longrightarrow>\n  ord_class.filter (\\<Up>{y. \\<exists>z\\<in>?F. ?x \\<sqinter> z = y})\n\ngoal (1 subgoal):\n 1. ord_class.filter (\\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z})", "by simp"], ["proof (state)\nthis:\n  ord_class.filter (\\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z})\n\ngoal (1 subgoal):\n 1. prime_filter F", "have \"x \\<in> ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "using 1"], ["proof (prove)\nusing this:\n  x \\<squnion> y \\<in> F \\<and> x \\<notin> F\n\ngoal (1 subgoal):\n 1. x \\<in> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "by auto"], ["proof (state)\nthis:\n  x \\<in> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n\ngoal (1 subgoal):\n 1. prime_filter F", "hence 3: \"F \\<noteq> ?G\""], ["proof (prove)\nusing this:\n  x \\<in> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "using 1"], ["proof (prove)\nusing this:\n  x \\<in> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n  x \\<squnion> y \\<in> F \\<and> x \\<notin> F\n\ngoal (1 subgoal):\n 1. F \\<noteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "by auto"], ["proof (state)\nthis:\n  F \\<noteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n\ngoal (1 subgoal):\n 1. prime_filter F", "have \"F \\<subseteq> ?G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "using inf_le2 order_trans"], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<le> ?y\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. F \\<subseteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}", "by blast"], ["proof (state)\nthis:\n  F \\<subseteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n\ngoal (1 subgoal):\n 1. prime_filter F", "hence \"?G = UNIV\""], ["proof (prove)\nusing this:\n  F \\<subseteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n\ngoal (1 subgoal):\n 1. \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z} = UNIV", "using 2 3 assms"], ["proof (prove)\nusing this:\n  F \\<subseteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n  ord_class.filter (\\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z})\n  F \\<noteq> \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z}\n  ultra_filter F\n\ngoal (1 subgoal):\n 1. \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z} = UNIV", "by blast"], ["proof (state)\nthis:\n  \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z} = UNIV\n\ngoal (1 subgoal):\n 1. prime_filter F", "then"], ["proof (chain)\npicking this:\n  \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z} = UNIV", "obtain z where 4: \"z \\<in> F \\<and> x \\<sqinter> z \\<le> y\""], ["proof (prove)\nusing this:\n  \\<Up>{z. \\<exists>w\\<in>F. x \\<sqinter> w = z} = UNIV\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        z \\<in> F \\<and> x \\<sqinter> z \\<le> y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  z \\<in> F \\<and> x \\<sqinter> z \\<le> y\n\ngoal (1 subgoal):\n 1. prime_filter F", "hence \"y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> z\""], ["proof (prove)\nusing this:\n  z \\<in> F \\<and> x \\<sqinter> z \\<le> y\n\ngoal (1 subgoal):\n 1. y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> z", "by (simp add: inf_sup_distrib2 sup_absorb2)"], ["proof (state)\nthis:\n  y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> z\n\ngoal (1 subgoal):\n 1. prime_filter F", "also"], ["proof (state)\nthis:\n  y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> z\n\ngoal (1 subgoal):\n 1. prime_filter F", "have \"... \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<squnion> y) \\<sqinter> z \\<in> F", "using 1 4 assms filter_inf_closed"], ["proof (prove)\nusing this:\n  x \\<squnion> y \\<in> F \\<and> x \\<notin> F\n  z \\<in> F \\<and> x \\<sqinter> z \\<le> y\n  ultra_filter F\n  \\<lbrakk>ord_class.filter ?F; ?x \\<in> ?F; ?y \\<in> ?F\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqinter> ?y \\<in> ?F\n\ngoal (1 subgoal):\n 1. (x \\<squnion> y) \\<sqinter> z \\<in> F", "by auto"], ["proof (state)\nthis:\n  (x \\<squnion> y) \\<sqinter> z \\<in> F\n\ngoal (1 subgoal):\n 1. prime_filter F", "finally"], ["proof (chain)\npicking this:\n  y \\<sqinter> z \\<in> F", "have \"y \\<in> F\""], ["proof (prove)\nusing this:\n  y \\<sqinter> z \\<in> F\n\ngoal (1 subgoal):\n 1. y \\<in> F", "using assms"], ["proof (prove)\nusing this:\n  y \\<sqinter> z \\<in> F\n  ultra_filter F\n\ngoal (1 subgoal):\n 1. y \\<in> F", "by (simp add: filter_def)"], ["proof (state)\nthis:\n  y \\<in> F\n\ngoal (1 subgoal):\n 1. prime_filter F", "}"], ["proof (state)\nthis:\n  ?x2 \\<squnion> ?y2 \\<in> F \\<and> ?x2 \\<notin> F \\<Longrightarrow>\n  ?y2 \\<in> F\n\ngoal (1 subgoal):\n 1. prime_filter F", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x2 \\<squnion> ?y2 \\<in> F \\<and> ?x2 \\<notin> F \\<Longrightarrow>\n  ?y2 \\<in> F\n\ngoal (1 subgoal):\n 1. prime_filter F", "using assms"], ["proof (prove)\nusing this:\n  ?x2 \\<squnion> ?y2 \\<in> F \\<and> ?x2 \\<notin> F \\<Longrightarrow>\n  ?y2 \\<in> F\n  ultra_filter F\n\ngoal (1 subgoal):\n 1. prime_filter F", "by blast"], ["proof (state)\nthis:\n  prime_filter F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma up_dist_inf_inter:\n  assumes \"is_up_set S\"\n    shows \"\\<up>(x \\<sqinter> y) \\<inter> S = filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<sqinter> y) \\<inter> S =\n    filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<up>(x \\<sqinter> y) \\<inter> S\n    \\<subseteq> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S\n 2. filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n    \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S", "show \"\\<up>(x \\<sqinter> y) \\<inter> S \\<subseteq> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<up>(x \\<sqinter> y) \\<inter> S\n    \\<subseteq> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "let ?x = \"x \\<squnion> z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "let ?y = \"y \\<squnion> z\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "assume \"z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S\""], ["proof (state)\nthis:\n  z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "hence 1: \"x \\<sqinter> y \\<le> z \\<and> z \\<in> S\""], ["proof (prove)\nusing this:\n  z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> z \\<and> z \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "hence \"?x \\<in> (\\<up>x \\<inter> S) \\<and> ?y \\<in> (\\<up>y \\<inter> S) \\<and> ?x \\<sqinter> ?y \\<le> z\""], ["proof (prove)\nusing this:\n  x \\<sqinter> y \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<squnion> z \\<in> \\<up>x \\<inter> S \\<and>\n    y \\<squnion> z \\<in> \\<up>y \\<inter> S \\<and>\n    (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) \\<le> z", "using assms sup_absorb2 sup_inf_distrib2"], ["proof (prove)\nusing this:\n  x \\<sqinter> y \\<le> z \\<and> z \\<in> S\n  is_up_set S\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<squnion> ?y = ?y\n  ?y \\<sqinter> ?z \\<squnion> ?x =\n  (?y \\<squnion> ?x) \\<sqinter> (?z \\<squnion> ?x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> z \\<in> \\<up>x \\<inter> S \\<and>\n    y \\<squnion> z \\<in> \\<up>y \\<inter> S \\<and>\n    (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) \\<le> z", "by fastforce"], ["proof (state)\nthis:\n  x \\<squnion> z \\<in> \\<up>x \\<inter> S \\<and>\n  y \\<squnion> z \\<in> \\<up>y \\<inter> S \\<and>\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S \\<Longrightarrow>\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S", "thus \"z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\""], ["proof (prove)\nusing this:\n  x \\<squnion> z \\<in> \\<up>x \\<inter> S \\<and>\n  y \\<squnion> z \\<in> \\<up>y \\<inter> S \\<and>\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S", "using filter_sup_def 1"], ["proof (prove)\nusing this:\n  x \\<squnion> z \\<in> \\<up>x \\<inter> S \\<and>\n  y \\<squnion> z \\<in> \\<up>y \\<inter> S \\<and>\n  (x \\<squnion> z) \\<sqinter> (y \\<squnion> z) \\<le> z\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n  x \\<sqinter> y \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S", "by fastforce"], ["proof (state)\nthis:\n  z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<up>(x \\<sqinter> y) \\<inter> S\n  \\<subseteq> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n    \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n    \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S", "show \"filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n    \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "assume \"z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\""], ["proof (state)\nthis:\n  z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "then"], ["proof (chain)\npicking this:\n  z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S", "obtain u v where 2: \"u\\<in>\\<up>x \\<and> v\\<in>\\<up>y \\<and> u \\<sqinter> v \\<le> z \\<and> z \\<in> S\""], ["proof (prove)\nusing this:\n  z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        u \\<in> \\<up>x \\<and>\n        v \\<in> \\<up>y \\<and>\n        u \\<sqinter> v \\<le> z \\<and> z \\<in> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using filter_sup_def"], ["proof (prove)\nusing this:\n  z \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n  filter_sup ?F ?G \\<equiv>\n  {z. \\<exists>x\\<in>?F. \\<exists>y\\<in>?G. x \\<sqinter> y \\<le> z}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        u \\<in> \\<up>x \\<and>\n        v \\<in> \\<up>y \\<and>\n        u \\<sqinter> v \\<le> z \\<and> z \\<in> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> \\<up>x \\<and>\n  v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "hence \"x \\<sqinter> y \\<le> z\""], ["proof (prove)\nusing this:\n  u \\<in> \\<up>x \\<and>\n  v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> z", "using order.trans inf_mono"], ["proof (prove)\nusing this:\n  u \\<in> \\<up>x \\<and>\n  v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<and> z \\<in> S\n  \\<lbrakk>?a \\<le> ?b; ?b \\<le> ?c\\<rbrakk> \\<Longrightarrow> ?a \\<le> ?c\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a \\<sqinter> ?b \\<le> ?c \\<sqinter> ?d\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<le> z", "by blast"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter>\n                S \\<Longrightarrow>\n       xa \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "thus \"z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S\""], ["proof (prove)\nusing this:\n  x \\<sqinter> y \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "using 2"], ["proof (prove)\nusing this:\n  x \\<sqinter> y \\<le> z\n  u \\<in> \\<up>x \\<and>\n  v \\<in> \\<up>y \\<and> u \\<sqinter> v \\<le> z \\<and> z \\<in> S\n\ngoal (1 subgoal):\n 1. z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S", "by blast"], ["proof (state)\nthis:\n  z \\<in> \\<up>(x \\<sqinter> y) \\<inter> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  filter_sup (\\<up>x \\<inter> S) (\\<up>y \\<inter> S) \\<inter> S\n  \\<subseteq> \\<up>(x \\<sqinter> y) \\<inter> S\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context distrib_lattice_bot\nbegin"], ["", "lemma prime_filter:\n  \"proper_filter F \\<Longrightarrow> \\<exists>G . prime_filter G \\<and> F \\<subseteq> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper_filter F \\<Longrightarrow>\n    \\<exists>G. prime_filter G \\<and> F \\<subseteq> G", "by (metis ultra_filter ultra_filter_prime)"], ["", "end"], ["", "context distrib_lattice_top\nbegin"], ["", "lemma complemented_filter_inf_principal:\n  assumes \"filter_complements F G\"\n    shows \"is_principal_up (F \\<inter> \\<up>x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "have 1: \"filter F \\<and> filter G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ord_class.filter F \\<and> ord_class.filter G", "by (simp add: assms)"], ["proof (state)\nthis:\n  ord_class.filter F \\<and> ord_class.filter G\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "hence 2: \"filter (F \\<inter> \\<up>x) \\<and> filter (G \\<inter> \\<up>x)\""], ["proof (prove)\nusing this:\n  ord_class.filter F \\<and> ord_class.filter G\n\ngoal (1 subgoal):\n 1. ord_class.filter (F \\<inter> \\<up>x) \\<and>\n    ord_class.filter (G \\<inter> \\<up>x)", "by (simp add: filter_inf)"], ["proof (state)\nthis:\n  ord_class.filter (F \\<inter> \\<up>x) \\<and>\n  ord_class.filter (G \\<inter> \\<up>x)\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "have \"(F \\<inter> \\<up>x) \\<inter> (G \\<inter> \\<up>x) = {top}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x) = {top}", "using assms Int_assoc Int_insert_left_if1 inf_bot_left inf_sup_aci(3) top_in_upset inf.idem"], ["proof (prove)\nusing this:\n  filter_complements F G\n  ?A \\<inter> ?B \\<inter> ?C = ?A \\<inter> (?B \\<inter> ?C)\n  ?a \\<in> ?C \\<Longrightarrow>\n  insert ?a ?B \\<inter> ?C = insert ?a (?B \\<inter> ?C)\n  bot \\<sqinter> ?x = bot\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?y \\<sqinter> (?x \\<sqinter> ?z)\n  top \\<in> \\<up>?x\n  ?a \\<sqinter> ?a = ?a\n\ngoal (1 subgoal):\n 1. F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x) = {top}", "by auto"], ["proof (state)\nthis:\n  F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x) = {top}\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "hence 3: \"is_principal_up ((F \\<inter> \\<up>x) \\<inter> (G \\<inter> \\<up>x))\""], ["proof (prove)\nusing this:\n  F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x) = {top}\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x))", "using up_top"], ["proof (prove)\nusing this:\n  F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x) = {top}\n  \\<up>top = {top}\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x))", "by blast"], ["proof (state)\nthis:\n  is_principal_up (F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x))\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "have \"filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) = filter_sup F G \\<inter> \\<up>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) =\n    filter_sup F G \\<inter> \\<up>x", "using 1 filter_inf_right_dist_sup up_filter"], ["proof (prove)\nusing this:\n  ord_class.filter F \\<and> ord_class.filter G\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   ord_class.filter ?H\\<rbrakk>\n  \\<Longrightarrow> filter_sup ?F ?G \\<inter> ?H =\n                    filter_sup (?F \\<inter> ?H) (?G \\<inter> ?H)\n  ord_class.filter (\\<up>?x)\n\ngoal (1 subgoal):\n 1. filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) =\n    filter_sup F G \\<inter> \\<up>x", "by auto"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) =\n  filter_sup F G \\<inter> \\<up>x\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "also"], ["proof (state)\nthis:\n  filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) =\n  filter_sup F G \\<inter> \\<up>x\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "have \"... = \\<up>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. filter_sup F G \\<inter> \\<up>x = \\<up>x", "by (simp add: assms)"], ["proof (state)\nthis:\n  filter_sup F G \\<inter> \\<up>x = \\<up>x\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "finally"], ["proof (chain)\npicking this:\n  filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) = \\<up>x", "have \"is_principal_up (filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x))\""], ["proof (prove)\nusing this:\n  filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x) = \\<up>x\n\ngoal (1 subgoal):\n 1. is_principal_up (filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x))", "by auto"], ["proof (state)\nthis:\n  is_principal_up (filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x))\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  is_principal_up (filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x))\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "using 1 2 3 inf_sup_principal_aux"], ["proof (prove)\nusing this:\n  is_principal_up (filter_sup (F \\<inter> \\<up>x) (G \\<inter> \\<up>x))\n  ord_class.filter F \\<and> ord_class.filter G\n  ord_class.filter (F \\<inter> \\<up>x) \\<and>\n  ord_class.filter (G \\<inter> \\<up>x)\n  is_principal_up (F \\<inter> \\<up>x \\<inter> (G \\<inter> \\<up>x))\n  \\<lbrakk>ord_class.filter ?F; ord_class.filter ?G;\n   is_principal_up (filter_sup ?F ?G);\n   is_principal_up (?F \\<inter> ?G)\\<rbrakk>\n  \\<Longrightarrow> is_principal_up ?F\n\ngoal (1 subgoal):\n 1. is_principal_up (F \\<inter> \\<up>x)", "by blast"], ["proof (state)\nthis:\n  is_principal_up (F \\<inter> \\<up>x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>\nThe set of filters over a distributive lattice with a greatest element forms a bounded distributive lattice.\n\\<close>"], ["", "instantiation filter :: (distrib_lattice_top) bounded_distrib_lattice\nbegin"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a Filters.filter, bounded_distrib_lattice_class)", "apply intro_classes"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "apply transfer"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>ord_class.filter x; ord_class.filter y;\n        ord_class.filter z\\<rbrakk>\n       \\<Longrightarrow> filter_sup x (y \\<inter> z) =\n                         filter_sup x y \\<inter> filter_sup x z", "by (simp add: filter_sup_left_dist_inf)"], ["", "end"], ["", "end"]]}