{"file_name": "/home/qj213/afp-2021-10-22/thys/QR_Decomposition/Generalizations2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/QR_Decomposition", "problem_names": ["lemma two_not_one: \"2 \\<noteq> (1::'a)\"", "lemma cnj_0[simp]: \"cnj 0 = 0\"", "lemma cnj_0_eq[simp]: \"(cnj a = 0) = (a = 0)\"", "lemma a_cnj_a_0: \"(a*cnj a = 0) = (a = 0)\"", "lemma cnj_sum: \"cnj (\\<Sum>xa\\<in>A. ((f xa))) = (\\<Sum>xa\\<in>A. cnj (f xa))\"", "lemma real_minus: \"real_of (a - b) = real_of a - real_of b\"", "lemma real_0[simp]: \"real_of 0 = 0\"", "lemma real_sum:\n  \"real_of (sum (\\<lambda>i. f i) A) = sum (\\<lambda>i. real_of (f i)) A\"", "lemma inner_zero_left [simp]: \"inner 0 x = 0\"", "lemma inner_minus_left [simp]: \"inner (- x) y = - inner x y\"", "lemma inner_diff_left: \"inner (x - y) z = inner x z - inner y z\"", "lemma inner_sum_left: \"inner (\\<Sum>x\\<in>A. f x) y = (\\<Sum>x\\<in>A. inner (f x) y)\"", "lemma inner_add_right: \"inner x (y + z) = inner x y + inner x z\"", "lemma inner_scaleR_right [simp]: \"inner x (scale r y) = (cnj r) * (inner x y)\"", "lemma inner_zero_right [simp]: \"inner x 0 = 0\"", "lemma inner_minus_right [simp]: \"inner x (- y) = - inner x y\"", "lemma inner_diff_right: \"inner x (y - z) = inner x y - inner x z\"", "lemma inner_sum_right: \"inner x (\\<Sum>y\\<in>A. f y) = (\\<Sum>y\\<in>A. inner x (f y))\"", "lemmas inner_add [algebra_simps] = inner_add_left inner_add_right", "lemmas inner_diff [algebra_simps]  = inner_diff_left inner_diff_right", "lemmas inner_scaleR = inner_scaleR_left inner_scaleR_right", "lemmas inner_left_distrib = inner_add_left", "lemmas inner_right_distrib = inner_add_right", "lemmas inner_distrib = inner_left_distrib inner_right_distrib", "lemma aux_Cauchy:\nshows \"0 \\<le> real_of (inner x x + (cnj a) * (inner x y) + a * ((cnj (inner x y)) + (cnj a) * (inner y y)))\"", "lemma real_inner_inner: \"real_of (inner x x * inner y y) = real_of (inner x x) * real_of (inner y y)\"", "lemma Cauchy_Schwarz_ineq:\n  \"real_of (cnj (inner x y) * inner x y) \\<le> real_of (inner x x) * real_of (inner y y)\"", "lemmas norm_eq_sqrt_inner = norm_def", "lemma inner_cnj_ge_zero[simp]: \"real_of ((inner x y) * cnj (inner x y)) \\<ge> 0\"", "lemma power2_norm_eq_inner: \"(norm x)\\<^sup>2 = real_of (inner x x)\"", "lemma Cauchy_Schwarz_ineq2:\n  \"sqrt (real_of (cnj (inner x y) * inner x y)) \\<le> norm x * norm y\"", "lemma orthogonal_clauses:\n  \"orthogonal a 0\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a (scale c x)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a (- x)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a y \\<Longrightarrow> orthogonal a (x + y)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a y \\<Longrightarrow> orthogonal a (x - y)\"\n  \"orthogonal 0 a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal (scale c x) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal (- x) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal y a \\<Longrightarrow> orthogonal (x + y) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal y a \\<Longrightarrow> orthogonal (x - y) a\"", "lemma inner_commute_zero: \"(inner xa x = 0) = (inner x xa = 0)\"", "lemma vector_sub_project_orthogonal: \n  \"inner b (x - scale (inner x b / (inner b b)) b) = 0\"", "lemma orthogonal_commute: \"orthogonal x y \\<longleftrightarrow> orthogonal y x\"", "lemma pairwise_orthogonal_insert:\n  assumes \"pairwise orthogonal S\"\n  and \"\\<And>y. y \\<in> S \\<Longrightarrow> orthogonal x y\"\n  shows \"pairwise orthogonal (insert x S)\"", "lemma sum_0_all:\n  assumes a: \"\\<forall>a\\<in>A. f a \\<ge> (0 :: real)\" \n  and s0: \"sum f A = 0\" and f: \"finite A\"\n  shows \"\\<forall>a\\<in>A. f a = 0\"", "lemma inner_ge_zero [simp]: \"0 \\<le> real_of (inner x x)\"", "lemma real_scalar_mult2: \"real_of (inner x x) *\\<^sub>R A = inner x x * A\"", "lemma i1: \"inner x y = cnj (inner y x)\"", "lemma i2: \"inner (x + y) z = inner x z + inner y z\"", "lemma i3: \"inner (r *s x) y = r * inner x y\"", "lemma i4: assumes \"inner x x = 0\"\nshows \"x = 0\"", "lemma inner_0_0[simp]: \"inner 0 0 = 0\"", "lemma dot_lmul_matrix: \"inner_rows (x v* A) y = inner_cols x ((\\<chi> i j. cnj (A $ i $ j)) *v y)\"", "lemma subspace_orthogonal_complement: \"subspace (orthogonal_complement W)\"", "lemma orthogonal_complement_mono:\n  assumes A_in_B: \"A \\<subseteq> B\"\n  shows \"orthogonal_complement B \\<subseteq> orthogonal_complement A\"", "lemma B_in_orthogonal_complement_of_orthogonal_complement:\n  shows \"B \\<subseteq> orthogonal_complement (orthogonal_complement B)\"", "lemma vector_sub_project_orthogonal_proj:\n  shows \"inner b (x - proj x b) = 0\"", "lemma orthogonal_proj_set:\n  assumes yC: \"y\\<in>C\" and C: \"finite C\" and p: \"pairwise orthogonal C\"\n  shows \"orthogonal (a - proj_onto a C) y\"", "lemma pairwise_orthogonal_proj_set:\n  assumes C: \"finite C\" and p: \"pairwise orthogonal C\"\n  shows \"pairwise orthogonal (insert (a - proj_onto a C) C)\"", "lemma orthogonal_real_eq: \"RV_inner.orthogonal = real_inner_class.orthogonal\"", "lemma cnj_cnj_matrix[simp]: \"(\\<chi> i j. cnj ((\\<chi> i j. cnj (A $ i $ j)) $ i $ j)) = A\"", "lemma cnj_transpose[simp]: \"(\\<chi> i j. cnj (transpose A $ i $ j)) = transpose (\\<chi> i j. cnj (A $ i $ j))\"", "lemma null_space_orthogonal_complement_row_space:\n  fixes A::\"'a^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"null_space A = COLS.v.orthogonal_complement (row_space (\\<chi> i j. cnj (A $ i $ j)))\"", "lemma left_null_space_orthogonal_complement_col_space:\n  fixes A::\"'a^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = ROWS.v.orthogonal_complement (col_space (\\<chi> i j. cnj (A $ i $ j)))\"", "lemma null_space_orthogonal_complement_row_space_complex:\n  fixes A::\"complex^'cols::{finite,wellorder}^'rows::{finite,wellorder}\"\n  shows \"null_space A = complex_matrix.orthogonal_complement (row_space (\\<chi> i j. cnj (A $ i $ j)))\"", "lemma left_null_space_orthogonal_complement_col_space_complex:\n  fixes A::\"complex^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = complex_matrix.orthogonal_complement (col_space (\\<chi> i j. cnj (A $ i $ j)))\"", "lemma null_space_orthogonal_complement_row_space_reals:\n  fixes A::\"real^'cols::{finite,wellorder}^'rows::{finite,wellorder}\"\n  shows \"null_space A = real_matrix.orthogonal_complement (row_space A)\"", "lemma left_null_space_orthogonal_complement_col_space_real:\n  fixes A::\"real^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = real_matrix.orthogonal_complement (col_space A)\""], "translations": [["", "lemma two_not_one: \"2 \\<noteq> (1::'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2::'a) \\<noteq> (1::'a)", "proof (rule ccontr, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. (2::'a) = (1::'a) \\<Longrightarrow> False", "assume \"2 = (1::'a)\""], ["proof (state)\nthis:\n  (2::'a) = (1::'a)\n\ngoal (1 subgoal):\n 1. (2::'a) = (1::'a) \\<Longrightarrow> False", "hence \"2 - 1 = 1 - (1::'a)\""], ["proof (prove)\nusing this:\n  (2::'a) = (1::'a)\n\ngoal (1 subgoal):\n 1. (2::'a) - (1::'a) = (1::'a) - (1::'a)", "by auto"], ["proof (state)\nthis:\n  (2::'a) - (1::'a) = (1::'a) - (1::'a)\n\ngoal (1 subgoal):\n 1. (2::'a) = (1::'a) \\<Longrightarrow> False", "hence \"1 = (0::'a)\""], ["proof (prove)\nusing this:\n  (2::'a) - (1::'a) = (1::'a) - (1::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  (1::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. (2::'a) = (1::'a) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  (1::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. False", "using one_neq_zero"], ["proof (prove)\nusing this:\n  (1::'a) = (0::'a)\n  (1::'a) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnj_0[simp]: \"cnj 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "have \"cnj 0 = cnj (0 + 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = cnj_class.cnj ((0::'a) + (0::'a))", "by auto"], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) = cnj_class.cnj ((0::'a) + (0::'a))\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "also"], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) = cnj_class.cnj ((0::'a) + (0::'a))\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "have \"... = cnj 0 + cnj 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj ((0::'a) + (0::'a)) =\n    cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a)", "unfolding cnj_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a) =\n    cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a)", ".."], ["proof (state)\nthis:\n  cnj_class.cnj ((0::'a) + (0::'a)) =\n  cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "also"], ["proof (state)\nthis:\n  cnj_class.cnj ((0::'a) + (0::'a)) =\n  cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "have \"... = 2 * (cnj 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a) =\n    (2::'a) * cnj_class.cnj (0::'a)", "by (simp add: local.mult_2)"], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) + cnj_class.cnj (0::'a) =\n  (2::'a) * cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  cnj_class.cnj (0::'a) = (2::'a) * cnj_class.cnj (0::'a)", "have \"cnj 0 = 2 * cnj 0\""], ["proof (prove)\nusing this:\n  cnj_class.cnj (0::'a) = (2::'a) * cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (2::'a) * cnj_class.cnj (0::'a)", "."], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) = (2::'a) * cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  cnj_class.cnj (0::'a) = (2::'a) * cnj_class.cnj (0::'a)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = (0::'a)", "by (auto simp add: two_not_one)"], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cnj_0_eq[simp]: \"(cnj a = 0) = (a = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cnj_class.cnj a = (0::'a)) = (a = (0::'a))", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. (0::'a) = cnj_class.cnj a \\<Longrightarrow> a = cnj_class.cnj a", "assume cnj_rw: \"0 = cnj a\""], ["proof (state)\nthis:\n  (0::'a) = cnj_class.cnj a\n\ngoal (1 subgoal):\n 1. (0::'a) = cnj_class.cnj a \\<Longrightarrow> a = cnj_class.cnj a", "have \"cnj (cnj a) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (cnj_class.cnj a) = a", "using cnj_idem"], ["proof (prove)\nusing this:\n  cnj_class.cnj (cnj_class.cnj ?a) = ?a\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (cnj_class.cnj a) = a", "by simp"], ["proof (state)\nthis:\n  cnj_class.cnj (cnj_class.cnj a) = a\n\ngoal (1 subgoal):\n 1. (0::'a) = cnj_class.cnj a \\<Longrightarrow> a = cnj_class.cnj a", "hence \"cnj 0 = a\""], ["proof (prove)\nusing this:\n  cnj_class.cnj (cnj_class.cnj a) = a\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (0::'a) = a", "unfolding cnj_rw"], ["proof (prove)\nusing this:\n  cnj_class.cnj (cnj_class.cnj a) = a\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (cnj_class.cnj a) = a", "."], ["proof (state)\nthis:\n  cnj_class.cnj (0::'a) = a\n\ngoal (1 subgoal):\n 1. (0::'a) = cnj_class.cnj a \\<Longrightarrow> a = cnj_class.cnj a", "hence \"a = 0\""], ["proof (prove)\nusing this:\n  cnj_class.cnj (0::'a) = a\n\ngoal (1 subgoal):\n 1. a = (0::'a)", "by simp"], ["proof (state)\nthis:\n  a = (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) = cnj_class.cnj a \\<Longrightarrow> a = cnj_class.cnj a", "thus \"a = cnj a\""], ["proof (prove)\nusing this:\n  a = (0::'a)\n\ngoal (1 subgoal):\n 1. a = cnj_class.cnj a", "using cnj_rw"], ["proof (prove)\nusing this:\n  a = (0::'a)\n  (0::'a) = cnj_class.cnj a\n\ngoal (1 subgoal):\n 1. a = cnj_class.cnj a", "by simp"], ["proof (state)\nthis:\n  a = cnj_class.cnj a\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma a_cnj_a_0: \"(a*cnj a = 0) = (a = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * cnj_class.cnj a = (0::'a)) = (a = (0::'a))", "by simp"], ["", "end"], ["", "lemma cnj_sum: \"cnj (\\<Sum>xa\\<in>A. ((f xa))) = (\\<Sum>xa\\<in>A. cnj (f xa))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (sum f A) = (\\<Sum>xa\\<in>A. cnj_class.cnj (f xa))", "by (cases \"finite A\", induct set: finite, auto simp add: cnj_add)"], ["", "instantiation real :: cnj\nbegin"], ["", "definition \"(cnj_real :: real\\<Rightarrow>real)= id\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, cnj_class)", "by (intro_classes, auto simp add: cnj_real_def)"], ["", "end"], ["", "instantiation complex :: cnj\nbegin"], ["", "definition \"(cnj_complex :: complex\\<Rightarrow>complex)= Complex.cnj\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, cnj_class)", "by (intro_classes, auto simp add: cnj_complex_def)"], ["", "end"], ["", "subsection\\<open>Real\\_of\\_extended class\\<close>"], ["", "class real_of_extended = real_vector + cnj +\n fixes real_of :: \"'a \\<Rightarrow> real\"\n assumes real_add:\"real_of ((a::'a) + b) = real_of a + real_of b\"\n  and real_uminus: \"real_of (-a) = - real_of a\"\n  and real_scalar_mult: \"real_of (c *\\<^sub>R a) = c * (real_of a)\"\n  and real_a_cnj_ge_0: \"real_of (a*cnj a)\\<ge>0\"\nbegin"], ["", "lemma real_minus: \"real_of (a - b) = real_of a - real_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "have \"real_of (a - b) = real_of (a + - b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of (a + - b)", "by simp"], ["proof (state)\nthis:\n  real_of (a - b) = real_of (a + - b)\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "also"], ["proof (state)\nthis:\n  real_of (a - b) = real_of (a + - b)\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "have \"... = real_of a + real_of (- b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (a + - b) = real_of a + real_of (- b)", "unfolding real_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of a + real_of (- b) = real_of a + real_of (- b)", ".."], ["proof (state)\nthis:\n  real_of (a + - b) = real_of a + real_of (- b)\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "also"], ["proof (state)\nthis:\n  real_of (a + - b) = real_of a + real_of (- b)\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "have \"... = real_of a + - real_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of a + real_of (- b) = real_of a + - real_of b", "unfolding real_uminus"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of a + - real_of b = real_of a + - real_of b", ".."], ["proof (state)\nthis:\n  real_of a + real_of (- b) = real_of a + - real_of b\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "also"], ["proof (state)\nthis:\n  real_of a + real_of (- b) = real_of a + - real_of b\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "have \"... = real_of a - real_of b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of a + - real_of b = real_of a - real_of b", "by simp"], ["proof (state)\nthis:\n  real_of a + - real_of b = real_of a - real_of b\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "finally"], ["proof (chain)\npicking this:\n  real_of (a - b) = real_of a - real_of b", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of (a - b) = real_of a - real_of b\n\ngoal (1 subgoal):\n 1. real_of (a - b) = real_of a - real_of b", "."], ["proof (state)\nthis:\n  real_of (a - b) = real_of a - real_of b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_0[simp]: \"real_of 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "have \"real_of 0 = real_of (0+0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (0::'a) = real_of ((0::'a) + (0::'a))", "by auto"], ["proof (state)\nthis:\n  real_of (0::'a) = real_of ((0::'a) + (0::'a))\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "also"], ["proof (state)\nthis:\n  real_of (0::'a) = real_of ((0::'a) + (0::'a))\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "have \"... = real_of 0 + real_of 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of ((0::'a) + (0::'a)) = real_of (0::'a) + real_of (0::'a)", "unfolding real_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (0::'a) + real_of (0::'a) = real_of (0::'a) + real_of (0::'a)", ".."], ["proof (state)\nthis:\n  real_of ((0::'a) + (0::'a)) = real_of (0::'a) + real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "also"], ["proof (state)\nthis:\n  real_of ((0::'a) + (0::'a)) = real_of (0::'a) + real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "have \"... = 2*(real_of 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (0::'a) + real_of (0::'a) = 2 * real_of (0::'a)", "by auto"], ["proof (state)\nthis:\n  real_of (0::'a) + real_of (0::'a) = 2 * real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "finally"], ["proof (chain)\npicking this:\n  real_of (0::'a) = 2 * real_of (0::'a)", "have \"real_of 0 = 2* real_of 0\""], ["proof (prove)\nusing this:\n  real_of (0::'a) = 2 * real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 2 * real_of (0::'a)", "."], ["proof (state)\nthis:\n  real_of (0::'a) = 2 * real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_of (0::'a) = 2 * real_of (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (0::'a) = 0", "by (auto simp add: two_not_one)"], ["proof (state)\nthis:\n  real_of (0::'a) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_sum:\n  \"real_of (sum (\\<lambda>i. f i) A) = sum (\\<lambda>i. real_of (f i)) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "proof (cases \"finite A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))\n 2. infinite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (2 subgoals):\n 1. finite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))\n 2. infinite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "thus ?thesis"], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "by auto"], ["proof (state)\nthis:\n  real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (1 subgoal):\n 1. finite A \\<Longrightarrow>\n    real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "thus ?thesis"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))", "by (induct, auto simp add: real_add)"], ["proof (state)\nthis:\n  real_of (sum f A) = (\\<Sum>i\\<in>A. real_of (f i))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "instantiation real :: real_of_extended\nbegin"], ["", "definition real_of_real :: \"real \\<Rightarrow> real\" where \"real_of_real = id\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(real, real_of_extended_class)", "by (intro_classes, auto simp add: real_of_real_def cnj_real_def)"], ["", "end"], ["", "instantiation complex :: real_of_extended\nbegin"], ["", "definition real_of_complex :: \"complex \\<Rightarrow> real\" where \"real_of_complex = Re\""], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS(complex, real_of_extended_class)", "by (intro_classes, auto simp add: real_of_complex_def cnj_complex_def)"], ["", "end"], ["", "subsection\\<open>Generalizing HMA\\<close>"], ["", "subsubsection\\<open>Inner product spaces\\<close>"], ["", "text\\<open>We generalize the \\<open>real_inner class\\<close> to more general inner product spaces.\\<close>"], ["", "locale inner_product_space = vector_space scale\n  for scale :: \"('a::{field, cnj, real_of_extended} => 'b::ab_group_add => 'b)\" +\n  fixes inner :: \"'b \\<Rightarrow> 'b \\<Rightarrow> 'a\"\n  assumes inner_commute: \"inner x y = cnj (inner y x)\"\n  and inner_add_left: \"inner (x+y) z = inner x z + inner y z\"\n  and inner_scaleR_left [simp]:\"inner (scale r x) y = r * inner x y\"\n  and inner_ge_zero [simp]:\"0 \\<le> real_of (inner x x)\"\n  and inner_eq_zero_iff [simp]: \"inner x x = 0 \\<longleftrightarrow> x=0\"\n  (*Properties related to real and inner that must be assumed.*)\n  and real_scalar_mult2: \"real_of (inner x x) *\\<^sub>R A = inner x x * A\"\n  and inner_gt_zero_iff: \"0 < real_of (inner x x) \\<longleftrightarrow> x \\<noteq> 0\""], ["", "interpretation RV_inner: inner_product_space scaleR inner"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner_product_space (*\\<^sub>R) (\\<bullet>)", "by (unfold_locales) (auto simp: cnj_real_def inner_add_left real_of_real_def algebra_simps inner_commute)"], ["", "interpretation RR_inner: inner_product_space scaleR \"(*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner_product_space (*\\<^sub>R) (*)", "by (unfold_locales, auto simp add: cnj_real_def distrib_right real_of_real_def) \n   (metis not_real_square_gt_zero)"], ["", "interpretation CC_inner: inner_product_space \"((*)::complex\\<Rightarrow>complex\\<Rightarrow>complex)\" \"\\<lambda>x y. x*cnj y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner_product_space (*) (\\<lambda>x y. x * cnj_class.cnj y)", "apply (unfold_locales)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y. x * cnj_class.cnj y = cnj_class.cnj (y * cnj_class.cnj x)\n 2. \\<And>x y z.\n       (x + y) * cnj_class.cnj z = x * cnj_class.cnj z + y * cnj_class.cnj z\n 3. \\<And>r x y. r * x * cnj_class.cnj y = r * (x * cnj_class.cnj y)\n 4. \\<And>x. 0 \\<le> real_of (x * cnj_class.cnj x)\n 5. \\<And>x. (x * cnj_class.cnj x = 0) = (x = 0)\n 6. \\<And>x A.\n       real_of (x * cnj_class.cnj x) *\\<^sub>R A = x * cnj_class.cnj x * A\n 7. \\<And>x. (0 < real_of (x * cnj_class.cnj x)) = (x \\<noteq> 0)", "apply (auto simp add: real_of_complex_def cnj_complex_def distrib_left distrib_right complex_mult_cnj complex_neq_0 cmod_power2 complex_norm_square)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       (complex_of_real (Re x))\\<^sup>2 + (complex_of_real (Im x))\\<^sup>2 =\n       0 \\<Longrightarrow>\n       x = 0\n 2. \\<And>x A.\n       ((Re x)\\<^sup>2 + (Im x)\\<^sup>2) *\\<^sub>R A =\n       (complex_of_real (Re x))\\<^sup>2 * A +\n       (complex_of_real (Im x))\\<^sup>2 * A", "apply (metis Re_complex_of_real complex_neq_0 less_numeral_extra(3) of_real_add of_real_power zero_complex.simps(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x A.\n       ((Re x)\\<^sup>2 + (Im x)\\<^sup>2) *\\<^sub>R A =\n       (complex_of_real (Re x))\\<^sup>2 * A +\n       (complex_of_real (Im x))\\<^sup>2 * A", "by (simp add: distrib_left mult.commute scaleR_conv_of_real)"], ["", "context inner_product_space\nbegin"], ["", "lemma inner_zero_left [simp]: \"inner 0 x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (0::'b) x = (0::'a)", "using inner_add_left [of 0 0 x]"], ["proof (prove)\nusing this:\n  inner ((0::'b) + (0::'b)) x = inner (0::'b) x + inner (0::'b) x\n\ngoal (1 subgoal):\n 1. inner (0::'b) x = (0::'a)", "by (auto simp add: two_not_one)"], ["", "lemma inner_minus_left [simp]: \"inner (- x) y = - inner x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (- x) y = - inner x y", "using inner_add_left [of x \"- x\" y]"], ["proof (prove)\nusing this:\n  inner (x + - x) y = inner x y + inner (- x) y\n\ngoal (1 subgoal):\n 1. inner (- x) y = - inner x y", "using add_eq_0_iff"], ["proof (prove)\nusing this:\n  inner (x + - x) y = inner x y + inner (- x) y\n  (?a + ?b = (0::?'a)) = (?b = - ?a)\n\ngoal (1 subgoal):\n 1. inner (- x) y = - inner x y", "by force"], ["", "lemma inner_diff_left: \"inner (x - y) z = inner x z - inner y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x - y) z = inner x z - inner y z", "using inner_add_left [of x \"- y\" z]"], ["proof (prove)\nusing this:\n  inner (x + - y) z = inner x z + inner (- y) z\n\ngoal (1 subgoal):\n 1. inner (x - y) z = inner x z - inner y z", "by simp"], ["", "lemma inner_sum_left: \"inner (\\<Sum>x\\<in>A. f x) y = (\\<Sum>x\\<in>A. inner (f x) y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (sum f A) y = (\\<Sum>x\\<in>A. inner (f x) y)", "by (cases \"finite A\", induct set: finite, simp_all add: inner_add_left)"], ["", "text \\<open>Transfer distributivity rules to right argument.\\<close>"], ["", "lemma inner_add_right: \"inner x (y + z) = inner x y + inner x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "have \"inner x (y + z) = cnj (inner (y + z) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (y + z) = cnj_class.cnj (inner (y + z) x)", "using inner_commute"], ["proof (prove)\nusing this:\n  inner ?x ?y = cnj_class.cnj (inner ?y ?x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = cnj_class.cnj (inner (y + z) x)", "by blast"], ["proof (state)\nthis:\n  inner x (y + z) = cnj_class.cnj (inner (y + z) x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "also"], ["proof (state)\nthis:\n  inner x (y + z) = cnj_class.cnj (inner (y + z) x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "have \"... = cnj ((inner y x) +(inner z x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner (y + z) x) = cnj_class.cnj (inner y x + inner z x)", "using inner_add_left"], ["proof (prove)\nusing this:\n  inner (?x + ?y) ?z = inner ?x ?z + inner ?y ?z\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner (y + z) x) = cnj_class.cnj (inner y x + inner z x)", "by simp"], ["proof (state)\nthis:\n  cnj_class.cnj (inner (y + z) x) = cnj_class.cnj (inner y x + inner z x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "also"], ["proof (state)\nthis:\n  cnj_class.cnj (inner (y + z) x) = cnj_class.cnj (inner y x + inner z x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "have \"... = cnj (inner y x) + cnj (inner z x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner y x + inner z x) =\n    cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x)", "using cnj_add"], ["proof (prove)\nusing this:\n  cnj_class.cnj (?a + ?b) = cnj_class.cnj ?a + cnj_class.cnj ?b\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner y x + inner z x) =\n    cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x)", "by blast"], ["proof (state)\nthis:\n  cnj_class.cnj (inner y x + inner z x) =\n  cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "also"], ["proof (state)\nthis:\n  cnj_class.cnj (inner y x + inner z x) =\n  cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x)\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "have \"... = inner x y + inner x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x) =\n    inner x y + inner x z", "using inner_commute[of x y]"], ["proof (prove)\nusing this:\n  inner x y = cnj_class.cnj (inner y x)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x) =\n    inner x y + inner x z", "using inner_commute[of x z]"], ["proof (prove)\nusing this:\n  inner x y = cnj_class.cnj (inner y x)\n  inner x z = cnj_class.cnj (inner z x)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x) =\n    inner x y + inner x z", "by simp"], ["proof (state)\nthis:\n  cnj_class.cnj (inner y x) + cnj_class.cnj (inner z x) =\n  inner x y + inner x z\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "finally"], ["proof (chain)\npicking this:\n  inner x (y + z) = inner x y + inner x z", "show ?thesis"], ["proof (prove)\nusing this:\n  inner x (y + z) = inner x y + inner x z\n\ngoal (1 subgoal):\n 1. inner x (y + z) = inner x y + inner x z", "."], ["proof (state)\nthis:\n  inner x (y + z) = inner x y + inner x z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_scaleR_right [simp]: \"inner x (scale r y) = (cnj r) * (inner x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (scale r y) = cnj_class.cnj r * inner x y", "using inner_scaleR_left [of r y x]"], ["proof (prove)\nusing this:\n  inner (scale r y) x = r * inner y x\n\ngoal (1 subgoal):\n 1. inner x (scale r y) = cnj_class.cnj r * inner x y", "by (metis (no_types) cnj_mult local.inner_commute)"], ["", "lemma inner_zero_right [simp]: \"inner x 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (0::'b) = (0::'a)", "using inner_zero_left [of x]"], ["proof (prove)\nusing this:\n  inner (0::'b) x = (0::'a)\n\ngoal (1 subgoal):\n 1. inner x (0::'b) = (0::'a)", "by (metis local.inner_commute local.inner_eq_zero_iff)"], ["", "lemma inner_minus_right [simp]: \"inner x (- y) = - inner x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (- y) = - inner x y", "using inner_minus_left [of y x]"], ["proof (prove)\nusing this:\n  inner (- y) x = - inner y x\n\ngoal (1 subgoal):\n 1. inner x (- y) = - inner x y", "by (metis (no_types) add_eq_0_iff local.inner_add_right local.inner_zero_right)"], ["", "lemma inner_diff_right: \"inner x (y - z) = inner x y - inner x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (y - z) = inner x y - inner x z", "using inner_diff_left [of y z x]"], ["proof (prove)\nusing this:\n  inner (y - z) x = inner y x - inner z x\n\ngoal (1 subgoal):\n 1. inner x (y - z) = inner x y - inner x z", "by (metis add_uminus_conv_diff local.inner_add_right local.inner_minus_right)"], ["", "lemma inner_sum_right: \"inner x (\\<Sum>y\\<in>A. f y) = (\\<Sum>y\\<in>A. inner x (f y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "have \"inner x (\\<Sum>y\\<in>A. f y) = cnj (inner (\\<Sum>y\\<in>A. f y) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x (sum f A) = cnj_class.cnj (inner (sum f A) x)", "using inner_commute"], ["proof (prove)\nusing this:\n  inner ?x ?y = cnj_class.cnj (inner ?y ?x)\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = cnj_class.cnj (inner (sum f A) x)", "by blast"], ["proof (state)\nthis:\n  inner x (sum f A) = cnj_class.cnj (inner (sum f A) x)\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "also"], ["proof (state)\nthis:\n  inner x (sum f A) = cnj_class.cnj (inner (sum f A) x)\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "have \"... = cnj (\\<Sum>xa\\<in>A. inner (f xa) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner (sum f A) x) =\n    cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x)", "unfolding inner_sum_left [of f A x]"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x) =\n    cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x)", ".."], ["proof (state)\nthis:\n  cnj_class.cnj (inner (sum f A) x) =\n  cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x)\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "also"], ["proof (state)\nthis:\n  cnj_class.cnj (inner (sum f A) x) =\n  cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x)\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "have \"... = (\\<Sum>xa\\<in>A. cnj (inner (f xa) x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x) =\n    (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x))", "unfolding cnj_sum"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x)) =\n    (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x))", ".."], ["proof (state)\nthis:\n  cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x) =\n  (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x))\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "also"], ["proof (state)\nthis:\n  cnj_class.cnj (\\<Sum>xa\\<in>A. inner (f xa) x) =\n  (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x))\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "have \"... = (\\<Sum>xa\\<in>A. inner x (f xa))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x)) =\n    (\\<Sum>xa\\<in>A. inner x (f xa))", "by (rule sum.cong, simp, metis inner_commute)"], ["proof (state)\nthis:\n  (\\<Sum>xa\\<in>A. cnj_class.cnj (inner (f xa) x)) =\n  (\\<Sum>xa\\<in>A. inner x (f xa))\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "finally"], ["proof (chain)\npicking this:\n  inner x (sum f A) = (\\<Sum>xa\\<in>A. inner x (f xa))", "show ?thesis"], ["proof (prove)\nusing this:\n  inner x (sum f A) = (\\<Sum>xa\\<in>A. inner x (f xa))\n\ngoal (1 subgoal):\n 1. inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))", "."], ["proof (state)\nthis:\n  inner x (sum f A) = (\\<Sum>y\\<in>A. inner x (f y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas inner_add [algebra_simps] = inner_add_left inner_add_right"], ["", "lemmas inner_diff [algebra_simps]  = inner_diff_left inner_diff_right"], ["", "lemmas inner_scaleR = inner_scaleR_left inner_scaleR_right"], ["", "text \\<open>Legacy theorem names\\<close>"], ["", "lemmas inner_left_distrib = inner_add_left"], ["", "lemmas inner_right_distrib = inner_add_right"], ["", "lemmas inner_distrib = inner_left_distrib inner_right_distrib"], ["", "lemma aux_Cauchy:\nshows \"0 \\<le> real_of (inner x x + (cnj a) * (inner x y) + a * ((cnj (inner x y)) + (cnj a) * (inner y y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "have \"(inner (x+scale a y) (x+scale a y)) = (inner (x+scale a y) x) + (inner (x+scale a y) (scale a y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x + scale a y) (x + scale a y) =\n    inner (x + scale a y) x + inner (x + scale a y) (scale a y)", "unfolding inner_add_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x + scale a y) x + inner (x + scale a y) (scale a y) =\n    inner (x + scale a y) x + inner (x + scale a y) (scale a y)", ".."], ["proof (state)\nthis:\n  inner (x + scale a y) (x + scale a y) =\n  inner (x + scale a y) x + inner (x + scale a y) (scale a y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "also"], ["proof (state)\nthis:\n  inner (x + scale a y) (x + scale a y) =\n  inner (x + scale a y) x + inner (x + scale a y) (scale a y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "have \"... = inner x x + (cnj a) * (inner x y) + a * ((cnj (inner x y)) + (cnj a) * (inner y y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x + scale a y) x + inner (x + scale a y) (scale a y) =\n    inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "unfolding inner_add_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x + inner (scale a y) x +\n    (inner x (scale a y) + inner (scale a y) (scale a y)) =\n    inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "unfolding inner_scaleR_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x + a * inner y x +\n    (inner x (scale a y) + a * inner y (scale a y)) =\n    inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "unfolding inner_scaleR_right"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x + a * inner y x +\n    (cnj_class.cnj a * inner x y + a * (cnj_class.cnj a * inner y y)) =\n    inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "unfolding inner_commute[of y x]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x + a * cnj_class.cnj (inner x y) +\n    (cnj_class.cnj a * inner x y + a * (cnj_class.cnj a * inner y y)) =\n    inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "unfolding distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x + a * cnj_class.cnj (inner x y) +\n    (cnj_class.cnj a * inner x y + a * (cnj_class.cnj a * inner y y)) =\n    inner x x + cnj_class.cnj a * inner x y +\n    (a * cnj_class.cnj (inner x y) + a * (cnj_class.cnj a * inner y y))", "by auto"], ["proof (state)\nthis:\n  inner (x + scale a y) x + inner (x + scale a y) (scale a y) =\n  inner x x + cnj_class.cnj a * inner x y +\n  a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "finally"], ["proof (chain)\npicking this:\n  inner (x + scale a y) (x + scale a y) =\n  inner x x + cnj_class.cnj a * inner x y +\n  a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)", "show ?thesis"], ["proof (prove)\nusing this:\n  inner (x + scale a y) (x + scale a y) =\n  inner x x + cnj_class.cnj a * inner x y +\n  a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "by (metis inner_ge_zero)"], ["proof (state)\nthis:\n  0 \\<le> real_of\n           (inner x x + cnj_class.cnj a * inner x y +\n            a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_inner_inner: \"real_of (inner x x * inner y y) = real_of (inner x x) * real_of (inner y y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner x x * inner y y) =\n    real_of (inner x x) * real_of (inner y y)", "by (metis real_scalar_mult real_scalar_mult2)"], ["", "lemma Cauchy_Schwarz_ineq:\n  \"real_of (cnj (inner x y) * inner x y) \\<le> real_of (inner x x) * real_of (inner y y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "define cnj_a where \"cnj_a = - cnj (inner x y)/ (inner y y)\""], ["proof (state)\nthis:\n  cnj_a = - cnj_class.cnj (inner x y) / inner y y\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "define a where \"a = cnj (cnj_a)\""], ["proof (state)\nthis:\n  a = cnj_class.cnj cnj_a\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have cnj_rw: \"(cnj a) = cnj_a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj a = cnj_a", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (cnj_class.cnj cnj_a) = cnj_a", "by (simp)"], ["proof (state)\nthis:\n  cnj_class.cnj a = cnj_a\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have rw_0: \"(cnj (inner x y)) + (cnj a) * (inner y y) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y = (0::'a)", "unfolding cnj_rw cnj_a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner x y) +\n    - cnj_class.cnj (inner x y) / inner y y * inner y y =\n    (0::'a)", "by auto"], ["proof (state)\nthis:\n  cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y = (0::'a)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"0 \\<le> real_of (inner x x + (cnj a) * (inner x y) + a * ((cnj (inner x y)) + (cnj a) * (inner y y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "using aux_Cauchy"], ["proof (prove)\nusing this:\n  0 \\<le> real_of\n           (inner ?x ?x + cnj_class.cnj ?a * inner ?x ?y +\n            ?a *\n            (cnj_class.cnj (inner ?x ?y) + cnj_class.cnj ?a * inner ?y ?y))\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x + cnj_class.cnj a * inner x y +\n              a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> real_of\n           (inner x x + cnj_class.cnj a * inner x y +\n            a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  0 \\<le> real_of\n           (inner x x + cnj_class.cnj a * inner x y +\n            a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of (inner x x + (cnj a) * (inner x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (inner x x + cnj_class.cnj a * inner x y +\n      a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)) =\n    real_of (inner x x + cnj_class.cnj a * inner x y)", "unfolding rw_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner x x + cnj_class.cnj a * inner x y + a * (0::'a)) =\n    real_of (inner x x + cnj_class.cnj a * inner x y)", "by auto"], ["proof (state)\nthis:\n  real_of\n   (inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)) =\n  real_of (inner x x + cnj_class.cnj a * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  real_of\n   (inner x x + cnj_class.cnj a * inner x y +\n    a * (cnj_class.cnj (inner x y) + cnj_class.cnj a * inner y y)) =\n  real_of (inner x x + cnj_class.cnj a * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of (inner x x - cnj (inner x y) * inner x y / inner y y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner x x + cnj_class.cnj a * inner x y) =\n    real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", "unfolding cnj_rw cnj_a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (inner x x + - cnj_class.cnj (inner x y) / inner y y * inner x y) =\n    real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", "by auto"], ["proof (state)\nthis:\n  real_of (inner x x + cnj_class.cnj a * inner x y) =\n  real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", "have \" 0 \\<le> real_of (inner x x - cnj (inner x y) * inner x y / inner y y) \""], ["proof (prove)\nusing this:\n  0 \\<le> real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of\n             (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", "."], ["proof (state)\nthis:\n  0 \\<le> real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "hence \"0 \\<le> real_of (inner y y)  * real_of (inner x x - cnj (inner x y) * inner x y / inner y y)\""], ["proof (prove)\nusing this:\n  0 \\<le> real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of (inner y y) *\n            real_of\n             (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> real_of (inner y y) *\n          real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  0 \\<le> real_of (inner y y) *\n          real_of\n           (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of (real_of (inner y y)*\\<^sub>R(inner x x - cnj (inner x y) * inner x y / inner y y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner y y) *\n    real_of\n     (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) =\n    real_of\n     (real_of (inner y y) *\\<^sub>R\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))", "unfolding real_scalar_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner y y) *\n    real_of\n     (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) =\n    real_of (inner y y) *\n    real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)", ".."], ["proof (state)\nthis:\n  real_of (inner y y) *\n  real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) =\n  real_of\n   (real_of (inner y y) *\\<^sub>R\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  real_of (inner y y) *\n  real_of (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) =\n  real_of\n   (real_of (inner y y) *\\<^sub>R\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of ((inner y y) * (inner x x - cnj (inner x y) * inner x y / inner y y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (real_of (inner y y) *\\<^sub>R\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n    real_of\n     (inner y y *\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))", "unfolding real_scalar_mult2"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (inner y y *\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n    real_of\n     (inner y y *\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))", ".."], ["proof (state)\nthis:\n  real_of\n   (real_of (inner y y) *\\<^sub>R\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n  real_of\n   (inner y y *\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  real_of\n   (real_of (inner y y) *\\<^sub>R\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n  real_of\n   (inner y y *\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y))\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of ((inner x x - cnj (inner x y) * inner x y / inner y y)*(inner y y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (inner y y *\n      (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n    real_of\n     ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n      inner y y)", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  real_of\n   (inner y y *\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n  real_of\n   ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n    inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  real_of\n   (inner y y *\n    (inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y)) =\n  real_of\n   ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n    inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of (((inner x x)*(inner y y) - cnj (inner x y) * inner x y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n      inner y y) =\n    real_of (inner x x * inner y y - cnj_class.cnj (inner x y) * inner x y)", "by (simp add: left_diff_distrib)"], ["proof (state)\nthis:\n  real_of\n   ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n    inner y y) =\n  real_of (inner x x * inner y y - cnj_class.cnj (inner x y) * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "also"], ["proof (state)\nthis:\n  real_of\n   ((inner x x - cnj_class.cnj (inner x y) * inner x y / inner y y) *\n    inner y y) =\n  real_of (inner x x * inner y y - cnj_class.cnj (inner x y) * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "have \"... = real_of ((inner x x)*(inner y y)) - real_of (cnj (inner x y) * inner x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of\n     (inner x x * inner y y - cnj_class.cnj (inner x y) * inner x y) =\n    real_of (inner x x * inner y y) -\n    real_of (cnj_class.cnj (inner x y) * inner x y)", "unfolding real_minus"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner x x * inner y y) -\n    real_of (cnj_class.cnj (inner x y) * inner x y) =\n    real_of (inner x x * inner y y) -\n    real_of (cnj_class.cnj (inner x y) * inner x y)", ".."], ["proof (state)\nthis:\n  real_of (inner x x * inner y y - cnj_class.cnj (inner x y) * inner x y) =\n  real_of (inner x x * inner y y) -\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> real_of (inner x x * inner y y) -\n          real_of (cnj_class.cnj (inner x y) * inner x y)", "have \"real_of (cnj (inner x y) * inner x y) \\<le> real_of ((inner x x)*(inner y y))\""], ["proof (prove)\nusing this:\n  0 \\<le> real_of (inner x x * inner y y) -\n          real_of (cnj_class.cnj (inner x y) * inner x y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x * inner y y)", "by auto"], ["proof (state)\nthis:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x * inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x * inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "unfolding real_inner_inner"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "."], ["proof (state)\nthis:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "hide_const (open) norm"], ["", "context inner_product_space\nbegin"], ["", "definition \"norm x = (sqrt (real_of (inner x x)))\""], ["", "lemmas norm_eq_sqrt_inner = norm_def"], ["", "lemma inner_cnj_ge_zero[simp]: \"real_of ((inner x y) * cnj (inner x y)) \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of (inner x y * cnj_class.cnj (inner x y))", "using real_a_cnj_ge_0"], ["proof (prove)\nusing this:\n  0 \\<le> real_of (?a * cnj_class.cnj ?a)\n\ngoal (1 subgoal):\n 1. 0 \\<le> real_of (inner x y * cnj_class.cnj (inner x y))", "by auto"], ["", "lemma power2_norm_eq_inner: \"(norm x)\\<^sup>2 = real_of (inner x x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm x)\\<^sup>2 = real_of (inner x x)", "by (simp add: norm_def)"], ["", "lemma Cauchy_Schwarz_ineq2:\n  \"sqrt (real_of (cnj (inner x y) * inner x y)) \\<le> norm x * norm y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (real_of (cnj_class.cnj (inner x y) * inner x y))\n    \\<le> norm x * norm y", "proof (rule power2_le_imp_le)"], ["proof (state)\ngoal (2 subgoals):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> (norm x * norm y)\\<^sup>2\n 2. 0 \\<le> norm x * norm y", "have eq: \"0 \\<le> real_of (cnj (inner x y) * inner x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of (cnj_class.cnj (inner x y) * inner x y)", "by (simp add: mult.commute)"], ["proof (state)\nthis:\n  0 \\<le> real_of (cnj_class.cnj (inner x y) * inner x y)\n\ngoal (2 subgoals):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> (norm x * norm y)\\<^sup>2\n 2. 0 \\<le> norm x * norm y", "have \"real_of (cnj (inner x y) * inner x y) \\<le> real_of (inner x x) * real_of (inner y y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "using Cauchy_Schwarz_ineq"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner ?x ?y) * inner ?x ?y)\n  \\<le> real_of (inner ?x ?x) * real_of (inner ?y ?y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "."], ["proof (state)\nthis:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (2 subgoals):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> (norm x * norm y)\\<^sup>2\n 2. 0 \\<le> norm x * norm y", "thus \"(sqrt (real_of (cnj (inner x y) * inner x y)))\\<^sup>2 \\<le> (norm x * norm y)\\<^sup>2\""], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (1 subgoal):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> (norm x * norm y)\\<^sup>2", "unfolding power_mult_distrib"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (1 subgoal):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> (norm x)\\<^sup>2 * (norm y)\\<^sup>2", "unfolding power2_norm_eq_inner"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (1 subgoal):\n 1. (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n    \\<le> real_of (inner x x) * real_of (inner y y)", "unfolding real_sqrt_pow2[OF eq]"], ["proof (prove)\nusing this:\n  real_of (cnj_class.cnj (inner x y) * inner x y)\n  \\<le> real_of (inner x x) * real_of (inner y y)\n\ngoal (1 subgoal):\n 1. real_of (cnj_class.cnj (inner x y) * inner x y)\n    \\<le> real_of (inner x x) * real_of (inner y y)", "."], ["proof (state)\nthis:\n  (sqrt (real_of (cnj_class.cnj (inner x y) * inner x y)))\\<^sup>2\n  \\<le> (norm x * norm y)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 \\<le> norm x * norm y", "show \"0 \\<le> norm x * norm y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm x * norm y", "unfolding norm_eq_sqrt_inner"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> sqrt (real_of (inner x x)) * sqrt (real_of (inner y y))", "by (intro mult_nonneg_nonneg real_sqrt_ge_zero inner_ge_zero)"], ["proof (state)\nthis:\n  0 \\<le> norm x * norm y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsubsection\\<open>Orthogonality\\<close>"], ["", "hide_const (open) orthogonal"], ["", "context inner_product_space\nbegin"], ["", "definition \"orthogonal x y \\<longleftrightarrow> inner x y = 0\""], ["", "lemma orthogonal_clauses:\n  \"orthogonal a 0\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a (scale c x)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a (- x)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a y \\<Longrightarrow> orthogonal a (x + y)\"\n  \"orthogonal a x \\<Longrightarrow> orthogonal a y \\<Longrightarrow> orthogonal a (x - y)\"\n  \"orthogonal 0 a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal (scale c x) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal (- x) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal y a \\<Longrightarrow> orthogonal (x + y) a\"\n  \"orthogonal x a \\<Longrightarrow> orthogonal y a \\<Longrightarrow> orthogonal (x - y) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((orthogonal a (0::'b) &&&\n      (orthogonal a x \\<Longrightarrow> orthogonal a (scale c x))) &&&\n     (orthogonal a x \\<Longrightarrow> orthogonal a (- x)) &&&\n     (\\<lbrakk>orthogonal a x; orthogonal a y\\<rbrakk>\n      \\<Longrightarrow> orthogonal a (x + y)) &&&\n     (\\<lbrakk>orthogonal a x; orthogonal a y\\<rbrakk>\n      \\<Longrightarrow> orthogonal a (x - y))) &&&\n    (orthogonal (0::'b) a &&&\n     (orthogonal x a \\<Longrightarrow> orthogonal (scale c x) a)) &&&\n    (orthogonal x a \\<Longrightarrow> orthogonal (- x) a) &&&\n    (\\<lbrakk>orthogonal x a; orthogonal y a\\<rbrakk>\n     \\<Longrightarrow> orthogonal (x + y) a) &&&\n    (\\<lbrakk>orthogonal x a; orthogonal y a\\<rbrakk>\n     \\<Longrightarrow> orthogonal (x - y) a)", "unfolding orthogonal_def inner_add inner_diff"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((inner a (0::'b) = (0::'a) &&&\n      (inner a x = (0::'a) \\<Longrightarrow>\n       inner a (scale c x) = (0::'a))) &&&\n     (inner a x = (0::'a) \\<Longrightarrow> inner a (- x) = (0::'a)) &&&\n     (\\<lbrakk>inner a x = (0::'a); inner a y = (0::'a)\\<rbrakk>\n      \\<Longrightarrow> inner a x + inner a y = (0::'a)) &&&\n     (\\<lbrakk>inner a x = (0::'a); inner a y = (0::'a)\\<rbrakk>\n      \\<Longrightarrow> inner a x - inner a y = (0::'a))) &&&\n    (inner (0::'b) a = (0::'a) &&&\n     (inner x a = (0::'a) \\<Longrightarrow>\n      inner (scale c x) a = (0::'a))) &&&\n    (inner x a = (0::'a) \\<Longrightarrow> inner (- x) a = (0::'a)) &&&\n    (\\<lbrakk>inner x a = (0::'a); inner y a = (0::'a)\\<rbrakk>\n     \\<Longrightarrow> inner x a + inner y a = (0::'a)) &&&\n    (\\<lbrakk>inner x a = (0::'a); inner y a = (0::'a)\\<rbrakk>\n     \\<Longrightarrow> inner x a - inner y a = (0::'a))", "by auto"], ["", "lemma inner_commute_zero: \"(inner xa x = 0) = (inner x xa = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inner xa x = (0::'a)) = (inner x xa = (0::'a))", "by (metis cnj_0 local.inner_commute)"], ["", "lemma vector_sub_project_orthogonal: \n  \"inner b (x - scale (inner x b / (inner b b)) b) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "have f1: \"\\<And>b a ba. inner b (scale a ba) = cnj (a * inner ba b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b a ba. inner b (scale a ba) = cnj_class.cnj (a * inner ba b)", "by (metis local.inner_commute local.inner_scaleR_left)"], ["proof (state)\nthis:\n  inner ?b (scale ?a ?ba) = cnj_class.cnj (?a * inner ?ba ?b)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "{"], ["proof (state)\nthis:\n  inner ?b (scale ?a ?ba) = cnj_class.cnj (?a * inner ?ba ?b)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "assume \"b \\<noteq> 0\""], ["proof (state)\nthis:\n  b \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "hence \"cnj (inner x b) = inner b x \\<and> inner b b \\<noteq> 0\""], ["proof (prove)\nusing this:\n  b \\<noteq> (0::'b)\n\ngoal (1 subgoal):\n 1. cnj_class.cnj (inner x b) = inner b x \\<and> inner b b \\<noteq> (0::'a)", "by (metis (no_types) local.inner_commute local.inner_eq_zero_iff)"], ["proof (state)\nthis:\n  cnj_class.cnj (inner x b) = inner b x \\<and> inner b b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "hence \"inner b (x - scale (inner x b / inner b b) b) = 0\""], ["proof (prove)\nusing this:\n  cnj_class.cnj (inner x b) = inner b x \\<and> inner b b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "using f1 local.inner_diff_right"], ["proof (prove)\nusing this:\n  cnj_class.cnj (inner x b) = inner b x \\<and> inner b b \\<noteq> (0::'a)\n  inner ?b (scale ?a ?ba) = cnj_class.cnj (?a * inner ?ba ?b)\n  inner ?x (?y - ?z) = inner ?x ?y - inner ?x ?z\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "by force"], ["proof (state)\nthis:\n  inner b (x - scale (inner x b / inner b b) b) = (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "}"], ["proof (state)\nthis:\n  b \\<noteq> (0::'b) \\<Longrightarrow>\n  inner b (x - scale (inner x b / inner b b) b) = (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  b \\<noteq> (0::'b) \\<Longrightarrow>\n  inner b (x - scale (inner x b / inner b b) b) = (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  inner b (x - scale (inner x b / inner b b) b) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma orthogonal_commute: \"orthogonal x y \\<longleftrightarrow> orthogonal y x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal x y = orthogonal y x", "unfolding orthogonal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (inner x y = (0::'a)) = (inner y x = (0::'a))", "using inner_commute_zero"], ["proof (prove)\nusing this:\n  (inner ?xa ?x = (0::'a)) = (inner ?x ?xa = (0::'a))\n\ngoal (1 subgoal):\n 1. (inner x y = (0::'a)) = (inner y x = (0::'a))", "by auto"], ["", "lemma pairwise_orthogonal_insert:\n  assumes \"pairwise orthogonal S\"\n  and \"\\<And>y. y \\<in> S \\<Longrightarrow> orthogonal x y\"\n  shows \"pairwise orthogonal (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise orthogonal (insert x S)", "using assms"], ["proof (prove)\nusing this:\n  pairwise orthogonal S\n  ?y \\<in> S \\<Longrightarrow> orthogonal x ?y\n\ngoal (1 subgoal):\n 1. pairwise orthogonal (insert x S)", "unfolding pairwise_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     \\<forall>y\\<in>S. x \\<noteq> y \\<longrightarrow> orthogonal x y\n  ?y \\<in> S \\<Longrightarrow> orthogonal x ?y\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>insert x S.\n       \\<forall>y\\<in>insert x S.\n          xa \\<noteq> y \\<longrightarrow> orthogonal xa y", "by (auto simp add: orthogonal_commute)"], ["", "end"], ["", "lemma sum_0_all:\n  assumes a: \"\\<forall>a\\<in>A. f a \\<ge> (0 :: real)\" \n  and s0: \"sum f A = 0\" and f: \"finite A\"\n  shows \"\\<forall>a\\<in>A. f a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A. f a = 0", "using a f s0 sum_nonneg_eq_0_iff"], ["proof (prove)\nusing this:\n  \\<forall>a\\<in>A. 0 \\<le> f a\n  finite A\n  sum f A = 0\n  \\<lbrakk>finite ?A;\n   \\<And>x. x \\<in> ?A \\<Longrightarrow> (0::?'a) \\<le> ?f x\\<rbrakk>\n  \\<Longrightarrow> (sum ?f ?A = (0::?'a)) =\n                    (\\<forall>x\\<in>?A. ?f x = (0::?'a))\n\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>A. f a = 0", "by blast"], ["", "subsection\\<open>Vecs as inner product spaces\\<close>"], ["", "locale vec_real_inner = F?: inner_product_space \"((*) :: 'a\\<Rightarrow>'a\\<Rightarrow>'a)\" inner_field \n for inner_field :: \"'a\\<Rightarrow>'a\\<Rightarrow>'a::{field,cnj,real_of_extended}\" \n + fixes inner :: \"'a^'n \\<Rightarrow> 'a^'n \\<Rightarrow>'a\" \n assumes inner_vec_def: \"inner x y = sum (\\<lambda>i. inner_field (x$i) (y$i)) UNIV\"\nbegin"], ["", "lemma inner_ge_zero [simp]: \"0 \\<le> real_of (inner x x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> real_of (inner x x)", "by (auto simp add: inner_vec_def real_sum sum_nonneg)"], ["", "lemma real_scalar_mult2: \"real_of (inner x x) *\\<^sub>R A = inner x x * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (inner x x) *\\<^sub>R A = inner x x * A", "by (auto simp add: inner_vec_def)\n  (metis (mono_tags, lifting) Finite_Cartesian_Product.sum_cong_aux \n  real_scalar_mult2 real_sum scaleR_left.sum scale_sum_left)"], ["", "lemma i1: \"inner x y = cnj (inner y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x y = cnj_class.cnj (inner y x)", "by (auto simp add: inner_vec_def cnj_sum cnj_mult mult.commute)\n   (meson local.inner_commute)"], ["", "lemma i2: \"inner (x + y) z = inner x z + inner y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x + y) z = inner x z + inner y z", "using local.inner_left_distrib sum.distrib inner_vec_def"], ["proof (prove)\nusing this:\n  inner_field (?x + ?y) ?z = inner_field ?x ?z + inner_field ?y ?z\n  (\\<Sum>x\\<in>?A. ?g x + ?h x) = sum ?g ?A + sum ?h ?A\n  inner ?x ?y = (\\<Sum>i\\<in>UNIV. inner_field (?x $ i) (?y $ i))\n\ngoal (1 subgoal):\n 1. inner (x + y) z = inner x z + inner y z", "by force"], ["", "lemma i3: \"inner (r *s x) y = r * inner x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (r *s x) y = r * inner x y", "by (auto simp add: inner_vec_def scale_sum_right)"], ["", "lemma i4: assumes \"inner x x = 0\"\nshows \"x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 0", "proof (unfold vec_eq_iff, clarify, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "have \"0 = real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i))", "using assms"], ["proof (prove)\nusing this:\n  inner x x = (0::'a)\n\ngoal (1 subgoal):\n 1. 0 = real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i))", "by (simp add: inner_vec_def)"], ["proof (state)\nthis:\n  0 = real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i))\n\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "also"], ["proof (state)\nthis:\n  0 = real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i))\n\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "have \"... = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i)) =\n    (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))", "using real_sum"], ["proof (prove)\nusing this:\n  real_of (sum ?f ?A) = (\\<Sum>i\\<in>?A. real_of (?f i))\n\ngoal (1 subgoal):\n 1. real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i)) =\n    (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))", "by auto"], ["proof (state)\nthis:\n  real_of (\\<Sum>i\\<in>UNIV. inner_field (x $ i) (x $ i)) =\n  (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\n\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))", "have \"0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\""], ["proof (prove)\nusing this:\n  0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\n\ngoal (1 subgoal):\n 1. 0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))", "."], ["proof (state)\nthis:\n  0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\n\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "hence \"real_of (inner_field (x $ a) (x $ a)) = 0\""], ["proof (prove)\nusing this:\n  0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\n\ngoal (1 subgoal):\n 1. real_of (inner_field (x $ a) (x $ a)) = 0", "using sum_0_all F.inner_ge_zero"], ["proof (prove)\nusing this:\n  0 = (\\<Sum>i\\<in>UNIV. real_of (inner_field (x $ i) (x $ i)))\n  \\<lbrakk>\\<forall>a\\<in>?A. 0 \\<le> ?f a; sum ?f ?A = 0;\n   finite ?A\\<rbrakk>\n  \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a = 0\n  0 \\<le> real_of (inner_field ?x ?x)\n\ngoal (1 subgoal):\n 1. real_of (inner_field (x $ a) (x $ a)) = 0", "by (metis (no_types, lifting) finite iso_tuple_UNIV_I)"], ["proof (state)\nthis:\n  real_of (inner_field (x $ a) (x $ a)) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i. x $ i = (0::'a)", "then"], ["proof (chain)\npicking this:\n  real_of (inner_field (x $ a) (x $ a)) = 0", "show \"x $ a = 0\""], ["proof (prove)\nusing this:\n  real_of (inner_field (x $ a) (x $ a)) = 0\n\ngoal (1 subgoal):\n 1. x $ a = (0::'a)", "by (metis F.inner_eq_zero_iff F.inner_gt_zero_iff real_0)"], ["proof (state)\nthis:\n  x $ a = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inner_0_0[simp]: \"inner 0 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner 0 0 = (0::'a)", "unfolding inner_vec_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV. inner_field (0 $ i) (0 $ i)) = (0::'a)", "by auto"], ["", "sublocale v?: inner_product_space \"((*s) :: 'a \\<Rightarrow> 'a^'n \\<Rightarrow> 'a^'n)\" \"inner\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner_product_space (*s) inner", "proof (unfold_locales, auto simp add: real_scalar_mult2)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. inner x y = cnj_class.cnj (inner y x)\n 2. \\<And>x y z. inner (x + y) z = inner x z + inner y z\n 3. \\<And>r x y. inner (r *s x) y = r * inner x y\n 4. \\<And>x. inner x x = (0::'a) \\<Longrightarrow> x = 0\n 5. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "fix x y z::\"'a^'n\" and r"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y. inner x y = cnj_class.cnj (inner y x)\n 2. \\<And>x y z. inner (x + y) z = inner x z + inner y z\n 3. \\<And>r x y. inner (r *s x) y = r * inner x y\n 4. \\<And>x. inner x x = (0::'a) \\<Longrightarrow> x = 0\n 5. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "show \"inner x y = cnj (inner y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x y = cnj_class.cnj (inner y x)", "using i1[of x y]"], ["proof (prove)\nusing this:\n  inner x y = cnj_class.cnj (inner y x)\n\ngoal (1 subgoal):\n 1. inner x y = cnj_class.cnj (inner y x)", "by simp"], ["proof (state)\nthis:\n  inner x y = cnj_class.cnj (inner y x)\n\ngoal (4 subgoals):\n 1. \\<And>x y z. inner (x + y) z = inner x z + inner y z\n 2. \\<And>r x y. inner (r *s x) y = r * inner x y\n 3. \\<And>x. inner x x = (0::'a) \\<Longrightarrow> x = 0\n 4. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "show \"inner (x + y) z = inner x z + inner y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (x + y) z = inner x z + inner y z", "using i2"], ["proof (prove)\nusing this:\n  inner (?x + ?y) ?z = inner ?x ?z + inner ?y ?z\n\ngoal (1 subgoal):\n 1. inner (x + y) z = inner x z + inner y z", "by blast"], ["proof (state)\nthis:\n  inner (x + y) z = inner x z + inner y z\n\ngoal (3 subgoals):\n 1. \\<And>r x y. inner (r *s x) y = r * inner x y\n 2. \\<And>x. inner x x = (0::'a) \\<Longrightarrow> x = 0\n 3. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "show \"inner (r *s x) y = r * inner x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (r *s x) y = r * inner x y", "using i3"], ["proof (prove)\nusing this:\n  inner (?r *s ?x) ?y = ?r * inner ?x ?y\n\ngoal (1 subgoal):\n 1. inner (r *s x) y = r * inner x y", "by blast"], ["proof (state)\nthis:\n  inner (r *s x) y = r * inner x y\n\ngoal (2 subgoals):\n 1. \\<And>x. inner x x = (0::'a) \\<Longrightarrow> x = 0\n 2. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "show i: \"inner x x = 0 \\<Longrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner x x = (0::'a) \\<Longrightarrow> x = 0", "using i4"], ["proof (prove)\nusing this:\n  inner ?x ?x = (0::'a) \\<Longrightarrow> ?x = 0\n\ngoal (1 subgoal):\n 1. inner x x = (0::'a) \\<Longrightarrow> x = 0", "by blast"], ["proof (state)\nthis:\n  inner x x = (0::'a) \\<Longrightarrow> x = 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "assume \"x \\<noteq> 0\""], ["proof (state)\nthis:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < real_of (inner x x)", "thus \"0 < real_of (inner x x)\""], ["proof (prove)\nusing this:\n  x \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < real_of (inner x x)", "by (metis i \\<open>x \\<noteq> 0\\<close> inner_0_0 local.inner_ge_zero \n    local.real_scalar_mult2 mult.commute mult_1_left order.not_eq_order_implies_strict real_0)"], ["proof (state)\nthis:\n  0 < real_of (inner x x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection\\<open>Matrices and inner product\\<close>"], ["", "locale matrix = \n    COLS?: vec_real_inner \"\\<lambda>x y. x * cnj y\" inner_cols\n  + ROWS?: vec_real_inner \"\\<lambda>x y. x * cnj y\" inner_rows\n for inner_cols :: \"'a^'cols::{finite, wellorder} \\<Rightarrow> 'a^'cols::{finite, wellorder} \\<Rightarrow> 'a::{field, cnj, real_of_extended}\" \n and inner_rows :: \"'a^'rows::{finite, wellorder} \\<Rightarrow> 'a^'rows::{finite, wellorder} \\<Rightarrow> 'a\" \nbegin"], ["", "lemma dot_lmul_matrix: \"inner_rows (x v* A) y = inner_cols x ((\\<chi> i j. cnj (A $ i $ j)) *v y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner_rows (x v* A) y =\n    inner_cols x ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v y)", "apply (simp add: COLS.inner_vec_def ROWS.inner_vec_def matrix_vector_mult_def \n       vector_matrix_mult_def sum_distrib_right cnj_sum ac_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV.\n       cnj_class.cnj (y $ i) * (\\<Sum>ia\\<in>UNIV. x $ ia * A $ ia $ i)) =\n    (\\<Sum>i\\<in>UNIV.\n       x $ i *\n       (\\<Sum>j\\<in>UNIV.\n          cnj_class.cnj (y $ j * cnj_class.cnj (A $ i $ j))))", "proof (unfold sum_distrib_left, subst sum.swap, rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       (\\<Sum>i\\<in>UNIV. cnj_class.cnj (y $ i) * (x $ xa * A $ xa $ i)) =\n       (\\<Sum>n\\<in>UNIV.\n          x $ xa * cnj_class.cnj (y $ n * cnj_class.cnj (A $ xa $ n)))", "fix xa::'cols"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> UNIV \\<Longrightarrow>\n       (\\<Sum>i\\<in>UNIV. cnj_class.cnj (y $ i) * (x $ xa * A $ xa $ i)) =\n       (\\<Sum>n\\<in>UNIV.\n          x $ xa * cnj_class.cnj (y $ n * cnj_class.cnj (A $ xa $ n)))", "show \"(\\<Sum>i\\<in>UNIV. cnj (y $ i) * (x $ xa * A $ xa $ i)) \n    = (\\<Sum>n\\<in>UNIV. x $ xa * cnj (y $ n * cnj (A $ xa $ n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>UNIV. cnj_class.cnj (y $ i) * (x $ xa * A $ xa $ i)) =\n    (\\<Sum>n\\<in>UNIV.\n       x $ xa * cnj_class.cnj (y $ n * cnj_class.cnj (A $ xa $ n)))", "proof (rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb \\<in> UNIV \\<Longrightarrow>\n       cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n       x $ xa * cnj_class.cnj (y $ xb * cnj_class.cnj (A $ xa $ xb))", "fix xb:: 'rows"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xb.\n       xb \\<in> UNIV \\<Longrightarrow>\n       cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n       x $ xa * cnj_class.cnj (y $ xb * cnj_class.cnj (A $ xa $ xb))", "show \"cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) \n      = x $ xa * cnj_class.cnj (y $ xb * cnj_class.cnj (A $ xa $ xb))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n    x $ xa * cnj_class.cnj (y $ xb * cnj_class.cnj (A $ xa $ xb))", "unfolding cnj_mult cnj_idem"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n    x $ xa * (cnj_class.cnj (y $ xb) * A $ xa $ xb)", "unfolding mult.assoc"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n    x $ xa * (cnj_class.cnj (y $ xb) * A $ xa $ xb)", "unfolding mult.commute[of \"A $ xa $ xb\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n    x $ xa * (cnj_class.cnj (y $ xb) * A $ xa $ xb)", "by auto"], ["proof (state)\nthis:\n  cnj_class.cnj (y $ xb) * (x $ xa * A $ xa $ xb) =\n  x $ xa * cnj_class.cnj (y $ xb * cnj_class.cnj (A $ xa $ xb))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>UNIV. cnj_class.cnj (y $ i) * (x $ xa * A $ xa $ i)) =\n  (\\<Sum>n\\<in>UNIV.\n     x $ xa * cnj_class.cnj (y $ n * cnj_class.cnj (A $ xa $ n)))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection\\<open>Orthogonal complement generalized\\<close>"], ["", "context inner_product_space\nbegin"], ["", "definition \"orthogonal_complement W = {x. \\<forall>y \\<in> W. orthogonal y x}\""], ["", "lemma subspace_orthogonal_complement: \"subspace (orthogonal_complement W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.subspace (orthogonal_complement W)", "unfolding subspace_def orthogonal_complement_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'b) \\<in> {x. \\<forall>y\\<in>W. orthogonal y x} \\<and>\n    (\\<forall>x\\<in>{x. \\<forall>y\\<in>W. orthogonal y x}.\n        \\<forall>y\\<in>{x. \\<forall>y\\<in>W. orthogonal y x}.\n           x + y \\<in> {x. \\<forall>y\\<in>W. orthogonal y x}) \\<and>\n    (\\<forall>c.\n        \\<forall>x\\<in>{x. \\<forall>y\\<in>W. orthogonal y x}.\n           scale c x \\<in> {x. \\<forall>y\\<in>W. orthogonal y x})", "by (auto simp add: orthogonal_def local.inner_right_distrib)"], ["", "lemma orthogonal_complement_mono:\n  assumes A_in_B: \"A \\<subseteq> B\"\n  shows \"orthogonal_complement B \\<subseteq> orthogonal_complement A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal_complement B \\<subseteq> orthogonal_complement A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orthogonal_complement B \\<Longrightarrow>\n       x \\<in> orthogonal_complement A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orthogonal_complement B \\<Longrightarrow>\n       x \\<in> orthogonal_complement A", "assume x: \"x \\<in> orthogonal_complement B\""], ["proof (state)\nthis:\n  x \\<in> orthogonal_complement B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> orthogonal_complement B \\<Longrightarrow>\n       x \\<in> orthogonal_complement A", "show \"x \\<in> orthogonal_complement A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> orthogonal_complement A", "using x"], ["proof (prove)\nusing this:\n  x \\<in> orthogonal_complement B\n\ngoal (1 subgoal):\n 1. x \\<in> orthogonal_complement A", "unfolding orthogonal_complement_def"], ["proof (prove)\nusing this:\n  x \\<in> {x. \\<forall>y\\<in>B. orthogonal y x}\n\ngoal (1 subgoal):\n 1. x \\<in> {x. \\<forall>y\\<in>A. orthogonal y x}", "by (simp add: orthogonal_def, metis A_in_B in_mono)"], ["proof (state)\nthis:\n  x \\<in> orthogonal_complement A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma B_in_orthogonal_complement_of_orthogonal_complement:\n  shows \"B \\<subseteq> orthogonal_complement (orthogonal_complement B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> orthogonal_complement (orthogonal_complement B)", "by (auto simp add: orthogonal_complement_def orthogonal_def inner_commute_zero)"], ["", "end"], ["", "subsection\\<open>Generalizing projections\\<close>"], ["", "context inner_product_space\nbegin"], ["", "text\\<open>Projection of two vectors: v onto u\\<close>"], ["", "definition \"proj v u = scale (inner v u / inner u u) u\""], ["", "text\\<open>Projection of a onto S\\<close>"], ["", "definition \"proj_onto a S = (sum (\\<lambda>x. proj a x) S)\""], ["", "lemma vector_sub_project_orthogonal_proj:\n  shows \"inner b (x - proj x b) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inner b (x - proj x b) = (0::'a)", "using vector_sub_project_orthogonal"], ["proof (prove)\nusing this:\n  inner ?b (?x - scale (inner ?x ?b / inner ?b ?b) ?b) = (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - proj x b) = (0::'a)", "unfolding proj_def"], ["proof (prove)\nusing this:\n  inner ?b (?x - scale (inner ?x ?b / inner ?b ?b) ?b) = (0::'a)\n\ngoal (1 subgoal):\n 1. inner b (x - scale (inner x b / inner b b) b) = (0::'a)", "by simp"], ["", "lemma orthogonal_proj_set:\n  assumes yC: \"y\\<in>C\" and C: \"finite C\" and p: \"pairwise orthogonal C\"\n  shows \"orthogonal (a - proj_onto a C) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal (a - proj_onto a C) y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. orthogonal (a - proj_onto a C) y", "have Cy: \"C = insert y (C - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C = insert y (C - {y})", "using yC"], ["proof (prove)\nusing this:\n  y \\<in> C\n\ngoal (1 subgoal):\n 1. C = insert y (C - {y})", "by blast"], ["proof (state)\nthis:\n  C = insert y (C - {y})\n\ngoal (1 subgoal):\n 1. orthogonal (a - proj_onto a C) y", "have fth: \"finite (C - {y})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (C - {y})", "using C"], ["proof (prove)\nusing this:\n  finite C\n\ngoal (1 subgoal):\n 1. finite (C - {y})", "by simp"], ["proof (state)\nthis:\n  finite (C - {y})\n\ngoal (1 subgoal):\n 1. orthogonal (a - proj_onto a C) y", "show \"orthogonal (a - proj_onto a C) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal (a - proj_onto a C) y", "unfolding orthogonal_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (a - proj_onto a C) y = (0::'a)", "unfolding proj_onto_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (a - sum (proj a) C) y = (0::'a)", "unfolding proj_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner (a - (\\<Sum>u\\<in>C. scale (inner a u / inner u u) u)) y = (0::'a)", "unfolding inner_diff"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner a y - inner (\\<Sum>u\\<in>C. scale (inner a u / inner u u) u) y =\n    (0::'a)", "unfolding inner_sum_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner a y - (\\<Sum>x\\<in>C. inner (scale (inner a x / inner x x) x) y) =\n    (0::'a)", "unfolding right_minus_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner a y = (\\<Sum>x\\<in>C. inner (scale (inner a x / inner x x) x) y)", "unfolding sum.remove[OF C yC]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inner a y =\n    inner (scale (inner a y / inner y y) y) y +\n    (\\<Sum>x\\<in>C - {y}. inner (scale (inner a x / inner x x) x) y)", "apply (clarsimp simp add: inner_commute[of y a])"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> (0::'b) \\<Longrightarrow>\n    (\\<Sum>x\\<in>C - {y}. inner a x * inner x y / inner x x) = (0::'a)", "apply (rule sum.neutral)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<noteq> (0::'b) \\<Longrightarrow>\n    \\<forall>x\\<in>C - {y}. inner a x * inner x y / inner x x = (0::'a)", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> inner x y = (0::'a)", "apply (rule p[unfolded pairwise_def orthogonal_def, rule_format])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> C\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> y \\<in> C\n 3. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> x \\<noteq> y", "using yC"], ["proof (prove)\nusing this:\n  y \\<in> C\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> C\n 2. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> y \\<in> C\n 3. \\<And>x.\n       \\<lbrakk>y \\<noteq> (0::'b); x \\<in> C; x \\<noteq> y;\n        inner a x \\<noteq> (0::'a); x \\<noteq> (0::'b)\\<rbrakk>\n       \\<Longrightarrow> x \\<noteq> y", "by auto"], ["proof (state)\nthis:\n  orthogonal (a - proj_onto a C) y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pairwise_orthogonal_proj_set:\n  assumes C: \"finite C\" and p: \"pairwise orthogonal C\"\n  shows \"pairwise orthogonal (insert (a - proj_onto a C) C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pairwise orthogonal (insert (a - proj_onto a C) C)", "by (rule pairwise_orthogonal_insert[OF p], auto simp add: orthogonal_proj_set C p)"], ["", "end"], ["", "lemma orthogonal_real_eq: \"RV_inner.orthogonal = real_inner_class.orthogonal\""], ["proof (prove)\ngoal (1 subgoal):\n 1. RV_inner.orthogonal = real_inner_class.orthogonal", "unfolding RV_inner.orthogonal_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x \\<bullet> y = 0) = real_inner_class.orthogonal", "unfolding real_inner_class.orthogonal_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x y. x \\<bullet> y = 0) = (\\<lambda>x y. x \\<bullet> y = 0)", ".."], ["", "subsection\\<open>Second Part of the Fundamental Theorem of Linear Algebra generalized\\<close>"], ["", "context matrix\nbegin"], ["", "lemma cnj_cnj_matrix[simp]: \"(\\<chi> i j. cnj ((\\<chi> i j. cnj (A $ i $ j)) $ i $ j)) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        cnj_class.cnj ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ i $ j)) =\n    A", "unfolding vec_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i ia.\n       (\\<chi>i j.\n           cnj_class.cnj ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ i $ j)) $\n       i $\n       ia =\n       A $ i $ ia", "by auto"], ["", "lemma cnj_transpose[simp]: \"(\\<chi> i j. cnj (transpose A $ i $ j)) = transpose (\\<chi> i j. cnj (A $ i $ j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<chi>i j.\n        cnj_class.cnj (Finite_Cartesian_Product.transpose A $ i $ j)) =\n    Finite_Cartesian_Product.transpose\n     (\\<chi>i j. cnj_class.cnj (A $ i $ j))", "unfolding vec_eq_iff transpose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i ia.\n       (\\<chi>i j. cnj_class.cnj ((\\<chi>i j. A $ j $ i) $ i $ j)) $ i $\n       ia =\n       (\\<chi>i j. (\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ j $ i) $ i $ ia", "by auto"], ["", "lemma null_space_orthogonal_complement_row_space:\n  fixes A::\"'a^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"null_space A = COLS.v.orthogonal_complement (row_space (\\<chi> i j. cnj (A $ i $ j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null_space A =\n    COLS.v.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. null_space A =\n    COLS.v.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "interpret m: matrix inner_rows inner_cols"], ["proof (prove)\ngoal (1 subgoal):\n 1. Generalizations2.matrix inner_rows inner_cols", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. null_space A =\n    COLS.v.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "let ?A=\"(\\<chi> i j. cnj (A $ i $ j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. null_space A =\n    COLS.v.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. null_space A =\n    COLS.v.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "proof (unfold null_space_def COLS.v.orthogonal_complement_def, auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>A *v x = 0;\n        y \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\\<rbrakk>\n       \\<Longrightarrow> COLS.v.orthogonal y x\n 2. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "fix x xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>A *v x = 0;\n        y \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\\<rbrakk>\n       \\<Longrightarrow> COLS.v.orthogonal y x\n 2. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "assume Ax: \"A *v x = 0\" and xa: \"xa \\<in> row_space (\\<chi> i j. cnj (A $ i $ j))\""], ["proof (state)\nthis:\n  A *v x = 0\n  xa \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>A *v x = 0;\n        y \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\\<rbrakk>\n       \\<Longrightarrow> COLS.v.orthogonal y x\n 2. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "obtain y where y: \"xa = transpose (\\<chi> i j. cnj (A $ i $ j)) *v y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        xa =\n        Finite_Cartesian_Product.transpose\n         (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n        y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using xa"], ["proof (prove)\nusing this:\n  xa \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        xa =\n        Finite_Cartesian_Product.transpose\n         (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n        y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding row_space_eq"], ["proof (prove)\nusing this:\n  xa \\<in> {w. \\<exists>y.\n                  Finite_Cartesian_Product.transpose\n                   (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n                  y =\n                  w}\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        xa =\n        Finite_Cartesian_Product.transpose\n         (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n        y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  xa =\n  Finite_Cartesian_Product.transpose\n   (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n  y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>A *v x = 0;\n        y \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\\<rbrakk>\n       \\<Longrightarrow> COLS.v.orthogonal y x\n 2. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "have y2: \"y v* (\\<chi> i j. cnj (A $ i $ j)) = xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y v* (\\<chi>i j. cnj_class.cnj (A $ i $ j)) = xa", "using transpose_vector y"], ["proof (prove)\nusing this:\n  ?x v* ?A = Finite_Cartesian_Product.transpose ?A *v ?x\n  xa =\n  Finite_Cartesian_Product.transpose\n   (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n  y\n\ngoal (1 subgoal):\n 1. y v* (\\<chi>i j. cnj_class.cnj (A $ i $ j)) = xa", "by fastforce"], ["proof (state)\nthis:\n  y v* (\\<chi>i j. cnj_class.cnj (A $ i $ j)) = xa\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>A *v x = 0;\n        y \\<in> row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j))\\<rbrakk>\n       \\<Longrightarrow> COLS.v.orthogonal y x\n 2. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "show \"COLS.v.orthogonal xa x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. COLS.v.orthogonal xa x", "using m.dot_lmul_matrix[of y ?A x]"], ["proof (prove)\nusing this:\n  inner_cols (y v* (\\<chi>i j. cnj_class.cnj (A $ i $ j))) x =\n  inner_rows y\n   ((\\<chi>i j.\n        cnj_class.cnj ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ i $ j)) *v\n    x)\n\ngoal (1 subgoal):\n 1. COLS.v.orthogonal xa x", "unfolding cnj_cnj_matrix Ax ROWS.v.inner_zero_right"], ["proof (prove)\nusing this:\n  inner_cols (y v* (\\<chi>i j. cnj_class.cnj (A $ i $ j))) x = (0::'a)\n\ngoal (1 subgoal):\n 1. COLS.v.orthogonal xa x", "unfolding y2"], ["proof (prove)\nusing this:\n  inner_cols xa x = (0::'a)\n\ngoal (1 subgoal):\n 1. COLS.v.orthogonal xa x", "unfolding COLS.v.orthogonal_def"], ["proof (prove)\nusing this:\n  inner_cols xa x = (0::'a)\n\ngoal (1 subgoal):\n 1. inner_cols xa x = (0::'a)", "."], ["proof (state)\nthis:\n  COLS.v.orthogonal xa x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "assume xa: \"\\<forall>xa\\<in>row_space (\\<chi> i j. cnj (A $ i $ j)). COLS.v.orthogonal xa x\""], ["proof (state)\nthis:\n  \\<forall>xa\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n     COLS.v.orthogonal xa x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>y\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n          COLS.v.orthogonal y x \\<Longrightarrow>\n       A *v x = 0", "show \"A *v x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *v x = 0", "using xa"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)).\n     COLS.v.orthogonal xa x\n\ngoal (1 subgoal):\n 1. A *v x = 0", "unfolding row_space_eq COLS.v.orthogonal_def"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{w. \\<exists>y.\n                         Finite_Cartesian_Product.transpose\n                          (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n                         y =\n                         w}.\n     inner_cols xa x = (0::'a)\n\ngoal (1 subgoal):\n 1. A *v x = 0", "using COLS.v.inner_eq_zero_iff"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{w. \\<exists>y.\n                         Finite_Cartesian_Product.transpose\n                          (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n                         y =\n                         w}.\n     inner_cols xa x = (0::'a)\n  (inner_cols ?x ?x = (0::'a)) = (?x = 0)\n\ngoal (1 subgoal):\n 1. A *v x = 0", "using m.dot_lmul_matrix[of _ ?A]"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{w. \\<exists>y.\n                         Finite_Cartesian_Product.transpose\n                          (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n                         y =\n                         w}.\n     inner_cols xa x = (0::'a)\n  (inner_cols ?x ?x = (0::'a)) = (?x = 0)\n  inner_cols (?x v* (\\<chi>i j. cnj_class.cnj (A $ i $ j))) ?y =\n  inner_rows ?x\n   ((\\<chi>i j.\n        cnj_class.cnj ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ i $ j)) *v\n    ?y)\n\ngoal (1 subgoal):\n 1. A *v x = 0", "unfolding transpose_vector"], ["proof (prove)\nusing this:\n  \\<forall>xa\\<in>{w. \\<exists>y.\n                         Finite_Cartesian_Product.transpose\n                          (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n                         y =\n                         w}.\n     inner_cols xa x = (0::'a)\n  (inner_cols ?x ?x = (0::'a)) = (?x = 0)\n  inner_cols\n   (Finite_Cartesian_Product.transpose\n     (\\<chi>i j. cnj_class.cnj (A $ i $ j)) *v\n    ?x)\n   ?y =\n  inner_rows ?x\n   ((\\<chi>i j.\n        cnj_class.cnj ((\\<chi>i j. cnj_class.cnj (A $ i $ j)) $ i $ j)) *v\n    ?y)\n\ngoal (1 subgoal):\n 1. A *v x = 0", "by auto \n       (metis ROWS.i4 m.cnj_cnj_matrix m.dot_lmul_matrix transpose_vector)"], ["proof (state)\nthis:\n  A *v x = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  null_space A =\n  COLS.v.orthogonal_complement\n   (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma left_null_space_orthogonal_complement_col_space:\n  fixes A::\"'a^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = ROWS.v.orthogonal_complement (col_space (\\<chi> i j. cnj (A $ i $ j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_null_space A =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. left_null_space A =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "interpret m: matrix inner_rows inner_cols"], ["proof (prove)\ngoal (1 subgoal):\n 1. Generalizations2.matrix inner_rows inner_cols", "by unfold_locales"], ["proof (state)\ngoal (1 subgoal):\n 1. left_null_space A =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. left_null_space A =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "using m.null_space_orthogonal_complement_row_space[of \"transpose A\"]"], ["proof (prove)\nusing this:\n  null_space (Finite_Cartesian_Product.transpose A) =\n  ROWS.v.orthogonal_complement\n   (row_space\n     (\\<chi>i j.\n         cnj_class.cnj (Finite_Cartesian_Product.transpose A $ i $ j)))\n\ngoal (1 subgoal):\n 1. left_null_space A =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "unfolding left_null_space_eq_null_space_transpose"], ["proof (prove)\nusing this:\n  null_space (Finite_Cartesian_Product.transpose A) =\n  ROWS.v.orthogonal_complement\n   (row_space\n     (\\<chi>i j.\n         cnj_class.cnj (Finite_Cartesian_Product.transpose A $ i $ j)))\n\ngoal (1 subgoal):\n 1. null_space (Finite_Cartesian_Product.transpose A) =\n    ROWS.v.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "unfolding col_space_eq_row_space_transpose"], ["proof (prove)\nusing this:\n  null_space (Finite_Cartesian_Product.transpose A) =\n  ROWS.v.orthogonal_complement\n   (row_space\n     (\\<chi>i j.\n         cnj_class.cnj (Finite_Cartesian_Product.transpose A $ i $ j)))\n\ngoal (1 subgoal):\n 1. null_space (Finite_Cartesian_Product.transpose A) =\n    ROWS.v.orthogonal_complement\n     (row_space\n       (Finite_Cartesian_Product.transpose\n         (\\<chi>i j. cnj_class.cnj (A $ i $ j))))", "by auto"], ["proof (state)\nthis:\n  left_null_space A =\n  ROWS.v.orthogonal_complement\n   (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text\\<open>We can get the explicit results for complex and real matrices\\<close>"], ["", "interpretation real_matrix: matrix \"\\<lambda>x y::real^'cols::{finite,wellorder}. \n  sum (\\<lambda>i. (x$i) * (y$i)) UNIV\" \"\\<lambda>x y. sum (\\<lambda>i. (x$i) * (y$i)) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Generalizations2.matrix (\\<lambda>x y. \\<Sum>i\\<in>UNIV. x $ i * y $ i)\n     (\\<lambda>x y. \\<Sum>i\\<in>UNIV. x $ i * y $ i)", "apply (unfold_locales, auto simp add: cnj_real_def real_of_real_def distrib_right)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < x * x", "using not_real_square_gt_zero"], ["proof (prove)\nusing this:\n  (\\<not> 0 < ?x * ?x) = (?x = 0)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<noteq> 0 \\<Longrightarrow> 0 < x * x", "by blast"], ["", "interpretation complex_matrix: matrix \"\\<lambda>x y::complex^'cols::{finite,wellorder}. \n  sum (\\<lambda>i. (x$i) * cnj (y$i)) UNIV\" \"\\<lambda>x y. sum (\\<lambda>i. (x$i) * cnj (y$i)) UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Generalizations2.matrix\n     (\\<lambda>x y. \\<Sum>i\\<in>UNIV. x $ i * cnj_class.cnj (y $ i))\n     (\\<lambda>x y. \\<Sum>i\\<in>UNIV. x $ i * cnj_class.cnj (y $ i))", "by (unfold_locales, auto simp add: distrib_right)"], ["", "lemma null_space_orthogonal_complement_row_space_complex:\n  fixes A::\"complex^'cols::{finite,wellorder}^'rows::{finite,wellorder}\"\n  shows \"null_space A = complex_matrix.orthogonal_complement (row_space (\\<chi> i j. cnj (A $ i $ j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null_space A =\n    complex_matrix.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "using complex_matrix.null_space_orthogonal_complement_row_space"], ["proof (prove)\nusing this:\n  null_space ?A =\n  complex_matrix.orthogonal_complement\n   (row_space (\\<chi>i j. cnj_class.cnj (?A $ i $ j)))\n\ngoal (1 subgoal):\n 1. null_space A =\n    complex_matrix.orthogonal_complement\n     (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "."], ["", "lemma left_null_space_orthogonal_complement_col_space_complex:\n  fixes A::\"complex^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = complex_matrix.orthogonal_complement (col_space (\\<chi> i j. cnj (A $ i $ j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_null_space A =\n    complex_matrix.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "using complex_matrix.left_null_space_orthogonal_complement_col_space"], ["proof (prove)\nusing this:\n  left_null_space ?A =\n  complex_matrix.orthogonal_complement\n   (col_space (\\<chi>i j. cnj_class.cnj (?A $ i $ j)))\n\ngoal (1 subgoal):\n 1. left_null_space A =\n    complex_matrix.orthogonal_complement\n     (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))", "."], ["", "lemma null_space_orthogonal_complement_row_space_reals:\n  fixes A::\"real^'cols::{finite,wellorder}^'rows::{finite,wellorder}\"\n  shows \"null_space A = real_matrix.orthogonal_complement (row_space A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null_space A = real_matrix.v.orthogonal_complement (row_space A)", "using real_matrix.null_space_orthogonal_complement_row_space[of A]"], ["proof (prove)\nusing this:\n  null_space A =\n  real_matrix.v.orthogonal_complement\n   (row_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))\n\ngoal (1 subgoal):\n 1. null_space A = real_matrix.v.orthogonal_complement (row_space A)", "unfolding cnj_real_def"], ["proof (prove)\nusing this:\n  null_space A =\n  real_matrix.v.orthogonal_complement\n   (row_space (\\<chi>i j. id (A $ i $ j)))\n\ngoal (1 subgoal):\n 1. null_space A = real_matrix.v.orthogonal_complement (row_space A)", "by (simp add: vec_lambda_eta)"], ["", "lemma left_null_space_orthogonal_complement_col_space_real:\n  fixes A::\"real^'cols::{finite, wellorder}^'rows::{finite, wellorder}\"\n  shows \"left_null_space A = real_matrix.orthogonal_complement (col_space A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. left_null_space A = real_matrix.v.orthogonal_complement (col_space A)", "using real_matrix.left_null_space_orthogonal_complement_col_space[of A]"], ["proof (prove)\nusing this:\n  left_null_space A =\n  real_matrix.v.orthogonal_complement\n   (col_space (\\<chi>i j. cnj_class.cnj (A $ i $ j)))\n\ngoal (1 subgoal):\n 1. left_null_space A = real_matrix.v.orthogonal_complement (col_space A)", "by (simp add: cnj_real_def vec_lambda_eta)"], ["", "end"]]}