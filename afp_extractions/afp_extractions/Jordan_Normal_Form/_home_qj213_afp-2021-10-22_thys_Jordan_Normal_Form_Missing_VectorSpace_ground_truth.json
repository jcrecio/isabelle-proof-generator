{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form/Missing_VectorSpace.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form", "problem_names": ["lemma comp_fun_commute_on_UNIV:\n  assumes \"A = (UNIV :: 'a set)\"\n  shows \"comp_fun_commute f\"", "lemma fun_left_comm: \n  assumes \"y \\<in> A\" and \"x \\<in> A\" and \"z \\<in> A\" shows \"f y (f x z) = f x (f y z)\"", "lemma commute_left_comp: \n  assumes \"y \\<in> A\" and \"x\\<in>A\" and \"z\\<in>A\" and \"g \\<in> A \\<rightarrow> A\" \n  shows \"f y (f x (g z)) = f x (f y (g z))\"", "lemma fold_graph_finite:\n  assumes \"fold_graph f z B y\"\n  shows \"finite B\"", "lemma fold_graph_closed:\n  assumes \"fold_graph f z B y\" and \"B \\<subseteq> A\" and \"z \\<in> A\"\n  shows \"y \\<in> A\"", "lemma fold_graph_insertE_aux:\n  \"fold_graph f z B y \\<Longrightarrow> a \\<in> B \\<Longrightarrow> z\\<in>A\n  \\<Longrightarrow> B \\<subseteq> A\n  \\<Longrightarrow>  \\<exists>y'. y = f a y' \\<and> fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\"", "lemma fold_graph_insertE:\n  assumes \"fold_graph f z (insert x B) v\" and \"x \\<notin> B\" and \"insert x B \\<subseteq> A\" and \"z\\<in>A\"\n  obtains y where \"v = f x y\" and \"fold_graph f z B y\"", "lemma fold_graph_determ: \"fold_graph f z B x \\<Longrightarrow> fold_graph f z B y \\<Longrightarrow>  B \\<subseteq> A \\<Longrightarrow> z\\<in>A \\<Longrightarrow> y = x\"", "lemma fold_equality: \"fold_graph f z B y \\<Longrightarrow> B \\<subseteq> A \\<Longrightarrow> z \\<in> A \\<Longrightarrow> Finite_Set.fold f z B = y\"", "lemma fold_graph_fold:\n  assumes f: \"finite B\" and BA: \"B\\<subseteq>A\" and z: \"z \\<in> A\"\n  shows \"fold_graph f z B (Finite_Set.fold f z B)\"", "lemma fold_insert [simp]:\n  assumes \"finite B\" and \"x \\<notin> B\" and BA: \"insert x B \\<subseteq> A\" and z: \"z \\<in> A\"\n  shows \"Finite_Set.fold f z (insert x B) = f x (Finite_Set.fold f z B)\"", "lemma fold_cong:\n  assumes f: \"comp_fun_commute_on f A\" and g: \"comp_fun_commute_on g A\"\n    and \"finite S\"\n    and cong: \"\\<And>x. x \\<in> S \\<Longrightarrow> f x = g x\"\n    and \"s = t\" and \"S = T\" \n    and SA: \"S \\<subseteq> A\" and s: \"s\\<in>A\"\n  shows \"Finite_Set.fold f s S = Finite_Set.fold g t T\"", "lemma comp_fun_Pi: \"(\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A\"", "lemma comp_fun_commute_funpow: \"comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A\"", "lemma fold_mset_add_mset: \n  assumes MA: \"set_mset M \\<subseteq> A\" and s: \"s \\<in> A\" and x: \"x \\<in> A\"\n  shows \"fold_mset f s (add_mset x M) = f x (fold_mset f s M)\"", "lemma Diff_not_in: \"a \\<notin> A - {a}\"", "lemma finsum_restrict:\n  assumes fA: \"f : A \\<rightarrow> carrier G\"\n      and restr: \"restrict f A = restrict g A\"\n  shows \"finsum G f A = finsum G g A\"", "lemma minus_nonzero: \"x : carrier G \\<Longrightarrow> x \\<noteq> \\<zero> \\<Longrightarrow> \\<ominus> x \\<noteq> \\<zero>\"", "lemma (in ordered_comm_monoid_add) positive_sum:\n  assumes X : \"finite X\"\n      and \"f : X \\<rightarrow> { y :: 'a. y \\<ge> 0 }\"\n  shows \"sum f X \\<ge> 0 \\<and> (sum f X = 0 \\<longrightarrow> f ` X \\<subseteq> {0})\"", "lemma insert_union: \"insert x X = X \\<union> {x}\"", "lemmas lincomb_insert2 = lincomb_insert[unfolded insert_union[symmetric]]", "lemma lincomb_restrict:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and a: \"a : U \\<rightarrow> carrier K\"\n      and restr: \"restrict a U = restrict b U\"\n  shows \"lincomb a U = lincomb b U\"", "lemma lindep_span:\n  assumes U: \"U \\<subseteq> carrier V\" and finU: \"finite U\"\n  shows \"lin_dep U = (\\<exists>u \\<in> U. u \\<in> span (U - {u}))\" (is \"?l = ?r\")", "lemma not_lindepD:\n  assumes \"~ lin_dep S\"\n      and \"finite A\" \"A \\<subseteq> S\" \"f : A \\<rightarrow> carrier K\" \"lincomb f A = zero V\"\n    shows \"f : A \\<rightarrow> {zero K}\"", "lemma span_mem:\n  assumes E: \"E \\<subseteq> carrier V\" and uE: \"u : E\" shows \"u : span E\"", "lemma lincomb_distrib:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and a: \"a : U \\<rightarrow> carrier K\"\n      and c: \"c : carrier K\"\n  shows \"c \\<odot>\\<^bsub>V\\<^esub> lincomb a U = lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\"\n    (is \"_ = lincomb ?b U\")", "lemma span_swap:\n  assumes finE[simp]: \"finite E\"\n      and E[simp]: \"E \\<subseteq> carrier V\"\n      and u[simp]: \"u : carrier V\"\n      and usE: \"u \\<notin> span E\"\n      and v[simp]: \"v : carrier V\"\n      and usEv: \"u : span (insert v E)\"\n  shows \"span (insert u E) \\<subseteq> span (insert v E)\" (is \"?L \\<subseteq> ?R\")", "lemma basis_swap:\n  assumes finE[simp]: \"finite E\"\n      and u[simp]: \"u : carrier V\"\n      and uE[simp]: \"u \\<notin> E\"\n      and b: \"basis (insert u E)\"\n      and v[simp]: \"v : carrier V\"\n      and uEv: \"u : span (insert v E)\"\n  shows \"basis (insert v E)\"", "lemma span_empty: \"span {} = {zero V}\"", "lemma span_self: assumes [simp]: \"v : carrier V\" shows \"v : span {v}\"", "lemma span_zero: \"zero V : span U\"", "lemma emb_carrier[simp]: \"f : D \\<rightarrow> R \\<Longrightarrow> emb f D : D \\<rightarrow> R\"", "lemma emb_restrict: \"restrict (emb f D) D = restrict f D\"", "lemma emb_zero: \"emb f D : X - D \\<rightarrow> { zero K }\"", "lemma lincomb_clean:\n  assumes A: \"A \\<subseteq> carrier V\"\n    and Z: \"Z \\<subseteq> carrier V\"\n    and finA: \"finite A\"\n    and finZ: \"finite Z\"\n    and aA: \"a : A \\<rightarrow> carrier K\"\n    and aZ: \"a : Z \\<rightarrow> { zero K }\"\n  shows \"lincomb a (A \\<union> Z) = lincomb a A\"", "lemma span_add1:\n  assumes U: \"U \\<subseteq> carrier V\" and v: \"v : span U\" and w: \"w : span U\"\n  shows \"v \\<oplus>\\<^bsub>V\\<^esub> w : span U\"", "lemma span_neg:\n  assumes U: \"U \\<subseteq> carrier V\" and vU: \"v : span U\"\n  shows \"\\<ominus>\\<^bsub>V\\<^esub> v : span U\"", "lemma span_closed[simp]: \"U \\<subseteq> carrier V \\<Longrightarrow> v : span U \\<Longrightarrow> v : carrier V\"", "lemma span_add:\n  assumes U: \"U \\<subseteq> carrier V\" and vU: \"v : span U\" and w[simp]: \"w : carrier V\"\n  shows \"w : span U \\<longleftrightarrow> v \\<oplus>\\<^bsub>V\\<^esub> w : span U\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma lincomb_union:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and U'[simp]: \"U' \\<subseteq> carrier V\"\n      and disj: \"U \\<inter> U' = {}\"\n      and finU: \"finite U\"\n      and finU': \"finite U'\"\n      and a: \"a : U \\<union> U' \\<rightarrow> carrier K\"\n    shows \"lincomb a (U \\<union> U') = lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\"", "lemma span_union1:\n  assumes U: \"U \\<subseteq> carrier V\" and U': \"U' \\<subseteq> carrier V\" and UU': \"span U = span U'\"\n      and W: \"W \\<subseteq> carrier V\" and W': \"W' \\<subseteq> carrier V\" and WW': \"span W = span W'\"\n  shows \"span (U \\<union> W) \\<subseteq> span (U' \\<union> W')\" (is \"?L \\<subseteq> ?R\")", "lemma span_Un:\n  assumes U: \"U \\<subseteq> carrier V\" and U': \"U' \\<subseteq> carrier V\" and UU': \"span U = span U'\"\n      and W: \"W \\<subseteq> carrier V\" and W': \"W' \\<subseteq> carrier V\" and WW': \"span W = span W'\"\n  shows \"span (U \\<union> W) = span (U' \\<union> W')\" (is \"?L = ?R\")", "lemma lincomb_zero:\n  assumes U: \"U \\<subseteq> carrier V\" and a: \"a : U \\<rightarrow> {zero K}\"\n  shows \"lincomb a U = zero V\"", "lemma lincomb_empty[simp]: \"lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>\"", "lemma inj_imp_Ker0:\nassumes \"inj_on T (carrier V)\"\nshows \"carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\"", "lemma Ke0_imp_inj:\nassumes c: \"carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\"\nshows \"inj_on T (carrier V)\"", "lemma inj_imp_dim_ker0:\nassumes \"inj_on T (carrier V)\"\nshows \"vectorspace.dim K (V.vs kerT) = 0\"", "lemma surj_imp_imT_carrier:\nassumes surj: \"T` (carrier V) = carrier W\"\nshows \"(imT) = carrier W\"", "lemma dim_eq:\nassumes fin_dim_V: \"V.fin_dim\"\nand i: \"inj_on T (carrier V)\" and surj: \"T` (carrier V) = carrier W\"\nshows \"V.dim = W.dim\"", "lemma lincomb_linear_image:\nassumes inj_T: \"inj_on T (carrier V)\"\nassumes A_in_V: \"A \\<subseteq> carrier V\" and a: \"a \\<in> (T`A) \\<rightarrow> carrier K\"\nassumes f: \"finite A\"\nshows \"W.module.lincomb a (T`A) = T (V.module.lincomb (a \\<circ> T) A)\"", "lemma surj_fin_dim:  \n  assumes fd: \"V.fin_dim\" and surj: \"T` (carrier V) = carrier W\"\n  shows image_fin_dim: \"W.fin_dim\"", "lemma linear_inj_image_is_basis:\nassumes inj_T: \"inj_on T (carrier V)\" and surj: \"T` (carrier V) = carrier W\"\nand basis_B: \"V.basis B\"\nand fin_dim_V: \"V.fin_dim\"\nshows \"W.basis (T`B)\"", "lemma (in vectorspace) dim1I:\nassumes \"gen_set {v}\"\nassumes \"v \\<noteq> \\<zero>\\<^bsub>V\\<^esub>\" \"v \\<in> carrier V\"\nshows \"dim = 1\"", "lemma (in vectorspace) dim0I:\nassumes \"gen_set {\\<zero>\\<^bsub>V\\<^esub>}\"\nshows \"dim = 0\"", "lemma (in vectorspace) dim_le1I:\nassumes \"gen_set {v}\"\nassumes \"v \\<in> carrier V\"\nshows \"dim \\<le> 1\"", "lemma find_indices_Nil [simp]:\n  \"find_indices x [] = []\"", "lemma find_indices_Cons:\n  \"find_indices x (y#ys) = (if x = y then Cons 0 else id) (map Suc (find_indices x ys))\"", "lemma find_indices_snoc [simp]:\n  \"find_indices x (ys@[y]) = find_indices x ys @ (if x = y then [length ys] else [])\"", "lemma mem_set_find_indices [simp]: \"i \\<in> set (find_indices x xs) \\<longleftrightarrow> i < length xs \\<and> xs!i = x\"", "lemma distinct_find_indices: \"distinct (find_indices x xs)\"", "lemma [simp]:\n  shows sumlist_Cons: \"sumlist (x#xs) = x \\<oplus> sumlist xs\"\n    and sumlist_Nil: \"sumlist [] = \\<zero>\"", "lemma sumlist_carrier [simp]:\n  assumes \"set xs \\<subseteq> carrier G\" shows \"sumlist xs \\<in> carrier G\"", "lemma sumlist_neutral:\n  assumes \"set xs \\<subseteq> {\\<zero>}\" shows \"sumlist xs = \\<zero>\"", "lemma sumlist_append:\n  assumes \"set xs \\<subseteq> carrier G\" and \"set ys \\<subseteq> carrier G\"\n  shows \"sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys\"", "lemma sumlist_snoc:\n  assumes \"set xs \\<subseteq> carrier G\" and \"x \\<in> carrier G\"\n  shows \"sumlist (xs @ [x]) = sumlist xs \\<oplus> x\"", "lemma sumlist_as_finsum:\n  assumes \"set xs \\<subseteq> carrier G\" and \"distinct xs\" shows \"sumlist xs = (\\<Oplus>x\\<in>set xs. x)\"", "lemma sumlist_map_as_finsum:\n  assumes \"f : set xs \\<rightarrow> carrier G\" and \"distinct xs\"\n  shows \"sumlist (map f xs) = (\\<Oplus>x \\<in> set xs. f x)\"", "lemma summset_empty [simp]: \"summset {#} = \\<zero>\"", "lemma fold_mset_add_carrier: \"a \\<in> carrier G \\<Longrightarrow> set_mset M \\<subseteq> carrier G \\<Longrightarrow> fold_mset (\\<oplus>) a M \\<in> carrier G\"", "lemma summset_carrier[intro]: \"set_mset M \\<subseteq> carrier G \\<Longrightarrow> summset M \\<in> carrier G\"", "lemma summset_add_mset[simp]:\n  assumes a: \"a \\<in> carrier G\" and MG: \"set_mset M \\<subseteq> carrier G\"\n  shows \"summset (add_mset a M) = a \\<oplus> summset M\"", "lemma sumlist_as_summset:\n  assumes \"set xs \\<subseteq> carrier G\" shows \"sumlist xs = summset (mset xs)\"", "lemma sumlist_rev:\n  assumes \"set xs \\<subseteq> carrier G\"\n  shows \"sumlist (rev xs) = sumlist xs\"", "lemma sumlist_as_fold:\n  assumes \"set xs \\<subseteq> carrier G\"\n  shows \"sumlist xs = fold (\\<oplus>) xs \\<zero>\"", "lemma lincomb_list_carrier:\n  assumes \"set vs \\<subseteq> carrier M\" and \"c : {0..<length vs} \\<rightarrow> carrier R\"\n  shows \"lincomb_list c vs \\<in> carrier M\"", "lemma lincomb_list_Nil [simp]: \"lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\"", "lemma lincomb_list_Cons [simp]:\n  \"lincomb_list c (v#vs) = c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb_list (c o Suc) vs\"", "lemma lincomb_list_eq_0:\n  assumes \"\\<And>i. i < length vs \\<Longrightarrow> c i \\<odot>\\<^bsub>M\\<^esub> vs ! i = \\<zero>\\<^bsub>M\\<^esub>\"\n  shows \"lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>\"", "lemma mk_coeff_carrier:\n  assumes \"c : {0..<length vs} \\<rightarrow> carrier R\" shows \"mk_coeff vs c w \\<in> carrier R\"", "lemma mk_coeff_Cons:\n  assumes \"c : {0..<length (v#vs)} \\<rightarrow> carrier R\"\n  shows \"mk_coeff (v#vs) c = (\\<lambda>w. (if w = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c o Suc) w)\"", "lemma mk_coeff_0[simp]:\n  assumes \"v \\<notin> set vs\"\n  shows \"mk_coeff vs c v = \\<zero>\"", "lemma lincomb_list_as_lincomb:\n  assumes vs_M: \"set vs \\<subseteq> carrier M\" and c: \"c : {0..<length vs} \\<rightarrow> carrier R\"\n  shows \"lincomb_list c vs = lincomb (mk_coeff vs c) (set vs)\"", "lemma in_span_listI:\n  assumes \"c : {0..<length vs} \\<rightarrow> carrier R\" and \"v = lincomb_list c vs\"\n  shows \"v \\<in> span_list vs\"", "lemma in_span_listE:\n  assumes \"v \\<in> span_list vs\"\n      and \"\\<And>c. c : {0..<length vs} \\<rightarrow> carrier R \\<Longrightarrow> v = lincomb_list c vs \\<Longrightarrow> thesis\"\n  shows thesis", "lemmas lincomb_insert2 = lincomb_insert[unfolded insert_union[symmetric]]", "lemma lincomb_zero:\n  assumes U: \"U \\<subseteq> carrier M\" and a: \"a : U \\<rightarrow> {zero R}\"\n  shows \"lincomb a U = zero M\""], "translations": [["", "lemma comp_fun_commute_on_UNIV:\n  assumes \"A = (UNIV :: 'a set)\"\n  shows \"comp_fun_commute f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute f", "unfolding comp_fun_commute_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y x. f y \\<circ> f x = f x \\<circ> f y", "using assms comp_fun_commute_restrict f"], ["proof (prove)\nusing this:\n  A = UNIV\n  \\<forall>y\\<in>A.\n     \\<forall>x\\<in>A. \\<forall>z\\<in>A. f y (f x z) = f x (f y z)\n  f \\<in> A \\<rightarrow> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. \\<forall>y x. f y \\<circ> f x = f x \\<circ> f y", "by auto"], ["", "lemma fun_left_comm: \n  assumes \"y \\<in> A\" and \"x \\<in> A\" and \"z \\<in> A\" shows \"f y (f x z) = f x (f y z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f y (f x z) = f x (f y z)", "using comp_fun_commute_restrict assms"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>A.\n     \\<forall>x\\<in>A. \\<forall>z\\<in>A. f y (f x z) = f x (f y z)\n  y \\<in> A\n  x \\<in> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. f y (f x z) = f x (f y z)", "by auto"], ["", "lemma commute_left_comp: \n  assumes \"y \\<in> A\" and \"x\\<in>A\" and \"z\\<in>A\" and \"g \\<in> A \\<rightarrow> A\" \n  shows \"f y (f x (g z)) = f x (f y (g z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f y (f x (g z)) = f x (f y (g z))", "using assms"], ["proof (prove)\nusing this:\n  y \\<in> A\n  x \\<in> A\n  z \\<in> A\n  g \\<in> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. f y (f x (g z)) = f x (f y (g z))", "by (auto simp add: Pi_def o_assoc comp_fun_commute_restrict)"], ["", "lemma fold_graph_finite:\n  assumes \"fold_graph f z B y\"\n  shows \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "using assms"], ["proof (prove)\nusing this:\n  fold_graph f z B y\n\ngoal (1 subgoal):\n 1. finite B", "by induct simp_all"], ["", "lemma fold_graph_closed:\n  assumes \"fold_graph f z B y\" and \"B \\<subseteq> A\" and \"z \\<in> A\"\n  shows \"y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> A", "using assms"], ["proof (prove)\nusing this:\n  fold_graph f z B y\n  B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. y \\<in> A", "proof (induct set: fold_graph)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> A; z \\<in> A\\<rbrakk>\n    \\<Longrightarrow> z \\<in> A\n 2. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> y \\<in> A;\n        insert x Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> f x y \\<in> A", "case emptyI"], ["proof (state)\nthis:\n  {} \\<subseteq> A\n  z \\<in> A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> A; z \\<in> A\\<rbrakk>\n    \\<Longrightarrow> z \\<in> A\n 2. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> y \\<in> A;\n        insert x Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> f x y \\<in> A", "then"], ["proof (chain)\npicking this:\n  {} \\<subseteq> A\n  z \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. z \\<in> A", "by auto"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> y \\<in> A;\n        insert x Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> f x y \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> y \\<in> A;\n        insert x Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> f x y \\<in> A", "case (insertI x B y)"], ["proof (state)\nthis:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>B \\<subseteq> A; z \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<in> A\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n        \\<Longrightarrow> y \\<in> A;\n        insert x Aa \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> f x y \\<in> A", "then"], ["proof (chain)\npicking this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>B \\<subseteq> A; z \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<in> A\n  insert x B \\<subseteq> A\n  z \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>B \\<subseteq> A; z \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<in> A\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. f x y \\<in> A", "using insertI f"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>B \\<subseteq> A; z \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<in> A\n  insert x B \\<subseteq> A\n  z \\<in> A\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>B \\<subseteq> A; z \\<in> A\\<rbrakk> \\<Longrightarrow> y \\<in> A\n  insert x B \\<subseteq> A\n  z \\<in> A\n  f \\<in> A \\<rightarrow> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. f x y \\<in> A", "by auto"], ["proof (state)\nthis:\n  f x y \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fold_graph_insertE_aux:\n  \"fold_graph f z B y \\<Longrightarrow> a \\<in> B \\<Longrightarrow> z\\<in>A\n  \\<Longrightarrow> B \\<subseteq> A\n  \\<Longrightarrow>  \\<exists>y'. y = f a y' \\<and> fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fold_graph f z B y; a \\<in> B; z \\<in> A;\n     B \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y'.\n                         y = f a y' \\<and>\n                         fold_graph f z (B - {a}) y' \\<and> y' \\<in> A", "proof (induct set: fold_graph)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {}; z \\<in> A; {} \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y'.\n                         z = f a y' \\<and>\n                         fold_graph f z ({} - {a}) y' \\<and> y' \\<in> A\n 2. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>a \\<in> Aa; z \\<in> A; Aa \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y'.\n                             y = f a y' \\<and>\n                             fold_graph f z (Aa - {a}) y' \\<and> y' \\<in> A;\n        a \\<in> insert x Aa; z \\<in> A; insert x Aa \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y'.\n                            f x y = f a y' \\<and>\n                            fold_graph f z (insert x Aa - {a}) y' \\<and>\n                            y' \\<in> A", "case emptyI"], ["proof (state)\nthis:\n  a \\<in> {}\n  z \\<in> A\n  {} \\<subseteq> A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<in> {}; z \\<in> A; {} \\<subseteq> A\\<rbrakk>\n    \\<Longrightarrow> \\<exists>y'.\n                         z = f a y' \\<and>\n                         fold_graph f z ({} - {a}) y' \\<and> y' \\<in> A\n 2. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>a \\<in> Aa; z \\<in> A; Aa \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y'.\n                             y = f a y' \\<and>\n                             fold_graph f z (Aa - {a}) y' \\<and> y' \\<in> A;\n        a \\<in> insert x Aa; z \\<in> A; insert x Aa \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y'.\n                            f x y = f a y' \\<and>\n                            fold_graph f z (insert x Aa - {a}) y' \\<and>\n                            y' \\<in> A", "then"], ["proof (chain)\npicking this:\n  a \\<in> {}\n  z \\<in> A\n  {} \\<subseteq> A", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> {}\n  z \\<in> A\n  {} \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>y'.\n       z = f a y' \\<and> fold_graph f z ({} - {a}) y' \\<and> y' \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>y'.\n     z = f a y' \\<and> fold_graph f z ({} - {a}) y' \\<and> y' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>a \\<in> Aa; z \\<in> A; Aa \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y'.\n                             y = f a y' \\<and>\n                             fold_graph f z (Aa - {a}) y' \\<and> y' \\<in> A;\n        a \\<in> insert x Aa; z \\<in> A; insert x Aa \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y'.\n                            f x y = f a y' \\<and>\n                            fold_graph f z (insert x Aa - {a}) y' \\<and>\n                            y' \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>a \\<in> Aa; z \\<in> A; Aa \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y'.\n                             y = f a y' \\<and>\n                             fold_graph f z (Aa - {a}) y' \\<and> y' \\<in> A;\n        a \\<in> insert x Aa; z \\<in> A; insert x Aa \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y'.\n                            f x y = f a y' \\<and>\n                            fold_graph f z (insert x Aa - {a}) y' \\<and>\n                            y' \\<in> A", "case (insertI x B y)"], ["proof (state)\nthis:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<lbrakk>a \\<in> Aa; z \\<in> A; Aa \\<subseteq> A\\<rbrakk>\n        \\<Longrightarrow> \\<exists>y'.\n                             y = f a y' \\<and>\n                             fold_graph f z (Aa - {a}) y' \\<and> y' \\<in> A;\n        a \\<in> insert x Aa; z \\<in> A; insert x Aa \\<subseteq> A\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y'.\n                            f x y = f a y' \\<and>\n                            fold_graph f z (insert x Aa - {a}) y' \\<and>\n                            y' \\<in> A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "proof (cases \"x = a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "case True"], ["proof (state)\nthis:\n  x = a\n\ngoal (2 subgoals):\n 1. x = a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A\n 2. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "proof (rule exI[of _ y])"], ["proof (state)\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "have B: \"(insert x B - {a}) = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x B - {a} = B", "using True insertI"], ["proof (prove)\nusing this:\n  x = a\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. insert x B - {a} = B", "by auto"], ["proof (state)\nthis:\n  insert x B - {a} = B\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "have \"f x y = f a y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x y = f a y", "by (simp add: True)"], ["proof (state)\nthis:\n  f x y = f a y\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "moreover"], ["proof (state)\nthis:\n  f x y = f a y\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "have \"fold_graph f z (insert x B - {a}) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B - {a}) y", "by (simp add: B insertI)"], ["proof (state)\nthis:\n  fold_graph f z (insert x B - {a}) y\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "moreover"], ["proof (state)\nthis:\n  fold_graph f z (insert x B - {a}) y\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "have \"y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> A", "using insertI fold_graph_closed[of z B]"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n  \\<lbrakk>fold_graph f z B ?y; B \\<subseteq> A; z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y \\<in> A\n\ngoal (1 subgoal):\n 1. y \\<in> A", "by auto"], ["proof (state)\nthis:\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  f x y = f a y\n  fold_graph f z (insert x B - {a}) y\n  y \\<in> A", "show \" f x y = f a y \\<and> fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A\""], ["proof (prove)\nusing this:\n  f x y = f a y\n  fold_graph f z (insert x B - {a}) y\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. f x y = f a y \\<and>\n    fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A", "by simp"], ["proof (state)\nthis:\n  f x y = f a y \\<and> fold_graph f z (insert x B - {a}) y \\<and> y \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y'.\n     f x y = f a y' \\<and>\n     fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "case False"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "obtain y' where y: \"y = f a y'\" and y': \"fold_graph f z (B - {a}) y'\" and y'_in_A: \"y' \\<in> A\""], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>y = f a y'; fold_graph f z (B - {a}) y';\n         y' \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insertI f"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n  f \\<in> A \\<rightarrow> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>y = f a y'; fold_graph f z (B - {a}) y';\n         y' \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y = f a y'\n  fold_graph f z (B - {a}) y'\n  y' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "have \"f x y = f a (f x y')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x y = f a (f x y')", "unfolding y"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x (f a y') = f a (f x y')", "proof (rule fun_left_comm)"], ["proof (state)\ngoal (3 subgoals):\n 1. x \\<in> A\n 2. a \\<in> A\n 3. y' \\<in> A", "show \"x \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A", "using insertI"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. x \\<in> A", "by auto"], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (2 subgoals):\n 1. a \\<in> A\n 2. y' \\<in> A", "show \"a \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> A", "using insertI"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. a \\<in> A", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. y' \\<in> A", "show \"y' \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y' \\<in> A", "using y'_in_A"], ["proof (prove)\nusing this:\n  y' \\<in> A\n\ngoal (1 subgoal):\n 1. y' \\<in> A", "by auto"], ["proof (state)\nthis:\n  y' \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f x y = f a (f x y')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "moreover"], ["proof (state)\nthis:\n  f x y = f a (f x y')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "have \"fold_graph f z (insert x B - {a}) (f x y')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B - {a}) (f x y')", "using y' and \\<open>x \\<noteq> a\\<close> and \\<open>x \\<notin> B\\<close>"], ["proof (prove)\nusing this:\n  fold_graph f z (B - {a}) y'\n  x \\<noteq> a\n  x \\<notin> B\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B - {a}) (f x y')", "by (simp add: insert_Diff_if fold_graph.insertI)"], ["proof (state)\nthis:\n  fold_graph f z (insert x B - {a}) (f x y')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "moreover"], ["proof (state)\nthis:\n  fold_graph f z (insert x B - {a}) (f x y')\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "have \"(f x y') \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x y' \\<in> A", "using insertI f y'_in_A"], ["proof (prove)\nusing this:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>a \\<in> B; z \\<in> A; B \\<subseteq> A\\<rbrakk>\n  \\<Longrightarrow> \\<exists>y'.\n                       y = f a y' \\<and>\n                       fold_graph f z (B - {a}) y' \\<and> y' \\<in> A\n  a \\<in> insert x B\n  z \\<in> A\n  insert x B \\<subseteq> A\n  f \\<in> A \\<rightarrow> A \\<rightarrow> A\n  y' \\<in> A\n\ngoal (1 subgoal):\n 1. f x y' \\<in> A", "by auto"], ["proof (state)\nthis:\n  f x y' \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<noteq> a \\<Longrightarrow>\n    \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "ultimately"], ["proof (chain)\npicking this:\n  f x y = f a (f x y')\n  fold_graph f z (insert x B - {a}) (f x y')\n  f x y' \\<in> A", "show ?thesis"], ["proof (prove)\nusing this:\n  f x y = f a (f x y')\n  fold_graph f z (insert x B - {a}) (f x y')\n  f x y' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "using y'_in_A"], ["proof (prove)\nusing this:\n  f x y = f a (f x y')\n  fold_graph f z (insert x B - {a}) (f x y')\n  f x y' \\<in> A\n  y' \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>y'.\n       f x y = f a y' \\<and>\n       fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A", "by auto"], ["proof (state)\nthis:\n  \\<exists>y'.\n     f x y = f a y' \\<and>\n     fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y'.\n     f x y = f a y' \\<and>\n     fold_graph f z (insert x B - {a}) y' \\<and> y' \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fold_graph_insertE:\n  assumes \"fold_graph f z (insert x B) v\" and \"x \\<notin> B\" and \"insert x B \\<subseteq> A\" and \"z\\<in>A\"\n  obtains y where \"v = f x y\" and \"fold_graph f z B y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>v = f x y; fold_graph f z B y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  fold_graph f z (insert x B) v\n  x \\<notin> B\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>v = f x y; fold_graph f z B y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: fold_graph_insertE_aux [OF _ insertI1])"], ["", "lemma fold_graph_determ: \"fold_graph f z B x \\<Longrightarrow> fold_graph f z B y \\<Longrightarrow>  B \\<subseteq> A \\<Longrightarrow> z\\<in>A \\<Longrightarrow> y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fold_graph f z B x; fold_graph f z B y; B \\<subseteq> A;\n     z \\<in> A\\<rbrakk>\n    \\<Longrightarrow> y = x", "proof (induct arbitrary: y set: fold_graph)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fold_graph f z {} y; {} \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z\n 2. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "case emptyI"], ["proof (state)\nthis:\n  fold_graph f z {} y\n  {} \\<subseteq> A\n  z \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>y.\n       \\<lbrakk>fold_graph f z {} y; {} \\<subseteq> A; z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> y = z\n 2. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "then"], ["proof (chain)\npicking this:\n  fold_graph f z {} y\n  {} \\<subseteq> A\n  z \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  fold_graph f z {} y\n  {} \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. y = z", "by (meson empty_fold_graphE)"], ["proof (state)\nthis:\n  y = z\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "case (insertI x B y v)"], ["proof (state)\nthis:\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>fold_graph f z B ?y; B \\<subseteq> A; z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = y\n  fold_graph f z (insert x B) v\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "from \\<open>fold_graph f z (insert x B) v\\<close> and \\<open>x \\<notin> B\\<close> and \\<open>insert x B \\<subseteq> A\\<close> and  \\<open>z \\<in> A\\<close>"], ["proof (chain)\npicking this:\n  fold_graph f z (insert x B) v\n  x \\<notin> B\n  insert x B \\<subseteq> A\n  z \\<in> A", "obtain y' where \"v = f x y'\" and \"fold_graph f z B y'\""], ["proof (prove)\nusing this:\n  fold_graph f z (insert x B) v\n  x \\<notin> B\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>v = f x y'; fold_graph f z B y'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule fold_graph_insertE)"], ["proof (state)\nthis:\n  v = f x y'\n  fold_graph f z B y'\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "from \\<open>fold_graph f z B y'\\<close> and \\<open>insert x B \\<subseteq> A\\<close>"], ["proof (chain)\npicking this:\n  fold_graph f z B y'\n  insert x B \\<subseteq> A", "have \"y' = y\""], ["proof (prove)\nusing this:\n  fold_graph f z B y'\n  insert x B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. y' = y", "using insertI"], ["proof (prove)\nusing this:\n  fold_graph f z B y'\n  insert x B \\<subseteq> A\n  x \\<notin> B\n  fold_graph f z B y\n  \\<lbrakk>fold_graph f z B ?y; B \\<subseteq> A; z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = y\n  fold_graph f z (insert x B) v\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. y' = y", "by auto"], ["proof (state)\nthis:\n  y' = y\n\ngoal (1 subgoal):\n 1. \\<And>x Aa y ya.\n       \\<lbrakk>x \\<notin> Aa; fold_graph f z Aa y;\n        \\<And>ya.\n           \\<lbrakk>fold_graph f z Aa ya; Aa \\<subseteq> A;\n            z \\<in> A\\<rbrakk>\n           \\<Longrightarrow> ya = y;\n        fold_graph f z (insert x Aa) ya; insert x Aa \\<subseteq> A;\n        z \\<in> A\\<rbrakk>\n       \\<Longrightarrow> ya = f x y", "with \\<open>v = f x y'\\<close>"], ["proof (chain)\npicking this:\n  v = f x y'\n  y' = y", "show \"v = f x y\""], ["proof (prove)\nusing this:\n  v = f x y'\n  y' = y\n\ngoal (1 subgoal):\n 1. v = f x y", "by simp"], ["proof (state)\nthis:\n  v = f x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fold_equality: \"fold_graph f z B y \\<Longrightarrow> B \\<subseteq> A \\<Longrightarrow> z \\<in> A \\<Longrightarrow> Finite_Set.fold f z B = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>fold_graph f z B y; B \\<subseteq> A; z \\<in> A\\<rbrakk>\n    \\<Longrightarrow> Finite_Set.fold f z B = y", "by (cases \"finite B\") \n  (auto simp add: Finite_Set.fold_def intro: fold_graph_determ dest: fold_graph_finite)"], ["", "lemma fold_graph_fold:\n  assumes f: \"finite B\" and BA: \"B\\<subseteq>A\" and z: \"z \\<in> A\"\n  shows \"fold_graph f z B (Finite_Set.fold f z B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "have \"\\<exists>x. fold_graph f z B x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. fold_graph f z B x", "by (rule finite_imp_fold_graph[OF f])"], ["proof (state)\nthis:\n  \\<exists>x. fold_graph f z B x\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "moreover"], ["proof (state)\nthis:\n  \\<exists>x. fold_graph f z B x\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "note fold_graph_determ"], ["proof (state)\nthis:\n  \\<lbrakk>fold_graph f ?z ?B ?x; fold_graph f ?z ?B ?y; ?B \\<subseteq> A;\n   ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = ?x\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>x. fold_graph f z B x\n  \\<lbrakk>fold_graph f ?z ?B ?x; fold_graph f ?z ?B ?y; ?B \\<subseteq> A;\n   ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = ?x", "have \"\\<exists>!x. fold_graph f z B x\""], ["proof (prove)\nusing this:\n  \\<exists>x. fold_graph f z B x\n  \\<lbrakk>fold_graph f ?z ?B ?x; fold_graph f ?z ?B ?y; ?B \\<subseteq> A;\n   ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = ?x\n\ngoal (1 subgoal):\n 1. \\<exists>!x. fold_graph f z B x", "using f BA z"], ["proof (prove)\nusing this:\n  \\<exists>x. fold_graph f z B x\n  \\<lbrakk>fold_graph f ?z ?B ?x; fold_graph f ?z ?B ?y; ?B \\<subseteq> A;\n   ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> ?y = ?x\n  finite B\n  B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>!x. fold_graph f z B x", "by auto"], ["proof (state)\nthis:\n  \\<exists>!x. fold_graph f z B x\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "then"], ["proof (chain)\npicking this:\n  \\<exists>!x. fold_graph f z B x", "have \"fold_graph f z B (The (fold_graph f z B))\""], ["proof (prove)\nusing this:\n  \\<exists>!x. fold_graph f z B x\n\ngoal (1 subgoal):\n 1. fold_graph f z B (The (fold_graph f z B))", "by (rule theI')"], ["proof (state)\nthis:\n  fold_graph f z B (The (fold_graph f z B))\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "with assms"], ["proof (chain)\npicking this:\n  finite B\n  B \\<subseteq> A\n  z \\<in> A\n  fold_graph f z B (The (fold_graph f z B))", "show ?thesis"], ["proof (prove)\nusing this:\n  finite B\n  B \\<subseteq> A\n  z \\<in> A\n  fold_graph f z B (The (fold_graph f z B))\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "by (simp add: Finite_Set.fold_def)"], ["proof (state)\nthis:\n  fold_graph f z B (Finite_Set.fold f z B)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This lemma is a generalization of thm comp_fun_commute.fold_insert*)"], ["", "lemma fold_insert [simp]:\n  assumes \"finite B\" and \"x \\<notin> B\" and BA: \"insert x B \\<subseteq> A\" and z: \"z \\<in> A\"\n  shows \"Finite_Set.fold f z (insert x B) = f x (Finite_Set.fold f z B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold f z (insert x B) = f x (Finite_Set.fold f z B)", "proof (rule fold_equality[OF _ BA z])"], ["proof (state)\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "from \\<open>finite B\\<close>"], ["proof (chain)\npicking this:\n  finite B", "have \"fold_graph f z B (Finite_Set.fold f z B)\""], ["proof (prove)\nusing this:\n  finite B\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "using BA fold_graph_fold z"], ["proof (prove)\nusing this:\n  finite B\n  insert x B \\<subseteq> A\n  \\<lbrakk>finite ?B; ?B \\<subseteq> A; ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> fold_graph f ?z ?B (Finite_Set.fold f ?z ?B)\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. fold_graph f z B (Finite_Set.fold f z B)", "by auto"], ["proof (state)\nthis:\n  fold_graph f z B (Finite_Set.fold f z B)\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "hence \"fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))\""], ["proof (prove)\nusing this:\n  fold_graph f z B (Finite_Set.fold f z B)\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "using BA  fold_graph.insertI assms"], ["proof (prove)\nusing this:\n  fold_graph f z B (Finite_Set.fold f z B)\n  insert x B \\<subseteq> A\n  \\<lbrakk>?x \\<notin> ?A; fold_graph ?f ?z ?A ?y\\<rbrakk>\n  \\<Longrightarrow> fold_graph ?f ?z (insert ?x ?A) (?f ?x ?y)\n  finite B\n  x \\<notin> B\n  insert x B \\<subseteq> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "by auto"], ["proof (state)\nthis:\n  fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "then"], ["proof (chain)\npicking this:\n  fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "show \"fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))\""], ["proof (prove)\nusing this:\n  fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))\n\ngoal (1 subgoal):\n 1. fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))", "by simp"], ["proof (state)\nthis:\n  fold_graph f z (insert x B) (f x (Finite_Set.fold f z B))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(*This lemma is a generalization of thm Finite_Set.fold_cong *)"], ["", "lemma fold_cong:\n  assumes f: \"comp_fun_commute_on f A\" and g: \"comp_fun_commute_on g A\"\n    and \"finite S\"\n    and cong: \"\\<And>x. x \\<in> S \\<Longrightarrow> f x = g x\"\n    and \"s = t\" and \"S = T\" \n    and SA: \"S \\<subseteq> A\" and s: \"s\\<in>A\"\n  shows \"Finite_Set.fold f s S = Finite_Set.fold g t T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g t T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g t T", "have \"Finite_Set.fold f s S = Finite_Set.fold g s S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g s S", "using \\<open>finite S\\<close> cong SA s"], ["proof (prove)\nusing this:\n  finite S\n  ?x \\<in> S \\<Longrightarrow> f ?x = g ?x\n  S \\<subseteq> A\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g s S", "proof (induct S)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> f x = g x;\n     {} \\<subseteq> A; s \\<in> A\\<rbrakk>\n    \\<Longrightarrow> Finite_Set.fold f s {} = Finite_Set.fold g s {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "case empty"], ["proof (state)\nthis:\n  ?x \\<in> {} \\<Longrightarrow> f ?x = g ?x\n  {} \\<subseteq> A\n  s \\<in> A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> f x = g x;\n     {} \\<subseteq> A; s \\<in> A\\<rbrakk>\n    \\<Longrightarrow> Finite_Set.fold f s {} = Finite_Set.fold g s {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "then"], ["proof (chain)\npicking this:\n  ?x \\<in> {} \\<Longrightarrow> f ?x = g ?x\n  {} \\<subseteq> A\n  s \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  ?x \\<in> {} \\<Longrightarrow> f ?x = g ?x\n  {} \\<subseteq> A\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. Finite_Set.fold f s {} = Finite_Set.fold g s {}", "by simp"], ["proof (state)\nthis:\n  Finite_Set.fold f s {} = Finite_Set.fold g s {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "case (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x; F \\<subseteq> A;\n   s \\<in> A\\<rbrakk>\n  \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F\n  ?x \\<in> insert x F \\<Longrightarrow> f ?x = g ?x\n  insert x F \\<subseteq> A\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "interpret f: comp_fun_commute_on f A"], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute_on f A", "by (fact f)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "interpret g: comp_fun_commute_on g A"], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute_on g A", "by (fact g)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x;\n         F \\<subseteq> A; s \\<in> A\\<rbrakk>\n        \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F;\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> f xa = g xa;\n        insert x F \\<subseteq> A; s \\<in> A\\<rbrakk>\n       \\<Longrightarrow> Finite_Set.fold f s (insert x F) =\n                         Finite_Set.fold g s (insert x F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold f s (insert x F) = Finite_Set.fold g s (insert x F)", "using insert"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> f x = g x; F \\<subseteq> A;\n   s \\<in> A\\<rbrakk>\n  \\<Longrightarrow> Finite_Set.fold f s F = Finite_Set.fold g s F\n  ?x \\<in> insert x F \\<Longrightarrow> f ?x = g ?x\n  insert x F \\<subseteq> A\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. Finite_Set.fold f s (insert x F) = Finite_Set.fold g s (insert x F)", "by auto"], ["proof (state)\nthis:\n  Finite_Set.fold f s (insert x F) = Finite_Set.fold g s (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Finite_Set.fold f s S = Finite_Set.fold g s S\n\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g t T", "with assms"], ["proof (chain)\npicking this:\n  comp_fun_commute_on f A\n  comp_fun_commute_on g A\n  finite S\n  ?x \\<in> S \\<Longrightarrow> f ?x = g ?x\n  s = t\n  S = T\n  S \\<subseteq> A\n  s \\<in> A\n  Finite_Set.fold f s S = Finite_Set.fold g s S", "show ?thesis"], ["proof (prove)\nusing this:\n  comp_fun_commute_on f A\n  comp_fun_commute_on g A\n  finite S\n  ?x \\<in> S \\<Longrightarrow> f ?x = g ?x\n  s = t\n  S = T\n  S \\<subseteq> A\n  s \\<in> A\n  Finite_Set.fold f s S = Finite_Set.fold g s S\n\ngoal (1 subgoal):\n 1. Finite_Set.fold f s S = Finite_Set.fold g t T", "by simp"], ["proof (state)\nthis:\n  Finite_Set.fold f s S = Finite_Set.fold g t T\n\ngoal:\nNo subgoals!", "qed"], ["", "context comp_fun_commute_on\nbegin"], ["", "lemma comp_fun_Pi: \"(\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A", "have \"(f x ^^ g x) y \\<in> A\" if y: \"y \\<in> A\" and x: \"x \\<in> A\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "using x y"], ["proof (prove)\nusing this:\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "proof (induct \"g x\" arbitrary: g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>0 = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "case 0"], ["proof (state)\nthis:\n  0 = g x\n  x \\<in> A\n  y \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>0 = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "then"], ["proof (chain)\npicking this:\n  0 = g x\n  x \\<in> A\n  y \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  0 = g x\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "by auto"], ["proof (state)\nthis:\n  (f x ^^ g x) y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "case (Suc n g)"], ["proof (state)\nthis:\n  \\<lbrakk>n = ?g x; x \\<in> A; y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f x ^^ ?g x) y \\<in> A\n  Suc n = g x\n  x \\<in> A\n  y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "define h where \"h z = g z - 1\" for z"], ["proof (state)\nthis:\n  h ?z = g ?z - 1\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "have hyp: \"(f x ^^ h x) y \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x ^^ h x) y \\<in> A", "using h_def Suc.prems Suc.hyps diff_Suc_1"], ["proof (prove)\nusing this:\n  h ?z = g ?z - 1\n  x \\<in> A\n  y \\<in> A\n  \\<lbrakk>n = ?g x; x \\<in> A; y \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f x ^^ ?g x) y \\<in> A\n  Suc n = g x\n  Suc ?n - 1 = ?n\n\ngoal (1 subgoal):\n 1. (f x ^^ h x) y \\<in> A", "by metis"], ["proof (state)\nthis:\n  (f x ^^ h x) y \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "have \"g x = Suc (h x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g x = Suc (h x)", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g x = Suc (g x - 1)", "using Suc.hyps(2)"], ["proof (prove)\nusing this:\n  Suc n = g x\n\ngoal (1 subgoal):\n 1. g x = Suc (g x - 1)", "by auto"], ["proof (state)\nthis:\n  g x = Suc (h x)\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   \\<lbrakk>xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n                   \\<Longrightarrow> (f x ^^ g x) y \\<in> A;\n        Suc xa = g x; x \\<in> A; y \\<in> A\\<rbrakk>\n       \\<Longrightarrow> (f x ^^ g x) y \\<in> A", "then"], ["proof (chain)\npicking this:\n  g x = Suc (h x)", "show ?case"], ["proof (prove)\nusing this:\n  g x = Suc (h x)\n\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "using f x hyp"], ["proof (prove)\nusing this:\n  g x = Suc (h x)\n  f \\<in> A \\<rightarrow> A \\<rightarrow> A\n  x \\<in> A\n  (f x ^^ h x) y \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  g x = Suc (h x)\n  f \\<in> {f. \\<forall>x.\n                 x \\<in> A \\<longrightarrow>\n                 f x\n                 \\<in> {f. \\<forall>x.\n                              x \\<in> A \\<longrightarrow> f x \\<in> A}}\n  x \\<in> A\n  (f x ^^ h x) y \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ g x) y \\<in> A", "by auto"], ["proof (state)\nthis:\n  (f x ^^ g x) y \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?y \\<in> A; ?x \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f ?x ^^ g ?x) ?y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y \\<in> A; ?x \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f ?x ^^ g ?x) ?y \\<in> A\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A", "by (auto simp add: Pi_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. f x ^^ g x) \\<in> A \\<rightarrow> A \\<rightarrow> A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This lemma is a generalization of thm comp_fun_commute.comp_fun_commute_funpow *)"], ["", "lemma comp_fun_commute_funpow: \"comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A", "have f: \" (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\"\n    if x: \"x\\<in>A\" and y: \"y \\<in> A\" and z: \"z \\<in> A\" for x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "proof (cases \"x = y\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. x \\<noteq> y \\<Longrightarrow>\n    (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "case False"], ["proof (state)\nthis:\n  x \\<noteq> y\n\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. x \\<noteq> y \\<Longrightarrow>\n    (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "proof (induct \"g x\" arbitrary: g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "case (Suc n g)"], ["proof (state)\nthis:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "have hyp1: \"(f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)\" if k: \"k \\<in> A\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "proof (induct \"g y\" arbitrary: g)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g y \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "case 0"], ["proof (state)\nthis:\n  0 = g y\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g y \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "then"], ["proof (chain)\npicking this:\n  0 = g y", "show ?case"], ["proof (prove)\nusing this:\n  0 = g y\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "by simp"], ["proof (state)\nthis:\n  (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "case (Suc n g)"], ["proof (state)\nthis:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "define h where \"h z = g z - 1\" for z"], ["proof (state)\nthis:\n  h ?z = g ?z - 1\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "with Suc"], ["proof (chain)\npicking this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  h ?z = g ?z - 1", "have \"n = h y\""], ["proof (prove)\nusing this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  h ?z = g ?z - 1\n\ngoal (1 subgoal):\n 1. n = h y", "by simp"], ["proof (state)\nthis:\n  n = h y\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "with Suc"], ["proof (chain)\npicking this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  n = h y", "have hyp: \"(f y ^^ h y) (f x k) = f x ((f y ^^ h y) k)\""], ["proof (prove)\nusing this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  n = h y\n\ngoal (1 subgoal):\n 1. (f y ^^ h y) (f x k) = f x ((f y ^^ h y) k)", "by auto"], ["proof (state)\nthis:\n  (f y ^^ h y) (f x k) = f x ((f y ^^ h y) k)\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "from Suc h_def"], ["proof (chain)\npicking this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  h ?z = g ?z - 1", "have g: \"g y = Suc (h y)\""], ["proof (prove)\nusing this:\n  n = ?g y \\<Longrightarrow> (f y ^^ ?g y) (f x k) = f x ((f y ^^ ?g y) k)\n  Suc n = g y\n  h ?z = g ?z - 1\n\ngoal (1 subgoal):\n 1. g y = Suc (h y)", "by simp"], ["proof (state)\nthis:\n  g y = Suc (h y)\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "have \"((f y ^^ h y) k) \\<in> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f y ^^ h y) k \\<in> A", "using y k comp_fun_Pi[of h]"], ["proof (prove)\nusing this:\n  y \\<in> A\n  k \\<in> A\n  (\\<lambda>x. f x ^^ h x) \\<in> A \\<rightarrow> A \\<rightarrow> A\n\ngoal (1 subgoal):\n 1. (f y ^^ h y) k \\<in> A", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  y \\<in> A\n  k \\<in> A\n  (\\<lambda>x. f x ^^ h x)\n  \\<in> {f. \\<forall>x.\n               x \\<in> A \\<longrightarrow>\n               f x\n               \\<in> {f. \\<forall>x.\n                            x \\<in> A \\<longrightarrow> f x \\<in> A}}\n\ngoal (1 subgoal):\n 1. (f y ^^ h y) k \\<in> A", "by auto"], ["proof (state)\nthis:\n  (f y ^^ h y) k \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g y \\<Longrightarrow>\n                   (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k);\n        Suc xa = g y\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "then"], ["proof (chain)\npicking this:\n  (f y ^^ h y) k \\<in> A", "show ?case"], ["proof (prove)\nusing this:\n  (f y ^^ h y) k \\<in> A\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)", "by (simp add: comp_assoc g hyp) (auto simp add: o_assoc comp_fun_commute_restrict x y k)"], ["proof (state)\nthis:\n  (f y ^^ g y) (f x k) = f x ((f y ^^ g y) k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?k \\<in> A \\<Longrightarrow> (f y ^^ g y) (f x ?k) = f x ((f y ^^ g y) ?k)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "define h where \"h a = (if a = x then g x - 1 else g a)\" for a"], ["proof (state)\nthis:\n  h ?a = (if ?a = x then g x - 1 else g ?a)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "with Suc"], ["proof (chain)\npicking this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  h ?a = (if ?a = x then g x - 1 else g ?a)", "have \"n = h x\""], ["proof (prove)\nusing this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  h ?a = (if ?a = x then g x - 1 else g ?a)\n\ngoal (1 subgoal):\n 1. n = h x", "by simp"], ["proof (state)\nthis:\n  n = h x\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "with Suc"], ["proof (chain)\npicking this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  n = h x", "have \"(f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)\""], ["proof (prove)\nusing this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  n = h x\n\ngoal (1 subgoal):\n 1. (f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)", "by auto"], ["proof (state)\nthis:\n  (f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "with False"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  (f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)", "have Suc2: \"(f x ^^ h x) ((f y ^^ g y) z) = (f y ^^ g y) ((f x ^^ h x) z)\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  (f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)\n\ngoal (1 subgoal):\n 1. (f x ^^ h x) ((f y ^^ g y) z) = (f y ^^ g y) ((f x ^^ h x) z)", "using h_def"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  (f y ^^ h y) ((f x ^^ h x) z) = (f x ^^ h x) ((f y ^^ h y) z)\n  h ?a = (if ?a = x then g x - 1 else g ?a)\n\ngoal (1 subgoal):\n 1. (f x ^^ h x) ((f y ^^ g y) z) = (f y ^^ g y) ((f x ^^ h x) z)", "by auto"], ["proof (state)\nthis:\n  (f x ^^ h x) ((f y ^^ g y) z) = (f y ^^ g y) ((f x ^^ h x) z)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "from Suc h_def"], ["proof (chain)\npicking this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  h ?a = (if ?a = x then g x - 1 else g ?a)", "have g: \"g x = Suc (h x)\""], ["proof (prove)\nusing this:\n  n = ?g x \\<Longrightarrow>\n  (f y ^^ ?g y) ((f x ^^ ?g x) z) = (f x ^^ ?g x) ((f y ^^ ?g y) z)\n  Suc n = g x\n  h ?a = (if ?a = x then g x - 1 else g ?a)\n\ngoal (1 subgoal):\n 1. g x = Suc (h x)", "by simp"], ["proof (state)\nthis:\n  g x = Suc (h x)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "have \"(f x ^^ h x) z \\<in>A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x ^^ h x) z \\<in> A", "using comp_fun_Pi[of h] x z"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x ^^ h x) \\<in> A \\<rightarrow> A \\<rightarrow> A\n  x \\<in> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ h x) z \\<in> A", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. f x ^^ h x)\n  \\<in> {f. \\<forall>x.\n               x \\<in> A \\<longrightarrow>\n               f x\n               \\<in> {f. \\<forall>x.\n                            x \\<in> A \\<longrightarrow> f x \\<in> A}}\n  x \\<in> A\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. (f x ^^ h x) z \\<in> A", "by auto"], ["proof (state)\nthis:\n  (f x ^^ h x) z \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "hence *: \"(f y ^^ g y) (f x ((f x ^^ h x) z)) = f x ((f y ^^ g y) ((f x ^^ h x) z))\""], ["proof (prove)\nusing this:\n  (f x ^^ h x) z \\<in> A\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) (f x ((f x ^^ h x) z)) =\n    f x ((f y ^^ g y) ((f x ^^ h x) z))", "using hyp1"], ["proof (prove)\nusing this:\n  (f x ^^ h x) z \\<in> A\n  ?k \\<in> A \\<Longrightarrow> (f y ^^ g y) (f x ?k) = f x ((f y ^^ g y) ?k)\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) (f x ((f x ^^ h x) z)) =\n    f x ((f y ^^ g y) ((f x ^^ h x) z))", "by auto"], ["proof (state)\nthis:\n  (f y ^^ g y) (f x ((f x ^^ h x) z)) = f x ((f y ^^ g y) ((f x ^^ h x) z))\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n 2. \\<And>xa g.\n       \\<lbrakk>\\<And>g.\n                   xa = g x \\<Longrightarrow>\n                   (f y ^^ g y) ((f x ^^ g x) z) =\n                   (f x ^^ g x) ((f y ^^ g y) z);\n        Suc xa = g x\\<rbrakk>\n       \\<Longrightarrow> (f y ^^ g y) ((f x ^^ g x) z) =\n                         (f x ^^ g x) ((f y ^^ g y) z)", "thus ?case"], ["proof (prove)\nusing this:\n  (f y ^^ g y) (f x ((f x ^^ h x) z)) = f x ((f y ^^ g y) ((f x ^^ h x) z))\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "using g Suc2"], ["proof (prove)\nusing this:\n  (f y ^^ g y) (f x ((f x ^^ h x) z)) = f x ((f y ^^ g y) ((f x ^^ h x) z))\n  g x = Suc (h x)\n  (f x ^^ h x) ((f y ^^ g y) z) = (f y ^^ g y) ((f x ^^ h x) z)\n\ngoal (1 subgoal):\n 1. (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "by auto"], ["proof (state)\nthis:\n  (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n\ngoal (1 subgoal):\n 1. \\<And>g.\n       0 = g x \\<Longrightarrow>\n       (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "qed simp"], ["proof (state)\nthis:\n  (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow>\n    (f y ^^ g y) ((f x ^^ g x) z) = (f x ^^ g x) ((f y ^^ g y) z)", "qed simp"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A; ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f ?y ^^ g ?y) ((f ?x ^^ g ?x) ?z) =\n                    (f ?x ^^ g ?x) ((f ?y ^^ g ?y) ?z)\n\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> A; ?y \\<in> A; ?z \\<in> A\\<rbrakk>\n  \\<Longrightarrow> (f ?y ^^ g ?y) ((f ?x ^^ g ?x) ?z) =\n                    (f ?x ^^ g ?x) ((f ?y ^^ g ?y) ?z)\n\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A", "by (auto simp add: comp_fun_commute_on_def comp_fun_Pi o_def)"], ["proof (state)\nthis:\n  comp_fun_commute_on (\\<lambda>x. f x ^^ g x) A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This lemma is a generalization of thm comp_fun_commute.fold_mset_add_mset*)"], ["", "lemma fold_mset_add_mset: \n  assumes MA: \"set_mset M \\<subseteq> A\" and s: \"s \\<in> A\" and x: \"x \\<in> A\"\n  shows \"fold_mset f s (add_mset x M) = f x (fold_mset f s M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "interpret mset: comp_fun_commute_on \"\\<lambda>y. f y ^^ count M y\" A"], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>y. f y ^^ count M y) A", "by (fact comp_fun_commute_funpow)"], ["proof (state)\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "interpret mset_union: comp_fun_commute_on \"\\<lambda>y. f y ^^ count (add_mset x M) y\" A"], ["proof (prove)\ngoal (1 subgoal):\n 1. comp_fun_commute_on (\\<lambda>y. f y ^^ count (add_mset x M) y) A", "by (fact comp_fun_commute_funpow)"], ["proof (state)\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "proof (cases \"x \\<in> set_mset M\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n 2. x \\<notin># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "case False"], ["proof (state)\nthis:\n  x \\<notin># M\n\ngoal (2 subgoals):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n 2. x \\<notin># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "then"], ["proof (chain)\npicking this:\n  x \\<notin># M", "have *: \"count (add_mset x M) x = 1\""], ["proof (prove)\nusing this:\n  x \\<notin># M\n\ngoal (1 subgoal):\n 1. count (add_mset x M) x = 1", "by (simp add: not_in_iff)"], ["proof (state)\nthis:\n  count (add_mset x M) x = 1\n\ngoal (2 subgoals):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n 2. x \\<notin># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "have \"Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s (set_mset M) =\n      Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s (set_mset M)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s\n     (set_mset M) =\n    Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s (set_mset M)", "by (rule fold_cong[of _ A], auto simp add: assms False comp_fun_commute_funpow)"], ["proof (state)\nthis:\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s\n   (set_mset M) =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s (set_mset M)\n\ngoal (2 subgoals):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n 2. x \\<notin># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "with False * s MA x"], ["proof (chain)\npicking this:\n  x \\<notin># M\n  count (add_mset x M) x = 1\n  s \\<in> A\n  set_mset M \\<subseteq> A\n  x \\<in> A\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s\n   (set_mset M) =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s (set_mset M)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin># M\n  count (add_mset x M) x = 1\n  s \\<in> A\n  set_mset M \\<subseteq> A\n  x \\<in> A\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s\n   (set_mset M) =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s (set_mset M)\n\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "by (simp add: fold_mset_def del: count_add_mset)"], ["proof (state)\nthis:\n  fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "case True"], ["proof (state)\nthis:\n  x \\<in># M\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "let ?f = \"(\\<lambda>xa. f xa ^^ count (add_mset x M) xa)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "let ?f2 = \"(\\<lambda>x. f x ^^ count M x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "define N where \"N = set_mset M - {x}\""], ["proof (state)\nthis:\n  N = set_mset M - {x}\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "have F: \"Finite_Set.fold ?f s (insert x N) = ?f x (Finite_Set.fold ?f s N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold (\\<lambda>xa. f xa ^^ count (add_mset x M) xa) s\n     (insert x N) =\n    (f x ^^ count (add_mset x M) x)\n     (Finite_Set.fold (\\<lambda>xa. f xa ^^ count (add_mset x M) xa) s N)", "by (rule mset_union.fold_insert, auto simp add: assms N_def)"], ["proof (state)\nthis:\n  Finite_Set.fold (\\<lambda>xa. f xa ^^ count (add_mset x M) xa) s\n   (insert x N) =\n  (f x ^^ count (add_mset x M) x)\n   (Finite_Set.fold (\\<lambda>xa. f xa ^^ count (add_mset x M) xa) s N)\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "have F2: \"Finite_Set.fold ?f2 s (insert x N) = ?f2 x (Finite_Set.fold ?f2 s N)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Finite_Set.fold (\\<lambda>x. f x ^^ count M x) s (insert x N) =\n    (f x ^^ count M x) (Finite_Set.fold (\\<lambda>x. f x ^^ count M x) s N)", "by (rule mset.fold_insert, auto simp add: assms N_def)"], ["proof (state)\nthis:\n  Finite_Set.fold (\\<lambda>x. f x ^^ count M x) s (insert x N) =\n  (f x ^^ count M x) (Finite_Set.fold (\\<lambda>x. f x ^^ count M x) s N)\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "from N_def True"], ["proof (chain)\npicking this:\n  N = set_mset M - {x}\n  x \\<in># M", "have *: \"set_mset M = insert x N\" \"x \\<notin> N\" \"finite N\""], ["proof (prove)\nusing this:\n  N = set_mset M - {x}\n  x \\<in># M\n\ngoal (1 subgoal):\n 1. set_mset M = insert x N &&& x \\<notin> N &&& finite N", "by auto"], ["proof (state)\nthis:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "then"], ["proof (chain)\npicking this:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N", "have \"Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n      Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N\""], ["proof (prove)\nusing this:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N\n\ngoal (1 subgoal):\n 1. Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n    Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N", "using MA N_def s"], ["proof (prove)\nusing this:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N\n  set_mset M \\<subseteq> A\n  N = set_mset M - {x}\n  s \\<in> A\n\ngoal (1 subgoal):\n 1. Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n    Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N", "by (auto intro!: fold_cong comp_fun_commute_funpow)"], ["proof (state)\nthis:\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N\n\ngoal (1 subgoal):\n 1. x \\<in># M \\<Longrightarrow>\n    fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "with *"], ["proof (chain)\npicking this:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N", "show ?thesis"], ["proof (prove)\nusing this:\n  set_mset M = insert x N\n  x \\<notin> N\n  finite N\n  Finite_Set.fold (\\<lambda>y. f y ^^ count (add_mset x M) y) s N =\n  Finite_Set.fold (\\<lambda>y. f y ^^ count M y) s N\n\ngoal (1 subgoal):\n 1. fold_mset f s (add_mset x M) = f x (fold_mset f s M)", "by (simp add: fold_mset_def del: count_add_mset, unfold F F2, auto)"], ["proof (state)\nthis:\n  fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fold_mset f s (add_mset x M) = f x (fold_mset f s M)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(**** End of the lemmas that could be moved to HOL/Finite_Set.thy  ****)"], ["", "lemma Diff_not_in: \"a \\<notin> A - {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> A - {a}", "by auto"], ["", "context abelian_group begin"], ["", "lemma finsum_restrict:\n  assumes fA: \"f : A \\<rightarrow> carrier G\"\n      and restr: \"restrict f A = restrict g A\"\n  shows \"finsum G f A = finsum G g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum G f A = finsum G g A", "proof (rule finsum_cong';rule?)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "assume a: \"a : A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "have \"f a = restrict f A a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a = restrict f A a", "using a"], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. f a = restrict f A a", "by simp"], ["proof (state)\nthis:\n  f a = restrict f A a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "also"], ["proof (state)\nthis:\n  f a = restrict f A a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "have \"... = restrict g A a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict f A a = restrict g A a", "using restr"], ["proof (prove)\nusing this:\n  restrict f A = restrict g A\n\ngoal (1 subgoal):\n 1. restrict f A a = restrict g A a", "by simp"], ["proof (state)\nthis:\n  restrict f A a = restrict g A a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "also"], ["proof (state)\nthis:\n  restrict f A a = restrict g A a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "have \"... = g a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict g A a = g a", "using a"], ["proof (prove)\nusing this:\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. restrict g A a = g a", "by simp"], ["proof (state)\nthis:\n  restrict g A a = g a\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> f i = g i", "finally"], ["proof (chain)\npicking this:\n  f a = g a", "show \"f a = g a\""], ["proof (prove)\nusing this:\n  f a = g a\n\ngoal (1 subgoal):\n 1. f a = g a", "."], ["proof (state)\nthis:\n  f a = g a\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> A \\<Longrightarrow> g x \\<in> carrier G", "thus \"g a : carrier G\""], ["proof (prove)\nusing this:\n  f a = g a\n\ngoal (1 subgoal):\n 1. g a \\<in> carrier G", "using fA a"], ["proof (prove)\nusing this:\n  f a = g a\n  f \\<in> A \\<rightarrow> carrier G\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. g a \\<in> carrier G", "by force"], ["proof (state)\nthis:\n  g a \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma minus_nonzero: \"x : carrier G \\<Longrightarrow> x \\<noteq> \\<zero> \\<Longrightarrow> \\<ominus> x \\<noteq> \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier G; x \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> \\<ominus> x \\<noteq> \\<zero>", "using r_neg"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier G \\<Longrightarrow> ?x \\<oplus> \\<ominus> ?x = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> carrier G; x \\<noteq> \\<zero>\\<rbrakk>\n    \\<Longrightarrow> \\<ominus> x \\<noteq> \\<zero>", "by force"], ["", "end"], ["", "lemma (in ordered_comm_monoid_add) positive_sum:\n  assumes X : \"finite X\"\n      and \"f : X \\<rightarrow> { y :: 'a. y \\<ge> 0 }\"\n  shows \"sum f X \\<ge> 0 \\<and> (sum f X = 0 \\<longrightarrow> f ` X \\<subseteq> {0})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f X \\<and>\n    (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})", "using assms"], ["proof (prove)\nusing this:\n  finite X\n  f \\<in> X \\<rightarrow> {y. (0::'a) \\<le> y}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f X \\<and>\n    (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})", "proof (induct set:finite)"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "case (insert x X)"], ["proof (state)\nthis:\n  finite X\n  x \\<notin> X\n  f \\<in> X \\<rightarrow> {a. (0::'a) \\<le> a} \\<Longrightarrow>\n  (0::'a) \\<le> sum f X \\<and>\n  (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})\n  f \\<in> insert x X \\<rightarrow> {a. (0::'a) \\<le> a}\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "hence x0: \"f x \\<ge> 0\" and sum0: \"sum f X \\<ge> 0\""], ["proof (prove)\nusing this:\n  finite X\n  x \\<notin> X\n  f \\<in> X \\<rightarrow> {a. (0::'a) \\<le> a} \\<Longrightarrow>\n  (0::'a) \\<le> sum f X \\<and>\n  (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})\n  f \\<in> insert x X \\<rightarrow> {a. (0::'a) \\<le> a}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> f x &&& (0::'a) \\<le> sum f X", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> f x\n  (0::'a) \\<le> sum f X\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "hence \"sum f (insert x X) \\<ge> 0\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> f x\n  (0::'a) \\<le> sum f X\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f (insert x X)", "using insert"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> f x\n  (0::'a) \\<le> sum f X\n  finite X\n  x \\<notin> X\n  f \\<in> X \\<rightarrow> {a. (0::'a) \\<le> a} \\<Longrightarrow>\n  (0::'a) \\<le> sum f X \\<and>\n  (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})\n  f \\<in> insert x X \\<rightarrow> {a. (0::'a) \\<le> a}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f (insert x X)", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum f (insert x X)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "moreover"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum f (insert x X)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "{"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum f (insert x X)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "assume \"sum f (insert x X) = 0\""], ["proof (state)\nthis:\n  sum f (insert x X) = (0::'a)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "hence \"f x = 0\" \"sum f X = 0\""], ["proof (prove)\nusing this:\n  sum f (insert x X) = (0::'a)\n\ngoal (1 subgoal):\n 1. f x = (0::'a) &&& sum f X = (0::'a)", "using sum0 x0 insert add_nonneg_eq_0_iff"], ["proof (prove)\nusing this:\n  sum f (insert x X) = (0::'a)\n  (0::'a) \\<le> sum f X\n  (0::'a) \\<le> f x\n  finite X\n  x \\<notin> X\n  f \\<in> X \\<rightarrow> {a. (0::'a) \\<le> a} \\<Longrightarrow>\n  (0::'a) \\<le> sum f X \\<and>\n  (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})\n  f \\<in> insert x X \\<rightarrow> {a. (0::'a) \\<le> a}\n  \\<lbrakk>(0::'a) \\<le> ?x; (0::'a) \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> (?x + ?y = (0::'a)) = (?x = (0::'a) \\<and> ?y = (0::'a))\n\ngoal (1 subgoal):\n 1. f x = (0::'a) &&& sum f X = (0::'a)", "by auto"], ["proof (state)\nthis:\n  f x = (0::'a)\n  sum f X = (0::'a)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "}"], ["proof (state)\nthis:\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> f x = (0::'a)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> sum f X = (0::'a)\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n        (0::'a) \\<le> sum f F \\<and>\n        (sum f F = (0::'a) \\<longrightarrow> f ` F \\<subseteq> {0::'a});\n        f \\<in> insert x F \\<rightarrow> Collect ((\\<le>) (0::'a))\\<rbrakk>\n       \\<Longrightarrow> (0::'a) \\<le> sum f (insert x F) \\<and>\n                         (sum f (insert x F) = (0::'a) \\<longrightarrow>\n                          f ` insert x F \\<subseteq> {0::'a})", "ultimately"], ["proof (chain)\npicking this:\n  (0::'a) \\<le> sum f (insert x X)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> f x = (0::'a)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> sum f X = (0::'a)", "show ?case"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> sum f (insert x X)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> f x = (0::'a)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> sum f X = (0::'a)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f (insert x X) \\<and>\n    (sum f (insert x X) = (0::'a) \\<longrightarrow>\n     f ` insert x X \\<subseteq> {0::'a})", "using insert"], ["proof (prove)\nusing this:\n  (0::'a) \\<le> sum f (insert x X)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> f x = (0::'a)\n  sum f (insert x X) = (0::'a) \\<Longrightarrow> sum f X = (0::'a)\n  finite X\n  x \\<notin> X\n  f \\<in> X \\<rightarrow> {a. (0::'a) \\<le> a} \\<Longrightarrow>\n  (0::'a) \\<le> sum f X \\<and>\n  (sum f X = (0::'a) \\<longrightarrow> f ` X \\<subseteq> {0::'a})\n  f \\<in> insert x X \\<rightarrow> {a. (0::'a) \\<le> a}\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> sum f (insert x X) \\<and>\n    (sum f (insert x X) = (0::'a) \\<longrightarrow>\n     f ` insert x X \\<subseteq> {0::'a})", "by blast"], ["proof (state)\nthis:\n  (0::'a) \\<le> sum f (insert x X) \\<and>\n  (sum f (insert x X) = (0::'a) \\<longrightarrow>\n   f ` insert x X \\<subseteq> {0::'a})\n\ngoal (1 subgoal):\n 1. f \\<in> {} \\<rightarrow> Collect ((\\<le>) (0::'a)) \\<Longrightarrow>\n    (0::'a) \\<le> sum f {} \\<and>\n    (sum f {} = (0::'a) \\<longrightarrow> f ` {} \\<subseteq> {0::'a})", "qed auto"], ["", "lemma insert_union: \"insert x X = X \\<union> {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x X = X \\<union> {x}", "by auto"], ["", "context vectorspace begin"], ["", "lemmas lincomb_insert2 = lincomb_insert[unfolded insert_union[symmetric]]"], ["", "lemma lincomb_restrict:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and a: \"a : U \\<rightarrow> carrier K\"\n      and restr: \"restrict a U = restrict b U\"\n  shows \"lincomb a U = lincomb b U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "let ?f = \"\\<lambda>a u. a u \\<odot>\\<^bsub>V\\<^esub> u\""], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "have fa: \"?f a : U \\<rightarrow> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u. a u \\<odot>\\<^bsub>V\\<^esub> u)\n    \\<in> U \\<rightarrow> carrier V", "using a U"], ["proof (prove)\nusing this:\n  a \\<in> U \\<rightarrow> carrier K\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. a u \\<odot>\\<^bsub>V\\<^esub> u)\n    \\<in> U \\<rightarrow> carrier V", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>u. a u \\<odot>\\<^bsub>V\\<^esub> u)\n  \\<in> U \\<rightarrow> carrier V\n\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "have \"restrict (?f a) U = restrict (?f b) U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n    (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) x =\n       (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u) x", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) x =\n       (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u) x", "have \"u : U \\<Longrightarrow> a u = b u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> U \\<Longrightarrow> a u = b u", "using restr"], ["proof (prove)\nusing this:\n  restrict a U = restrict b U\n\ngoal (1 subgoal):\n 1. u \\<in> U \\<Longrightarrow> a u = b u", "unfolding restrict_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. if x \\<in> U then a x else undefined) =\n  (\\<lambda>x. if x \\<in> U then b x else undefined)\n\ngoal (1 subgoal):\n 1. u \\<in> U \\<Longrightarrow> a u = b u", "by metis"], ["proof (state)\nthis:\n  u \\<in> U \\<Longrightarrow> a u = b u\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) x =\n       (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u) x", "thus \"restrict (?f a) U u = restrict (?f b) U u\""], ["proof (prove)\nusing this:\n  u \\<in> U \\<Longrightarrow> a u = b u\n\ngoal (1 subgoal):\n 1. (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) u =\n    (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u) u", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) u =\n  (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u) u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u)\n\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u)\n\ngoal (1 subgoal):\n 1. lincomb a U = lincomb b U", "unfolding lincomb_def"], ["proof (prove)\nusing this:\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u)\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. b v \\<odot>\\<^bsub>V\\<^esub> v)", "using finsum_restrict[OF fa]"], ["proof (prove)\nusing this:\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  (\\<lambda>u\\<in>U. b u \\<odot>\\<^bsub>V\\<^esub> u)\n  (\\<lambda>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  restrict ?g U \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>u\\<in>U. a u \\<odot>\\<^bsub>V\\<^esub> u) =\n  finsum V ?g U\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. b v \\<odot>\\<^bsub>V\\<^esub> v)", "by auto"], ["proof (state)\nthis:\n  lincomb a U = lincomb b U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lindep_span:\n  assumes U: \"U \\<subseteq> carrier V\" and finU: \"finite U\"\n  shows \"lin_dep U = (\\<exists>u \\<in> U. u \\<in> span (U - {u}))\" (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep U = (\\<exists>u\\<in>U. u \\<in> span (U - {u}))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. lin_dep U \\<Longrightarrow> \\<exists>u\\<in>U. u \\<in> span (U - {u})\n 2. \\<exists>u\\<in>U. u \\<in> span (U - {u}) \\<Longrightarrow> lin_dep U", "assume l: \"?l\""], ["proof (state)\nthis:\n  lin_dep U\n\ngoal (2 subgoals):\n 1. lin_dep U \\<Longrightarrow> \\<exists>u\\<in>U. u \\<in> span (U - {u})\n 2. \\<exists>u\\<in>U. u \\<in> span (U - {u}) \\<Longrightarrow> lin_dep U", "show \"?r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "from l[unfolded lin_dep_def]"], ["proof (chain)\npicking this:\n  \\<exists>A a v.\n     finite A \\<and>\n     A \\<subseteq> U \\<and>\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "obtain A a u\n    where finA: \"finite A\"\n      and AU: \"A \\<subseteq> U\"\n      and aA: \"a : A \\<rightarrow> carrier K\"\n      and aA0: \"lincomb a A = zero V\"\n      and uA: \"u:A\"\n      and au0: \"a u \\<noteq> zero K\""], ["proof (prove)\nusing this:\n  \\<exists>A a v.\n     finite A \\<and>\n     A \\<subseteq> U \\<and>\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<And>A a u.\n        \\<lbrakk>finite A; A \\<subseteq> U;\n         a \\<in> A \\<rightarrow> carrier K;\n         lincomb a A = \\<zero>\\<^bsub>V\\<^esub>; u \\<in> A;\n         a u \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n  lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n  u \\<in> A\n  a u \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "define a' where \"a' = (\\<lambda>v. (if v : A then a v else zero K))\""], ["proof (state)\nthis:\n  a' = (\\<lambda>v. if v \\<in> A then a v else \\<zero>\\<^bsub>K\\<^esub>)\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have a'U: \"a' : U \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' \\<in> U \\<rightarrow> carrier K", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. if v \\<in> A then a v else \\<zero>\\<^bsub>K\\<^esub>)\n    \\<in> U \\<rightarrow> carrier K", "using aA"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. if v \\<in> A then a v else \\<zero>\\<^bsub>K\\<^esub>)\n    \\<in> U \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a' \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have uU: \"u : U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> U", "using uA AU"], ["proof (prove)\nusing this:\n  u \\<in> A\n  A \\<subseteq> U\n\ngoal (1 subgoal):\n 1. u \\<in> U", "by auto"], ["proof (state)\nthis:\n  u \\<in> U\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have a'u0: \"a' u \\<noteq> zero K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' u \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if u \\<in> A then a u else \\<zero>\\<^bsub>K\\<^esub>) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "using au0 uA"], ["proof (prove)\nusing this:\n  a u \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  u \\<in> A\n\ngoal (1 subgoal):\n 1. (if u \\<in> A then a u else \\<zero>\\<^bsub>K\\<^esub>) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a' u \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "define B where \"B = U - A\""], ["proof (state)\nthis:\n  B = U - A\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have B: \"B \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. U - A \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. U - A \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have UAB: \"U = A \\<union> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = A \\<union> B", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. U = A \\<union> (U - A)", "using AU"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\n\ngoal (1 subgoal):\n 1. U = A \\<union> (U - A)", "by auto"], ["proof (state)\nthis:\n  U = A \\<union> B\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have finB: \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "using finU B_def"], ["proof (prove)\nusing this:\n  finite U\n  B = U - A\n\ngoal (1 subgoal):\n 1. finite B", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have AB: \"A \\<inter> B = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> B = {}", "unfolding B_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> (U - A) = {}", "by auto"], ["proof (state)\nthis:\n  A \\<inter> B = {}\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "let ?f = \"\\<lambda>v. a v \\<odot>\\<^bsub>V\\<^esub> v\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have fA: \"?f : A \\<rightarrow> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. a v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> A \\<rightarrow> carrier V", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. a v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> A \\<rightarrow> carrier V", "using aA AU U"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n  A \\<subseteq> U\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. a v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> A \\<rightarrow> carrier V", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v. a v \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<in> A \\<rightarrow> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "let ?f' = \"\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have \"restrict ?f A = restrict ?f' A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<lambda>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v)", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<lambda>v\\<in>A.\n        (if v \\<in> A then a v\n         else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n        v)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n  (\\<lambda>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "hence finsum: \"finsum V ?f' A = finsum V ?f A\""], ["proof (prove)\nusing this:\n  (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n  (\\<lambda>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v)", "using finsum_restrict[OF fA]"], ["proof (prove)\nusing this:\n  (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n  (\\<lambda>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n  (\\<lambda>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n  restrict ?g A \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n  finsum V ?g A\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v)", "by simp"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub> v)\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have f'A: \"?f' : A \\<rightarrow> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> A \\<rightarrow> carrier V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "assume xA: \"x \\<in> A\""], ["proof (state)\nthis:\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "show \"?f' x : carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x \\<in> A then a x\n     else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n    x\n    \\<in> carrier V", "using aA xA AU U"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n  x \\<in> A\n  A \\<subseteq> U\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then a x\n     else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n    x\n    \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<in> A \\<rightarrow> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have f'B: \"?f' : B \\<rightarrow> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> B \\<rightarrow> carrier V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "assume xB: \"x : B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "have \"x \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<notin> A", "using a'U xB"], ["proof (prove)\nusing this:\n  a' \\<in> U \\<rightarrow> carrier K\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "unfolding B_def"], ["proof (prove)\nusing this:\n  a' \\<in> U \\<rightarrow> carrier K\n  x \\<in> U - A\n\ngoal (1 subgoal):\n 1. x \\<notin> A", "by auto"], ["proof (state)\nthis:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B \\<Longrightarrow>\n       a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "thus \"?f' x : carrier V\""], ["proof (prove)\nusing this:\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "using xB B"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  x \\<in> B\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "unfolding a'_def"], ["proof (prove)\nusing this:\n  x \\<notin> A\n  x \\<in> B\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. (if x \\<in> A then a x\n     else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n    x\n    \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  a' x \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<in> B \\<rightarrow> carrier V\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have sumB0: \"finsum V ?f' B = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "fix B'"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "have \"finite B' \\<Longrightarrow> B' \\<subseteq> B \\<Longrightarrow> finsum V ?f' B' = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B'; B' \\<subseteq> B\\<rbrakk>\n    \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a'\n                     v \\<odot>\\<^bsub>V\\<^esub>\n                    v) =\n                      \\<zero>\\<^bsub>V\\<^esub>", "proof(induct set:finite)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "case (insert b B')"], ["proof (state)\nthis:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have finB': \"finite B'\" and bB': \"b \\<notin> B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B' &&& b \\<notin> B'", "using insert"], ["proof (prove)\nusing this:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n\ngoal (1 subgoal):\n 1. finite B' &&& b \\<notin> B'", "by auto"], ["proof (state)\nthis:\n  finite B'\n  b \\<notin> B'\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have f'B': \"?f' : B' \\<rightarrow> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> B' \\<rightarrow> carrier V", "using f'B insert"], ["proof (prove)\nusing this:\n  (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<in> B \\<rightarrow> carrier V\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n    \\<in> B' \\<rightarrow> carrier V", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v. a' v \\<odot>\\<^bsub>V\\<^esub> v)\n  \\<in> B' \\<rightarrow> carrier V\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have bA: \"b \\<notin> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<notin> A", "using insert"], ["proof (prove)\nusing this:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n\ngoal (1 subgoal):\n 1. b \\<notin> A", "unfolding B_def"], ["proof (prove)\nusing this:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> U - A \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> U - A\n\ngoal (1 subgoal):\n 1. b \\<notin> A", "by auto"], ["proof (state)\nthis:\n  b \\<notin> A\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have b: \"b : carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> carrier V", "using insert B"], ["proof (prove)\nusing this:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. b \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  b \\<in> carrier V\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have foo: \"a' b \\<odot>\\<^bsub>V\\<^esub> b \\<in> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' b \\<odot>\\<^bsub>V\\<^esub> b \\<in> carrier V", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if b \\<in> A then a b\n     else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n    b\n    \\<in> carrier V", "using bA b"], ["proof (prove)\nusing this:\n  b \\<notin> A\n  b \\<in> carrier V\n\ngoal (1 subgoal):\n 1. (if b \\<in> A then a b\n     else \\<zero>\\<^bsub>K\\<^esub>) \\<odot>\\<^bsub>V\\<^esub>\n    b\n    \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  a' b \\<odot>\\<^bsub>V\\<^esub> b \\<in> carrier V\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "have IH: \"finsum V ?f' B' = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "using insert"], ["proof (prove)\nusing this:\n  finite B'\n  b \\<notin> B'\n  B' \\<subseteq> B \\<Longrightarrow>\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  insert b B' \\<subseteq> B\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (2 subgoals):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<subseteq> B \\<Longrightarrow>\n        (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>F. a' v \\<odot>\\<^bsub>V\\<^esub>\n     v) =\n        \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> B\\<rbrakk>\n       \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert x\n                    F. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n                         \\<zero>\\<^bsub>V\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert b\n                                     B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "unfolding finsum_insert[OF finB' bB' f'B' foo]"], ["proof (prove)\ngoal (1 subgoal):\n 1. a' b \\<odot>\\<^bsub>V\\<^esub> b \\<oplus>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>a\\<in>B'. a' a \\<odot>\\<^bsub>V\\<^esub> a) =\n    \\<zero>\\<^bsub>V\\<^esub>", "using IH a'_def bA b"], ["proof (prove)\nusing this:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n  a' = (\\<lambda>v. if v \\<in> A then a v else \\<zero>\\<^bsub>K\\<^esub>)\n  b \\<notin> A\n  b \\<in> carrier V\n\ngoal (1 subgoal):\n 1. a' b \\<odot>\\<^bsub>V\\<^esub> b \\<oplus>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>a\\<in>B'. a' a \\<odot>\\<^bsub>V\\<^esub> a) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>insert b\n                                   B'. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. {} \\<subseteq> B \\<Longrightarrow>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "qed auto"], ["proof (state)\nthis:\n  \\<lbrakk>finite B'; B' \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B'. a'\n                   v \\<odot>\\<^bsub>V\\<^esub>\n                  v) =\n                    \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "}"], ["proof (state)\nthis:\n  \\<lbrakk>finite ?B'3; ?B'3 \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>?B'3. a'\n                     v \\<odot>\\<^bsub>V\\<^esub>\n                    v) =\n                    \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B'3; ?B'3 \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>?B'3. a'\n                     v \\<odot>\\<^bsub>V\\<^esub>\n                    v) =\n                    \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "using finB"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?B'3; ?B'3 \\<subseteq> B\\<rbrakk>\n  \\<Longrightarrow> (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>?B'3. a'\n                     v \\<odot>\\<^bsub>V\\<^esub>\n                    v) =\n                    \\<zero>\\<^bsub>V\\<^esub>\n  finite B\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have a'A0: \"lincomb a' U = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a' U = \\<zero>\\<^bsub>V\\<^esub>", "unfolding UAB"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a' (A \\<union> B) = \\<zero>\\<^bsub>V\\<^esub>", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A \\<union>\n                                    B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "unfolding finsum_Un_disjoint[OF finA finB AB f'A f'B]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a' v \\<odot>\\<^bsub>V\\<^esub>\n v) \\<oplus>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "unfolding finsum"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub>\n v) \\<oplus>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "unfolding aA0[unfolded lincomb_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>B. a' v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "unfolding sumB0"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n    \\<zero>\\<^bsub>V\\<^esub> =\n    \\<zero>\\<^bsub>V\\<^esub>", "by simp"], ["proof (state)\nthis:\n  lincomb a' U = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have uU: \"u:U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> U", "using uA AU"], ["proof (prove)\nusing this:\n  u \\<in> A\n  A \\<subseteq> U\n\ngoal (1 subgoal):\n 1. u \\<in> U", "by auto"], ["proof (state)\nthis:\n  u \\<in> U\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "moreover"], ["proof (state)\nthis:\n  u \\<in> U\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "have \"u : span (U - {u})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> span (U - {u})", "using lincomb_isolate(2)[OF finU U a'U uU a'u0 a'A0]"], ["proof (prove)\nusing this:\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. u \\<in> span (U - {u})", "."], ["proof (state)\nthis:\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "ultimately"], ["proof (chain)\npicking this:\n  u \\<in> U\n  u \\<in> span (U - {u})", "show ?r"], ["proof (prove)\nusing this:\n  u \\<in> U\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u})", "by auto"], ["proof (state)\nthis:\n  \\<exists>u\\<in>U. u \\<in> span (U - {u})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u\\<in>U. u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u}) \\<Longrightarrow> lin_dep U", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u}) \\<Longrightarrow> lin_dep U", "assume r: \"?r\""], ["proof (state)\nthis:\n  \\<exists>u\\<in>U. u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. \\<exists>u\\<in>U. u \\<in> span (U - {u}) \\<Longrightarrow> lin_dep U", "show \"?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep U", "from r"], ["proof (chain)\npicking this:\n  \\<exists>u\\<in>U. u \\<in> span (U - {u})", "obtain u where uU: \"u : U\" and uspan: \"u : span (U-{u})\""], ["proof (prove)\nusing this:\n  \\<exists>u\\<in>U. u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>u \\<in> U; u \\<in> span (U - {u})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> U\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. lin_dep U", "hence u: \"u : carrier V\""], ["proof (prove)\nusing this:\n  u \\<in> U\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. u \\<in> carrier V", "using U"], ["proof (prove)\nusing this:\n  u \\<in> U\n  u \\<in> span (U - {u})\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. u \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  u \\<in> carrier V\n\ngoal (1 subgoal):\n 1. lin_dep U", "have finUu: \"finite (U-{u})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (U - {u})", "using finU"], ["proof (prove)\nusing this:\n  finite U\n\ngoal (1 subgoal):\n 1. finite (U - {u})", "by auto"], ["proof (state)\nthis:\n  finite (U - {u})\n\ngoal (1 subgoal):\n 1. lin_dep U", "have Uu: \"U-{u} \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U - {u} \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. U - {u} \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  U - {u} \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. lin_dep U", "obtain a\n      where ulin: \"u = lincomb a (U-{u})\"\n        and a: \"a : U-{u} \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>u = lincomb a (U - {u});\n         a \\<in> U - {u} \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using uspan"], ["proof (prove)\nusing this:\n  u \\<in> span (U - {u})\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>u = lincomb a (U - {u});\n         a \\<in> U - {u} \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_span[OF finUu Uu]"], ["proof (prove)\nusing this:\n  u \\<in> {lincomb a (U - {u}) |a. a \\<in> U - {u} \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>u = lincomb a (U - {u});\n         a \\<in> U - {u} \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u = lincomb a (U - {u})\n  a \\<in> U - {u} \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lin_dep U", "show \"?l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep U", "unfolding lin_dep_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A a v.\n       finite A \\<and>\n       A \\<subseteq> U \\<and>\n       a \\<in> A \\<rightarrow> carrier K \\<and>\n       lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n       v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "proof(intro exI conjI)"], ["proof (state)\ngoal (6 subgoals):\n 1. finite ?A\n 2. ?A \\<subseteq> U\n 3. ?a1 \\<in> ?A \\<rightarrow> carrier K\n 4. lincomb ?a1 ?A = \\<zero>\\<^bsub>V\\<^esub>\n 5. ?v2 \\<in> ?A\n 6. ?a1 ?v2 \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "let ?a = \"\\<lambda>v. if v = u then \\<ominus>\\<^bsub>K\\<^esub> one K else a v\""], ["proof (state)\ngoal (6 subgoals):\n 1. finite ?A\n 2. ?A \\<subseteq> U\n 3. ?a1 \\<in> ?A \\<rightarrow> carrier K\n 4. lincomb ?a1 ?A = \\<zero>\\<^bsub>V\\<^esub>\n 5. ?v2 \\<in> ?A\n 6. ?a1 ?v2 \\<noteq> \\<zero>\\<^bsub>K\\<^esub>", "show \"?a : U \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a v)\n    \\<in> U \\<rightarrow> carrier K", "using a"], ["proof (prove)\nusing this:\n  a \\<in> U - {u} \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a v)\n    \\<in> U \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n  \\<in> U \\<rightarrow> carrier K\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "hence a': \"?a : U-{u}\\<union>{u} \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  (\\<lambda>v.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n  \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>v.\n        if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a v)\n    \\<in> U - {u} \\<union> {u} \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n  \\<in> U - {u} \\<union> {u} \\<rightarrow> carrier K\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"U = U-{u}\\<union>{u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U = U - {u} \\<union> {u}", "using uU"], ["proof (prove)\nusing this:\n  u \\<in> U\n\ngoal (1 subgoal):\n 1. U = U - {u} \\<union> {u}", "by auto"], ["proof (state)\nthis:\n  U = U - {u} \\<union> {u}\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "also"], ["proof (state)\nthis:\n  U = U - {u} \\<union> {u}\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"lincomb ?a ... = ?a u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb ?a (U-{u})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u} \\<union> {u}) =\n    (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a u) \\<odot>\\<^bsub>V\\<^esub>\n    u \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u})", "unfolding lincomb_insert[OF finUu Uu a' Diff_not_in u]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a u) \\<odot>\\<^bsub>V\\<^esub>\n    u \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u}) =\n    (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a u) \\<odot>\\<^bsub>V\\<^esub>\n    u \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u})", "by auto"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u} \\<union> {u}) =\n  (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a u) \\<odot>\\<^bsub>V\\<^esub>\n  u \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u})\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "also"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u} \\<union> {u}) =\n  (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a u) \\<odot>\\<^bsub>V\\<^esub>\n  u \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u})\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"restrict a (U-{u}) = restrict ?a (U-{u})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict a (U - {u}) =\n    (\\<lambda>v\\<in>U - {u}.\n        if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n        else a v)", "by auto"], ["proof (state)\nthis:\n  restrict a (U - {u}) =\n  (\\<lambda>v\\<in>U - {u}.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "hence \"lincomb ?a (U-{u}) = lincomb a (U-{u})\""], ["proof (prove)\nusing this:\n  restrict a (U - {u}) =\n  (\\<lambda>v\\<in>U - {u}.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u}) =\n    lincomb a (U - {u})", "using lincomb_restrict[OF Uu a]"], ["proof (prove)\nusing this:\n  restrict a (U - {u}) =\n  (\\<lambda>v\\<in>U - {u}.\n      if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n      else a v)\n  restrict a (U - {u}) = restrict ?b (U - {u}) \\<Longrightarrow>\n  lincomb a (U - {u}) = lincomb ?b (U - {u})\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     (U - {u}) =\n    lincomb a (U - {u})", "by auto"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u}) =\n  lincomb a (U - {u})\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "also"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   (U - {u}) =\n  lincomb a (U - {u})\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"?a u \\<odot>\\<^bsub>V\\<^esub> u = \\<ominus>\\<^bsub>V\\<^esub> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a u) \\<odot>\\<^bsub>V\\<^esub>\n    u =\n    \\<ominus>\\<^bsub>V\\<^esub> u", "using smult_minus_1[OF u]"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  u =\n  \\<ominus>\\<^bsub>V\\<^esub> u\n\ngoal (1 subgoal):\n 1. (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a u) \\<odot>\\<^bsub>V\\<^esub>\n    u =\n    \\<ominus>\\<^bsub>V\\<^esub> u", "by simp"], ["proof (state)\nthis:\n  (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a u) \\<odot>\\<^bsub>V\\<^esub>\n  u =\n  \\<ominus>\\<^bsub>V\\<^esub> u\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "also"], ["proof (state)\nthis:\n  (if u = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n   else a u) \\<odot>\\<^bsub>V\\<^esub>\n  u =\n  \\<ominus>\\<^bsub>V\\<^esub> u\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"lincomb a (U-{u}) = u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (U - {u}) = u", "using ulin"], ["proof (prove)\nusing this:\n  u = lincomb a (U - {u})\n\ngoal (1 subgoal):\n 1. lincomb a (U - {u}) = u", ".."], ["proof (state)\nthis:\n  lincomb a (U - {u}) = u\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "also"], ["proof (state)\nthis:\n  lincomb a (U - {u}) = u\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "have \"\\<ominus>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> u = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> u =\n    \\<zero>\\<^bsub>V\\<^esub>", "using l_neg[OF u]"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> u =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> u =\n    \\<zero>\\<^bsub>V\\<^esub>", "."], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> u =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (5 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>\n 4. ?v2 \\<in> U\n 5. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "finally"], ["proof (chain)\npicking this:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   U =\n  \\<zero>\\<^bsub>V\\<^esub>", "show \"lincomb ?a U = zero V\""], ["proof (prove)\nusing this:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   U =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n         else a v)\n     U =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       if v = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n       else a v)\n   U =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (4 subgoals):\n 1. finite U\n 2. U \\<subseteq> U\n 3. ?v2 \\<in> U\n 4. (if ?v2 = u then \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub>\n     else a ?v2) \\<noteq>\n    \\<zero>\\<^bsub>K\\<^esub>", "qed (insert uU finU, auto)"], ["proof (state)\nthis:\n  lin_dep U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lin_dep U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_lindepD:\n  assumes \"~ lin_dep S\"\n      and \"finite A\" \"A \\<subseteq> S\" \"f : A \\<rightarrow> carrier K\" \"lincomb f A = zero V\"\n    shows \"f : A \\<rightarrow> {zero K}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "using assms"], ["proof (prove)\nusing this:\n  lin_indpt S\n  finite A\n  A \\<subseteq> S\n  f \\<in> A \\<rightarrow> carrier K\n  lincomb f A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "unfolding lin_dep_def"], ["proof (prove)\nusing this:\n  \\<nexists>A a v.\n     finite A \\<and>\n     A \\<subseteq> S \\<and>\n     a \\<in> A \\<rightarrow> carrier K \\<and>\n     lincomb a A = \\<zero>\\<^bsub>V\\<^esub> \\<and>\n     v \\<in> A \\<and> a v \\<noteq> \\<zero>\\<^bsub>K\\<^esub>\n  finite A\n  A \\<subseteq> S\n  f \\<in> A \\<rightarrow> carrier K\n  lincomb f A = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. f \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "by blast"], ["", "lemma span_mem:\n  assumes E: \"E \\<subseteq> carrier V\" and uE: \"u : E\" shows \"u : span E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> span E", "unfolding span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> {lincomb a A |a A.\n             finite A \\<and>\n             A \\<subseteq> E \\<and> a \\<in> A \\<rightarrow> carrier K}", "proof (rule,intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. u = lincomb ?a2 ?A3\n 2. finite ?A3\n 3. ?A3 \\<subseteq> E\n 4. ?a2 \\<in> ?A3 \\<rightarrow> carrier K", "show \"u = lincomb (\\<lambda>_. one K) {u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = lincomb (\\<lambda>_. \\<one>\\<^bsub>K\\<^esub>) {u}", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. u = finsum V ((\\<odot>\\<^bsub>V\\<^esub>) \\<one>\\<^bsub>K\\<^esub>) {u}", "using uE E"], ["proof (prove)\nusing this:\n  u \\<in> E\n  E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. u = finsum V ((\\<odot>\\<^bsub>V\\<^esub>) \\<one>\\<^bsub>K\\<^esub>) {u}", "by auto"], ["proof (state)\nthis:\n  u = lincomb (\\<lambda>_. \\<one>\\<^bsub>K\\<^esub>) {u}\n\ngoal (3 subgoals):\n 1. finite {u}\n 2. {u} \\<subseteq> E\n 3. (\\<lambda>_. \\<one>\\<^bsub>K\\<^esub>) \\<in> {u} \\<rightarrow> carrier K", "show \"{u} \\<subseteq> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {u} \\<subseteq> E", "using uE"], ["proof (prove)\nusing this:\n  u \\<in> E\n\ngoal (1 subgoal):\n 1. {u} \\<subseteq> E", "by auto"], ["proof (state)\nthis:\n  {u} \\<subseteq> E\n\ngoal (2 subgoals):\n 1. finite {u}\n 2. (\\<lambda>_. \\<one>\\<^bsub>K\\<^esub>) \\<in> {u} \\<rightarrow> carrier K", "qed auto"], ["", "lemma lincomb_distrib:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and a: \"a : U \\<rightarrow> carrier K\"\n      and c: \"c : carrier K\"\n  shows \"c \\<odot>\\<^bsub>V\\<^esub> lincomb a U = lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\"\n    (is \"_ = lincomb ?b U\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U", "using U a"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U", "proof (induct U rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a {} =\n                      lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                       {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier V\n  a \\<in> {} \\<rightarrow> carrier K\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a {} =\n                      lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                       {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub> lincomb a {} =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) {}", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. c \\<otimes>\\<^bsub>K\\<^esub>\n  a v \\<odot>\\<^bsub>V\\<^esub>\n  v)", "using c"], ["proof (prove)\nusing this:\n  c \\<in> carrier K\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. c \\<otimes>\\<^bsub>K\\<^esub>\n  a v \\<odot>\\<^bsub>V\\<^esub>\n  v)", "by simp"], ["proof (state)\nthis:\n  c \\<odot>\\<^bsub>V\\<^esub> lincomb a {} =\n  lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) {}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "case (insert u U)"], ["proof (state)\nthis:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n                    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n                    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K", "have U: \"U \\<subseteq> carrier V\"\n          and u: \"u : carrier V\"\n          and a: \"a : insert u U \\<rightarrow> carrier K\"\n          and finU: \"finite U\""], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n                    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (U \\<subseteq> carrier V &&& u \\<in> carrier V) &&&\n    a \\<in> insert u U \\<rightarrow> carrier K &&& finite U", "by auto"], ["proof (state)\nthis:\n  U \\<subseteq> carrier V\n  u \\<in> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K\n  finite U\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "hence aU: \"a : U \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n  u \\<in> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K\n  finite U\n\ngoal (1 subgoal):\n 1. a \\<in> U \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<in> U \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "have b: \"?b : insert u U \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n    \\<in> insert u U \\<rightarrow> carrier K", "using a c"], ["proof (prove)\nusing this:\n  a \\<in> insert u U \\<rightarrow> carrier K\n  c \\<in> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n    \\<in> insert u U \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n  \\<in> insert u U \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a F =\n                          lincomb\n                           (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) F;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert x F) =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u)\n                          (insert x F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert u U) =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) (insert u U)", "unfolding lincomb_insert2[OF finU U a \\<open>u\\<notin>U\\<close> u]"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (a u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb a U) =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) (insert u U)", "unfolding lincomb_insert2[OF finU U b \\<open>u\\<notin>U\\<close> u]"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (a u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb a U) =\n    c \\<otimes>\\<^bsub>K\\<^esub> a u \\<odot>\\<^bsub>V\\<^esub>\n    u \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U", "using insert U aU c u smult_r_distr smult_assoc1"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n                    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> carrier K\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n  c \\<in> carrier K\n  u \\<in> carrier V\n  \\<lbrakk>?a \\<in> carrier K; ?x \\<in> carrier V;\n   ?y \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>V\\<^esub>\n                    (?x \\<oplus>\\<^bsub>V\\<^esub> ?y) =\n                    ?a \\<odot>\\<^bsub>V\\<^esub> ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    ?a \\<odot>\\<^bsub>V\\<^esub> ?y\n  \\<lbrakk>?a \\<in> carrier K; ?b \\<in> carrier K;\n   ?x \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<otimes>\\<^bsub>K\\<^esub>\n                    ?b \\<odot>\\<^bsub>V\\<^esub>\n                    ?x =\n                    ?a \\<odot>\\<^bsub>V\\<^esub>\n                    (?b \\<odot>\\<^bsub>V\\<^esub> ?x)\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (a u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb a U) =\n    c \\<otimes>\\<^bsub>K\\<^esub> a u \\<odot>\\<^bsub>V\\<^esub>\n    u \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U", "by auto"], ["proof (state)\nthis:\n  c \\<odot>\\<^bsub>V\\<^esub> lincomb a (insert u U) =\n  lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) (insert u U)\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A", "case (infinite U)"], ["proof (state)\nthis:\n  infinite U\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> lincomb a A =\n                         lincomb\n                          (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) A", "thus ?case"], ["proof (prove)\nusing this:\n  infinite U\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n    lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U", "unfolding lincomb_def"], ["proof (prove)\nusing this:\n  infinite U\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. c \\<otimes>\\<^bsub>K\\<^esub>\n a v \\<odot>\\<^bsub>V\\<^esub>\n v)", "using assms"], ["proof (prove)\nusing this:\n  infinite U\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> carrier K\n  c \\<in> carrier K\n\ngoal (1 subgoal):\n 1. c \\<odot>\\<^bsub>V\\<^esub>\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>U. c \\<otimes>\\<^bsub>K\\<^esub>\n a v \\<odot>\\<^bsub>V\\<^esub>\n v)", "by simp"], ["proof (state)\nthis:\n  c \\<odot>\\<^bsub>V\\<^esub> lincomb a U =\n  lincomb (\\<lambda>u. c \\<otimes>\\<^bsub>K\\<^esub> a u) U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_swap:\n  assumes finE[simp]: \"finite E\"\n      and E[simp]: \"E \\<subseteq> carrier V\"\n      and u[simp]: \"u : carrier V\"\n      and usE: \"u \\<notin> span E\"\n      and v[simp]: \"v : carrier V\"\n      and usEv: \"u : span (insert v E)\"\n  shows \"span (insert u E) \\<subseteq> span (insert v E)\" (is \"?L \\<subseteq> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "have Eu[simp]: \"insert u E \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert u E \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  insert u E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "have Ev[simp]: \"insert v E \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert v E \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  insert v E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "have finEu: \"finite (insert u E)\" and finEv: \"finite (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert u E) &&& finite (insert v E)", "using finE"], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (insert u E) &&& finite (insert v E)", "by auto"], ["proof (state)\nthis:\n  finite (insert u E)\n  finite (insert v E)\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "have uE: \"u \\<notin> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> E", "using usE span_mem"], ["proof (prove)\nusing this:\n  u \\<notin> span E\n  \\<lbrakk>?E \\<subseteq> carrier V; ?u \\<in> ?E\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> span ?E\n\ngoal (1 subgoal):\n 1. u \\<notin> E", "by force"], ["proof (state)\nthis:\n  u \\<notin> E\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "have vE: \"v \\<notin> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "assume \"v : E\""], ["proof (state)\nthis:\n  v \\<in> E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "hence EvE: \"insert v E = E\""], ["proof (prove)\nusing this:\n  v \\<in> E\n\ngoal (1 subgoal):\n 1. insert v E = E", "using insert_absorb"], ["proof (prove)\nusing this:\n  v \\<in> E\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n\ngoal (1 subgoal):\n 1. insert v E = E", "by auto"], ["proof (state)\nthis:\n  insert v E = E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "hence \"u : span E\""], ["proof (prove)\nusing this:\n  insert v E = E\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "using usEv"], ["proof (prove)\nusing this:\n  insert v E = E\n  u \\<in> span (insert v E)\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "by auto"], ["proof (state)\nthis:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. False", "using usE"], ["proof (prove)\nusing this:\n  u \\<in> span E\n  u \\<notin> span E\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<notin> E\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "obtain ua\n    where ua[simp]: \"ua : (insert v E) \\<rightarrow> carrier K\"\n      and uua: \"u = lincomb ua (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ua.\n        \\<lbrakk>ua \\<in> insert v E \\<rightarrow> carrier K;\n         u = lincomb ua (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using usEv finite_span[OF finEv Ev]"], ["proof (prove)\nusing this:\n  u \\<in> span (insert v E)\n  span (insert v E) =\n  {lincomb a (insert v E) |a. a \\<in> insert v E \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>ua.\n        \\<lbrakk>ua \\<in> insert v E \\<rightarrow> carrier K;\n         u = lincomb ua (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ua \\<in> insert v E \\<rightarrow> carrier K\n  u = lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "hence uaE[simp]: \"ua : E \\<rightarrow> carrier K\" and [simp]: \"ua v : carrier K\""], ["proof (prove)\nusing this:\n  ua \\<in> insert v E \\<rightarrow> carrier K\n  u = lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. ua \\<in> E \\<rightarrow> carrier K &&& ua v \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  ua \\<in> E \\<rightarrow> carrier K\n  ua v \\<in> carrier K\n\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (insert u E) \\<subseteq> span (insert v E)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (insert u E) \\<Longrightarrow> x \\<in> span (insert v E)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (insert u E) \\<Longrightarrow> x \\<in> span (insert v E)", "assume \"x : ?L\""], ["proof (state)\nthis:\n  x \\<in> span (insert u E)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (insert u E) \\<Longrightarrow> x \\<in> span (insert v E)", "then"], ["proof (chain)\npicking this:\n  x \\<in> span (insert u E)", "obtain xa\n    where xa: \"xa : insert u E \\<rightarrow> carrier K\"\n      and xxa: \"x = lincomb xa (insert u E)\""], ["proof (prove)\nusing this:\n  x \\<in> span (insert u E)\n\ngoal (1 subgoal):\n 1. (\\<And>xa.\n        \\<lbrakk>xa \\<in> insert u E \\<rightarrow> carrier K;\n         x = lincomb xa (insert u E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_span[OF finEu Eu]"], ["proof (prove)\nusing this:\n  x \\<in> {lincomb a (insert u E) |a.\n           a \\<in> insert u E \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>xa.\n        \\<lbrakk>xa \\<in> insert u E \\<rightarrow> carrier K;\n         x = lincomb xa (insert u E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  xa \\<in> insert u E \\<rightarrow> carrier K\n  x = lincomb xa (insert u E)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (insert u E) \\<Longrightarrow> x \\<in> span (insert v E)", "hence xaE[simp]: \"xa : E \\<rightarrow> carrier K\" and xau[simp]: \"xa u : carrier K\""], ["proof (prove)\nusing this:\n  xa \\<in> insert u E \\<rightarrow> carrier K\n  x = lincomb xa (insert u E)\n\ngoal (1 subgoal):\n 1. xa \\<in> E \\<rightarrow> carrier K &&& xa u \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  xa \\<in> E \\<rightarrow> carrier K\n  xa u \\<in> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (insert u E) \\<Longrightarrow> x \\<in> span (insert v E)", "show \"x : span (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> span (insert v E)", "unfolding finite_span[OF finEv Ev]"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {lincomb a (insert v E) |a.\n             a \\<in> insert v E \\<rightarrow> carrier K}", "proof (rule,intro exI conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "define a where \"a = (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e)\""], ["proof (state)\nthis:\n  a = (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e)\n\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "define a' where \"a' = (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e)\""], ["proof (state)\nthis:\n  a' = (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e)\n\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "define a'' where \"a'' = (\\<lambda>e. if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' e)\""], ["proof (state)\nthis:\n  a'' =\n  (\\<lambda>e. if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' e)\n\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "have aE: \"a : E \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> E \\<rightarrow> carrier K", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e)\n    \\<in> E \\<rightarrow> carrier K", "using xau uaE u"], ["proof (prove)\nusing this:\n  xa u \\<in> carrier K\n  ua \\<in> E \\<rightarrow> carrier K\n  u \\<in> carrier V\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e)\n    \\<in> E \\<rightarrow> carrier K", "by blast"], ["proof (state)\nthis:\n  a \\<in> E \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "hence a'E: \"a' : E \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a' \\<in> E \\<rightarrow> carrier K", "unfolding a'_def"], ["proof (prove)\nusing this:\n  a \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e)\n    \\<in> E \\<rightarrow> carrier K", "using xaE"], ["proof (prove)\nusing this:\n  a \\<in> E \\<rightarrow> carrier K\n  xa \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e)\n    \\<in> E \\<rightarrow> carrier K", "by blast"], ["proof (state)\nthis:\n  a' \\<in> E \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. x = lincomb ?a3 (insert v E)\n 2. ?a3 \\<in> insert v E \\<rightarrow> carrier K", "thus a'': \"a'' : insert v E \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a'' \\<in> insert v E \\<rightarrow> carrier K", "unfolding a''_def"], ["proof (prove)\nusing this:\n  a' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e.\n        if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' e)\n    \\<in> insert v E \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a'' \\<in> insert v E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have restr: \"restrict a' E = restrict a'' E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict a' E = restrict a'' E", "unfolding a''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict a' E =\n    (\\<lambda>e\\<in>E.\n        if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' e)", "using vE"], ["proof (prove)\nusing this:\n  v \\<notin> E\n\ngoal (1 subgoal):\n 1. restrict a' E =\n    (\\<lambda>e\\<in>E.\n        if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' e)", "by auto"], ["proof (state)\nthis:\n  restrict a' E = restrict a'' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"x = xa u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    xa u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E", "using xxa lincomb_insert2 finE E xa uE u"], ["proof (prove)\nusing this:\n  x = lincomb xa (insert u E)\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V;\n   ?a \\<in> insert ?v ?S \\<rightarrow> carrier K; ?v \\<notin> ?S;\n   ?v \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (insert ?v ?S) =\n                    ?a ?v \\<odot>\\<^bsub>V\\<^esub>\n                    ?v \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?a ?S\n  finite E\n  E \\<subseteq> carrier V\n  xa \\<in> insert u E \\<rightarrow> carrier K\n  u \\<notin> E\n  u \\<in> carrier V\n\ngoal (1 subgoal):\n 1. x =\n    xa u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E", "by auto"], ["proof (state)\nthis:\n  x = xa u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  x = xa u \\<odot>\\<^bsub>V\\<^esub> u \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have\n        \"xa u \\<odot>\\<^bsub>V\\<^esub> u = xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub> u =\n    xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua (insert v E)", "using uua"], ["proof (prove)\nusing this:\n  u = lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub> u =\n    xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua (insert v E)", "by auto"], ["proof (state)\nthis:\n  xa u \\<odot>\\<^bsub>V\\<^esub> u =\n  xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  xa u \\<odot>\\<^bsub>V\\<^esub> u =\n  xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"lincomb ua (insert v E) = ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb ua (insert v E) =\n    ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E", "using lincomb_insert2 finE E ua vE v"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V;\n   ?a \\<in> insert ?v ?S \\<rightarrow> carrier K; ?v \\<notin> ?S;\n   ?v \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (insert ?v ?S) =\n                    ?a ?v \\<odot>\\<^bsub>V\\<^esub>\n                    ?v \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?a ?S\n  finite E\n  E \\<subseteq> carrier V\n  ua \\<in> insert v E \\<rightarrow> carrier K\n  v \\<notin> E\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. lincomb ua (insert v E) =\n    ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E", "by auto"], ["proof (state)\nthis:\n  lincomb ua (insert v E) =\n  ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  lincomb ua (insert v E) =\n  ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"xa u \\<odot>\\<^bsub>V\\<^esub> ... = xa u \\<odot>\\<^bsub>V\\<^esub> (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     lincomb ua E) =\n    xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n    xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E", "using smult_r_distr"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier K; ?x \\<in> carrier V;\n   ?y \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<odot>\\<^bsub>V\\<^esub>\n                    (?x \\<oplus>\\<^bsub>V\\<^esub> ?y) =\n                    ?a \\<odot>\\<^bsub>V\\<^esub> ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    ?a \\<odot>\\<^bsub>V\\<^esub> ?y\n\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n     lincomb ua E) =\n    xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n    xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E", "by auto"], ["proof (state)\nthis:\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E) =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E) =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E = lincomb a E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E = lincomb a E", "unfolding a_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E =\n    lincomb (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e) E", "using lincomb_distrib[OF E]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> E \\<rightarrow> carrier K; ?c \\<in> carrier K\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>V\\<^esub> lincomb ?a E =\n                    lincomb (\\<lambda>u. ?c \\<otimes>\\<^bsub>K\\<^esub> ?a u)\n                     E\n\ngoal (1 subgoal):\n 1. xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E =\n    lincomb (\\<lambda>e. xa u \\<otimes>\\<^bsub>K\\<^esub> ua e) E", "by auto"], ["proof (state)\nthis:\n  xa u \\<odot>\\<^bsub>V\\<^esub> lincomb ua E = lincomb a E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "finally"], ["proof (chain)\npicking this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb xa E", "have \"x = xa u \\<odot>\\<^bsub>V\\<^esub> (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> (lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E)\""], ["proof (prove)\nusing this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb xa E\n\ngoal (1 subgoal):\n 1. x =\n    xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n    (lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E)", "using a_assoc xau v aE xaE"], ["proof (prove)\nusing this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb xa E\n  \\<lbrakk>?x \\<in> carrier V; ?y \\<in> carrier V;\n   ?z \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    ?y \\<oplus>\\<^bsub>V\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    (?y \\<oplus>\\<^bsub>V\\<^esub> ?z)\n  xa u \\<in> carrier K\n  v \\<in> carrier V\n  a \\<in> E \\<rightarrow> carrier K\n  xa \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. x =\n    xa u \\<odot>\\<^bsub>V\\<^esub>\n    (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n    (lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E)", "by auto"], ["proof (state)\nthis:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  (lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E)\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  (lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E)\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E = lincomb a' E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E = lincomb a' E", "unfolding a'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E =\n    lincomb (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e) E", "using lincomb_sum[OF finE E aE xaE]"], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>v. a v \\<oplus>\\<^bsub>K\\<^esub> xa v) E =\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E\n\ngoal (1 subgoal):\n 1. lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E =\n    lincomb (\\<lambda>e. a e \\<oplus>\\<^bsub>K\\<^esub> xa e) E", ".."], ["proof (state)\nthis:\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E = lincomb a' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  lincomb a E \\<oplus>\\<^bsub>V\\<^esub> lincomb xa E = lincomb a' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"... = lincomb a'' E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a' E = lincomb a'' E", "using lincomb_restrict[OF E a'E ] restr"], ["proof (prove)\nusing this:\n  restrict a' E = restrict ?b E \\<Longrightarrow>\n  lincomb a' E = lincomb ?b E\n  restrict a' E = restrict a'' E\n\ngoal (1 subgoal):\n 1. lincomb a' E = lincomb a'' E", "by auto"], ["proof (state)\nthis:\n  lincomb a' E = lincomb a'' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "finally"], ["proof (chain)\npicking this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a'' E", "have \"x = ((xa u \\<otimes>\\<^bsub>K\\<^esub> ua v) \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> lincomb a'' E\""], ["proof (prove)\nusing this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a'' E\n\ngoal (1 subgoal):\n 1. x =\n    xa u \\<otimes>\\<^bsub>K\\<^esub> ua v \\<odot>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a'' E", "using smult_assoc1"], ["proof (prove)\nusing this:\n  x =\n  xa u \\<odot>\\<^bsub>V\\<^esub>\n  (ua v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a'' E\n  \\<lbrakk>?a \\<in> carrier K; ?b \\<in> carrier K;\n   ?x \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?a \\<otimes>\\<^bsub>K\\<^esub>\n                    ?b \\<odot>\\<^bsub>V\\<^esub>\n                    ?x =\n                    ?a \\<odot>\\<^bsub>V\\<^esub>\n                    (?b \\<odot>\\<^bsub>V\\<^esub> ?x)\n\ngoal (1 subgoal):\n 1. x =\n    xa u \\<otimes>\\<^bsub>K\\<^esub> ua v \\<odot>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a'' E", "by auto"], ["proof (state)\nthis:\n  x =\n  xa u \\<otimes>\\<^bsub>K\\<^esub> ua v \\<odot>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a'' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  x =\n  xa u \\<otimes>\\<^bsub>K\\<^esub> ua v \\<odot>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a'' E\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"xa u \\<otimes>\\<^bsub>K\\<^esub> ua v = a'' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<otimes>\\<^bsub>K\\<^esub> ua v = a'' v", "unfolding a''_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. xa u \\<otimes>\\<^bsub>K\\<^esub> ua v =\n    (if v = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v else a' v)", "by simp"], ["proof (state)\nthis:\n  xa u \\<otimes>\\<^bsub>K\\<^esub> ua v = a'' v\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "also"], ["proof (state)\nthis:\n  xa u \\<otimes>\\<^bsub>K\\<^esub> ua v = a'' v\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "have \"(a'' v \\<odot>\\<^bsub>V\\<^esub> v) \\<oplus>\\<^bsub>V\\<^esub> lincomb a'' E = lincomb a'' (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a'' v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a'' E =\n    lincomb a'' (insert v E)", "using lincomb_insert2[OF finE E a'' vE]"], ["proof (prove)\nusing this:\n  v \\<in> carrier V \\<Longrightarrow>\n  lincomb a'' (insert v E) =\n  a'' v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb a'' E\n\ngoal (1 subgoal):\n 1. a'' v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a'' E =\n    lincomb a'' (insert v E)", "by auto"], ["proof (state)\nthis:\n  a'' v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb a'' E =\n  lincomb a'' (insert v E)\n\ngoal (1 subgoal):\n 1. x =\n    lincomb\n     (\\<lambda>e.\n         if e = v then xa u \\<otimes>\\<^bsub>K\\<^esub> ua v\n         else xa u \\<otimes>\\<^bsub>K\\<^esub> ua e \\<oplus>\\<^bsub>K\\<^esub>\n              xa e)\n     (insert v E)", "finally"], ["proof (chain)\npicking this:\n  x = lincomb a'' (insert v E)", "show \"x = lincomb a'' (insert v E)\""], ["proof (prove)\nusing this:\n  x = lincomb a'' (insert v E)\n\ngoal (1 subgoal):\n 1. x = lincomb a'' (insert v E)", "."], ["proof (state)\nthis:\n  x = lincomb a'' (insert v E)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> span (insert v E)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (insert u E) \\<subseteq> span (insert v E)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma basis_swap:\n  assumes finE[simp]: \"finite E\"\n      and u[simp]: \"u : carrier V\"\n      and uE[simp]: \"u \\<notin> E\"\n      and b: \"basis (insert u E)\"\n      and v[simp]: \"v : carrier V\"\n      and uEv: \"u : span (insert v E)\"\n  shows \"basis (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis (insert v E)", "unfolding basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (insert v E) \\<and>\n    gen_set (insert v E) \\<and> insert v E \\<subseteq> carrier V", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)\n 3. insert v E \\<subseteq> carrier V", "have Eu[simp]: \"insert u E \\<subseteq> carrier V\"\n   and spanEu: \"carrier V = span (insert u E)\"\n   and indEu: \"~ lin_dep (insert u E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert u E \\<subseteq> carrier V &&&\n    carrier V = span (insert u E) &&& lin_indpt (insert u E)", "using b[unfolded basis_def]"], ["proof (prove)\nusing this:\n  lin_indpt (insert u E) \\<and>\n  gen_set (insert u E) \\<and> insert u E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. insert u E \\<subseteq> carrier V &&&\n    carrier V = span (insert u E) &&& lin_indpt (insert u E)", "by auto"], ["proof (state)\nthis:\n  insert u E \\<subseteq> carrier V\n  carrier V = span (insert u E)\n  lin_indpt (insert u E)\n\ngoal (3 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)\n 3. insert v E \\<subseteq> carrier V", "hence E[simp]: \"E \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  insert u E \\<subseteq> carrier V\n  carrier V = span (insert u E)\n  lin_indpt (insert u E)\n\ngoal (1 subgoal):\n 1. E \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  E \\<subseteq> carrier V\n\ngoal (3 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)\n 3. insert v E \\<subseteq> carrier V", "thus Ev[simp]: \"insert v E \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. insert v E \\<subseteq> carrier V", "using v"], ["proof (prove)\nusing this:\n  E \\<subseteq> carrier V\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. insert v E \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  insert v E \\<subseteq> carrier V\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "have finEu: \"finite (insert u E)\"\n   and finEv: \"finite (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert u E) &&& finite (insert v E)", "using finE"], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (insert u E) &&& finite (insert v E)", "by auto"], ["proof (state)\nthis:\n  finite (insert u E)\n  finite (insert v E)\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "have usE: \"u \\<notin> span E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<notin> span E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "assume \"u : span E\""], ["proof (state)\nthis:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "hence \"u : span (insert u E - {u})\""], ["proof (prove)\nusing this:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. u \\<in> span (insert u E - {u})", "using uE"], ["proof (prove)\nusing this:\n  u \\<in> span E\n  u \\<notin> E\n\ngoal (1 subgoal):\n 1. u \\<in> span (insert u E - {u})", "by auto"], ["proof (state)\nthis:\n  u \\<in> span (insert u E - {u})\n\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  u \\<in> span (insert u E - {u})\n\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "have \"u : insert u E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<in> insert u E", "by auto"], ["proof (state)\nthis:\n  u \\<in> insert u E\n\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  u \\<in> span (insert u E - {u})\n  u \\<in> insert u E", "have \"lin_dep (insert u E)\""], ["proof (prove)\nusing this:\n  u \\<in> span (insert u E - {u})\n  u \\<in> insert u E\n\ngoal (1 subgoal):\n 1. lin_dep (insert u E)", "unfolding lindep_span[OF Eu finEu]"], ["proof (prove)\nusing this:\n  u \\<in> span (insert u E - {u})\n  u \\<in> insert u E\n\ngoal (1 subgoal):\n 1. \\<exists>ua\\<in>insert u E. ua \\<in> span (insert u E - {ua})", "by auto"], ["proof (state)\nthis:\n  lin_dep (insert u E)\n\ngoal (1 subgoal):\n 1. u \\<in> span E \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  lin_dep (insert u E)\n\ngoal (1 subgoal):\n 1. False", "using b"], ["proof (prove)\nusing this:\n  lin_dep (insert u E)\n  basis (insert u E)\n\ngoal (1 subgoal):\n 1. False", "unfolding basis_def"], ["proof (prove)\nusing this:\n  lin_dep (insert u E)\n  lin_indpt (insert u E) \\<and>\n  gen_set (insert u E) \\<and> insert u E \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  u \\<notin> span E\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "obtain ua\n    where ua[simp]: \"ua : insert v E \\<rightarrow> carrier K\"\n      and uua: \"u = lincomb ua (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ua.\n        \\<lbrakk>ua \\<in> insert v E \\<rightarrow> carrier K;\n         u = lincomb ua (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using uEv finite_span[OF finEv Ev]"], ["proof (prove)\nusing this:\n  u \\<in> span (insert v E)\n  span (insert v E) =\n  {lincomb a (insert v E) |a. a \\<in> insert v E \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>ua.\n        \\<lbrakk>ua \\<in> insert v E \\<rightarrow> carrier K;\n         u = lincomb ua (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ua \\<in> insert v E \\<rightarrow> carrier K\n  u = lincomb ua (insert v E)\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "hence uaE[simp]: \"ua : E \\<rightarrow> carrier K\"\n    and uav[simp]: \"ua v : carrier K\""], ["proof (prove)\nusing this:\n  ua \\<in> insert v E \\<rightarrow> carrier K\n  u = lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. ua \\<in> E \\<rightarrow> carrier K &&& ua v \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  ua \\<in> E \\<rightarrow> carrier K\n  ua v \\<in> carrier K\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "have vE: \"v \\<notin> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "assume \"v : E\""], ["proof (state)\nthis:\n  v \\<in> E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "hence EvE: \"insert v E = E\""], ["proof (prove)\nusing this:\n  v \\<in> E\n\ngoal (1 subgoal):\n 1. insert v E = E", "using insert_absorb"], ["proof (prove)\nusing this:\n  v \\<in> E\n  ?a \\<in> ?A \\<Longrightarrow> insert ?a ?A = ?A\n\ngoal (1 subgoal):\n 1. insert v E = E", "by auto"], ["proof (state)\nthis:\n  insert v E = E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "hence \"u : span E\""], ["proof (prove)\nusing this:\n  insert v E = E\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "using uEv"], ["proof (prove)\nusing this:\n  insert v E = E\n  u \\<in> span (insert v E)\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "by auto"], ["proof (state)\nthis:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. v \\<in> E \\<Longrightarrow> False", "thus \"False\""], ["proof (prove)\nusing this:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. False", "using usE"], ["proof (prove)\nusing this:\n  u \\<in> span E\n  u \\<notin> span E\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<notin> E\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "have vsE: \"v \\<notin> span E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<notin> span E", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "assume \"v : span E\""], ["proof (state)\nthis:\n  v \\<in> span E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> span E", "obtain va\n      where va[simp]: \"va : E \\<rightarrow> carrier K\"\n        and vva: \"v = lincomb va E\""], ["proof (prove)\nusing this:\n  v \\<in> span E\n\ngoal (1 subgoal):\n 1. (\\<And>va.\n        \\<lbrakk>va \\<in> E \\<rightarrow> carrier K;\n         v = lincomb va E\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_span[OF finE E]"], ["proof (prove)\nusing this:\n  v \\<in> span E\n  span E = {lincomb a E |a. a \\<in> E \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>va.\n        \\<lbrakk>va \\<in> E \\<rightarrow> carrier K;\n         v = lincomb va E\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  va \\<in> E \\<rightarrow> carrier K\n  v = lincomb va E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "define va' where \"va' = (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e)\""], ["proof (state)\nthis:\n  va' = (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e)\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "define va'' where \"va'' = (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e)\""], ["proof (state)\nthis:\n  va'' = (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e)\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "have va'[simp]: \"va' : E \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. va' \\<in> E \\<rightarrow> carrier K", "unfolding va'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e)\n    \\<in> E \\<rightarrow> carrier K", "using uav va"], ["proof (prove)\nusing this:\n  ua v \\<in> carrier K\n  va \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e)\n    \\<in> E \\<rightarrow> carrier K", "by blast"], ["proof (state)\nthis:\n  va' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "hence va''[simp]: \"va'' : E \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  va' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. va'' \\<in> E \\<rightarrow> carrier K", "unfolding va''_def"], ["proof (prove)\nusing this:\n  va' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e)\n    \\<in> E \\<rightarrow> carrier K", "using ua"], ["proof (prove)\nusing this:\n  va' \\<in> E \\<rightarrow> carrier K\n  ua \\<in> insert v E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e)\n    \\<in> E \\<rightarrow> carrier K", "by blast"], ["proof (state)\nthis:\n  va'' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "from uua"], ["proof (chain)\npicking this:\n  u = lincomb ua (insert v E)", "have \"u = ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\""], ["proof (prove)\nusing this:\n  u = lincomb ua (insert v E)\n\ngoal (1 subgoal):\n 1. u =\n    ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E", "using lincomb_insert2 vE"], ["proof (prove)\nusing this:\n  u = lincomb ua (insert v E)\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V;\n   ?a \\<in> insert ?v ?S \\<rightarrow> carrier K; ?v \\<notin> ?S;\n   ?v \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (insert ?v ?S) =\n                    ?a ?v \\<odot>\\<^bsub>V\\<^esub>\n                    ?v \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?a ?S\n  v \\<notin> E\n\ngoal (1 subgoal):\n 1. u =\n    ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E", "by auto"], ["proof (state)\nthis:\n  u = ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  u = ua v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "have \"ua v \\<odot>\\<^bsub>V\\<^esub> v = ua v \\<odot>\\<^bsub>V\\<^esub> (lincomb va E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ua v \\<odot>\\<^bsub>V\\<^esub> v =\n    ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E", "using vva"], ["proof (prove)\nusing this:\n  v = lincomb va E\n\ngoal (1 subgoal):\n 1. ua v \\<odot>\\<^bsub>V\\<^esub> v =\n    ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E", "by auto"], ["proof (state)\nthis:\n  ua v \\<odot>\\<^bsub>V\\<^esub> v =\n  ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  ua v \\<odot>\\<^bsub>V\\<^esub> v =\n  ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "have \"... = lincomb va' E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E = lincomb va' E", "unfolding va'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E =\n    lincomb (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e) E", "using lincomb_distrib"], ["proof (prove)\nusing this:\n  \\<lbrakk>?U \\<subseteq> carrier V; ?a \\<in> ?U \\<rightarrow> carrier K;\n   ?c \\<in> carrier K\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>V\\<^esub> lincomb ?a ?U =\n                    lincomb (\\<lambda>u. ?c \\<otimes>\\<^bsub>K\\<^esub> ?a u)\n                     ?U\n\ngoal (1 subgoal):\n 1. ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E =\n    lincomb (\\<lambda>e. ua v \\<otimes>\\<^bsub>K\\<^esub> va e) E", "by auto"], ["proof (state)\nthis:\n  ua v \\<odot>\\<^bsub>V\\<^esub> lincomb va E = lincomb va' E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  u = lincomb va' E \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E", "have \"u = lincomb va'' E\""], ["proof (prove)\nusing this:\n  u = lincomb va' E \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. u = lincomb va'' E", "unfolding va''_def"], ["proof (prove)\nusing this:\n  u = lincomb va' E \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n\ngoal (1 subgoal):\n 1. u = lincomb (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e) E", "using lincomb_sum[OF finE E]"], ["proof (prove)\nusing this:\n  u = lincomb va' E \\<oplus>\\<^bsub>V\\<^esub> lincomb ua E\n  \\<lbrakk>?a \\<in> E \\<rightarrow> carrier K;\n   ?b \\<in> E \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb\n                     (\\<lambda>v. ?a v \\<oplus>\\<^bsub>K\\<^esub> ?b v) E =\n                    lincomb ?a E \\<oplus>\\<^bsub>V\\<^esub> lincomb ?b E\n\ngoal (1 subgoal):\n 1. u = lincomb (\\<lambda>e. va' e \\<oplus>\\<^bsub>K\\<^esub> ua e) E", "by auto"], ["proof (state)\nthis:\n  u = lincomb va'' E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "hence \"u : span E\""], ["proof (prove)\nusing this:\n  u = lincomb va'' E\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "using finite_span[OF finE E] va''"], ["proof (prove)\nusing this:\n  u = lincomb va'' E\n  span E = {lincomb a E |a. a \\<in> E \\<rightarrow> carrier K}\n  va'' \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. u \\<in> span E", "by blast"], ["proof (state)\nthis:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "hence \"lin_dep (insert u E)\""], ["proof (prove)\nusing this:\n  u \\<in> span E\n\ngoal (1 subgoal):\n 1. lin_dep (insert u E)", "using lindep_span"], ["proof (prove)\nusing this:\n  u \\<in> span E\n  \\<lbrakk>?U \\<subseteq> carrier V; finite ?U\\<rbrakk>\n  \\<Longrightarrow> lin_dep ?U =\n                    (\\<exists>u\\<in>?U. u \\<in> span (?U - {u}))\n\ngoal (1 subgoal):\n 1. lin_dep (insert u E)", "by simp"], ["proof (state)\nthis:\n  lin_dep (insert u E)\n\ngoal (1 subgoal):\n 1. v \\<in> span E \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  lin_dep (insert u E)", "show False"], ["proof (prove)\nusing this:\n  lin_dep (insert u E)\n\ngoal (1 subgoal):\n 1. False", "using indEu"], ["proof (prove)\nusing this:\n  lin_dep (insert u E)\n  lin_indpt (insert u E)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<notin> span E\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "have indE: \"~ lin_dep E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt E", "using indEu subset_li_is_li"], ["proof (prove)\nusing this:\n  lin_indpt (insert u E)\n  \\<lbrakk>lin_indpt ?A; ?B \\<subseteq> ?A\\<rbrakk>\n  \\<Longrightarrow> lin_indpt ?B\n\ngoal (1 subgoal):\n 1. lin_indpt E", "by auto"], ["proof (state)\nthis:\n  lin_indpt E\n\ngoal (2 subgoals):\n 1. lin_indpt (insert v E)\n 2. gen_set (insert v E)", "show \"~ lin_dep (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (insert v E)", "using lin_dep_iff_in_span[OF E indE v vE] vsE"], ["proof (prove)\nusing this:\n  (v \\<in> span E) = lin_dep (E \\<union> {v})\n  v \\<notin> span E\n\ngoal (1 subgoal):\n 1. lin_indpt (insert v E)", "by auto"], ["proof (state)\nthis:\n  lin_indpt (insert v E)\n\ngoal (1 subgoal):\n 1. gen_set (insert v E)", "show \"span (insert v E) = carrier V\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. gen_set (insert v E)", "proof (rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. span (insert v E) \\<subseteq> carrier V\n 2. carrier V \\<subseteq> span (insert v E)", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span (insert v E) \\<subseteq> carrier V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "have finEv: \"finite (insert v E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert v E)", "using finE"], ["proof (prove)\nusing this:\n  finite E\n\ngoal (1 subgoal):\n 1. finite (insert v E)", "by auto"], ["proof (state)\nthis:\n  finite (insert v E)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "assume \"x : ?L\""], ["proof (state)\nthis:\n  x \\<in> span (insert v E)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "then"], ["proof (chain)\npicking this:\n  x \\<in> span (insert v E)", "obtain a\n        where a: \"a : insert v E \\<rightarrow> carrier K\"\n          and x: \"x = lincomb a (insert v E)\""], ["proof (prove)\nusing this:\n  x \\<in> span (insert v E)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> insert v E \\<rightarrow> carrier K;\n         x = lincomb a (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finite_span[OF finEv Ev]"], ["proof (prove)\nusing this:\n  x \\<in> {lincomb a (insert v E) |a.\n           a \\<in> insert v E \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> insert v E \\<rightarrow> carrier K;\n         x = lincomb a (insert v E)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a \\<in> insert v E \\<rightarrow> carrier K\n  x = lincomb a (insert v E)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "from a"], ["proof (chain)\npicking this:\n  a \\<in> insert v E \\<rightarrow> carrier K", "have av: \"a v : carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> insert v E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a v \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  a v \\<in> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "from a"], ["proof (chain)\npicking this:\n  a \\<in> insert v E \\<rightarrow> carrier K", "have a2: \"a : E \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  a \\<in> insert v E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<in> E \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<in> E \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> span (insert v E) \\<Longrightarrow> x \\<in> carrier V", "show \"x : ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier V", "unfolding x"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (insert v E) \\<in> carrier V", "unfolding lincomb_insert2[OF finE E a vE v]"], ["proof (prove)\ngoal (1 subgoal):\n 1. a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb a E\n    \\<in> carrier V", "using lincomb_closed[OF E a2] av v"], ["proof (prove)\nusing this:\n  lincomb a E \\<in> carrier V\n  a v \\<in> carrier K\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. a v \\<odot>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> lincomb a E\n    \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  span (insert v E) \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. carrier V \\<subseteq> span (insert v E)", "show \"?R \\<subseteq> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier V \\<subseteq> span (insert v E)", "using span_swap[OF finE E u usE v uEv] spanEu"], ["proof (prove)\nusing this:\n  span (insert u E) \\<subseteq> span (insert v E)\n  carrier V = span (insert u E)\n\ngoal (1 subgoal):\n 1. carrier V \\<subseteq> span (insert v E)", "by auto"], ["proof (state)\nthis:\n  carrier V \\<subseteq> span (insert v E)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gen_set (insert v E)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_empty: \"span {} = {zero V}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. span {} = {\\<zero>\\<^bsub>V\\<^esub>}", "unfolding finite_span[OF finite.emptyI empty_subsetI]"], ["proof (prove)\ngoal (1 subgoal):\n 1. {lincomb a {} |a. a \\<in> {} \\<rightarrow> carrier K} =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>V\\<^esub> v |a.\n     a \\<in> {} \\<rightarrow> carrier K} =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "by simp"], ["", "lemma span_self: assumes [simp]: \"v : carrier V\" shows \"v : span {v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> span {v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> span {v}", "have \"v = lincomb (\\<lambda>x. one K) {v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = lincomb (\\<lambda>x. \\<one>\\<^bsub>K\\<^esub>) {v}", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v = finsum V ((\\<odot>\\<^bsub>V\\<^esub>) \\<one>\\<^bsub>K\\<^esub>) {v}", "by auto"], ["proof (state)\nthis:\n  v = lincomb (\\<lambda>x. \\<one>\\<^bsub>K\\<^esub>) {v}\n\ngoal (1 subgoal):\n 1. v \\<in> span {v}", "thus ?thesis"], ["proof (prove)\nusing this:\n  v = lincomb (\\<lambda>x. \\<one>\\<^bsub>K\\<^esub>) {v}\n\ngoal (1 subgoal):\n 1. v \\<in> span {v}", "using finite_span"], ["proof (prove)\nusing this:\n  v = lincomb (\\<lambda>x. \\<one>\\<^bsub>K\\<^esub>) {v}\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V\\<rbrakk>\n  \\<Longrightarrow> span ?S =\n                    {lincomb a ?S |a. a \\<in> ?S \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. v \\<in> span {v}", "by auto"], ["proof (state)\nthis:\n  v \\<in> span {v}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_zero: \"zero V : span U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<in> span U", "unfolding span_def lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub>\n    \\<in> {\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>A. a v \\<odot>\\<^bsub>V\\<^esub>\n       v |\n           a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}", "by force"], ["", "definition emb where \"emb f D x = (if x : D then f x else zero K)\""], ["", "lemma emb_carrier[simp]: \"f : D \\<rightarrow> R \\<Longrightarrow> emb f D : D \\<rightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> D \\<rightarrow> R \\<Longrightarrow>\n    emb f D \\<in> D \\<rightarrow> R", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f \\<in> D \\<rightarrow> R; x \\<in> D\\<rbrakk>\n       \\<Longrightarrow> emb f D x \\<in> R", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>f \\<in> D \\<rightarrow> R; x \\<in> D\\<rbrakk>\n       \\<Longrightarrow> (if x \\<in> D then f x\n                          else \\<zero>\\<^bsub>K\\<^esub>)\n                         \\<in> R", "by auto"], ["", "lemma emb_restrict: \"restrict (emb f D) D = restrict f D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict (emb f D) D = restrict f D", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. restrict (emb f D) D x = restrict f D x", "unfolding restrict_def emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (if x \\<in> D\n        then if x \\<in> D then f x else \\<zero>\\<^bsub>K\\<^esub>\n        else undefined) =\n       (if x \\<in> D then f x else undefined)", "by auto"], ["", "lemma emb_zero: \"emb f D : X - D \\<rightarrow> { zero K }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb f D \\<in> X - D \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X - D \\<Longrightarrow>\n       emb f D x \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> X - D \\<Longrightarrow>\n       (if x \\<in> D then f x else \\<zero>\\<^bsub>K\\<^esub>)\n       \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "by auto"], ["", "lemma lincomb_clean:\n  assumes A: \"A \\<subseteq> carrier V\"\n    and Z: \"Z \\<subseteq> carrier V\"\n    and finA: \"finite A\"\n    and finZ: \"finite Z\"\n    and aA: \"a : A \\<rightarrow> carrier K\"\n    and aZ: \"a : Z \\<rightarrow> { zero K }\"\n  shows \"lincomb a (A \\<union> Z) = lincomb a A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> Z) = lincomb a A", "using finZ Z aZ"], ["proof (prove)\nusing this:\n  finite Z\n  Z \\<subseteq> carrier V\n  a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> Z) = lincomb a A", "proof(induct set:finite)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a (A \\<union> {}) = lincomb a A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a (A \\<union> F) = lincomb a A;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (A \\<union> insert x F) = lincomb a A", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier V\n  a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a (A \\<union> {}) = lincomb a A\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a (A \\<union> F) = lincomb a A;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (A \\<union> insert x F) = lincomb a A", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> carrier V\n  a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> {}) = lincomb a A", "by simp"], ["proof (state)\nthis:\n  lincomb a (A \\<union> {}) = lincomb a A\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a (A \\<union> F) = lincomb a A;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (A \\<union> insert x F) = lincomb a A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a (A \\<union> F) = lincomb a A;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (A \\<union> insert x F) = lincomb a A", "case (insert z Z)"], ["proof (state)\nthis:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a (A \\<union> F) = lincomb a A;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (A \\<union> insert x F) = lincomb a A", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> insert z Z) = lincomb a A", "proof (cases \"z : A\")"], ["proof (state)\ngoal (2 subgoals):\n 1. z \\<in> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A\n 2. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "case True"], ["proof (state)\nthis:\n  z \\<in> A\n\ngoal (2 subgoals):\n 1. z \\<in> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A\n 2. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "hence \"A \\<union> insert z Z = A \\<union> Z\""], ["proof (prove)\nusing this:\n  z \\<in> A\n\ngoal (1 subgoal):\n 1. A \\<union> insert z Z = A \\<union> Z", "by auto"], ["proof (state)\nthis:\n  A \\<union> insert z Z = A \\<union> Z\n\ngoal (2 subgoals):\n 1. z \\<in> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A\n 2. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "thus ?thesis"], ["proof (prove)\nusing this:\n  A \\<union> insert z Z = A \\<union> Z\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> insert z Z) = lincomb a A", "using insert"], ["proof (prove)\nusing this:\n  A \\<union> insert z Z = A \\<union> Z\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> insert z Z) = lincomb a A", "by simp"], ["proof (state)\nthis:\n  lincomb a (A \\<union> insert z Z) = lincomb a A\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "case False"], ["proof (state)\nthis:\n  z \\<notin> A\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have finAZ: \"finite (A \\<union> Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A \\<union> Z)", "using finA insert"], ["proof (prove)\nusing this:\n  finite A\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. finite (A \\<union> Z)", "by simp"], ["proof (state)\nthis:\n  finite (A \\<union> Z)\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have AZ: \"A \\<union> Z \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> Z \\<subseteq> carrier V", "using A insert"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. A \\<union> Z \\<subseteq> carrier V", "by simp"], ["proof (state)\nthis:\n  A \\<union> Z \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have a: \"a : insert z (A \\<union> Z) \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> insert z (A \\<union> Z) \\<rightarrow> carrier K", "using insert aA"], ["proof (prove)\nusing this:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<in> insert z (A \\<union> Z) \\<rightarrow> carrier K", "by force"], ["proof (state)\nthis:\n  a \\<in> insert z (A \\<union> Z) \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have \"a z = zero K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a z = \\<zero>\\<^bsub>K\\<^esub>", "using insert"], ["proof (prove)\nusing this:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. a z = \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a z = \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "also"], ["proof (state)\nthis:\n  a z = \\<zero>\\<^bsub>K\\<^esub>\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have \"... \\<odot>\\<^bsub>V\\<^esub> z = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> z =\n    \\<zero>\\<^bsub>V\\<^esub>", "using insert"], ["proof (prove)\nusing this:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> z =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> z =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "also"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub> z =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have \"... \\<oplus>\\<^bsub>V\\<^esub> lincomb a (A \\<union> Z) = lincomb a (A \\<union> Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A \\<union> Z) =\n    lincomb a (A \\<union> Z)", "using insert AZ aA"], ["proof (prove)\nusing this:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n  A \\<union> Z \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A \\<union> Z) =\n    lincomb a (A \\<union> Z)", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a (A \\<union> Z)\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "also"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a (A \\<union> Z)\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "have \"... = lincomb a A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> Z) = lincomb a A", "using insert"], ["proof (prove)\nusing this:\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> Z) = lincomb a A", "by simp"], ["proof (state)\nthis:\n  lincomb a (A \\<union> Z) = lincomb a A\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "finally"], ["proof (chain)\npicking this:\n  a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a A", "have \"a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub> lincomb a (A \\<union> Z) = lincomb a A\""], ["proof (prove)\nusing this:\n  a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a A\n\ngoal (1 subgoal):\n 1. a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A \\<union> Z) =\n    lincomb a A", "."], ["proof (state)\nthis:\n  a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a A\n\ngoal (1 subgoal):\n 1. z \\<notin> A \\<Longrightarrow>\n    lincomb a (A \\<union> insert z Z) = lincomb a A", "thus ?thesis"], ["proof (prove)\nusing this:\n  a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a A\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> insert z Z) = lincomb a A", "using lincomb_insert2[OF finAZ AZ a] False insert"], ["proof (prove)\nusing this:\n  a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<union> Z) =\n  lincomb a A\n  \\<lbrakk>z \\<notin> A \\<union> Z; z \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> lincomb a (insert z (A \\<union> Z)) =\n                    a z \\<odot>\\<^bsub>V\\<^esub> z \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb a (A \\<union> Z)\n  z \\<notin> A\n  finite Z\n  z \\<notin> Z\n  \\<lbrakk>Z \\<subseteq> carrier V;\n   a \\<in> Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a (A \\<union> Z) = lincomb a A\n  insert z Z \\<subseteq> carrier V\n  a \\<in> insert z Z \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<union> insert z Z) = lincomb a A", "by auto"], ["proof (state)\nthis:\n  lincomb a (A \\<union> insert z Z) = lincomb a A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lincomb a (A \\<union> insert z Z) = lincomb a A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_add1:\n  assumes U: \"U \\<subseteq> carrier V\" and v: \"v : span U\" and w: \"w : span U\"\n  shows \"v \\<oplus>\\<^bsub>V\\<^esub> w : span U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "from v"], ["proof (chain)\npicking this:\n  v \\<in> span U", "obtain a A\n    where finA: \"finite A\"\n      and va: \"lincomb a A = v\"\n      and AU: \"A \\<subseteq> U\"\n      and a: \"a : A \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  v \\<in> span U\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        \\<lbrakk>finite A; lincomb a A = v; A \\<subseteq> U;\n         a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding span_def"], ["proof (prove)\nusing this:\n  v \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        \\<lbrakk>finite A; lincomb a A = v; A \\<subseteq> U;\n         a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite A\n  lincomb a A = v\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "hence A: \"A \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  finite A\n  lincomb a A = v\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  finite A\n  lincomb a A = v\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "from w"], ["proof (chain)\npicking this:\n  w \\<in> span U", "obtain b B\n    where finB: \"finite B\"\n      and wb: \"lincomb b B = w\"\n      and BU: \"B \\<subseteq> U\"\n      and b: \"b : B \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  w \\<in> span U\n\ngoal (1 subgoal):\n 1. (\\<And>B b.\n        \\<lbrakk>finite B; lincomb b B = w; B \\<subseteq> U;\n         b \\<in> B \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding span_def"], ["proof (prove)\nusing this:\n  w \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>B b.\n        \\<lbrakk>finite B; lincomb b B = w; B \\<subseteq> U;\n         b \\<in> B \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite B\n  lincomb b B = w\n  B \\<subseteq> U\n  b \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "hence B: \"B \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  finite B\n  lincomb b B = w\n  B \\<subseteq> U\n  b \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  finite B\n  lincomb b B = w\n  B \\<subseteq> U\n  b \\<in> B \\<rightarrow> carrier K\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "have B_A: \"B - A \\<subseteq> carrier V\" and A_B: \"A - B \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B - A \\<subseteq> carrier V &&& A - B \\<subseteq> carrier V", "using A B"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier V\n  B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. B - A \\<subseteq> carrier V &&& A - B \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  B - A \\<subseteq> carrier V\n  A - B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "have a': \"emb a A : A \\<union> B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb a A \\<in> A \\<union> B \\<rightarrow> carrier K", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow> emb a A x \\<in> carrier K", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow>\n       (if x \\<in> A then a x else \\<zero>\\<^bsub>K\\<^esub>) \\<in> carrier K", "using a"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow>\n       (if x \\<in> A then a x else \\<zero>\\<^bsub>K\\<^esub>) \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  emb a A \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "hence a'A: \"emb a A : A \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  emb a A \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. emb a A \\<in> A \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  emb a A \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "have a'Z: \"emb a A : B - A \\<rightarrow> { zero K }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb a A \\<in> B - A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B - A \\<Longrightarrow>\n       emb a A x \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B - A \\<Longrightarrow>\n       (if x \\<in> A then a x else \\<zero>\\<^bsub>K\\<^esub>)\n       \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "using a"], ["proof (prove)\nusing this:\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> B - A \\<Longrightarrow>\n       (if x \\<in> A then a x else \\<zero>\\<^bsub>K\\<^esub>)\n       \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  emb a A \\<in> B - A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "have b': \"emb b B : A \\<union> B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb b B \\<in> A \\<union> B \\<rightarrow> carrier K", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow> emb b B x \\<in> carrier K", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow>\n       (if x \\<in> B then b x else \\<zero>\\<^bsub>K\\<^esub>) \\<in> carrier K", "using b"], ["proof (prove)\nusing this:\n  b \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A \\<union> B \\<Longrightarrow>\n       (if x \\<in> B then b x else \\<zero>\\<^bsub>K\\<^esub>) \\<in> carrier K", "by auto"], ["proof (state)\nthis:\n  emb b B \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "hence b'B: \"emb b B : B \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  emb b B \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. emb b B \\<in> B \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  emb b B \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "have b'Z: \"emb b B : A - B \\<rightarrow> { zero K }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emb b B \\<in> A - B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "apply (rule Pi_I)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - B \\<Longrightarrow>\n       emb b B x \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "unfolding emb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - B \\<Longrightarrow>\n       (if x \\<in> B then b x else \\<zero>\\<^bsub>K\\<^esub>)\n       \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "using b"], ["proof (prove)\nusing this:\n  b \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A - B \\<Longrightarrow>\n       (if x \\<in> B then b x else \\<zero>\\<^bsub>K\\<^esub>)\n       \\<in> {\\<zero>\\<^bsub>K\\<^esub>}", "by auto"], ["proof (state)\nthis:\n  emb b B \\<in> A - B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "unfolding span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}", "proof (rule,intro exI conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 ?A3\n 2. finite ?A3\n 3. ?A3 \\<subseteq> U\n 4. ?a2 \\<in> ?A3 \\<rightarrow> carrier K", "let ?v = \"lincomb (emb a A) (A \\<union> B)\""], ["proof (state)\ngoal (4 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 ?A3\n 2. finite ?A3\n 3. ?A3 \\<subseteq> U\n 4. ?a2 \\<in> ?A3 \\<rightarrow> carrier K", "let ?w = \"lincomb (emb b B) (A \\<union> B)\""], ["proof (state)\ngoal (4 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 ?A3\n 2. finite ?A3\n 3. ?A3 \\<subseteq> U\n 4. ?a2 \\<in> ?A3 \\<rightarrow> carrier K", "let ?ab = \"\\<lambda>u. (emb a A) u \\<oplus>\\<^bsub>K\\<^esub> (emb b B) u\""], ["proof (state)\ngoal (4 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 ?A3\n 2. finite ?A3\n 3. ?A3 \\<subseteq> U\n 4. ?a2 \\<in> ?A3 \\<rightarrow> carrier K", "show finAB: \"finite (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (A \\<union> B)", "using finA finB"], ["proof (prove)\nusing this:\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. finite (A \\<union> B)", "by auto"], ["proof (state)\nthis:\n  finite (A \\<union> B)\n\ngoal (3 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 (A \\<union> B)\n 2. A \\<union> B \\<subseteq> U\n 3. ?a2 \\<in> A \\<union> B \\<rightarrow> carrier K", "show \"A \\<union> B \\<subseteq> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<union> B \\<subseteq> U", "using AU BU"], ["proof (prove)\nusing this:\n  A \\<subseteq> U\n  B \\<subseteq> U\n\ngoal (1 subgoal):\n 1. A \\<union> B \\<subseteq> U", "by auto"], ["proof (state)\nthis:\n  A \\<union> B \\<subseteq> U\n\ngoal (2 subgoals):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?a2 (A \\<union> B)\n 2. ?a2 \\<in> A \\<union> B \\<rightarrow> carrier K", "show \"?ab : A \\<union> B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n    \\<in> A \\<union> B \\<rightarrow> carrier K", "using a' b'"], ["proof (prove)\nusing this:\n  emb a A \\<in> A \\<union> B \\<rightarrow> carrier K\n  emb b B \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n    \\<in> A \\<union> B \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n  \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "have \"v = ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = lincomb (emb a A) (A \\<union> B)", "using va lincomb_restrict[OF A a emb_restrict[symmetric]]"], ["proof (prove)\nusing this:\n  lincomb a A = v\n  lincomb a A = lincomb (emb a A) A\n\ngoal (1 subgoal):\n 1. v = lincomb (emb a A) (A \\<union> B)", "using lincomb_clean[OF A B_A] a'A a'Z finA finB"], ["proof (prove)\nusing this:\n  lincomb a A = v\n  lincomb a A = lincomb (emb a A) A\n  \\<lbrakk>finite A; finite (B - A); ?a \\<in> A \\<rightarrow> carrier K;\n   ?a \\<in> B - A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (A \\<union> (B - A)) = lincomb ?a A\n  emb a A \\<in> A \\<rightarrow> carrier K\n  emb a A \\<in> B - A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n  finite A\n  finite B\n\ngoal (1 subgoal):\n 1. v = lincomb (emb a A) (A \\<union> B)", "by simp"], ["proof (state)\nthis:\n  v = lincomb (emb a A) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "moreover"], ["proof (state)\nthis:\n  v = lincomb (emb a A) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "have \"w = ?w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = lincomb (emb b B) (A \\<union> B)", "apply (subst Un_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. w = lincomb (emb b B) (B \\<union> A)", "using wb lincomb_restrict[OF B b emb_restrict[symmetric]]"], ["proof (prove)\nusing this:\n  lincomb b B = w\n  lincomb b B = lincomb (emb b B) B\n\ngoal (1 subgoal):\n 1. w = lincomb (emb b B) (B \\<union> A)", "using lincomb_clean[OF B A_B] finA finB b'B b'Z"], ["proof (prove)\nusing this:\n  lincomb b B = w\n  lincomb b B = lincomb (emb b B) B\n  \\<lbrakk>finite B; finite (A - B); ?a \\<in> B \\<rightarrow> carrier K;\n   ?a \\<in> A - B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (B \\<union> (A - B)) = lincomb ?a B\n  finite A\n  finite B\n  emb b B \\<in> B \\<rightarrow> carrier K\n  emb b B \\<in> A - B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. w = lincomb (emb b B) (B \\<union> A)", "by simp"], ["proof (state)\nthis:\n  w = lincomb (emb b B) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "ultimately"], ["proof (chain)\npicking this:\n  v = lincomb (emb a A) (A \\<union> B)\n  w = lincomb (emb b B) (A \\<union> B)", "show \"v \\<oplus>\\<^bsub>V\\<^esub> w = lincomb ?ab (A \\<union> B)\""], ["proof (prove)\nusing this:\n  v = lincomb (emb a A) (A \\<union> B)\n  w = lincomb (emb b B) (A \\<union> B)\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "using lincomb_sum[OF finAB] A B a' b'"], ["proof (prove)\nusing this:\n  v = lincomb (emb a A) (A \\<union> B)\n  w = lincomb (emb b B) (A \\<union> B)\n  \\<lbrakk>A \\<union> B \\<subseteq> carrier V;\n   ?a \\<in> A \\<union> B \\<rightarrow> carrier K;\n   ?b \\<in> A \\<union> B \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb\n                     (\\<lambda>v. ?a v \\<oplus>\\<^bsub>K\\<^esub> ?b v)\n                     (A \\<union> B) =\n                    lincomb ?a (A \\<union> B) \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?b (A \\<union> B)\n  A \\<subseteq> carrier V\n  B \\<subseteq> carrier V\n  emb a A \\<in> A \\<union> B \\<rightarrow> carrier K\n  emb b B \\<in> A \\<union> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w =\n    lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n     (A \\<union> B)", "by simp"], ["proof (state)\nthis:\n  v \\<oplus>\\<^bsub>V\\<^esub> w =\n  lincomb (\\<lambda>u. emb a A u \\<oplus>\\<^bsub>K\\<^esub> emb b B u)\n   (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_neg:\n  assumes U: \"U \\<subseteq> carrier V\" and vU: \"v : span U\"\n  shows \"\\<ominus>\\<^bsub>V\\<^esub> v : span U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "have v: \"v : carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "using vU U"], ["proof (prove)\nusing this:\n  v \\<in> span U\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "unfolding span_def"], ["proof (prove)\nusing this:\n  v \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "from vU[unfolded span_def]"], ["proof (chain)\npicking this:\n  v \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}", "obtain a A\n    where finA: \"finite A\"\n      and AU: \"A \\<subseteq> U\"\n      and a: \"a \\<in> A \\<rightarrow> carrier K\"\n      and va: \"v = lincomb a A\""], ["proof (prove)\nusing this:\n  v \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        \\<lbrakk>finite A; A \\<subseteq> U;\n         a \\<in> A \\<rightarrow> carrier K; v = lincomb a A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n  v = lincomb a A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "hence A: \"A \\<subseteq> carrier V\""], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n  v = lincomb a A\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> U\n  a \\<in> A \\<rightarrow> carrier K\n  v = lincomb a A\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "by simp"], ["proof (state)\nthis:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "let ?a = \"\\<lambda>u. \\<ominus>\\<^bsub>K\\<^esub> one K \\<otimes>\\<^bsub>K\\<^esub> a u\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "have \"\\<ominus>\\<^bsub>V\\<^esub> v = \\<ominus>\\<^bsub>K\\<^esub> one K \\<odot>\\<^bsub>V\\<^esub> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v =\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    v", "using smult_minus_1_back[OF v]"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  v\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v =\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    v", "."], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  v\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "also"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  v\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "have \"... = \\<ominus>\\<^bsub>K\\<^esub> one K \\<odot>\\<^bsub>V\\<^esub> lincomb a A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    v =\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a A", "using va"], ["proof (prove)\nusing this:\n  v = lincomb a A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    v =\n    \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n    lincomb a A", "by simp"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "finally"], ["proof (chain)\npicking this:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a A", "have main: \"\\<ominus>\\<^bsub>V\\<^esub> v = lincomb ?a A\""], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<odot>\\<^bsub>V\\<^esub>\n  lincomb a A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v =\n    lincomb\n     (\\<lambda>u.\n         \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n         a u)\n     A", "unfolding lincomb_distrib[OF A a R.a_inv_closed[OF R.one_closed]]"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  lincomb\n   (\\<lambda>u.\n       \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n       a u)\n   A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v =\n    lincomb\n     (\\<lambda>u.\n         \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n         a u)\n     A", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  lincomb\n   (\\<lambda>u.\n       \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n       a u)\n   A\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U", "unfolding span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K}", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a A.\n       \\<ominus>\\<^bsub>V\\<^esub> v = lincomb a A \\<and>\n       finite A \\<and>\n       A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K", "using main a finA AU"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> v =\n  lincomb\n   (\\<lambda>u.\n       \\<ominus>\\<^bsub>K\\<^esub> \\<one>\\<^bsub>K\\<^esub> \\<otimes>\\<^bsub>K\\<^esub>\n       a u)\n   A\n  a \\<in> A \\<rightarrow> carrier K\n  finite A\n  A \\<subseteq> U\n\ngoal (1 subgoal):\n 1. \\<exists>a A.\n       \\<ominus>\\<^bsub>V\\<^esub> v = lincomb a A \\<and>\n       finite A \\<and>\n       A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K", "by force"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_closed[simp]: \"U \\<subseteq> carrier V \\<Longrightarrow> v : span U \\<Longrightarrow> v : carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<subseteq> carrier V; v \\<in> span U\\<rbrakk>\n    \\<Longrightarrow> v \\<in> carrier V", "unfolding span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<subseteq> carrier V;\n     v \\<in> {lincomb a A |a A.\n              finite A \\<and>\n              A \\<subseteq> U \\<and>\n              a \\<in> A \\<rightarrow> carrier K}\\<rbrakk>\n    \\<Longrightarrow> v \\<in> carrier V", "by auto"], ["", "lemma span_add:\n  assumes U: \"U \\<subseteq> carrier V\" and vU: \"v : span U\" and w[simp]: \"w : carrier V\"\n  shows \"w : span U \\<longleftrightarrow> v \\<oplus>\\<^bsub>V\\<^esub> w : span U\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (w \\<in> span U) = (v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. w \\<in> span U \\<Longrightarrow>\n    v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U\n 2. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U \\<Longrightarrow>\n    w \\<in> span U", "show \"?L \\<Longrightarrow> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> span U \\<Longrightarrow>\n    v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "using span_add1[OF U vU]"], ["proof (prove)\nusing this:\n  ?w \\<in> span U \\<Longrightarrow>\n  v \\<oplus>\\<^bsub>V\\<^esub> ?w \\<in> span U\n\ngoal (1 subgoal):\n 1. w \\<in> span U \\<Longrightarrow>\n    v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U", "by auto"], ["proof (state)\nthis:\n  w \\<in> span U \\<Longrightarrow>\n  v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U \\<Longrightarrow>\n    w \\<in> span U", "assume R: \"?R\""], ["proof (state)\nthis:\n  v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U\n\ngoal (1 subgoal):\n 1. v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U \\<Longrightarrow>\n    w \\<in> span U", "show \"?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> span U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w \\<in> span U", "have v[simp]: \"v : carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "using vU U"], ["proof (prove)\nusing this:\n  v \\<in> span U\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. v \\<in> carrier V", "by simp"], ["proof (state)\nthis:\n  v \\<in> carrier V\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "have \"w = zero V \\<oplus>\\<^bsub>V\\<^esub> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w", "using M.l_zero"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier V \\<Longrightarrow>\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> ?x = ?x\n\ngoal (1 subgoal):\n 1. w = \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w", "by auto"], ["proof (state)\nthis:\n  w = \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "also"], ["proof (state)\nthis:\n  w = \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "have \"... = \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w =\n    \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    w", "using M.l_neg"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier V \\<Longrightarrow>\n  \\<ominus>\\<^bsub>V\\<^esub> ?x \\<oplus>\\<^bsub>V\\<^esub> ?x =\n  \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w =\n    \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    w", "by auto"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w =\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  w\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "also"], ["proof (state)\nthis:\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> w =\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  w\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "have \"... = \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub> (v \\<oplus>\\<^bsub>V\\<^esub> w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    w =\n    \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    (v \\<oplus>\\<^bsub>V\\<^esub> w)", "using M.l_zero M.a_assoc M.a_closed"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier V \\<Longrightarrow>\n  \\<zero>\\<^bsub>V\\<^esub> \\<oplus>\\<^bsub>V\\<^esub> ?x = ?x\n  \\<lbrakk>?x \\<in> carrier V; ?y \\<in> carrier V;\n   ?z \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    ?y \\<oplus>\\<^bsub>V\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    (?y \\<oplus>\\<^bsub>V\\<^esub> ?z)\n  \\<lbrakk>?x \\<in> carrier V; ?y \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>V\\<^esub> ?y \\<in> carrier V\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    v \\<oplus>\\<^bsub>V\\<^esub>\n    w =\n    \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    (v \\<oplus>\\<^bsub>V\\<^esub> w)", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  w =\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  (v \\<oplus>\\<^bsub>V\\<^esub> w)\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "also"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  v \\<oplus>\\<^bsub>V\\<^esub>\n  w =\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  (v \\<oplus>\\<^bsub>V\\<^esub> w)\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "have \"... : span U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    (v \\<oplus>\\<^bsub>V\\<^esub> w)\n    \\<in> span U", "using span_neg[OF U vU] span_add1[OF U] R"], ["proof (prove)\nusing this:\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<in> span U\n  \\<lbrakk>?v \\<in> span U; ?w \\<in> span U\\<rbrakk>\n  \\<Longrightarrow> ?v \\<oplus>\\<^bsub>V\\<^esub> ?w \\<in> span U\n  v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> span U\n\ngoal (1 subgoal):\n 1. \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n    (v \\<oplus>\\<^bsub>V\\<^esub> w)\n    \\<in> span U", "by auto"], ["proof (state)\nthis:\n  \\<ominus>\\<^bsub>V\\<^esub> v \\<oplus>\\<^bsub>V\\<^esub>\n  (v \\<oplus>\\<^bsub>V\\<^esub> w)\n  \\<in> span U\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "finally"], ["proof (chain)\npicking this:\n  w \\<in> span U", "show ?thesis"], ["proof (prove)\nusing this:\n  w \\<in> span U\n\ngoal (1 subgoal):\n 1. w \\<in> span U", "."], ["proof (state)\nthis:\n  w \\<in> span U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  w \\<in> span U\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lincomb_union:\n  assumes U: \"U \\<subseteq> carrier V\"\n      and U'[simp]: \"U' \\<subseteq> carrier V\"\n      and disj: \"U \\<inter> U' = {}\"\n      and finU: \"finite U\"\n      and finU': \"finite U'\"\n      and a: \"a : U \\<union> U' \\<rightarrow> carrier K\"\n    shows \"lincomb a (U \\<union> U') = lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (U \\<union> U') =\n    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "using finU U disj a"], ["proof (prove)\nusing this:\n  finite U\n  U \\<subseteq> carrier V\n  U \\<inter> U' = {}\n  a \\<in> U \\<union> U' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a (U \\<union> U') =\n    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "proof (induct set:finite)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V; {} \\<inter> U' = {};\n     a \\<in> {} \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> lincomb a ({} \\<union> U') =\n                      lincomb a {} \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V; F \\<inter> U' = {};\n         a \\<in> F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> lincomb a (F \\<union> U') =\n                          lincomb a F \\<oplus>\\<^bsub>V\\<^esub>\n                          lincomb a U';\n        insert x F \\<subseteq> carrier V; insert x F \\<inter> U' = {};\n        a \\<in> insert x F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F \\<union> U') =\n                         lincomb a (insert x F) \\<oplus>\\<^bsub>V\\<^esub>\n                         lincomb a U'", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier V\n  {} \\<inter> U' = {}\n  a \\<in> {} \\<union> U' \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V; {} \\<inter> U' = {};\n     a \\<in> {} \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> lincomb a ({} \\<union> U') =\n                      lincomb a {} \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V; F \\<inter> U' = {};\n         a \\<in> F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> lincomb a (F \\<union> U') =\n                          lincomb a F \\<oplus>\\<^bsub>V\\<^esub>\n                          lincomb a U';\n        insert x F \\<subseteq> carrier V; insert x F \\<inter> U' = {};\n        a \\<in> insert x F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F \\<union> U') =\n                         lincomb a (insert x F) \\<oplus>\\<^bsub>V\\<^esub>\n                         lincomb a U'", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> carrier V\n  {} \\<inter> U' = {}\n  a \\<in> {} \\<union> U' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a ({} \\<union> U') =\n    lincomb a {} \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "by (subst(2) lincomb_def, simp)"], ["proof (state)\nthis:\n  lincomb a ({} \\<union> U') =\n  lincomb a {} \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V; F \\<inter> U' = {};\n         a \\<in> F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> lincomb a (F \\<union> U') =\n                          lincomb a F \\<oplus>\\<^bsub>V\\<^esub>\n                          lincomb a U';\n        insert x F \\<subseteq> carrier V; insert x F \\<inter> U' = {};\n        a \\<in> insert x F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F \\<union> U') =\n                         lincomb a (insert x F) \\<oplus>\\<^bsub>V\\<^esub>\n                         lincomb a U'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V; F \\<inter> U' = {};\n         a \\<in> F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> lincomb a (F \\<union> U') =\n                          lincomb a F \\<oplus>\\<^bsub>V\\<^esub>\n                          lincomb a U';\n        insert x F \\<subseteq> carrier V; insert x F \\<inter> U' = {};\n        a \\<in> insert x F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F \\<union> U') =\n                         lincomb a (insert x F) \\<oplus>\\<^bsub>V\\<^esub>\n                         lincomb a U'", "case (insert u U)"], ["proof (state)\nthis:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V; U \\<inter> U' = {};\n   a \\<in> U \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb a (U \\<union> U') =\n                    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n  insert u U \\<subseteq> carrier V\n  insert u U \\<inter> U' = {}\n  a \\<in> insert u U \\<union> U' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V; F \\<inter> U' = {};\n         a \\<in> F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> lincomb a (F \\<union> U') =\n                          lincomb a F \\<oplus>\\<^bsub>V\\<^esub>\n                          lincomb a U';\n        insert x F \\<subseteq> carrier V; insert x F \\<inter> U' = {};\n        a \\<in> insert x F \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F \\<union> U') =\n                         lincomb a (insert x F) \\<oplus>\\<^bsub>V\\<^esub>\n                         lincomb a U'", "thus ?case"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V; U \\<inter> U' = {};\n   a \\<in> U \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb a (U \\<union> U') =\n                    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n  insert u U \\<subseteq> carrier V\n  insert u U \\<inter> U' = {}\n  a \\<in> insert u U \\<union> U' \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a (insert u U \\<union> U') =\n    lincomb a (insert u U) \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "unfolding Un_insert_left"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V; U \\<inter> U' = {};\n   a \\<in> U \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb a (U \\<union> U') =\n                    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n  insert u U \\<subseteq> carrier V\n  insert u U \\<inter> U' = {}\n  a \\<in> insert u (U \\<union> U') \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a (insert u (U \\<union> U')) =\n    lincomb a (insert u U) \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "using lincomb_insert2 finU' insert a_assoc"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V; U \\<inter> U' = {};\n   a \\<in> U \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb a (U \\<union> U') =\n                    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n  insert u U \\<subseteq> carrier V\n  insert u U \\<inter> U' = {}\n  a \\<in> insert u (U \\<union> U') \\<rightarrow> carrier K\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V;\n   ?a \\<in> insert ?v ?S \\<rightarrow> carrier K; ?v \\<notin> ?S;\n   ?v \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (insert ?v ?S) =\n                    ?a ?v \\<odot>\\<^bsub>V\\<^esub>\n                    ?v \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?a ?S\n  finite U'\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V; U \\<inter> U' = {};\n   a \\<in> U \\<union> U' \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb a (U \\<union> U') =\n                    lincomb a U \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n  insert u U \\<subseteq> carrier V\n  insert u U \\<inter> U' = {}\n  a \\<in> insert u U \\<union> U' \\<rightarrow> carrier K\n  \\<lbrakk>?x \\<in> carrier V; ?y \\<in> carrier V;\n   ?z \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    ?y \\<oplus>\\<^bsub>V\\<^esub>\n                    ?z =\n                    ?x \\<oplus>\\<^bsub>V\\<^esub>\n                    (?y \\<oplus>\\<^bsub>V\\<^esub> ?z)\n\ngoal (1 subgoal):\n 1. lincomb a (insert u (U \\<union> U')) =\n    lincomb a (insert u U) \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'", "by auto"], ["proof (state)\nthis:\n  lincomb a (insert u U \\<union> U') =\n  lincomb a (insert u U) \\<oplus>\\<^bsub>V\\<^esub> lincomb a U'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_union1:\n  assumes U: \"U \\<subseteq> carrier V\" and U': \"U' \\<subseteq> carrier V\" and UU': \"span U = span U'\"\n      and W: \"W \\<subseteq> carrier V\" and W': \"W' \\<subseteq> carrier V\" and WW': \"span W = span W'\"\n  shows \"span (U \\<union> W) \\<subseteq> span (U' \\<union> W')\" (is \"?L \\<subseteq> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (U \\<union> W) \\<subseteq> span (U' \\<union> W')", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "assume \"x : ?L\""], ["proof (state)\nthis:\n  x \\<in> span (U \\<union> W)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "then"], ["proof (chain)\npicking this:\n  x \\<in> span (U \\<union> W)", "obtain a A\n    where finA: \"finite A\"\n      and AUW: \"A \\<subseteq> U \\<union> W\"\n      and x: \"x = lincomb a A\"\n      and a: \"a : A \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  x \\<in> span (U \\<union> W)\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        \\<lbrakk>finite A; A \\<subseteq> U \\<union> W; x = lincomb a A;\n         a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding span_def"], ["proof (prove)\nusing this:\n  x \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<union> W \\<and>\n           a \\<in> A \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. (\\<And>A a.\n        \\<lbrakk>finite A; A \\<subseteq> U \\<union> W; x = lincomb a A;\n         a \\<in> A \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite A\n  A \\<subseteq> U \\<union> W\n  x = lincomb a A\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "let ?AU = \"A \\<inter> U\" and ?AW = \"A \\<inter> W - U\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have AU: \"?AU \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> U \\<subseteq> carrier V", "using U"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<inter> U \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A \\<inter> U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have AW: \"?AW \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> W - U \\<subseteq> carrier V", "using W"], ["proof (prove)\nusing this:\n  W \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<inter> W - U \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  A \\<inter> W - U \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have disj: \"?AU \\<inter> ?AW = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> U \\<inter> (A \\<inter> W - U) = {}", "by auto"], ["proof (state)\nthis:\n  A \\<inter> U \\<inter> (A \\<inter> W - U) = {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have U'W': \"U' \\<union> W' \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U' \\<union> W' \\<subseteq> carrier V", "using U' W'"], ["proof (prove)\nusing this:\n  U' \\<subseteq> carrier V\n  W' \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. U' \\<union> W' \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  U' \\<union> W' \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have \"?AU \\<union> ?AW = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<inter> U \\<union> (A \\<inter> W - U) = A", "using AUW"], ["proof (prove)\nusing this:\n  A \\<subseteq> U \\<union> W\n\ngoal (1 subgoal):\n 1. A \\<inter> U \\<union> (A \\<inter> W - U) = A", "by auto"], ["proof (state)\nthis:\n  A \\<inter> U \\<union> (A \\<inter> W - U) = A\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "hence \"x = lincomb a (?AU \\<union> ?AW)\""], ["proof (prove)\nusing this:\n  A \\<inter> U \\<union> (A \\<inter> W - U) = A\n\ngoal (1 subgoal):\n 1. x = lincomb a (A \\<inter> U \\<union> (A \\<inter> W - U))", "using x"], ["proof (prove)\nusing this:\n  A \\<inter> U \\<union> (A \\<inter> W - U) = A\n  x = lincomb a A\n\ngoal (1 subgoal):\n 1. x = lincomb a (A \\<inter> U \\<union> (A \\<inter> W - U))", "by auto"], ["proof (state)\nthis:\n  x = lincomb a (A \\<inter> U \\<union> (A \\<inter> W - U))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "hence \"x = lincomb a ?AU \\<oplus>\\<^bsub>V\\<^esub> lincomb a ?AW\""], ["proof (prove)\nusing this:\n  x = lincomb a (A \\<inter> U \\<union> (A \\<inter> W - U))\n\ngoal (1 subgoal):\n 1. x =\n    lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A \\<inter> W - U)", "using lincomb_union[OF AU AW disj] finA a"], ["proof (prove)\nusing this:\n  x = lincomb a (A \\<inter> U \\<union> (A \\<inter> W - U))\n  \\<lbrakk>finite (A \\<inter> U); finite (A \\<inter> W - U);\n   ?a \\<in> A \\<inter> U \\<union> (A \\<inter> W - U) \\<rightarrow>\n            carrier K\\<rbrakk>\n  \\<Longrightarrow> lincomb ?a (A \\<inter> U \\<union> (A \\<inter> W - U)) =\n                    lincomb ?a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n                    lincomb ?a (A \\<inter> W - U)\n  finite A\n  a \\<in> A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. x =\n    lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n    lincomb a (A \\<inter> W - U)", "by auto"], ["proof (state)\nthis:\n  x =\n  lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<inter> W - U)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "moreover"], ["proof (state)\nthis:\n  x =\n  lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<inter> W - U)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "have \"lincomb a ?AU : span U\" and \"lincomb a ?AW : span W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span U &&&\n    lincomb a (A \\<inter> W - U) \\<in> span W", "unfolding span_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U)\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K} &&&\n    lincomb a (A \\<inter> W - U)\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> W \\<and> a \\<in> A \\<rightarrow> carrier K}", "using AU a finA"], ["proof (prove)\nusing this:\n  A \\<inter> U \\<subseteq> carrier V\n  a \\<in> A \\<rightarrow> carrier K\n  finite A\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U)\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> U \\<and> a \\<in> A \\<rightarrow> carrier K} &&&\n    lincomb a (A \\<inter> W - U)\n    \\<in> {lincomb a A |a A.\n           finite A \\<and>\n           A \\<subseteq> W \\<and> a \\<in> A \\<rightarrow> carrier K}", "by auto"], ["proof (state)\nthis:\n  lincomb a (A \\<inter> U) \\<in> span U\n  lincomb a (A \\<inter> W - U) \\<in> span W\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "hence \"lincomb a ?AU : span U'\" and \"lincomb a ?AW : span W'\""], ["proof (prove)\nusing this:\n  lincomb a (A \\<inter> U) \\<in> span U\n  lincomb a (A \\<inter> W - U) \\<in> span W\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span U' &&&\n    lincomb a (A \\<inter> W - U) \\<in> span W'", "using UU' WW'"], ["proof (prove)\nusing this:\n  lincomb a (A \\<inter> U) \\<in> span U\n  lincomb a (A \\<inter> W - U) \\<in> span W\n  span U = span U'\n  span W = span W'\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span U' &&&\n    lincomb a (A \\<inter> W - U) \\<in> span W'", "by auto"], ["proof (state)\nthis:\n  lincomb a (A \\<inter> U) \\<in> span U'\n  lincomb a (A \\<inter> W - U) \\<in> span W'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "hence \"lincomb a ?AU : ?R\" and \"lincomb a ?AW : ?R\""], ["proof (prove)\nusing this:\n  lincomb a (A \\<inter> U) \\<in> span U'\n  lincomb a (A \\<inter> W - U) \\<in> span W'\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W') &&&\n    lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')", "using span_is_monotone[OF Un_upper1, of U']"], ["proof (prove)\nusing this:\n  lincomb a (A \\<inter> U) \\<in> span U'\n  lincomb a (A \\<inter> W - U) \\<in> span W'\n  span U' \\<subseteq> span (U' \\<union> ?B1)\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W') &&&\n    lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')", "using span_is_monotone[OF Un_upper2, of W']"], ["proof (prove)\nusing this:\n  lincomb a (A \\<inter> U) \\<in> span U'\n  lincomb a (A \\<inter> W - U) \\<in> span W'\n  span U' \\<subseteq> span (U' \\<union> ?B1)\n  span W' \\<subseteq> span (?A1 \\<union> W')\n\ngoal (1 subgoal):\n 1. lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W') &&&\n    lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')", "by auto"], ["proof (state)\nthis:\n  lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W')\n  lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> span (U \\<union> W) \\<Longrightarrow>\n       x \\<in> span (U' \\<union> W')", "ultimately"], ["proof (chain)\npicking this:\n  x =\n  lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<inter> W - U)\n  lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W')\n  lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')", "show \"x : ?R\""], ["proof (prove)\nusing this:\n  x =\n  lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<inter> W - U)\n  lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W')\n  lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')\n\ngoal (1 subgoal):\n 1. x \\<in> span (U' \\<union> W')", "using span_add1[OF U'W']"], ["proof (prove)\nusing this:\n  x =\n  lincomb a (A \\<inter> U) \\<oplus>\\<^bsub>V\\<^esub>\n  lincomb a (A \\<inter> W - U)\n  lincomb a (A \\<inter> U) \\<in> span (U' \\<union> W')\n  lincomb a (A \\<inter> W - U) \\<in> span (U' \\<union> W')\n  \\<lbrakk>?v \\<in> span (U' \\<union> W');\n   ?w \\<in> span (U' \\<union> W')\\<rbrakk>\n  \\<Longrightarrow> ?v \\<oplus>\\<^bsub>V\\<^esub> ?w\n                    \\<in> span (U' \\<union> W')\n\ngoal (1 subgoal):\n 1. x \\<in> span (U' \\<union> W')", "by auto"], ["proof (state)\nthis:\n  x \\<in> span (U' \\<union> W')\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma span_Un:\n  assumes U: \"U \\<subseteq> carrier V\" and U': \"U' \\<subseteq> carrier V\" and UU': \"span U = span U'\"\n      and W: \"W \\<subseteq> carrier V\" and W': \"W' \\<subseteq> carrier V\" and WW': \"span W = span W'\"\n  shows \"span (U \\<union> W) = span (U' \\<union> W')\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. span (U \\<union> W) = span (U' \\<union> W')", "using span_union1[OF assms]"], ["proof (prove)\nusing this:\n  span (U \\<union> W) \\<subseteq> span (U' \\<union> W')\n\ngoal (1 subgoal):\n 1. span (U \\<union> W) = span (U' \\<union> W')", "using span_union1[OF U' U UU'[symmetric] W' W WW'[symmetric]]"], ["proof (prove)\nusing this:\n  span (U \\<union> W) \\<subseteq> span (U' \\<union> W')\n  span (U' \\<union> W') \\<subseteq> span (U \\<union> W)\n\ngoal (1 subgoal):\n 1. span (U \\<union> W) = span (U' \\<union> W')", "by auto"], ["", "lemma lincomb_zero:\n  assumes U: \"U \\<subseteq> carrier V\" and a: \"a : U \\<rightarrow> {zero K}\"\n  shows \"lincomb a U = zero V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a U = \\<zero>\\<^bsub>V\\<^esub>", "using U a"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier V\n  a \\<in> U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a U = \\<zero>\\<^bsub>V\\<^esub>", "proof (induct U rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a {} = \\<zero>\\<^bsub>V\\<^esub>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier V\n  a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> {} \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a {} = \\<zero>\\<^bsub>V\\<^esub>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a {} = \\<zero>\\<^bsub>V\\<^esub>", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>V\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>V\\<^esub> v) =\n    \\<zero>\\<^bsub>V\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lincomb a {} = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "case (insert u U)"], ["proof (state)\nthis:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>V\\<^esub>\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "hence \"a \\<in> insert u U \\<rightarrow> carrier K\""], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>V\\<^esub>\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. a \\<in> insert u U \\<rightarrow> carrier K", "using zero_closed"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>V\\<^esub>\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n  \\<zero>\\<^bsub>V\\<^esub> \\<in> carrier V\n\ngoal (1 subgoal):\n 1. a \\<in> insert u U \\<rightarrow> carrier K", "by force"], ["proof (state)\nthis:\n  a \\<in> insert u U \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>V\\<^esub>;\n        insert x F \\<subseteq> carrier V;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>V\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<in> insert u U \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. lincomb a (insert u U) = \\<zero>\\<^bsub>V\\<^esub>", "using insert"], ["proof (prove)\nusing this:\n  a \\<in> insert u U \\<rightarrow> carrier K\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier V;\n   a \\<in> U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>V\\<^esub>\n  insert u U \\<subseteq> carrier V\n  a \\<in> insert u U \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. lincomb a (insert u U) = \\<zero>\\<^bsub>V\\<^esub>", "by (subst lincomb_insert2; auto)"], ["proof (state)\nthis:\n  lincomb a (insert u U) = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier V;\n        a \\<in> A \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>V\\<^esub>", "qed (auto simp: lincomb_def)"], ["", "end"], ["", "context module\nbegin"], ["", "lemma lincomb_empty[simp]: \"lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n    \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["", "end"], ["", "context linear_map\nbegin"], ["", "interpretation Ker: vectorspace K \"(V.vs kerT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (V.vs kerT)", "using kerT_is_subspace"], ["proof (prove)\nusing this:\n  subspace K kerT V\n\ngoal (1 subgoal):\n 1. vectorspace K (V.vs kerT)", "using V.subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K kerT V\n  subspace K ?W V \\<Longrightarrow> vectorspace K (V.vs ?W)\n\ngoal (1 subgoal):\n 1. vectorspace K (V.vs kerT)", "by blast"], ["", "interpretation im: vectorspace K \"(W.vs imT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (W.vs imT)", "using imT_is_subspace"], ["proof (prove)\nusing this:\n  subspace K imT W\n\ngoal (1 subgoal):\n 1. vectorspace K (W.vs imT)", "using W.subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K imT W\n  subspace K ?W W \\<Longrightarrow> vectorspace K (W.vs ?W)\n\ngoal (1 subgoal):\n 1. vectorspace K (W.vs imT)", "by blast"], ["", "lemma inj_imp_Ker0:\nassumes \"inj_on T (carrier V)\"\nshows \"carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}", "unfolding mod_hom.ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (V.vs {v \\<in> carrier V. T v = \\<zero>\\<^bsub>W\\<^esub>}) =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "using assms inj_on_contraD"], ["proof (prove)\nusing this:\n  inj_on T (carrier V)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<noteq> ?y; ?x \\<in> ?A; ?y \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<noteq> ?f ?y\n\ngoal (1 subgoal):\n 1. carrier (V.vs {v \\<in> carrier V. T v = \\<zero>\\<^bsub>W\\<^esub>}) =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "by fastforce"], ["", "lemma Ke0_imp_inj:\nassumes c: \"carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\"\nshows \"inj_on T (carrier V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on T (carrier V)", "proof (auto simp add: inj_on_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume x: \"x \\<in> carrier V\" and y: \"y \\<in> carrier V\"\n  and Tx_Ty: \"T x = T y\""], ["proof (state)\nthis:\n  x \\<in> carrier V\n  y \\<in> carrier V\n  T x = T y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"T x \\<ominus>\\<^bsub>W\\<^esub> T y = \\<zero>\\<^bsub>W\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<in> carrier V\n  y \\<in> carrier V\n  T x = T y\n\ngoal (1 subgoal):\n 1. T x \\<ominus>\\<^bsub>W\\<^esub> T y = \\<zero>\\<^bsub>W\\<^esub>", "using W.module.M.minus_other_side"], ["proof (prove)\nusing this:\n  x \\<in> carrier V\n  y \\<in> carrier V\n  T x = T y\n  \\<lbrakk>?a \\<in> carrier W; ?b \\<in> carrier W\\<rbrakk>\n  \\<Longrightarrow> (?a \\<ominus>\\<^bsub>W\\<^esub> ?b =\n                     \\<zero>\\<^bsub>W\\<^esub>) =\n                    (?a = ?b)\n\ngoal (1 subgoal):\n 1. T x \\<ominus>\\<^bsub>W\\<^esub> T y = \\<zero>\\<^bsub>W\\<^esub>", "by auto"], ["proof (state)\nthis:\n  T x \\<ominus>\\<^bsub>W\\<^esub> T y = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"T (x \\<ominus>\\<^bsub>V\\<^esub> y) = \\<zero>\\<^bsub>W\\<^esub>\""], ["proof (prove)\nusing this:\n  T x \\<ominus>\\<^bsub>W\\<^esub> T y = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. T (x \\<ominus>\\<^bsub>V\\<^esub> y) = \\<zero>\\<^bsub>W\\<^esub>", "by (simp add: x y)"], ["proof (state)\nthis:\n  T (x \\<ominus>\\<^bsub>V\\<^esub> y) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"x \\<ominus>\\<^bsub>V\\<^esub> y \\<in> carrier (V.vs kerT)\""], ["proof (prove)\nusing this:\n  T (x \\<ominus>\\<^bsub>V\\<^esub> y) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>V\\<^esub> y \\<in> carrier (V.vs kerT)", "by (simp add: mod_hom.ker_def x y)"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>V\\<^esub> y \\<in> carrier (V.vs kerT)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "hence \"x \\<ominus>\\<^bsub>V\\<^esub> y = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>V\\<^esub> y \\<in> carrier (V.vs kerT)\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>V\\<^esub> y = \\<zero>\\<^bsub>V\\<^esub>", "using c"], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>V\\<^esub> y \\<in> carrier (V.vs kerT)\n  carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\n\ngoal (1 subgoal):\n 1. x \\<ominus>\\<^bsub>V\\<^esub> y = \\<zero>\\<^bsub>V\\<^esub>", "by fast"], ["proof (state)\nthis:\n  x \\<ominus>\\<^bsub>V\\<^esub> y = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier V; y \\<in> carrier V; T x = T y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y\""], ["proof (prove)\nusing this:\n  x \\<ominus>\\<^bsub>V\\<^esub> y = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. x = y", "by (simp add: x y)"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary Ke0_iff_inj: \"inj_on T (carrier V) = (carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on T (carrier V) =\n    (carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>})", "using inj_imp_Ker0 Ke0_imp_inj"], ["proof (prove)\nusing this:\n  inj_on T (carrier V) \\<Longrightarrow>\n  carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\n  carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>} \\<Longrightarrow>\n  inj_on T (carrier V)\n\ngoal (1 subgoal):\n 1. inj_on T (carrier V) =\n    (carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>})", "by auto"], ["", "lemma inj_imp_dim_ker0:\nassumes \"inj_on T (carrier V)\"\nshows \"vectorspace.dim K (V.vs kerT) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ker.dim = 0", "proof (unfold Ker.dim_def, rule Least_eq_0, rule exI[of _ \"{}\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "have Ker_rw: \"carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}", "unfolding mod_hom.ker_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (V.vs {v \\<in> carrier V. T v = \\<zero>\\<^bsub>W\\<^esub>}) =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "using assms inj_on_contraD"], ["proof (prove)\nusing this:\n  inj_on T (carrier V)\n  \\<lbrakk>inj_on ?f ?A; ?x \\<noteq> ?y; ?x \\<in> ?A; ?y \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<noteq> ?f ?y\n\ngoal (1 subgoal):\n 1. carrier (V.vs {v \\<in> carrier V. T v = \\<zero>\\<^bsub>W\\<^esub>}) =\n    {\\<zero>\\<^bsub>V\\<^esub>}", "by fastforce"], ["proof (state)\nthis:\n  carrier (V.vs kerT) = {\\<zero>\\<^bsub>V\\<^esub>}\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "have \"finite {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {}", "by simp"], ["proof (state)\nthis:\n  finite {}\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "moreover"], ["proof (state)\nthis:\n  finite {}\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "have \"card {} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {} = 0", "by simp"], ["proof (state)\nthis:\n  card {} = 0\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "moreover"], ["proof (state)\nthis:\n  card {} = 0\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "have \"{} \\<subseteq> carrier (V.vs kerT)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> carrier (V.vs kerT)", "by simp"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier (V.vs kerT)\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "moreover"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier (V.vs kerT)\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "have \"Ker.gen_set {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ker.gen_set {}", "unfolding Ker_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. Ker.span {} = {\\<zero>\\<^bsub>V\\<^esub>}", "by (simp add: Ker.span_empty)"], ["proof (state)\nthis:\n  Ker.gen_set {}\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "ultimately"], ["proof (chain)\npicking this:\n  finite {}\n  card {} = 0\n  {} \\<subseteq> carrier (V.vs kerT)\n  Ker.gen_set {}", "show \"finite {} \\<and> card {} = 0 \\<and> {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}\""], ["proof (prove)\nusing this:\n  finite {}\n  card {} = 0\n  {} \\<subseteq> carrier (V.vs kerT)\n  Ker.gen_set {}\n\ngoal (1 subgoal):\n 1. finite {} \\<and>\n    card {} = 0 \\<and>\n    {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}", "by simp"], ["proof (state)\nthis:\n  finite {} \\<and>\n  card {} = 0 \\<and>\n  {} \\<subseteq> carrier (V.vs kerT) \\<and> Ker.gen_set {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma surj_imp_imT_carrier:\nassumes surj: \"T` (carrier V) = carrier W\"\nshows \"(imT) = carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. imT = carrier W", "by (simp add: surj im_def)"], ["", "lemma dim_eq:\nassumes fin_dim_V: \"V.fin_dim\"\nand i: \"inj_on T (carrier V)\" and surj: \"T` (carrier V) = carrier W\"\nshows \"V.dim = W.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.dim = W.dim", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V.dim = W.dim", "have dim0: \"vectorspace.dim K (V.vs kerT) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ker.dim = 0", "by (rule inj_imp_dim_ker0[OF i])"], ["proof (state)\nthis:\n  Ker.dim = 0\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "have imT_W: \"(imT) = carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. imT = carrier W", "by (rule surj_imp_imT_carrier[OF surj])"], ["proof (state)\nthis:\n  imT = carrier W\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "have rnt: \"vectorspace.dim K (W.vs imT) + vectorspace.dim K (V.vs kerT) = V.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im.dim + Ker.dim = V.dim", "by (rule rank_nullity[OF fin_dim_V])"], ["proof (state)\nthis:\n  im.dim + Ker.dim = V.dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "hence \"V.dim = vectorspace.dim K (W.vs imT)\""], ["proof (prove)\nusing this:\n  im.dim + Ker.dim = V.dim\n\ngoal (1 subgoal):\n 1. V.dim = im.dim", "using dim0"], ["proof (prove)\nusing this:\n  im.dim + Ker.dim = V.dim\n  Ker.dim = 0\n\ngoal (1 subgoal):\n 1. V.dim = im.dim", "by auto"], ["proof (state)\nthis:\n  V.dim = im.dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "also"], ["proof (state)\nthis:\n  V.dim = im.dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "have \"...  = W.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. im.dim = W.dim", "using imT_W"], ["proof (prove)\nusing this:\n  imT = carrier W\n\ngoal (1 subgoal):\n 1. im.dim = W.dim", "by auto"], ["proof (state)\nthis:\n  im.dim = W.dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "finally"], ["proof (chain)\npicking this:\n  V.dim = W.dim", "show ?thesis"], ["proof (prove)\nusing this:\n  V.dim = W.dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "using fin_dim_V"], ["proof (prove)\nusing this:\n  V.dim = W.dim\n  V.fin_dim\n\ngoal (1 subgoal):\n 1. V.dim = W.dim", "by auto"], ["proof (state)\nthis:\n  V.dim = W.dim\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lincomb_linear_image:\nassumes inj_T: \"inj_on T (carrier V)\"\nassumes A_in_V: \"A \\<subseteq> carrier V\" and a: \"a \\<in> (T`A) \\<rightarrow> carrier K\"\nassumes f: \"finite A\"\nshows \"W.module.lincomb a (T`A) = T (V.module.lincomb (a \\<circ> T) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` A) = T (V.module.lincomb (a \\<circ> T) A)", "using f"], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` A) = T (V.module.lincomb (a \\<circ> T) A)", "using A_in_V a"], ["proof (prove)\nusing this:\n  finite A\n  A \\<subseteq> carrier V\n  a \\<in> T ` A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` A) = T (V.module.lincomb (a \\<circ> T) A)", "proof (induct A)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> T ` {} \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> W.module.lincomb a (T ` {}) =\n                      T (V.module.lincomb (a \\<circ> T) {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier V\n  a \\<in> T ` {} \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. \\<lbrakk>{} \\<subseteq> carrier V;\n     a \\<in> T ` {} \\<rightarrow> carrier K\\<rbrakk>\n    \\<Longrightarrow> W.module.lincomb a (T ` {}) =\n                      T (V.module.lincomb (a \\<circ> T) {})\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "thus ?case"], ["proof (prove)\nusing this:\n  {} \\<subseteq> carrier V\n  a \\<in> T ` {} \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` {}) = T (V.module.lincomb (a \\<circ> T) {})", "by auto"], ["proof (state)\nthis:\n  W.module.lincomb a (T ` {}) = T (V.module.lincomb (a \\<circ> T) {})\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  \\<lbrakk>A \\<subseteq> carrier V;\n   a \\<in> T ` A \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> W.module.lincomb a (T ` A) =\n                    T (V.module.lincomb (a \\<circ> T) A)\n  insert x A \\<subseteq> carrier V\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have T_insert_rw: \"T ` insert x A = insert (T x) (T` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ` insert x A = insert (T x) (T ` A)", "by simp"], ["proof (state)\nthis:\n  T ` insert x A = insert (T x) (T ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"W.module.lincomb a (T ` insert x A) = W.module.lincomb a (insert (T x) (T` A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` insert x A) =\n    W.module.lincomb a (insert (T x) (T ` A))", "unfolding T_insert_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lincomb a (insert (T x) (T ` A)) =\n    W.module.lincomb a (insert (T x) (T ` A))", ".."], ["proof (state)\nthis:\n  W.module.lincomb a (T ` insert x A) =\n  W.module.lincomb a (insert (T x) (T ` A))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "also"], ["proof (state)\nthis:\n  W.module.lincomb a (T ` insert x A) =\n  W.module.lincomb a (insert (T x) (T ` A))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"... =  a (T x) \\<odot>\\<^bsub>W\\<^esub> (T x) \\<oplus>\\<^bsub>W\\<^esub> W.module.lincomb a (T` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lincomb a (insert (T x) (T ` A)) =\n    a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    W.module.lincomb a (T ` A)", "proof (rule W.lincomb_insert2)"], ["proof (state)\ngoal (5 subgoals):\n 1. finite (T ` A)\n 2. T ` A \\<subseteq> carrier W\n 3. a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K\n 4. T x \\<notin> T ` A\n 5. T x \\<in> carrier W", "show \"finite (T ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (T ` A)", "by (simp add: insert.hyps(1))"], ["proof (state)\nthis:\n  finite (T ` A)\n\ngoal (4 subgoals):\n 1. T ` A \\<subseteq> carrier W\n 2. a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K\n 3. T x \\<notin> T ` A\n 4. T x \\<in> carrier W", "show \"T ` A \\<subseteq> carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ` A \\<subseteq> carrier W", "using insert.prems(1)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. T ` A \\<subseteq> carrier W", "by auto"], ["proof (state)\nthis:\n  T ` A \\<subseteq> carrier W\n\ngoal (3 subgoals):\n 1. a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K\n 2. T x \\<notin> T ` A\n 3. T x \\<in> carrier W", "show \"a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K", "using insert.prems(2)"], ["proof (prove)\nusing this:\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K", "by blast"], ["proof (state)\nthis:\n  a \\<in> insert (T x) (T ` A) \\<rightarrow> carrier K\n\ngoal (2 subgoals):\n 1. T x \\<notin> T ` A\n 2. T x \\<in> carrier W", "show \"T x \\<notin> T ` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T x \\<notin> T ` A", "by (meson inj_T inj_on_image_mem_iff insert.hyps(2) insert.prems(1) insert_subset)"], ["proof (state)\nthis:\n  T x \\<notin> T ` A\n\ngoal (1 subgoal):\n 1. T x \\<in> carrier W", "show \"T x \\<in> carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T x \\<in> carrier W", "using insert.prems(1)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. T x \\<in> carrier W", "by blast"], ["proof (state)\nthis:\n  T x \\<in> carrier W\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W.module.lincomb a (insert (T x) (T ` A)) =\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  W.module.lincomb a (T ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "also"], ["proof (state)\nthis:\n  W.module.lincomb a (insert (T x) (T ` A)) =\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  W.module.lincomb a (T ` A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"... = a (T x) \\<odot>\\<^bsub>W\\<^esub> (T x) \\<oplus>\\<^bsub>W\\<^esub> (T (V.module.lincomb (a \\<circ> T) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    W.module.lincomb a (T ` A) =\n    a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A)", "using insert.hyps(3) insert.prems(1) insert.prems(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>A \\<subseteq> carrier V;\n   a \\<in> T ` A \\<rightarrow> carrier K\\<rbrakk>\n  \\<Longrightarrow> W.module.lincomb a (T ` A) =\n                    T (V.module.lincomb (a \\<circ> T) A)\n  insert x A \\<subseteq> carrier V\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    W.module.lincomb a (T ` A) =\n    a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A)", "by fastforce"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  W.module.lincomb a (T ` A) =\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "also"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  W.module.lincomb a (T ` A) =\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"... = T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub> (T (V.module.lincomb (a \\<circ> T) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A) =\n    T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A)", "using insert.prems(1) insert.prems(2)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> carrier V\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A) =\n    T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A)", "by auto"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A) =\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "also"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>W\\<^esub> T x \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A) =\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"... = T ((a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>V\\<^esub> (V.module.lincomb (a \\<circ> T) A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n    T (V.module.lincomb (a \\<circ> T) A) =\n    T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n       V.module.lincomb (a \\<circ> T) A)", "proof (rule T_add[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V\n 2. V.module.lincomb (a \\<circ> T) A \\<in> carrier V", "show \"a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "using insert.prems(1) insert.prems(2)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> carrier V\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V", "by auto"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<in> carrier V\n\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) A \\<in> carrier V", "show \"V.module.lincomb (a \\<circ> T) A \\<in> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) A \\<in> carrier V", "proof (rule V.module.lincomb_closed)"], ["proof (state)\ngoal (2 subgoals):\n 1. A \\<subseteq> carrier V\n 2. a \\<circ> T \\<in> A \\<rightarrow> carrier K", "show \"A \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "using insert.prems(1)"], ["proof (prove)\nusing this:\n  insert x A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. A \\<subseteq> carrier V", "by blast"], ["proof (state)\nthis:\n  A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> A \\<rightarrow> carrier K", "show \"a \\<circ> T \\<in> A \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> A \\<rightarrow> carrier K", "using coeff_in_ring insert.prems(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?A \\<rightarrow> carrier K; ?x \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> ?a ?x \\<in> carrier K\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> A \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<circ> T \\<in> A \\<rightarrow> carrier K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V.module.lincomb (a \\<circ> T) A \\<in> carrier V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A) =\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n     V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "also"], ["proof (state)\nthis:\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x) \\<oplus>\\<^bsub>W\\<^esub>\n  T (V.module.lincomb (a \\<circ> T) A) =\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n     V.module.lincomb (a \\<circ> T) A)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "have \"... = T (V.module.lincomb (a \\<circ> T) (insert x A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n       V.module.lincomb (a \\<circ> T) A) =\n    T (V.module.lincomb (a \\<circ> T) (insert x A))", "proof (rule arg_cong[of _ _ T])"], ["proof (state)\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n    V.module.lincomb (a \\<circ> T) A =\n    V.module.lincomb (a \\<circ> T) (insert x A)", "have \"a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K", "using comp_def insert.prems(2)"], ["proof (prove)\nusing this:\n  ?f \\<circ> ?g = (\\<lambda>x. ?f (?g x))\n  a \\<in> T ` insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n    V.module.lincomb (a \\<circ> T) A =\n    V.module.lincomb (a \\<circ> T) (insert x A)", "then"], ["proof (chain)\npicking this:\n  a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K", "show \"a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub> V.module.lincomb (a \\<circ> T) A \n      = V.module.lincomb (a \\<circ> T) (insert x A)\""], ["proof (prove)\nusing this:\n  a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n    V.module.lincomb (a \\<circ> T) A =\n    V.module.lincomb (a \\<circ> T) (insert x A)", "using V.lincomb_insert2 insert.hyps(1) insert.hyps(2) insert.prems(1)"], ["proof (prove)\nusing this:\n  a \\<circ> T \\<in> insert x A \\<rightarrow> carrier K\n  \\<lbrakk>finite ?S; ?S \\<subseteq> carrier V;\n   ?a \\<in> insert ?v ?S \\<rightarrow> carrier K; ?v \\<notin> ?S;\n   ?v \\<in> carrier V\\<rbrakk>\n  \\<Longrightarrow> V.module.lincomb ?a (insert ?v ?S) =\n                    ?a ?v \\<odot>\\<^bsub>V\\<^esub>\n                    ?v \\<oplus>\\<^bsub>V\\<^esub>\n                    V.module.lincomb ?a ?S\n  finite A\n  x \\<notin> A\n  insert x A \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n    V.module.lincomb (a \\<circ> T) A =\n    V.module.lincomb (a \\<circ> T) (insert x A)", "by force"], ["proof (state)\nthis:\n  a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n  V.module.lincomb (a \\<circ> T) A =\n  V.module.lincomb (a \\<circ> T) (insert x A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  T (a (T x) \\<odot>\\<^bsub>V\\<^esub> x \\<oplus>\\<^bsub>V\\<^esub>\n     V.module.lincomb (a \\<circ> T) A) =\n  T (V.module.lincomb (a \\<circ> T) (insert x A))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier V;\n         a \\<in> T ` F \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> W.module.lincomb a (T ` F) =\n                          T (V.module.lincomb (a \\<circ> T) F);\n        insert x F \\<subseteq> carrier V;\n        a \\<in> T ` insert x F \\<rightarrow> carrier K\\<rbrakk>\n       \\<Longrightarrow> W.module.lincomb a (T ` insert x F) =\n                         T (V.module.lincomb (a \\<circ> T) (insert x F))", "finally"], ["proof (chain)\npicking this:\n  W.module.lincomb a (T ` insert x A) =\n  T (V.module.lincomb (a \\<circ> T) (insert x A))", "show ?case"], ["proof (prove)\nusing this:\n  W.module.lincomb a (T ` insert x A) =\n  T (V.module.lincomb (a \\<circ> T) (insert x A))\n\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` insert x A) =\n    T (V.module.lincomb (a \\<circ> T) (insert x A))", "."], ["proof (state)\nthis:\n  W.module.lincomb a (T ` insert x A) =\n  T (V.module.lincomb (a \\<circ> T) (insert x A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma surj_fin_dim:  \n  assumes fd: \"V.fin_dim\" and surj: \"T` (carrier V) = carrier W\"\n  shows image_fin_dim: \"W.fin_dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.fin_dim", "using rank_nullity_main(2)[OF fd surj]"], ["proof (prove)\nusing this:\n  W.fin_dim\n\ngoal (1 subgoal):\n 1. W.fin_dim", "."], ["", "lemma linear_inj_image_is_basis:\nassumes inj_T: \"inj_on T (carrier V)\" and surj: \"T` (carrier V) = carrier W\"\nand basis_B: \"V.basis B\"\nand fin_dim_V: \"V.fin_dim\"\nshows \"W.basis (T`B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.basis (T ` B)", "proof (rule W.dim_li_is_basis)"], ["proof (state)\ngoal (5 subgoals):\n 1. W.fin_dim\n 2. finite (T ` B)\n 3. T ` B \\<subseteq> carrier W\n 4. W.module.lin_indpt (T ` B)\n 5. W.dim \\<le> card (T ` B)", "have lm: \"linear_map K V W T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. linear_map K V W T", "by intro_locales"], ["proof (state)\nthis:\n  linear_map K V W T\n\ngoal (5 subgoals):\n 1. W.fin_dim\n 2. finite (T ` B)\n 3. T ` B \\<subseteq> carrier W\n 4. W.module.lin_indpt (T ` B)\n 5. W.dim \\<le> card (T ` B)", "have inj_TB: \"inj_on T B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on T B", "by (meson basis_B inj_T subset_inj_on V.basis_def)"], ["proof (state)\nthis:\n  inj_on T B\n\ngoal (5 subgoals):\n 1. W.fin_dim\n 2. finite (T ` B)\n 3. T ` B \\<subseteq> carrier W\n 4. W.module.lin_indpt (T ` B)\n 5. W.dim \\<le> card (T ` B)", "show \"W.fin_dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.fin_dim", "by (rule surj_fin_dim[OF fin_dim_V surj])"], ["proof (state)\nthis:\n  W.fin_dim\n\ngoal (4 subgoals):\n 1. finite (T ` B)\n 2. T ` B \\<subseteq> carrier W\n 3. W.module.lin_indpt (T ` B)\n 4. W.dim \\<le> card (T ` B)", "show \"finite (T ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (T ` B)", "proof (rule finite_imageI, rule V.fin[OF fin_dim_V])"], ["proof (state)\ngoal (2 subgoals):\n 1. V.module.lin_indpt B\n 2. B \\<subseteq> carrier V", "show \"V.module.lin_indpt B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.module.lin_indpt B", "using basis_B"], ["proof (prove)\nusing this:\n  V.basis B\n\ngoal (1 subgoal):\n 1. V.module.lin_indpt B", "unfolding V.basis_def"], ["proof (prove)\nusing this:\n  V.module.lin_indpt B \\<and>\n  V.module.gen_set B \\<and> B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. V.module.lin_indpt B", "by auto"], ["proof (state)\nthis:\n  V.module.lin_indpt B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "show \"B \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "using basis_B"], ["proof (prove)\nusing this:\n  V.basis B\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "unfolding V.basis_def"], ["proof (prove)\nusing this:\n  V.module.lin_indpt B \\<and>\n  V.module.gen_set B \\<and> B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> carrier V\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite (T ` B)\n\ngoal (3 subgoals):\n 1. T ` B \\<subseteq> carrier W\n 2. W.module.lin_indpt (T ` B)\n 3. W.dim \\<le> card (T ` B)", "show \"T ` B \\<subseteq> carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ` B \\<subseteq> carrier W", "using basis_B"], ["proof (prove)\nusing this:\n  V.basis B\n\ngoal (1 subgoal):\n 1. T ` B \\<subseteq> carrier W", "unfolding V.basis_def"], ["proof (prove)\nusing this:\n  V.module.lin_indpt B \\<and>\n  V.module.gen_set B \\<and> B \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. T ` B \\<subseteq> carrier W", "by auto"], ["proof (state)\nthis:\n  T ` B \\<subseteq> carrier W\n\ngoal (2 subgoals):\n 1. W.module.lin_indpt (T ` B)\n 2. W.dim \\<le> card (T ` B)", "show \"W.dim \\<le> card (T ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "have d: \"V.dim = W.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.dim = W.dim", "by (rule dim_eq[OF fin_dim_V inj_T surj])"], ["proof (state)\nthis:\n  V.dim = W.dim\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "have \"card (T` B) = card B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (T ` B) = card B", "by (simp add: card_image inj_TB)"], ["proof (state)\nthis:\n  card (T ` B) = card B\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "also"], ["proof (state)\nthis:\n  card (T ` B) = card B\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "have \"... = V.dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card B = V.dim", "using basis_B fin_dim_V V.basis_def V.dim_basis V.fin"], ["proof (prove)\nusing this:\n  V.basis B\n  V.fin_dim\n  V.basis ?A =\n  (V.module.lin_indpt ?A \\<and>\n   V.module.gen_set ?A \\<and> ?A \\<subseteq> carrier V)\n  \\<lbrakk>finite ?A; V.basis ?A\\<rbrakk> \\<Longrightarrow> V.dim = card ?A\n  \\<lbrakk>V.fin_dim; V.module.lin_indpt ?A;\n   ?A \\<subseteq> carrier V\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. card B = V.dim", "by auto"], ["proof (state)\nthis:\n  card B = V.dim\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "finally"], ["proof (chain)\npicking this:\n  card (T ` B) = V.dim", "show ?thesis"], ["proof (prove)\nusing this:\n  card (T ` B) = V.dim\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "using d"], ["proof (prove)\nusing this:\n  card (T ` B) = V.dim\n  V.dim = W.dim\n\ngoal (1 subgoal):\n 1. W.dim \\<le> card (T ` B)", "by simp"], ["proof (state)\nthis:\n  W.dim \\<le> card (T ` B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W.dim \\<le> card (T ` B)\n\ngoal (1 subgoal):\n 1. W.module.lin_indpt (T ` B)", "show \"W.module.lin_indpt (T ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lin_indpt (T ` B)", "proof (rule W.module.finite_lin_indpt2)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (T ` B)\n 2. T ` B \\<subseteq> carrier W\n 3. \\<And>a.\n       \\<lbrakk>a \\<in> T ` B \\<rightarrow> carrier K;\n        W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>T ` B.\n                            a v = \\<zero>\\<^bsub>K\\<^esub>", "show fin_TB: \"finite (T ` B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (T ` B)", "by fact"], ["proof (state)\nthis:\n  finite (T ` B)\n\ngoal (2 subgoals):\n 1. T ` B \\<subseteq> carrier W\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> T ` B \\<rightarrow> carrier K;\n        W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>T ` B.\n                            a v = \\<zero>\\<^bsub>K\\<^esub>", "show TB_W: \"T ` B \\<subseteq> carrier W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T ` B \\<subseteq> carrier W", "by fact"], ["proof (state)\nthis:\n  T ` B \\<subseteq> carrier W\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> T ` B \\<rightarrow> carrier K;\n        W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>T ` B.\n                            a v = \\<zero>\\<^bsub>K\\<^esub>", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> T ` B \\<rightarrow> carrier K;\n        W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>T ` B.\n                            a v = \\<zero>\\<^bsub>K\\<^esub>", "assume a: \"a \\<in> T ` B \\<rightarrow> carrier K\" and lc_a: \"W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\""], ["proof (state)\nthis:\n  a \\<in> T ` B \\<rightarrow> carrier K\n  W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> T ` B \\<rightarrow> carrier K;\n        W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> \\<forall>v\\<in>T ` B.\n                            a v = \\<zero>\\<^bsub>K\\<^esub>", "show \"\\<forall>v\\<in>T ` B. a v = \\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>v\\<in>T ` B. a v = \\<zero>\\<^bsub>K\\<^esub>", "proof (rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "assume v: \"v \\<in> T ` B\""], ["proof (state)\nthis:\n  v \\<in> T ` B\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "have \"W.module.lincomb a (T ` B) = T (V.module.lincomb (a \\<circ> T) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W.module.lincomb a (T ` B) = T (V.module.lincomb (a \\<circ> T) B)", "proof (rule lincomb_linear_image[OF inj_T])"], ["proof (state)\ngoal (3 subgoals):\n 1. B \\<subseteq> carrier V\n 2. a \\<in> T ` B \\<rightarrow> carrier K\n 3. finite B", "show \"B \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "using V.vectorspace_axioms basis_B vectorspace.basis_def"], ["proof (prove)\nusing this:\n  vectorspace K V\n  V.basis B\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier V", "by blast"], ["proof (state)\nthis:\n  B \\<subseteq> carrier V\n\ngoal (2 subgoals):\n 1. a \\<in> T ` B \\<rightarrow> carrier K\n 2. finite B", "show \"a \\<in> T ` B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> T ` B \\<rightarrow> carrier K", "by (simp add: a)"], ["proof (state)\nthis:\n  a \\<in> T ` B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. finite B", "show \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "using fin_TB finite_image_iff inj_TB"], ["proof (prove)\nusing this:\n  finite (T ` B)\n  inj_on ?f ?A \\<Longrightarrow> finite (?f ` ?A) = finite ?A\n  inj_on T B\n\ngoal (1 subgoal):\n 1. finite B", "by blast"], ["proof (state)\nthis:\n  finite B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W.module.lincomb a (T ` B) = T (V.module.lincomb (a \\<circ> T) B)\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "hence T_lincomb: \"T (V.module.lincomb (a \\<circ> T) B) = \\<zero>\\<^bsub>W\\<^esub>\""], ["proof (prove)\nusing this:\n  W.module.lincomb a (T ` B) = T (V.module.lincomb (a \\<circ> T) B)\n\ngoal (1 subgoal):\n 1. T (V.module.lincomb (a \\<circ> T) B) = \\<zero>\\<^bsub>W\\<^esub>", "using lc_a"], ["proof (prove)\nusing this:\n  W.module.lincomb a (T ` B) = T (V.module.lincomb (a \\<circ> T) B)\n  W.module.lincomb a (T ` B) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. T (V.module.lincomb (a \\<circ> T) B) = \\<zero>\\<^bsub>W\\<^esub>", "by simp"], ["proof (state)\nthis:\n  T (V.module.lincomb (a \\<circ> T) B) = \\<zero>\\<^bsub>W\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "have lincomb_0: \"V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>", "have \"a \\<circ> T \\<in> B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "using a"], ["proof (prove)\nusing this:\n  a \\<in> T ` B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<circ> T \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>", "then"], ["proof (chain)\npicking this:\n  a \\<circ> T \\<in> B \\<rightarrow> carrier K", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<circ> T \\<in> B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>", "by (metis V.module.M.zero_closed V.module.lincomb_closed \n            T_lincomb basis_B f0_is_0 inj_T inj_onD  V.basis_def)"], ["proof (state)\nthis:\n  V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V.module.lincomb (a \\<circ> T) B = \\<zero>\\<^bsub>V\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "have \"(a \\<circ> T) \\<in> B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}", "proof (rule V.not_lindepD[OF _ _ _ _ lincomb_0])"], ["proof (state)\ngoal (4 subgoals):\n 1. V.module.lin_indpt ?S\n 2. finite B\n 3. B \\<subseteq> ?S\n 4. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "show \"V.module.lin_indpt B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V.module.lin_indpt B", "using V.basis_def basis_B"], ["proof (prove)\nusing this:\n  V.basis ?A =\n  (V.module.lin_indpt ?A \\<and>\n   V.module.gen_set ?A \\<and> ?A \\<subseteq> carrier V)\n  V.basis B\n\ngoal (1 subgoal):\n 1. V.module.lin_indpt B", "by blast"], ["proof (state)\nthis:\n  V.module.lin_indpt B\n\ngoal (3 subgoals):\n 1. finite B\n 2. B \\<subseteq> B\n 3. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "show \"finite B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite B", "using fin_TB finite_image_iff inj_TB"], ["proof (prove)\nusing this:\n  finite (T ` B)\n  inj_on ?f ?A \\<Longrightarrow> finite (?f ` ?A) = finite ?A\n  inj_on T B\n\ngoal (1 subgoal):\n 1. finite B", "by auto"], ["proof (state)\nthis:\n  finite B\n\ngoal (2 subgoals):\n 1. B \\<subseteq> B\n 2. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "show \"B \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> B", "by auto"], ["proof (state)\nthis:\n  B \\<subseteq> B\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "show \"a \\<circ> T \\<in> B \\<rightarrow> carrier K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "using a"], ["proof (prove)\nusing this:\n  a \\<in> T ` B \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. a \\<circ> T \\<in> B \\<rightarrow> carrier K", "by auto"], ["proof (state)\nthis:\n  a \\<circ> T \\<in> B \\<rightarrow> carrier K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<circ> T \\<in> B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. \\<And>v. v \\<in> T ` B \\<Longrightarrow> a v = \\<zero>\\<^bsub>K\\<^esub>", "thus \"a v = \\<zero>\\<^bsub>K\\<^esub>\""], ["proof (prove)\nusing this:\n  a \\<circ> T \\<in> B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n\ngoal (1 subgoal):\n 1. a v = \\<zero>\\<^bsub>K\\<^esub>", "using v"], ["proof (prove)\nusing this:\n  a \\<circ> T \\<in> B \\<rightarrow> {\\<zero>\\<^bsub>K\\<^esub>}\n  v \\<in> T ` B\n\ngoal (1 subgoal):\n 1. a v = \\<zero>\\<^bsub>K\\<^esub>", "by auto"], ["proof (state)\nthis:\n  a v = \\<zero>\\<^bsub>K\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>v\\<in>T ` B. a v = \\<zero>\\<^bsub>K\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  W.module.lin_indpt (T ` B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma (in vectorspace) dim1I:\nassumes \"gen_set {v}\"\nassumes \"v \\<noteq> \\<zero>\\<^bsub>V\\<^esub>\" \"v \\<in> carrier V\"\nshows \"dim = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim = 1", "have \"basis {v}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis {v}", "by (metis assms(1) assms(2) assms(3) basis_def empty_iff empty_subsetI\n   finite.emptyI finite_lin_indpt2 insert_iff insert_subset insert_union lin_dep_iff_in_span\n   span_empty)"], ["proof (state)\nthis:\n  basis {v}\n\ngoal (1 subgoal):\n 1. dim = 1", "then"], ["proof (chain)\npicking this:\n  basis {v}", "show ?thesis"], ["proof (prove)\nusing this:\n  basis {v}\n\ngoal (1 subgoal):\n 1. dim = 1", "using dim_basis"], ["proof (prove)\nusing this:\n  basis {v}\n  \\<lbrakk>finite ?A; basis ?A\\<rbrakk> \\<Longrightarrow> dim = card ?A\n\ngoal (1 subgoal):\n 1. dim = 1", "by force"], ["proof (state)\nthis:\n  dim = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) dim0I:\nassumes \"gen_set {\\<zero>\\<^bsub>V\\<^esub>}\"\nshows \"dim = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim = 0", "have \"basis {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. basis {}", "unfolding basis_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt {} \\<and> gen_set {} \\<and> {} \\<subseteq> carrier V", "using already_in_span assms finite_lin_indpt2 span_zero"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<subseteq> carrier V; ?v \\<in> span ?A\\<rbrakk>\n  \\<Longrightarrow> span ?A = span (?A \\<union> {?v})\n  gen_set {\\<zero>\\<^bsub>V\\<^esub>}\n  \\<lbrakk>finite ?A; ?A \\<subseteq> carrier V;\n   \\<And>a.\n      \\<lbrakk>a \\<in> ?A \\<rightarrow> carrier K;\n       lincomb a ?A = \\<zero>\\<^bsub>V\\<^esub>\\<rbrakk>\n      \\<Longrightarrow> \\<forall>v\\<in>?A.\n                           a v = \\<zero>\\<^bsub>K\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> lin_indpt ?A\n  \\<zero>\\<^bsub>V\\<^esub> \\<in> span ?U\n\ngoal (1 subgoal):\n 1. lin_indpt {} \\<and> gen_set {} \\<and> {} \\<subseteq> carrier V", "by auto"], ["proof (state)\nthis:\n  basis {}\n\ngoal (1 subgoal):\n 1. dim = 0", "then"], ["proof (chain)\npicking this:\n  basis {}", "show ?thesis"], ["proof (prove)\nusing this:\n  basis {}\n\ngoal (1 subgoal):\n 1. dim = 0", "using dim_basis"], ["proof (prove)\nusing this:\n  basis {}\n  \\<lbrakk>finite ?A; basis ?A\\<rbrakk> \\<Longrightarrow> dim = card ?A\n\ngoal (1 subgoal):\n 1. dim = 0", "by force"], ["proof (state)\nthis:\n  dim = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) dim_le1I:\nassumes \"gen_set {v}\"\nassumes \"v \\<in> carrier V\"\nshows \"dim \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim \\<le> 1", "by (metis One_nat_def assms(1) assms(2) bot.extremum card.empty card.insert empty_iff finite.intros(1)\nfinite.intros(2) insert_subset vectorspace.gen_ge_dim vectorspace_axioms)"], ["", "definition find_indices where \"find_indices x xs \\<equiv> [i \\<leftarrow> [0..<length xs]. xs!i = x]\""], ["", "lemma find_indices_Nil [simp]:\n  \"find_indices x [] = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_indices x [] = []", "by (simp add: find_indices_def)"], ["", "lemma find_indices_Cons:\n  \"find_indices x (y#ys) = (if x = y then Cons 0 else id) (map Suc (find_indices x ys))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_indices x (y # ys) =\n    (if x = y then (#) 0 else id) (map Suc (find_indices x ys))", "apply (unfold find_indices_def length_Cons, subst upt_conv_Cons, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. filter (\\<lambda>i. (y # ys) ! i = x) (0 # [Suc 0..<Suc (length ys)]) =\n    (if x = y then (#) 0 else id)\n     (map Suc (filter (\\<lambda>i. ys ! i = x) [0..<length ys]))", "apply (fold map_Suc_upt, auto simp: filter_map o_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma find_indices_snoc [simp]:\n  \"find_indices x (ys@[y]) = find_indices x ys @ (if x = y then [length ys] else [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_indices x (ys @ [y]) =\n    find_indices x ys @ (if x = y then [length ys] else [])", "by (unfold find_indices_def, auto intro!: filter_cong simp: nth_append)"], ["", "lemma mem_set_find_indices [simp]: \"i \\<in> set (find_indices x xs) \\<longleftrightarrow> i < length xs \\<and> xs!i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (i \\<in> set (find_indices x xs)) = (i < length xs \\<and> xs ! i = x)", "by (auto simp: find_indices_def)"], ["", "lemma distinct_find_indices: \"distinct (find_indices x xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (find_indices x xs)", "unfolding find_indices_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (filter (\\<lambda>i. xs ! i = x) [0..<length xs])", "by simp"], ["", "context abelian_monoid begin"], ["", "definition sumlist\n  where \"sumlist xs \\<equiv> foldr (\\<oplus>) xs \\<zero>\""], ["", "(* fold is not good as it reverses the list, although the most general locale for monoids with\n     \\<oplus> is already Abelian in Isabelle 2016-1. foldl is OK but it will not simplify Cons. *)"], ["", "lemma [simp]:\n  shows sumlist_Cons: \"sumlist (x#xs) = x \\<oplus> sumlist xs\"\n    and sumlist_Nil: \"sumlist [] = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (x # xs) = x \\<oplus> sumlist xs &&& sumlist [] = \\<zero>", "by (simp_all add: sumlist_def)"], ["", "lemma sumlist_carrier [simp]:\n  assumes \"set xs \\<subseteq> carrier G\" shows \"sumlist xs \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist xs \\<in> carrier G", "using assms"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. sumlist xs \\<in> carrier G", "by (induct xs, auto)"], ["", "lemma sumlist_neutral:\n  assumes \"set xs \\<subseteq> {\\<zero>}\" shows \"sumlist xs = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist xs = \\<zero>", "proof (insert assms, induct xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. set [] \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist [] = \\<zero>\n 2. \\<And>a xs.\n       \\<lbrakk>set xs \\<subseteq> {\\<zero>} \\<Longrightarrow>\n                sumlist xs = \\<zero>;\n        set (a # xs) \\<subseteq> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> sumlist (a # xs) = \\<zero>", "case (Cons x xs)"], ["proof (state)\nthis:\n  set xs \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist xs = \\<zero>\n  set (x # xs) \\<subseteq> {\\<zero>}\n\ngoal (2 subgoals):\n 1. set [] \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist [] = \\<zero>\n 2. \\<And>a xs.\n       \\<lbrakk>set xs \\<subseteq> {\\<zero>} \\<Longrightarrow>\n                sumlist xs = \\<zero>;\n        set (a # xs) \\<subseteq> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> sumlist (a # xs) = \\<zero>", "then"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist xs = \\<zero>\n  set (x # xs) \\<subseteq> {\\<zero>}", "have \"x = \\<zero>\" and \"set xs \\<subseteq> {\\<zero>}\""], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist xs = \\<zero>\n  set (x # xs) \\<subseteq> {\\<zero>}\n\ngoal (1 subgoal):\n 1. x = \\<zero> &&& set xs \\<subseteq> {\\<zero>}", "by auto"], ["proof (state)\nthis:\n  x = \\<zero>\n  set xs \\<subseteq> {\\<zero>}\n\ngoal (2 subgoals):\n 1. set [] \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist [] = \\<zero>\n 2. \\<And>a xs.\n       \\<lbrakk>set xs \\<subseteq> {\\<zero>} \\<Longrightarrow>\n                sumlist xs = \\<zero>;\n        set (a # xs) \\<subseteq> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> sumlist (a # xs) = \\<zero>", "with Cons.hyps"], ["proof (chain)\npicking this:\n  set xs \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist xs = \\<zero>\n  x = \\<zero>\n  set xs \\<subseteq> {\\<zero>}", "show ?case"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist xs = \\<zero>\n  x = \\<zero>\n  set xs \\<subseteq> {\\<zero>}\n\ngoal (1 subgoal):\n 1. sumlist (x # xs) = \\<zero>", "by auto"], ["proof (state)\nthis:\n  sumlist (x # xs) = \\<zero>\n\ngoal (1 subgoal):\n 1. set [] \\<subseteq> {\\<zero>} \\<Longrightarrow> sumlist [] = \\<zero>", "qed simp"], ["", "lemma sumlist_append:\n  assumes \"set xs \\<subseteq> carrier G\" and \"set ys \\<subseteq> carrier G\"\n  shows \"sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys", "proof (insert assms, induct xs arbitrary: ys)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>set [] \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ([] @ ys) = sumlist [] \\<oplus> sumlist ys\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>set xs \\<subseteq> carrier G;\n                    set ys \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> sumlist (xs @ ys) =\n                                     sumlist xs \\<oplus> sumlist ys;\n        set (a # xs) \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ((a # xs) @ ys) =\n                         sumlist (a # xs) \\<oplus> sumlist ys", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>set xs \\<subseteq> carrier G;\n   set ?ys \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> sumlist (xs @ ?ys) = sumlist xs \\<oplus> sumlist ?ys\n  set (x # xs) \\<subseteq> carrier G\n  set ys \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>set [] \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ([] @ ys) = sumlist [] \\<oplus> sumlist ys\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>set xs \\<subseteq> carrier G;\n                    set ys \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> sumlist (xs @ ys) =\n                                     sumlist xs \\<oplus> sumlist ys;\n        set (a # xs) \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ((a # xs) @ ys) =\n                         sumlist (a # xs) \\<oplus> sumlist ys", "have \"sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys", "using Cons.prems"], ["proof (prove)\nusing this:\n  set (x # xs) \\<subseteq> carrier G\n  set ys \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys", "by (auto intro: Cons.hyps)"], ["proof (state)\nthis:\n  sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys\n\ngoal (2 subgoals):\n 1. \\<And>ys.\n       \\<lbrakk>set [] \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ([] @ ys) = sumlist [] \\<oplus> sumlist ys\n 2. \\<And>a xs ys.\n       \\<lbrakk>\\<And>ys.\n                   \\<lbrakk>set xs \\<subseteq> carrier G;\n                    set ys \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> sumlist (xs @ ys) =\n                                     sumlist xs \\<oplus> sumlist ys;\n        set (a # xs) \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ((a # xs) @ ys) =\n                         sumlist (a # xs) \\<oplus> sumlist ys", "with Cons.prems"], ["proof (chain)\npicking this:\n  set (x # xs) \\<subseteq> carrier G\n  set ys \\<subseteq> carrier G\n  sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys", "show ?case"], ["proof (prove)\nusing this:\n  set (x # xs) \\<subseteq> carrier G\n  set ys \\<subseteq> carrier G\n  sumlist (xs @ ys) = sumlist xs \\<oplus> sumlist ys\n\ngoal (1 subgoal):\n 1. sumlist ((x # xs) @ ys) = sumlist (x # xs) \\<oplus> sumlist ys", "by (auto intro!: a_assoc[symmetric])"], ["proof (state)\nthis:\n  sumlist ((x # xs) @ ys) = sumlist (x # xs) \\<oplus> sumlist ys\n\ngoal (1 subgoal):\n 1. \\<And>ys.\n       \\<lbrakk>set [] \\<subseteq> carrier G;\n        set ys \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> sumlist ([] @ ys) = sumlist [] \\<oplus> sumlist ys", "qed auto"], ["", "lemma sumlist_snoc:\n  assumes \"set xs \\<subseteq> carrier G\" and \"x \\<in> carrier G\"\n  shows \"sumlist (xs @ [x]) = sumlist xs \\<oplus> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (xs @ [x]) = sumlist xs \\<oplus> x", "by (subst sumlist_append, insert assms, auto)"], ["", "lemma sumlist_as_finsum:\n  assumes \"set xs \\<subseteq> carrier G\" and \"distinct xs\" shows \"sumlist xs = (\\<Oplus>x\\<in>set xs. x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist xs = (\\<Oplus>x\\<in>set xs. x)", "using assms"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> carrier G\n  distinct xs\n\ngoal (1 subgoal):\n 1. sumlist xs = (\\<Oplus>x\\<in>set xs. x)", "by (induct xs, auto intro:finsum_insert[symmetric])"], ["", "lemma sumlist_map_as_finsum:\n  assumes \"f : set xs \\<rightarrow> carrier G\" and \"distinct xs\"\n  shows \"sumlist (map f xs) = (\\<Oplus>x \\<in> set xs. f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (map f xs) = finsum G f (set xs)", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> set xs \\<rightarrow> carrier G\n  distinct xs\n\ngoal (1 subgoal):\n 1. sumlist (map f xs) = finsum G f (set xs)", "by (induct xs, auto)"], ["", "definition summset where \"summset M \\<equiv> fold_mset (\\<oplus>) \\<zero> M\""], ["", "lemma summset_empty [simp]: \"summset {#} = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summset {#} = \\<zero>", "by (simp add: summset_def)"], ["", "lemma fold_mset_add_carrier: \"a \\<in> carrier G \\<Longrightarrow> set_mset M \\<subseteq> carrier G \\<Longrightarrow> fold_mset (\\<oplus>) a M \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> carrier G; set_mset M \\<subseteq> carrier G\\<rbrakk>\n    \\<Longrightarrow> fold_mset (\\<oplus>) a M \\<in> carrier G", "proof (induct M arbitrary: a)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> carrier G;\n        set_mset {#} \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> fold_mset (\\<oplus>) a {#} \\<in> carrier G\n 2. \\<And>x M a.\n       \\<lbrakk>\\<And>a.\n                   \\<lbrakk>a \\<in> carrier G;\n                    set_mset M \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> fold_mset (\\<oplus>) a M\n                                     \\<in> carrier G;\n        a \\<in> carrier G;\n        set_mset (add_mset x M) \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> fold_mset (\\<oplus>) a (add_mset x M)\n                         \\<in> carrier G", "case (add x M)"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> carrier G; set_mset M \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> fold_mset (\\<oplus>) ?a M \\<in> carrier G\n  a \\<in> carrier G\n  set_mset (add_mset x M) \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> carrier G;\n        set_mset {#} \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> fold_mset (\\<oplus>) a {#} \\<in> carrier G\n 2. \\<And>x M a.\n       \\<lbrakk>\\<And>a.\n                   \\<lbrakk>a \\<in> carrier G;\n                    set_mset M \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> fold_mset (\\<oplus>) a M\n                                     \\<in> carrier G;\n        a \\<in> carrier G;\n        set_mset (add_mset x M) \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> fold_mset (\\<oplus>) a (add_mset x M)\n                         \\<in> carrier G", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier G; set_mset M \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> fold_mset (\\<oplus>) ?a M \\<in> carrier G\n  a \\<in> carrier G\n  set_mset (add_mset x M) \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. fold_mset (\\<oplus>) a (add_mset x M) \\<in> carrier G", "by \n    (subst comp_fun_commute_on.fold_mset_add_mset[of _ \"carrier G\"], unfold_locales, auto simp: a_lcomm)"], ["proof (state)\nthis:\n  fold_mset (\\<oplus>) a (add_mset x M) \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> carrier G;\n        set_mset {#} \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> fold_mset (\\<oplus>) a {#} \\<in> carrier G", "qed simp"], ["", "lemma summset_carrier[intro]: \"set_mset M \\<subseteq> carrier G \\<Longrightarrow> summset M \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset M \\<subseteq> carrier G \\<Longrightarrow>\n    summset M \\<in> carrier G", "unfolding summset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set_mset M \\<subseteq> carrier G \\<Longrightarrow>\n    fold_mset (\\<oplus>) \\<zero> M \\<in> carrier G", "by (rule fold_mset_add_carrier, auto)"], ["", "lemma summset_add_mset[simp]:\n  assumes a: \"a \\<in> carrier G\" and MG: \"set_mset M \\<subseteq> carrier G\"\n  shows \"summset (add_mset a M) = a \\<oplus> summset M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. summset (add_mset a M) = a \\<oplus> summset M", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier G\n  set_mset M \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. summset (add_mset a M) = a \\<oplus> summset M", "by (auto simp add: summset_def)\n   (rule comp_fun_commute_on.fold_mset_add_mset, unfold_locales, auto simp add: a_lcomm)"], ["", "lemma sumlist_as_summset:\n  assumes \"set xs \\<subseteq> carrier G\" shows \"sumlist xs = summset (mset xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist xs = summset (mset xs)", "by (insert assms, induct xs, auto)"], ["", "lemma sumlist_rev:\n  assumes \"set xs \\<subseteq> carrier G\"\n  shows \"sumlist (rev xs) = sumlist xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist (rev xs) = sumlist xs", "using assms"], ["proof (prove)\nusing this:\n  set xs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. sumlist (rev xs) = sumlist xs", "by (simp add: sumlist_as_summset)"], ["", "lemma sumlist_as_fold:\n  assumes \"set xs \\<subseteq> carrier G\"\n  shows \"sumlist xs = fold (\\<oplus>) xs \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sumlist xs = fold (\\<oplus>) xs \\<zero>", "by (fold sumlist_rev[OF assms], simp add: sumlist_def foldr_conv_fold)"], ["", "end"], ["", "context Module.module begin"], ["", "definition lincomb_list\nwhere \"lincomb_list c vs = sumlist (map (\\<lambda>i. c i \\<odot>\\<^bsub>M\\<^esub> vs ! i) [0..<length vs])\""], ["", "lemma lincomb_list_carrier:\n  assumes \"set vs \\<subseteq> carrier M\" and \"c : {0..<length vs} \\<rightarrow> carrier R\"\n  shows \"lincomb_list c vs \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c vs \\<in> carrier M", "by (insert assms, unfold lincomb_list_def, intro sumlist_carrier, auto intro!: smult_closed)"], ["", "lemma lincomb_list_Nil [simp]: \"lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>", "by (simp add: lincomb_list_def)"], ["", "lemma lincomb_list_Cons [simp]:\n  \"lincomb_list c (v#vs) = c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb_list (c o Suc) vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c (v # vs) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb_list (c \\<circ> Suc) vs", "by (unfold lincomb_list_def length_Cons, subst upt_conv_Cons, simp, fold map_Suc_upt, simp add: o_def)"], ["", "lemma lincomb_list_eq_0:\n  assumes \"\\<And>i. i < length vs \\<Longrightarrow> c i \\<odot>\\<^bsub>M\\<^esub> vs ! i = \\<zero>\\<^bsub>M\\<^esub>\"\n  shows \"lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>", "proof (insert assms, induct vs arbitrary:c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       (\\<And>i.\n           i < length [] \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> [] ! i =\n           \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n       lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   (\\<And>i.\n                       i < length vs \\<Longrightarrow>\n                       c i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n                       \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n                   lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>;\n        \\<And>i.\n           i < length (a # vs) \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> (a # vs) ! i =\n           \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) = \\<zero>\\<^bsub>M\\<^esub>", "case (Cons v vs)"], ["proof (state)\nthis:\n  (\\<And>i.\n      i < length vs \\<Longrightarrow>\n      ?c1 i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n      \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n  lincomb_list ?c1 vs = \\<zero>\\<^bsub>M\\<^esub>\n  ?i1 < length (v # vs) \\<Longrightarrow>\n  c ?i1 \\<odot>\\<^bsub>M\\<^esub> (v # vs) ! ?i1 = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       (\\<And>i.\n           i < length [] \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> [] ! i =\n           \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n       lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   (\\<And>i.\n                       i < length vs \\<Longrightarrow>\n                       c i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n                       \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n                   lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>;\n        \\<And>i.\n           i < length (a # vs) \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> (a # vs) ! i =\n           \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) = \\<zero>\\<^bsub>M\\<^esub>", "from Cons.prems[of 0]"], ["proof (chain)\npicking this:\n  0 < length (v # vs) \\<Longrightarrow>\n  c 0 \\<odot>\\<^bsub>M\\<^esub> (v # vs) ! 0 = \\<zero>\\<^bsub>M\\<^esub>", "have [simp]: \"c 0 \\<odot>\\<^bsub>M\\<^esub> v = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\nusing this:\n  0 < length (v # vs) \\<Longrightarrow>\n  c 0 \\<odot>\\<^bsub>M\\<^esub> (v # vs) ! 0 = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v = \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       (\\<And>i.\n           i < length [] \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> [] ! i =\n           \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n       lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   (\\<And>i.\n                       i < length vs \\<Longrightarrow>\n                       c i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n                       \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n                   lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>;\n        \\<And>i.\n           i < length (a # vs) \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> (a # vs) ! i =\n           \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) = \\<zero>\\<^bsub>M\\<^esub>", "from Cons.prems[of \"Suc _\"] Cons.hyps"], ["proof (chain)\npicking this:\n  Suc ?uu4 < length (v # vs) \\<Longrightarrow>\n  c (Suc ?uu4) \\<odot>\\<^bsub>M\\<^esub> (v # vs) ! Suc ?uu4 =\n  \\<zero>\\<^bsub>M\\<^esub>\n  (\\<And>i.\n      i < length vs \\<Longrightarrow>\n      ?c1 i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n      \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n  lincomb_list ?c1 vs = \\<zero>\\<^bsub>M\\<^esub>", "have \"lincomb_list (c \\<circ> Suc) vs = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\nusing this:\n  Suc ?uu4 < length (v # vs) \\<Longrightarrow>\n  c (Suc ?uu4) \\<odot>\\<^bsub>M\\<^esub> (v # vs) ! Suc ?uu4 =\n  \\<zero>\\<^bsub>M\\<^esub>\n  (\\<And>i.\n      i < length vs \\<Longrightarrow>\n      ?c1 i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n      \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n  lincomb_list ?c1 vs = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb_list (c \\<circ> Suc) vs = \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lincomb_list (c \\<circ> Suc) vs = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       (\\<And>i.\n           i < length [] \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> [] ! i =\n           \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n       lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   (\\<And>i.\n                       i < length vs \\<Longrightarrow>\n                       c i \\<odot>\\<^bsub>M\\<^esub> vs ! i =\n                       \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n                   lincomb_list c vs = \\<zero>\\<^bsub>M\\<^esub>;\n        \\<And>i.\n           i < length (a # vs) \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> (a # vs) ! i =\n           \\<zero>\\<^bsub>M\\<^esub>\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) = \\<zero>\\<^bsub>M\\<^esub>", "then"], ["proof (chain)\npicking this:\n  lincomb_list (c \\<circ> Suc) vs = \\<zero>\\<^bsub>M\\<^esub>", "show ?case"], ["proof (prove)\nusing this:\n  lincomb_list (c \\<circ> Suc) vs = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb_list c (v # vs) = \\<zero>\\<^bsub>M\\<^esub>", "by (simp add: o_def)"], ["proof (state)\nthis:\n  lincomb_list c (v # vs) = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       (\\<And>i.\n           i < length [] \\<Longrightarrow>\n           c i \\<odot>\\<^bsub>M\\<^esub> [] ! i =\n           \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n       lincomb_list c [] = \\<zero>\\<^bsub>M\\<^esub>", "qed simp"], ["", "definition mk_coeff where \"mk_coeff vs c v \\<equiv> R.sumlist (map c (find_indices v vs))\""], ["", "lemma mk_coeff_carrier:\n  assumes \"c : {0..<length vs} \\<rightarrow> carrier R\" shows \"mk_coeff vs c w \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs c w \\<in> carrier R", "by (insert assms, auto simp: mk_coeff_def find_indices_def intro!:R.sumlist_carrier elim!:funcset_mem)"], ["", "lemma mk_coeff_Cons:\n  assumes \"c : {0..<length (v#vs)} \\<rightarrow> carrier R\"\n  shows \"mk_coeff (v#vs) c = (\\<lambda>w. (if w = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c o Suc) w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff (v # vs) c =\n    (\\<lambda>w.\n        (if w = v then c 0 else \\<zero>) \\<oplus>\n        mk_coeff vs (c \\<circ> Suc) w)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. mk_coeff (v # vs) c =\n    (\\<lambda>w.\n        (if w = v then c 0 else \\<zero>) \\<oplus>\n        mk_coeff vs (c \\<circ> Suc) w)", "from assms"], ["proof (chain)\npicking this:\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R", "have \"c o Suc : {0..<length vs} \\<rightarrow> carrier R\""], ["proof (prove)\nusing this:\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "by auto"], ["proof (state)\nthis:\n  c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff (v # vs) c =\n    (\\<lambda>w.\n        (if w = v then c 0 else \\<zero>) \\<oplus>\n        mk_coeff vs (c \\<circ> Suc) w)", "from mk_coeff_carrier[OF this] assms"], ["proof (chain)\npicking this:\n  mk_coeff vs (c \\<circ> Suc) ?w \\<in> carrier R\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R", "show ?thesis"], ["proof (prove)\nusing this:\n  mk_coeff vs (c \\<circ> Suc) ?w \\<in> carrier R\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff (v # vs) c =\n    (\\<lambda>w.\n        (if w = v then c 0 else \\<zero>) \\<oplus>\n        mk_coeff vs (c \\<circ> Suc) w)", "by (auto simp add: mk_coeff_def find_indices_Cons)"], ["proof (state)\nthis:\n  mk_coeff (v # vs) c =\n  (\\<lambda>w.\n      (if w = v then c 0 else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) w)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mk_coeff_0[simp]:\n  assumes \"v \\<notin> set vs\"\n  shows \"mk_coeff vs c v = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs c v = \\<zero>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mk_coeff vs c v = \\<zero>", "have \"(find_indices v vs) = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_indices v vs = []", "using assms"], ["proof (prove)\nusing this:\n  v \\<notin> set vs\n\ngoal (1 subgoal):\n 1. find_indices v vs = []", "unfolding find_indices_def"], ["proof (prove)\nusing this:\n  v \\<notin> set vs\n\ngoal (1 subgoal):\n 1. filter (\\<lambda>i. vs ! i = v) [0..<length vs] = []", "by (simp add: in_set_conv_nth)"], ["proof (state)\nthis:\n  find_indices v vs = []\n\ngoal (1 subgoal):\n 1. mk_coeff vs c v = \\<zero>", "thus ?thesis"], ["proof (prove)\nusing this:\n  find_indices v vs = []\n\ngoal (1 subgoal):\n 1. mk_coeff vs c v = \\<zero>", "unfolding mk_coeff_def"], ["proof (prove)\nusing this:\n  find_indices v vs = []\n\ngoal (1 subgoal):\n 1. R.sumlist (map c (find_indices v vs)) = \\<zero>", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs c v = \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lincomb_list_as_lincomb:\n  assumes vs_M: \"set vs \\<subseteq> carrier M\" and c: \"c : {0..<length vs} \\<rightarrow> carrier R\"\n  shows \"lincomb_list c vs = lincomb (mk_coeff vs c) (set vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c vs = lincomb (mk_coeff vs c) (set vs)", "proof (insert assms, induct vs arbitrary: c)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>set [] \\<subseteq> carrier M;\n        c \\<in> {0..<length []} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c [] =\n                         lincomb (mk_coeff [] c) (set [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>set vs \\<subseteq> carrier M;\n                    c \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n                   \\<Longrightarrow> lincomb_list c vs =\n                                     lincomb (mk_coeff vs c) (set vs);\n        set (a # vs) \\<subseteq> carrier M;\n        c \\<in> {0..<length (a # vs)} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) =\n                         lincomb (mk_coeff (a # vs) c) (set (a # vs))", "case (Cons v vs)"], ["proof (state)\nthis:\n  \\<lbrakk>set vs \\<subseteq> carrier M;\n   ?c2 \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> lincomb_list ?c2 vs = lincomb (mk_coeff vs ?c2) (set vs)\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>set [] \\<subseteq> carrier M;\n        c \\<in> {0..<length []} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c [] =\n                         lincomb (mk_coeff [] c) (set [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>set vs \\<subseteq> carrier M;\n                    c \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n                   \\<Longrightarrow> lincomb_list c vs =\n                                     lincomb (mk_coeff vs c) (set vs);\n        set (a # vs) \\<subseteq> carrier M;\n        c \\<in> {0..<length (a # vs)} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) =\n                         lincomb (mk_coeff (a # vs) c) (set (a # vs))", "have mk_coeff_Suc_closed: \"mk_coeff vs (c \\<circ> Suc) a \\<in> carrier R\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) a \\<in> carrier R", "apply (rule mk_coeff_carrier)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "using Cons.prems"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {f. \\<forall>x.\n                 x \\<in> {0..<length (v # vs)} \\<longrightarrow>\n                 f x \\<in> carrier R}\n\ngoal (1 subgoal):\n 1. c \\<circ> Suc\n    \\<in> {f. \\<forall>x.\n                 x \\<in> {0..<length vs} \\<longrightarrow>\n                 f x \\<in> carrier R}", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>set [] \\<subseteq> carrier M;\n        c \\<in> {0..<length []} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c [] =\n                         lincomb (mk_coeff [] c) (set [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>set vs \\<subseteq> carrier M;\n                    c \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n                   \\<Longrightarrow> lincomb_list c vs =\n                                     lincomb (mk_coeff vs c) (set vs);\n        set (a # vs) \\<subseteq> carrier M;\n        c \\<in> {0..<length (a # vs)} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) =\n                         lincomb (mk_coeff (a # vs) c) (set (a # vs))", "have x_in: \"x \\<in> carrier M\" if x: \"x\\<in> set vs\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier M", "using Cons.prems x"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n  x \\<in> set vs\n\ngoal (1 subgoal):\n 1. x \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  ?x2 \\<in> set vs \\<Longrightarrow> ?x2 \\<in> carrier M\n\ngoal (2 subgoals):\n 1. \\<And>c.\n       \\<lbrakk>set [] \\<subseteq> carrier M;\n        c \\<in> {0..<length []} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c [] =\n                         lincomb (mk_coeff [] c) (set [])\n 2. \\<And>a vs c.\n       \\<lbrakk>\\<And>c.\n                   \\<lbrakk>set vs \\<subseteq> carrier M;\n                    c \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n                   \\<Longrightarrow> lincomb_list c vs =\n                                     lincomb (mk_coeff vs c) (set vs);\n        set (a # vs) \\<subseteq> carrier M;\n        c \\<in> {0..<length (a # vs)} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c (a # vs) =\n                         lincomb (mk_coeff (a # vs) c) (set (a # vs))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb_list c (v # vs) = lincomb (mk_coeff (v # vs) c) (set (v # vs))", "apply (unfold mk_coeff_Cons[OF Cons.prems(2)] lincomb_list_Cons)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb_list (c \\<circ> Suc) vs =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set (v # vs))", "apply (subst Cons)"], ["proof (prove)\ngoal (3 subgoals):\n 1. set vs \\<subseteq> carrier M\n 2. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n 3. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set (v # vs))", "using Cons"], ["proof (prove)\nusing this:\n  \\<lbrakk>set vs \\<subseteq> carrier M;\n   ?c2 \\<in> {0..<length vs} \\<rightarrow> carrier R\\<rbrakk>\n  \\<Longrightarrow> lincomb_list ?c2 vs = lincomb (mk_coeff vs ?c2) (set vs)\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (3 subgoals):\n 1. set vs \\<subseteq> carrier M\n 2. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n 3. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set (v # vs))", "apply (force, force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set (v # vs))", "proof (cases \"v \\<in> set vs\", auto simp:insert_absorb)"], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "case False"], ["proof (state)\nthis:\n  v \\<notin> set vs\n\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "let ?f = \"(\\<lambda>va. ((if va = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub> va)\""], ["proof (state)\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "have mk_0: \"mk_coeff vs (c \\<circ> Suc) v = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v = \\<zero>", "using False"], ["proof (prove)\nusing this:\n  v \\<notin> set vs\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v = \\<zero>", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) v = \\<zero>\n\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "have [simp]: \"(c 0 \\<oplus> \\<zero>) = c 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<oplus> \\<zero> = c 0", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c 0 \\<oplus> \\<zero> = c 0", "by force"], ["proof (state)\nthis:\n  c 0 \\<oplus> \\<zero> = c 0\n\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "have finsum_rw: \"(\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>insert v (set vs). ?f va) = (?f v) \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs). ?f va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>insert v\n(set vs). ((if va = v then c 0 else \\<zero>) \\<oplus>\n           mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n          va) =\n    ((if v = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "proof (rule finsum_insert, auto simp add: False, rule smult_closed, rule R.a_closed)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<in> carrier R\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 4. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<in> carrier R\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 4. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "show \"mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R", "using mk_coeff_Suc_closed"], ["proof (prove)\nusing this:\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) x \\<in> carrier R\n\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<in> carrier R\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M\n 3. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "show \"c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "proof (rule smult_closed)"], ["proof (state)\ngoal (2 subgoals):\n 1. c 0 \\<in> carrier R\n 2. v \\<in> carrier M", "show \"c 0 \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<in> carrier R", "using Cons.prems(2)"], ["proof (prove)\nusing this:\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c 0 \\<in> carrier R", "by fastforce"], ["proof (state)\nthis:\n  c 0 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. v \\<in> carrier M", "show \"v \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> carrier M", "using Cons.prems(1)"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. v \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> \\<zero> \\<in> carrier R\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M", "show \"\\<zero> \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<in> carrier R", "by simp"], ["proof (state)\nthis:\n  \\<zero> \\<in> carrier R\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M", "assume x: \"x \\<in> set vs\""], ["proof (state)\nthis:\n  x \\<in> set vs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> x \\<in> carrier M", "show \"x \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier M", "using Cons.prems(1) x"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  x \\<in> set vs\n\ngoal (1 subgoal):\n 1. x \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  x \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>insert v\n                                    (set\nvs). ((if va = v then c 0 else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va) =\n  ((if v = v then c 0 else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va)\n\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "have finsum_rw2: \n      \"(\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs). ?f va) = (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. (mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub> va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. mk_coeff vs (c \\<circ> Suc) va \\<odot>\\<^bsub>M\\<^esub> va)", "proof (rule finsum_cong2, auto simp add: False)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "assume i: \"i \\<in> set vs\""], ["proof (state)\nthis:\n  i \\<in> set vs\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "have \"c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "using Cons.prems"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "by auto"], ["proof (state)\nthis:\n  c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "then"], ["proof (chain)\npicking this:\n  c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R", "have [simp]: \"mk_coeff vs (c \\<circ> Suc) i \\<in> carrier R\""], ["proof (prove)\nusing this:\n  c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) i \\<in> carrier R", "using mk_coeff_Suc_closed"], ["proof (prove)\nusing this:\n  c \\<circ> Suc \\<in> {0..<length vs} \\<rightarrow> carrier R\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) i \\<in> carrier R", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) i \\<in> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "have \"\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i = mk_coeff vs (c \\<circ> Suc) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i =\n    mk_coeff vs (c \\<circ> Suc) i", "by (rule R.l_zero, simp)"], ["proof (state)\nthis:\n  \\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i =\n  mk_coeff vs (c \\<circ> Suc) i\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> set vs; i \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           i) \\<odot>\\<^bsub>M\\<^esub>\n                         i =\n                         mk_coeff vs (c \\<circ> Suc)\n                          i \\<odot>\\<^bsub>M\\<^esub>\n                         i\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "then"], ["proof (chain)\npicking this:\n  \\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i =\n  mk_coeff vs (c \\<circ> Suc) i", "show \"(\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub> i = mk_coeff vs (c \\<circ> Suc) i \\<odot>\\<^bsub>M\\<^esub> i\""], ["proof (prove)\nusing this:\n  \\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i =\n  mk_coeff vs (c \\<circ> Suc) i\n\ngoal (1 subgoal):\n 1. (\\<zero> \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub>\n    i =\n    mk_coeff vs (c \\<circ> Suc) i \\<odot>\\<^bsub>M\\<^esub> i", "by auto"], ["proof (state)\nthis:\n  (\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub>\n  i =\n  mk_coeff vs (c \\<circ> Suc) i \\<odot>\\<^bsub>M\\<^esub> i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> set vs; x \\<noteq> v\\<rbrakk>\n       \\<Longrightarrow> (\\<zero> \\<oplus>\n                          mk_coeff vs (c \\<circ> Suc)\n                           x) \\<odot>\\<^bsub>M\\<^esub>\n                         x\n                         \\<in> carrier M", "show \"(\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub> i \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<zero> \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub>\n    i\n    \\<in> carrier M", "using Cons.prems(1) i"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  i \\<in> set vs\n\ngoal (1 subgoal):\n 1. (\\<zero> \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub>\n    i\n    \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  (\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) i) \\<odot>\\<^bsub>M\\<^esub>\n  i\n  \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n      va \\<odot>\\<^bsub>M\\<^esub>\n     va)\n\ngoal (2 subgoals):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)\n 2. v \\<notin> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "show \"c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb (\\<lambda>a. (if a = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c \\<circ> Suc) a) (insert v (set vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (insert v (set vs))", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>insert v\n(set vs). ((if va = v then c 0 else \\<zero>) \\<oplus>\n           mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n          va)", "unfolding finsum_rw mk_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    ((if v = v then c 0 else \\<zero>) \\<oplus>\n     \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "unfolding finsum_rw2"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    ((if v = v then c 0 else \\<zero>) \\<oplus>\n     \\<zero>) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "by auto"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (insert v (set vs))\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "case True"], ["proof (state)\nthis:\n  v \\<in> set vs\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "let ?f = \"\\<lambda>va. ((if va = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub> va\""], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have rw: \"(c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v \n      = (c 0 \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v", "using Cons.prems(1) Cons.prems(2) atLeast0_lessThan_Suc_eq_insert_0"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n  {0..<Suc ?n} = insert 0 (Suc ` {0..<?n})\n\ngoal (1 subgoal):\n 1. (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v", "using mk_coeff_Suc_closed smult_l_distr"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n  {0..<Suc ?n} = insert 0 (Suc ` {0..<?n})\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n  \\<lbrakk>?a \\<in> carrier R; ?b \\<in> carrier R;\n   ?x \\<in> carrier M\\<rbrakk>\n  \\<Longrightarrow> (?a \\<oplus> ?b) \\<odot>\\<^bsub>M\\<^esub> ?x =\n                    ?a \\<odot>\\<^bsub>M\\<^esub> ?x \\<oplus>\\<^bsub>M\\<^esub>\n                    ?b \\<odot>\\<^bsub>M\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v", "by auto"], ["proof (state)\nthis:\n  (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have rw2: \"((mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v) \n      \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va) = (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "have \"(\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va) = (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs - {v}. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                    {v}. mk_coeff vs (c \\<circ> Suc)\n    v \\<odot>\\<^bsub>M\\<^esub>\n   v)", "by (rule finsum_cong2, unfold Pi_def, auto simp add: mk_coeff_Suc_closed x_in)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "moreover"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "have \"(\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v) = ((mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v) \n        \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs - {v}. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                    {v}. mk_coeff vs (c \\<circ> Suc)\n    v \\<odot>\\<^bsub>M\\<^esub>\n   v)", "by (rule M.add.finprod_split, auto simp add: mk_coeff_Suc_closed True x_in)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v) =\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v) =\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v) =\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs -\n                                  {v}. mk_coeff vs (c \\<circ> Suc)\n  v \\<odot>\\<^bsub>M\\<^esub>\n v)\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"lincomb (\\<lambda>a. (if a = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c \\<circ> Suc) a) (set vs) \n      = (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ?f va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", ".."], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (set vs) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (set vs) =\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = ?f v \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set\nvs. ((if va = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    ((if v = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "proof (rule M.add.finprod_split)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite (set vs)\n 2. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M\n 3. v \\<in> set vs", "have c0_mkcoeff_in: \"c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R", "proof (rule R.a_closed)"], ["proof (state)\ngoal (2 subgoals):\n 1. c 0 \\<in> carrier R\n 2. mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R", "show \"c 0 \\<in> carrier R \""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<in> carrier R", "using Cons.prems"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c 0 \\<in> carrier R", "by auto"], ["proof (state)\nthis:\n  c 0 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R", "show \"mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R", "using mk_coeff_Suc_closed"], ["proof (prove)\nusing this:\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n\ngoal (3 subgoals):\n 1. finite (set vs)\n 2. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M\n 3. v \\<in> set vs", "moreover"], ["proof (state)\nthis:\n  c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n\ngoal (3 subgoals):\n 1. finite (set vs)\n 2. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M\n 3. v \\<in> set vs", "have \"(\\<zero> \\<oplus> mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub> va \\<in> carrier M\"\n      if va: \"va \\<in> carrier M\" for va"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<zero> \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va\n    \\<in> carrier M", "by (rule smult_closed[OF _ va], rule R.a_closed, auto simp add: mk_coeff_Suc_closed)"], ["proof (state)\nthis:\n  ?va2 \\<in> carrier M \\<Longrightarrow>\n  (\\<zero> \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) ?va2) \\<odot>\\<^bsub>M\\<^esub>\n  ?va2\n  \\<in> carrier M\n\ngoal (3 subgoals):\n 1. finite (set vs)\n 2. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M\n 3. v \\<in> set vs", "ultimately"], ["proof (chain)\npicking this:\n  c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n  ?va2 \\<in> carrier M \\<Longrightarrow>\n  (\\<zero> \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) ?va2) \\<odot>\\<^bsub>M\\<^esub>\n  ?va2\n  \\<in> carrier M", "show \"?f ` set vs \\<subseteq> carrier M\""], ["proof (prove)\nusing this:\n  c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n  ?va2 \\<in> carrier M \\<Longrightarrow>\n  (\\<zero> \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) ?va2) \\<odot>\\<^bsub>M\\<^esub>\n  ?va2\n  \\<in> carrier M\n\ngoal (1 subgoal):\n 1. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M", "using Cons.prems(1)"], ["proof (prove)\nusing this:\n  c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v \\<in> carrier R\n  ?va2 \\<in> carrier M \\<Longrightarrow>\n  (\\<zero> \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) ?va2) \\<odot>\\<^bsub>M\\<^esub>\n  ?va2\n  \\<in> carrier M\n  set (v # vs) \\<subseteq> carrier M\n\ngoal (1 subgoal):\n 1. (\\<lambda>va.\n        ((if va = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n        va) `\n    set vs\n    \\<subseteq> carrier M", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>va.\n      ((if va = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n      va) `\n  set vs\n  \\<subseteq> carrier M\n\ngoal (2 subgoals):\n 1. finite (set vs)\n 2. v \\<in> set vs", "show \"finite (set vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set vs)", "by simp"], ["proof (state)\nthis:\n  finite (set vs)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs", "show \"v \\<in> set vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> set vs", "using True"], ["proof (prove)\nusing this:\n  v \\<in> set vs\n\ngoal (1 subgoal):\n 1. v \\<in> set vs", "by simp"], ["proof (state)\nthis:\n  v \\<in> set vs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va) =\n  ((if v = v then c 0 else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs. ((if va = v then c 0\n       else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va) =\n  ((if v = v then c 0 else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v \n      \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((if v = v then c 0 else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "by auto"], ["proof (state)\nthis:\n  ((if v = v then c 0 else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  ((if v = v then c 0 else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = ((c 0 \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v) \n      \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "unfolding rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)", "by simp"], ["proof (state)\nthis:\n  (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  (c 0 \\<oplus> mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = (c 0 \\<odot>\\<^bsub>M\\<^esub> v) \\<oplus>\\<^bsub>M\\<^esub> (((mk_coeff vs (c \\<circ> Suc) v) \\<odot>\\<^bsub>M\\<^esub> v) \n      \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>(set vs - {v}). ?f va))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n    v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n     v \\<oplus>\\<^bsub>M\\<^esub>\n     (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n{v}. ((if va = v then c 0 else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va))", "proof (rule M.a_assoc)"], ["proof (state)\ngoal (3 subgoals):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n 2. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n 3. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)\n    \\<in> carrier M", "show \"c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "using Cons.prems(1) Cons.prems(2)"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  c \\<in> {0..<length (v # vs)} \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal (2 subgoals):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n 2. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)\n    \\<in> carrier M", "show \"mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "using Cons.prems(1) mk_coeff_Suc_closed"], ["proof (prove)\nusing this:\n  set (v # vs) \\<subseteq> carrier M\n  mk_coeff vs (c \\<circ> Suc) ?a2 \\<in> carrier R\n\ngoal (1 subgoal):\n 1. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M", "by auto"], ["proof (state)\nthis:\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v \\<in> carrier M\n\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)\n    \\<in> carrier M", "show \"(\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs - {v}. ((if va = v then c 0 else \\<zero>) \n        \\<oplus> mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub> va) \\<in> carrier M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                     {v}. ((if va = v then c 0\n      else \\<zero>) \\<oplus>\n     mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n    va)\n    \\<in> carrier M", "by (rule M.add.finprod_closed) (auto simp add: mk_coeff_Suc_closed x_in)"], ["proof (state)\nthis:\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va)\n  \\<in> carrier M\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n   v \\<oplus>\\<^bsub>M\\<^esub>\n   (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                    {v}. ((if va = v then c 0\n     else \\<zero>) \\<oplus>\n    mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n   va))\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n  v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                   {v}. ((if va = v then c 0\n    else \\<zero>) \\<oplus>\n   mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n  va) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n   v \\<oplus>\\<^bsub>M\\<^esub>\n   (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                    {v}. ((if va = v then c 0\n     else \\<zero>) \\<oplus>\n    mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n   va))\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub> v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n     v \\<oplus>\\<^bsub>M\\<^esub>\n     (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n{v}. ((if va = v then c 0 else \\<zero>) \\<oplus>\n      mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n     va)) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", "unfolding rw2"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", ".."], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n   v \\<oplus>\\<^bsub>M\\<^esub>\n   (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                    {v}. ((if va = v then c 0\n     else \\<zero>) \\<oplus>\n    mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n   va)) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "also"], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (mk_coeff vs (c \\<circ> Suc) v \\<odot>\\<^bsub>M\\<^esub>\n   v \\<oplus>\\<^bsub>M\\<^esub>\n   (\\<Oplus>\\<^bsub>M\\<^esub>va\\<in>set vs -\n                                    {v}. ((if va = v then c 0\n     else \\<zero>) \\<oplus>\n    mk_coeff vs (c \\<circ> Suc) va) \\<odot>\\<^bsub>M\\<^esub>\n   va)) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "have \"... = c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs)", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v) =\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n       v \\<odot>\\<^bsub>M\\<^esub>\n      v)", ".."], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>set vs. mk_coeff vs (c \\<circ> Suc)\n     v \\<odot>\\<^bsub>M\\<^esub>\n    v) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs)\n\ngoal (1 subgoal):\n 1. v \\<in> set vs \\<Longrightarrow>\n    c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", "finally"], ["proof (chain)\npicking this:\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (set vs) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs)", "show \"c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub> lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) \n      = lincomb (\\<lambda>a. (if a = v then c 0 else \\<zero>) \\<oplus> mk_coeff vs (c \\<circ> Suc) a) (set vs)\""], ["proof (prove)\nusing this:\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (set vs) =\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs)\n\ngoal (1 subgoal):\n 1. c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n    lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n    lincomb\n     (\\<lambda>a.\n         (if a = v then c 0 else \\<zero>) \\<oplus>\n         mk_coeff vs (c \\<circ> Suc) a)\n     (set vs)", ".."], ["proof (state)\nthis:\n  c 0 \\<odot>\\<^bsub>M\\<^esub> v \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (mk_coeff vs (c \\<circ> Suc)) (set vs) =\n  lincomb\n   (\\<lambda>a.\n       (if a = v then c 0 else \\<zero>) \\<oplus>\n       mk_coeff vs (c \\<circ> Suc) a)\n   (set vs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lincomb_list c (v # vs) = lincomb (mk_coeff (v # vs) c) (set (v # vs))\n\ngoal (1 subgoal):\n 1. \\<And>c.\n       \\<lbrakk>set [] \\<subseteq> carrier M;\n        c \\<in> {0..<length []} \\<rightarrow> carrier R\\<rbrakk>\n       \\<Longrightarrow> lincomb_list c [] =\n                         lincomb (mk_coeff [] c) (set [])", "qed simp"], ["", "definition \"span_list vs \\<equiv> {lincomb_list c vs | c. c : {0..<length vs} \\<rightarrow> carrier R}\""], ["", "lemma in_span_listI:\n  assumes \"c : {0..<length vs} \\<rightarrow> carrier R\" and \"v = lincomb_list c vs\"\n  shows \"v \\<in> span_list vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> span_list vs", "using assms"], ["proof (prove)\nusing this:\n  c \\<in> {0..<length vs} \\<rightarrow> carrier R\n  v = lincomb_list c vs\n\ngoal (1 subgoal):\n 1. v \\<in> span_list vs", "by (auto simp: span_list_def)"], ["", "lemma in_span_listE:\n  assumes \"v \\<in> span_list vs\"\n      and \"\\<And>c. c : {0..<length vs} \\<rightarrow> carrier R \\<Longrightarrow> v = lincomb_list c vs \\<Longrightarrow> thesis\"\n  shows thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> span_list vs\n  \\<lbrakk>?c2 \\<in> {0..<length vs} \\<rightarrow> carrier R;\n   v = lincomb_list ?c2 vs\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by (auto simp: span_list_def)"], ["", "lemmas lincomb_insert2 = lincomb_insert[unfolded insert_union[symmetric]]"], ["", "lemma lincomb_zero:\n  assumes U: \"U \\<subseteq> carrier M\" and a: \"a : U \\<rightarrow> {zero R}\"\n  shows \"lincomb a U = zero M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a U = \\<zero>\\<^bsub>M\\<^esub>", "using U a"], ["proof (prove)\nusing this:\n  U \\<subseteq> carrier M\n  a \\<in> U \\<rightarrow> {\\<zero>}\n\ngoal (1 subgoal):\n 1. lincomb a U = \\<zero>\\<^bsub>M\\<^esub>", "proof (induct U rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     a \\<in> {} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "case empty"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier M\n  a \\<in> {} \\<rightarrow> {\\<zero>}\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<lbrakk>{} \\<subseteq> carrier M;\n     a \\<in> {} \\<rightarrow> {\\<zero>}\\<rbrakk>\n    \\<Longrightarrow> lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>\\<^bsub>M\\<^esub>v\\<in>{}. a v \\<odot>\\<^bsub>M\\<^esub> v) =\n    \\<zero>\\<^bsub>M\\<^esub>", "by auto"], ["proof (state)\nthis:\n  lincomb a {} = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "case (insert u U)"], ["proof (state)\nthis:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier M;\n   a \\<in> U \\<rightarrow> {\\<zero>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>M\\<^esub>\n  insert u U \\<subseteq> carrier M\n  a \\<in> insert u U \\<rightarrow> {\\<zero>}\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "hence \"a \\<in> insert u U \\<rightarrow> carrier R\""], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier M;\n   a \\<in> U \\<rightarrow> {\\<zero>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>M\\<^esub>\n  insert u U \\<subseteq> carrier M\n  a \\<in> insert u U \\<rightarrow> {\\<zero>}\n\ngoal (1 subgoal):\n 1. a \\<in> insert u U \\<rightarrow> carrier R", "using zero_closed"], ["proof (prove)\nusing this:\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier M;\n   a \\<in> U \\<rightarrow> {\\<zero>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>M\\<^esub>\n  insert u U \\<subseteq> carrier M\n  a \\<in> insert u U \\<rightarrow> {\\<zero>}\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> carrier M\n\ngoal (1 subgoal):\n 1. a \\<in> insert u U \\<rightarrow> carrier R", "by force"], ["proof (state)\nthis:\n  a \\<in> insert u U \\<rightarrow> carrier R\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier M;\n         a \\<in> F \\<rightarrow> {\\<zero>}\\<rbrakk>\n        \\<Longrightarrow> lincomb a F = \\<zero>\\<^bsub>M\\<^esub>;\n        insert x F \\<subseteq> carrier M;\n        a \\<in> insert x F \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a (insert x F) = \\<zero>\\<^bsub>M\\<^esub>", "thus ?case"], ["proof (prove)\nusing this:\n  a \\<in> insert u U \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb a (insert u U) = \\<zero>\\<^bsub>M\\<^esub>", "using insert"], ["proof (prove)\nusing this:\n  a \\<in> insert u U \\<rightarrow> carrier R\n  finite U\n  u \\<notin> U\n  \\<lbrakk>U \\<subseteq> carrier M;\n   a \\<in> U \\<rightarrow> {\\<zero>}\\<rbrakk>\n  \\<Longrightarrow> lincomb a U = \\<zero>\\<^bsub>M\\<^esub>\n  insert u U \\<subseteq> carrier M\n  a \\<in> insert u U \\<rightarrow> {\\<zero>}\n\ngoal (1 subgoal):\n 1. lincomb a (insert u U) = \\<zero>\\<^bsub>M\\<^esub>", "by (subst lincomb_insert2; auto)"], ["proof (state)\nthis:\n  lincomb a (insert u U) = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier M;\n        a \\<in> A \\<rightarrow> {\\<zero>}\\<rbrakk>\n       \\<Longrightarrow> lincomb a A = \\<zero>\\<^bsub>M\\<^esub>", "qed (auto simp: lincomb_def)"], ["", "end"], ["", "hide_const (open) Multiset.mult"], ["", "end"]]}