{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form/DL_Rank.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form", "problem_names": ["lemma (in vectorspace) full_dim_span:\nassumes \"S \\<subseteq> carrier V\"\nand \"finite S\"\nand \"vectorspace.dim K (span_vs S) = card S\"\nshows \"lin_indpt S\"", "lemma (in vectorspace) dim_span:\nassumes \"S \\<subseteq> carrier V\"\nand \"finite S\"\nand \"maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\"\nshows \"vectorspace.dim K (span_vs S) = card U\"", "lemma (in vec_space) rank_card_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\"\nshows \"rank A = card S\"", "lemma maximal_exists_superset:\n  assumes \"finite S\"\n  assumes maxc: \"\\<And>A. P A \\<Longrightarrow> A \\<subseteq> S\" and \"P B\"\n  shows \"\\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\"", "lemma (in vec_space) rank_ge_card_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"U \\<subseteq> set (cols A)\"\nassumes \"lin_indpt U\"\nshows \"rank A \\<ge> card U\"", "lemma (in vec_space) lin_indpt_full_rank:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"distinct (cols A)\"\nassumes \"lin_indpt (set (cols A))\"\nshows \"rank A = nc\"", "lemma (in vec_space) rank_le_nc:\nassumes \"A \\<in> carrier_mat n nc\"\nshows \"rank A \\<le> nc\"", "lemma (in vec_space) full_rank_lin_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"rank A = nc\"\nassumes \"distinct (cols A)\"\nshows \"lin_indpt (set (cols A))\"", "lemma (in vec_space) mat_mult_eq_lincomb:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"distinct (cols A)\"\nshows \"A *\\<^sub>v (vec nc (\\<lambda>i. a (col A i))) = lincomb a (set (cols A))\"", "lemma (in vec_space) lincomb_eq_mat_mult:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"v \\<in> carrier_vec nc\"\nassumes \"distinct (cols A)\"\nshows \"lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) = (A *\\<^sub>v v)\"", "lemma (in vec_space) lin_depI:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"v \\<in> carrier_vec nc\" \"v \\<noteq> 0\\<^sub>v nc\" \"A *\\<^sub>v v = 0\\<^sub>v n\"\nassumes \"distinct (cols A)\"\nshows \"lin_dep (set (cols A))\"", "lemma (in vec_space) lin_depE:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"lin_dep (set (cols A))\"\nassumes \"distinct (cols A)\"\nobtains v where \"v \\<in> carrier_vec nc\" \"v \\<noteq> 0\\<^sub>v nc\" \"A *\\<^sub>v v = 0\\<^sub>v n\"", "lemma (in vec_space) non_distinct_low_rank:\nassumes \"A \\<in> carrier_mat n n\"\nand \"\\<not> distinct (cols A)\"\nshows \"rank A < n\"", "lemma (in vec_space) det_zero_low_rank:\nassumes \"A \\<in> carrier_mat n n\"\nand \"det A = 0\"\nshows \"rank A < n\"", "lemma det_identical_cols:\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and ij: \"i \\<noteq> j\"\n    and i: \"i < n\" and j: \"j < n\"\n    and r: \"col A i = col A j\"\n  shows \"det A = 0\"", "lemma (in vec_space) low_rank_det_zero:\nassumes \"A \\<in> carrier_mat n n\"\nand \"det A \\<noteq> 0\"\nshows \"rank A = n\"", "lemma (in vec_space) det_rank_iff:\nassumes \"A \\<in> carrier_mat n n\"\nshows \"det A \\<noteq> 0 \\<longleftrightarrow> rank A = n\"", "lemma (in Module.module) lincomb_add:\nassumes \"finite (b1 \\<union> b2)\"\nassumes \"b1 \\<union> b2 \\<subseteq> carrier M\"\nassumes \"x1 = lincomb a1 b1\" \"a1\\<in> (b1\\<rightarrow>carrier R)\"\nassumes \"x2 = lincomb a2 b2\" \"a2\\<in> (b2\\<rightarrow>carrier R)\"\nassumes \"x = x1 \\<oplus>\\<^bsub>M\\<^esub> x2\"\nshows \"lincomb (\\<lambda>v. (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) v \\<oplus> (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) v) (b1 \\<union> b2) = x\"", "lemma (in vectorspace) dim_subadditive:\nassumes \"subspace K W1 V\"\nand \"vectorspace.fin_dim K (vs W1)\"\nassumes \"subspace K W2 V\"\nand \"vectorspace.fin_dim K (vs W2)\"\nshows \"vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\"", "lemma (in Module.module) nested_submodules:\nassumes \"submodule R W M\"\nassumes \"submodule R X M\"\nassumes \"X \\<subseteq> W\"\nshows \"submodule R X (md W)\"", "lemma (in vectorspace) nested_subspaces:\nassumes \"subspace K W V\"\nassumes \"subspace K X V\"\nassumes \"X \\<subseteq> W\"\nshows \"subspace K X (vs W)\"", "lemma (in vectorspace) subspace_dim:\nassumes \"subspace K X V\" \"fin_dim\" \"vectorspace.fin_dim K (vs X)\"\nshows \"vectorspace.dim K (vs X) \\<le> dim\"", "lemma (in vectorspace) fin_dim_subspace_sum:\nassumes \"subspace K W1 V\"\nassumes \"subspace K W2 V\"\nassumes \"vectorspace.fin_dim K (vs W1)\" \"vectorspace.fin_dim K (vs W2)\"\nshows \"vectorspace.fin_dim K (vs (subspace_sum W1 W2))\"", "lemma (in vec_space) rank_subadditive:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"B \\<in> carrier_mat n nc\"\nshows \"rank (A + B) \\<le> rank A + rank B\"", "lemma (in vec_space) span_zero: \"span {zero V} = {zero V}\"", "lemma (in vec_space) dim_zero_vs: \"vectorspace.dim class_ring (span_vs {}) = 0\"", "lemma (in vec_space) rank_0I: \"rank (0\\<^sub>m n nc) = 0\"", "lemma (in vec_space) rank_le_1_product_entries:\nfixes f g::\"nat \\<Rightarrow> 'a\"\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"\\<And>r c. r<dim_row A \\<Longrightarrow> c<dim_col A \\<Longrightarrow> A $$ (r,c) = f r * g c\"\nshows \"rank A \\<le> 1\""], "translations": [["", "lemma (in vectorspace) full_dim_span:\nassumes \"S \\<subseteq> carrier V\"\nand \"finite S\"\nand \"vectorspace.dim K (span_vs S) = card S\"\nshows \"lin_indpt S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_indpt S", "have \"vectorspace K (span_vs S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (vs (local.module.span S))", "using field.field_axioms vectorspace_def submodule_is_module[OF span_is_submodule[OF assms(1)]]"], ["proof (prove)\nusing this:\n  field K\n  vectorspace ?K ?V \\<equiv> module ?K ?V \\<and> field ?K\n  module K (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. vectorspace K (vs (local.module.span S))", "by metis"], ["proof (state)\nthis:\n  vectorspace K (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. lin_indpt S", "have \"S \\<subseteq> carrier (span_vs S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<subseteq> carrier (vs (local.module.span S))", "by (simp add: assms(1) in_own_span)"], ["proof (state)\nthis:\n  S \\<subseteq> carrier (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. lin_indpt S", "have \"LinearCombinations.module.span K (vs (span S)) S = carrier (vs (span S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (local.module.span S)) S =\n    carrier (vs (local.module.span S))", "using module.span_li_not_depend[OF _ span_is_submodule[OF assms(1)]]"], ["proof (prove)\nusing this:\n  ?S \\<subseteq> local.module.span S \\<Longrightarrow>\n  LinearCombinations.module.span K (vs (local.module.span S)) ?S =\n  local.module.span ?S\n  ?S \\<subseteq> local.module.span S \\<Longrightarrow>\n  LinearCombinations.module.lin_dep K (vs (local.module.span S)) ?S =\n  lin_dep ?S\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (local.module.span S)) S =\n    carrier (vs (local.module.span S))", "by (simp add: assms(1) in_own_span)"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (local.module.span S)) S =\n  carrier (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. lin_indpt S", "have \"vectorspace.basis K (vs (span S)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.basis K (vs (local.module.span S)) S", "using vectorspace.dim_gen_is_basis[OF \\<open>vectorspace K (span_vs S)\\<close> \\<open>finite S\\<close> \\<open>S \\<subseteq> carrier (span_vs S)\\<close>\n     \\<open>LinearCombinations.module.span K (vs (span S)) S = carrier (vs (span S))\\<close>]  \\<open>vectorspace.dim K (span_vs S) = card S\\<close>"], ["proof (prove)\nusing this:\n  card S\n  \\<le> vectorspace.dim K (vs (local.module.span S)) \\<Longrightarrow>\n  vectorspace.basis K (vs (local.module.span S)) S\n  vectorspace.dim K (vs (local.module.span S)) = card S\n\ngoal (1 subgoal):\n 1. vectorspace.basis K (vs (local.module.span S)) S", "by simp"], ["proof (state)\nthis:\n  vectorspace.basis K (vs (local.module.span S)) S\n\ngoal (1 subgoal):\n 1. lin_indpt S", "then"], ["proof (chain)\npicking this:\n  vectorspace.basis K (vs (local.module.span S)) S", "have \"LinearCombinations.module.lin_indpt K (vs (span S)) S\""], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs (local.module.span S)) S\n\ngoal (1 subgoal):\n 1. \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S", "using vectorspace.basis_def[OF \\<open>vectorspace K (span_vs S)\\<close>]"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs (local.module.span S)) S\n  vectorspace.basis K (vs (local.module.span S)) ?A =\n  (\\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S))\n           ?A \\<and>\n   LinearCombinations.module.span K (vs (local.module.span S)) ?A =\n   carrier (vs (local.module.span S)) \\<and>\n   ?A \\<subseteq> carrier (vs (local.module.span S)))\n\ngoal (1 subgoal):\n 1. \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S", "by blast"], ["proof (state)\nthis:\n  \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S\n\ngoal (1 subgoal):\n 1. lin_indpt S", "then"], ["proof (chain)\npicking this:\n  \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S\n\ngoal (1 subgoal):\n 1. lin_indpt S", "using module.span_li_not_depend[OF _ span_is_submodule[OF assms(1)]]"], ["proof (prove)\nusing this:\n  \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) S\n  ?S \\<subseteq> local.module.span S \\<Longrightarrow>\n  LinearCombinations.module.span K (vs (local.module.span S)) ?S =\n  local.module.span ?S\n  ?S \\<subseteq> local.module.span S \\<Longrightarrow>\n  LinearCombinations.module.lin_dep K (vs (local.module.span S)) ?S =\n  lin_dep ?S\n\ngoal (1 subgoal):\n 1. lin_indpt S", "by (simp add: assms(1) in_own_span)"], ["proof (state)\nthis:\n  lin_indpt S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) dim_span:\nassumes \"S \\<subseteq> carrier V\"\nand \"finite S\"\nand \"maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\"\nshows \"vectorspace.dim K (span_vs S) = card U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "have \"lin_indpt U\" \"U \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt U &&& U \\<subseteq> S", "by (metis assms(3) maximal_def)+"], ["proof (state)\nthis:\n  lin_indpt U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "then"], ["proof (chain)\npicking this:\n  lin_indpt U\n  U \\<subseteq> S", "have \"U \\<subseteq> span S\""], ["proof (prove)\nusing this:\n  lin_indpt U\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. U \\<subseteq> local.module.span S", "using in_own_span[OF assms(1)]"], ["proof (prove)\nusing this:\n  lin_indpt U\n  U \\<subseteq> S\n  S \\<subseteq> local.module.span S\n\ngoal (1 subgoal):\n 1. U \\<subseteq> local.module.span S", "by blast"], ["proof (state)\nthis:\n  U \\<subseteq> local.module.span S\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "then"], ["proof (chain)\npicking this:\n  U \\<subseteq> local.module.span S", "have lin_indpt: \"LinearCombinations.module.lin_indpt K (span_vs S) U\""], ["proof (prove)\nusing this:\n  U \\<subseteq> local.module.span S\n\ngoal (1 subgoal):\n 1. \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) U", "using module.span_li_not_depend(2)[OF \\<open>U \\<subseteq> span S\\<close>] \\<open>lin_indpt U\\<close> assms(1) span_is_submodule"], ["proof (prove)\nusing this:\n  U \\<subseteq> local.module.span S\n  LinearCombinations.submodule K (local.module.span S) V \\<Longrightarrow>\n  LinearCombinations.module.lin_dep K (vs (local.module.span S)) U =\n  lin_dep U\n  lin_indpt U\n  S \\<subseteq> carrier V\n  ?S \\<subseteq> carrier V \\<Longrightarrow>\n  LinearCombinations.submodule K (local.module.span ?S) V\n\ngoal (1 subgoal):\n 1. \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) U", "by blast"], ["proof (state)\nthis:\n  \\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S)) U\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "have \"span U = span S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.module.span U = local.module.span S", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "assume \"span U \\<noteq> span S\""], ["proof (state)\nthis:\n  local.module.span U \\<noteq> local.module.span S\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "have \"span U \\<subseteq> span S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.module.span U \\<subseteq> local.module.span S", "using span_is_monotone \\<open>U\\<subseteq>S\\<close>"], ["proof (prove)\nusing this:\n  ?S \\<subseteq> ?T \\<Longrightarrow>\n  local.module.span ?S \\<subseteq> local.module.span ?T\n  U \\<subseteq> S\n\ngoal (1 subgoal):\n 1. local.module.span U \\<subseteq> local.module.span S", "by metis"], ["proof (state)\nthis:\n  local.module.span U \\<subseteq> local.module.span S\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  local.module.span U \\<subseteq> local.module.span S", "have \"\\<not> S \\<subseteq> span U\""], ["proof (prove)\nusing this:\n  local.module.span U \\<subseteq> local.module.span S\n\ngoal (1 subgoal):\n 1. \\<not> S \\<subseteq> local.module.span U", "by (meson \\<open>U \\<subseteq> S\\<close> \\<open>span U \\<noteq> span S\\<close> assms(1) span_is_submodule\n      span_is_subset subset_antisym subset_trans)"], ["proof (state)\nthis:\n  \\<not> S \\<subseteq> local.module.span U\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> S \\<subseteq> local.module.span U", "obtain s where \"s\\<in>S\" \"s \\<notin> span U\""], ["proof (prove)\nusing this:\n  \\<not> S \\<subseteq> local.module.span U\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> S; s \\<notin> local.module.span U\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s \\<in> S\n  s \\<notin> local.module.span U\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\n  s \\<notin> local.module.span U", "have \"lin_indpt (U\\<union>{s})\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  s \\<notin> local.module.span U\n\ngoal (1 subgoal):\n 1. lin_indpt (U \\<union> {s})", "using lindep_span"], ["proof (prove)\nusing this:\n  s \\<in> S\n  s \\<notin> local.module.span U\n  \\<lbrakk>?U \\<subseteq> carrier V; finite ?U\\<rbrakk>\n  \\<Longrightarrow> lin_dep ?U =\n                    (\\<exists>u\\<in>?U.\n                        u \\<in> local.module.span (?U - {u}))\n\ngoal (1 subgoal):\n 1. lin_indpt (U \\<union> {s})", "by (meson \\<open>U \\<subseteq> S\\<close> \\<open>lin_indpt U\\<close> assms(1) lin_dep_iff_in_span rev_subsetD span_mem subset_trans)"], ["proof (state)\nthis:\n  lin_indpt (U \\<union> {s})\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "have \"s\\<notin>U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> U", "using \\<open>U \\<subseteq> S\\<close> \\<open>s \\<notin> span U\\<close> assms(1) span_mem"], ["proof (prove)\nusing this:\n  U \\<subseteq> S\n  s \\<notin> local.module.span U\n  S \\<subseteq> carrier V\n  \\<lbrakk>?E \\<subseteq> carrier V; ?u \\<in> ?E\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> local.module.span ?E\n\ngoal (1 subgoal):\n 1. s \\<notin> U", "by auto"], ["proof (state)\nthis:\n  s \\<notin> U\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<notin> U", "have \"(U\\<union>{s}) \\<subseteq> S \\<and> lin_indpt (U\\<union>{s})\""], ["proof (prove)\nusing this:\n  s \\<notin> U\n\ngoal (1 subgoal):\n 1. U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})", "using \\<open>U \\<subseteq> S\\<close> \\<open>lin_indpt (U \\<union> {s})\\<close> \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  s \\<notin> U\n  U \\<subseteq> S\n  lin_indpt (U \\<union> {s})\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})", "by auto"], ["proof (state)\nthis:\n  U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})", "have \"\\<not>maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\""], ["proof (prove)\nusing this:\n  U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})\n\ngoal (1 subgoal):\n 1. \\<not> maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)", "unfolding maximal_def"], ["proof (prove)\nusing this:\n  U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})\n\ngoal (1 subgoal):\n 1. \\<not> ((U \\<subseteq> S \\<and> lin_indpt U) \\<and>\n            (\\<forall>B.\n                U \\<subseteq> B \\<and>\n                B \\<subseteq> S \\<and> lin_indpt B \\<longrightarrow>\n                B = U))", "using Un_subset_iff \\<open>s \\<notin> U\\<close> insert_subset  order_refl"], ["proof (prove)\nusing this:\n  U \\<union> {s} \\<subseteq> S \\<and> lin_indpt (U \\<union> {s})\n  (?A \\<union> ?B \\<subseteq> ?C) =\n  (?A \\<subseteq> ?C \\<and> ?B \\<subseteq> ?C)\n  s \\<notin> U\n  (insert ?x ?A \\<subseteq> ?B) = (?x \\<in> ?B \\<and> ?A \\<subseteq> ?B)\n  ?x \\<le> ?x\n\ngoal (1 subgoal):\n 1. \\<not> ((U \\<subseteq> S \\<and> lin_indpt U) \\<and>\n            (\\<forall>B.\n                U \\<subseteq> B \\<and>\n                B \\<subseteq> S \\<and> lin_indpt B \\<longrightarrow>\n                B = U))", "by auto"], ["proof (state)\nthis:\n  \\<not> maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. local.module.span U \\<noteq> local.module.span S \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)", "show False"], ["proof (prove)\nusing this:\n  \\<not> maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  \\<not> maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\n  S \\<subseteq> carrier V\n  finite S\n  maximal U (\\<lambda>T. T \\<subseteq> S \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  local.module.span U = local.module.span S\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "then"], ["proof (chain)\npicking this:\n  local.module.span U = local.module.span S", "have span:\"LinearCombinations.module.span K (vs (span S)) U = span S\""], ["proof (prove)\nusing this:\n  local.module.span U = local.module.span S\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (local.module.span S)) U =\n    local.module.span S", "using module.span_li_not_depend[OF \\<open>U \\<subseteq> span S\\<close>]"], ["proof (prove)\nusing this:\n  local.module.span U = local.module.span S\n  LinearCombinations.submodule K (local.module.span S) V \\<Longrightarrow>\n  LinearCombinations.module.span K (vs (local.module.span S)) U =\n  local.module.span U\n  LinearCombinations.submodule K (local.module.span S) V \\<Longrightarrow>\n  LinearCombinations.module.lin_dep K (vs (local.module.span S)) U =\n  lin_dep U\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (local.module.span S)) U =\n    local.module.span S", "by (simp add: LinearCombinations.module.span_is_submodule assms(1) module_axioms)"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (local.module.span S)) U =\n  local.module.span S\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "have \"vectorspace K (vs (span S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (vs (local.module.span S))", "using field.field_axioms vectorspace_def submodule_is_module[OF span_is_submodule[OF assms(1)]]"], ["proof (prove)\nusing this:\n  field K\n  vectorspace ?K ?V \\<equiv> module ?K ?V \\<and> field ?K\n  module K (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. vectorspace K (vs (local.module.span S))", "by metis"], ["proof (state)\nthis:\n  vectorspace K (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "then"], ["proof (chain)\npicking this:\n  vectorspace K (vs (local.module.span S))", "have \"vectorspace.basis K (vs (span S)) U\""], ["proof (prove)\nusing this:\n  vectorspace K (vs (local.module.span S))\n\ngoal (1 subgoal):\n 1. vectorspace.basis K (vs (local.module.span S)) U", "using vectorspace.basis_def[OF \\<open>vectorspace K (vs (span S))\\<close>]"], ["proof (prove)\nusing this:\n  vectorspace K (vs (local.module.span S))\n  vectorspace.basis K (vs (local.module.span S)) ?A =\n  (\\<not> LinearCombinations.module.lin_dep K (vs (local.module.span S))\n           ?A \\<and>\n   LinearCombinations.module.span K (vs (local.module.span S)) ?A =\n   carrier (vs (local.module.span S)) \\<and>\n   ?A \\<subseteq> carrier (vs (local.module.span S)))\n\ngoal (1 subgoal):\n 1. vectorspace.basis K (vs (local.module.span S)) U", "by (simp add: span \\<open>U \\<subseteq> span S\\<close> lin_indpt)"], ["proof (state)\nthis:\n  vectorspace.basis K (vs (local.module.span S)) U\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "then"], ["proof (chain)\npicking this:\n  vectorspace.basis K (vs (local.module.span S)) U", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs (local.module.span S)) U\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "using \\<open>U \\<subseteq> S\\<close> \\<open>vectorspace K (vs (span S))\\<close> assms(2) infinite_super vectorspace.dim_basis"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs (local.module.span S)) U\n  U \\<subseteq> S\n  vectorspace K (vs (local.module.span S))\n  finite S\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n  \\<lbrakk>vectorspace ?K ?V; finite ?A; vectorspace.basis ?K ?V ?A\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim ?K ?V = card ?A\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (local.module.span S)) = card U", "by blast"], ["proof (state)\nthis:\n  vectorspace.dim K (vs (local.module.span S)) = card U\n\ngoal:\nNo subgoals!", "qed"], ["", "definition (in vec_space) rank ::\"'a mat \\<Rightarrow> nat\"\nwhere \"rank A = vectorspace.dim class_ring (span_vs (set (cols A)))\""], ["", "lemma (in vec_space) rank_card_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\"\nshows \"rank A = card S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A = card S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A = card S", "have \"set (cols A) \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "using cols_dim assms(1)"], ["proof (prove)\nusing this:\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "by blast"], ["proof (state)\nthis:\n  set (cols A) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. rank A = card S", "have \"finite (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (cols A))", "by blast"], ["proof (state)\nthis:\n  finite (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A = card S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A = card S", "using dim_span[OF \\<open>set (cols A) \\<subseteq> carrier_vec n\\<close> \\<open>finite (set (cols A))\\<close> assms(2)]"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span (set (cols A)))) = card S\n\ngoal (1 subgoal):\n 1. rank A = card S", "unfolding rank_def"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span (set (cols A)))) = card S\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) = card S", "by blast"], ["proof (state)\nthis:\n  rank A = card S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maximal_exists_superset:\n  assumes \"finite S\"\n  assumes maxc: \"\\<And>A. P A \\<Longrightarrow> A \\<subseteq> S\" and \"P B\"\n  shows \"\\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "have \"finite (S-B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (S - B)", "using assms(1) assms(3) infinite_super maxc"], ["proof (prove)\nusing this:\n  finite S\n  P B\n  \\<lbrakk>?S \\<subseteq> ?T; infinite ?S\\<rbrakk>\n  \\<Longrightarrow> infinite ?T\n  P ?A \\<Longrightarrow> ?A \\<subseteq> S\n\ngoal (1 subgoal):\n 1. finite (S - B)", "by blast"], ["proof (state)\nthis:\n  finite (S - B)\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  finite (S - B)", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (S - B)\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "using \\<open>P B\\<close>"], ["proof (prove)\nusing this:\n  finite (S - B)\n  P B\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "proof (induction \"S-B\" arbitrary:B rule: finite_psubset_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>finite (S - B);\n        \\<And>Ba.\n           \\<lbrakk>S - Ba \\<subset> S - B; P Ba\\<rbrakk>\n           \\<Longrightarrow> \\<exists>A.\n                                finite A \\<and>\n                                maximal A P \\<and> Ba \\<subseteq> A;\n        P B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A.\n                            finite A \\<and>\n                            maximal A P \\<and> B \\<subseteq> A", "case (psubset B)"], ["proof (state)\nthis:\n  finite (S - B)\n  \\<lbrakk>S - ?B \\<subset> S - B; P ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       finite A \\<and> maximal A P \\<and> ?B \\<subseteq> A\n  P B\n\ngoal (1 subgoal):\n 1. \\<And>B.\n       \\<lbrakk>finite (S - B);\n        \\<And>Ba.\n           \\<lbrakk>S - Ba \\<subset> S - B; P Ba\\<rbrakk>\n           \\<Longrightarrow> \\<exists>A.\n                                finite A \\<and>\n                                maximal A P \\<and> Ba \\<subseteq> A;\n        P B\\<rbrakk>\n       \\<Longrightarrow> \\<exists>A.\n                            finite A \\<and>\n                            maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  finite (S - B)\n  \\<lbrakk>S - ?B \\<subset> S - B; P ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       finite A \\<and> maximal A P \\<and> ?B \\<subseteq> A\n  P B", "show ?case"], ["proof (prove)\nusing this:\n  finite (S - B)\n  \\<lbrakk>S - ?B \\<subset> S - B; P ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       finite A \\<and> maximal A P \\<and> ?B \\<subseteq> A\n  P B\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "proof (cases \"maximal B P\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n 2. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "case True"], ["proof (state)\nthis:\n  maximal B P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n 2. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  maximal B P", "show ?thesis"], ["proof (prove)\nusing this:\n  maximal B P\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "using order_refl psubset.hyps"], ["proof (prove)\nusing this:\n  maximal B P\n  ?x \\<le> ?x\n  finite (S - B)\n  \\<lbrakk>S - ?B \\<subset> S - B; P ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       finite A \\<and> maximal A P \\<and> ?B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "by (metis assms(1) maxc psubset.prems rev_finite_subset)"], ["proof (state)\nthis:\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "case False"], ["proof (state)\nthis:\n  \\<not> maximal B P\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  \\<not> maximal B P", "obtain B' where \"B \\<subset> B'\" \"P B'\""], ["proof (prove)\nusing this:\n  \\<not> maximal B P\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B \\<subset> B'; P B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using maximal_def psubset.prems"], ["proof (prove)\nusing this:\n  \\<not> maximal B P\n  maximal ?A ?P =\n  (?P ?A \\<and>\n   (\\<forall>B. ?A \\<subseteq> B \\<and> ?P B \\<longrightarrow> B = ?A))\n  P B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>B \\<subset> B'; P B'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis dual_order.order_iff_strict)"], ["proof (state)\nthis:\n  B \\<subset> B'\n  P B'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  B \\<subset> B'\n  P B'", "have \"B' \\<subseteq> S\" \"B \\<subseteq> S\""], ["proof (prove)\nusing this:\n  B \\<subset> B'\n  P B'\n\ngoal (1 subgoal):\n 1. B' \\<subseteq> S &&& B \\<subseteq> S", "using maxc \\<open>P B\\<close>"], ["proof (prove)\nusing this:\n  B \\<subset> B'\n  P B'\n  P ?A \\<Longrightarrow> ?A \\<subseteq> S\n  P B\n\ngoal (1 subgoal):\n 1. B' \\<subseteq> S &&& B \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  B' \\<subseteq> S\n  B \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  B' \\<subseteq> S\n  B \\<subseteq> S", "have \"S - B' \\<subset> S - B\""], ["proof (prove)\nusing this:\n  B' \\<subseteq> S\n  B \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S - B' \\<subset> S - B", "using \\<open>B \\<subset> B'\\<close>"], ["proof (prove)\nusing this:\n  B' \\<subseteq> S\n  B \\<subseteq> S\n  B \\<subset> B'\n\ngoal (1 subgoal):\n 1. S - B' \\<subset> S - B", "by blast"], ["proof (state)\nthis:\n  S - B' \\<subset> S - B\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite (S - B);\n     \\<And>B.\n        \\<lbrakk>S - B \\<subset> S - B; P B\\<rbrakk>\n        \\<Longrightarrow> \\<exists>A.\n                             finite A \\<and>\n                             maximal A P \\<and> B \\<subseteq> A;\n     P B; \\<not> maximal B P\\<rbrakk>\n    \\<Longrightarrow> \\<exists>A.\n                         finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "then"], ["proof (chain)\npicking this:\n  S - B' \\<subset> S - B", "show ?thesis"], ["proof (prove)\nusing this:\n  S - B' \\<subset> S - B\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "using psubset(2)[OF \\<open>S - B' \\<subset> S - B\\<close> \\<open>P B'\\<close>]"], ["proof (prove)\nusing this:\n  S - B' \\<subset> S - B\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B' \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "using \\<open>B \\<subset> B'\\<close>"], ["proof (prove)\nusing this:\n  S - B' \\<subset> S - B\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B' \\<subseteq> A\n  B \\<subset> B'\n\ngoal (1 subgoal):\n 1. \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A", "by fast"], ["proof (state)\nthis:\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>A. finite A \\<and> maximal A P \\<and> B \\<subseteq> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_ge_card_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"U \\<subseteq> set (cols A)\"\nassumes \"lin_indpt U\"\nshows \"rank A \\<ge> card U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card U \\<le> rank A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card U \\<le> rank A", "obtain S where \"maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\" \"U\\<subseteq>S\" \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>maximal S\n                  (\\<lambda>T.\n                      T \\<subseteq> set (cols A) \\<and> lin_indpt T);\n         U \\<subseteq> S; finite S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using maximal_exists_superset[of \"set (cols A)\" \"(\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\" U]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (set (cols A));\n   \\<And>Aa.\n      Aa \\<subseteq> set (cols A) \\<and> lin_indpt Aa \\<Longrightarrow>\n      Aa \\<subseteq> set (cols A);\n   U \\<subseteq> set (cols A) \\<and> lin_indpt U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Aa.\n                       finite Aa \\<and>\n                       maximal Aa\n                        (\\<lambda>T.\n                            T \\<subseteq> set (cols A) \\<and>\n                            lin_indpt T) \\<and>\n                       U \\<subseteq> Aa\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>maximal S\n                  (\\<lambda>T.\n                      T \\<subseteq> set (cols A) \\<and> lin_indpt T);\n         U \\<subseteq> S; finite S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using List.finite_set assms(2) assms(3) maximal_exists_superset"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (set (cols A));\n   \\<And>Aa.\n      Aa \\<subseteq> set (cols A) \\<and> lin_indpt Aa \\<Longrightarrow>\n      Aa \\<subseteq> set (cols A);\n   U \\<subseteq> set (cols A) \\<and> lin_indpt U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Aa.\n                       finite Aa \\<and>\n                       maximal Aa\n                        (\\<lambda>T.\n                            T \\<subseteq> set (cols A) \\<and>\n                            lin_indpt T) \\<and>\n                       U \\<subseteq> Aa\n  finite (set ?xs)\n  U \\<subseteq> set (cols A)\n  lin_indpt U\n  \\<lbrakk>finite ?S; \\<And>A. ?P A \\<Longrightarrow> A \\<subseteq> ?S;\n   ?P ?B\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A.\n                       finite A \\<and> maximal A ?P \\<and> ?B \\<subseteq> A\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>maximal S\n                  (\\<lambda>T.\n                      T \\<subseteq> set (cols A) \\<and> lin_indpt T);\n         U \\<subseteq> S; finite S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  U \\<subseteq> S\n  finite S\n\ngoal (1 subgoal):\n 1. card U \\<le> rank A", "then"], ["proof (chain)\npicking this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  U \\<subseteq> S\n  finite S", "show ?thesis"], ["proof (prove)\nusing this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  U \\<subseteq> S\n  finite S\n\ngoal (1 subgoal):\n 1. card U \\<le> rank A", "unfolding rank_card_indpt[OF \\<open>A \\<in> carrier_mat n nc\\<close> \\<open>maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\\<close>]"], ["proof (prove)\nusing this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  U \\<subseteq> S\n  finite S\n\ngoal (1 subgoal):\n 1. card U \\<le> card S", "using card_mono"], ["proof (prove)\nusing this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  U \\<subseteq> S\n  finite S\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk>\n  \\<Longrightarrow> card ?A \\<le> card ?B\n\ngoal (1 subgoal):\n 1. card U \\<le> card S", "by blast"], ["proof (state)\nthis:\n  card U \\<le> rank A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) lin_indpt_full_rank:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"distinct (cols A)\"\nassumes \"lin_indpt (set (cols A))\"\nshows \"rank A = nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A = nc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A = nc", "have \"maximal (set (cols A)) (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximal (set (cols A))\n     (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)", "by (simp add: assms(3) maximal_def subset_antisym)"], ["proof (state)\nthis:\n  maximal (set (cols A))\n   (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. rank A = nc", "then"], ["proof (chain)\npicking this:\n  maximal (set (cols A))\n   (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)", "have \"rank A = card (set (cols A))\""], ["proof (prove)\nusing this:\n  maximal (set (cols A))\n   (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. rank A = card (set (cols A))", "using assms(1) vec_space.rank_card_indpt"], ["proof (prove)\nusing this:\n  maximal (set (cols A))\n   (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n  A \\<in> carrier_mat n nc\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?nc;\n   maximal ?S\n    (\\<lambda>T.\n        T \\<subseteq> set (cols ?A) \\<and>\n        \\<not> module.lin_dep class_ring (module_vec TYPE(?'a) ?n)\n                T)\\<rbrakk>\n  \\<Longrightarrow> vec_space.rank ?n ?A = card ?S\n\ngoal (1 subgoal):\n 1. rank A = card (set (cols A))", "by blast"], ["proof (state)\nthis:\n  rank A = card (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A = nc", "then"], ["proof (chain)\npicking this:\n  rank A = card (set (cols A))", "show ?thesis"], ["proof (prove)\nusing this:\n  rank A = card (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A = nc", "using assms(1) assms(2) distinct_card"], ["proof (prove)\nusing this:\n  rank A = card (set (cols A))\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  distinct ?xs \\<Longrightarrow> card (set ?xs) = length ?xs\n\ngoal (1 subgoal):\n 1. rank A = nc", "by fastforce"], ["proof (state)\nthis:\n  rank A = nc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_le_nc:\nassumes \"A \\<in> carrier_mat n nc\"\nshows \"rank A \\<le> nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "obtain S where \"maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        maximal S\n         (\\<lambda>T.\n             T \\<subseteq> set (cols A) \\<and>\n             lin_indpt T) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using maximal_exists[of \"(\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\" \"card (set (cols A))\" \"{}\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>Aa.\n              Aa \\<subseteq> set (cols A) \\<and>\n              lin_indpt Aa \\<Longrightarrow>\n              finite Aa \\<and> card Aa \\<le> card (set (cols A));\n   {} \\<subseteq> set (cols A) \\<and> lin_indpt {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Aa.\n                       finite Aa \\<and>\n                       maximal Aa\n                        (\\<lambda>T.\n                            T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        maximal S\n         (\\<lambda>T.\n             T \\<subseteq> set (cols A) \\<and>\n             lin_indpt T) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson List.finite_set card_mono empty_iff empty_subsetI finite_lin_indpt2 rev_finite_subset)"], ["proof (state)\nthis:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "then"], ["proof (chain)\npicking this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)", "have \"card S \\<le> card (set (cols A))\""], ["proof (prove)\nusing this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. card S \\<le> card (set (cols A))", "by (simp add: card_mono maximal_def)"], ["proof (state)\nthis:\n  card S \\<le> card (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "then"], ["proof (chain)\npicking this:\n  card S \\<le> card (set (cols A))", "have \"card S \\<le> nc\""], ["proof (prove)\nusing this:\n  card S \\<le> card (set (cols A))\n\ngoal (1 subgoal):\n 1. card S \\<le> nc", "using assms(1) cols_length card_length carrier_matD(2)"], ["proof (prove)\nusing this:\n  card S \\<le> card (set (cols A))\n  A \\<in> carrier_mat n nc\n  length (cols ?A) = dim_col ?A\n  card (set ?xs) \\<le> length ?xs\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n\ngoal (1 subgoal):\n 1. card S \\<le> nc", "by (metis dual_order.trans)"], ["proof (state)\nthis:\n  card S \\<le> nc\n\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "then"], ["proof (chain)\npicking this:\n  card S \\<le> nc", "show ?thesis"], ["proof (prove)\nusing this:\n  card S \\<le> nc\n\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "using rank_card_indpt[OF \\<open>A \\<in> carrier_mat n nc\\<close> \\<open>maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\\<close>]"], ["proof (prove)\nusing this:\n  card S \\<le> nc\n  rank A = card S\n\ngoal (1 subgoal):\n 1. rank A \\<le> nc", "by simp"], ["proof (state)\nthis:\n  rank A \\<le> nc\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) full_rank_lin_indpt:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"rank A = nc\"\nassumes \"distinct (cols A)\"\nshows \"lin_indpt (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "have 1:\"set (cols A) \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "using assms(1) cols_dim"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "by blast"], ["proof (state)\nthis:\n  set (cols A) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "have 2:\"finite (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (cols A))", "by simp"], ["proof (state)\nthis:\n  finite (set (cols A))\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "have \"card (set (cols A)) = nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (set (cols A)) = nc", "using assms(1) assms(3) distinct_card"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  distinct ?xs \\<Longrightarrow> card (set ?xs) = length ?xs\n\ngoal (1 subgoal):\n 1. card (set (cols A)) = nc", "by fastforce"], ["proof (state)\nthis:\n  card (set (cols A)) = nc\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "have 3:\"vectorspace.dim class_ring (span_vs (set (cols A))) = card (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) =\n    card (set (cols A))", "using \\<open>rank A = nc\\<close>[unfolded rank_def]"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span (set (cols A)))) = nc\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) =\n    card (set (cols A))", "using assms(1) assms(3) distinct_card"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span (set (cols A)))) = nc\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  distinct ?xs \\<Longrightarrow> card (set ?xs) = length ?xs\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) =\n    card (set (cols A))", "by fastforce"], ["proof (state)\nthis:\n  vectorspace.dim class_ring (vs (local.span (set (cols A)))) =\n  card (set (cols A))\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "using full_dim_span[OF 1 2 3]"], ["proof (prove)\nusing this:\n  lin_indpt (set (cols A))\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "."], ["proof (state)\nthis:\n  lin_indpt (set (cols A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) mat_mult_eq_lincomb:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"distinct (cols A)\"\nshows \"A *\\<^sub>v (vec nc (\\<lambda>i. a (col A i))) = lincomb a (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\\<^sub>v vec nc (\\<lambda>i. a (col A i)) = lincomb a (set (cols A))", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i\n 2. dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n    dim_vec (lincomb a (set (cols A)))", "have \"finite (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (cols A))", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. finite (set (cols A))", "by simp"], ["proof (state)\nthis:\n  finite (set (cols A))\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i\n 2. dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n    dim_vec (lincomb a (set (cols A)))", "then"], ["proof (chain)\npicking this:\n  finite (set (cols A))", "show \"dim_vec (A *\\<^sub>v (vec nc (\\<lambda>i. a (col A i)))) = dim_vec (lincomb a (set (cols A)))\""], ["proof (prove)\nusing this:\n  finite (set (cols A))\n\ngoal (1 subgoal):\n 1. dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n    dim_vec (lincomb a (set (cols A)))", "using assms cols_dim vec_space.lincomb_dim"], ["proof (prove)\nusing this:\n  finite (set (cols A))\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n  \\<lbrakk>finite ?X; ?X \\<subseteq> carrier_vec ?n\\<rbrakk>\n  \\<Longrightarrow> dim_vec\n                     (module.lincomb (module_vec TYPE(?'a) ?n) ?a ?X) =\n                    ?n\n\ngoal (1 subgoal):\n 1. dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n    dim_vec (lincomb a (set (cols A)))", "by (metis dim_mult_mat_vec carrier_matD(1))"], ["proof (state)\nthis:\n  dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n  dim_vec (lincomb a (set (cols A)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "assume \"i < dim_vec (lincomb a (set (cols A)))\""], ["proof (state)\nthis:\n  i < dim_vec (lincomb a (set (cols A)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec (lincomb a (set (cols A)))", "have \"i < n\""], ["proof (prove)\nusing this:\n  i < dim_vec (lincomb a (set (cols A)))\n\ngoal (1 subgoal):\n 1. i < n", "using \\<open>dim_vec (A *\\<^sub>v (vec nc (\\<lambda>i. a (col A i)))) = dim_vec (lincomb a (set (cols A)))\\<close> assms"], ["proof (prove)\nusing this:\n  i < dim_vec (lincomb a (set (cols A)))\n  dim_vec (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) =\n  dim_vec (lincomb a (set (cols A)))\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n\ngoal (1 subgoal):\n 1. i < n", "by auto"], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "have \"set (cols A) \\<subseteq> carrier_vec n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "using cols_dim \\<open>A \\<in> carrier_mat n nc\\<close> carrier_matD(1)"], ["proof (prove)\nusing this:\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n  A \\<in> carrier_mat n nc\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> carrier_vec n", "by blast"], ["proof (state)\nthis:\n  set (cols A) \\<subseteq> carrier_vec n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "have \"bij_betw (nth (cols A)) {..<length (cols A)} (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw ((!) (cols A)) {..<length (cols A)} (set (cols A))", "unfolding bij_betw_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((!) (cols A)) {..<length (cols A)} \\<and>\n    (!) (cols A) ` {..<length (cols A)} = set (cols A)", "by (rule conjI, simp add: inj_on_nth \\<open>distinct (cols A)\\<close>;\n    metis subset_antisym in_set_conv_nth lessThan_iff rev_image_eqI subsetI\n    image_subsetI lessThan_iff nth_mem)"], ["proof (state)\nthis:\n  bij_betw ((!) (cols A)) {..<length (cols A)} (set (cols A))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "then"], ["proof (chain)\npicking this:\n  bij_betw ((!) (cols A)) {..<length (cols A)} (set (cols A))", "have \" (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n    (\\<Sum>j\\<in>{..<length (cols A)}. a (cols A ! j) * (cols A ! j) $ i)\""], ["proof (prove)\nusing this:\n  bij_betw ((!) (cols A)) {..<length (cols A)} (set (cols A))\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n    (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i)", "using bij_betw_imp_surj_on bij_betw_imp_inj_on"], ["proof (prove)\nusing this:\n  bij_betw ((!) (cols A)) {..<length (cols A)} (set (cols A))\n  bij_betw ?f ?A ?B \\<Longrightarrow> ?f ` ?A = ?B\n  bij_betw ?f ?A ?B \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n    (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i)", "by (metis (no_types, lifting) sum.reindex_cong)"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "also"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "have \"... = (\\<Sum>j\\<in>{..<length (cols A)}. a (col A j) * (cols A ! j) $ i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i) =\n    (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i)", "using assms(1) assms(2) find_first_unique[OF \\<open>distinct (cols A)\\<close>] \\<open>i < n\\<close>"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  ?i < length (cols A) \\<Longrightarrow>\n  find_first (cols A ! ?i) (cols A) = ?i\n  i < n\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i) =\n    (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i) =\n  (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<length (cols A). a (cols A ! j) * cols A ! j $ i) =\n  (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "have \"... = (\\<Sum>j\\<in>{..<length (cols A)}. (cols A ! j) $ i * a (col A j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i) =\n    (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j))", "by (metis mult_commute_abs)"], ["proof (state)\nthis:\n  (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i) =\n  (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "also"], ["proof (state)\nthis:\n  (\\<Sum>j<length (cols A). a (col A j) * cols A ! j $ i) =\n  (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "have \"... = (\\<Sum>j\\<in>{..<length (cols A)}. row A i $ j * a (col A j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j)) =\n    (\\<Sum>j<length (cols A). row A i $ j * a (col A j))", "using \\<open>i < n\\<close> assms(1) assms(2)"], ["proof (prove)\nusing this:\n  i < n\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n\ngoal (1 subgoal):\n 1. (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j)) =\n    (\\<Sum>j<length (cols A). row A i $ j * a (col A j))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>j<length (cols A). cols A ! j $ i * a (col A j)) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (lincomb a (set (cols A))) \\<Longrightarrow>\n       (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n       lincomb a (set (cols A)) $ i", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))", "show \"(A *\\<^sub>v (vec nc (\\<lambda>i. a (col A i)))) $ i = lincomb a (set (cols A)) $ i\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n    lincomb a (set (cols A)) $ i", "unfolding lincomb_index[OF \\<open>i < n\\<close> \\<open>set (cols A) \\<subseteq> carrier_vec n\\<close>]"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))\n\ngoal (1 subgoal):\n 1. (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n    (\\<Sum>x\\<in>set (cols A). a x * x $ i)", "unfolding mult_mat_vec_def scalar_prod_def"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))\n\ngoal (1 subgoal):\n 1. vec (dim_row A)\n     (\\<lambda>i.\n         \\<Sum>ia = 0..<dim_vec (vec nc (\\<lambda>i. a (col A i))).\n            row A i $ ia * vec nc (\\<lambda>i. a (col A i)) $ ia) $\n    i =\n    (\\<Sum>x\\<in>set (cols A). a x * x $ i)", "using \\<open>i < n\\<close> assms(1) atLeast0LessThan lessThan_def carrier_matD(1) index_vec sum.cong"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>set (cols A). a x * x $ i) =\n  (\\<Sum>j<length (cols A). row A i $ j * a (col A j))\n  i < n\n  A \\<in> carrier_mat n nc\n  {0..<?n} = {..<?n}\n  {..<?u} \\<equiv> {x. x < ?u}\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n  ?i < ?n \\<Longrightarrow> vec ?n ?f $ ?i = ?f ?i\n  \\<lbrakk>?A = ?B;\n   \\<And>x. x \\<in> ?B \\<Longrightarrow> ?g x = ?h x\\<rbrakk>\n  \\<Longrightarrow> sum ?g ?A = sum ?h ?B\n\ngoal (1 subgoal):\n 1. vec (dim_row A)\n     (\\<lambda>i.\n         \\<Sum>ia = 0..<dim_vec (vec nc (\\<lambda>i. a (col A i))).\n            row A i $ ia * vec nc (\\<lambda>i. a (col A i)) $ ia) $\n    i =\n    (\\<Sum>x\\<in>set (cols A). a x * x $ i)", "by auto"], ["proof (state)\nthis:\n  (A *\\<^sub>v vec nc (\\<lambda>i. a (col A i))) $ i =\n  lincomb a (set (cols A)) $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) lincomb_eq_mat_mult:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"v \\<in> carrier_vec nc\"\nassumes \"distinct (cols A)\"\nshows \"lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) = (A *\\<^sub>v v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "have \"\\<And>i. i < nc \\<Longrightarrow> find_first (col A i) (cols A) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i < nc \\<Longrightarrow> find_first (col A i) (cols A) = i", "using assms(1) assms(3) find_first_unique"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  distinct (cols A)\n  \\<lbrakk>distinct ?xs; ?i < length ?xs\\<rbrakk>\n  \\<Longrightarrow> find_first (?xs ! ?i) ?xs = ?i\n\ngoal (1 subgoal):\n 1. \\<And>i. i < nc \\<Longrightarrow> find_first (col A i) (cols A) = i", "by fastforce"], ["proof (state)\nthis:\n  ?i1 < nc \\<Longrightarrow> find_first (col A ?i1) (cols A) = ?i1\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "then"], ["proof (chain)\npicking this:\n  ?i1 < nc \\<Longrightarrow> find_first (col A ?i1) (cols A) = ?i1", "have \"vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v\""], ["proof (prove)\nusing this:\n  ?i1 < nc \\<Longrightarrow> find_first (col A ?i1) (cols A) = ?i1\n\ngoal (1 subgoal):\n 1. vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v", "using assms(2)"], ["proof (prove)\nusing this:\n  ?i1 < nc \\<Longrightarrow> find_first (col A ?i1) (cols A) = ?i1\n  v \\<in> carrier_vec nc\n\ngoal (1 subgoal):\n 1. vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v", "by auto"], ["proof (state)\nthis:\n  vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "then"], ["proof (chain)\npicking this:\n  vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "using mat_mult_eq_lincomb[where a = \"(\\<lambda>a. v $ find_first a (cols A))\", OF assms(1) assms(3)]"], ["proof (prove)\nusing this:\n  vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) = v\n  A *\\<^sub>v vec nc (\\<lambda>i. v $ find_first (col A i) (cols A)) =\n  lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A))\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    A *\\<^sub>v v", "by auto"], ["proof (state)\nthis:\n  lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n  A *\\<^sub>v v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) lin_depI:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"v \\<in> carrier_vec nc\" \"v \\<noteq> 0\\<^sub>v nc\" \"A *\\<^sub>v v = 0\\<^sub>v n\"\nassumes \"distinct (cols A)\"\nshows \"lin_dep (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 1: \"finite (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (cols A))", "by simp"], ["proof (state)\nthis:\n  finite (set (cols A))\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 2: \"set (cols A) \\<subseteq> set (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> set (cols A)", "by auto"], ["proof (state)\nthis:\n  set (cols A) \\<subseteq> set (cols A)\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 3: \"(\\<lambda>a. v $ find_first a (cols A)) \\<in> set (cols A) \\<rightarrow> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. v $ find_first a (cols A))\n    \\<in> set (cols A) \\<rightarrow> UNIV", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>a. v $ find_first a (cols A))\n  \\<in> set (cols A) \\<rightarrow> UNIV\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "obtain i where \"v $ i \\<noteq> 0\" \"i < nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>v $ i \\<noteq> (0::'a); i < nc\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>v \\<noteq> 0\\<^sub>v nc\\<close>"], ["proof (prove)\nusing this:\n  v \\<noteq> 0\\<^sub>v nc\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>v $ i \\<noteq> (0::'a); i < nc\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis assms(2) dim_vec carrier_vecD vec_eq_iff zero_vec_def index_zero_vec(1))"], ["proof (state)\nthis:\n  v $ i \\<noteq> (0::'a)\n  i < nc\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "then"], ["proof (chain)\npicking this:\n  v $ i \\<noteq> (0::'a)\n  i < nc", "have \"i < dim_col A\""], ["proof (prove)\nusing this:\n  v $ i \\<noteq> (0::'a)\n  i < nc\n\ngoal (1 subgoal):\n 1. i < dim_col A", "using assms(1)"], ["proof (prove)\nusing this:\n  v $ i \\<noteq> (0::'a)\n  i < nc\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. i < dim_col A", "by blast"], ["proof (state)\nthis:\n  i < dim_col A\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 4:\"col A i \\<in> set (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A i \\<in> set (cols A)", "using cols_nth[OF \\<open>i < dim_col A\\<close>] \\<open>i < dim_col A\\<close> in_set_conv_nth"], ["proof (prove)\nusing this:\n  cols A ! i = col A i\n  i < dim_col A\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n\ngoal (1 subgoal):\n 1. col A i \\<in> set (cols A)", "by fastforce"], ["proof (state)\nthis:\n  col A i \\<in> set (cols A)\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 5:\"v $ find_first (col A i) (cols A) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $ find_first (col A i) (cols A) \\<noteq> (0::'a)", "using find_first_unique[OF \\<open>distinct (cols A)\\<close>] cols_nth[OF \\<open>i < dim_col A\\<close>] \\<open>i < nc\\<close> \\<open>v $ i \\<noteq> 0\\<close>\n    assms(1)"], ["proof (prove)\nusing this:\n  ?i < length (cols A) \\<Longrightarrow>\n  find_first (cols A ! ?i) (cols A) = ?i\n  cols A ! i = col A i\n  i < nc\n  v $ i \\<noteq> (0::'a)\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. v $ find_first (col A i) (cols A) \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  v $ find_first (col A i) (cols A) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "have 6:\"lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    0\\<^sub>v n", "using assms(1) assms(2) assms(4) assms(5) lincomb_eq_mat_mult"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  v \\<in> carrier_vec nc\n  A *\\<^sub>v v = 0\\<^sub>v n\n  distinct (cols A)\n  \\<lbrakk>?A \\<in> carrier_mat n ?nc; ?v \\<in> carrier_vec ?nc;\n   distinct (cols ?A)\\<rbrakk>\n  \\<Longrightarrow> lincomb (\\<lambda>a. ?v $ find_first a (cols ?A))\n                     (set (cols ?A)) =\n                    ?A *\\<^sub>v ?v\n\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n    0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  lincomb (\\<lambda>a. v $ find_first a (cols A)) (set (cols A)) =\n  0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "using lin_dep_crit[OF 1 2 _ 4 5 6]"], ["proof (prove)\nusing this:\n  True \\<Longrightarrow> lin_dep (set (cols A))\n\ngoal (1 subgoal):\n 1. lin_dep (set (cols A))", "by metis"], ["proof (state)\nthis:\n  lin_dep (set (cols A))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) lin_depE:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"lin_dep (set (cols A))\"\nassumes \"distinct (cols A)\"\nobtains v where \"v \\<in> carrier_vec nc\" \"v \\<noteq> 0\\<^sub>v nc\" \"A *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"finite (set (cols A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (cols A))", "by simp"], ["proof (state)\nthis:\n  finite (set (cols A))\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain a w where \"a \\<in> set (cols A) \\<rightarrow> UNIV\" \"lincomb a (set (cols A)) = 0\\<^sub>v n\" \"w \\<in> set (cols A)\" \"a w \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a w.\n        \\<lbrakk>a \\<in> set (cols A) \\<rightarrow> UNIV;\n         lincomb a (set (cols A)) = 0\\<^sub>v n; w \\<in> set (cols A);\n         a w \\<noteq> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using finite_lin_dep[OF \\<open>finite (set (cols A))\\<close> \\<open>lin_dep (set (cols A))\\<close>]"], ["proof (prove)\nusing this:\n  set (cols A) \\<subseteq> carrier_vec n \\<Longrightarrow>\n  \\<exists>a v.\n     True \\<and>\n     lincomb a (set (cols A)) = 0\\<^sub>v n \\<and>\n     v \\<in> set (cols A) \\<and> a v \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a w.\n        \\<lbrakk>a \\<in> set (cols A) \\<rightarrow> UNIV;\n         lincomb a (set (cols A)) = 0\\<^sub>v n; w \\<in> set (cols A);\n         a w \\<noteq> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) cols_dim carrier_matD(1)"], ["proof (prove)\nusing this:\n  set (cols A) \\<subseteq> carrier_vec n \\<Longrightarrow>\n  \\<exists>a v.\n     True \\<and>\n     lincomb a (set (cols A)) = 0\\<^sub>v n \\<and>\n     v \\<in> set (cols A) \\<and> a v \\<noteq> (0::'a)\n  A \\<in> carrier_mat n nc\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n\ngoal (1 subgoal):\n 1. (\\<And>a w.\n        \\<lbrakk>a \\<in> set (cols A) \\<rightarrow> UNIV;\n         lincomb a (set (cols A)) = 0\\<^sub>v n; w \\<in> set (cols A);\n         a w \\<noteq> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> set (cols A) \\<rightarrow> UNIV\n  lincomb a (set (cols A)) = 0\\<^sub>v n\n  w \\<in> set (cols A)\n  a w \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define v where \"v = vec nc (\\<lambda>i. a (col A i))\""], ["proof (state)\nthis:\n  v = vec nc (\\<lambda>i. a (col A i))\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 1:\"v \\<in> carrier_vec nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> carrier_vec nc", "by (simp add: v_def)"], ["proof (state)\nthis:\n  v \\<in> carrier_vec nc\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 2:\"v \\<noteq> 0\\<^sub>v nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "obtain i where \"w = col A i\" \"i < length (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>w = col A i; i < length (cols A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis \\<open>w \\<in> set (cols A)\\<close> cols_length cols_nth in_set_conv_nth)"], ["proof (state)\nthis:\n  w = col A i\n  i < length (cols A)\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "have \"v $ i \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v $ i \\<noteq> (0::'a)", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vec nc (\\<lambda>i. a (col A i)) $ i \\<noteq> (0::'a)", "using \\<open>a w \\<noteq> 0\\<close>[unfolded \\<open>w = col A i\\<close>] index_vec[OF \\<open>i < length (cols A)\\<close>]\n      assms(1) cols_length carrier_matD(2)"], ["proof (prove)\nusing this:\n  a (col A i) \\<noteq> (0::'a)\n  vec (length (cols A)) ?f $ i = ?f i\n  A \\<in> carrier_mat n nc\n  length (cols ?A) = dim_col ?A\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n\ngoal (1 subgoal):\n 1. vec nc (\\<lambda>i. a (col A i)) $ i \\<noteq> (0::'a)", "by (metis (no_types) \\<open>A \\<in> carrier_mat n nc\\<close>\n      \\<open>\\<And>f. vec (length (cols A)) f $ i = f i\\<close> \\<open>a (col A i) \\<noteq> 0\\<close> cols_length carrier_matD(2))"], ["proof (state)\nthis:\n  v $ i \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "then"], ["proof (chain)\npicking this:\n  v $ i \\<noteq> (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  v $ i \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "using \\<open>i < length (cols A)\\<close> assms(1)"], ["proof (prove)\nusing this:\n  v $ i \\<noteq> (0::'a)\n  i < length (cols A)\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0\\<^sub>v nc", "by auto"], ["proof (state)\nthis:\n  v \\<noteq> 0\\<^sub>v nc\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<noteq> 0\\<^sub>v nc\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 3:\"A *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\\<^sub>v v = 0\\<^sub>v n", "unfolding v_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A *\\<^sub>v vec nc (\\<lambda>i. a (col A i)) = 0\\<^sub>v n", "using \\<open>lincomb a (set (cols A)) = 0\\<^sub>v n\\<close> mat_mult_eq_lincomb[OF \\<open>A \\<in> carrier_mat n nc\\<close> \\<open>distinct (cols A)\\<close>]"], ["proof (prove)\nusing this:\n  lincomb a (set (cols A)) = 0\\<^sub>v n\n  A *\\<^sub>v vec nc (\\<lambda>i. ?a (col A i)) = lincomb ?a (set (cols A))\n\ngoal (1 subgoal):\n 1. A *\\<^sub>v vec nc (\\<lambda>i. a (col A i)) = 0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  A *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "show thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using 1 2 3"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec nc\n  v \\<noteq> 0\\<^sub>v nc\n  A *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. thesis", "by (simp add: that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) non_distinct_low_rank:\nassumes \"A \\<in> carrier_mat n n\"\nand \"\\<not> distinct (cols A)\"\nshows \"rank A < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A < n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A < n", "obtain S where \"maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        maximal S\n         (\\<lambda>T.\n             T \\<subseteq> set (cols A) \\<and>\n             lin_indpt T) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using maximal_exists[of \"(\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\" \"card (set (cols A))\" \"{}\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>Aa.\n              Aa \\<subseteq> set (cols A) \\<and>\n              lin_indpt Aa \\<Longrightarrow>\n              finite Aa \\<and> card Aa \\<le> card (set (cols A));\n   {} \\<subseteq> set (cols A) \\<and> lin_indpt {}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Aa.\n                       finite Aa \\<and>\n                       maximal Aa\n                        (\\<lambda>T.\n                            T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        maximal S\n         (\\<lambda>T.\n             T \\<subseteq> set (cols A) \\<and>\n             lin_indpt T) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (meson List.finite_set card_mono empty_iff empty_subsetI finite_lin_indpt2 rev_finite_subset)"], ["proof (state)\nthis:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. rank A < n", "then"], ["proof (chain)\npicking this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)", "have \"card S \\<le> card (set (cols A))\""], ["proof (prove)\nusing this:\n  maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\n\ngoal (1 subgoal):\n 1. card S \\<le> card (set (cols A))", "by (simp add: card_mono maximal_def)"], ["proof (state)\nthis:\n  card S \\<le> card (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A < n", "then"], ["proof (chain)\npicking this:\n  card S \\<le> card (set (cols A))", "have \"card S < n\""], ["proof (prove)\nusing this:\n  card S \\<le> card (set (cols A))\n\ngoal (1 subgoal):\n 1. card S < n", "using assms(1) cols_length card_length \\<open>\\<not> distinct (cols A)\\<close> card_distinct carrier_matD(2) nat_less_le"], ["proof (prove)\nusing this:\n  card S \\<le> card (set (cols A))\n  A \\<in> carrier_mat n n\n  length (cols ?A) = dim_col ?A\n  card (set ?xs) \\<le> length ?xs\n  \\<not> distinct (cols A)\n  card (set ?xs) = length ?xs \\<Longrightarrow> distinct ?xs\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n  (?m < ?n) = (?m \\<le> ?n \\<and> ?m \\<noteq> ?n)\n\ngoal (1 subgoal):\n 1. card S < n", "by (metis dual_order.antisym dual_order.trans)"], ["proof (state)\nthis:\n  card S < n\n\ngoal (1 subgoal):\n 1. rank A < n", "then"], ["proof (chain)\npicking this:\n  card S < n", "show ?thesis"], ["proof (prove)\nusing this:\n  card S < n\n\ngoal (1 subgoal):\n 1. rank A < n", "using rank_card_indpt[OF \\<open>A \\<in> carrier_mat n n\\<close> \\<open>maximal S (\\<lambda>T. T \\<subseteq> set (cols A) \\<and> lin_indpt T)\\<close>]"], ["proof (prove)\nusing this:\n  card S < n\n  rank A = card S\n\ngoal (1 subgoal):\n 1. rank A < n", "by simp"], ["proof (state)\nthis:\n  rank A < n\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The theorem \"det non-zero $\\longleftrightarrow$ full rank\" is practically proven in det\\_0\\_iff\\_vec\\_prod\\_zero\\_field,\nbut without an actual definition of the rank.\\<close>"], ["", "lemma (in vec_space) det_zero_low_rank:\nassumes \"A \\<in> carrier_mat n n\"\nand \"det A = 0\"\nshows \"rank A < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A < n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> rank A < n \\<Longrightarrow> False", "assume \"\\<not> rank A < n\""], ["proof (state)\nthis:\n  \\<not> rank A < n\n\ngoal (1 subgoal):\n 1. \\<not> rank A < n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> rank A < n", "have \"rank A = n\""], ["proof (prove)\nusing this:\n  \\<not> rank A < n\n\ngoal (1 subgoal):\n 1. rank A = n", "using rank_le_nc assms le_neq_implies_less"], ["proof (prove)\nusing this:\n  \\<not> rank A < n\n  ?A \\<in> carrier_mat n ?nc \\<Longrightarrow> rank ?A \\<le> ?nc\n  A \\<in> carrier_mat n n\n  det A = (0::'a)\n  \\<lbrakk>?m \\<le> ?n; ?m \\<noteq> ?n\\<rbrakk> \\<Longrightarrow> ?m < ?n\n\ngoal (1 subgoal):\n 1. rank A = n", "by blast"], ["proof (state)\nthis:\n  rank A = n\n\ngoal (1 subgoal):\n 1. \\<not> rank A < n \\<Longrightarrow> False", "obtain v where \"v \\<in> carrier_vec n\" \"v \\<noteq> 0\\<^sub>v n\" \"A *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using det_0_iff_vec_prod_zero_field[OF assms(1)] assms(2)"], ["proof (prove)\nusing this:\n  (det A = (0::'a)) =\n  (\\<exists>v.\n      v \\<in> carrier_vec n \\<and>\n      v \\<noteq> 0\\<^sub>v n \\<and> A *\\<^sub>v v = 0\\<^sub>v n)\n  det A = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  v \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  A *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. \\<not> rank A < n \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  A *\\<^sub>v v = 0\\<^sub>v n", "show False"], ["proof (prove)\nusing this:\n  v \\<in> carrier_vec n\n  v \\<noteq> 0\\<^sub>v n\n  A *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. False", "proof (cases \"distinct (cols A)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  distinct (cols A)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  distinct (cols A)", "have \"lin_indpt (set (cols A))\""], ["proof (prove)\nusing this:\n  distinct (cols A)\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "using full_rank_lin_indpt"], ["proof (prove)\nusing this:\n  distinct (cols A)\n  \\<lbrakk>?A \\<in> carrier_mat n ?nc; rank ?A = ?nc;\n   distinct (cols ?A)\\<rbrakk>\n  \\<Longrightarrow> lin_indpt (set (cols ?A))\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "using \\<open>rank A = n\\<close> assms(1)"], ["proof (prove)\nusing this:\n  distinct (cols A)\n  \\<lbrakk>?A \\<in> carrier_mat n ?nc; rank ?A = ?nc;\n   distinct (cols ?A)\\<rbrakk>\n  \\<Longrightarrow> lin_indpt (set (cols ?A))\n  rank A = n\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "by auto"], ["proof (state)\nthis:\n  lin_indpt (set (cols A))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  lin_indpt (set (cols A))", "show False"], ["proof (prove)\nusing this:\n  lin_indpt (set (cols A))\n\ngoal (1 subgoal):\n 1. False", "using lin_depI[OF assms(1) \\<open>v \\<in> carrier_vec n\\<close> \\<open>v \\<noteq> 0\\<^sub>v n\\<close> \\<open>A *\\<^sub>v v = 0\\<^sub>v n\\<close>] True"], ["proof (prove)\nusing this:\n  lin_indpt (set (cols A))\n  distinct (cols A) \\<Longrightarrow> lin_dep (set (cols A))\n  distinct (cols A)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n     A *\\<^sub>v v = 0\\<^sub>v n; \\<not> distinct (cols A)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> distinct (cols A)", "show False"], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. False", "using non_distinct_low_rank \\<open>rank A = n\\<close> \\<open>\\<not> rank A < n\\<close> assms(1)"], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n  \\<lbrakk>?A \\<in> carrier_mat n n; \\<not> distinct (cols ?A)\\<rbrakk>\n  \\<Longrightarrow> rank ?A < n\n  rank A = n\n  \\<not> rank A < n\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma det_identical_cols:\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and ij: \"i \\<noteq> j\"\n    and i: \"i < n\" and j: \"j < n\"\n    and r: \"col A i = col A j\"\n  shows \"det A = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. det A = (0::'a)", "using det_identical_rows det_transpose"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; ?i \\<noteq> ?j; ?i < ?n; ?j < ?n;\n   row ?A ?i = row ?A ?j\\<rbrakk>\n  \\<Longrightarrow> det ?A = (0::?'a)\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow> det ?A\\<^sup>T = det ?A\n\ngoal (1 subgoal):\n 1. det A = (0::'a)", "by (metis A i ij j carrier_matD(2) transpose_carrier_mat r row_transpose)"], ["", "lemma (in vec_space) low_rank_det_zero:\nassumes \"A \\<in> carrier_mat n n\"\nand \"det A \\<noteq> 0\"\nshows \"rank A = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A = n", "have \"distinct (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (cols A)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow> False", "assume \"\\<not> distinct (cols A)\""], ["proof (state)\nthis:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> distinct (cols A)", "obtain i j where \"i\\<noteq>j\" \"(cols A) ! i = (cols A) ! j\" \"i<length (cols A)\" \"j<length (cols A)\""], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i \\<noteq> j; cols A ! i = cols A ! j; i < length (cols A);\n         j < length (cols A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using distinct_conv_nth"], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n  distinct ?xs =\n  (\\<forall>i<length ?xs.\n      \\<forall>j<length ?xs.\n         i \\<noteq> j \\<longrightarrow> ?xs ! i \\<noteq> ?xs ! j)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i \\<noteq> j; cols A ! i = cols A ! j; i < length (cols A);\n         j < length (cols A)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<noteq> j\n  cols A ! i = cols A ! j\n  i < length (cols A)\n  j < length (cols A)\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> j\n  cols A ! i = cols A ! j\n  i < length (cols A)\n  j < length (cols A)", "have \"col A i = col A j\" \"i<n\" \"j<n\""], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  cols A ! i = cols A ! j\n  i < length (cols A)\n  j < length (cols A)\n\ngoal (1 subgoal):\n 1. col A i = col A j &&& i < n &&& j < n", "using assms(1)"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n  cols A ! i = cols A ! j\n  i < length (cols A)\n  j < length (cols A)\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. col A i = col A j &&& i < n &&& j < n", "by auto"], ["proof (state)\nthis:\n  col A i = col A j\n  i < n\n  j < n\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  col A i = col A j\n  i < n\n  j < n", "have \"det A = 0\""], ["proof (prove)\nusing this:\n  col A i = col A j\n  i < n\n  j < n\n\ngoal (1 subgoal):\n 1. det A = (0::'a)", "using det_identical_cols"], ["proof (prove)\nusing this:\n  col A i = col A j\n  i < n\n  j < n\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; ?i \\<noteq> ?j; ?i < ?n; ?j < ?n;\n   col ?A ?i = col ?A ?j\\<rbrakk>\n  \\<Longrightarrow> det ?A = (0::?'a)\n\ngoal (1 subgoal):\n 1. det A = (0::'a)", "using \\<open>i \\<noteq> j\\<close> assms(1)"], ["proof (prove)\nusing this:\n  col A i = col A j\n  i < n\n  j < n\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; ?i \\<noteq> ?j; ?i < ?n; ?j < ?n;\n   col ?A ?i = col ?A ?j\\<rbrakk>\n  \\<Longrightarrow> det ?A = (0::?'a)\n  i \\<noteq> j\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. det A = (0::'a)", "by blast"], ["proof (state)\nthis:\n  det A = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  det A = (0::'a)", "show False"], ["proof (prove)\nusing this:\n  det A = (0::'a)\n\ngoal (1 subgoal):\n 1. False", "using \\<open>det A \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  det A = (0::'a)\n  det A \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  distinct (cols A)\n\ngoal (1 subgoal):\n 1. rank A = n", "have \"\\<And>v. v \\<in> carrier_vec n \\<Longrightarrow> v \\<noteq> 0\\<^sub>v n \\<Longrightarrow> A *\\<^sub>v v \\<noteq> 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n\\<rbrakk>\n       \\<Longrightarrow> A *\\<^sub>v v \\<noteq> 0\\<^sub>v n", "using det_0_iff_vec_prod_zero_field[OF assms(1)] assms(2)"], ["proof (prove)\nusing this:\n  (det A = (0::'a)) =\n  (\\<exists>v.\n      v \\<in> carrier_vec n \\<and>\n      v \\<noteq> 0\\<^sub>v n \\<and> A *\\<^sub>v v = 0\\<^sub>v n)\n  det A \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n\\<rbrakk>\n       \\<Longrightarrow> A *\\<^sub>v v \\<noteq> 0\\<^sub>v n", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?v1 \\<in> carrier_vec n; ?v1 \\<noteq> 0\\<^sub>v n\\<rbrakk>\n  \\<Longrightarrow> A *\\<^sub>v ?v1 \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. rank A = n", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?v1 \\<in> carrier_vec n; ?v1 \\<noteq> 0\\<^sub>v n\\<rbrakk>\n  \\<Longrightarrow> A *\\<^sub>v ?v1 \\<noteq> 0\\<^sub>v n", "have \"lin_indpt (set (cols A))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?v1 \\<in> carrier_vec n; ?v1 \\<noteq> 0\\<^sub>v n\\<rbrakk>\n  \\<Longrightarrow> A *\\<^sub>v ?v1 \\<noteq> 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "using lin_depE[OF assms(1) _ \\<open>distinct (cols A)\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?v1 \\<in> carrier_vec n; ?v1 \\<noteq> 0\\<^sub>v n\\<rbrakk>\n  \\<Longrightarrow> A *\\<^sub>v ?v1 \\<noteq> 0\\<^sub>v n\n  \\<lbrakk>lin_dep (set (cols A));\n   \\<And>v.\n      \\<lbrakk>v \\<in> carrier_vec n; v \\<noteq> 0\\<^sub>v n;\n       A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols A))", "by auto"], ["proof (state)\nthis:\n  lin_indpt (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A = n", "then"], ["proof (chain)\npicking this:\n  lin_indpt (set (cols A))", "show ?thesis"], ["proof (prove)\nusing this:\n  lin_indpt (set (cols A))\n\ngoal (1 subgoal):\n 1. rank A = n", "using lin_indpt_full_rank[OF assms(1) \\<open>distinct (cols A)\\<close>]"], ["proof (prove)\nusing this:\n  lin_indpt (set (cols A))\n  lin_indpt (set (cols A)) \\<Longrightarrow> rank A = n\n\ngoal (1 subgoal):\n 1. rank A = n", "by metis"], ["proof (state)\nthis:\n  rank A = n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) det_rank_iff:\nassumes \"A \\<in> carrier_mat n n\"\nshows \"det A \\<noteq> 0 \\<longleftrightarrow> rank A = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (det A \\<noteq> (0::'a)) = (rank A = n)", "using assms det_zero_low_rank low_rank_det_zero"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n  \\<lbrakk>?A \\<in> carrier_mat n n; det ?A = (0::'a)\\<rbrakk>\n  \\<Longrightarrow> rank ?A < n\n  \\<lbrakk>?A \\<in> carrier_mat n n; det ?A \\<noteq> (0::'a)\\<rbrakk>\n  \\<Longrightarrow> rank ?A = n\n\ngoal (1 subgoal):\n 1. (det A \\<noteq> (0::'a)) = (rank A = n)", "by force"], ["", "section \"Subadditivity of rank\""], ["", "text \\<open>Subadditivity is the property of rank, that rank (A + B) <= rank A + rank B.\\<close>"], ["", "lemma (in Module.module) lincomb_add:\nassumes \"finite (b1 \\<union> b2)\"\nassumes \"b1 \\<union> b2 \\<subseteq> carrier M\"\nassumes \"x1 = lincomb a1 b1\" \"a1\\<in> (b1\\<rightarrow>carrier R)\"\nassumes \"x2 = lincomb a2 b2\" \"a2\\<in> (b2\\<rightarrow>carrier R)\"\nassumes \"x = x1 \\<oplus>\\<^bsub>M\\<^esub> x2\"\nshows \"lincomb (\\<lambda>v. (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) v \\<oplus> (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) v) (b1 \\<union> b2) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "have \"finite (b1 \\<union> (b2-b1))\" \"finite (b2 \\<union> (b1-b2))\"\n       \"b1 \\<union> (b2 - b1) \\<subseteq> carrier M\" \"b2 \\<union> (b1-b2) \\<subseteq> carrier M\"\n       \"b1 \\<inter> (b2 - b1) = {}\" \"b2 \\<inter> (b1 - b2) = {}\"\n       \"(\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) \\<in> b2 - b1 \\<rightarrow> carrier R\" \"(\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) \\<in> b1 - b2 \\<rightarrow> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((finite (b1 \\<union> (b2 - b1)) &&& finite (b2 \\<union> (b1 - b2))) &&&\n     b1 \\<union> (b2 - b1) \\<subseteq> carrier M &&&\n     b2 \\<union> (b1 - b2) \\<subseteq> carrier M) &&&\n    (b1 \\<inter> (b2 - b1) = {} &&& b2 \\<inter> (b1 - b2) = {}) &&&\n    (\\<lambda>b. \\<zero>) \\<in> b2 - b1 \\<rightarrow> carrier R &&&\n    (\\<lambda>b. \\<zero>) \\<in> b1 - b2 \\<rightarrow> carrier R", "using \\<open>finite (b1 \\<union> b2)\\<close> \\<open>b1 \\<union> b2 \\<subseteq> carrier M\\<close> \\<open>a2\\<in> (b2\\<rightarrow>carrier R)\\<close>"], ["proof (prove)\nusing this:\n  finite (b1 \\<union> b2)\n  b1 \\<union> b2 \\<subseteq> carrier M\n  a2 \\<in> b2 \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. ((finite (b1 \\<union> (b2 - b1)) &&& finite (b2 \\<union> (b1 - b2))) &&&\n     b1 \\<union> (b2 - b1) \\<subseteq> carrier M &&&\n     b2 \\<union> (b1 - b2) \\<subseteq> carrier M) &&&\n    (b1 \\<inter> (b2 - b1) = {} &&& b2 \\<inter> (b1 - b2) = {}) &&&\n    (\\<lambda>b. \\<zero>) \\<in> b2 - b1 \\<rightarrow> carrier R &&&\n    (\\<lambda>b. \\<zero>) \\<in> b1 - b2 \\<rightarrow> carrier R", "by auto"], ["proof (state)\nthis:\n  finite (b1 \\<union> (b2 - b1))\n  finite (b2 \\<union> (b1 - b2))\n  b1 \\<union> (b2 - b1) \\<subseteq> carrier M\n  b2 \\<union> (b1 - b2) \\<subseteq> carrier M\n  b1 \\<inter> (b2 - b1) = {}\n  b2 \\<inter> (b1 - b2) = {}\n  (\\<lambda>b. \\<zero>) \\<in> b2 - b1 \\<rightarrow> carrier R\n  (\\<lambda>b. \\<zero>) \\<in> b1 - b2 \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "have \"lincomb (\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\" \"lincomb (\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub> &&&\n    lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>", "unfolding lincomb_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum M ((\\<odot>\\<^bsub>M\\<^esub>) \\<zero>) (b2 - b1) =\n    \\<zero>\\<^bsub>M\\<^esub> &&&\n    finsum M ((\\<odot>\\<^bsub>M\\<^esub>) \\<zero>) (b1 - b2) =\n    \\<zero>\\<^bsub>M\\<^esub>", "using M.finsum_all0 assms(2) lmult_0 subset_iff"], ["proof (prove)\nusing this:\n  (\\<And>a.\n      a \\<in> ?A \\<Longrightarrow>\n      ?f a = \\<zero>\\<^bsub>M\\<^esub>) \\<Longrightarrow>\n  finsum M ?f ?A = \\<zero>\\<^bsub>M\\<^esub>\n  b1 \\<union> b2 \\<subseteq> carrier M\n  ?m \\<in> carrier M \\<Longrightarrow>\n  \\<zero> \\<odot>\\<^bsub>M\\<^esub> ?m = \\<zero>\\<^bsub>M\\<^esub>\n  (?A \\<subseteq> ?B) =\n  (\\<forall>t. t \\<in> ?A \\<longrightarrow> t \\<in> ?B)\n\ngoal (1 subgoal):\n 1. finsum M ((\\<odot>\\<^bsub>M\\<^esub>) \\<zero>) (b2 - b1) =\n    \\<zero>\\<^bsub>M\\<^esub> &&&\n    finsum M ((\\<odot>\\<^bsub>M\\<^esub>) \\<zero>) (b1 - b2) =\n    \\<zero>\\<^bsub>M\\<^esub>", "by (metis (no_types, lifting) Un_Diff_cancel2 inf_sup_aci(5) le_sup_iff)+"], ["proof (state)\nthis:\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "then"], ["proof (chain)\npicking this:\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>", "have \"x1 = lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) (b1 \\<union> b2)\"\n            \"x2 = lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) (b1 \\<union> b2)\""], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>\n\ngoal (1 subgoal):\n 1. x1 =\n    lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n     (b1 \\<union> b2) &&&\n    x2 =\n    lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n     (b1 \\<union> b2)", "using lincomb_union2[OF \\<open>finite (b1 \\<union> (b2-b1))\\<close> \\<open>b1 \\<union> (b2 - b1) \\<subseteq> carrier M\\<close> \\<open>b1 \\<inter> (b2 - b1) = {}\\<close> \\<open>a1\\<in> (b1\\<rightarrow>carrier R)\\<close> \\<open>(\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) \\<in> b2 - b1 \\<rightarrow> carrier R\\<close>]\n          lincomb_union2[OF \\<open>finite (b2 \\<union> (b1-b2))\\<close> \\<open>b2 \\<union> (b1-b2) \\<subseteq> carrier M\\<close> \\<open>b2 \\<inter> (b1 - b2) = {}\\<close> \\<open>a2\\<in> (b2\\<rightarrow>carrier R)\\<close> \\<open>(\\<lambda>b. \\<zero>\\<^bsub>R\\<^esub>) \\<in> b1 - b2 \\<rightarrow> carrier R\\<close>]"], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb a1 b1 \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) =\n  lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n   (b1 \\<union> (b2 - b1))\n  lincomb a2 b2 \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) =\n  lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n   (b2 \\<union> (b1 - b2))\n\ngoal (1 subgoal):\n 1. x1 =\n    lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n     (b1 \\<union> b2) &&&\n    x2 =\n    lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n     (b1 \\<union> b2)", "using assms(2) assms(3) assms(4)  assms(5)  assms(6)"], ["proof (prove)\nusing this:\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) = \\<zero>\\<^bsub>M\\<^esub>\n  lincomb a1 b1 \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b2 - b1) =\n  lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n   (b1 \\<union> (b2 - b1))\n  lincomb a2 b2 \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>b. \\<zero>) (b1 - b2) =\n  lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n   (b2 \\<union> (b1 - b2))\n  b1 \\<union> b2 \\<subseteq> carrier M\n  x1 = lincomb a1 b1\n  a1 \\<in> b1 \\<rightarrow> carrier R\n  x2 = lincomb a2 b2\n  a2 \\<in> b2 \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. x1 =\n    lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n     (b1 \\<union> b2) &&&\n    x2 =\n    lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n     (b1 \\<union> b2)", "by (simp_all add:Un_commute)"], ["proof (state)\nthis:\n  x1 =\n  lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n   (b1 \\<union> b2)\n  x2 =\n  lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n   (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "have \"(\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) \\<in> (b1 \\<union> b2) \\<rightarrow> carrier R\"\n       \"(\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) \\<in> (b1 \\<union> b2) \\<rightarrow> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n    \\<in> b1 \\<union> b2 \\<rightarrow> carrier R &&&\n    (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n    \\<in> b1 \\<union> b2 \\<rightarrow> carrier R", "using assms(4) assms(6)"], ["proof (prove)\nusing this:\n  a1 \\<in> b1 \\<rightarrow> carrier R\n  a2 \\<in> b2 \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n    \\<in> b1 \\<union> b2 \\<rightarrow> carrier R &&&\n    (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n    \\<in> b1 \\<union> b2 \\<rightarrow> carrier R", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n  \\<in> b1 \\<union> b2 \\<rightarrow> carrier R\n  (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n  \\<in> b1 \\<union> b2 \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "show \"lincomb (\\<lambda>v. (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) v \\<oplus> (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) v) (b1 \\<union> b2) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "using lincomb_sum[OF \\<open>finite (b1 \\<union> b2)\\<close> \\<open>b1 \\<union> b2 \\<subseteq> carrier M\\<close>\n    \\<open>(\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) \\<in> (b1 \\<union> b2) \\<rightarrow> carrier R\\<close> \\<open>(\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) \\<in> (b1 \\<union> b2) \\<rightarrow> carrier R\\<close>]\n    \\<open>x1 = lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>) (b1 \\<union> b2)\\<close> \\<open>x2 = lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>) (b1 \\<union> b2)\\<close> assms(7)"], ["proof (prove)\nusing this:\n  lincomb\n   (\\<lambda>v.\n       (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n       (if v \\<in> b2 then a2 v else \\<zero>))\n   (b1 \\<union> b2) =\n  lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n   (b1 \\<union> b2) \\<oplus>\\<^bsub>M\\<^esub>\n  lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n   (b1 \\<union> b2)\n  x1 =\n  lincomb (\\<lambda>v. if v \\<in> b1 then a1 v else \\<zero>)\n   (b1 \\<union> b2)\n  x2 =\n  lincomb (\\<lambda>v. if v \\<in> b2 then a2 v else \\<zero>)\n   (b1 \\<union> b2)\n  x = x1 \\<oplus>\\<^bsub>M\\<^esub> x2\n\ngoal (1 subgoal):\n 1. lincomb\n     (\\<lambda>v.\n         (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n         (if v \\<in> b2 then a2 v else \\<zero>))\n     (b1 \\<union> b2) =\n    x", "by blast"], ["proof (state)\nthis:\n  lincomb\n   (\\<lambda>v.\n       (if v \\<in> b1 then a1 v else \\<zero>) \\<oplus>\n       (if v \\<in> b2 then a2 v else \\<zero>))\n   (b1 \\<union> b2) =\n  x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) dim_subadditive:\nassumes \"subspace K W1 V\"\nand \"vectorspace.fin_dim K (vs W1)\"\nassumes \"subspace K W2 V\"\nand \"vectorspace.fin_dim K (vs W2)\"\nshows \"vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"vectorspace K (vs W1)\" \"vectorspace K (vs W2)\" \"submodule K W1 V\" \"submodule K W2 V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vectorspace K (vs W1) &&& vectorspace K (vs W2)) &&&\n    LinearCombinations.submodule K W1 V &&&\n    LinearCombinations.submodule K W2 V", "by (simp add: \\<open>subspace K W1 V\\<close> \\<open>subspace K W2 V\\<close> subspace_is_vs)+"], ["proof (state)\nthis:\n  vectorspace K (vs W1)\n  vectorspace K (vs W2)\n  LinearCombinations.submodule K W1 V\n  LinearCombinations.submodule K W2 V\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "obtain b1 b2 where \"vectorspace.basis K (vs W1) b1\" \"vectorspace.basis K (vs W2) b2\" \"finite b1\" \"finite b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1 b2.\n        \\<lbrakk>vectorspace.basis K (vs W1) b1;\n         vectorspace.basis K (vs W2) b2; finite b1; finite b2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using vectorspace.finite_basis_exists[OF \\<open>vectorspace K (vs W1)\\<close> \\<open>vectorspace.fin_dim K (vs W1)\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>\\<beta>.\n     finite \\<beta> \\<and> vectorspace.basis K (vs W1) \\<beta>\n\ngoal (1 subgoal):\n 1. (\\<And>b1 b2.\n        \\<lbrakk>vectorspace.basis K (vs W1) b1;\n         vectorspace.basis K (vs W2) b2; finite b1; finite b2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using vectorspace.finite_basis_exists[OF \\<open>vectorspace K (vs W2)\\<close> \\<open>vectorspace.fin_dim K (vs W2)\\<close>]"], ["proof (prove)\nusing this:\n  \\<exists>\\<beta>.\n     finite \\<beta> \\<and> vectorspace.basis K (vs W1) \\<beta>\n  \\<exists>\\<beta>.\n     finite \\<beta> \\<and> vectorspace.basis K (vs W2) \\<beta>\n\ngoal (1 subgoal):\n 1. (\\<And>b1 b2.\n        \\<lbrakk>vectorspace.basis K (vs W1) b1;\n         vectorspace.basis K (vs W2) b2; finite b1; finite b2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  vectorspace.basis K (vs W1) b1\n  vectorspace.basis K (vs W2) b2\n  finite b1\n  finite b2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "then"], ["proof (chain)\npicking this:\n  vectorspace.basis K (vs W1) b1\n  vectorspace.basis K (vs W2) b2\n  finite b1\n  finite b2", "have \"LinearCombinations.module.gen_set K (vs W1) b1\" \"LinearCombinations.module.gen_set K (vs W2) b2\""], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs W1) b1\n  vectorspace.basis K (vs W2) b2\n  finite b1\n  finite b2\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1) &&&\n    LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)", "using \\<open>vectorspace K (vs W1)\\<close> \\<open>vectorspace K (vs W2)\\<close> vectorspace.basis_def"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs W1) b1\n  vectorspace.basis K (vs W2) b2\n  finite b1\n  finite b2\n  vectorspace K (vs W1)\n  vectorspace K (vs W2)\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1) &&&\n    LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)", "by blast+"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "then"], ["proof (chain)\npicking this:\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)", "have \"span b1 = W1\" \"span b2 = W2\""], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\n\ngoal (1 subgoal):\n 1. local.module.span b1 = W1 &&& local.module.span b2 = W2", "using module.span_li_not_depend(1) \\<open>submodule K W1 V\\<close>  \\<open>submodule K W2 V\\<close>\n    \\<open>vectorspace K (vs W1)\\<close> \\<open>vectorspace.basis K (vs W1) b1\\<close> \\<open>vectorspace K (vs W2)\\<close>\n    \\<open>vectorspace.basis K (vs W2) b2\\<close> vectorspace.basis_def"], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\n  \\<lbrakk>?S \\<subseteq> ?N; LinearCombinations.submodule K ?N V\\<rbrakk>\n  \\<Longrightarrow> LinearCombinations.module.span K (vs ?N) ?S =\n                    local.module.span ?S\n  LinearCombinations.submodule K W1 V\n  LinearCombinations.submodule K W2 V\n  vectorspace K (vs W1)\n  vectorspace.basis K (vs W1) b1\n  vectorspace K (vs W2)\n  vectorspace.basis K (vs W2) b2\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n\ngoal (1 subgoal):\n 1. local.module.span b1 = W1 &&& local.module.span b2 = W2", "by force+"], ["proof (state)\nthis:\n  local.module.span b1 = W1\n  local.module.span b2 = W2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"W1 \\<subseteq> carrier V\" \"W2 \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. W1 \\<subseteq> carrier V &&& W2 \\<subseteq> carrier V", "using \\<open>subspace K W1 V\\<close> \\<open>subspace K W2 V\\<close> subspace_def submodule_def"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n  subspace ?K ?W ?V \\<equiv>\n  vectorspace ?K ?V \\<and> LinearCombinations.submodule ?K ?W ?V\n  LinearCombinations.submodule ?R ?N ?M \\<equiv>\n  (module ?R ?M \\<and> ?N \\<subseteq> carrier ?M) \\<and>\n  (\\<forall>v w.\n      v \\<in> ?N \\<longrightarrow>\n      w \\<in> ?N \\<longrightarrow>\n      v \\<oplus>\\<^bsub>?M\\<^esub> w \\<in> ?N) \\<and>\n  \\<zero>\\<^bsub>?M\\<^esub> \\<in> ?N \\<and>\n  (\\<forall>c v.\n      c \\<in> carrier ?R \\<longrightarrow>\n      v \\<in> ?N \\<longrightarrow> c \\<odot>\\<^bsub>?M\\<^esub> v \\<in> ?N)\n\ngoal (1 subgoal):\n 1. W1 \\<subseteq> carrier V &&& W2 \\<subseteq> carrier V", "by metis+"], ["proof (state)\nthis:\n  W1 \\<subseteq> carrier V\n  W2 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"b1 \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b1 \\<subseteq> carrier V", "using \\<open>vectorspace.basis K (vs W1) b1\\<close> \\<open>vectorspace K (vs W1)\\<close> vectorspace.basis_def\n    \\<open>W1 \\<subseteq> carrier V\\<close>"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs W1) b1\n  vectorspace K (vs W1)\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n  W1 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. b1 \\<subseteq> carrier V", "by fastforce"], ["proof (state)\nthis:\n  b1 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"b2 \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b2 \\<subseteq> carrier V", "using \\<open>vectorspace.basis K (vs W2) b2\\<close> \\<open>vectorspace K (vs W2)\\<close> vectorspace.basis_def\n    \\<open>W2 \\<subseteq> carrier V\\<close>"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs W2) b2\n  vectorspace K (vs W2)\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n  W2 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. b2 \\<subseteq> carrier V", "by fastforce"], ["proof (state)\nthis:\n  b2 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"finite (b1 \\<union> b2)\" \"b1 \\<union> b2 \\<subseteq> carrier V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (b1 \\<union> b2) &&& b1 \\<union> b2 \\<subseteq> carrier V", "by (simp_all add: \\<open>finite b1\\<close> \\<open>finite b2\\<close> \\<open>b2 \\<subseteq> carrier V\\<close> \\<open>b1 \\<subseteq> carrier V\\<close>)"], ["proof (state)\nthis:\n  finite (b1 \\<union> b2)\n  b1 \\<union> b2 \\<subseteq> carrier V\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"subspace_sum W1 W2 \\<subseteq> span (b1\\<union>b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace_sum W1 W2 \\<subseteq> local.module.span (b1 \\<union> b2)", "proof (rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "assume \"x \\<in> subspace_sum W1 W2\""], ["proof (state)\nthis:\n  x \\<in> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "obtain x1 x2 where  \"x1 \\<in> W1\" \"x2 \\<in> W2\" \"x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>x1 \\<in> W1; x2 \\<in> W2;\n         x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using imageE[OF \\<open>x \\<in> subspace_sum W1 W2\\<close>[unfolded submodule_sum_def]]"], ["proof (prove)\nusing this:\n  (\\<And>xa.\n      \\<lbrakk>x =\n               (case xa of\n                (x, xa) \\<Rightarrow> x \\<oplus>\\<^bsub>V\\<^esub> xa);\n       xa \\<in> {(x, y). x \\<in> W1 \\<and> y \\<in> W2}\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>x1 \\<in> W1; x2 \\<in> W2;\n         x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) BNF_Def.Collect_case_prodD split_def)"], ["proof (state)\nthis:\n  x1 \\<in> W1\n  x2 \\<in> W2\n  x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "obtain a1 where \"x1 = lincomb a1 b1\" \"a1\\<in> (b1\\<rightarrow>carrier K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a1.\n        \\<lbrakk>x1 = lincomb a1 b1;\n         a1 \\<in> b1 \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>span b1 = W1\\<close> finite_span[OF \\<open>finite b1\\<close> \\<open>b1 \\<subseteq> carrier V\\<close>] \\<open>x1 \\<in> W1\\<close>"], ["proof (prove)\nusing this:\n  local.module.span b1 = W1\n  local.module.span b1 =\n  {lincomb a b1 |a. a \\<in> b1 \\<rightarrow> carrier K}\n  x1 \\<in> W1\n\ngoal (1 subgoal):\n 1. (\\<And>a1.\n        \\<lbrakk>x1 = lincomb a1 b1;\n         a1 \\<in> b1 \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x1 = lincomb a1 b1\n  a1 \\<in> b1 \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "obtain a2 where \"x2 = lincomb a2 b2\" \"a2\\<in> (b2\\<rightarrow>carrier K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a2.\n        \\<lbrakk>x2 = lincomb a2 b2;\n         a2 \\<in> b2 \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>span b2 = W2\\<close> finite_span[OF \\<open>finite b2\\<close> \\<open>b2 \\<subseteq> carrier V\\<close>] \\<open>x2 \\<in> W2\\<close>"], ["proof (prove)\nusing this:\n  local.module.span b2 = W2\n  local.module.span b2 =\n  {lincomb a b2 |a. a \\<in> b2 \\<rightarrow> carrier K}\n  x2 \\<in> W2\n\ngoal (1 subgoal):\n 1. (\\<And>a2.\n        \\<lbrakk>x2 = lincomb a2 b2;\n         a2 \\<in> b2 \\<rightarrow> carrier K\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x2 = lincomb a2 b2\n  a2 \\<in> b2 \\<rightarrow> carrier K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "obtain a where \"x = lincomb a (b1 \\<union> b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        x = lincomb a (b1 \\<union> b2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lincomb_add[OF \\<open>finite (b1 \\<union> b2)\\<close> \\<open>b1 \\<union> b2 \\<subseteq> carrier V\\<close>\n      \\<open>x1 = lincomb a1 b1\\<close> \\<open>a1\\<in> (b1\\<rightarrow>carrier K)\\<close>  \\<open>x2 = lincomb a2 b2\\<close> \\<open>a2\\<in> (b2\\<rightarrow>carrier K)\\<close> \\<open>x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\\<close>]"], ["proof (prove)\nusing this:\n  lincomb\n   (\\<lambda>v.\n       (if v \\<in> b1 then a1 v\n        else \\<zero>\\<^bsub>K\\<^esub>) \\<oplus>\\<^bsub>K\\<^esub>\n       (if v \\<in> b2 then a2 v else \\<zero>\\<^bsub>K\\<^esub>))\n   (b1 \\<union> b2) =\n  x\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        x = lincomb a (b1 \\<union> b2) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = lincomb a (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> subspace_sum W1 W2 \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  x = lincomb a (b1 \\<union> b2)", "show \"x \\<in> span (b1 \\<union> b2)\""], ["proof (prove)\nusing this:\n  x = lincomb a (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. x \\<in> local.module.span (b1 \\<union> b2)", "using finite_span[OF \\<open>finite (b1 \\<union> b2)\\<close> \\<open>(b1 \\<union> b2) \\<subseteq> carrier V\\<close>]"], ["proof (prove)\nusing this:\n  x = lincomb a (b1 \\<union> b2)\n  local.module.span (b1 \\<union> b2) =\n  {lincomb a (b1 \\<union> b2) |a.\n   a \\<in> b1 \\<union> b2 \\<rightarrow> carrier K}\n\ngoal (1 subgoal):\n 1. x \\<in> local.module.span (b1 \\<union> b2)", "using \\<open>b1 \\<subseteq> carrier V\\<close> \\<open>b2 \\<subseteq> carrier V\\<close> \\<open>span b1 = W1\\<close> \\<open>span b2 = W2\\<close> \\<open>x \\<in> subspace_sum W1 W2\\<close> span_union_is_sum"], ["proof (prove)\nusing this:\n  x = lincomb a (b1 \\<union> b2)\n  local.module.span (b1 \\<union> b2) =\n  {lincomb a (b1 \\<union> b2) |a.\n   a \\<in> b1 \\<union> b2 \\<rightarrow> carrier K}\n  b1 \\<subseteq> carrier V\n  b2 \\<subseteq> carrier V\n  local.module.span b1 = W1\n  local.module.span b2 = W2\n  x \\<in> subspace_sum W1 W2\n  \\<lbrakk>?A \\<subseteq> carrier V; ?B \\<subseteq> carrier V\\<rbrakk>\n  \\<Longrightarrow> local.module.span (?A \\<union> ?B) =\n                    subspace_sum (local.module.span ?A)\n                     (local.module.span ?B)\n\ngoal (1 subgoal):\n 1. x \\<in> local.module.span (b1 \\<union> b2)", "by auto"], ["proof (state)\nthis:\n  x \\<in> local.module.span (b1 \\<union> b2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subspace_sum W1 W2 \\<subseteq> local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"b1 \\<subseteq> W1\" \"b2 \\<subseteq> W2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b1 \\<subseteq> W1 &&& b2 \\<subseteq> W2", "using \\<open>vectorspace K (vs W1)\\<close> \\<open>vectorspace K (vs W2)\\<close> \\<open>vectorspace.basis K (vs W1) b1\\<close>\n    \\<open>vectorspace.basis K (vs W2) b2\\<close> vectorspace.basis_def local.carrier_vs_is_self"], ["proof (prove)\nusing this:\n  vectorspace K (vs W1)\n  vectorspace K (vs W2)\n  vectorspace.basis K (vs W1) b1\n  vectorspace.basis K (vs W2) b2\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> LinearCombinations.module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n  carrier (vs ?W) = ?W\n\ngoal (1 subgoal):\n 1. b1 \\<subseteq> W1 &&& b2 \\<subseteq> W2", "by blast+"], ["proof (state)\nthis:\n  b1 \\<subseteq> W1\n  b2 \\<subseteq> W2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "then"], ["proof (chain)\npicking this:\n  b1 \\<subseteq> W1\n  b2 \\<subseteq> W2", "have \"b1\\<union>b2 \\<subseteq> subspace_sum W1 W2\""], ["proof (prove)\nusing this:\n  b1 \\<subseteq> W1\n  b2 \\<subseteq> W2\n\ngoal (1 subgoal):\n 1. b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2", "using \\<open>submodule K W1 V\\<close> \\<open>submodule K W2 V\\<close> in_sum"], ["proof (prove)\nusing this:\n  b1 \\<subseteq> W1\n  b2 \\<subseteq> W2\n  LinearCombinations.submodule K W1 V\n  LinearCombinations.submodule K W2 V\n  \\<lbrakk>LinearCombinations.submodule K ?N1.0 V;\n   LinearCombinations.submodule K ?N2.0 V\\<rbrakk>\n  \\<Longrightarrow> ?N1.0 \\<subseteq> subspace_sum ?N1.0 ?N2.0\n\ngoal (1 subgoal):\n 1. b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2", "by (metis assms(1) assms(3) dual_order.trans sup_least vectorspace.vsum_comm vectorspace_axioms)"], ["proof (state)\nthis:\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"subspace_sum W1 W2 = LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1\\<union>b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace_sum W1 W2 =\n    LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)", "proof (rule subset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. subspace_sum W1 W2\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)\n 2. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> subspace_sum W1 W2", "have \"submodule K (subspace_sum W1 W2) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule K (subspace_sum W1 W2) V", "by (simp add: \\<open>submodule K W1 V\\<close> \\<open>submodule K W2 V\\<close> sum_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule K (subspace_sum W1 W2) V\n\ngoal (2 subgoals):\n 1. subspace_sum W1 W2\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)\n 2. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> subspace_sum W1 W2", "show \"subspace_sum W1 W2 \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1\\<union>b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace_sum W1 W2\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "using module.span_li_not_depend(1)[OF \\<open>b1\\<union>b2 \\<subseteq> subspace_sum W1 W2\\<close> \\<open>submodule K (subspace_sum W1 W2) V\\<close>]"], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. subspace_sum W1 W2\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "by (simp add: \\<open>subspace_sum W1 W2 \\<subseteq> span (b1 \\<union> b2)\\<close>)"], ["proof (state)\nthis:\n  subspace_sum W1 W2\n  \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n               (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> subspace_sum W1 W2", "show \"subspace_sum W1 W2 \\<supseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1\\<union>b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> subspace_sum W1 W2", "using \\<open>b1\\<union>b2 \\<subseteq> subspace_sum W1 W2\\<close>"], ["proof (prove)\nusing this:\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> subspace_sum W1 W2", "by (metis (full_types) LinearCombinations.module.span_is_subset2\n      LinearCombinations.module.submodule_is_module \\<open>submodule K (subspace_sum W1 W2) V\\<close> local.carrier_vs_is_self submodule_def)"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2)\n  \\<subseteq> subspace_sum W1 W2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subspace_sum W1 W2 =\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"vectorspace K (vs (subspace_sum W1 W2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (vs (subspace_sum W1 W2))", "using assms(1) assms(3) subspace_def sum_is_subspace vectorspace.subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n  subspace ?K ?W ?V \\<equiv>\n  vectorspace ?K ?V \\<and> LinearCombinations.submodule ?K ?W ?V\n  \\<lbrakk>subspace K ?W1.0 V; subspace K ?W2.0 V\\<rbrakk>\n  \\<Longrightarrow> subspace K (subspace_sum ?W1.0 ?W2.0) V\n  \\<lbrakk>vectorspace ?K ?V; subspace ?K ?W ?V\\<rbrakk>\n  \\<Longrightarrow> vectorspace ?K (?V\\<lparr>carrier := ?W\\<rparr>)\n\ngoal (1 subgoal):\n 1. vectorspace K (vs (subspace_sum W1 W2))", "by blast"], ["proof (state)\nthis:\n  vectorspace K (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "then"], ["proof (chain)\npicking this:\n  vectorspace K (vs (subspace_sum W1 W2))", "have \"vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> card (b1 \\<union> b2)\""], ["proof (prove)\nusing this:\n  vectorspace K (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> card (b1 \\<union> b2)", "using vectorspace.gen_ge_dim[OF \\<open>vectorspace K (vs (subspace_sum W1 W2))\\<close> \\<open>finite (b1 \\<union> b2)\\<close>]\n    \\<open>b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\\<close>\n    \\<open>subspace_sum W1 W2 = LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1 \\<union> b2)\\<close>\n    local.carrier_vs_is_self"], ["proof (prove)\nusing this:\n  vectorspace K (vs (subspace_sum W1 W2))\n  \\<lbrakk>b1 \\<union> b2 \\<subseteq> carrier (vs (subspace_sum W1 W2));\n   LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n    (b1 \\<union> b2) =\n   carrier (vs (subspace_sum W1 W2))\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim K (vs (subspace_sum W1 W2))\n                    \\<le> card (b1 \\<union> b2)\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n  subspace_sum W1 W2 =\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2)\n  carrier (vs ?W) = ?W\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> card (b1 \\<union> b2)", "by blast"], ["proof (state)\nthis:\n  vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> card (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "also"], ["proof (state)\nthis:\n  vectorspace.dim K (vs (subspace_sum W1 W2)) \\<le> card (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"... \\<le> card b1 + card b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (b1 \\<union> b2) \\<le> card b1 + card b2", "by (simp add: card_Un_le)"], ["proof (state)\nthis:\n  card (b1 \\<union> b2) \\<le> card b1 + card b2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "also"], ["proof (state)\nthis:\n  card (b1 \\<union> b2) \\<le> card b1 + card b2\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "have \"... = vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card b1 + card b2 =\n    vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "by (metis \\<open>finite b1\\<close> \\<open>finite b2\\<close> \\<open>vectorspace K (vs W1)\\<close> \\<open>vectorspace K (vs W2)\\<close>\n    \\<open>vectorspace.basis K (vs W1) b1\\<close> \\<open>vectorspace.basis K (vs W2) b2\\<close> vectorspace.dim_basis)"], ["proof (state)\nthis:\n  card b1 + card b2 = vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "finally"], ["proof (chain)\npicking this:\n  vectorspace.dim K (vs (subspace_sum W1 W2))\n  \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace.dim K (vs (subspace_sum W1 W2))\n  \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)", "by auto"], ["proof (state)\nthis:\n  vectorspace.dim K (vs (subspace_sum W1 W2))\n  \\<le> vectorspace.dim K (vs W1) + vectorspace.dim K (vs W2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in Module.module) nested_submodules:\nassumes \"submodule R W M\"\nassumes \"submodule R X M\"\nassumes \"X \\<subseteq> W\"\nshows \"submodule R X (md W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule R X (md W)", "unfolding submodule_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (module R (md W) \\<and> X \\<subseteq> carrier (md W)) \\<and>\n    (\\<forall>v w.\n        v \\<in> X \\<longrightarrow>\n        w \\<in> X \\<longrightarrow>\n        v \\<oplus>\\<^bsub>md W\\<^esub> w \\<in> X) \\<and>\n    \\<zero>\\<^bsub>md W\\<^esub> \\<in> X \\<and>\n    (\\<forall>c v.\n        c \\<in> carrier R \\<longrightarrow>\n        v \\<in> X \\<longrightarrow> c \\<odot>\\<^bsub>md W\\<^esub> v \\<in> X)", "using \\<open>X \\<subseteq> W\\<close> submodule_is_module[OF \\<open>submodule R W M\\<close>]"], ["proof (prove)\nusing this:\n  X \\<subseteq> W\n  module R (md W)\n\ngoal (1 subgoal):\n 1. (module R (md W) \\<and> X \\<subseteq> carrier (md W)) \\<and>\n    (\\<forall>v w.\n        v \\<in> X \\<longrightarrow>\n        w \\<in> X \\<longrightarrow>\n        v \\<oplus>\\<^bsub>md W\\<^esub> w \\<in> X) \\<and>\n    \\<zero>\\<^bsub>md W\\<^esub> \\<in> X \\<and>\n    (\\<forall>c v.\n        c \\<in> carrier R \\<longrightarrow>\n        v \\<in> X \\<longrightarrow> c \\<odot>\\<^bsub>md W\\<^esub> v \\<in> X)", "using \\<open>submodule R X M\\<close>[unfolded submodule_def]"], ["proof (prove)\nusing this:\n  X \\<subseteq> W\n  module R (md W)\n  (module R M \\<and> X \\<subseteq> carrier M) \\<and>\n  (\\<forall>v w.\n      v \\<in> X \\<longrightarrow>\n      w \\<in> X \\<longrightarrow>\n      v \\<oplus>\\<^bsub>M\\<^esub> w \\<in> X) \\<and>\n  \\<zero>\\<^bsub>M\\<^esub> \\<in> X \\<and>\n  (\\<forall>c v.\n      c \\<in> carrier R \\<longrightarrow>\n      v \\<in> X \\<longrightarrow> c \\<odot>\\<^bsub>M\\<^esub> v \\<in> X)\n\ngoal (1 subgoal):\n 1. (module R (md W) \\<and> X \\<subseteq> carrier (md W)) \\<and>\n    (\\<forall>v w.\n        v \\<in> X \\<longrightarrow>\n        w \\<in> X \\<longrightarrow>\n        v \\<oplus>\\<^bsub>md W\\<^esub> w \\<in> X) \\<and>\n    \\<zero>\\<^bsub>md W\\<^esub> \\<in> X \\<and>\n    (\\<forall>c v.\n        c \\<in> carrier R \\<longrightarrow>\n        v \\<in> X \\<longrightarrow> c \\<odot>\\<^bsub>md W\\<^esub> v \\<in> X)", "by auto"], ["", "lemma (in vectorspace) nested_subspaces:\nassumes \"subspace K W V\"\nassumes \"subspace K X V\"\nassumes \"X \\<subseteq> W\"\nshows \"subspace K X (vs W)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace K X (vs W)", "using assms nested_submodules subspace_def subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K W V\n  subspace K X V\n  X \\<subseteq> W\n  \\<lbrakk>LinearCombinations.submodule K ?W V;\n   LinearCombinations.submodule K ?X V; ?X \\<subseteq> ?W\\<rbrakk>\n  \\<Longrightarrow> LinearCombinations.submodule K ?X (vs ?W)\n  subspace ?K ?W ?V \\<equiv>\n  vectorspace ?K ?V \\<and> LinearCombinations.submodule ?K ?W ?V\n  subspace K ?W V \\<Longrightarrow> vectorspace K (vs ?W)\n\ngoal (1 subgoal):\n 1. subspace K X (vs W)", "by blast"], ["", "lemma (in vectorspace) subspace_dim:\nassumes \"subspace K X V\" \"fin_dim\" \"vectorspace.fin_dim K (vs X)\"\nshows \"vectorspace.dim K (vs X) \\<le> dim\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "have \"vectorspace K (vs X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace K (vs X)", "using assms(1) subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K X V\n  subspace K ?W V \\<Longrightarrow> vectorspace K (vs ?W)\n\ngoal (1 subgoal):\n 1. vectorspace K (vs X)", "by auto"], ["proof (state)\nthis:\n  vectorspace K (vs X)\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "then"], ["proof (chain)\npicking this:\n  vectorspace K (vs X)", "obtain b where \"vectorspace.basis K (vs X) b\""], ["proof (prove)\nusing this:\n  vectorspace K (vs X)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        vectorspace.basis K (vs X) b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using vectorspace.finite_basis_exists"], ["proof (prove)\nusing this:\n  vectorspace K (vs X)\n  \\<lbrakk>vectorspace ?K ?V; vectorspace.fin_dim ?K ?V\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<beta>.\n                       finite \\<beta> \\<and> vectorspace.basis ?K ?V \\<beta>\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        vectorspace.basis K (vs X) b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms(3)"], ["proof (prove)\nusing this:\n  vectorspace K (vs X)\n  \\<lbrakk>vectorspace ?K ?V; vectorspace.fin_dim ?K ?V\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<beta>.\n                       finite \\<beta> \\<and> vectorspace.basis ?K ?V \\<beta>\n  vectorspace.fin_dim K (vs X)\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        vectorspace.basis K (vs X) b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  vectorspace.basis K (vs X) b\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "then"], ["proof (chain)\npicking this:\n  vectorspace.basis K (vs X) b", "have \"b \\<subseteq> carrier V\" \"LinearCombinations.module.lin_indpt K (vs X) b\""], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs X) b\n\ngoal (1 subgoal):\n 1. b \\<subseteq> carrier V &&&\n    \\<not> LinearCombinations.module.lin_dep K (vs X) b", "using vectorspace.basis_def[OF \\<open>vectorspace K (vs X)\\<close>] \\<open>subspace K X V\\<close>[unfolded subspace_def submodule_def]"], ["proof (prove)\nusing this:\n  vectorspace.basis K (vs X) b\n  vectorspace.basis K (vs X) ?A =\n  (\\<not> LinearCombinations.module.lin_dep K (vs X) ?A \\<and>\n   LinearCombinations.module.span K (vs X) ?A = carrier (vs X) \\<and>\n   ?A \\<subseteq> carrier (vs X))\n  vectorspace K V \\<and>\n  (module K V \\<and> X \\<subseteq> carrier V) \\<and>\n  (\\<forall>v w.\n      v \\<in> X \\<longrightarrow>\n      w \\<in> X \\<longrightarrow>\n      v \\<oplus>\\<^bsub>V\\<^esub> w \\<in> X) \\<and>\n  \\<zero>\\<^bsub>V\\<^esub> \\<in> X \\<and>\n  (\\<forall>c v.\n      c \\<in> carrier K \\<longrightarrow>\n      v \\<in> X \\<longrightarrow> c \\<odot>\\<^bsub>V\\<^esub> v \\<in> X)\n\ngoal (1 subgoal):\n 1. b \\<subseteq> carrier V &&&\n    \\<not> LinearCombinations.module.lin_dep K (vs X) b", "by auto"], ["proof (state)\nthis:\n  b \\<subseteq> carrier V\n  \\<not> LinearCombinations.module.lin_dep K (vs X) b\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "then"], ["proof (chain)\npicking this:\n  b \\<subseteq> carrier V\n  \\<not> LinearCombinations.module.lin_dep K (vs X) b", "have \"lin_indpt b\""], ["proof (prove)\nusing this:\n  b \\<subseteq> carrier V\n  \\<not> LinearCombinations.module.lin_dep K (vs X) b\n\ngoal (1 subgoal):\n 1. lin_indpt b", "by (metis LinearCombinations.module.span_li_not_depend(2) \\<open>vectorspace K (vs X)\\<close> \\<open>vectorspace.basis K (vs X) b\\<close>\n    assms(1) is_module local.carrier_vs_is_self submodule_def vectorspace.basis_def)"], ["proof (state)\nthis:\n  lin_indpt b\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "using li_le_dim(2)[OF \\<open>fin_dim\\<close> \\<open>b \\<subseteq> carrier V\\<close> \\<open>lin_indpt b\\<close>]"], ["proof (prove)\nusing this:\n  card b \\<le> local.dim\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "using \\<open>b \\<subseteq> carrier V\\<close> \\<open>lin_indpt b\\<close> \\<open>vectorspace K (vs X)\\<close> \\<open>vectorspace.basis K (vs X) b\\<close> assms(2)\n    fin_dim_li_fin vectorspace.dim_basis"], ["proof (prove)\nusing this:\n  card b \\<le> local.dim\n  b \\<subseteq> carrier V\n  lin_indpt b\n  vectorspace K (vs X)\n  vectorspace.basis K (vs X) b\n  fin_dim\n  \\<lbrakk>fin_dim; lin_indpt ?A; ?A \\<subseteq> carrier V\\<rbrakk>\n  \\<Longrightarrow> finite ?A\n  \\<lbrakk>vectorspace ?K ?V; finite ?A; vectorspace.basis ?K ?V ?A\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim ?K ?V = card ?A\n\ngoal (1 subgoal):\n 1. vectorspace.dim K (vs X) \\<le> local.dim", "by fastforce"], ["proof (state)\nthis:\n  vectorspace.dim K (vs X) \\<le> local.dim\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vectorspace) fin_dim_subspace_sum:\nassumes \"subspace K W1 V\"\nassumes \"subspace K W2 V\"\nassumes \"vectorspace.fin_dim K (vs W1)\" \"vectorspace.fin_dim K (vs W2)\"\nshows \"vectorspace.fin_dim K (vs (subspace_sum W1 W2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "obtain b1 where \"finite b1\" \"b1 \\<subseteq> W1\" \"LinearCombinations.module.gen_set K (vs W1) b1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>finite b1; b1 \\<subseteq> W1;\n         LinearCombinations.module.span K (vs W1) b1 =\n         carrier (vs W1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms vectorspace.fin_dim_def subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n  vectorspace.fin_dim K (vs W1)\n  vectorspace.fin_dim K (vs W2)\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.fin_dim ?K ?V =\n  (\\<exists>A.\n      finite A \\<and>\n      A \\<subseteq> carrier ?V \\<and>\n      LinearCombinations.module.span ?K ?V A = carrier ?V)\n  subspace K ?W V \\<Longrightarrow> vectorspace K (vs ?W)\n\ngoal (1 subgoal):\n 1. (\\<And>b1.\n        \\<lbrakk>finite b1; b1 \\<subseteq> W1;\n         LinearCombinations.module.span K (vs W1) b1 =\n         carrier (vs W1)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  finite b1\n  b1 \\<subseteq> W1\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "obtain b2 where \"finite b2\" \"b2 \\<subseteq> W2\" \"LinearCombinations.module.gen_set K (vs W2) b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b2.\n        \\<lbrakk>finite b2; b2 \\<subseteq> W2;\n         LinearCombinations.module.span K (vs W2) b2 =\n         carrier (vs W2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms vectorspace.fin_dim_def subspace_is_vs"], ["proof (prove)\nusing this:\n  subspace K W1 V\n  subspace K W2 V\n  vectorspace.fin_dim K (vs W1)\n  vectorspace.fin_dim K (vs W2)\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.fin_dim ?K ?V =\n  (\\<exists>A.\n      finite A \\<and>\n      A \\<subseteq> carrier ?V \\<and>\n      LinearCombinations.module.span ?K ?V A = carrier ?V)\n  subspace K ?W V \\<Longrightarrow> vectorspace K (vs ?W)\n\ngoal (1 subgoal):\n 1. (\\<And>b2.\n        \\<lbrakk>finite b2; b2 \\<subseteq> W2;\n         LinearCombinations.module.span K (vs W2) b2 =\n         carrier (vs W2)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  finite b2\n  b2 \\<subseteq> W2\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "have 1:\"finite (b1 \\<union> b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (b1 \\<union> b2)", "by (simp add: \\<open>finite b1\\<close> \\<open>finite b2\\<close>)"], ["proof (state)\nthis:\n  finite (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "have 2:\"b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2", "by (metis (no_types, lifting) \\<open>b1 \\<subseteq> W1\\<close> \\<open>b2 \\<subseteq> W2\\<close> assms(1) assms(2)\n    le_sup_iff subset_Un_eq vectorspace.in_sum_vs vectorspace.vsum_comm vectorspace_axioms)"], ["proof (state)\nthis:\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "have 3:\"LinearCombinations.module.gen_set K (vs (subspace_sum W1 W2)) (b1 \\<union> b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2) =\n    carrier (vs (subspace_sum W1 W2))", "proof (rule subset_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> carrier (vs (subspace_sum W1 W2))\n 2. carrier (vs (subspace_sum W1 W2))\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "have 0:\"LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1 \\<union> b2) = span (b1 \\<union> b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2) =\n    local.module.span (b1 \\<union> b2)", "using span_li_not_depend(1)[OF \\<open>b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\\<close>] sum_is_subspace[OF assms(1) assms(2)]"], ["proof (prove)\nusing this:\n  LinearCombinations.submodule K (subspace_sum W1 W2) V \\<Longrightarrow>\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)\n  subspace K (subspace_sum W1 W2) V\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2) =\n    local.module.span (b1 \\<union> b2)", "by auto"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)\n\ngoal (2 subgoals):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> carrier (vs (subspace_sum W1 W2))\n 2. carrier (vs (subspace_sum W1 W2))\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)", "show \"LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1 \\<union> b2) \\<subseteq> carrier (vs (subspace_sum W1 W2))\""], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> carrier (vs (subspace_sum W1 W2))", "using \\<open>b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\\<close> span_is_subset sum_is_subspace[OF assms(1) assms(2)]"], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  local.module.span (b1 \\<union> b2)\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n  \\<lbrakk>?S \\<subseteq> ?N; LinearCombinations.submodule K ?N V\\<rbrakk>\n  \\<Longrightarrow> local.module.span ?S \\<subseteq> ?N\n  subspace K (subspace_sum W1 W2) V\n\ngoal (1 subgoal):\n 1. LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n     (b1 \\<union> b2)\n    \\<subseteq> carrier (vs (subspace_sum W1 W2))", "by auto"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2)\n  \\<subseteq> carrier (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. carrier (vs (subspace_sum W1 W2))\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "show \"carrier (vs (subspace_sum W1 W2)) \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2)) (b1 \\<union> b2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (vs (subspace_sum W1 W2))\n    \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n                 (b1 \\<union> b2)", "unfolding 0"], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (vs (subspace_sum W1 W2))\n    \\<subseteq> local.module.span (b1 \\<union> b2)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "assume assumption:\"x \\<in> carrier (vs (subspace_sum W1 W2))\""], ["proof (state)\nthis:\n  x \\<in> carrier (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> carrier (vs (subspace_sum W1 W2))", "have \"x\\<in>subspace_sum W1 W2\""], ["proof (prove)\nusing this:\n  x \\<in> carrier (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. x \\<in> subspace_sum W1 W2", "by auto"], ["proof (state)\nthis:\n  x \\<in> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  x \\<in> subspace_sum W1 W2", "obtain x1 x2 where \"x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\" \"x1\\<in>W1\" \"x2\\<in>W2\""], ["proof (prove)\nusing this:\n  x \\<in> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2; x1 \\<in> W1;\n         x2 \\<in> W2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using imageE[OF \\<open>x \\<in> subspace_sum W1 W2\\<close>[unfolded submodule_sum_def]]"], ["proof (prove)\nusing this:\n  x \\<in> subspace_sum W1 W2\n  (\\<And>xa.\n      \\<lbrakk>x =\n               (case xa of\n                (x, xa) \\<Rightarrow> x \\<oplus>\\<^bsub>V\\<^esub> xa);\n       xa \\<in> {(x, y). x \\<in> W1 \\<and> y \\<in> W2}\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>x1 x2.\n        \\<lbrakk>x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2; x1 \\<in> W1;\n         x2 \\<in> W2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (no_types, lifting) BNF_Def.Collect_case_prodD split_def)"], ["proof (state)\nthis:\n  x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\n  x1 \\<in> W1\n  x2 \\<in> W2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "have \"x1\\<in>span b1\"  \"x2\\<in>span b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x1 \\<in> local.module.span b1 &&& x2 \\<in> local.module.span b2", "using \\<open>LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\\<close> \\<open>b1 \\<subseteq> W1\\<close> \\<open>x1 \\<in> W1\\<close>\n              \\<open>LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\\<close> \\<open>b2 \\<subseteq> W2\\<close> \\<open>x2 \\<in> W2\\<close>\n        assms(1) assms(2) span_li_not_depend(1)"], ["proof (prove)\nusing this:\n  LinearCombinations.module.span K (vs W1) b1 = carrier (vs W1)\n  b1 \\<subseteq> W1\n  x1 \\<in> W1\n  LinearCombinations.module.span K (vs W2) b2 = carrier (vs W2)\n  b2 \\<subseteq> W2\n  x2 \\<in> W2\n  subspace K W1 V\n  subspace K W2 V\n  \\<lbrakk>?S \\<subseteq> ?N; LinearCombinations.submodule K ?N V\\<rbrakk>\n  \\<Longrightarrow> LinearCombinations.module.span K (vs ?N) ?S =\n                    local.module.span ?S\n\ngoal (1 subgoal):\n 1. x1 \\<in> local.module.span b1 &&& x2 \\<in> local.module.span b2", "by auto"], ["proof (state)\nthis:\n  x1 \\<in> local.module.span b1\n  x2 \\<in> local.module.span b2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  x1 \\<in> local.module.span b1\n  x2 \\<in> local.module.span b2", "have \"x1\\<in>span (b1 \\<union> b2)\" \"x2\\<in>span (b1 \\<union> b2)\""], ["proof (prove)\nusing this:\n  x1 \\<in> local.module.span b1\n  x2 \\<in> local.module.span b2\n\ngoal (1 subgoal):\n 1. x1 \\<in> local.module.span (b1 \\<union> b2) &&&\n    x2 \\<in> local.module.span (b1 \\<union> b2)", "by (meson le_sup_iff subsetD span_is_monotone subsetI)+"], ["proof (state)\nthis:\n  x1 \\<in> local.module.span (b1 \\<union> b2)\n  x2 \\<in> local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (vs (subspace_sum W1 W2)) \\<Longrightarrow>\n       x \\<in> local.module.span (b1 \\<union> b2)", "then"], ["proof (chain)\npicking this:\n  x1 \\<in> local.module.span (b1 \\<union> b2)\n  x2 \\<in> local.module.span (b1 \\<union> b2)", "show \"x \\<in> span (b1 \\<union> b2)\""], ["proof (prove)\nusing this:\n  x1 \\<in> local.module.span (b1 \\<union> b2)\n  x2 \\<in> local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. x \\<in> local.module.span (b1 \\<union> b2)", "unfolding \\<open>x = x1 \\<oplus>\\<^bsub>V\\<^esub> x2\\<close>"], ["proof (prove)\nusing this:\n  x1 \\<in> local.module.span (b1 \\<union> b2)\n  x2 \\<in> local.module.span (b1 \\<union> b2)\n\ngoal (1 subgoal):\n 1. x1 \\<oplus>\\<^bsub>V\\<^esub> x2 \\<in> local.module.span (b1 \\<union> b2)", "by (meson \\<open>b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\\<close> assms(1) assms(2) is_module submodule.subset\n        subset_trans sum_is_submodule vectorspace.span_add1 vectorspace_axioms)"], ["proof (state)\nthis:\n  x \\<in> local.module.span (b1 \\<union> b2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier (vs (subspace_sum W1 W2))\n  \\<subseteq> LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n               (b1 \\<union> b2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  carrier (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "using 1 2 3 vectorspace.fin_dim_def"], ["proof (prove)\nusing this:\n  finite (b1 \\<union> b2)\n  b1 \\<union> b2 \\<subseteq> subspace_sum W1 W2\n  LinearCombinations.module.span K (vs (subspace_sum W1 W2))\n   (b1 \\<union> b2) =\n  carrier (vs (subspace_sum W1 W2))\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.fin_dim ?K ?V =\n  (\\<exists>A.\n      finite A \\<and>\n      A \\<subseteq> carrier ?V \\<and>\n      LinearCombinations.module.span ?K ?V A = carrier ?V)\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim K (vs (subspace_sum W1 W2))", "by (metis assms(1) assms(2) local.carrier_vs_is_self subspace_def sum_is_subspace vectorspace.subspace_is_vs)"], ["proof (state)\nthis:\n  vectorspace.fin_dim K (vs (subspace_sum W1 W2))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_subadditive:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"B \\<in> carrier_mat n nc\"\nshows \"rank (A + B) \\<le> rank A + rank B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "define W1 where \"W1 = span (set (cols A))\""], ["proof (state)\nthis:\n  W1 = local.span (set (cols A))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "define W2 where \"W2 = span (set (cols B))\""], ["proof (state)\nthis:\n  W2 = local.span (set (cols B))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"set (cols (A + B)) \\<subseteq> subspace_sum W1 W2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols (A + B)) \\<subseteq> subspace_sum W1 W2", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "assume \"x \\<in> set (cols (A + B))\""], ["proof (state)\nthis:\n  x \\<in> set (cols (A + B))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "obtain i where \"x = col (A + B) i\" \"i < length (cols (A + B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>x = col (A + B) i; i < length (cols (A + B))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>x \\<in> set (cols (A + B))\\<close> nth_find_first cols_nth find_first_le"], ["proof (prove)\nusing this:\n  x \\<in> set (cols (A + B))\n  ?a \\<in> set ?xs \\<Longrightarrow> ?xs ! find_first ?a ?xs = ?a\n  ?i < dim_col ?A \\<Longrightarrow> cols ?A ! ?i = col ?A ?i\n  ?a \\<in> set ?xs \\<Longrightarrow> find_first ?a ?xs < length ?xs\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>x = col (A + B) i; i < length (cols (A + B))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis cols_length)"], ["proof (state)\nthis:\n  x = col (A + B) i\n  i < length (cols (A + B))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "then"], ["proof (chain)\npicking this:\n  x = col (A + B) i\n  i < length (cols (A + B))", "have \"x = col A i + col B i\""], ["proof (prove)\nusing this:\n  x = col (A + B) i\n  i < length (cols (A + B))\n\ngoal (1 subgoal):\n 1. x = col A i + col B i", "using \\<open>i < length (cols (A + B))\\<close> assms(1) assms(2)"], ["proof (prove)\nusing this:\n  x = col (A + B) i\n  i < length (cols (A + B))\n  i < length (cols (A + B))\n  A \\<in> carrier_mat n nc\n  B \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. x = col A i + col B i", "by auto"], ["proof (state)\nthis:\n  x = col A i + col B i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "have \"col A i \\<in> span (set (cols A))\" \"col B i \\<in> span (set (cols B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A i \\<in> local.span (set (cols A)) &&&\n    col B i \\<in> local.span (set (cols B))", "using \\<open>i < length (cols (A + B))\\<close> assms(1) assms(2) in_set_conv_nth"], ["proof (prove)\nusing this:\n  i < length (cols (A + B))\n  A \\<in> carrier_mat n nc\n  B \\<in> carrier_mat n nc\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n\ngoal (1 subgoal):\n 1. col A i \\<in> local.span (set (cols A)) &&&\n    col B i \\<in> local.span (set (cols B))", "by (metis cols_dim cols_length cols_nth carrier_matD(1) carrier_matD(2) index_add_mat(3) span_mem)+"], ["proof (state)\nthis:\n  col A i \\<in> local.span (set (cols A))\n  col B i \\<in> local.span (set (cols B))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (A + B)) \\<Longrightarrow>\n       x \\<in> subspace_sum W1 W2", "then"], ["proof (chain)\npicking this:\n  col A i \\<in> local.span (set (cols A))\n  col B i \\<in> local.span (set (cols B))", "show \"x \\<in> subspace_sum W1 W2\""], ["proof (prove)\nusing this:\n  col A i \\<in> local.span (set (cols A))\n  col B i \\<in> local.span (set (cols B))\n\ngoal (1 subgoal):\n 1. x \\<in> subspace_sum W1 W2", "unfolding W1_def W2_def \\<open>x = col A i + col B i\\<close> submodule_sum_def"], ["proof (prove)\nusing this:\n  col A i \\<in> local.span (set (cols A))\n  col B i \\<in> local.span (set (cols B))\n\ngoal (1 subgoal):\n 1. col A i + col B i\n    \\<in> (\\<lambda>(x, y). x + y) `\n          {(x, y).\n           x \\<in> local.span (set (cols A)) \\<and>\n           y \\<in> local.span (set (cols B))}", "by blast"], ["proof (state)\nthis:\n  x \\<in> subspace_sum W1 W2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (cols (A + B)) \\<subseteq> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"subspace class_ring (subspace_sum W1 W2) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace class_ring (subspace_sum W1 W2) V", "by (metis W1_def W2_def assms(1) assms(2) cols_dim carrier_matD(1) span_is_submodule subspace_def sum_is_submodule vec_vs)"], ["proof (state)\nthis:\n  subspace class_ring (subspace_sum W1 W2) V\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "then"], ["proof (chain)\npicking this:\n  subspace class_ring (subspace_sum W1 W2) V", "have \"span (set (cols (A + B))) \\<subseteq> subspace_sum W1 W2\""], ["proof (prove)\nusing this:\n  subspace class_ring (subspace_sum W1 W2) V\n\ngoal (1 subgoal):\n 1. local.span (set (cols (A + B))) \\<subseteq> subspace_sum W1 W2", "by (simp add: \\<open>set (cols (A + B)) \\<subseteq> subspace_sum W1 W2\\<close> span_is_subset)"], ["proof (state)\nthis:\n  local.span (set (cols (A + B))) \\<subseteq> subspace_sum W1 W2\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"subspace class_ring (span (set (cols (A + B)))) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace class_ring (local.span (set (cols (A + B)))) V", "by (metis assms(2) cols_dim add_carrier_mat carrier_matD(1) span_is_subspace)"], ["proof (state)\nthis:\n  subspace class_ring (local.span (set (cols (A + B)))) V\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have subspace:\"subspace class_ring (span (set (cols (A + B)))) (vs (subspace_sum W1 W2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace class_ring (local.span (set (cols (A + B))))\n     (vs (subspace_sum W1 W2))", "using nested_subspaces[OF \\<open>subspace class_ring (subspace_sum W1 W2) V\\<close> \\<open>subspace class_ring (span (set (cols (A + B)))) V\\<close>\n    \\<open>span (set (cols (A + B))) \\<subseteq> subspace_sum W1 W2\\<close>]"], ["proof (prove)\nusing this:\n  subspace class_ring (local.span (set (cols (A + B))))\n   (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. subspace class_ring (local.span (set (cols (A + B))))\n     (vs (subspace_sum W1 W2))", "."], ["proof (state)\nthis:\n  subspace class_ring (local.span (set (cols (A + B))))\n   (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"vectorspace.fin_dim class_ring (vs W1)\" \"vectorspace.fin_dim class_ring (vs W2)\"\n       \"subspace class_ring W1 V\" \"subspace class_ring W2 V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vectorspace.fin_dim class_ring (vs W1) &&&\n     vectorspace.fin_dim class_ring (vs W2)) &&&\n    subspace class_ring W1 V &&& subspace class_ring W2 V", "using span_is_subspace W1_def W2_def assms(1) assms(2) cols_dim carrier_matD fin_dim_span_cols"], ["proof (prove)\nusing this:\n  ?S \\<subseteq> carrier_vec n \\<Longrightarrow>\n  subspace class_ring (local.span ?S) V\n  W1 = local.span (set (cols A))\n  W2 = local.span (set (cols B))\n  A \\<in> carrier_mat n nc\n  B \\<in> carrier_mat n nc\n  set (cols ?A) \\<subseteq> carrier_vec (dim_row ?A)\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n  ?A \\<in> carrier_mat n ?nc \\<Longrightarrow>\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols ?A))))\n\ngoal (1 subgoal):\n 1. (vectorspace.fin_dim class_ring (vs W1) &&&\n     vectorspace.fin_dim class_ring (vs W2)) &&&\n    subspace class_ring W1 V &&& subspace class_ring W2 V", "by auto"], ["proof (state)\nthis:\n  vectorspace.fin_dim class_ring (vs W1)\n  vectorspace.fin_dim class_ring (vs W2)\n  subspace class_ring W1 V\n  subspace class_ring W2 V\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "then"], ["proof (chain)\npicking this:\n  vectorspace.fin_dim class_ring (vs W1)\n  vectorspace.fin_dim class_ring (vs W2)\n  subspace class_ring W1 V\n  subspace class_ring W2 V", "have fin_dim: \"vectorspace.fin_dim class_ring (vs (subspace_sum W1 W2))\""], ["proof (prove)\nusing this:\n  vectorspace.fin_dim class_ring (vs W1)\n  vectorspace.fin_dim class_ring (vs W2)\n  subspace class_ring W1 V\n  subspace class_ring W2 V\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (subspace_sum W1 W2))", "using fin_dim_subspace_sum"], ["proof (prove)\nusing this:\n  vectorspace.fin_dim class_ring (vs W1)\n  vectorspace.fin_dim class_ring (vs W2)\n  subspace class_ring W1 V\n  subspace class_ring W2 V\n  \\<lbrakk>subspace class_ring ?W1.0 V; subspace class_ring ?W2.0 V;\n   vectorspace.fin_dim class_ring (vs ?W1.0);\n   vectorspace.fin_dim class_ring (vs ?W2.0)\\<rbrakk>\n  \\<Longrightarrow> vectorspace.fin_dim class_ring\n                     (vs (subspace_sum ?W1.0 ?W2.0))\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (subspace_sum W1 W2))", "by auto"], ["proof (state)\nthis:\n  vectorspace.fin_dim class_ring (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"vectorspace.fin_dim class_ring (span_vs (set (cols (A + B))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))", "using assms(2) add_carrier_mat vec_space.fin_dim_span_cols"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat n nc\n  ?B \\<in> carrier_mat ?nr ?nc \\<Longrightarrow>\n  ?A + ?B \\<in> carrier_mat ?nr ?nc\n  ?A \\<in> carrier_mat ?n ?nc \\<Longrightarrow>\n  vectorspace.fin_dim class_ring\n   (module_vec TYPE(?'a) ?n\n    \\<lparr>carrier :=\n              LinearCombinations.module.span class_ring\n               (module_vec TYPE(?'a) ?n) (set (cols ?A))\\<rparr>)\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))", "by blast"], ["proof (state)\nthis:\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "then"], ["proof (chain)\npicking this:\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))", "have \"rank (A + B) \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))\""], ["proof (prove)\nusing this:\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))", "unfolding rank_def"], ["proof (prove)\nusing this:\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols (A + B)))))\n    \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))", "using vectorspace.subspace_dim[OF subspace_is_vs[OF \\<open>subspace class_ring (subspace_sum W1 W2) V\\<close>] subspace fin_dim]"], ["proof (prove)\nusing this:\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols (A + B)))))\n  vectorspace.fin_dim class_ring\n   (vs (subspace_sum W1 W2)\n    \\<lparr>carrier :=\n              local.span (set (cols (A + B)))\\<rparr>) \\<Longrightarrow>\n  vectorspace.dim class_ring\n   (vs (subspace_sum W1 W2)\n    \\<lparr>carrier := local.span (set (cols (A + B)))\\<rparr>)\n  \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols (A + B)))))\n    \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))", "by auto"], ["proof (state)\nthis:\n  rank (A + B) \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "also"], ["proof (state)\nthis:\n  rank (A + B) \\<le> vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "have \"vectorspace.dim class_ring (vs (subspace_sum W1 W2)) \\<le> rank A + rank B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n    \\<le> rank A + rank B", "unfolding rank_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim class_ring (vs (local.span (set (cols A)))) +\n          vectorspace.dim class_ring (vs (local.span (set (cols B))))", "using W1_def W2_def \\<open>subspace class_ring W1 V\\<close> \\<open>subspace class_ring W2 V\\<close> \\<open>vectorspace.fin_dim class_ring (vs W1)\\<close>\n    \\<open>vectorspace.fin_dim class_ring (vs W2)\\<close> subspace_def vectorspace.dim_subadditive"], ["proof (prove)\nusing this:\n  W1 = local.span (set (cols A))\n  W2 = local.span (set (cols B))\n  subspace class_ring W1 V\n  subspace class_ring W2 V\n  vectorspace.fin_dim class_ring (vs W1)\n  vectorspace.fin_dim class_ring (vs W2)\n  subspace ?K ?W ?V \\<equiv>\n  vectorspace ?K ?V \\<and> LinearCombinations.submodule ?K ?W ?V\n  \\<lbrakk>vectorspace ?K ?V; subspace ?K ?W1.0 ?V;\n   vectorspace.fin_dim ?K (?V\\<lparr>carrier := ?W1.0\\<rparr>);\n   subspace ?K ?W2.0 ?V;\n   vectorspace.fin_dim ?K (?V\\<lparr>carrier := ?W2.0\\<rparr>)\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim ?K\n                     (?V\\<lparr>carrier :=\n                                  module.submodule_sum ?V ?W1.0\n                                   ?W2.0\\<rparr>)\n                    \\<le> vectorspace.dim ?K\n                           (?V\\<lparr>carrier := ?W1.0\\<rparr>) +\n                          vectorspace.dim ?K\n                           (?V\\<lparr>carrier := ?W2.0\\<rparr>)\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (subspace_sum W1 W2))\n    \\<le> vectorspace.dim class_ring (vs (local.span (set (cols A)))) +\n          vectorspace.dim class_ring (vs (local.span (set (cols B))))", "by blast"], ["proof (state)\nthis:\n  vectorspace.dim class_ring (vs (subspace_sum W1 W2)) \\<le> rank A + rank B\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "finally"], ["proof (chain)\npicking this:\n  rank (A + B) \\<le> rank A + rank B", "show ?thesis"], ["proof (prove)\nusing this:\n  rank (A + B) \\<le> rank A + rank B\n\ngoal (1 subgoal):\n 1. rank (A + B) \\<le> rank A + rank B", "by auto"], ["proof (state)\nthis:\n  rank (A + B) \\<le> rank A + rank B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) span_zero: \"span {zero V} = {zero V}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local.span {\\<zero>\\<^bsub>V\\<^esub>} = {\\<zero>\\<^bsub>V\\<^esub>}", "by (metis (no_types, lifting) empty_subsetI in_own_span span_is_submodule span_is_subset\n  span_is_subset2 subset_antisym vectorspace.span_empty vectorspace_axioms)"], ["", "lemma (in vec_space) dim_zero_vs: \"vectorspace.dim class_ring (span_vs {}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "have \"vectorspace class_ring (span_vs {})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace class_ring (vs (local.span {}))", "using field.field_axioms span_is_submodule submodule_is_module vectorspace_def"], ["proof (prove)\nusing this:\n  field class_ring\n  ?S \\<subseteq> carrier_vec n \\<Longrightarrow>\n  LinearCombinations.submodule class_ring (local.span ?S) V\n  LinearCombinations.submodule class_ring ?N V \\<Longrightarrow>\n  module class_ring (vs ?N)\n  vectorspace ?K ?V \\<equiv> module ?K ?V \\<and> field ?K\n\ngoal (1 subgoal):\n 1. vectorspace class_ring (vs (local.span {}))", "by auto"], ["proof (state)\nthis:\n  vectorspace class_ring (vs (local.span {}))\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "have \"{} \\<subseteq> carrier_vec n \\<and> lin_indpt {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<subseteq> carrier_vec n \\<and> lin_indpt {}", "by (metis (no_types) empty_subsetI fin_dim finite_basis_exists subset_li_is_li vec_vs vectorspace.basis_def)"], ["proof (state)\nthis:\n  {} \\<subseteq> carrier_vec n \\<and> lin_indpt {}\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "then"], ["proof (chain)\npicking this:\n  {} \\<subseteq> carrier_vec n \\<and> lin_indpt {}", "have \"vectorspace.basis class_ring (span_vs {}) {}\""], ["proof (prove)\nusing this:\n  {} \\<subseteq> carrier_vec n \\<and> lin_indpt {}\n\ngoal (1 subgoal):\n 1. vectorspace.basis class_ring (vs (local.span {})) {}", "using vectorspace.basis_def"], ["proof (prove)\nusing this:\n  {} \\<subseteq> carrier_vec n \\<and> lin_indpt {}\n  vectorspace ?K ?V \\<Longrightarrow>\n  vectorspace.basis ?K ?V ?A =\n  (\\<not> module.lin_dep ?K ?V ?A \\<and>\n   LinearCombinations.module.span ?K ?V ?A = carrier ?V \\<and>\n   ?A \\<subseteq> carrier ?V)\n\ngoal (1 subgoal):\n 1. vectorspace.basis class_ring (vs (local.span {})) {}", "by (simp add: \\<open>vectorspace class_ring (vs (span {}))\\<close> span_is_submodule span_li_not_depend(1) span_li_not_depend(2) vectorspace.basis_def)"], ["proof (state)\nthis:\n  vectorspace.basis class_ring (vs (local.span {})) {}\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "then"], ["proof (chain)\npicking this:\n  vectorspace.basis class_ring (vs (local.span {})) {}", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace.basis class_ring (vs (local.span {})) {}\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "using \\<open>vectorspace class_ring (vs (span {}))\\<close> vectorspace.dim_basis"], ["proof (prove)\nusing this:\n  vectorspace.basis class_ring (vs (local.span {})) {}\n  vectorspace class_ring (vs (local.span {}))\n  \\<lbrakk>vectorspace ?K ?V; finite ?A; vectorspace.basis ?K ?V ?A\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim ?K ?V = card ?A\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {})) = 0", "by fastforce"], ["proof (state)\nthis:\n  vectorspace.dim class_ring (vs (local.span {})) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_0I: \"rank (0\\<^sub>m n nc) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "have \"set (cols (0\\<^sub>m n nc)) \\<subseteq> {0\\<^sub>v n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols (0\\<^sub>m n nc)) \\<subseteq> {0\\<^sub>v n}", "by (metis col_zero cols_length cols_nth in_set_conv_nth insertCI index_zero_mat(3) subsetI)"], ["proof (state)\nthis:\n  set (cols (0\\<^sub>m n nc)) \\<subseteq> {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "have \"set (cols (0\\<^sub>m n nc::'a mat)) = {} \\<or> set (cols (0\\<^sub>m n nc)) = {0\\<^sub>v n::'a vec}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols (0\\<^sub>m n nc)) = {} \\<or>\n    set (cols (0\\<^sub>m n nc)) = {0\\<^sub>v n}", "by (meson \\<open>set (cols (0\\<^sub>m n nc)) \\<subseteq> {0\\<^sub>v n}\\<close> subset_singletonD)"], ["proof (state)\nthis:\n  set (cols (0\\<^sub>m n nc)) = {} \\<or>\n  set (cols (0\\<^sub>m n nc)) = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "then"], ["proof (chain)\npicking this:\n  set (cols (0\\<^sub>m n nc)) = {} \\<or>\n  set (cols (0\\<^sub>m n nc)) = {0\\<^sub>v n}", "have \"span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}\""], ["proof (prove)\nusing this:\n  set (cols (0\\<^sub>m n nc)) = {} \\<or>\n  set (cols (0\\<^sub>m n nc)) = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. local.span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}", "by (metis (no_types) span_empty span_zero vectorspace.span_empty vectorspace_axioms)"], ["proof (state)\nthis:\n  local.span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "then"], ["proof (chain)\npicking this:\n  local.span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}", "show ?thesis"], ["proof (prove)\nusing this:\n  local.span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. rank (0\\<^sub>m n nc) = 0", "unfolding rank_def \\<open>span (set (cols (0\\<^sub>m n nc))) = {0\\<^sub>v n}\\<close>"], ["proof (prove)\nusing this:\n  {0\\<^sub>v n} = {0\\<^sub>v n}\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs {0\\<^sub>v n}) = 0", "using span_empty dim_zero_vs"], ["proof (prove)\nusing this:\n  {0\\<^sub>v n} = {0\\<^sub>v n}\n  local.span {} = {0\\<^sub>v n}\n  vectorspace.dim class_ring (vs (local.span {})) = 0\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs {0\\<^sub>v n}) = 0", "by simp"], ["proof (state)\nthis:\n  rank (0\\<^sub>m n nc) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_le_1_product_entries:\nfixes f g::\"nat \\<Rightarrow> 'a\"\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"\\<And>r c. r<dim_row A \\<Longrightarrow> c<dim_col A \\<Longrightarrow> A $$ (r,c) = f r * g c\"\nshows \"rank A \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have \"set (cols A) \\<subseteq> span {vec n f}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols A) \\<subseteq> local.span {vec n f}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols A) \\<Longrightarrow> x \\<in> local.span {vec n f}", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols A) \\<Longrightarrow> x \\<in> local.span {vec n f}", "assume \"v \\<in> set (cols A)\""], ["proof (state)\nthis:\n  v \\<in> set (cols A)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols A) \\<Longrightarrow> x \\<in> local.span {vec n f}", "then"], ["proof (chain)\npicking this:\n  v \\<in> set (cols A)", "obtain c where \"c < dim_col A\" \"v = col A c\""], ["proof (prove)\nusing this:\n  v \\<in> set (cols A)\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c < dim_col A; v = col A c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis cols_length cols_nth in_set_conv_nth)"], ["proof (state)\nthis:\n  c < dim_col A\n  v = col A c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols A) \\<Longrightarrow> x \\<in> local.span {vec n f}", "have \"g c \\<cdot>\\<^sub>v vec n f = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g c \\<cdot>\\<^sub>v vec n f = v", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i\n 2. dim_vec (g c \\<cdot>\\<^sub>v vec n f) = dim_vec v", "show \"dim_vec (g c \\<cdot>\\<^sub>v Matrix.vec n f) = dim_vec v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (g c \\<cdot>\\<^sub>v vec n f) = dim_vec v", "using \\<open>v = col A c\\<close> assms(1)"], ["proof (prove)\nusing this:\n  v = col A c\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. dim_vec (g c \\<cdot>\\<^sub>v vec n f) = dim_vec v", "by auto"], ["proof (state)\nthis:\n  dim_vec (g c \\<cdot>\\<^sub>v vec n f) = dim_vec v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i", "assume \"r < dim_vec v\""], ["proof (state)\nthis:\n  r < dim_vec v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i", "then"], ["proof (chain)\npicking this:\n  r < dim_vec v", "have \"r < dim_vec (Matrix.vec n f)\""], ["proof (prove)\nusing this:\n  r < dim_vec v\n\ngoal (1 subgoal):\n 1. r < dim_vec (vec n f)", "using \\<open>dim_vec (g c \\<cdot>\\<^sub>v Matrix.vec n f) = dim_vec v\\<close>"], ["proof (prove)\nusing this:\n  r < dim_vec v\n  dim_vec (g c \\<cdot>\\<^sub>v vec n f) = dim_vec v\n\ngoal (1 subgoal):\n 1. r < dim_vec (vec n f)", "by auto"], ["proof (state)\nthis:\n  r < dim_vec (vec n f)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i", "then"], ["proof (chain)\npicking this:\n  r < dim_vec (vec n f)", "have \"r < n\" \"r < dim_row A\""], ["proof (prove)\nusing this:\n  r < dim_vec (vec n f)\n\ngoal (1 subgoal):\n 1. r < n &&& r < dim_row A", "using index_smult_vec(2) \\<open>A \\<in> carrier_mat n nc\\<close>"], ["proof (prove)\nusing this:\n  r < dim_vec (vec n f)\n  dim_vec (?a \\<cdot>\\<^sub>v ?v) = dim_vec ?v\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. r < n &&& r < dim_row A", "by auto"], ["proof (state)\nthis:\n  r < n\n  r < dim_row A\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec v \\<Longrightarrow>\n       (g c \\<cdot>\\<^sub>v vec n f) $ i = v $ i", "show \"(g c \\<cdot>\\<^sub>v Matrix.vec n f) $ r = v $ r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (g c \\<cdot>\\<^sub>v vec n f) $ r = v $ r", "unfolding \\<open>v = col A c\\<close> col_def index_smult_vec(1)[OF \\<open>r < dim_vec (Matrix.vec n f)\\<close>]\n        index_vec[OF \\<open>r < n\\<close>] index_vec[OF \\<open>r < dim_row A\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. g c * f r = A $$ (r, c)", "by (simp add: \\<open>c < dim_col A\\<close> \\<open>r < dim_row A\\<close> assms(2))"], ["proof (state)\nthis:\n  (g c \\<cdot>\\<^sub>v vec n f) $ r = v $ r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g c \\<cdot>\\<^sub>v vec n f = v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols A) \\<Longrightarrow> x \\<in> local.span {vec n f}", "then"], ["proof (chain)\npicking this:\n  g c \\<cdot>\\<^sub>v vec n f = v", "show \"v \\<in> span {vec n f}\""], ["proof (prove)\nusing this:\n  g c \\<cdot>\\<^sub>v vec n f = v\n\ngoal (1 subgoal):\n 1. v \\<in> local.span {vec n f}", "using submodule.smult_closed[OF span_is_submodule]"], ["proof (prove)\nusing this:\n  g c \\<cdot>\\<^sub>v vec n f = v\n  \\<lbrakk>?S1 \\<subseteq> carrier_vec n; ?c \\<in> carrier class_ring;\n   ?v \\<in> local.span ?S1\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>V\\<^esub> ?v \\<in> local.span ?S1\n\ngoal (1 subgoal):\n 1. v \\<in> local.span {vec n f}", "using UNIV_I empty_subsetI insert_subset span_self dim_vec module_vec_simps(4)"], ["proof (prove)\nusing this:\n  g c \\<cdot>\\<^sub>v vec n f = v\n  \\<lbrakk>?S1 \\<subseteq> carrier_vec n; ?c \\<in> carrier class_ring;\n   ?v \\<in> local.span ?S1\\<rbrakk>\n  \\<Longrightarrow> ?c \\<odot>\\<^bsub>V\\<^esub> ?v \\<in> local.span ?S1\n  ?x \\<in> UNIV\n  {} \\<subseteq> ?A\n  (insert ?x ?A \\<subseteq> ?B) = (?x \\<in> ?B \\<and> ?A \\<subseteq> ?B)\n  ?v \\<in> carrier_vec n \\<Longrightarrow> ?v \\<in> local.span {?v}\n  dim_vec (vec ?n ?f) = ?n\n  (\\<odot>\\<^bsub>module_vec ?ty ?n\\<^esub>) = (\\<cdot>\\<^sub>v)\n\ngoal (1 subgoal):\n 1. v \\<in> local.span {vec n f}", "by auto"], ["proof (state)\nthis:\n  v \\<in> local.span {vec n f}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  set (cols A) \\<subseteq> local.span {vec n f}\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have \"vectorspace class_ring (vs (span {Matrix.vec n f}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace class_ring (vs (local.span {vec n f}))", "using span_is_subspace[THEN subspace_is_vs, of \"{vec n f}\"]"], ["proof (prove)\nusing this:\n  {vec n f} \\<subseteq> carrier_vec n \\<Longrightarrow>\n  vectorspace class_ring (vs (local.span {vec n f}))\n\ngoal (1 subgoal):\n 1. vectorspace class_ring (vs (local.span {vec n f}))", "by auto"], ["proof (state)\nthis:\n  vectorspace class_ring (vs (local.span {vec n f}))\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have \"submodule class_ring (span {Matrix.vec n f}) V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LinearCombinations.submodule class_ring (local.span {vec n f}) V", "by (simp add: span_is_submodule)"], ["proof (state)\nthis:\n  LinearCombinations.submodule class_ring (local.span {vec n f}) V\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have \"subspace class_ring(span (set (cols A))) (vs (span {Matrix.vec n f}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subspace class_ring (local.span (set (cols A)))\n     (vs (local.span {vec n f}))", "using vectorspace.span_is_subspace[OF \\<open>vectorspace class_ring (vs (span {Matrix.vec n f}))\\<close>, of \"set (cols A)\", unfolded\n    span_li_not_depend(1)[OF \\<open>set (cols A) \\<subseteq> span {vec n f}\\<close> \\<open>submodule class_ring (span {Matrix.vec n f}) V\\<close>]]\n    \\<open>set (cols A) \\<subseteq> span {vec n f}\\<close>"], ["proof (prove)\nusing this:\n  set (cols A)\n  \\<subseteq> carrier (vs (local.span {vec n f})) \\<Longrightarrow>\n  subspace class_ring (local.span (set (cols A)))\n   (vs (local.span {vec n f}))\n  set (cols A) \\<subseteq> local.span {vec n f}\n\ngoal (1 subgoal):\n 1. subspace class_ring (local.span (set (cols A)))\n     (vs (local.span {vec n f}))", "by auto"], ["proof (state)\nthis:\n  subspace class_ring (local.span (set (cols A)))\n   (vs (local.span {vec n f}))\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have fin_dim:\"vectorspace.fin_dim class_ring (vs (span {Matrix.vec n f}))\"\n       \"vectorspace.fin_dim class_ring (vs (span {Matrix.vec n f})\\<lparr>carrier := span (set (cols A))\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (local.span {vec n f})) &&&\n    vectorspace.fin_dim class_ring\n     (vs (local.span {vec n f})\n      \\<lparr>carrier := local.span (set (cols A))\\<rparr>)", "using fin_dim_span fin_dim_span_cols \\<open>A \\<in> carrier_mat n nc\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?A \\<subseteq> carrier V\\<rbrakk>\n  \\<Longrightarrow> vectorspace.fin_dim class_ring (vs (local.span ?A))\n  ?A \\<in> carrier_mat n ?nc \\<Longrightarrow>\n  vectorspace.fin_dim class_ring (vs (local.span (set (cols ?A))))\n  A \\<in> carrier_mat n nc\n\ngoal (1 subgoal):\n 1. vectorspace.fin_dim class_ring (vs (local.span {vec n f})) &&&\n    vectorspace.fin_dim class_ring\n     (vs (local.span {vec n f})\n      \\<lparr>carrier := local.span (set (cols A))\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  vectorspace.fin_dim class_ring (vs (local.span {vec n f}))\n  vectorspace.fin_dim class_ring\n   (vs (local.span {vec n f})\n    \\<lparr>carrier := local.span (set (cols A))\\<rparr>)\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "have \"vectorspace.dim class_ring (vs (span {Matrix.vec n f})) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1", "using vectorspace.dim_le1I[OF \\<open>vectorspace class_ring (vs (span {Matrix.vec n f}))\\<close>]\n    span_mem span_li_not_depend(1)[OF _ \\<open>submodule class_ring (span {Matrix.vec n f}) V\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>LinearCombinations.module.span class_ring\n            (vs (local.span {vec n f})) {?v} =\n           carrier (vs (local.span {vec n f}));\n   ?v \\<in> carrier (vs (local.span {vec n f}))\\<rbrakk>\n  \\<Longrightarrow> vectorspace.dim class_ring (vs (local.span {vec n f}))\n                    \\<le> 1\n  \\<lbrakk>?E \\<subseteq> carrier_vec n; ?u \\<in> ?E\\<rbrakk>\n  \\<Longrightarrow> ?u \\<in> local.span ?E\n  ?S \\<subseteq> local.span {vec n f} \\<Longrightarrow>\n  LinearCombinations.module.span class_ring (vs (local.span {vec n f})) ?S =\n  local.span ?S\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "then"], ["proof (chain)\npicking this:\n  vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1\n\ngoal (1 subgoal):\n 1. rank A \\<le> 1", "unfolding rank_def"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) \\<le> 1", "using  \"vectorspace.subspace_dim\"[OF\n    \\<open>vectorspace class_ring (vs (span {Matrix.vec n f}))\\<close> \\<open>subspace class_ring (span (set (cols A))) (vs (span {Matrix.vec n f}))\\<close>\n    fin_dim(1) fin_dim(2)]"], ["proof (prove)\nusing this:\n  vectorspace.dim class_ring (vs (local.span {vec n f})) \\<le> 1\n  vectorspace.dim class_ring\n   (vs (local.span {vec n f})\n    \\<lparr>carrier := local.span (set (cols A))\\<rparr>)\n  \\<le> vectorspace.dim class_ring (vs (local.span {vec n f}))\n\ngoal (1 subgoal):\n 1. vectorspace.dim class_ring (vs (local.span (set (cols A)))) \\<le> 1", "by simp"], ["proof (state)\nthis:\n  rank A \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}