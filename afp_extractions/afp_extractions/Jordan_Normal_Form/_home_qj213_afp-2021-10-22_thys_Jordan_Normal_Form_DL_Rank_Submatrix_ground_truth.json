{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form/DL_Rank_Submatrix.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form", "problem_names": ["lemma row_submatrix_UNIV:\nassumes \"i < card {i. i < dim_row A \\<and> i \\<in> I}\"\nshows \"row (submatrix A I UNIV) i = row A (pick I i)\"", "lemma distinct_cols_submatrix_UNIV:\nassumes \"distinct (cols (submatrix A I UNIV))\"\nshows \"distinct (cols A)\"", "lemma cols_submatrix_subset: \"set (cols (submatrix A UNIV J)) \\<subseteq> set (cols A)\"", "lemma (in vec_space) lin_dep_submatrix_UNIV:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"lin_dep (set (cols A))\"\nassumes \"distinct (cols (submatrix A I UNIV))\"\nshows \"LinearCombinations.module.lin_dep class_ring (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I})) (set (cols (submatrix A I UNIV)))\"\n  (is \"LinearCombinations.module.lin_dep class_ring ?M (set ?S')\")", "lemma (in vec_space) rank_gt_minor:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"det (submatrix A I J) \\<noteq> 0\"\nshows \"card {j. j < nc \\<and> j \\<in> J} \\<le> rank A\""], "translations": [["", "lemma row_submatrix_UNIV:\nassumes \"i < card {i. i < dim_row A \\<and> i \\<in> I}\"\nshows \"row (submatrix A I UNIV) i = row A (pick I i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (submatrix A I UNIV) i = row A (pick I i)", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (row A (pick I i)) \\<Longrightarrow>\n       row (submatrix A I UNIV) i $ ia = row A (pick I i) $ ia\n 2. dim_vec (row (submatrix A I UNIV) i) = dim_vec (row A (pick I i))", "show dim_eq:\"dim_vec (row (submatrix A I UNIV) i) = dim_vec (row A (pick I i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (row (submatrix A I UNIV) i) = dim_vec (row A (pick I i))", "unfolding carrier_vecD[OF row_carrier] dim_submatrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> UNIV} = dim_col A", "by auto"], ["proof (state)\nthis:\n  dim_vec (row (submatrix A I UNIV) i) = dim_vec (row A (pick I i))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A (pick I i)) \\<Longrightarrow>\n       row (submatrix A I UNIV) i $ ia = row A (pick I i) $ ia", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A (pick I i)) \\<Longrightarrow>\n       row (submatrix A I UNIV) i $ ia = row A (pick I i) $ ia", "assume \"j < dim_vec (row A (pick I i))\""], ["proof (state)\nthis:\n  j < dim_vec (row A (pick I i))\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A (pick I i)) \\<Longrightarrow>\n       row (submatrix A I UNIV) i $ ia = row A (pick I i) $ ia", "then"], ["proof (chain)\npicking this:\n  j < dim_vec (row A (pick I i))", "have \"j < dim_col (submatrix A I UNIV)\" \"j < dim_col A\" \"j < card {j. j < dim_col A \\<and> j \\<in> UNIV}\""], ["proof (prove)\nusing this:\n  j < dim_vec (row A (pick I i))\n\ngoal (1 subgoal):\n 1. j < dim_col (submatrix A I UNIV) &&&\n    j < dim_col A &&& j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "using dim_eq"], ["proof (prove)\nusing this:\n  j < dim_vec (row A (pick I i))\n  dim_vec (row (submatrix A I UNIV) i) = dim_vec (row A (pick I i))\n\ngoal (1 subgoal):\n 1. j < dim_col (submatrix A I UNIV) &&&\n    j < dim_col A &&& j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  j < dim_col (submatrix A I UNIV)\n  j < dim_col A\n  j < card {j. j < dim_col A \\<and> j \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (row A (pick I i)) \\<Longrightarrow>\n       row (submatrix A I UNIV) i $ ia = row A (pick I i) $ ia", "show \"row (submatrix A I UNIV) i $ j = row A (pick I i) $ j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (submatrix A I UNIV) i $ j = row A (pick I i) $ j", "unfolding row_def index_vec[OF \\<open>j < dim_col (submatrix A I UNIV)\\<close>] index_vec[OF \\<open>j < dim_col A\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (i, j) = A $$ (pick I i, j)", "using submatrix_index[OF assms \\<open>j < card {j. j < dim_col A \\<and> j \\<in> UNIV}\\<close>]"], ["proof (prove)\nusing this:\n  submatrix A I UNIV $$ (i, j) = A $$ (pick I i, pick UNIV j)\n\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (i, j) = A $$ (pick I i, j)", "using pick_UNIV"], ["proof (prove)\nusing this:\n  submatrix A I UNIV $$ (i, j) = A $$ (pick I i, pick UNIV j)\n  pick UNIV ?j = ?j\n\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (i, j) = A $$ (pick I i, j)", "by auto"], ["proof (state)\nthis:\n  row (submatrix A I UNIV) i $ j = row A (pick I i) $ j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma distinct_cols_submatrix_UNIV:\nassumes \"distinct (cols (submatrix A I UNIV))\"\nshows \"distinct (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (cols A)", "using assms"], ["proof (prove)\nusing this:\n  distinct (cols (submatrix A I UNIV))\n\ngoal (1 subgoal):\n 1. distinct (cols A)", "proof (rule contrapos_pp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "assume \"\\<not> distinct (cols A)\""], ["proof (state)\nthis:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "then"], ["proof (chain)\npicking this:\n  \\<not> distinct (cols A)", "obtain i j where \"i < dim_col A\" \"j < dim_col A\" \"(cols A)!i = (cols A)!j\" \"i\\<noteq>j\""], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < dim_col A; j < dim_col A; cols A ! i = cols A ! j;\n         i \\<noteq> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using distinct_conv_nth cols_length"], ["proof (prove)\nusing this:\n  \\<not> distinct (cols A)\n  distinct ?xs =\n  (\\<forall>i<length ?xs.\n      \\<forall>j<length ?xs.\n         i \\<noteq> j \\<longrightarrow> ?xs ! i \\<noteq> ?xs ! j)\n  length (cols ?A) = dim_col ?A\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < dim_col A; j < dim_col A; cols A ! i = cols A ! j;\n         i \\<noteq> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  i < dim_col A\n  j < dim_col A\n  cols A ! i = cols A ! j\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "have \"i < dim_col (submatrix A I UNIV)\" \"j < dim_col (submatrix A I UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_col (submatrix A I UNIV) &&& j < dim_col (submatrix A I UNIV)", "unfolding dim_submatrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card {j. j < dim_col A \\<and> j \\<in> UNIV} &&&\n    j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "using \\<open>i < dim_col A\\<close> \\<open>j < dim_col A\\<close>"], ["proof (prove)\nusing this:\n  i < dim_col A\n  j < dim_col A\n\ngoal (1 subgoal):\n 1. i < card {j. j < dim_col A \\<and> j \\<in> UNIV} &&&\n    j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "by simp_all"], ["proof (state)\nthis:\n  i < dim_col (submatrix A I UNIV)\n  j < dim_col (submatrix A I UNIV)\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "then"], ["proof (chain)\npicking this:\n  i < dim_col (submatrix A I UNIV)\n  j < dim_col (submatrix A I UNIV)", "have \"i < length (cols (submatrix A I UNIV))\" \"j < length (cols (submatrix A I UNIV))\""], ["proof (prove)\nusing this:\n  i < dim_col (submatrix A I UNIV)\n  j < dim_col (submatrix A I UNIV)\n\ngoal (1 subgoal):\n 1. i < length (cols (submatrix A I UNIV)) &&&\n    j < length (cols (submatrix A I UNIV))", "unfolding cols_length"], ["proof (prove)\nusing this:\n  i < dim_col (submatrix A I UNIV)\n  j < dim_col (submatrix A I UNIV)\n\ngoal (1 subgoal):\n 1. i < dim_col (submatrix A I UNIV) &&& j < dim_col (submatrix A I UNIV)", "by simp_all"], ["proof (state)\nthis:\n  i < length (cols (submatrix A I UNIV))\n  j < length (cols (submatrix A I UNIV))\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "have \"(cols (submatrix A I UNIV))!i = (cols (submatrix A I UNIV))!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia\n 2. dim_vec (cols (submatrix A I UNIV) ! i) =\n    dim_vec (cols (submatrix A I UNIV) ! j)", "show \"dim_vec (cols (submatrix A I UNIV) ! i) = dim_vec (cols (submatrix A I UNIV) ! j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (cols (submatrix A I UNIV) ! i) =\n    dim_vec (cols (submatrix A I UNIV) ! j)", "by (simp add: \\<open>i < dim_col (submatrix A I UNIV)\\<close> \\<open>j < dim_col (submatrix A I UNIV)\\<close>)"], ["proof (state)\nthis:\n  dim_vec (cols (submatrix A I UNIV) ! i) =\n  dim_vec (cols (submatrix A I UNIV) ! j)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "assume \"k < dim_vec (cols (submatrix A I UNIV) ! j)\""], ["proof (state)\nthis:\n  k < dim_vec (cols (submatrix A I UNIV) ! j)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "then"], ["proof (chain)\npicking this:\n  k < dim_vec (cols (submatrix A I UNIV) ! j)", "have \"k < dim_row (submatrix A I UNIV)\""], ["proof (prove)\nusing this:\n  k < dim_vec (cols (submatrix A I UNIV) ! j)\n\ngoal (1 subgoal):\n 1. k < dim_row (submatrix A I UNIV)", "using \\<open>j < length (cols (submatrix A I UNIV))\\<close>"], ["proof (prove)\nusing this:\n  k < dim_vec (cols (submatrix A I UNIV) ! j)\n  j < length (cols (submatrix A I UNIV))\n\ngoal (1 subgoal):\n 1. k < dim_row (submatrix A I UNIV)", "by auto"], ["proof (state)\nthis:\n  k < dim_row (submatrix A I UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "then"], ["proof (chain)\npicking this:\n  k < dim_row (submatrix A I UNIV)", "have  \"k < card {j. j < dim_row A \\<and> j \\<in> I}\""], ["proof (prove)\nusing this:\n  k < dim_row (submatrix A I UNIV)\n\ngoal (1 subgoal):\n 1. k < card {j. j < dim_row A \\<and> j \\<in> I}", "using dim_submatrix(1)"], ["proof (prove)\nusing this:\n  k < dim_row (submatrix A I UNIV)\n  dim_row (submatrix ?A ?I ?J) = card {i. i < dim_row ?A \\<and> i \\<in> ?I}\n\ngoal (1 subgoal):\n 1. k < card {j. j < dim_row A \\<and> j \\<in> I}", "by metis"], ["proof (state)\nthis:\n  k < card {j. j < dim_row A \\<and> j \\<in> I}\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "have i_transfer:\"cols (submatrix A I UNIV) ! i $ k = (cols A) ! i $ (pick I k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cols (submatrix A I UNIV) ! i $ k = cols A ! i $ pick I k", "unfolding cols_nth[OF \\<open>i < dim_col (submatrix A I UNIV)\\<close>] col_def index_vec[OF \\<open>k < dim_row (submatrix A I UNIV)\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (k, i) = cols A ! i $ pick I k", "unfolding submatrix_index[OF \\<open>k < card {j. j < dim_row A \\<and> j \\<in> I}\\<close> \\<open>i < dim_col (submatrix A I UNIV)\\<close>[unfolded dim_submatrix]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I k, pick UNIV i) = cols A ! i $ pick I k", "unfolding pick_UNIV cols_nth[OF \\<open>i < dim_col A\\<close>] col_def index_vec[OF pick_le[OF \\<open>k < card {j. j < dim_row A \\<and> j \\<in> I}\\<close>]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I k, i) = A $$ (pick I k, i)", "by metis"], ["proof (state)\nthis:\n  cols (submatrix A I UNIV) ! i $ k = cols A ! i $ pick I k\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "have j_transfer:\"cols (submatrix A I UNIV) ! j $ k = (cols A) ! j $ (pick I k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cols (submatrix A I UNIV) ! j $ k = cols A ! j $ pick I k", "unfolding cols_nth[OF \\<open>j < dim_col (submatrix A I UNIV)\\<close>] col_def index_vec[OF \\<open>k < dim_row (submatrix A I UNIV)\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (k, j) = cols A ! j $ pick I k", "unfolding submatrix_index[OF \\<open>k < card {j. j < dim_row A \\<and> j \\<in> I}\\<close> \\<open>j < dim_col (submatrix A I UNIV)\\<close>[unfolded dim_submatrix]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I k, pick UNIV j) = cols A ! j $ pick I k", "unfolding pick_UNIV cols_nth[OF \\<open>j < dim_col A\\<close>] col_def index_vec[OF pick_le[OF \\<open>k < card {j. j < dim_row A \\<and> j \\<in> I}\\<close>]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I k, j) = A $$ (pick I k, j)", "by metis"], ["proof (state)\nthis:\n  cols (submatrix A I UNIV) ! j $ k = cols A ! j $ pick I k\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < dim_vec (cols (submatrix A I UNIV) ! j) \\<Longrightarrow>\n       cols (submatrix A I UNIV) ! i $ ia =\n       cols (submatrix A I UNIV) ! j $ ia", "show \"cols (submatrix A I UNIV) ! i $ k = cols (submatrix A I UNIV) ! j $ k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cols (submatrix A I UNIV) ! i $ k = cols (submatrix A I UNIV) ! j $ k", "using \\<open>cols A ! i = cols A ! j\\<close> i_transfer j_transfer"], ["proof (prove)\nusing this:\n  cols A ! i = cols A ! j\n  cols (submatrix A I UNIV) ! i $ k = cols A ! i $ pick I k\n  cols (submatrix A I UNIV) ! j $ k = cols A ! j $ pick I k\n\ngoal (1 subgoal):\n 1. cols (submatrix A I UNIV) ! i $ k = cols (submatrix A I UNIV) ! j $ k", "by auto"], ["proof (state)\nthis:\n  cols (submatrix A I UNIV) ! i $ k = cols (submatrix A I UNIV) ! j $ k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols A) \\<Longrightarrow>\n    \\<not> distinct (cols (submatrix A I UNIV))", "then"], ["proof (chain)\npicking this:\n  cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j", "show \"\\<not> distinct (cols (submatrix A I UNIV))\""], ["proof (prove)\nusing this:\n  cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j\n\ngoal (1 subgoal):\n 1. \\<not> distinct (cols (submatrix A I UNIV))", "unfolding distinct_conv_nth"], ["proof (prove)\nusing this:\n  cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<length (cols (submatrix A I UNIV)).\n               \\<forall>j<length (cols (submatrix A I UNIV)).\n                  i \\<noteq> j \\<longrightarrow>\n                  cols (submatrix A I UNIV) ! i \\<noteq>\n                  cols (submatrix A I UNIV) ! j)", "using \\<open>i < length (cols (submatrix A I UNIV))\\<close> \\<open>j < length (cols (submatrix A I UNIV))\\<close> \\<open>i \\<noteq> j\\<close>"], ["proof (prove)\nusing this:\n  cols (submatrix A I UNIV) ! i = cols (submatrix A I UNIV) ! j\n  i < length (cols (submatrix A I UNIV))\n  j < length (cols (submatrix A I UNIV))\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<length (cols (submatrix A I UNIV)).\n               \\<forall>j<length (cols (submatrix A I UNIV)).\n                  i \\<noteq> j \\<longrightarrow>\n                  cols (submatrix A I UNIV) ! i \\<noteq>\n                  cols (submatrix A I UNIV) ! j)", "by blast"], ["proof (state)\nthis:\n  \\<not> distinct (cols (submatrix A I UNIV))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cols_submatrix_subset: \"set (cols (submatrix A UNIV J)) \\<subseteq> set (cols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (cols (submatrix A UNIV J)) \\<subseteq> set (cols A)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "fix c"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "assume \"c \\<in> set (cols (submatrix A UNIV J))\""], ["proof (state)\nthis:\n  c \\<in> set (cols (submatrix A UNIV J))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "then"], ["proof (chain)\npicking this:\n  c \\<in> set (cols (submatrix A UNIV J))", "obtain j where \"j < length (cols (submatrix A UNIV J))\" \"cols (submatrix A UNIV J) ! j = c\""], ["proof (prove)\nusing this:\n  c \\<in> set (cols (submatrix A UNIV J))\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j < length (cols (submatrix A UNIV J));\n         cols (submatrix A UNIV J) ! j = c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson in_set_conv_nth)"], ["proof (state)\nthis:\n  j < length (cols (submatrix A UNIV J))\n  cols (submatrix A UNIV J) ! j = c\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "then"], ["proof (chain)\npicking this:\n  j < length (cols (submatrix A UNIV J))\n  cols (submatrix A UNIV J) ! j = c", "have \"j < dim_col (submatrix A UNIV J)\""], ["proof (prove)\nusing this:\n  j < length (cols (submatrix A UNIV J))\n  cols (submatrix A UNIV J) ! j = c\n\ngoal (1 subgoal):\n 1. j < dim_col (submatrix A UNIV J)", "by simp"], ["proof (state)\nthis:\n  j < dim_col (submatrix A UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "then"], ["proof (chain)\npicking this:\n  j < dim_col (submatrix A UNIV J)", "have \"j < card {j. j < dim_col A \\<and> j \\<in> J}\""], ["proof (prove)\nusing this:\n  j < dim_col (submatrix A UNIV J)\n\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col A \\<and> j \\<in> J}", "by (simp add: dim_submatrix(2))"], ["proof (state)\nthis:\n  j < card {j. j < dim_col A \\<and> j \\<in> J}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "have \"cols (submatrix A UNIV J) ! j = cols A ! (pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cols (submatrix A UNIV J) ! j = cols A ! pick J j", "unfolding cols_nth[OF \\<open>j < dim_col (submatrix A UNIV J)\\<close>] cols_nth[OF pick_le[OF \\<open>j < card {j. j < dim_col A \\<and> j \\<in> J}\\<close>]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. col (submatrix A UNIV J) j = col A (pick J j)", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i\n 2. dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))", "show \"dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))", "unfolding dim_col dim_submatrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> UNIV} = dim_row A", "by auto"], ["proof (state)\nthis:\n  dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "assume \"i < dim_vec (col A (pick J j))\""], ["proof (state)\nthis:\n  i < dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec (col A (pick J j))", "have \"i < dim_row A\""], ["proof (prove)\nusing this:\n  i < dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. i < dim_row A", "by simp"], ["proof (state)\nthis:\n  i < dim_row A\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_row A", "have \"i < dim_row (submatrix A UNIV J)\""], ["proof (prove)\nusing this:\n  i < dim_row A\n\ngoal (1 subgoal):\n 1. i < dim_row (submatrix A UNIV J)", "using \\<open>dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\\<close>"], ["proof (prove)\nusing this:\n  i < dim_row A\n  dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. i < dim_row (submatrix A UNIV J)", "by auto"], ["proof (state)\nthis:\n  i < dim_row (submatrix A UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "show \"col (submatrix A UNIV J) j $ i = col A (pick J j) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (submatrix A UNIV J) j $ i = col A (pick J j) $ i", "unfolding col_def index_vec[OF \\<open>i < dim_row (submatrix A UNIV J)\\<close>] index_vec[OF \\<open>i < dim_row A\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A UNIV J $$ (i, j) = A $$ (i, pick J j)", "using submatrix_index"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < card {i. i < dim_row ?A \\<and> i \\<in> ?I};\n   ?j < card {j. j < dim_col ?A \\<and> j \\<in> ?J}\\<rbrakk>\n  \\<Longrightarrow> submatrix ?A ?I ?J $$ (?i, ?j) =\n                    ?A $$ (pick ?I ?i, pick ?J ?j)\n\ngoal (1 subgoal):\n 1. submatrix A UNIV J $$ (i, j) = A $$ (i, pick J j)", "by (metis (no_types, lifting) \\<open>dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\\<close>\n      \\<open>i < dim_vec (col A (pick J j))\\<close> \\<open>j < dim_col (submatrix A UNIV J)\\<close> dim_col dim_submatrix(1) dim_submatrix(2) pick_UNIV)"], ["proof (state)\nthis:\n  col (submatrix A UNIV J) j $ i = col A (pick J j) $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cols (submatrix A UNIV J) ! j = cols A ! pick J j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> set (cols (submatrix A UNIV J)) \\<Longrightarrow>\n       x \\<in> set (cols A)", "then"], ["proof (chain)\npicking this:\n  cols (submatrix A UNIV J) ! j = cols A ! pick J j", "show \"c \\<in> set (cols A)\""], ["proof (prove)\nusing this:\n  cols (submatrix A UNIV J) ! j = cols A ! pick J j\n\ngoal (1 subgoal):\n 1. c \\<in> set (cols A)", "using \\<open>cols (submatrix A UNIV J) ! j = c\\<close>"], ["proof (prove)\nusing this:\n  cols (submatrix A UNIV J) ! j = cols A ! pick J j\n  cols (submatrix A UNIV J) ! j = c\n\ngoal (1 subgoal):\n 1. c \\<in> set (cols A)", "using pick_le[OF \\<open>j < card {j. j < dim_col A \\<and> j \\<in> J}\\<close>]"], ["proof (prove)\nusing this:\n  cols (submatrix A UNIV J) ! j = cols A ! pick J j\n  cols (submatrix A UNIV J) ! j = c\n  pick J j < dim_col A\n\ngoal (1 subgoal):\n 1. c \\<in> set (cols A)", "by (metis cols_length nth_mem)"], ["proof (state)\nthis:\n  c \\<in> set (cols A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) lin_dep_submatrix_UNIV:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"lin_dep (set (cols A))\"\nassumes \"distinct (cols (submatrix A I UNIV))\"\nshows \"LinearCombinations.module.lin_dep class_ring (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I})) (set (cols (submatrix A I UNIV)))\"\n  (is \"LinearCombinations.module.lin_dep class_ring ?M (set ?S')\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "obtain v where 2:\"v \\<in> carrier_vec nc\" and 3:\"v \\<noteq> 0\\<^sub>v nc\" and \"A *\\<^sub>v v = 0\\<^sub>v n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using vec_space.lin_depE[OF assms(1) assms(2) distinct_cols_submatrix_UNIV[OF assms(3)]]"], ["proof (prove)\nusing this:\n  (\\<And>v.\n      \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n       A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<lbrakk>v \\<in> carrier_vec nc; v \\<noteq> 0\\<^sub>v nc;\n         A *\\<^sub>v v = 0\\<^sub>v n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  v \\<in> carrier_vec nc\n  v \\<noteq> 0\\<^sub>v nc\n  A *\\<^sub>v v = 0\\<^sub>v n\n\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "have 1: \"submatrix A I UNIV \\<in> carrier_mat (card {i. i < n \\<and> i \\<in> I}) nc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV\n    \\<in> carrier_mat (card {i. i < n \\<and> i \\<in> I}) nc", "apply (rule carrier_matI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dim_row (submatrix A I UNIV) = card {i. i < n \\<and> i \\<in> I}\n 2. dim_col (submatrix A I UNIV) = nc", "unfolding dim_submatrix"], ["proof (prove)\ngoal (2 subgoals):\n 1. card {i. i < dim_row A \\<and> i \\<in> I} =\n    card {i. i < n \\<and> i \\<in> I}\n 2. card {j. j < dim_col A \\<and> j \\<in> UNIV} = nc", "using \\<open>A \\<in> carrier_mat n nc\\<close>"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n\ngoal (2 subgoals):\n 1. card {i. i < dim_row A \\<and> i \\<in> I} =\n    card {i. i < n \\<and> i \\<in> I}\n 2. card {j. j < dim_col A \\<and> j \\<in> UNIV} = nc", "by auto"], ["proof (state)\nthis:\n  submatrix A I UNIV \\<in> carrier_mat (card {i. i < n \\<and> i \\<in> I}) nc\n\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "have 4:\"submatrix A I UNIV *\\<^sub>v v = 0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV *\\<^sub>v v =\n    0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\n 2. dim_vec (submatrix A I UNIV *\\<^sub>v v) =\n    dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))", "show dim_eq:\"dim_vec (submatrix A I UNIV *\\<^sub>v v) = dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (submatrix A I UNIV *\\<^sub>v v) =\n    dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))", "using \"1\""], ["proof (prove)\nusing this:\n  submatrix A I UNIV \\<in> carrier_mat (card {i. i < n \\<and> i \\<in> I}) nc\n\ngoal (1 subgoal):\n 1. dim_vec (submatrix A I UNIV *\\<^sub>v v) =\n    dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))", "by auto"], ["proof (state)\nthis:\n  dim_vec (submatrix A I UNIV *\\<^sub>v v) =\n  dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "assume \"i < dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\""], ["proof (state)\nthis:\n  i < dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "then"], ["proof (chain)\npicking this:\n  i < dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))", "have i_le:\"i < card {i. i < n \\<and> i \\<in> I}\""], ["proof (prove)\nusing this:\n  i < dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\n\ngoal (1 subgoal):\n 1. i < card {i. i < n \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  i < card {i. i < n \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "have \"(submatrix A I UNIV *\\<^sub>v v) $ i = row (submatrix A I UNIV) i \\<bullet> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (submatrix A I UNIV *\\<^sub>v v) $ i =\n    row (submatrix A I UNIV) i \\<bullet> v", "using dim_eq i_le"], ["proof (prove)\nusing this:\n  dim_vec (submatrix A I UNIV *\\<^sub>v v) =\n  dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\n  i < card {i. i < n \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. (submatrix A I UNIV *\\<^sub>v v) $ i =\n    row (submatrix A I UNIV) i \\<bullet> v", "by auto"], ["proof (state)\nthis:\n  (submatrix A I UNIV *\\<^sub>v v) $ i =\n  row (submatrix A I UNIV) i \\<bullet> v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "also"], ["proof (state)\nthis:\n  (submatrix A I UNIV *\\<^sub>v v) $ i =\n  row (submatrix A I UNIV) i \\<bullet> v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "have \"... = row A (pick I i) \\<bullet> v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row (submatrix A I UNIV) i \\<bullet> v = row A (pick I i) \\<bullet> v", "using row_submatrix_UNIV"], ["proof (prove)\nusing this:\n  ?i < card {i. i < dim_row ?A \\<and> i \\<in> ?I} \\<Longrightarrow>\n  row (submatrix ?A ?I UNIV) ?i = row ?A (pick ?I ?i)\n\ngoal (1 subgoal):\n 1. row (submatrix A I UNIV) i \\<bullet> v = row A (pick I i) \\<bullet> v", "by (metis (no_types, lifting)  dim_eq dim_mult_mat_vec dim_submatrix(1) \\<open>i < dim_vec (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}))\\<close>)"], ["proof (state)\nthis:\n  row (submatrix A I UNIV) i \\<bullet> v = row A (pick I i) \\<bullet> v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "also"], ["proof (state)\nthis:\n  row (submatrix A I UNIV) i \\<bullet> v = row A (pick I i) \\<bullet> v\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. row A (pick I i) \\<bullet> v = (0::'a)", "using \\<open>A *\\<^sub>v v = 0\\<^sub>v n\\<close> i_le[THEN pick_le]"], ["proof (prove)\nusing this:\n  A *\\<^sub>v v = 0\\<^sub>v n\n  pick I i < n\n\ngoal (1 subgoal):\n 1. row A (pick I i) \\<bullet> v = (0::'a)", "by (metis assms(1) index_mult_mat_vec carrier_matD(1) index_zero_vec(1))"], ["proof (state)\nthis:\n  row A (pick I i) \\<bullet> v = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "also"], ["proof (state)\nthis:\n  row A (pick I i) \\<bullet> v = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "have \"... = 0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = 0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "by (simp add: i_le)"], ["proof (state)\nthis:\n  (0::'a) = 0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec\n            (0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})) \\<Longrightarrow>\n       (submatrix A I UNIV *\\<^sub>v v) $ i =\n       0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "finally"], ["proof (chain)\npicking this:\n  (submatrix A I UNIV *\\<^sub>v v) $ i =\n  0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "show \"(submatrix A I UNIV *\\<^sub>v v) $ i = 0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\""], ["proof (prove)\nusing this:\n  (submatrix A I UNIV *\\<^sub>v v) $ i =\n  0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\n\ngoal (1 subgoal):\n 1. (submatrix A I UNIV *\\<^sub>v v) $ i =\n    0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i", "by metis"], ["proof (state)\nthis:\n  (submatrix A I UNIV *\\<^sub>v v) $ i =\n  0\\<^sub>v (card {i. i < n \\<and> i \\<in> I}) $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I UNIV *\\<^sub>v v =\n  0\\<^sub>v (card {i. i < n \\<and> i \\<in> I})\n\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "using vec_space.lin_depI[OF 1 2 3 4]"], ["proof (prove)\nusing this:\n  distinct (cols (submatrix A I UNIV)) \\<Longrightarrow>\n  module.lin_dep class_ring\n   (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n   (set (cols (submatrix A I UNIV)))\n\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "using assms(3)"], ["proof (prove)\nusing this:\n  distinct (cols (submatrix A I UNIV)) \\<Longrightarrow>\n  module.lin_dep class_ring\n   (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n   (set (cols (submatrix A I UNIV)))\n  distinct (cols (submatrix A I UNIV))\n\ngoal (1 subgoal):\n 1. module.lin_dep class_ring\n     (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n     (set (cols (submatrix A I UNIV)))", "by auto"], ["proof (state)\nthis:\n  module.lin_dep class_ring\n   (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n   (set (cols (submatrix A I UNIV)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in vec_space) rank_gt_minor:\nassumes \"A \\<in> carrier_mat n nc\"\nassumes \"det (submatrix A I J) \\<noteq> 0\"\nshows \"card {j. j < nc \\<and> j \\<in> J} \\<le> rank A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have square:\"dim_row (submatrix A I J) = dim_col (submatrix A I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (submatrix A I J) = dim_col (submatrix A I J)", "using det_def \\<open>det (submatrix A I J) \\<noteq> 0\\<close>"], ["proof (prove)\nusing this:\n  det ?A =\n  (if dim_row ?A = dim_col ?A\n   then \\<Sum>p | p permutes {0..<dim_row ?A}.\n          signof p * (\\<Prod>i = 0..<dim_row ?A. ?A $$ (i, p i))\n   else (0::?'a))\n  det (submatrix A I J) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. dim_row (submatrix A I J) = dim_col (submatrix A I J)", "by metis"], ["proof (state)\nthis:\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "then"], ["proof (chain)\npicking this:\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)", "have full_rank:\"vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) = dim_row (submatrix A I J)\""], ["proof (prove)\nusing this:\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)\n\ngoal (1 subgoal):\n 1. vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n    dim_row (submatrix A I J)", "using vec_space.low_rank_det_zero assms(2) carrier_matI"], ["proof (prove)\nusing this:\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; det ?A \\<noteq> (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> vec_space.rank ?n ?A = ?n\n  det (submatrix A I J) \\<noteq> (0::'a)\n  \\<lbrakk>dim_row ?A = ?nr; dim_col ?A = ?nc\\<rbrakk>\n  \\<Longrightarrow> ?A \\<in> carrier_mat ?nr ?nc\n\ngoal (1 subgoal):\n 1. vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n    dim_row (submatrix A I J)", "by auto"], ["proof (state)\nthis:\n  vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n  dim_row (submatrix A I J)\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "then"], ["proof (chain)\npicking this:\n  vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n  dim_row (submatrix A I J)", "have distinct:\"distinct (cols (submatrix A I J))\""], ["proof (prove)\nusing this:\n  vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n  dim_row (submatrix A I J)\n\ngoal (1 subgoal):\n 1. distinct (cols (submatrix A I J))", "using vec_space.non_distinct_low_rank square less_irrefl carrier_matI"], ["proof (prove)\nusing this:\n  vec_space.rank (dim_row (submatrix A I J)) (submatrix A I J) =\n  dim_row (submatrix A I J)\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?n; \\<not> distinct (cols ?A)\\<rbrakk>\n  \\<Longrightarrow> vec_space.rank ?n ?A < ?n\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)\n  \\<not> ?x < ?x\n  \\<lbrakk>dim_row ?A = ?nr; dim_col ?A = ?nc\\<rbrakk>\n  \\<Longrightarrow> ?A \\<in> carrier_mat ?nr ?nc\n\ngoal (1 subgoal):\n 1. distinct (cols (submatrix A I J))", "by metis"], ["proof (state)\nthis:\n  distinct (cols (submatrix A I J))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "then"], ["proof (chain)\npicking this:\n  distinct (cols (submatrix A I J))", "have indpt:\"LinearCombinations.module.lin_indpt class_ring (module_vec TYPE('a) (dim_row (submatrix A I J))) (set (cols (submatrix A I J)))\""], ["proof (prove)\nusing this:\n  distinct (cols (submatrix A I J))\n\ngoal (1 subgoal):\n 1. \\<not> module.lin_dep class_ring\n            (module_vec TYPE('a) (dim_row (submatrix A I J)))\n            (set (cols (submatrix A I J)))", "using vec_space.full_rank_lin_indpt[OF _ full_rank distinct] square"], ["proof (prove)\nusing this:\n  distinct (cols (submatrix A I J))\n  submatrix A I J\n  \\<in> carrier_mat (dim_row (submatrix A I J))\n         (dim_row (submatrix A I J)) \\<Longrightarrow>\n  \\<not> module.lin_dep class_ring\n          (module_vec TYPE('a) (dim_row (submatrix A I J)))\n          (set (cols (submatrix A I J)))\n  dim_row (submatrix A I J) = dim_col (submatrix A I J)\n\ngoal (1 subgoal):\n 1. \\<not> module.lin_dep class_ring\n            (module_vec TYPE('a) (dim_row (submatrix A I J)))\n            (set (cols (submatrix A I J)))", "by fastforce"], ["proof (state)\nthis:\n  \\<not> module.lin_dep class_ring\n          (module_vec TYPE('a) (dim_row (submatrix A I J)))\n          (set (cols (submatrix A I J)))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have distinct2: \"distinct (cols (submatrix (submatrix A UNIV J) I UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (cols (submatrix (submatrix A UNIV J) I UNIV))", "using submatrix_split distinct"], ["proof (prove)\nusing this:\n  submatrix ?A ?I ?J = submatrix (submatrix ?A UNIV ?J) ?I UNIV\n  distinct (cols (submatrix A I J))\n\ngoal (1 subgoal):\n 1. distinct (cols (submatrix (submatrix A UNIV J) I UNIV))", "by metis"], ["proof (state)\nthis:\n  distinct (cols (submatrix (submatrix A UNIV J) I UNIV))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have indpt2:\"LinearCombinations.module.lin_indpt class_ring (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I})) (set (cols (submatrix (submatrix A UNIV J) I UNIV)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> module.lin_dep class_ring\n            (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n            (set (cols (submatrix (submatrix A UNIV J) I UNIV)))", "using submatrix_split dim_submatrix(1) indpt"], ["proof (prove)\nusing this:\n  submatrix ?A ?I ?J = submatrix (submatrix ?A UNIV ?J) ?I UNIV\n  dim_row (submatrix ?A ?I ?J) = card {i. i < dim_row ?A \\<and> i \\<in> ?I}\n  \\<not> module.lin_dep class_ring\n          (module_vec TYPE('a) (dim_row (submatrix A I J)))\n          (set (cols (submatrix A I J)))\n\ngoal (1 subgoal):\n 1. \\<not> module.lin_dep class_ring\n            (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n            (set (cols (submatrix (submatrix A UNIV J) I UNIV)))", "by (metis (full_types) assms(1) carrier_matD(1))"], ["proof (state)\nthis:\n  \\<not> module.lin_dep class_ring\n          (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n          (set (cols (submatrix (submatrix A UNIV J) I UNIV)))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have \"submatrix A UNIV J \\<in> carrier_mat n (dim_col (submatrix A UNIV J))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A UNIV J \\<in> carrier_mat n (dim_col (submatrix A UNIV J))", "apply (rule carrier_matI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. dim_row (submatrix A UNIV J) = n\n 2. dim_col (submatrix A UNIV J) = dim_col (submatrix A UNIV J)", "unfolding dim_submatrix(1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. card {i. i < dim_row A \\<and> i \\<in> UNIV} = n\n 2. dim_col (submatrix A UNIV J) = dim_col (submatrix A UNIV J)", "using \\<open>A \\<in> carrier_mat n nc\\<close> carrier_matD"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n nc\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_row ?A = ?nr\n  ?A \\<in> carrier_mat ?nr ?nc \\<Longrightarrow> dim_col ?A = ?nc\n\ngoal (2 subgoals):\n 1. card {i. i < dim_row A \\<and> i \\<in> UNIV} = n\n 2. dim_col (submatrix A UNIV J) = dim_col (submatrix A UNIV J)", "by simp_all"], ["proof (state)\nthis:\n  submatrix A UNIV J \\<in> carrier_mat n (dim_col (submatrix A UNIV J))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have \"lin_indpt (set (cols (submatrix A UNIV J)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lin_indpt (set (cols (submatrix A UNIV J)))", "using indpt2 vec_space.lin_dep_submatrix_UNIV[OF \\<open>submatrix A UNIV J \\<in> carrier_mat n (dim_col (submatrix A UNIV J))\\<close> _ distinct2]"], ["proof (prove)\nusing this:\n  \\<not> module.lin_dep class_ring\n          (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n          (set (cols (submatrix (submatrix A UNIV J) I UNIV)))\n  lin_dep (set (cols (submatrix A UNIV J))) \\<Longrightarrow>\n  module.lin_dep class_ring\n   (module_vec TYPE('a) (card {i. i < n \\<and> i \\<in> I}))\n   (set (cols (submatrix (submatrix A UNIV J) I UNIV)))\n\ngoal (1 subgoal):\n 1. lin_indpt (set (cols (submatrix A UNIV J)))", "by blast"], ["proof (state)\nthis:\n  lin_indpt (set (cols (submatrix A UNIV J)))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "have distinct3:\"distinct (cols (submatrix A UNIV J))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (cols (submatrix A UNIV J))", "by (metis distinct distinct_cols_submatrix_UNIV submatrix_split)"], ["proof (state)\nthis:\n  distinct (cols (submatrix A UNIV J))\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "using\n    rank_ge_card_indpt[OF \\<open>A \\<in> carrier_mat n nc\\<close> cols_submatrix_subset \\<open>lin_indpt (set (cols (submatrix A UNIV J)))\\<close>,\n    unfolded distinct_card[OF distinct3, unfolded cols_length dim_submatrix], unfolded carrier_matD(2)[OF \\<open>A \\<in> carrier_mat n nc\\<close>]]"], ["proof (prove)\nusing this:\n  card {j. j < nc \\<and> j \\<in> J} \\<le> rank A\n\ngoal (1 subgoal):\n 1. card {j. j < nc \\<and> j \\<in> J} \\<le> rank A", "by blast"], ["proof (state)\nthis:\n  card {j. j < nc \\<and> j \\<in> J} \\<le> rank A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}