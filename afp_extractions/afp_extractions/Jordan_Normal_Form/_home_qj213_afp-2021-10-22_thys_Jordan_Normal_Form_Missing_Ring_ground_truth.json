{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form/Missing_Ring.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form", "problem_names": ["lemma finprod_reindex_bij_betw: \"bij_betw h S T \n  \\<Longrightarrow> g \\<in> h ` S \\<rightarrow> carrier G \n  \\<Longrightarrow> finprod G (\\<lambda>x. g (h x)) S = finprod G g T\"", "lemma finprod_reindex_bij_witness:\n  assumes witness:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> j a \\<in> T\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> i b \\<in> S\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  assumes g: \"g \\<in> S \\<rightarrow> carrier G\"\n  and h: \"h \\<in> j ` S \\<rightarrow> carrier G\"\n  shows \"finprod G g S = finprod G h T\"", "lemmas (in abelian_monoid) finsum_reindex_bij_witness = add.finprod_reindex_bij_witness", "lemma (in comm_monoid) finprod_one': \n  \"(\\<And> a. a \\<in> A \\<Longrightarrow> f a = \\<one>) \\<Longrightarrow> finprod G f A = \\<one>\"", "lemma (in comm_monoid) finprod_split: \n  \"finite A \\<Longrightarrow> f ` A \\<subseteq> carrier G \\<Longrightarrow> a \\<in> A \\<Longrightarrow> finprod G f A = f a \\<otimes> finprod G f (A - {a})\"", "lemma (in comm_monoid) finprod_finprod:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> (\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  finprod G (\\<lambda> a. finprod G (g a) B) A = finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\"", "lemma (in comm_monoid) finprod_swap:\n  assumes \"finite A\" \"finite B\" \"\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G\"\n  shows \"finprod G (\\<lambda> (b,a). g a b) (B \\<times> A) = finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\"", "lemma (in comm_monoid) finprod_finprod_swap:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> (\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  finprod G (\\<lambda> a. finprod G (g a) B) A = finprod G (\\<lambda> b. finprod G (\\<lambda> a. g a b) A) B\"", "lemmas (in semiring) finsum_zero' = add.finprod_one'", "lemmas (in semiring) finsum_split = add.finprod_split", "lemmas (in semiring) finsum_finsum_swap = add.finprod_finprod_swap", "lemma (in csemiring) finprod_zero: \n  \"finite A \\<Longrightarrow> f \\<in> A \\<rightarrow> carrier R \\<Longrightarrow> \\<exists>a\\<in>A. f a = \\<zero>\n   \\<Longrightarrow> finprod R f A = \\<zero>\"", "lemma (in semiring) finsum_product:\n  assumes A: \"finite A\" and B: \"finite B\"\n  and f: \"f \\<in> A \\<rightarrow> carrier R\" and g: \"g \\<in> B \\<rightarrow> carrier R\" \n  shows \"finsum R f A \\<otimes> finsum R g B = (\\<Oplus>i\\<in>A. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\"", "lemma (in semiring) Units_one_side_I: \n  \"a \\<in> carrier R \\<Longrightarrow> p \\<in> Units R \\<Longrightarrow> p \\<otimes> a = \\<one> \\<Longrightarrow> a \\<in> Units R\"\n  \"a \\<in> carrier R \\<Longrightarrow> p \\<in> Units R \\<Longrightarrow> a \\<otimes> p = \\<one> \\<Longrightarrow> a \\<in> Units R\"", "lemma mult_pos_pos[simp]: \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> 0 < a * b\"", "lemma mult_pos_neg: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> a * b < 0\"", "lemma mult_neg_pos: \"a < 0 \\<Longrightarrow> 0 < b \\<Longrightarrow> a * b < 0\"", "lemma mult_pos_neg2: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> b * a < 0\"", "lemma mult_strict_mono:\n  assumes \"a < b\" and \"c < d\" and \"0 < b\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma mult_strict_mono':\n  assumes \"a < b\" and \"c < d\" and \"0 \\<le> a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma mult_less_le_imp_less:\n  assumes \"a < b\" and \"c \\<le> d\" and \"0 \\<le> a\" and \"0 < c\"\n  shows \"a * c < b * d\"", "lemma mult_le_less_imp_less:\n  assumes \"a \\<le> b\" and \"c < d\" and \"0 < a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\"", "lemma of_nat_ge_0[simp]: \"of_nat x \\<ge> 0\"", "lemma of_nat_eq_0[simp]: \"of_nat x = 0 \\<longleftrightarrow> x = 0\"", "lemma inj_of_nat: \"inj (of_nat :: nat \\<Rightarrow> 'a)\""], "translations": [["", "lemma finprod_reindex_bij_betw: \"bij_betw h S T \n  \\<Longrightarrow> g \\<in> h ` S \\<rightarrow> carrier G \n  \\<Longrightarrow> finprod G (\\<lambda>x. g (h x)) S = finprod G g T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>bij_betw h S T; g \\<in> h ` S \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>S. g (h x)) = finprod G g T", "using finprod_reindex[of g h S]"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> h ` S \\<rightarrow> carrier G; inj_on h S\\<rbrakk>\n  \\<Longrightarrow> finprod G g (h ` S) = (\\<Otimes>x\\<in>S. g (h x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>bij_betw h S T; g \\<in> h ` S \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>S. g (h x)) = finprod G g T", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>g \\<in> h ` S \\<rightarrow> carrier G; inj_on h S\\<rbrakk>\n  \\<Longrightarrow> finprod G g (h ` S) = (\\<Otimes>x\\<in>S. g (h x))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>inj_on h S \\<and> h ` S = T;\n     g \\<in> h ` S \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>S. g (h x)) = finprod G g T", "by auto"], ["", "lemma finprod_reindex_bij_witness:\n  assumes witness:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> i (j a) = a\"\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> j a \\<in> T\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> j (i b) = b\"\n    \"\\<And>b. b \\<in> T \\<Longrightarrow> i b \\<in> S\"\n  assumes eq:\n    \"\\<And>a. a \\<in> S \\<Longrightarrow> h (j a) = g a\"\n  assumes g: \"g \\<in> S \\<rightarrow> carrier G\"\n  and h: \"h \\<in> j ` S \\<rightarrow> carrier G\"\n  shows \"finprod G g S = finprod G h T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "have b: \"bij_betw j S T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw j S T", "using bij_betw_byWitness[where A=S and f=j and f'=i and A'=T] witness"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>a\\<in>S. i (j a) = a; \\<forall>a'\\<in>T. j (i a') = a';\n   j ` S \\<subseteq> T; i ` T \\<subseteq> S\\<rbrakk>\n  \\<Longrightarrow> bij_betw j S T\n  ?a \\<in> S \\<Longrightarrow> i (j ?a) = ?a\n  ?a \\<in> S \\<Longrightarrow> j ?a \\<in> T\n  ?b \\<in> T \\<Longrightarrow> j (i ?b) = ?b\n  ?b \\<in> T \\<Longrightarrow> i ?b \\<in> S\n\ngoal (1 subgoal):\n 1. bij_betw j S T", "by auto"], ["proof (state)\nthis:\n  bij_betw j S T\n\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "have fp: \"finprod G g S = finprod G (\\<lambda>x. h (j x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G g S = (\\<Otimes>x\\<in>S. h (j x))", "by (rule finprod_cong, insert eq g, auto)"], ["proof (state)\nthis:\n  finprod G g S = (\\<Otimes>x\\<in>S. h (j x))\n\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "using finprod_reindex_bij_betw[OF b h]"], ["proof (prove)\nusing this:\n  (\\<Otimes>x\\<in>S. h (j x)) = finprod G h T\n\ngoal (1 subgoal):\n 1. finprod G g S = finprod G h T", "unfolding fp"], ["proof (prove)\nusing this:\n  (\\<Otimes>x\\<in>S. h (j x)) = finprod G h T\n\ngoal (1 subgoal):\n 1. (\\<Otimes>x\\<in>S. h (j x)) = finprod G h T", "."], ["proof (state)\nthis:\n  finprod G g S = finprod G h T\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemmas (in abelian_monoid) finsum_reindex_bij_witness = add.finprod_reindex_bij_witness"], ["", "locale csemiring = semiring + comm_monoid R"], ["", "context cring\nbegin"], ["", "sublocale csemiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. csemiring R", ".."], ["", "end"], ["", "lemma (in comm_monoid) finprod_one': \n  \"(\\<And> a. a \\<in> A \\<Longrightarrow> f a = \\<one>) \\<Longrightarrow> finprod G f A = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> A \\<Longrightarrow> f a = \\<one>) \\<Longrightarrow>\n    finprod G f A = \\<one>", "by (induct A rule: infinite_finite_induct, auto)"], ["", "lemma (in comm_monoid) finprod_split: \n  \"finite A \\<Longrightarrow> f ` A \\<subseteq> carrier G \\<Longrightarrow> a \\<in> A \\<Longrightarrow> finprod G f A = f a \\<otimes> finprod G f (A - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; f ` A \\<subseteq> carrier G; a \\<in> A\\<rbrakk>\n    \\<Longrightarrow> finprod G f A = f a \\<otimes> finprod G f (A - {a})", "by (rule trans[OF trans[OF _ finprod_Un_disjoint[of \"{a}\" \"A - {a}\" f]]], auto,\n  rule arg_cong[of _ _ \"finprod G f\"], auto)"], ["", "lemma (in comm_monoid) finprod_finprod:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> (\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  finprod G (\\<lambda> a. finprod G (g a) B) A = finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                      (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "proof (induct A rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "case (insert a' A)"], ["proof (state)\nthis:\n  finite A\n  a' \\<notin> A\n  \\<lbrakk>finite B;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                    (\\<Otimes>a\\<in>A \\<times>\n                                    B. case a of (a, b) \\<Rightarrow> g a b)\n  finite B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "note IH = this"], ["proof (state)\nthis:\n  finite A\n  a' \\<notin> A\n  \\<lbrakk>finite B;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                    (\\<Otimes>a\\<in>A \\<times>\n                                    B. case a of (a, b) \\<Rightarrow> g a b)\n  finite B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "let ?l = \"(\\<Otimes>a\\<in>insert a' A. finprod G (g a) B)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "let ?r = \"(\\<Otimes>a\\<in>insert a' A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "have \"?l = finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A. finprod G (g a) B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n    finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A. finprod G (g a) B)", "using IH"], ["proof (prove)\nusing this:\n  finite A\n  a' \\<notin> A\n  \\<lbrakk>finite B;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                    (\\<Otimes>a\\<in>A \\<times>\n                                    B. case a of (a, b) \\<Rightarrow> g a b)\n  finite B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n    finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A. finprod G (g a) B)", "by simp"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A. finprod G (g a) B)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "also"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A. finprod G (g a) B)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "have \"(\\<Otimes>a\\<in>A. finprod G (g a) B) = finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "by (rule IH(3), insert IH, auto)"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n  (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "finally"], ["proof (chain)\npicking this:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  finprod G (g a') B \\<otimes> (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "have idl: \"?l = finprod G (g a') B \\<otimes> finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\""], ["proof (prove)\nusing this:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  finprod G (g a') B \\<otimes> (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)\n\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n    finprod G (g a') B \\<otimes> (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "."], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  finprod G (g a') B \\<otimes> (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "from IH(2)"], ["proof (chain)\npicking this:\n  a' \\<notin> A", "have \"insert a' A \\<times> B = {a'} \\<times> B \\<union> A \\<times> B\""], ["proof (prove)\nusing this:\n  a' \\<notin> A\n\ngoal (1 subgoal):\n 1. insert a' A \\<times> B = {a'} \\<times> B \\<union> A \\<times> B", "by auto"], ["proof (state)\nthis:\n  insert a' A \\<times> B = {a'} \\<times> B \\<union> A \\<times> B\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "hence \"?r = (\\<Otimes>a\\<in>{a'} \\<times> B \\<union> A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\""], ["proof (prove)\nusing this:\n  insert a' A \\<times> B = {a'} \\<times> B \\<union> A \\<times> B\n\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A \\<times>\n                    B. case a of (a, b) \\<Rightarrow> g a b) =\n    (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                    A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)", "by simp"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) =\n  (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                  A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "also"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) =\n  (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                  A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "have \"\\<dots> = (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) \\<otimes> (\\<Otimes>a\\<in> A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                    A \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n    (\\<Otimes>a\\<in>{a'} \\<times>\n                    B. case a of (a, b) \\<Rightarrow> g a b) \\<otimes>\n    (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)", "by (rule finprod_Un_disjoint, insert IH, auto)"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                  A \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  (\\<Otimes>a\\<in>{a'} \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) \\<otimes>\n  (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "also"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>{a'} \\<times> B \\<union>\n                  A \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  (\\<Otimes>a\\<in>{a'} \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) \\<otimes>\n  (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "have \"(\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) = finprod G (g a') B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n    finprod G (g a') B", "using IH(4) IH(5)"], ["proof (prove)\nusing this:\n  finite B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n    finprod G (g a') B", "proof (induct B rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "case (insert b' B)"], ["proof (state)\nthis:\n  finite B\n  b' \\<notin> B\n  (\\<And>a b.\n      \\<lbrakk>a \\<in> insert a' A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> insert b' B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "note IH = this"], ["proof (state)\nthis:\n  finite B\n  b' \\<notin> B\n  (\\<And>a b.\n      \\<lbrakk>a \\<in> insert a' A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B\n  \\<lbrakk>?a \\<in> insert a' A; ?b \\<in> insert b' B\\<rbrakk>\n  \\<Longrightarrow> g ?a ?b \\<in> carrier G\n\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "have id: \"(\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) = finprod G (g a') B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n    finprod G (g a') B", "by (rule IH(3)[OF IH(4)], auto)"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B\n\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "have id2: \"\\<And> x F. {a'} \\<times> insert x F = insert (a',x) ({a'} \\<times> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x F. {a'} \\<times> insert x F = insert (a', x) ({a'} \\<times> F)", "by auto"], ["proof (state)\nthis:\n  {a'} \\<times> insert ?x ?F = insert (a', ?x) ({a'} \\<times> ?F)\n\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "have id3: \"(\\<Otimes>a\\<in>insert (a', b') ({a'} \\<times> B). case a of (a, b) \\<Rightarrow> g a b)\n      = g a' b' \\<otimes> (\\<Otimes>a\\<in>({a'} \\<times> B). case a of (a, b) \\<Rightarrow> g a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert (a', b')\n                     ({a'} \\<times>\n                      B). case a of (a, b) \\<Rightarrow> g a b) =\n    g a' b' \\<otimes>\n    (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b)", "by (rule trans[OF finprod_insert], insert IH, auto)"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert (a', b')\n                   ({a'} \\<times>\n                    B). case a of (a, b) \\<Rightarrow> g a b) =\n  g a' b' \\<otimes>\n  (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        (\\<And>a b.\n            \\<lbrakk>a \\<in> insert a' A; b \\<in> F\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n        (\\<Otimes>(x, y)\\<in>{a'} \\<times> F. g x y) = finprod G (g a') F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert a' A; b \\<in> insert x F\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>(x,\n                             y)\\<in>{a'} \\<times> insert x F. g x y) =\n                         finprod G (g a') (insert x F)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>{a'} \\<times>\n                    insert b' B. case a of (a, b) \\<Rightarrow> g a b) =\n    finprod G (g a') (insert b' B)", "unfolding id2 id3 id"], ["proof (prove)\ngoal (1 subgoal):\n 1. g a' b' \\<otimes> finprod G (g a') B = finprod G (g a') (insert b' B)", "by (rule sym, rule finprod_insert, insert IH, auto)"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>{a'} \\<times>\n                  insert b' B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') (insert b' B)\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> insert a' A; b \\<in> {}\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n    (\\<Otimes>(x, y)\\<in>{a'} \\<times> {}. g x y) = finprod G (g a') {}", "qed simp"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>{a'} \\<times> B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "finally"], ["proof (chain)\npicking this:\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B \\<otimes>\n  (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)", "have idr: \"?r = finprod G (g a') B \\<otimes> (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\""], ["proof (prove)\nusing this:\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B \\<otimes>\n  (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A \\<times>\n                    B. case a of (a, b) \\<Rightarrow> g a b) =\n    finprod G (g a') B \\<otimes>\n    (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)", "."], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b) =\n  finprod G (g a') B \\<otimes>\n  (\\<Otimes>a\\<in>A \\<times> B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>finite B;\n         \\<And>a b.\n            \\<lbrakk>a \\<in> F; b \\<in> B\\<rbrakk>\n            \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>a\\<in>F. finprod G (g a) B) =\n                          (\\<Otimes>(x, y)\\<in>F \\<times> B. g x y);\n        finite B;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> insert x F; b \\<in> B\\<rbrakk>\n           \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>a\\<in>insert x F. finprod G (g a) B) =\n                         (\\<Otimes>(x, y)\\<in>insert x F \\<times> B. g x y)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n    (\\<Otimes>a\\<in>insert a' A \\<times>\n                    B. case a of (a, b) \\<Rightarrow> g a b)", "unfolding idl idr"], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (g a') B \\<otimes> (\\<Otimes>(x, y)\\<in>A \\<times> B. g x y) =\n    finprod G (g a') B \\<otimes> (\\<Otimes>(x, y)\\<in>A \\<times> B. g x y)", ".."], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>insert a' A. finprod G (g a) B) =\n  (\\<Otimes>a\\<in>insert a' A \\<times>\n                  B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> {}; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>{}. finprod G (g a) B) =\n                      (\\<Otimes>(x, y)\\<in>{} \\<times> B. g x y)", "qed simp"], ["", "lemma (in comm_monoid) finprod_swap:\n  assumes \"finite A\" \"finite B\" \"\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G\"\n  shows \"finprod G (\\<lambda> (b,a). g a b) (B \\<times> A) = finprod G (\\<lambda> (a,b). g a b) (A \\<times> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "have [simp]: \"(\\<lambda>(a, b). (b, a)) ` (A \\<times> B) = B \\<times> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(a, b). (b, a)) ` (A \\<times> B) = B \\<times> A", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>(a, b). (b, a)) ` (A \\<times> B) = B \\<times> A\n\ngoal (1 subgoal):\n 1. (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "have [simp]: \"(\\<lambda> x. case case x of (a, b) \\<Rightarrow> (b, a) of (a, b) \\<Rightarrow> g b a) = (\\<lambda> (a,b). g a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        case case x of (a, b) \\<Rightarrow> (b, a) of\n        (a, b) \\<Rightarrow> g b a) =\n    (\\<lambda>(a, b). g a b)", "by (intro ext, auto)"], ["proof (state)\nthis:\n  (\\<lambda>x.\n      case case x of (a, b) \\<Rightarrow> (b, a) of\n      (a, b) \\<Rightarrow> g b a) =\n  (\\<lambda>(a, b). g a b)\n\ngoal (1 subgoal):\n 1. (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n    (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)", "by (rule trans[OF trans[OF _ finprod_reindex[of \"\\<lambda> (a,b). g b a\" \"\\<lambda> (a,b). (b,a)\"]]],\n    insert assms, auto simp: inj_on_def)"], ["proof (state)\nthis:\n  (\\<Otimes>(b, a)\\<in>B \\<times> A. g a b) =\n  (\\<Otimes>(a, b)\\<in>A \\<times> B. g a b)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_monoid) finprod_finprod_swap:\n  \"finite A \\<Longrightarrow> finite B \\<Longrightarrow> (\\<And> a b. a \\<in> A  \\<Longrightarrow> b \\<in> B \\<Longrightarrow> g a b \\<in> carrier G) \\<Longrightarrow>\n  finprod G (\\<lambda> a. finprod G (g a) B) A = finprod G (\\<lambda> b. finprod G (\\<lambda> a. g a b) A) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                      (\\<Otimes>b\\<in>B. \\<Otimes>a\\<in>A. g a b)", "using finprod_finprod[of A B] finprod_finprod[of B A] finprod_swap[of A B]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite A; finite B;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> ?g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (?g a) B) =\n                    (\\<Otimes>(a, b)\\<in>A \\<times> B. ?g a b)\n  \\<lbrakk>finite B; finite A;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> B; b \\<in> A\\<rbrakk>\n      \\<Longrightarrow> ?g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>a\\<in>B. finprod G (?g a) A) =\n                    (\\<Otimes>(a, b)\\<in>B \\<times> A. ?g a b)\n  \\<lbrakk>finite A; finite B;\n   \\<And>a b.\n      \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n      \\<Longrightarrow> ?g a b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>(b, a)\\<in>B \\<times> A. ?g a b) =\n                    (\\<Otimes>(a, b)\\<in>A \\<times> B. ?g a b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; finite B;\n     \\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B\\<rbrakk>\n        \\<Longrightarrow> g a b \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>a\\<in>A. finprod G (g a) B) =\n                      (\\<Otimes>b\\<in>B. \\<Otimes>a\\<in>A. g a b)", "by simp"], ["", "lemmas (in semiring) finsum_zero' = add.finprod_one'"], ["", "lemmas (in semiring) finsum_split = add.finprod_split"], ["", "lemmas (in semiring) finsum_finsum_swap = add.finprod_finprod_swap"], ["", "lemma (in csemiring) finprod_zero: \n  \"finite A \\<Longrightarrow> f \\<in> A \\<rightarrow> carrier R \\<Longrightarrow> \\<exists>a\\<in>A. f a = \\<zero>\n   \\<Longrightarrow> finprod R f A = \\<zero>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>finite A; f \\<in> A \\<rightarrow> carrier R;\n     \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f A = \\<zero>", "proof (induct A rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> carrier R;\n     \\<exists>a\\<in>{}. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f {} = \\<zero>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> carrier R;\n         \\<exists>a\\<in>F. f a = \\<zero>\\<rbrakk>\n        \\<Longrightarrow> finprod R f F = \\<zero>;\n        f \\<in> insert x F \\<rightarrow> carrier R;\n        \\<exists>a\\<in>insert x F. f a = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> finprod R f (insert x F) = \\<zero>", "case (insert a A)"], ["proof (state)\nthis:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> carrier R;\n     \\<exists>a\\<in>{}. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f {} = \\<zero>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> carrier R;\n         \\<exists>a\\<in>F. f a = \\<zero>\\<rbrakk>\n        \\<Longrightarrow> finprod R f F = \\<zero>;\n        f \\<in> insert x F \\<rightarrow> carrier R;\n        \\<exists>a\\<in>insert x F. f a = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> finprod R f (insert x F) = \\<zero>", "from finprod_insert[OF insert(1-2), of f] insert(4)"], ["proof (chain)\npicking this:\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R; f a \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> finprod R f (insert a A) = f a \\<otimes> finprod R f A\n  f \\<in> insert a A \\<rightarrow> carrier R", "have ins: \"finprod R f (insert a A) = f a \\<otimes> finprod R f A\""], ["proof (prove)\nusing this:\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R; f a \\<in> carrier R\\<rbrakk>\n  \\<Longrightarrow> finprod R f (insert a A) = f a \\<otimes> finprod R f A\n  f \\<in> insert a A \\<rightarrow> carrier R\n\ngoal (1 subgoal):\n 1. finprod R f (insert a A) = f a \\<otimes> finprod R f A", "by simp"], ["proof (state)\nthis:\n  finprod R f (insert a A) = f a \\<otimes> finprod R f A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> carrier R;\n     \\<exists>a\\<in>{}. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f {} = \\<zero>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> carrier R;\n         \\<exists>a\\<in>F. f a = \\<zero>\\<rbrakk>\n        \\<Longrightarrow> finprod R f F = \\<zero>;\n        f \\<in> insert x F \\<rightarrow> carrier R;\n        \\<exists>a\\<in>insert x F. f a = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> finprod R f (insert x F) = \\<zero>", "have fA: \"finprod R f A \\<in> carrier R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod R f A \\<in> carrier R", "by (rule finprod_closed, insert insert, auto)"], ["proof (state)\nthis:\n  finprod R f A \\<in> carrier R\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> carrier R;\n     \\<exists>a\\<in>{}. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f {} = \\<zero>\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> carrier R;\n         \\<exists>a\\<in>F. f a = \\<zero>\\<rbrakk>\n        \\<Longrightarrow> finprod R f F = \\<zero>;\n        f \\<in> insert x F \\<rightarrow> carrier R;\n        \\<exists>a\\<in>insert x F. f a = \\<zero>\\<rbrakk>\n       \\<Longrightarrow> finprod R f (insert x F) = \\<zero>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod R f (insert a A) = \\<zero>", "proof (cases \"f a = \\<zero>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f a = \\<zero> \\<Longrightarrow> finprod R f (insert a A) = \\<zero>\n 2. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "case True"], ["proof (state)\nthis:\n  f a = \\<zero>\n\ngoal (2 subgoals):\n 1. f a = \\<zero> \\<Longrightarrow> finprod R f (insert a A) = \\<zero>\n 2. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "with fA"], ["proof (chain)\npicking this:\n  finprod R f A \\<in> carrier R\n  f a = \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod R f A \\<in> carrier R\n  f a = \\<zero>\n\ngoal (1 subgoal):\n 1. finprod R f (insert a A) = \\<zero>", "unfolding ins"], ["proof (prove)\nusing this:\n  finprod R f A \\<in> carrier R\n  f a = \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<otimes> finprod R f A = \\<zero>", "by simp"], ["proof (state)\nthis:\n  finprod R f (insert a A) = \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "case False"], ["proof (state)\nthis:\n  f a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "with insert(5)"], ["proof (chain)\npicking this:\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n  f a \\<noteq> \\<zero>", "have \"\\<exists> a \\<in> A. f a = \\<zero>\""], ["proof (prove)\nusing this:\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n  f a \\<noteq> \\<zero>\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. f a = \\<zero>", "by auto"], ["proof (state)\nthis:\n  \\<exists>a\\<in>A. f a = \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "from insert(3)[OF _ this] insert"], ["proof (chain)\npicking this:\n  f \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n  finprod R f A = \\<zero>\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>", "have \"finprod R f A = \\<zero>\""], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow> carrier R \\<Longrightarrow>\n  finprod R f A = \\<zero>\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n\ngoal (1 subgoal):\n 1. finprod R f A = \\<zero>", "by auto"], ["proof (state)\nthis:\n  finprod R f A = \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<noteq> \\<zero> \\<Longrightarrow>\n    finprod R f (insert a A) = \\<zero>", "with insert"], ["proof (chain)\npicking this:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n  finprod R f A = \\<zero>", "show ?thesis"], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n  finprod R f A = \\<zero>\n\ngoal (1 subgoal):\n 1. finprod R f (insert a A) = \\<zero>", "unfolding ins"], ["proof (prove)\nusing this:\n  finite A\n  a \\<notin> A\n  \\<lbrakk>f \\<in> A \\<rightarrow> carrier R;\n   \\<exists>a\\<in>A. f a = \\<zero>\\<rbrakk>\n  \\<Longrightarrow> finprod R f A = \\<zero>\n  f \\<in> insert a A \\<rightarrow> carrier R\n  \\<exists>a\\<in>insert a A. f a = \\<zero>\n  finprod R f A = \\<zero>\n\ngoal (1 subgoal):\n 1. f a \\<otimes> finprod R f A = \\<zero>", "by auto"], ["proof (state)\nthis:\n  finprod R f (insert a A) = \\<zero>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod R f (insert a A) = \\<zero>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> carrier R;\n     \\<exists>a\\<in>{}. f a = \\<zero>\\<rbrakk>\n    \\<Longrightarrow> finprod R f {} = \\<zero>", "qed simp"], ["", "lemma (in semiring) finsum_product:\n  assumes A: \"finite A\" and B: \"finite B\"\n  and f: \"f \\<in> A \\<rightarrow> carrier R\" and g: \"g \\<in> B \\<rightarrow> carrier R\" \n  shows \"finsum R f A \\<otimes> finsum R g B = (\\<Oplus>i\\<in>A. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum R f A \\<otimes> finsum R g B =\n    (\\<Oplus>i\\<in>A. \\<Oplus>j\\<in>B. f i \\<otimes> g j)", "unfolding finsum_ldistr[OF A finsum_closed[OF g] f]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Oplus>i\\<in>A. f i \\<otimes> finsum R g B) =\n    (\\<Oplus>i\\<in>A. \\<Oplus>j\\<in>B. f i \\<otimes> g j)", "proof (rule finsum_cong'[OF refl])"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>i. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\n    \\<in> A \\<rightarrow> carrier R\n 2. \\<And>i.\n       i \\<in> A \\<Longrightarrow>\n       f i \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f i \\<otimes> g j)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>i. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\n    \\<in> A \\<rightarrow> carrier R\n 2. \\<And>i.\n       i \\<in> A \\<Longrightarrow>\n       f i \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f i \\<otimes> g j)", "assume a: \"a \\<in> A\""], ["proof (state)\nthis:\n  a \\<in> A\n\ngoal (2 subgoals):\n 1. (\\<lambda>i. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\n    \\<in> A \\<rightarrow> carrier R\n 2. \\<And>i.\n       i \\<in> A \\<Longrightarrow>\n       f i \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f i \\<otimes> g j)", "show \"f a \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f a \\<otimes> g j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f a \\<otimes> g j)", "by (rule finsum_rdistr[OF B _ g], insert a f, auto)"], ["proof (state)\nthis:\n  f a \\<otimes> finsum R g B = (\\<Oplus>j\\<in>B. f a \\<otimes> g j)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. \\<Oplus>j\\<in>B. f i \\<otimes> g j)\n    \\<in> A \\<rightarrow> carrier R", "qed (insert f g B, auto intro: finsum_closed)"], ["", "lemma (in semiring) Units_one_side_I: \n  \"a \\<in> carrier R \\<Longrightarrow> p \\<in> Units R \\<Longrightarrow> p \\<otimes> a = \\<one> \\<Longrightarrow> a \\<in> Units R\"\n  \"a \\<in> carrier R \\<Longrightarrow> p \\<in> Units R \\<Longrightarrow> a \\<otimes> p = \\<one> \\<Longrightarrow> a \\<in> Units R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>a \\<in> carrier R; p \\<in> Units R;\n      p \\<otimes> a = \\<one>\\<rbrakk>\n     \\<Longrightarrow> a \\<in> Units R) &&&\n    (\\<lbrakk>a \\<in> carrier R; p \\<in> Units R;\n      a \\<otimes> p = \\<one>\\<rbrakk>\n     \\<Longrightarrow> a \\<in> Units R)", "by (metis Units_closed Units_inv_Units Units_l_inv inv_unique)+"], ["", "context ordered_cancel_semiring begin"], ["", "subclass ordered_cancel_ab_semigroup_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_cancel_ab_semigroup_add (+) (-) (\\<le>) (<)", ".."], ["", "end"], ["", "text \\<open>partially ordered variant\\<close>"], ["", "class ordered_semiring_strict = semiring + comm_monoid_add + ordered_cancel_ab_semigroup_add +\n  assumes mult_strict_left_mono: \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> c * a < c * b\"\n  assumes mult_strict_right_mono: \"a < b \\<Longrightarrow> 0 < c \\<Longrightarrow> a * c < b * c\"\nbegin"], ["", "subclass semiring_0_cancel"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semiring_0_cancel (+) (-) (0::'a) (*)", ".."], ["", "subclass ordered_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_semiring (+) (0::'a) (\\<le>) (<) (*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "fix a b c :: 'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "assume A: \"a \\<le> b\" \"0 \\<le> c\""], ["proof (state)\nthis:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (2 subgoals):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * a \\<le> c * b\n 2. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "from A"], ["proof (chain)\npicking this:\n  a \\<le> b\n  (0::'a) \\<le> c", "show \"c * a \\<le> c * b\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. c * a \\<le> c * b", "unfolding le_less"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "using mult_strict_left_mono"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?c * ?a < ?c * ?b\n\ngoal (1 subgoal):\n 1. c * a < c * b \\<or> c * a = c * b", "by (cases \"c = 0\") auto"], ["proof (state)\nthis:\n  c * a \\<le> c * b\n\ngoal (1 subgoal):\n 1. \\<And>a b c.\n       \\<lbrakk>a \\<le> b; (0::'a) \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * c \\<le> b * c", "from A"], ["proof (chain)\npicking this:\n  a \\<le> b\n  (0::'a) \\<le> c", "show \"a * c \\<le> b * c\""], ["proof (prove)\nusing this:\n  a \\<le> b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. a * c \\<le> b * c", "unfolding le_less"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n\ngoal (1 subgoal):\n 1. a * c < b * c \\<or> a * c = b * c", "using mult_strict_right_mono"], ["proof (prove)\nusing this:\n  a < b \\<or> a = b\n  (0::'a) < c \\<or> (0::'a) = c\n  \\<lbrakk>?a < ?b; (0::'a) < ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c < ?b * ?c\n\ngoal (1 subgoal):\n 1. a * c < b * c \\<or> a * c = b * c", "by (cases \"c = 0\") auto"], ["proof (state)\nthis:\n  a * c \\<le> b * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_pos_pos[simp]: \"0 < a \\<Longrightarrow> 0 < b \\<Longrightarrow> 0 < a * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "using mult_strict_left_mono [of 0 b a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) < b; (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> a * (0::'a) < a * b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < a * b", "by simp"], ["", "lemma mult_pos_neg: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> a * b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "using mult_strict_left_mono [of b 0 a]"], ["proof (prove)\nusing this:\n  \\<lbrakk>b < (0::'a); (0::'a) < a\\<rbrakk>\n  \\<Longrightarrow> a * b < a * (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "by simp"], ["", "lemma mult_neg_pos: \"a < 0 \\<Longrightarrow> 0 < b \\<Longrightarrow> a * b < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "using mult_strict_right_mono [of a 0 b]"], ["proof (prove)\nusing this:\n  \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n  \\<Longrightarrow> a * b < (0::'a) * b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>a < (0::'a); (0::'a) < b\\<rbrakk>\n    \\<Longrightarrow> a * b < (0::'a)", "by simp"], ["", "text \\<open>Legacy - use \\<open>mult_neg_pos\\<close>\\<close>"], ["", "lemma mult_pos_neg2: \"0 < a \\<Longrightarrow> b < 0 \\<Longrightarrow> b * a < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) < a; b < (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b * a < (0::'a)", "by (drule mult_strict_right_mono [of b 0], auto)"], ["", "text\\<open>Strict monotonicity in both arguments\\<close>"], ["", "lemma mult_strict_mono:\n  assumes \"a < b\" and \"c < d\" and \"0 < b\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "using assms"], ["proof (prove)\nusing this:\n  a < b\n  c < d\n  (0::'a) < b\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. a * c < b * d", "apply (cases \"c=0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * c < b * d\n 2. \\<lbrakk>a < b; c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * c < b * d", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> a * c < b * d", "apply (erule mult_strict_right_mono [THEN less_trans])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < c\n 2. \\<lbrakk>c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b * c < b * d", "apply (force simp add: le_less)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c < d; (0::'a) < b; (0::'a) \\<le> c;\n     c \\<noteq> (0::'a)\\<rbrakk>\n    \\<Longrightarrow> b * c < b * d", "apply (erule mult_strict_left_mono, assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text\\<open>This weaker variant has more natural premises\\<close>"], ["", "lemma mult_strict_mono':\n  assumes \"a < b\" and \"c < d\" and \"0 \\<le> a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "by (rule mult_strict_mono) (insert assms, auto)"], ["", "lemma mult_less_le_imp_less:\n  assumes \"a < b\" and \"c \\<le> d\" and \"0 \\<le> a\" and \"0 < c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "using assms"], ["proof (prove)\nusing this:\n  a < b\n  c \\<le> d\n  (0::'a) \\<le> a\n  (0::'a) < c\n\ngoal (1 subgoal):\n 1. a * c < b * d", "apply (subgoal_tac \"a * c < b * c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c;\n     a * c < b * c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * d\n 2. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * c", "apply (erule less_le_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> b * c \\<le> b * d\n 2. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * c", "apply (erule mult_left_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a < b; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> b\n 2. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a < b; c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * c", "apply (erule mult_strict_right_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c \\<le> d; (0::'a) \\<le> a; (0::'a) < c\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < c", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma mult_le_less_imp_less:\n  assumes \"a \\<le> b\" and \"c < d\" and \"0 < a\" and \"0 \\<le> c\"\n  shows \"a * c < b * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * c < b * d", "using assms"], ["proof (prove)\nusing this:\n  a \\<le> b\n  c < d\n  (0::'a) < a\n  (0::'a) \\<le> c\n\ngoal (1 subgoal):\n 1. a * c < b * d", "apply (subgoal_tac \"a * c \\<le> b * c\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c;\n     a * c \\<le> b * c\\<rbrakk>\n    \\<Longrightarrow> a * c < b * d\n 2. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a * c \\<le> b * c", "apply (erule le_less_trans)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> b * c < b * d\n 2. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a * c \\<le> b * c", "apply (erule mult_strict_left_mono)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>a \\<le> b; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> (0::'a) < b\n 2. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a * c \\<le> b * c", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<le> b; c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> a * c \\<le> b * c", "apply (erule mult_right_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c < d; (0::'a) < a; (0::'a) \\<le> c\\<rbrakk>\n    \\<Longrightarrow> (0::'a) \\<le> c", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "class ordered_idom = idom + ordered_semiring_strict +\n  assumes zero_less_one [simp]: \"0 < 1\" begin"], ["", "subclass semiring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.semiring_1 (1::'a) (*) (+) (0::'a)", ".."], ["", "subclass comm_ring_1"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.comm_ring_1 (*) (1::'a) (+) (0::'a) (-) uminus", ".."], ["", "subclass ordered_ring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_ring (+) (-) (0::'a) (\\<le>) (<) (*) uminus", ".."], ["", "subclass ordered_comm_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_comm_semiring (+) (\\<le>) (<) (0::'a) (*)", "by(unfold_locales, fact mult_left_mono)"], ["", "subclass ordered_ab_semigroup_add"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ordered_ab_semigroup_add (+) (\\<le>) (<)", ".."], ["", "lemma of_nat_ge_0[simp]: \"of_nat x \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> of_nat x", "proof (induct x)"], ["proof (state)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> of_nat 0\n 2. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (0::'a) \\<le> of_nat 0\n 2. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<le> of_nat 0", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> of_nat 0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "case (Suc x)"], ["proof (state)\nthis:\n  (0::'a) \\<le> of_nat x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "hence \"0 \\<le> of_nat x\""], ["proof (prove)\nusing this:\n  (0::'a) \\<le> of_nat x\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> of_nat x", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> of_nat x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "also"], ["proof (state)\nthis:\n  (0::'a) \\<le> of_nat x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "have \"of_nat x < of_nat (Suc x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat x < of_nat (Suc x)", "by auto"], ["proof (state)\nthis:\n  of_nat x < of_nat (Suc x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (0::'a) \\<le> of_nat x \\<Longrightarrow> (0::'a) \\<le> of_nat (Suc x)", "finally"], ["proof (chain)\npicking this:\n  (0::'a) < of_nat (Suc x)", "show ?case"], ["proof (prove)\nusing this:\n  (0::'a) < of_nat (Suc x)\n\ngoal (1 subgoal):\n 1. (0::'a) \\<le> of_nat (Suc x)", "by auto"], ["proof (state)\nthis:\n  (0::'a) \\<le> of_nat (Suc x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_nat_eq_0[simp]: \"of_nat x = 0 \\<longleftrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (of_nat x = (0::'a)) = (x = 0)", "proof(induct x,simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (of_nat x = (0::'a)) = (x = 0) \\<Longrightarrow>\n       (of_nat (Suc x) = (0::'a)) = (Suc x = 0)", "case (Suc x)"], ["proof (state)\nthis:\n  (of_nat x = (0::'a)) = (x = 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (of_nat x = (0::'a)) = (x = 0) \\<Longrightarrow>\n       (of_nat (Suc x) = (0::'a)) = (Suc x = 0)", "have \"of_nat (Suc x) > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < of_nat (Suc x)", "apply(rule le_less_trans[of _ \"of_nat x\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (0::'a) \\<le> of_nat x\n 2. of_nat x < of_nat (Suc x)", "by auto"], ["proof (state)\nthis:\n  (0::'a) < of_nat (Suc x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (of_nat x = (0::'a)) = (x = 0) \\<Longrightarrow>\n       (of_nat (Suc x) = (0::'a)) = (Suc x = 0)", "thus ?case"], ["proof (prove)\nusing this:\n  (0::'a) < of_nat (Suc x)\n\ngoal (1 subgoal):\n 1. (of_nat (Suc x) = (0::'a)) = (Suc x = 0)", "by auto"], ["proof (state)\nthis:\n  (of_nat (Suc x) = (0::'a)) = (Suc x = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inj_of_nat: \"inj (of_nat :: nat \\<Rightarrow> 'a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj of_nat", "proof(rule injI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. of_nat x = of_nat y \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. of_nat x = of_nat y \\<Longrightarrow> x = y", "show \"of_nat x = of_nat y \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_nat x = of_nat y \\<Longrightarrow> x = y", "proof (induct x arbitrary: y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>y. of_nat 0 = of_nat y \\<Longrightarrow> 0 = y\n 2. \\<And>x y.\n       \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat y\\<rbrakk>\n       \\<Longrightarrow> Suc x = y", "case 0"], ["proof (state)\nthis:\n  of_nat 0 = of_nat y\n\ngoal (2 subgoals):\n 1. \\<And>y. of_nat 0 = of_nat y \\<Longrightarrow> 0 = y\n 2. \\<And>x y.\n       \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat y\\<rbrakk>\n       \\<Longrightarrow> Suc x = y", "thus ?case"], ["proof (prove)\nusing this:\n  of_nat 0 = of_nat y\n\ngoal (1 subgoal):\n 1. 0 = y", "proof (induct y)"], ["proof (state)\ngoal (2 subgoals):\n 1. of_nat 0 = of_nat 0 \\<Longrightarrow> 0 = 0\n 2. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "case 0"], ["proof (state)\nthis:\n  of_nat 0 = of_nat 0\n\ngoal (2 subgoals):\n 1. of_nat 0 = of_nat 0 \\<Longrightarrow> 0 = 0\n 2. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "thus ?case"], ["proof (prove)\nusing this:\n  of_nat 0 = of_nat 0\n\ngoal (1 subgoal):\n 1. 0 = 0", "by auto"], ["proof (state)\nthis:\n  0 = 0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "case (Suc y)"], ["proof (state)\nthis:\n  of_nat 0 = of_nat y \\<Longrightarrow> 0 = y\n  of_nat 0 = of_nat (Suc y)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "hence \"of_nat (Suc y) = 0\""], ["proof (prove)\nusing this:\n  of_nat 0 = of_nat y \\<Longrightarrow> 0 = y\n  of_nat 0 = of_nat (Suc y)\n\ngoal (1 subgoal):\n 1. of_nat (Suc y) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  of_nat (Suc y) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "hence \"Suc y = 0\""], ["proof (prove)\nusing this:\n  of_nat (Suc y) = (0::'a)\n\ngoal (1 subgoal):\n 1. Suc y = 0", "unfolding of_nat_eq_0"], ["proof (prove)\nusing this:\n  Suc y = 0\n\ngoal (1 subgoal):\n 1. Suc y = 0", "by auto"], ["proof (state)\nthis:\n  Suc y = 0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "hence False"], ["proof (prove)\nusing this:\n  Suc y = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>of_nat 0 = of_nat y \\<Longrightarrow> 0 = y;\n        of_nat 0 = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc y", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. 0 = Suc y", "by auto"], ["proof (state)\nthis:\n  0 = Suc y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 = y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat y\\<rbrakk>\n       \\<Longrightarrow> Suc x = y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat y\\<rbrakk>\n       \\<Longrightarrow> Suc x = y", "case (Suc x)"], ["proof (state)\nthis:\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat y\\<rbrakk>\n       \\<Longrightarrow> Suc x = y", "thus ?case"], ["proof (prove)\nusing this:\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat y\n\ngoal (1 subgoal):\n 1. Suc x = y", "proof (induct y)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n     of_nat (Suc x) = of_nat 0\\<rbrakk>\n    \\<Longrightarrow> Suc x = 0\n 2. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "case 0"], ["proof (state)\nthis:\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n     of_nat (Suc x) = of_nat 0\\<rbrakk>\n    \\<Longrightarrow> Suc x = 0\n 2. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "hence \"of_nat (Suc x) = 0\""], ["proof (prove)\nusing this:\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat 0\n\ngoal (1 subgoal):\n 1. of_nat (Suc x) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  of_nat (Suc x) = (0::'a)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n     of_nat (Suc x) = of_nat 0\\<rbrakk>\n    \\<Longrightarrow> Suc x = 0\n 2. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "hence \"Suc x = 0\""], ["proof (prove)\nusing this:\n  of_nat (Suc x) = (0::'a)\n\ngoal (1 subgoal):\n 1. Suc x = 0", "unfolding of_nat_eq_0"], ["proof (prove)\nusing this:\n  Suc x = 0\n\ngoal (1 subgoal):\n 1. Suc x = 0", "by auto"], ["proof (state)\nthis:\n  Suc x = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n     of_nat (Suc x) = of_nat 0\\<rbrakk>\n    \\<Longrightarrow> Suc x = 0\n 2. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "hence False"], ["proof (prove)\nusing this:\n  Suc x = 0\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n     of_nat (Suc x) = of_nat 0\\<rbrakk>\n    \\<Longrightarrow> Suc x = 0\n 2. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "thus ?case"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. Suc x = 0", "by auto"], ["proof (state)\nthis:\n  Suc x = 0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "case (Suc y)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n   of_nat (Suc x) = of_nat y\\<rbrakk>\n  \\<Longrightarrow> Suc x = y\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat (Suc y)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<lbrakk>\\<lbrakk>\\<And>y.\n                            of_nat x = of_nat y \\<Longrightarrow> x = y;\n                 of_nat (Suc x) = of_nat y\\<rbrakk>\n                \\<Longrightarrow> Suc x = y;\n        \\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n        of_nat (Suc x) = of_nat (Suc y)\\<rbrakk>\n       \\<Longrightarrow> Suc x = Suc y", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>y. of_nat x = of_nat y \\<Longrightarrow> x = y;\n   of_nat (Suc x) = of_nat y\\<rbrakk>\n  \\<Longrightarrow> Suc x = y\n  of_nat x = of_nat ?y1 \\<Longrightarrow> x = ?y1\n  of_nat (Suc x) = of_nat (Suc y)\n\ngoal (1 subgoal):\n 1. Suc x = Suc y", "by auto"], ["proof (state)\nthis:\n  Suc x = Suc y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Suc x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_nat x = of_nat y \\<Longrightarrow> x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass ring_char_0"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.ring_char_0 (1::'a) (*) (+) (0::'a) (-) uminus", "by(unfold_locales, fact inj_of_nat)"], ["", "end"], ["", "(*\ninstance linordered_idom \\<subseteq> ordered_semiring_strict by (intro_classes,auto)\ninstance linordered_idom \\<subseteq> ordered_idom by (intro_classes, auto)\n*)"], ["", "end"]]}