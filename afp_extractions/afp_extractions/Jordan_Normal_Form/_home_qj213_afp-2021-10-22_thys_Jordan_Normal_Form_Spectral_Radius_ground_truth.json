{"file_name": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form/Spectral_Radius.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Jordan_Normal_Form", "problem_names": ["lemma spectrum_root_char_poly: assumes A: \"(A :: 'a :: field mat) \\<in> carrier_mat n n\"\n  shows \"spectrum A = {k. poly (char_poly A) k = 0}\"", "lemma card_finite_spectrum: assumes A: \"(A :: 'a :: field mat) \\<in> carrier_mat n n\"\n  shows \"finite (spectrum A)\" \"card (spectrum A) \\<le> n\"", "lemma spectrum_non_empty: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  shows \"spectrum A \\<noteq> {}\"", "lemma spectral_radius_mem_max: assumes A: \"A \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  shows \"spectral_radius A \\<in> norm ` spectrum A\" (is ?one)\n  \"a \\<in> norm ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A\"", "lemma spectral_radius_jnf_norm_bound_le_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A \\<le> 1\"\n  and jnf_exists: \"\\<exists> n_as. jordan_nf A n_as\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (n - 1))\"", "lemma spectral_radius_jnf_norm_bound_less_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A < 1\"\n  and jnf_exists: \"\\<exists> n_as. jordan_nf A n_as\" \n  shows \"\\<exists> c. \\<forall> k. norm_bound (A ^\\<^sub>m k) c\"", "lemma spectral_radius_gt_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  and sr_1: \"spectral_radius A > 1\"\n  shows \"\\<exists> v c. v \\<in> carrier_vec n \\<and> norm c > 1 \\<and> v \\<noteq> 0\\<^sub>v n \\<and> A ^\\<^sub>m k *\\<^sub>v v = c^k \\<cdot>\\<^sub>v v\"", "lemma spectral_radius_jnf_norm_bound_le_1_upper_triangular: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A \\<le> 1\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (n - 1))\"", "lemma spectral_radius_jnf_norm_bound_less_1_upper_triangular: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A < 1\"\n  shows \"\\<exists> c. \\<forall> k. norm_bound (A ^\\<^sub>m k) c\"", "lemma spectral_radius_poly_bound: fixes A :: \"complex mat\"\n  assumes A: \"A \\<in> carrier_mat n n\" \n  and sr_1: \"spectral_radius A \\<le> 1\"\n  and eq_1: \"\\<And> ev k. poly (char_poly A) ev = 0 \\<Longrightarrow> norm ev = 1 \\<Longrightarrow> Polynomial.order ev (char_poly A) \\<le> d\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (d - 1))\""], "translations": [["", "lemma spectrum_root_char_poly: assumes A: \"(A :: 'a :: field mat) \\<in> carrier_mat n n\"\n  shows \"spectrum A = {k. poly (char_poly A) k = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A = {k. poly (char_poly A) k = (0::'a)}", "unfolding spectrum_def eigenvalue_root_char_poly[OF A, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. Collect (eigenvalue A) = {k. eigenvalue A k}", "by auto"], ["", "lemma card_finite_spectrum: assumes A: \"(A :: 'a :: field mat) \\<in> carrier_mat n n\"\n  shows \"finite (spectrum A)\" \"card (spectrum A) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (spectrum A) &&& card (spectrum A) \\<le> n", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (spectrum A)\n 2. card (spectrum A) \\<le> n", "define CP where \"CP = char_poly A\""], ["proof (state)\nthis:\n  CP = char_poly A\n\ngoal (2 subgoals):\n 1. finite (spectrum A)\n 2. card (spectrum A) \\<le> n", "from spectrum_root_char_poly[OF A]"], ["proof (chain)\npicking this:\n  spectrum A = {k. poly (char_poly A) k = (0::'a)}", "have id: \"spectrum A = { k. poly CP k = 0}\""], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = (0::'a)}\n\ngoal (1 subgoal):\n 1. spectrum A = {k. poly CP k = (0::'a)}", "unfolding CP_def"], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = (0::'a)}\n\ngoal (1 subgoal):\n 1. spectrum A = {k. poly (char_poly A) k = (0::'a)}", "by auto"], ["proof (state)\nthis:\n  spectrum A = {k. poly CP k = (0::'a)}\n\ngoal (2 subgoals):\n 1. finite (spectrum A)\n 2. card (spectrum A) \\<le> n", "from degree_monic_char_poly[OF A]"], ["proof (chain)\npicking this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = (1::'a)", "have d: \"degree CP = n\" and c: \"coeff CP n = 1\""], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = (1::'a)\n\ngoal (1 subgoal):\n 1. degree CP = n &&& coeff CP n = (1::'a)", "unfolding CP_def"], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = (1::'a)\n\ngoal (1 subgoal):\n 1. degree (char_poly A) = n &&& coeff (char_poly A) n = (1::'a)", "by auto"], ["proof (state)\nthis:\n  degree CP = n\n  coeff CP n = (1::'a)\n\ngoal (2 subgoals):\n 1. finite (spectrum A)\n 2. card (spectrum A) \\<le> n", "from c"], ["proof (chain)\npicking this:\n  coeff CP n = (1::'a)", "have \"CP \\<noteq> 0\""], ["proof (prove)\nusing this:\n  coeff CP n = (1::'a)\n\ngoal (1 subgoal):\n 1. CP \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  CP \\<noteq> 0\n\ngoal (2 subgoals):\n 1. finite (spectrum A)\n 2. card (spectrum A) \\<le> n", "from poly_roots_finite[OF this]"], ["proof (chain)\npicking this:\n  finite {x. poly CP x = (0::'a)}", "show \"finite (spectrum A)\""], ["proof (prove)\nusing this:\n  finite {x. poly CP x = (0::'a)}\n\ngoal (1 subgoal):\n 1. finite (spectrum A)", "unfolding id"], ["proof (prove)\nusing this:\n  finite {x. poly CP x = (0::'a)}\n\ngoal (1 subgoal):\n 1. finite {k. poly CP k = (0::'a)}", "."], ["proof (state)\nthis:\n  finite (spectrum A)\n\ngoal (1 subgoal):\n 1. card (spectrum A) \\<le> n", "from poly_roots_degree[OF \\<open>CP \\<noteq> 0\\<close>]"], ["proof (chain)\npicking this:\n  card {x. poly CP x = (0::'a)} \\<le> degree CP", "show \"card (spectrum A) \\<le> n\""], ["proof (prove)\nusing this:\n  card {x. poly CP x = (0::'a)} \\<le> degree CP\n\ngoal (1 subgoal):\n 1. card (spectrum A) \\<le> n", "unfolding id"], ["proof (prove)\nusing this:\n  card {x. poly CP x = (0::'a)} \\<le> degree CP\n\ngoal (1 subgoal):\n 1. card {k. poly CP k = (0::'a)} \\<le> n", "using d"], ["proof (prove)\nusing this:\n  card {x. poly CP x = (0::'a)} \\<le> degree CP\n  degree CP = n\n\ngoal (1 subgoal):\n 1. card {k. poly CP k = (0::'a)} \\<le> n", "by simp"], ["proof (state)\nthis:\n  card (spectrum A) \\<le> n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma spectrum_non_empty: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  shows \"spectrum A \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "define CP where \"CP = char_poly A\""], ["proof (state)\nthis:\n  CP = char_poly A\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "from spectrum_root_char_poly[OF A]"], ["proof (chain)\npicking this:\n  spectrum A = {k. poly (char_poly A) k = 0}", "have id: \"spectrum A = { k. poly CP k = 0}\""], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n\ngoal (1 subgoal):\n 1. spectrum A = {k. poly CP k = 0}", "unfolding CP_def"], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n\ngoal (1 subgoal):\n 1. spectrum A = {k. poly (char_poly A) k = 0}", "by auto"], ["proof (state)\nthis:\n  spectrum A = {k. poly CP k = 0}\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "from degree_monic_char_poly[OF A]"], ["proof (chain)\npicking this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1", "have d: \"degree CP > 0\""], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1\n\ngoal (1 subgoal):\n 1. 0 < degree CP", "using n"], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < degree CP", "unfolding CP_def"], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1\n  0 < n\n\ngoal (1 subgoal):\n 1. 0 < degree (char_poly A)", "by auto"], ["proof (state)\nthis:\n  0 < degree CP\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "hence \"\\<not> constant (poly CP)\""], ["proof (prove)\nusing this:\n  0 < degree CP\n\ngoal (1 subgoal):\n 1. \\<not> constant (poly CP)", "by (simp add: constant_degree)"], ["proof (state)\nthis:\n  \\<not> constant (poly CP)\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "from fundamental_theorem_of_algebra[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. poly CP z = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>z. poly CP z = 0\n\ngoal (1 subgoal):\n 1. spectrum A \\<noteq> {}", "unfolding id"], ["proof (prove)\nusing this:\n  \\<exists>z. poly CP z = 0\n\ngoal (1 subgoal):\n 1. {k. poly CP k = 0} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  spectrum A \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition spectral_radius :: \"complex mat \\<Rightarrow> real\" where \n  \"spectral_radius A = Max (norm ` spectrum A)\""], ["", "lemma spectral_radius_mem_max: assumes A: \"A \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  shows \"spectral_radius A \\<in> norm ` spectrum A\" (is ?one)\n  \"a \\<in> norm ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. spectral_radius A \\<in> cmod ` spectrum A &&&\n    (a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. spectral_radius A \\<in> cmod ` spectrum A\n 2. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "define SA where \"SA = norm ` spectrum A\""], ["proof (state)\nthis:\n  SA = cmod ` spectrum A\n\ngoal (2 subgoals):\n 1. spectral_radius A \\<in> cmod ` spectrum A\n 2. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "from card_finite_spectrum[OF A]"], ["proof (chain)\npicking this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n", "have fin: \"finite SA\""], ["proof (prove)\nusing this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n\ngoal (1 subgoal):\n 1. finite SA", "unfolding SA_def"], ["proof (prove)\nusing this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n\ngoal (1 subgoal):\n 1. finite (cmod ` spectrum A)", "by auto"], ["proof (state)\nthis:\n  finite SA\n\ngoal (2 subgoals):\n 1. spectral_radius A \\<in> cmod ` spectrum A\n 2. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "from spectrum_non_empty[OF A n]"], ["proof (chain)\npicking this:\n  spectrum A \\<noteq> {}", "have ne: \"SA \\<noteq> {}\""], ["proof (prove)\nusing this:\n  spectrum A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. SA \\<noteq> {}", "unfolding SA_def"], ["proof (prove)\nusing this:\n  spectrum A \\<noteq> {}\n\ngoal (1 subgoal):\n 1. cmod ` spectrum A \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  SA \\<noteq> {}\n\ngoal (2 subgoals):\n 1. spectral_radius A \\<in> cmod ` spectrum A\n 2. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "note d = spectral_radius_def SA_def[symmetric] Sup_fin_Max[symmetric]"], ["proof (state)\nthis:\n  spectral_radius ?A = Max (cmod ` spectrum ?A)\n  cmod ` spectrum A = SA\n  Max = Sup_fin\n\ngoal (2 subgoals):\n 1. spectral_radius A \\<in> cmod ` spectrum A\n 2. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "show ?one"], ["proof (prove)\ngoal (1 subgoal):\n 1. spectral_radius A \\<in> cmod ` spectrum A", "unfolding d"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>\\<^sub>f\\<^sub>i\\<^sub>n SA \\<in> SA", "by (rule Sup_fin.closed[OF fin ne], auto simp: sup_real_def)"], ["proof (state)\nthis:\n  spectral_radius A \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "assume \"a \\<in> norm ` spectrum A\""], ["proof (state)\nthis:\n  a \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. a \\<in> cmod ` spectrum A \\<Longrightarrow> a \\<le> spectral_radius A", "thus \"a \\<le> spectral_radius A\""], ["proof (prove)\nusing this:\n  a \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. a \\<le> spectral_radius A", "unfolding d"], ["proof (prove)\nusing this:\n  a \\<in> SA\n\ngoal (1 subgoal):\n 1. a \\<le> \\<Squnion>\\<^sub>f\\<^sub>i\\<^sub>n SA", "by (intro Sup_fin.coboundedI[OF fin])"], ["proof (state)\nthis:\n  a \\<le> spectral_radius A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If spectral radius is at most 1, and JNF exists, then we have polynomial growth.\\<close>"], ["", "lemma spectral_radius_jnf_norm_bound_le_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A \\<le> 1\"\n  and jnf_exists: \"\\<exists> n_as. jordan_nf A n_as\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "let ?p = \"char_poly A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "from char_poly_factorized[OF A]"], ["proof (chain)\npicking this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n", "obtain as where cA: \"char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\" \n    and len: \"length as = n\""], ["proof (prove)\nusing this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n\n\ngoal (1 subgoal):\n 1. (\\<And>as.\n        \\<lbrakk>char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]);\n         length as = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\n  length as = n\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "proof (rule factored_char_poly_norm_bound[OF A cA jnf_exists])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> n", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> n", "show \"length (filter ((=) a) as) \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (filter ((=) a) as) \\<le> n", "using len"], ["proof (prove)\nusing this:\n  length as = n\n\ngoal (1 subgoal):\n 1. length (filter ((=) a) as) \\<le> n", "by auto"], ["proof (state)\nthis:\n  length (filter ((=) a) as) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1", "assume \"a \\<in> set as\""], ["proof (state)\nthis:\n  a \\<in> set as\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1", "from linear_poly_root[OF this]"], ["proof (chain)\npicking this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0", "have \"poly ?p a = 0\""], ["proof (prove)\nusing this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0\n\ngoal (1 subgoal):\n 1. poly (char_poly A) a = 0", "unfolding cA"], ["proof (prove)\nusing this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0\n\ngoal (1 subgoal):\n 1. poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0", "by simp"], ["proof (state)\nthis:\n  poly (char_poly A) a = 0\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1", "with spectrum_root_char_poly[OF A]"], ["proof (chain)\npicking this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n  poly (char_poly A) a = 0", "have mem: \"norm a \\<in> norm ` spectrum A\""], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n  poly (char_poly A) a = 0\n\ngoal (1 subgoal):\n 1. cmod a \\<in> cmod ` spectrum A", "by auto"], ["proof (state)\nthis:\n  cmod a \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1", "with card_finite_spectrum[OF A]"], ["proof (chain)\npicking this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n  cmod a \\<in> cmod ` spectrum A", "have \"n > 0\""], ["proof (prove)\nusing this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n  cmod a \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. 0 < n", "by (cases n, auto)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1", "from spectral_radius_mem_max(2)[OF A this mem] sr_1"], ["proof (chain)\npicking this:\n  cmod a \\<le> spectral_radius A\n  spectral_radius A \\<le> 1", "show \"norm a \\<le> 1\""], ["proof (prove)\nusing this:\n  cmod a \\<le> spectral_radius A\n  spectral_radius A \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod a \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cmod a \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c1 c2.\n     \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If spectral radius is smaller than 1, and JNF exists, then we have a constant bound.\\<close>"], ["", "lemma spectral_radius_jnf_norm_bound_less_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A < 1\"\n  and jnf_exists: \"\\<exists> n_as. jordan_nf A n_as\" \n  shows \"\\<exists> c. \\<forall> k. norm_bound (A ^\\<^sub>m k) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "let ?p = \"char_poly A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "from char_poly_factorized[OF A]"], ["proof (chain)\npicking this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n", "obtain as where cA: \"char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\""], ["proof (prove)\nusing this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n\n\ngoal (1 subgoal):\n 1. (\\<And>as.\n        char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\n\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "have \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (0 - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (0 - 1))", "proof (rule factored_char_poly_norm_bound[OF A cA jnf_exists])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "assume \"a \\<in> set as\""], ["proof (state)\nthis:\n  a \\<in> set as\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "from linear_poly_root[OF this]"], ["proof (chain)\npicking this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0", "have \"poly ?p a = 0\""], ["proof (prove)\nusing this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0\n\ngoal (1 subgoal):\n 1. poly (char_poly A) a = 0", "unfolding cA"], ["proof (prove)\nusing this:\n  poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0\n\ngoal (1 subgoal):\n 1. poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) a = 0", "by simp"], ["proof (state)\nthis:\n  poly (char_poly A) a = 0\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "with spectrum_root_char_poly[OF A]"], ["proof (chain)\npicking this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n  poly (char_poly A) a = 0", "have mem: \"norm a \\<in> norm ` spectrum A\""], ["proof (prove)\nusing this:\n  spectrum A = {k. poly (char_poly A) k = 0}\n  poly (char_poly A) a = 0\n\ngoal (1 subgoal):\n 1. cmod a \\<in> cmod ` spectrum A", "by auto"], ["proof (state)\nthis:\n  cmod a \\<in> cmod ` spectrum A\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "with card_finite_spectrum[OF A]"], ["proof (chain)\npicking this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n  cmod a \\<in> cmod ` spectrum A", "have \"n > 0\""], ["proof (prove)\nusing this:\n  finite (spectrum A)\n  card (spectrum A) \\<le> n\n  cmod a \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. 0 < n", "by (cases n, auto)"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "from spectral_radius_mem_max(2)[OF A this mem] sr_1"], ["proof (chain)\npicking this:\n  cmod a \\<le> spectral_radius A\n  spectral_radius A < 1", "have lt: \"norm a < 1\""], ["proof (prove)\nusing this:\n  cmod a \\<le> spectral_radius A\n  spectral_radius A < 1\n\ngoal (1 subgoal):\n 1. cmod a < 1", "by auto"], ["proof (state)\nthis:\n  cmod a < 1\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "thus \"norm a \\<le> 1\""], ["proof (prove)\nusing this:\n  cmod a < 1\n\ngoal (1 subgoal):\n 1. cmod a \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cmod a \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "from lt"], ["proof (chain)\npicking this:\n  cmod a < 1", "show \"norm a = 1 \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0\""], ["proof (prove)\nusing this:\n  cmod a < 1\n\ngoal (1 subgoal):\n 1. cmod a = 1 \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0", "by auto"], ["proof (state)\nthis:\n  cmod a = 1 \\<Longrightarrow> length (filter ((=) a) as) \\<le> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c1 c2.\n     \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (0 - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>c1 c2.\n     \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (0 - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "by auto"], ["proof (state)\nthis:\n  \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If spectral radius is larger than 1, than we have exponential growth.\\<close>"], ["", "lemma spectral_radius_gt_1: assumes A: \"A \\<in> carrier_mat n n\"\n  and n: \"n > 0\"\n  and sr_1: \"spectral_radius A > 1\"\n  shows \"\\<exists> v c. v \\<in> carrier_vec n \\<and> norm c > 1 \\<and> v \\<noteq> 0\\<^sub>v n \\<and> A ^\\<^sub>m k *\\<^sub>v v = c^k \\<cdot>\\<^sub>v v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>v c.\n       v \\<in> carrier_vec n \\<and>\n       1 < cmod c \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and>\n       A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>v c.\n       v \\<in> carrier_vec n \\<and>\n       1 < cmod c \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and>\n       A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v", "from sr_1 spectral_radius_mem_max[OF A n]"], ["proof (chain)\npicking this:\n  1 < spectral_radius A\n  spectral_radius A \\<in> cmod ` spectrum A\n  ?a \\<in> cmod ` spectrum A \\<Longrightarrow> ?a \\<le> spectral_radius A", "obtain ev \n    where ev: \"ev \\<in> spectrum A\" and gt: \"norm ev > 1\""], ["proof (prove)\nusing this:\n  1 < spectral_radius A\n  spectral_radius A \\<in> cmod ` spectrum A\n  ?a \\<in> cmod ` spectrum A \\<Longrightarrow> ?a \\<le> spectral_radius A\n\ngoal (1 subgoal):\n 1. (\\<And>ev.\n        \\<lbrakk>ev \\<in> spectrum A; 1 < cmod ev\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ev \\<in> spectrum A\n  1 < cmod ev\n\ngoal (1 subgoal):\n 1. \\<exists>v c.\n       v \\<in> carrier_vec n \\<and>\n       1 < cmod c \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and>\n       A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v", "from ev[unfolded spectrum_def eigenvalue_def[abs_def]]"], ["proof (chain)\npicking this:\n  ev \\<in> {k. \\<exists>v. eigenvector A v k}", "obtain v where ev: \"eigenvector A v ev\""], ["proof (prove)\nusing this:\n  ev \\<in> {k. \\<exists>v. eigenvector A v k}\n\ngoal (1 subgoal):\n 1. (\\<And>v. eigenvector A v ev \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  eigenvector A v ev\n\ngoal (1 subgoal):\n 1. \\<exists>v c.\n       v \\<in> carrier_vec n \\<and>\n       1 < cmod c \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and>\n       A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v", "from eigenvector_pow[OF A this] this[unfolded eigenvector_def] A gt"], ["proof (chain)\npicking this:\n  A ^\\<^sub>m ?i *\\<^sub>v v = ev ^ ?i \\<cdot>\\<^sub>v v\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = ev \\<cdot>\\<^sub>v v\n  A \\<in> carrier_mat n n\n  1 < cmod ev", "show ?thesis"], ["proof (prove)\nusing this:\n  A ^\\<^sub>m ?i *\\<^sub>v v = ev ^ ?i \\<cdot>\\<^sub>v v\n  v \\<in> carrier_vec (dim_row A) \\<and>\n  v \\<noteq> 0\\<^sub>v (dim_row A) \\<and>\n  A *\\<^sub>v v = ev \\<cdot>\\<^sub>v v\n  A \\<in> carrier_mat n n\n  1 < cmod ev\n\ngoal (1 subgoal):\n 1. \\<exists>v c.\n       v \\<in> carrier_vec n \\<and>\n       1 < cmod c \\<and>\n       v \\<noteq> 0\\<^sub>v n \\<and>\n       A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v", "by (intro exI[of _ v], intro exI[of _ ev], auto)"], ["proof (state)\nthis:\n  \\<exists>v c.\n     v \\<in> carrier_vec n \\<and>\n     1 < cmod c \\<and>\n     v \\<noteq> 0\\<^sub>v n \\<and>\n     A ^\\<^sub>m k *\\<^sub>v v = c ^ k \\<cdot>\\<^sub>v v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If spectral radius is at most 1 for a complex matrix, then we have polynomial growth.\\<close>"], ["", "lemma spectral_radius_jnf_norm_bound_le_1_upper_triangular: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A \\<le> 1\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (n - 1))", "by (rule spectral_radius_jnf_norm_bound_le_1[OF A sr_1],\n    insert char_poly_factorized[OF A] jordan_nf_exists[OF A], blast)"], ["", "text \\<open>If spectral radius is less than 1 for a complex matrix, then we have a constant bound.\\<close>"], ["", "lemma spectral_radius_jnf_norm_bound_less_1_upper_triangular: assumes A: \"(A :: complex mat) \\<in> carrier_mat n n\"\n  and sr_1: \"spectral_radius A < 1\"\n  shows \"\\<exists> c. \\<forall> k. norm_bound (A ^\\<^sub>m k) c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c. \\<forall>k. norm_bound (A ^\\<^sub>m k) c", "by (rule spectral_radius_jnf_norm_bound_less_1[OF A sr_1],\n    insert char_poly_factorized[OF A] jordan_nf_exists[OF A], blast)"], ["", "text \\<open>And we can also get a quantative approximation via the multiplicity of the eigenvalues.\\<close>"], ["", "lemma spectral_radius_poly_bound: fixes A :: \"complex mat\"\n  assumes A: \"A \\<in> carrier_mat n n\" \n  and sr_1: \"spectral_radius A \\<le> 1\"\n  and eq_1: \"\\<And> ev k. poly (char_poly A) ev = 0 \\<Longrightarrow> norm ev = 1 \\<Longrightarrow> Polynomial.order ev (char_poly A) \\<le> d\"\n  shows \"\\<exists> c1 c2. \\<forall> k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * of_nat k ^ (d - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "fix ev"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "assume \"poly (char_poly A) ev = 0\""], ["proof (state)\nthis:\n  poly (char_poly A) ev = 0\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "with eigenvalue_root_char_poly[OF A]"], ["proof (chain)\npicking this:\n  eigenvalue A ?k = (poly (char_poly A) ?k = 0)\n  poly (char_poly A) ev = 0", "have ev: \"eigenvalue A ev\""], ["proof (prove)\nusing this:\n  eigenvalue A ?k = (poly (char_poly A) ?k = 0)\n  poly (char_poly A) ev = 0\n\ngoal (1 subgoal):\n 1. eigenvalue A ev", "by simp"], ["proof (state)\nthis:\n  eigenvalue A ev\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "hence \"norm ev \\<in> norm ` spectrum A\""], ["proof (prove)\nusing this:\n  eigenvalue A ev\n\ngoal (1 subgoal):\n 1. cmod ev \\<in> cmod ` spectrum A", "unfolding spectrum_def"], ["proof (prove)\nusing this:\n  eigenvalue A ev\n\ngoal (1 subgoal):\n 1. cmod ev \\<in> cmod ` Collect (eigenvalue A)", "by auto"], ["proof (state)\nthis:\n  cmod ev \\<in> cmod ` spectrum A\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "from spectral_radius_mem_max(2)[OF A eigenvalue_imp_nonzero_dim[OF A ev] this] sr_1"], ["proof (chain)\npicking this:\n  cmod ev \\<le> spectral_radius A\n  spectral_radius A \\<le> 1", "have \"norm ev \\<le> 1\""], ["proof (prove)\nusing this:\n  cmod ev \\<le> spectral_radius A\n  spectral_radius A \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod ev \\<le> 1", "by auto"], ["proof (state)\nthis:\n  cmod ev \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "}"], ["proof (state)\nthis:\n  poly (char_poly A) ?ev2 = 0 \\<Longrightarrow> cmod ?ev2 \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "note le_1 = this"], ["proof (state)\nthis:\n  poly (char_poly A) ?ev2 = 0 \\<Longrightarrow> cmod ?ev2 \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "let ?p = \"char_poly A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "from char_poly_factorized[OF A]"], ["proof (chain)\npicking this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n", "obtain as where cA: \"char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\" \n    and lenn: \"length as = n\""], ["proof (prove)\nusing this:\n  \\<exists>as.\n     char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) \\<and> length as = n\n\ngoal (1 subgoal):\n 1. (\\<And>as.\n        \\<lbrakk>char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:]);\n         length as = n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  char_poly A = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\n  length as = n\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "from degree_monic_char_poly[OF A]"], ["proof (chain)\npicking this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1", "have deg: \"degree (char_poly A) = n\""], ["proof (prove)\nusing this:\n  degree (char_poly A) = n \\<and> coeff (char_poly A) n = 1\n\ngoal (1 subgoal):\n 1. degree (char_poly A) = n", "by auto"], ["proof (state)\nthis:\n  degree (char_poly A) = n\n\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>c1 c2.\n       \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))", "proof (rule factored_char_poly_norm_bound[OF A cA jordan_nf_exists[OF A]], rule cA)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "fix ev"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "assume \"ev \\<in> set as\""], ["proof (state)\nthis:\n  ev \\<in> set as\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "hence root: \"poly (char_poly A) ev = 0\""], ["proof (prove)\nusing this:\n  ev \\<in> set as\n\ngoal (1 subgoal):\n 1. poly (char_poly A) ev = 0", "unfolding cA"], ["proof (prove)\nusing this:\n  ev \\<in> set as\n\ngoal (1 subgoal):\n 1. poly (\\<Prod>a\\<leftarrow>as. [:- a, 1:]) ev = 0", "by (rule linear_poly_root)"], ["proof (state)\nthis:\n  poly (char_poly A) ev = 0\n\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> set as \\<Longrightarrow> cmod a \\<le> 1\n 2. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "from le_1[OF root]"], ["proof (chain)\npicking this:\n  cmod ev \\<le> 1", "show \"norm ev \\<le> 1\""], ["proof (prove)\nusing this:\n  cmod ev \\<le> 1\n\ngoal (1 subgoal):\n 1. cmod ev \\<le> 1", "."], ["proof (state)\nthis:\n  cmod ev \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "let ?k = \"length (filter ((=) ev) as)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "have len: \"length (filter ((=) (- ev)) (map uminus as)) = length (filter ((=) ev) as)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (filter ((=) (- ev)) (map uminus as)) =\n    length (filter ((=) ev) as)", "by (induct as, auto)"], ["proof (state)\nthis:\n  length (filter ((=) (- ev)) (map uminus as)) = length (filter ((=) ev) as)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "have prod: \"(\\<Prod>a\\<leftarrow>map uminus as. [:a, 1:]) = (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>a\\<leftarrow>map uminus as. [:a, 1:]) =\n    (\\<Prod>a\\<leftarrow>as. [:- a, 1:])", "by (induct as, auto)"], ["proof (state)\nthis:\n  (\\<Prod>a\\<leftarrow>map uminus as. [:a, 1:]) =\n  (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "have dvd: \"[:- ev, 1:] ^ ?k dvd char_poly A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- ev, 1:] ^ length (filter ((=) ev) as) dvd char_poly A", "unfolding cA"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- ev, 1:] ^ length (filter ((=) ev) as) dvd\n    (\\<Prod>a\\<leftarrow>as. [:- a, 1:])", "using \n      poly_linear_exp_linear_factors_rev[of \"- ev\" \"map uminus as\"]"], ["proof (prove)\nusing this:\n  [:- ev, 1:] ^ length (filter ((=) (- ev)) (map uminus as)) dvd\n  (\\<Prod>a\\<leftarrow>map uminus as. [:a, 1:])\n\ngoal (1 subgoal):\n 1. [:- ev, 1:] ^ length (filter ((=) ev) as) dvd\n    (\\<Prod>a\\<leftarrow>as. [:- a, 1:])", "unfolding len prod"], ["proof (prove)\nusing this:\n  [:- ev, 1:] ^ length (filter ((=) ev) as) dvd\n  (\\<Prod>a\\<leftarrow>as. [:- a, 1:])\n\ngoal (1 subgoal):\n 1. [:- ev, 1:] ^ length (filter ((=) ev) as) dvd\n    (\\<Prod>a\\<leftarrow>as. [:- a, 1:])", "."], ["proof (state)\nthis:\n  [:- ev, 1:] ^ length (filter ((=) ev) as) dvd char_poly A\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "from \\<open>ev \\<in> set as\\<close> deg lenn"], ["proof (chain)\npicking this:\n  ev \\<in> set as\n  degree (char_poly A) = n\n  length as = n", "have \"degree (char_poly A) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ev \\<in> set as\n  degree (char_poly A) = n\n  length as = n\n\ngoal (1 subgoal):\n 1. degree (char_poly A) \\<noteq> 0", "by (cases as, auto)"], ["proof (state)\nthis:\n  degree (char_poly A) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "hence \"char_poly A \\<noteq> 0\""], ["proof (prove)\nusing this:\n  degree (char_poly A) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. char_poly A \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  char_poly A \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "from order_max[OF dvd this]"], ["proof (chain)\npicking this:\n  length (filter ((=) ev) as) \\<le> order ev (char_poly A)", "have k: \"?k \\<le> Polynomial.order ev (char_poly A)\""], ["proof (prove)\nusing this:\n  length (filter ((=) ev) as) \\<le> order ev (char_poly A)\n\ngoal (1 subgoal):\n 1. length (filter ((=) ev) as) \\<le> order ev (char_poly A)", "."], ["proof (state)\nthis:\n  length (filter ((=) ev) as) \\<le> order ev (char_poly A)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "assume \"norm ev = 1\""], ["proof (state)\nthis:\n  cmod ev = 1\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>a \\<in> set as; cmod a = 1\\<rbrakk>\n       \\<Longrightarrow> length (filter ((=) a) as) \\<le> d", "from eq_1[OF root this] k"], ["proof (chain)\npicking this:\n  order ev (char_poly A) \\<le> d\n  length (filter ((=) ev) as) \\<le> order ev (char_poly A)", "show \"?k \\<le> d\""], ["proof (prove)\nusing this:\n  order ev (char_poly A) \\<le> d\n  length (filter ((=) ev) as) \\<le> order ev (char_poly A)\n\ngoal (1 subgoal):\n 1. length (filter ((=) ev) as) \\<le> d", "by simp"], ["proof (state)\nthis:\n  length (filter ((=) ev) as) \\<le> d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>c1 c2.\n     \\<forall>k. norm_bound (A ^\\<^sub>m k) (c1 + c2 * real k ^ (d - 1))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}