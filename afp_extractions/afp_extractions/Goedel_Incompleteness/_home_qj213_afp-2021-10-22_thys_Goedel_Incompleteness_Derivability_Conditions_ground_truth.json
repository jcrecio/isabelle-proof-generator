{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness/Derivability_Conditions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness", "problem_names": ["lemma PP[simp]: \"\\<And>t. t \\<in> trm \\<Longrightarrow> PP t \\<in> fmla\"", "lemma Fvars_PP[simp]: \"\\<And>t. t \\<in> trm \\<Longrightarrow> Fvars (PP t) = FvarsT t\"", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PP (Var yy)) n yy = PP n\"\n\"n \\<in> num \\<Longrightarrow> subst (PP (Var xx)) n xx = PP n\"", "lemma HBL1_PP:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv \\<phi> \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>)\"", "lemma P[simp,intro!]: \"P \\<in> fmla\" and Fvars_P[simp]: \"Fvars P = {xx}\"", "lemma HBL1:\nassumes \\<phi>: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and p\\<phi>: \"prv \\<phi>\"\nshows \"bprv (subst P \\<langle>\\<phi>\\<rangle> xx)\"", "lemma not_prv_prv_neg_PPf:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and p: \"\\<not> prv \\<phi>\" and n[simp]: \"n \\<in> num\"\nshows \"bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\"", "lemma consistent_not_prv_not_prv_PPf:\nassumes c: consistent\nand 0[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"\\<not> prv \\<phi>\" \"n \\<in> num\"\nshows \"\\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"", "lemma PP_PPf:\nassumes \"\\<phi> \\<in> fmla\"\nshows \"wrepr.PP \\<langle>\\<phi>\\<rangle> = exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)\"", "lemma \\<omega>consistentStd1_HBL1_rev:\nassumes oc: \"B.\\<omega>consistentStd1\"\nand \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iPP: \"bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\"", "lemma HBL2_imp:\n \"\\<And>\\<phi> \\<chi>. \\<phi> \\<in> fmla \\<Longrightarrow> \\<chi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> Fvars \\<chi> = {} \\<Longrightarrow>\n  bprv (imp (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>) (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>)))\"", "lemma HBL2_imp2:\nassumes \"\\<phi> \\<in> fmla\" and \"\\<chi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"Fvars \\<chi> = {}\"\nassumes \"bprv (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>)\"\nshows \"bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>))\""], "translations": [["", "lemma PP[simp]: \"\\<And>t. t \\<in> trm \\<Longrightarrow> PP t \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> trm \\<Longrightarrow> PP t \\<in> fmla", "unfolding PP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> trm \\<Longrightarrow> subst P t xx \\<in> fmla", "by auto"], ["", "lemma Fvars_PP[simp]: \"\\<And>t. t \\<in> trm \\<Longrightarrow> Fvars (PP t) = FvarsT t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> trm \\<Longrightarrow> Fvars (PP t) = FvarsT t", "unfolding PP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> trm \\<Longrightarrow> Fvars (subst P t xx) = FvarsT t", "by auto"], ["", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PP (Var yy)) n yy = PP n\"\n\"n \\<in> num \\<Longrightarrow> subst (PP (Var xx)) n xx = PP n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n \\<in> num \\<Longrightarrow> subst (PP (Var yy)) n yy = PP n) &&&\n    (n \\<in> num \\<Longrightarrow> subst (PP (Var xx)) n xx = PP n)", "unfolding PP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (n \\<in> num \\<Longrightarrow>\n     subst (subst P (Var yy) xx) n yy = subst P n xx) &&&\n    (n \\<in> num \\<Longrightarrow>\n     subst (subst P (Var xx) xx) n xx = subst P n xx)", "by auto"], ["", "lemma HBL1_PP:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv \\<phi> \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}; prv \\<phi>\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>)", "using HBL1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}; prv \\<phi>\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>)", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}; prv \\<phi>\\<rbrakk>\n    \\<Longrightarrow> bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "by auto"], ["", "end \\<comment> \\<open>context @{locale HBL1}\\<close>"], ["", "section \\<open>Connections between Proof Representability,\nFirst Derivability Condition, and Its Converse\\<close>"], ["", "context CleanRepr_Proofs\nbegin"], ["", "text \\<open>Defining @{term P}, the internal notion of provability,\nfrom @{term Pf} (in its predicate form @{term PPf}), the internal notion of \"proof-of\".\nNB: In the technical sense of the term \"represents\", we have that\n@{term Pf} represents @{term pprv}, whereas @{term P} will not represent @{term prv}, but satisfy a weaker\ncondition (weaker than weak representability), namely HBL1.\\<close>"], ["", "subsection \\<open>HBL1 from \"proof-of\" representability\\<close>"], ["", "definition P :: \"'fmla\" where \"P \\<equiv> exi yy (PPf (Var yy) (Var xx))\""], ["", "lemma P[simp,intro!]: \"P \\<in> fmla\" and Fvars_P[simp]: \"Fvars P = {xx}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<in> fmla &&& Fvars P = {xx}", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exi yy (PPf (Var yy) (Var xx)) \\<in> fmla &&&\n    Fvars (exi yy (PPf (Var yy) (Var xx))) = {xx}", "by (auto simp: PPf_def2)"], ["", "text \\<open>We infer HBL1 from Pf representing prv:\\<close>"], ["", "lemma HBL1:\nassumes \\<phi>: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and p\\<phi>: \"prv \\<phi>\"\nshows \"bprv (subst P \\<langle>\\<phi>\\<rangle> xx)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "obtain \"prf\" where pf: \"prf \\<in> proof\" and \"prfOf prf \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>prf.\n        \\<lbrakk>prf \\<in> proof; prfOf prf \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prv_prfOf assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi> =\n                    (\\<exists>prf\\<in>proof. prfOf prf ?\\<phi>)\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>prf.\n        \\<lbrakk>prf \\<in> proof; prfOf prf \\<phi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  prf \\<in> proof\n  prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "hence 0: \"bprv (PPf (encPf prf) (enc \\<phi>))\""], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "using prfOf_PPf \\<phi>"], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  prfOf prf \\<phi>\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n\ngoal (1 subgoal):\n 1. bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "have 1: \"subst (subst Pf (encPf prf) yy) \\<langle>\\<phi>\\<rangle> xx = subst (subst Pf \\<langle>\\<phi>\\<rangle> xx) (substT (encPf prf) \\<langle>\\<phi>\\<rangle> xx) yy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst (subst Pf (encPf prf) yy) \\<langle>\\<phi>\\<rangle> xx =\n    subst (subst Pf \\<langle>\\<phi>\\<rangle> xx)\n     (substT (encPf prf) \\<langle>\\<phi>\\<rangle> xx) yy", "using assms pf"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv \\<phi>\n  prf \\<in> proof\n\ngoal (1 subgoal):\n 1. subst (subst Pf (encPf prf) yy) \\<langle>\\<phi>\\<rangle> xx =\n    subst (subst Pf \\<langle>\\<phi>\\<rangle> xx)\n     (substT (encPf prf) \\<langle>\\<phi>\\<rangle> xx) yy", "by (intro subst_compose_diff) auto"], ["proof (state)\nthis:\n  subst (subst Pf (encPf prf) yy) \\<langle>\\<phi>\\<rangle> xx =\n  subst (subst Pf \\<langle>\\<phi>\\<rangle> xx)\n   (substT (encPf prf) \\<langle>\\<phi>\\<rangle> xx) yy\n\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "using 0"], ["proof (prove)\nusing this:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>\\<rangle> xx)", "unfolding P_def"], ["proof (prove)\nusing this:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv\n     (subst (exi yy (PPf (Var yy) (Var xx))) \\<langle>\\<phi>\\<rangle> xx)", "using assms"], ["proof (prove)\nusing this:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv \\<phi>\n\ngoal (1 subgoal):\n 1. bprv\n     (subst (exi yy (PPf (Var yy) (Var xx))) \\<langle>\\<phi>\\<rangle> xx)", "by (auto simp: PPf_def2 1 pf intro!: B.prv_exiI[of _ _ \"encPf prf\"])"], ["proof (state)\nthis:\n  bprv (subst P \\<langle>\\<phi>\\<rangle> xx)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This is used in several places, including for the hard half of\nG?del's First and the truth of G?del formulas (and also for the Rosser variants\nof these).\\<close>"], ["", "lemma not_prv_prv_neg_PPf:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and p: \"\\<not> prv \\<phi>\" and n[simp]: \"n \\<in> num\"\nshows \"bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "have \"\\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>", "using prv_prfOf p"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi> =\n                    (\\<exists>prf\\<in>proof. prfOf prf ?\\<phi>)\n  \\<not> prv \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>", "by auto"], ["proof (state)\nthis:\n  \\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "hence \"\\<forall>prf\\<in>proof. bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>prf\\<in>proof.\n       bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "using not_prfOf_PPf"], ["proof (prove)\nusing this:\n  \\<forall>prf\\<in>proof. \\<not> prfOf prf \\<phi>\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   \\<not> prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>prf\\<in>proof.\n       bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<forall>prf\\<in>proof.\n     bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>prf\\<in>proof.\n     bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using not_prfOf_PPf"], ["proof (prove)\nusing this:\n  \\<forall>prf\\<in>proof.\n     bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   \\<not> prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using Clean_PPf_encPf"], ["proof (prove)\nusing this:\n  \\<forall>prf\\<in>proof.\n     bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   \\<not> prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; ?p \\<in> num;\n   ?p \\<notin> encPf ` proof\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?p \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by (cases \"n \\<in> encPf ` proof\") auto"], ["proof (state)\nthis:\n  bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma consistent_not_prv_not_prv_PPf:\nassumes c: consistent\nand 0[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"\\<not> prv \\<phi>\" \"n \\<in> num\"\nshows \"\\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using not_prv_prv_neg_PPf[OF 0] c[THEN dwf_dwfd.consistent_B_consistent]"], ["proof (prove)\nusing this:\n  bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  B.consistent\n\ngoal (1 subgoal):\n 1. \\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "unfolding B.consistent_def3"], ["proof (prove)\nusing this:\n  bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  \\<forall>\\<phi>\\<in>fmla. \\<not> (bprv \\<phi> \\<and> bprv (neg \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["", "end \\<comment> \\<open>context @{locale CleanRepr_Proofs}\\<close>"], ["", "text \\<open>The inference of HBL1 from \"proof-of\" representability, in locale form:\\<close>"], ["", "sublocale CleanRepr_Proofs < wrepr: HBL1\n  where P = P"], ["proof (prove)\ngoal (1 subgoal):\n 1. HBL1 var trm fmla Var FvarsT substT Fvars subst num eql cnj imp all exi\n     prv bprv enc P", "using HBL1"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. HBL1 var trm fmla Var FvarsT substT Fvars subst num eql cnj imp all exi\n     prv bprv enc P", "by unfold_locales auto"], ["", "subsection \\<open>Sufficient condition for the converse of HBL1\\<close>"], ["", "context CleanRepr_Proofs\nbegin"], ["", "lemma PP_PPf:\nassumes \"\\<phi> \\<in> fmla\"\nshows \"wrepr.PP \\<langle>\\<phi>\\<rangle> = exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wrepr.PP \\<langle>\\<phi>\\<rangle> =\n    exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)", "unfolding wrepr.PP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst P \\<langle>\\<phi>\\<rangle> xx =\n    exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)", "using assms"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n\ngoal (1 subgoal):\n 1. subst P \\<langle>\\<phi>\\<rangle> xx =\n    exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)", "by (auto simp: PPf_def2 P_def)"], ["", "text \\<open>The converse of HLB1 condition follows from (the standard notion of)\n$\\omega$-consistency for @{term bprv} and strong representability of proofs:\\<close>"], ["", "lemma \\<omega>consistentStd1_HBL1_rev:\nassumes oc: \"B.\\<omega>consistentStd1\"\nand \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iPP: \"bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prv \\<phi>", "have 0: \"bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using iPP"], ["proof (prove)\nusing this:\n  bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (simp add: PP_PPf)"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "{"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "assume \"\\<not> prv \\<phi>\""], ["proof (state)\nthis:\n  \\<not> prv \\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "hence \"\\<forall>n \\<in> num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<not> prv \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using not_prv_prv_neg_PPf"], ["proof (prove)\nusing this:\n  \\<not> prv \\<phi>\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; \\<not> prv ?\\<phi>;\n   ?n \\<in> num\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "hence \"\\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using oc"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  B.\\<omega>consistentStd1\n\ngoal (1 subgoal):\n 1. \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "unfolding B.\\<omega>consistentStd1_def"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  \\<forall>\\<phi>\\<in>fmla.\n     \\<forall>x\\<in>var.\n        Fvars \\<phi> = {x} \\<longrightarrow>\n        (\\<forall>n\\<in>num.\n            bprv (neg (subst \\<phi> n x))) \\<longrightarrow>\n        \\<not> bprv (exi x \\<phi>)\n\ngoal (1 subgoal):\n 1. \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using \\<phi>"], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  \\<forall>\\<phi>\\<in>fmla.\n     \\<forall>x\\<in>var.\n        Fvars \\<phi> = {x} \\<longrightarrow>\n        (\\<forall>n\\<in>num.\n            bprv (neg (subst \\<phi> n x))) \\<longrightarrow>\n        \\<not> bprv (exi x \\<phi>)\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n\ngoal (1 subgoal):\n 1. \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "hence False"], ["proof (prove)\nusing this:\n  \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. False", "using 0"], ["proof (prove)\nusing this:\n  \\<not> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "}"], ["proof (state)\nthis:\n  \\<not> prv \\<phi> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> prv \\<phi> \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by auto"], ["proof (state)\nthis:\n  prv \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "end \\<comment> \\<open>context @{locale CleanRepr_Proofs}\\<close>"], ["", "section \\<open>Second and Third Derivability Conditions\\<close>"], ["", "text \\<open>These are only needed for G?del's Second.\\<close>"], ["", "locale HBL1_2_3 =\nHBL1\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\n  enc\n  P\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand num\nand eql cnj imp all exi\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand P\n+\nassumes\nHBL2: \"\\<And>\\<phi> \\<chi>. \\<phi> \\<in> fmla \\<Longrightarrow> \\<chi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> Fvars \\<chi> = {} \\<Longrightarrow>\n  bprv (imp (cnj (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>))\n           (PP \\<langle>\\<chi>\\<rangle>))\"\nand\nHBL3: \"\\<And>\\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>PP \\<langle>\\<phi>\\<rangle>\\<rangle>))\"\nbegin"], ["", "text \\<open>The implicational form of HBL2:\\<close>"], ["", "lemma HBL2_imp:\n \"\\<And>\\<phi> \\<chi>. \\<phi> \\<in> fmla \\<Longrightarrow> \\<chi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> Fvars \\<chi> = {} \\<Longrightarrow>\n  bprv (imp (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>) (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; \\<chi> \\<in> fmla; Fvars \\<phi> = {};\n        Fvars \\<chi> = {}\\<rbrakk>\n       \\<Longrightarrow> bprv\n                          (imp (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>)\n                            (imp (PP \\<langle>\\<phi>\\<rangle>)\n                              (PP \\<langle>\\<chi>\\<rangle>)))", "using HBL2"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; ?\\<chi> \\<in> fmla; Fvars ?\\<phi> = {};\n   Fvars ?\\<chi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (imp (cnj (PP \\<langle>?\\<phi>\\<rangle>)\n                            (PP \\<langle>imp ?\\<phi> ?\\<chi>\\<rangle>))\n                       (PP \\<langle>?\\<chi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi> \\<chi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; \\<chi> \\<in> fmla; Fvars \\<phi> = {};\n        Fvars \\<chi> = {}\\<rbrakk>\n       \\<Longrightarrow> bprv\n                          (imp (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>)\n                            (imp (PP \\<langle>\\<phi>\\<rangle>)\n                              (PP \\<langle>\\<chi>\\<rangle>)))", "by (simp add: B.prv_cnj_imp B.prv_imp_com)"], ["", "text \\<open>... and its weaker, \"detached\" version:\\<close>"], ["", "lemma HBL2_imp2:\nassumes \"\\<phi> \\<in> fmla\" and \"\\<chi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"Fvars \\<chi> = {}\"\nassumes \"bprv (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>)\"\nshows \"bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>))", "using assms"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  \\<chi> \\<in> fmla\n  Fvars \\<phi> = {}\n  Fvars \\<chi> = {}\n  bprv (PP \\<langle>imp \\<phi> \\<chi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (PP \\<langle>\\<chi>\\<rangle>))", "by (meson HBL2_imp PP enc imp num B.prv_imp_mp subsetCE)"], ["", "end \\<comment> \\<open>context @{locale HBL1_2_3}\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}