{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness/Rosser_Formula.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness", "problem_names": ["lemma R[simp,intro!]: \"R \\<in> fmla\"", "lemma RR_def2:\n  \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> RR t1 t2 = subst (subst R t1 yy) t2 xx\"", "lemma Fvars_R[simp]: \"Fvars R = {xx,yy}\"", "lemma [simp]: \"Fvars (RR (Var yy) (Var xx)) = {yy,xx}\"", "lemma P'[simp,intro!]: \"P' \\<in> fmla\"", "lemma Fvars_P'[simp]: \"Fvars P' = {xx}\"", "lemma PP'[simp,intro!]: \"t \\<in> trm \\<Longrightarrow> PP' t \\<in> fmla\"", "lemma RR[simp,intro]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> RR t1 t2 \\<in> fmla\"", "lemma RR_simps[simp]:\n   \"n \\<in> num \\<Longrightarrow> subst (RR (Var yy) (Var xx)) n xx = RR (Var yy) n\"\n   \"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (RR (Var yy) m) n yy = RR n m\"", "lemma \\<phi>R[simp,intro!]: \"\\<phi>R \\<in> fmla\" and Fvars_\\<phi>R[simp]: \"Fvars \\<phi>R = {}\"", "lemma bprv_\\<phi>R_eqv:\n  \"bprv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))\"", "lemma bprv_imp_\\<phi>R:\n  \"bprv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)\"", "lemma prv_\\<phi>R_eqv:\n  \"prv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))\"", "lemma prv_imp_\\<phi>R:\n  \"prv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)\""], "translations": [["", "lemma R[simp,intro!]: \"R \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R \\<in> fmla", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. all zz\n     (imp (LLq (Var zz) (Var yy))\n       (all xx'\n         (imp (NN (Var xx) (Var xx')) (neg (PPf (Var zz) (Var xx'))))))\n    \\<in> fmla", "by auto"], ["", "lemma RR_def2:\n  \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> RR t1 t2 = subst (subst R t1 yy) t2 xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> RR t1 t2 = subst (subst R t1 yy) t2 xx", "unfolding RR_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst R [(t1, yy), (t2, xx)] =\n                      subst (subst R t1 yy) t2 xx", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "definition P' where \"P' = exi yy (cnj (PPf (Var yy) (Var xx)) (RR (Var yy) (Var xx)))\""], ["", "definition PP' where \"PP' t = subst P' t xx\""], ["", "lemma Fvars_R[simp]: \"Fvars R = {xx,yy}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars R = {xx, yy}", "unfolding R_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars\n     (all zz\n       (imp (LLq (Var zz) (Var yy))\n         (all xx'\n           (imp (NN (Var xx) (Var xx')) (neg (PPf (Var zz) (Var xx'))))))) =\n    {xx, yy}", "by auto"], ["", "lemma [simp]: \"Fvars (RR (Var yy) (Var xx)) = {yy,xx}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (RR (Var yy) (Var xx)) = {yy, xx}", "by (auto simp: RR_def2)"], ["", "lemma P'[simp,intro!]: \"P' \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<in> fmla", "unfolding P'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. exi yy (cnj (PPf (Var yy) (Var xx)) (RR (Var yy) (Var xx))) \\<in> fmla", "by (auto simp: PPf_def2 RR_def2)"], ["", "lemma Fvars_P'[simp]: \"Fvars P' = {xx}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars P' = {xx}", "unfolding P'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (exi yy (cnj (PPf (Var yy) (Var xx)) (RR (Var yy) (Var xx)))) =\n    {xx}", "by (auto simp: PPf_def2 RR_def2)"], ["", "lemma PP'[simp,intro!]: \"t \\<in> trm \\<Longrightarrow> PP' t \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> trm \\<Longrightarrow> PP' t \\<in> fmla", "unfolding PP'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> trm \\<Longrightarrow> subst P' t xx \\<in> fmla", "by auto"], ["", "lemma RR[simp,intro]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> RR t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> RR t1 t2 \\<in> fmla", "by (auto simp: RR_def)"], ["", "lemma RR_simps[simp]:\n   \"n \\<in> num \\<Longrightarrow> subst (RR (Var yy) (Var xx)) n xx = RR (Var yy) n\"\n   \"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (RR (Var yy) m) n yy = RR n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (n \\<in> num \\<Longrightarrow>\n     subst (RR (Var yy) (Var xx)) n xx = RR (Var yy) n) &&&\n    (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (RR (Var yy) m) n yy = RR n m)", "by (simp add: RR_def2 subst2_fresh_switch)+"], ["", "text \\<open>The Rosser modification of the G?del formula\\<close>"], ["", "definition \\<phi>R :: 'fmla where \"\\<phi>R \\<equiv> diag (neg P')\""], ["", "lemma \\<phi>R[simp,intro!]: \"\\<phi>R \\<in> fmla\" and Fvars_\\<phi>R[simp]: \"Fvars \\<phi>R = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi>R \\<in> fmla &&& Fvars \\<phi>R = {}", "unfolding \\<phi>R_def wrepr.PP_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. diag (neg P') \\<in> fmla &&& Fvars (diag (neg P')) = {}", "by auto"], ["", "lemma bprv_\\<phi>R_eqv:\n  \"bprv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))", "unfolding \\<phi>R_def PP'_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (eqv (diag (neg P'))\n       (neg (subst P' \\<langle>diag (neg P')\\<rangle> xx)))", "using bprv_diag_eqv[of \"neg P'\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>neg P' \\<in> fmla; Fvars (neg P') = {xx}\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (eqv (diag (neg P'))\n                       (subst (neg P') \\<langle>diag (neg P')\\<rangle> xx))\n\ngoal (1 subgoal):\n 1. bprv\n     (eqv (diag (neg P'))\n       (neg (subst P' \\<langle>diag (neg P')\\<rangle> xx)))", "by simp"], ["", "lemma bprv_imp_\\<phi>R:\n  \"bprv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)", "by (rule B.prv_imp_eqvER) (auto intro: bprv_\\<phi>R_eqv)"], ["", "lemma prv_\\<phi>R_eqv:\n  \"prv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))", "using dwf_dwfd.d_dwf.bprv_prv'[OF _ bprv_\\<phi>R_eqv, simplified]"], ["proof (prove)\nusing this:\n  prv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv (eqv \\<phi>R (neg (PP' \\<langle>\\<phi>R\\<rangle>)))", "."], ["", "lemma prv_imp_\\<phi>R:\n  \"prv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv (imp (neg (PP' \\<langle>\\<phi>R\\<rangle>)) \\<phi>R)", "by (rule prv_imp_eqvER) (auto intro: prv_\\<phi>R_eqv)"], ["", "end \\<comment> \\<open>context @{locale Rosser_Form}\\<close>"], ["", "sublocale Rosser_Form_Proofs < Rosser_Form where P = P"], ["proof (prove)\ngoal (1 subgoal):\n 1. Rosser_Form var trm fmla Var FvarsT substT Fvars subst num eql cnj imp\n     all exi fls prv bprv Lq dsj enc N S P", "by standard"], ["", "sublocale Rosser_Form_Proofs < Goedel_Form where P = P"], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form var trm fmla Var num FvarsT substT Fvars subst eql cnj imp\n     all exi fls prv bprv enc S P", "by standard"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}