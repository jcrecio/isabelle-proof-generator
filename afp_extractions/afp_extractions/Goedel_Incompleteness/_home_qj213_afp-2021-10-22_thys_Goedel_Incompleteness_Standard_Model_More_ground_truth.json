{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness/Standard_Model_More.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness", "problem_names": ["lemmas prfOf_iff_PPf = B_consistent_prfOf_iff_PPf[OF B.consistent]", "lemma isTrue_prv_PPf_prf_or_neg:\n\"prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n    bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<or> bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\"", "lemma isTrue_PPf_Implies_bprv_PPf:\n\"prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n   isTrue (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\"", "lemma isTrue_implies_bprv_PPf:\nassumes [simp]: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iT: \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"", "lemma isTrue_iff_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"", "lemma TIP:\nassumes \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iPP: \"isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\"", "lemmas HBL1_rev = \\<omega>consistentStd1_HBL1_rev[OF B.\\<omega>consistentStd1]", "lemma TIP_implies_HBL1_rev:\nassumes TIP: \"\\<forall>\\<phi>. \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<and> isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> prv \\<phi>\"\nshows \"\\<forall>\\<phi>. \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<and> bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> prv \\<phi>\"", "lemma PP_deff: \"PP t = subst P t xx\"", "lemma PP_PPf_eqv:\n  \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (eqv (PP \\<langle>\\<phi>\\<rangle>) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\"", "lemma PPf[simp,intro!]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> PPf t1 t2 \\<in> fmla\"", "lemma PPf_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n  PPf t1 t2 = subst (subst Pf t1 yy) t2 xx\"", "lemma Fvars_PPf[simp]:\n  \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2\"", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n\"\n\"m \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n\"", "lemma PP_PPf:\nassumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" shows \"bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\"", "lemma isTrue_implies_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"", "lemma isTrue_iff_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"", "lemma prv_exi_PPf_iff_isTrue:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma isTrue_exi_iff:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\" (is \"?L \\<longleftrightarrow> ?R\")", "lemma prv_prfOf:\nassumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"prv \\<phi> \\<longleftrightarrow> (\\<exists>n\\<in>num. prfOf n \\<phi>)\"", "lemma prfOf_prv_Pf:\nassumes \"n \\<in> num\" and \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"prfOf n \\<phi>\"\nshows \"bprv (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)])\"", "lemma isTrue_exi_iff_PP:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"isTrue (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\"", "lemma bprv_compl_isTrue_PP_enc:\nassumes 1: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and 2: \"isTrue (PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (PP \\<langle>\\<phi>\\<rangle>)\"", "lemma TIP:\nassumes 1: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and 2: \"isTrue (PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\"", "lemma isTrue_implies_prv_neg_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\"", "lemma isTrue_iff_prv_neg_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\"", "lemma prv_PPf_decide:\nassumes [simp]: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand np: \"\\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\"", "lemma not_prfOf_prv_neg_Pf:\nassumes n\\<phi>: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"\\<not> prfOf n \\<phi>\"\nshows \"bprv (B.neg (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))\"", "lemma HBL1_rev:\n  assumes f: \"\\<phi> \\<in> fmla\" and fv: \"Fvars \\<phi> = {}\" and bp: \"bprv (PP \\<langle>\\<phi>\\<rangle>)\"\n  shows \"prv \\<phi>\"", "lemma HBL1_iff: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\"", "lemma HBL1_iff_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\"", "lemma classical_PP: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (B.neg (B.neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\""], "translations": [["", "lemmas prfOf_iff_PPf = B_consistent_prfOf_iff_PPf[OF B.consistent]"], ["", "text \\<open>The provability predicate is decided by basic provability on encodings:\\<close>"], ["", "lemma isTrue_prv_PPf_prf_or_neg:\n\"prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n    bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<or> bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prf \\<in> proof; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<or>\n                      bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "using not_prfOf_PPf prfOf_PPf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   \\<not> prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   prfOf ?prf ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>prf \\<in> proof; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<or>\n                      bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "by blast"], ["", "text \\<open>... hence that predicate is complete w.r.t. truth:\\<close>"], ["", "lemma isTrue_PPf_Implies_bprv_PPf:\n\"prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n   isTrue (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>prf \\<in> proof; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     isTrue (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n    \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "by (metis FvarsT_num Fvars_PPf Fvars_fls PPf\nUn_empty empty_iff enc encPf fls in_num isTrue_prv_PPf_prf_or_neg\nneg_def B.not_isTrue_fls B.prv_imp_implies_isTrue)"], ["", "text \\<open>... and thanks cleanness we can replace encoded proofs\nwith arbitrary numerals in the completeness property:\\<close>"], ["", "lemma isTrue_implies_bprv_PPf:\nassumes [simp]: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iT: \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "proof(cases \"n \\<in> encPf ` proof\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<in> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n 2. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "case True"], ["proof (state)\nthis:\n  n \\<in> encPf ` proof\n\ngoal (2 subgoals):\n 1. n \\<in> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n 2. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<in> encPf ` proof\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using iT isTrue_PPf_Implies_bprv_PPf"], ["proof (prove)\nusing this:\n  n \\<in> encPf ` proof\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "case False"], ["proof (state)\nthis:\n  n \\<notin> encPf ` proof\n\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "hence \"bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  n \\<notin> encPf ` proof\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by (simp add: Clean_PPf_encPf)"], ["proof (state)\nthis:\n  bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "hence \"isTrue (neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by (intro B.sound_isTrue) auto"], ["proof (state)\nthis:\n  isTrue (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "hence False"], ["proof (prove)\nusing this:\n  isTrue (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. False", "using iT"], ["proof (prove)\nusing this:\n  isTrue (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. False", "by (intro B.isTrue_neg_excl) auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. n \\<notin> encPf ` proof \\<Longrightarrow>\n    bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>... in fact, by @{locale Minimal_Truth_Soundness} we even have an iff:\\<close>"], ["", "lemma isTrue_iff_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using isTrue_implies_bprv_PPf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using exists_no_Fvars B.not_isTrue_fls B.sound_isTrue"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n  \\<exists>\\<phi>.\n     \\<phi> \\<in> fmla \\<and> prv \\<phi> \\<and> Fvars \\<phi> = {}\n  \\<not> isTrue fls\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; bprv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> isTrue ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["", "text \\<open>Truth of the provability representation implies provability (TIP):\\<close>"], ["", "lemma TIP:\nassumes \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand iPP: \"isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prv \\<phi>", "have \"isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using iPP"], ["proof (prove)\nusing this:\n  isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "unfolding PP_PPf[OF \\<phi>(1)]"], ["proof (prove)\nusing this:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "."], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "from B.isTrue_exi[OF _ _ _ this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>yy \\<in> var; PPf (Var yy) \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) = {yy}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<in>num.\n                       isTrue\n                        (subst (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) n yy)", "obtain n where n[simp]: \"n \\<in> num\" and \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>yy \\<in> var; PPf (Var yy) \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) = {yy}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<in>num.\n                       isTrue\n                        (subst (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) n yy)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "hence pP: \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using isTrue_implies_bprv_PPf"], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "hence \"\\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using B.prv_neg_excl[of \"PPf n \\<langle>\\<phi>\\<rangle>\"]"], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>PPf n \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf n \\<langle>\\<phi>\\<rangle>) = {};\n   bprv (PPf n \\<langle>\\<phi>\\<rangle>);\n   bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))", "obtain \"prf\" where \"prf\"[simp]: \"prf \\<in> proof\" and nn: \"n = encPf prf\""], ["proof (prove)\nusing this:\n  \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. (\\<And>prf.\n        \\<lbrakk>prf \\<in> proof; n = encPf prf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms n Clean_PPf_encPf \\<phi>(1)"], ["proof (prove)\nusing this:\n  \\<not> bprv (neg (PPf n \\<langle>\\<phi>\\<rangle>))\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>)\n  n \\<in> num\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; ?p \\<in> num;\n   ?p \\<notin> encPf ` proof\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?p \\<langle>?\\<phi>\\<rangle>))\n  \\<phi> \\<in> fmla\n\ngoal (1 subgoal):\n 1. (\\<And>prf.\n        \\<lbrakk>prf \\<in> proof; n = encPf prf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  prf \\<in> proof\n  n = encPf prf\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "have \"prfOf prf \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prfOf prf \\<phi>", "using pP"], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prfOf prf \\<phi>", "unfolding nn"], ["proof (prove)\nusing this:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prfOf prf \\<phi>", "using prfOf_iff_PPf"], ["proof (prove)\nusing this:\n  bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?prf \\<in> proof; ?\\<phi> \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> Fvars ?\\<phi> = {} \\<longrightarrow>\n                    prfOf ?prf ?\\<phi> =\n                    bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prfOf prf \\<phi>", "by auto"], ["proof (state)\nthis:\n  prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "thus ?thesis"], ["proof (prove)\nusing this:\n  prfOf prf \\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "using prv_prfOf"], ["proof (prove)\nusing this:\n  prfOf prf \\<phi>\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi> =\n                    (\\<exists>prf\\<in>proof. prfOf prf ?\\<phi>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by auto"], ["proof (state)\nthis:\n  prv \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The reverse HBL1 -- now without the $\\omega$-consistency assumption which holds here\nthanks to our truth-in-standard-model assumption:\\<close>"], ["", "lemmas HBL1_rev = \\<omega>consistentStd1_HBL1_rev[OF B.\\<omega>consistentStd1]"], ["", "text \\<open>Note that the above would also follow by @{locale Minimal_Truth_Soundness} from TIP:\\<close>"], ["", "lemma TIP_implies_HBL1_rev:\nassumes TIP: \"\\<forall>\\<phi>. \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<and> isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> prv \\<phi>\"\nshows \"\\<forall>\\<phi>. \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<and> bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       Fvars \\<phi> = {} \\<and>\n       bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow>\n       prv \\<phi>", "using B.sound_isTrue[of \"wrepr.PP \\<langle>_\\<rangle>\"] TIP"], ["proof (prove)\nusing this:\n  \\<lbrakk>wrepr.PP \\<langle>?uu3\\<rangle> \\<in> fmla;\n   Fvars (wrepr.PP \\<langle>?uu3\\<rangle>) = {};\n   bprv (wrepr.PP \\<langle>?uu3\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> isTrue (wrepr.PP \\<langle>?uu3\\<rangle>)\n  \\<forall>\\<phi>.\n     \\<phi> \\<in> fmla \\<and>\n     Fvars \\<phi> = {} \\<and>\n     isTrue (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow>\n     prv \\<phi>\n\ngoal (1 subgoal):\n 1. \\<forall>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       Fvars \\<phi> = {} \\<and>\n       bprv (wrepr.PP \\<langle>\\<phi>\\<rangle>) \\<longrightarrow>\n       prv \\<phi>", "by auto"], ["", "end \\<comment> \\<open>context @{locale Minimal_Truth_Soundness_Proof_Repr}\\<close>"], ["", "section \\<open>Proof recovery from $\\mathit{HBL1\\_iff}$\\<close>"], ["", "locale Minimal_Truth_Soundness_HBL1iff_Compl_Pf =\nHBL1\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\n  enc\n  P\n+\nB : Minimal_Truth_Soundness\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  bprv\n  isTrue\n+\nDeduct_with_False_Disj\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  prv\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand enc (\"\\<langle>_\\<rangle>\")\nand prv bprv\nand P\nand isTrue\n+\nfixes Pf :: 'fmla\nassumes\n\\<comment> \\<open>@{term Pf} is a formula with free variables @{term xx} @{term yy}:\\<close>\nPf[simp,intro!]: \"Pf \\<in> fmla\"\nand\nFvars_Pf[simp]: \"Fvars Pf = {yy,xx}\"\nand\n\\<comment> \\<open>@{term P} relates to @{term Pf} internally (inside basic provability)\njust like a @{term prv} and a @{term prfOf} would relate---via an existential:\\<close>\nP_Pf:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n bprv (eqv (subst P \\<langle>\\<phi>\\<rangle> xx) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\"\nassumes\n\\<comment> \\<open>We assume both $\\mathit{HBL1}$ and $\\mathit{HBL1\\_rev}$, i.e., an iff version:\\<close>\nHBL1_iff: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\"\nand\nCompl_Pf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"\nbegin"], ["", "definition PPf where \"PPf \\<equiv> \\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]\""], ["", "lemma PP_deff: \"PP t = subst P t xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PP t = subst P t xx", "using PP_def"], ["proof (prove)\nusing this:\n  PP \\<equiv> \\<lambda>t. subst P t xx\n\ngoal (1 subgoal):\n 1. PP t = subst P t xx", "by auto"], ["", "lemma PP_PPf_eqv:\n  \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (eqv (PP \\<langle>\\<phi>\\<rangle>) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (eqv (PP \\<langle>\\<phi>\\<rangle>)\n                         (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))", "using PP_deff PPf_def P_Pf"], ["proof (prove)\nusing this:\n  PP ?t = subst P ?t xx\n  PPf \\<equiv> \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n                    in bprv\n                        (eqv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n                          (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>)))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (eqv (PP \\<langle>\\<phi>\\<rangle>)\n                         (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))", "by auto"], ["", "(*  *)"], ["", "lemma PPf[simp,intro!]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> PPf t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> PPf t1 t2 \\<in> fmla", "unfolding PPf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst Pf [(t1, yy), (t2, xx)] \\<in> fmla", "by auto"], ["", "lemma PPf_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n  PPf t1 t2 = subst (subst Pf t1 yy) t2 xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> PPf t1 t2 = subst (subst Pf t1 yy) t2 xx", "unfolding PPf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst Pf [(t1, yy), (t2, xx)] =\n                      subst (subst Pf t1 yy) t2 xx", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "lemma Fvars_PPf[simp]:\n  \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2", "by (auto simp add: PPf_def2 subst2_fresh_switch)"], ["", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n\"\n\"m \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((n \\<in> num \\<Longrightarrow>\n       subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n) &&&\n      (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n       \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m)) &&&\n     (n \\<in> num \\<Longrightarrow>\n      subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)) &&&\n     (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n)) &&&\n    ((m \\<in> num \\<Longrightarrow>\n      subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')) &&&\n     (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n)) &&&\n    (n \\<in> num \\<Longrightarrow>\n     subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n) &&&\n    (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n)", "by (auto simp: PPf_def2 subst2_fresh_switch)"], ["", "(* *)"], ["", "lemma PP_PPf:\nassumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" shows \"bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>) =\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using assms PP_PPf_eqv[OF assms] B.prv_eqv_sym[OF _ _ PP_PPf_eqv[OF assms]]"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  bprv\n   (eqv (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n  \\<lbrakk>PP \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (eqv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n                       (PP \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>) =\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (auto intro!: B.prv_eqv_prv[of \"PP \\<langle>\\<phi>\\<rangle>\" \"exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)\"]\n    B.prv_eqv_prv[of \"exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)\" \"PP \\<langle>\\<phi>\\<rangle>\"])"], ["", "lemma isTrue_implies_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using Compl_Pf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n                    in isTrue\n                        (PPf ?n \\<langle>?\\<phi>\\<rangle>) \\<longrightarrow>\n                       bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by(simp add: PPf_def)"], ["", "lemma isTrue_iff_bprv_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using isTrue_implies_bprv_PPf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using exists_no_Fvars B.not_isTrue_fls B.sound_isTrue"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n  \\<exists>\\<phi>.\n     \\<phi> \\<in> fmla \\<and> prv \\<phi> \\<and> Fvars \\<phi> = {}\n  \\<not> isTrue fls\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; bprv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> isTrue ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) =\n                         bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["", "text \\<open>Preparing to instantiate this \"proof recovery\" alternative into our\nmainstream locale hierarchy, which assumes proofs.\nWe define the \"missing\" proofs to be numerals, we encode them as the identity,\nand we \"copy\" @{term prfOf} from the corresponding predicate one-level-up, @{term PPf}:\\<close>"], ["", "definition \"proof\" :: \"'trm set\" where [simp]: \"proof = num\""], ["", "definition prfOf :: \"'trm \\<Rightarrow> 'fmla \\<Rightarrow> bool\" where\n  \"prfOf n \\<phi> \\<equiv> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["", "definition encPf :: \"'trm \\<Rightarrow> 'trm\" where [simp]: \"encPf \\<equiv> id\""], ["", "(*  *)"], ["", "lemma prv_exi_PPf_iff_isTrue:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n 2. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "assume ?L"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (2 subgoals):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n 2. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "thus ?R"], ["proof (prove)\nusing this:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (intro B.sound_isTrue) auto"], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "assume ?R"], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "obtain n where n[simp]: \"n \\<in> num\" and i: \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using B.isTrue_exi[OF _ _ _ \\<open>?R\\<close>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>yy \\<in> var; PPf (Var yy) \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) = {yy}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<in>num.\n                       isTrue\n                        (subst (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) n yy)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "hence \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by (auto simp: isTrue_iff_bprv_PPf)"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "thus ?L"], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (intro B.prv_exiI[of _ _ n]) auto"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isTrue_exi_iff:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\" (is \"?L \\<longleftrightarrow> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n 2. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "assume ?L"], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (2 subgoals):\n 1. isTrue\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow>\n    \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n 2. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "thus ?R"], ["proof (prove)\nusing this:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)", "using B.isTrue_exi[OF _ _ _ \\<open>?L\\<close>]"], ["proof (prove)\nusing this:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n  \\<lbrakk>yy \\<in> var; PPf (Var yy) \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) = {yy}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<in>num.\n                       isTrue\n                        (subst (PPf (Var yy) \\<langle>\\<phi>\\<rangle>) n yy)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "assume ?R"], ["proof (state)\nthis:\n  \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "then"], ["proof (chain)\npicking this:\n  \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)", "obtain n where n[simp]: \"n \\<in> num\" and i: \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "hence \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by (auto simp: isTrue_iff_bprv_PPf)"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "hence \"bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (intro B.prv_exiI[of _ _ n]) auto"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<in>num.\n       isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "thus ?L"], ["proof (prove)\nusing this:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (intro B.sound_isTrue) auto"], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prv_prfOf:\nassumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"prv \\<phi> \\<longleftrightarrow> (\\<exists>n\\<in>num. prfOf n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"prv \\<phi> \\<longleftrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi> = bprv (PP \\<langle>\\<phi>\\<rangle>)", "using HBL1_iff[OF assms]"], ["proof (prove)\nusing this:\n  bprv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi> = bprv (PP \\<langle>\\<phi>\\<rangle>)", "by simp"], ["proof (state)\nthis:\n  prv \\<phi> = bprv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "also"], ["proof (state)\nthis:\n  prv \\<phi> = bprv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"\\<dots> \\<longleftrightarrow> bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>) =\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "unfolding PP_PPf[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", ".."], ["proof (state)\nthis:\n  bprv (PP \\<langle>\\<phi>\\<rangle>) =\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "also"], ["proof (state)\nthis:\n  bprv (PP \\<langle>\\<phi>\\<rangle>) =\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"\\<dots> \\<longleftrightarrow> isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using prv_exi_PPf_iff_isTrue[OF assms]"], ["proof (prove)\nusing this:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "."], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "also"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "using isTrue_exi_iff[OF assms]"], ["proof (prove)\nusing this:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "."], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "also"], ["proof (state)\nthis:\n  isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))", "using isTrue_iff_bprv_PPf[OF _ assms]"], ["proof (prove)\nusing this:\n  ?n \\<in> num \\<Longrightarrow>\n  isTrue (PPf ?n \\<langle>\\<phi>\\<rangle>) =\n  bprv (PPf ?n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "also"], ["proof (state)\nthis:\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>n\\<in>num. prfOf n \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. prfOf n \\<phi>)", "unfolding prfOf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>)) =\n    (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>))", ".."], ["proof (state)\nthis:\n  (\\<exists>n\\<in>num. bprv (PPf n \\<langle>\\<phi>\\<rangle>)) =\n  (\\<exists>n\\<in>num. prfOf n \\<phi>)\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "finally"], ["proof (chain)\npicking this:\n  prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "show ?thesis"], ["proof (prove)\nusing this:\n  prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)\n\ngoal (1 subgoal):\n 1. prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)", "."], ["proof (state)\nthis:\n  prv \\<phi> = (\\<exists>n\\<in>num. prfOf n \\<phi>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prfOf_prv_Pf:\nassumes \"n \\<in> num\" and \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"prfOf n \\<phi>\"\nshows \"bprv (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)])", "using assms"], ["proof (prove)\nusing this:\n  n \\<in> num\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prfOf n \\<phi>\n\ngoal (1 subgoal):\n 1. bprv (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)])", "unfolding prfOf_def"], ["proof (prove)\nusing this:\n  n \\<in> num\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)])", "by (auto simp: PPf_def2 psubst_eq_rawpsubst2)"], ["", "lemma isTrue_exi_iff_PP:\nassumes [simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows \"isTrue (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "have \"bprv (eqv (PP \\<langle>\\<phi>\\<rangle>) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (eqv (PP \\<langle>\\<phi>\\<rangle>)\n       (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))", "using PP_PPf_eqv"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (eqv (PP \\<langle>?\\<phi>\\<rangle>)\n                       (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>)))\n\ngoal (1 subgoal):\n 1. bprv\n     (eqv (PP \\<langle>\\<phi>\\<rangle>)\n       (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))", "by auto"], ["proof (state)\nthis:\n  bprv\n   (eqv (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "hence \"bprv (imp (PP \\<langle>\\<phi>\\<rangle>) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\"\n  and \"bprv (imp (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)) (PP \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  bprv\n   (eqv (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (PP \\<langle>\\<phi>\\<rangle>)\n       (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))) &&&\n    bprv\n     (imp (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n       (PP \\<langle>\\<phi>\\<rangle>))", "by (simp_all add: B.prv_imp_eqvEL B.prv_imp_eqvER)"], ["proof (state)\nthis:\n  bprv\n   (imp (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n  bprv\n   (imp (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n     (PP \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "thus ?thesis"], ["proof (prove)\nusing this:\n  bprv\n   (imp (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n  bprv\n   (imp (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n     (PP \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))", "unfolding isTrue_exi_iff[OF assms, symmetric]"], ["proof (prove)\nusing this:\n  bprv\n   (imp (PP \\<langle>\\<phi>\\<rangle>)\n     (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\n  bprv\n   (imp (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n     (PP \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n    isTrue (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by (intro iffI) (rule B.prv_imp_implies_isTrue; simp)+"], ["proof (state)\nthis:\n  isTrue (PP \\<langle>\\<phi>\\<rangle>) =\n  (\\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma bprv_compl_isTrue_PP_enc:\nassumes 1: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and 2: \"isTrue (PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (PP \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "obtain n where nn: \"n \\<in> num\" and i: \"isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using 2"], ["proof (prove)\nusing this:\n  isTrue (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding isTrue_exi_iff_PP[OF 1]"], ["proof (prove)\nusing this:\n  \\<exists>n\\<in>num. isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>n \\<in> num;\n         isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "hence \"bprv (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using i"], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "using nn assms isTrue_iff_bprv_PPf"], ["proof (prove)\nusing this:\n  n \\<in> num\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  n \\<in> num\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  isTrue (PP \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> isTrue (PPf ?n \\<langle>?\\<phi>\\<rangle>) =\n                    bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf n \\<langle>\\<phi>\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "hence \"bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "using 2 assms isTrue_exi_iff isTrue_exi_iff_PP prv_exi_PPf_iff_isTrue"], ["proof (prove)\nusing this:\n  bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n  isTrue (PP \\<langle>\\<phi>\\<rangle>)\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  isTrue (PP \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> isTrue\n                     (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>)) =\n                    (\\<exists>n\\<in>num.\n                        isTrue (PPf n \\<langle>?\\<phi>\\<rangle>))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> isTrue (PP \\<langle>?\\<phi>\\<rangle>) =\n                    (\\<exists>n\\<in>num.\n                        isTrue (PPf n \\<langle>?\\<phi>\\<rangle>))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>)) =\n                    isTrue (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "using PP_PPf 1"], ["proof (prove)\nusing this:\n  bprv (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv (PP \\<langle>?\\<phi>\\<rangle>) =\n                    bprv (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>))\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>\\<rangle>)", "by blast"], ["proof (state)\nthis:\n  bprv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma TIP:\nassumes 1: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and 2: \"isTrue (PP \\<langle>\\<phi>\\<rangle>)\"\nshows \"prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi>", "using bprv_compl_isTrue_PP_enc[OF assms] HBL1_iff assms"], ["proof (prove)\nusing this:\n  bprv (PP \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv (PP \\<langle>?\\<phi>\\<rangle>) = prv ?\\<phi>\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  isTrue (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by blast"], ["", "end \\<comment> \\<open>context @{locale Minimal_Truth_Soundness_HBL1iff_Compl_Pf}\\<close>"], ["", "locale Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf =\nMinimal_Truth_Soundness_HBL1iff_Compl_Pf\n+\nassumes\nCompl_NegPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) \\<longrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\"\nbegin"], ["", "lemma isTrue_implies_prv_neg_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) \\<Longrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\\<rbrakk>\n       \\<Longrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using Compl_NegPf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n                    in isTrue\n                        (B.neg\n                          (PPf ?n\n                            \\<langle>?\\<phi>\\<rangle>)) \\<longrightarrow>\n                       bprv (B.neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\\<rbrakk>\n       \\<Longrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by(simp add: PPf_def)"], ["", "lemma isTrue_iff_prv_neg_PPf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) \\<longleftrightarrow> bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) =\n                         bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using isTrue_implies_prv_neg_PPf"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (B.neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\\<rbrakk>\n  \\<Longrightarrow> bprv (B.neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) =\n                         bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using exists_no_Fvars B.not_isTrue_fls B.sound_isTrue"], ["proof (prove)\nusing this:\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (B.neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\\<rbrakk>\n  \\<Longrightarrow> bprv (B.neg (PPf ?n \\<langle>?\\<phi>\\<rangle>))\n  \\<exists>\\<phi>.\n     \\<phi> \\<in> fmla \\<and> prv \\<phi> \\<and> Fvars \\<phi> = {}\n  \\<not> isTrue fls\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; bprv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> isTrue ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>n \\<phi>.\n       \\<lbrakk>n \\<in> num; \\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n       \\<Longrightarrow> isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>)) =\n                         bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by auto"], ["", "lemma prv_PPf_decide:\nassumes [simp]: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nand np: \"\\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"\nshows \"bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "have \"\\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)", "using assms"], ["proof (prove)\nusing this:\n  n \\<in> num\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  \\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)", "by (auto simp: isTrue_iff_bprv_PPf)"], ["proof (state)\nthis:\n  \\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "hence \"isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "using B.isTrue_neg[of \"PPf n \\<langle>\\<phi>\\<rangle>\"]"], ["proof (prove)\nusing this:\n  \\<not> isTrue (PPf n \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>PPf n \\<langle>\\<phi>\\<rangle> \\<in> fmla;\n   Fvars (PPf n \\<langle>\\<phi>\\<rangle>) = {}\\<rbrakk>\n  \\<Longrightarrow> isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<or>\n                    isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "thus ?thesis"], ["proof (prove)\nusing this:\n  isTrue (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))", "by (auto simp: isTrue_iff_prv_neg_PPf)"], ["proof (state)\nthis:\n  bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma not_prfOf_prv_neg_Pf:\nassumes n\\<phi>: \"n \\<in> num\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"\\<not> prfOf n \\<phi>\"\nshows \"bprv (B.neg (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (B.neg (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))", "using assms prv_PPf_decide[OF n\\<phi>]"], ["proof (prove)\nusing this:\n  n \\<in> num\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  \\<not> prfOf n \\<phi>\n  \\<not> bprv (PPf n \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow>\n  bprv (B.neg (PPf n \\<langle>\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (B.neg (psubst Pf [(n, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))", "by (auto simp: prfOf_def PPf_def2 psubst_eq_rawpsubst2)"], ["", "end \\<comment> \\<open>context @{locale Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf}\\<close>"], ["", "sublocale Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf <\n   repr: CleanRepr_Proofs\n(* added label to avoid duplicated constant P, which is assumed\nin Minimal_Truth_Soundness_HBL1iff_Compl_Pf but defined in CleanRepr_Proofs\n(they are of course extensionally equal).\n*)\n  where \"proof\" = \"proof\" and prfOf = prfOf and encPf = encPf"], ["proof (prove)\ngoal (1 subgoal):\n 1. CleanRepr_Proofs var trm fmla Var FvarsT substT Fvars subst num eql cnj\n     imp all exi prv bprv enc fls dsj proof prfOf encPf Pf", "by standard (auto simp: bprv_prv prv_prfOf prfOf_prv_Pf not_prfOf_prv_neg_Pf)"], ["", "(* Lemma 6 (\"proof recovery\") from the JAR paper: *)"], ["", "sublocale Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf <\n  min_truth: Minimal_Truth_Soundness_Proof_Repr\nwhere \"proof\" = \"proof\" and prfOf = prfOf and encPf = encPf"], ["proof (prove)\ngoal (1 subgoal):\n 1. Minimal_Truth_Soundness_Proof_Repr var trm fmla Var FvarsT substT Fvars\n     subst eql cnj imp all exi fls dsj num prv bprv isTrue enc proof prfOf\n     encPf Pf", "by standard"], ["", "(* FOR THE CLASSICAL REASONING VERSION *)"], ["", "locale Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf =\nHBL1\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\n  enc\n  P\n+\nB: Minimal_Truth_Soundness\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  bprv\n  isTrue\n+\nDeduct_with_False_Disj\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  prv\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand enc (\"\\<langle>_\\<rangle>\")\nand prv bprv\nand P\nand isTrue\n+\nfixes Pf :: 'fmla\nassumes\n(* Pf is a formula with free variables xx yy  *)\nPf[simp,intro!]: \"Pf \\<in> fmla\"\nand\nFvars_Pf[simp]: \"Fvars Pf = {yy,xx}\"\nand\n(* P relates to Pf internally just like a prv and a proofOf would\nrelate: via an existential *)\nP_Pf:\n\"\\<phi> \\<in> fmla \\<Longrightarrow>\n let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n bprv (eqv (subst P \\<langle>\\<phi>\\<rangle> xx) (exi yy (PPf (Var yy) \\<langle>\\<phi>\\<rangle>)))\"\nassumes\n(* We assume, in addition to HBL1, the strong form of HBL1_rev: *)\nHBL1_rev_prv: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> prv \\<phi>\"\nand\nCompl_Pf:\n\"\\<And> n \\<phi>. n \\<in> num \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n isTrue (PPf n \\<langle>\\<phi>\\<rangle>) \\<longrightarrow> bprv (PPf n \\<langle>\\<phi>\\<rangle>)\"\nbegin"], ["", "lemma HBL1_rev:\n  assumes f: \"\\<phi> \\<in> fmla\" and fv: \"Fvars \\<phi> = {}\" and bp: \"bprv (PP \\<langle>\\<phi>\\<rangle>)\"\n  shows \"prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi>", "using assms"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  bprv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by (auto intro!: HBL1_rev_prv bprv_prv[OF _ _ bp])"], ["", "lemma HBL1_iff: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "using HBL1 HBL1_rev"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   bprv (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (subst P \\<langle>\\<phi>\\<rangle> xx) =\n                      prv \\<phi>", "by auto"], ["", "lemma HBL1_iff_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "by (intro iffI bprv_prv[OF _ _ HBL1_PP], elim HBL1_rev_prv[rotated -1]) auto"], ["", "end \\<comment> \\<open>context @{locale Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf}\\<close>"], ["", "sublocale Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf <\n  mts_prv_mts: Minimal_Truth_Soundness_HBL1iff_Compl_Pf where Pf = Pf"], ["proof (prove)\ngoal (1 subgoal):\n 1. Minimal_Truth_Soundness_HBL1iff_Compl_Pf var trm fmla Var FvarsT substT\n     Fvars subst eql cnj imp all exi fls dsj num enc prv bprv P isTrue Pf", "using P_Pf HBL1_rev HBL1_PP Compl_Pf"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<Longrightarrow>\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in bprv\n      (eqv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n        (exi yy (PPf (Var yy) \\<langle>?\\<phi>\\<rangle>)))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   bprv (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (PP \\<langle>?\\<phi>\\<rangle>)\n  \\<lbrakk>?n \\<in> num; ?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n                    in isTrue\n                        (PPf ?n \\<langle>?\\<phi>\\<rangle>) \\<longrightarrow>\n                       bprv (PPf ?n \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. Minimal_Truth_Soundness_HBL1iff_Compl_Pf var trm fmla Var FvarsT substT\n     Fvars subst eql cnj imp all exi fls dsj num enc prv bprv P isTrue Pf", "by unfold_locales auto"], ["", "locale Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical =\nMinimal_Truth_Soundness_HBL1iff_prv_Compl_Pf\n+\nassumes\n\\<comment> \\<open>NB: we don't really need to assume classical reasoning (double negation) all throughout,\nbut only for the provability predicate:\\<close>\nclassical_P: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> let PP = (\\<lambda>t. subst P t xx) in\n  prv (B.neg (B.neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\"\nbegin"], ["", "lemma classical_PP: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (B.neg (B.neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (B.neg (B.neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)", "using classical_P"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (B.neg (B.neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (B.neg (B.neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (B.neg (B.neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (B.neg (B.neg (subst P \\<langle>\\<phi>\\<rangle> xx)))\\<rbrakk>\n    \\<Longrightarrow> prv (subst P \\<langle>\\<phi>\\<rangle> xx)", "by auto"], ["", "end \\<comment> \\<open>context @{locale Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical}\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}