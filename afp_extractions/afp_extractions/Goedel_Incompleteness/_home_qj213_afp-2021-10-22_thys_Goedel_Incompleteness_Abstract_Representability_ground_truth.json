{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness/Abstract_Representability.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness", "problem_names": ["lemma NN_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\n NN t1 t2 = subst (subst N t1 xx) t2 yy\"", "lemma NN_neg:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\"", "lemma NN_unique:\n  assumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\n  shows \"bprv (all yy (all yy'\n    (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy)) (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n         (eql (Var yy) (Var yy')))))\"", "lemma NN[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> NN t1 t2 \\<in> fmla\"", "lemma Fvars_NN[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (NN t1 t2) = FvarsT t1 \\<union> FvarsT t2\"", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var yy)) n yy = NN m n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var yy')) n yy = NN m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (NN m (Var yy')) (Var yy) yy' = NN m (Var yy)\"\n\"n \\<in> num \\<Longrightarrow> subst (NN (Var xx) (Var yy)) n xx = NN n (Var yy)\"\n\"n \\<in> num \\<Longrightarrow> subst (NN (Var xx) (Var xx')) n xx = NN n (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var xx')) n zz = NN m (Var xx')\"\n\"n \\<in> num \\<Longrightarrow> subst (NN n (Var yy)) (Var xx') yy = NN n (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var xx')) n xx' = NN m n\"", "lemma NN_unique2:\nassumes [simp]:\"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows\n\"bprv (all yy\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n          (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))\"", "lemma NN_neg_unique:\nassumes [simp]:\"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows\n\"bprv (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))\" (is \"bprv ?A\")", "lemma NN_exi_cnj:\nassumes \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \\<chi>[simp]: \"\\<chi> \\<in> fmla\"\nassumes f: \"Fvars \\<chi> = {yy}\"\nshows \"bprv (eqv (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n                 (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\"\n(is \"bprv (eqv ?A ?B)\")", "lemma SS_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow>\n yy \\<notin> FvarsT t1 \\<Longrightarrow>\n SS t1 t2 = subst (subst S t1 xx) t2 yy\"", "lemma subst_implies_prv_SS:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow> bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\"", "lemma SS_unique:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow>\n bprv (all yy (all yy'\n      (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n           (eql (Var yy) (Var yy')))))\"", "lemma SS[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> SS t1 t2 \\<in> fmla\"", "lemma Fvars_SS[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2\"", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p\"\n\"m \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy)\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy)\"", "lemma SS_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow>\n yy \\<notin> FvarsT t1 \\<Longrightarrow>\n SS t1 t2 = subst (subst S t1 xx) t2 yy\"", "lemma softSubst_implies_prv_SS:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow> bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>softSubst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\"", "lemma SS_unique:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow>\n bprv (all yy (all yy'\n     (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n          (eql (Var yy) (Var yy')))))\"", "lemma SS[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> SS t1 t2 \\<in> fmla\"", "lemma Fvars_SS[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2\"", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p\"\n\"m \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy)\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy)\"", "lemma prfOf_PPf:\nassumes \"prf \\<in> proof\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"prfOf prf \\<phi>\"\nshows \"bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\"", "lemma not_prfOf_PPf:\nassumes \"prf \\<in> proof\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"\\<not> prfOf prf \\<phi>\"\nshows \"bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\"", "lemma Clean_PPf_encPf:\n  assumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"p \\<in> num\" \"p \\<notin> encPf ` proof\"\n  shows \"bprv (neg (PPf p \\<langle>\\<phi>\\<rangle>))\"", "lemma PPf[simp,intro!]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> PPf t1 t2 \\<in> fmla\"", "lemma PPf_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n  PPf t1 t2 = subst (subst Pf t1 yy) t2 xx\"", "lemma Fvars_PPf[simp]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2\"", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n\"\n\"m \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n\"", "lemma B_consistent_prfOf_iff_PPf:\n\"B.consistent \\<Longrightarrow> prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow> prfOf prf \\<phi> \\<longleftrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\"", "lemma consistent_prfOf_iff_PPf:\n\"consistent \\<Longrightarrow> prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow> prfOf prf \\<phi> \\<longleftrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\""], "translations": [["", "lemma NN_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\n NN t1 t2 = subst (subst N t1 xx) t2 yy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> NN t1 t2 = subst (subst N t1 xx) t2 yy", "unfolding NN_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst N [(t1, xx), (t2, yy)] =\n                      subst (subst N t1 xx) t2 yy", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "lemma NN_neg:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (NN \\<langle>\\<phi>\\<rangle>\n                         \\<langle>neg \\<phi>\\<rangle>)", "using neg_implies_prv_N"], ["proof (prove)\nusing this:\n  let NN = \\<lambda>t1 t2. psubst N [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {} \\<longrightarrow>\n     bprv (NN \\<langle>?\\<phi>\\<rangle> \\<langle>neg ?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (NN \\<langle>\\<phi>\\<rangle>\n                         \\<langle>neg \\<phi>\\<rangle>)", "unfolding Let_def NN_def"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {} \\<longrightarrow>\n  bprv\n   (psubst N\n     [(\\<langle>?\\<phi>\\<rangle>, xx), (\\<langle>neg ?\\<phi>\\<rangle>, yy)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (psubst N\n                         [(\\<langle>\\<phi>\\<rangle>, xx),\n                          (\\<langle>neg \\<phi>\\<rangle>, yy)])", "by meson"], ["", "lemma NN_unique:\n  assumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\n  shows \"bprv (all yy (all yy'\n    (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy)) (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n         (eql (Var yy) (Var yy')))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (all yy'\n         (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n                (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n           (eql (Var yy) (Var yy')))))", "using assms N_unique"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let NN = \\<lambda>t1 t2. psubst N [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {} \\<longrightarrow>\n     bprv\n      (all yy\n        (all yy'\n          (imp (cnj (NN \\<langle>?\\<phi>\\<rangle> (Var yy))\n                 (NN \\<langle>?\\<phi>\\<rangle> (Var yy')))\n            (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (all yy'\n         (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n                (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n           (eql (Var yy) (Var yy')))))", "unfolding Let_def NN_def"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {} \\<longrightarrow>\n  bprv\n   (all yy\n     (all yy'\n       (imp (cnj (psubst N [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy, yy)])\n              (psubst N [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy', yy)]))\n         (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (all yy'\n         (imp (cnj (psubst N [(\\<langle>\\<phi>\\<rangle>, xx), (Var yy, yy)])\n                (psubst N [(\\<langle>\\<phi>\\<rangle>, xx), (Var yy', yy)]))\n           (eql (Var yy) (Var yy')))))", "by meson"], ["", "lemma NN[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> NN t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> NN t1 t2 \\<in> fmla", "unfolding NN_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> psubst N [(t1, xx), (t2, yy)] \\<in> fmla", "by auto"], ["", "lemma Fvars_NN[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (NN t1 t2) = FvarsT t1 \\<union> FvarsT t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> Fvars (NN t1 t2) = FvarsT t1 \\<union> FvarsT t2", "by (auto simp add: NN_def2 subst2_fresh_switch)"], ["", "(* Here and elsewhere: hard to make into one or two uniform statements,\ngiven that we don't assume sufficiently powerful properties for trm substitution.\nSo such lists would need to be maintained on an ad hoc basis, keeping adding instances\nwhen needed. *)"], ["", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var yy)) n yy = NN m n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var yy')) n yy = NN m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (NN m (Var yy')) (Var yy) yy' = NN m (Var yy)\"\n\"n \\<in> num \\<Longrightarrow> subst (NN (Var xx) (Var yy)) n xx = NN n (Var yy)\"\n\"n \\<in> num \\<Longrightarrow> subst (NN (Var xx) (Var xx')) n xx = NN n (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var xx')) n zz = NN m (Var xx')\"\n\"n \\<in> num \\<Longrightarrow> subst (NN n (Var yy)) (Var xx') yy = NN n (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (NN m (Var xx')) n xx' = NN m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n       \\<Longrightarrow> subst (NN m (Var yy)) n yy = NN m n) &&&\n      (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n       \\<Longrightarrow> subst (NN m (Var yy')) n yy = NN m (Var yy'))) &&&\n     (m \\<in> num \\<Longrightarrow>\n      subst (NN m (Var yy')) (Var yy) yy' = NN m (Var yy)) &&&\n     (n \\<in> num \\<Longrightarrow>\n      subst (NN (Var xx) (Var yy)) n xx = NN n (Var yy))) &&&\n    ((n \\<in> num \\<Longrightarrow>\n      subst (NN (Var xx) (Var xx')) n xx = NN n (Var xx')) &&&\n     (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (NN m (Var xx')) n zz = NN m (Var xx'))) &&&\n    (n \\<in> num \\<Longrightarrow>\n     subst (NN n (Var yy)) (Var xx') yy = NN n (Var xx')) &&&\n    (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (NN m (Var xx')) n xx' = NN m n)", "by (auto simp add: NN_def2 subst2_fresh_switch)"], ["", "lemma NN_unique2:\nassumes [simp]:\"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows\n\"bprv (all yy\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n          (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "have 1: \"bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)", "using NN_neg[OF assms]"], ["proof (prove)\nusing this:\n  bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)", "."], ["proof (state)\nthis:\n  bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "have 2: \"bprv (all yy' (\n             imp (cnj (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n                      (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n                 (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy'\n       (imp (cnj (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n              (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))", "using B.prv_allE[of yy, OF _ _ _ NN_unique, of \"\\<phi>\" \"\\<langle>neg \\<phi>\\<rangle>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>yy \\<in> var;\n   all yy'\n    (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n           (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n      (eql (Var yy) (Var yy')))\n   \\<in> fmla;\n   \\<langle>neg \\<phi>\\<rangle> \\<in> trm; \\<phi> \\<in> fmla;\n   Fvars \\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (subst\n                       (all yy'\n                         (imp (cnj (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n                                (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n                           (eql (Var yy) (Var yy'))))\n                       \\<langle>neg \\<phi>\\<rangle> yy)\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy'\n       (imp (cnj (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n              (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))", "by fastforce"], ["proof (state)\nthis:\n  bprv\n   (all yy'\n     (imp (cnj (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n            (NN \\<langle>\\<phi>\\<rangle> (Var yy')))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "have 31: \"bprv (all yy' (\n             imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n                 (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                      (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy'\n       (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n         (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))", "using B.prv_all_imp_cnj_rev[OF _ _ _ _ 2]"], ["proof (prove)\nusing this:\n  \\<lbrakk>yy' \\<in> var;\n   NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle> \\<in> fmla;\n   eql \\<langle>neg \\<phi>\\<rangle> (Var yy') \\<in> fmla;\n   NN \\<langle>\\<phi>\\<rangle> (Var yy') \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (all yy'\n                       (imp (NN \\<langle>\\<phi>\\<rangle>\n                              \\<langle>neg \\<phi>\\<rangle>)\n                         (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy'\n       (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n         (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))", "by simp"], ["proof (state)\nthis:\n  bprv\n   (all yy'\n     (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "have 32: \"bprv (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n                      (all yy' (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                                    (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n       (all yy'\n         (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))", "by (rule B.prv_all_imp[OF _ _ _ _ 31]) (auto simp: NN_def2)"], ["proof (state)\nthis:\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n     (all yy'\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "have 33: \"bprv (all yy' (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                              (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy'\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))", "by (rule B.prv_imp_mp [OF _ _ 32 1]) auto"], ["proof (state)\nthis:\n  bprv\n   (all yy'\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  bprv\n   (all yy'\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "using B.all_subst_rename_prv[OF _ _ _ _ 33, of yy]"], ["proof (prove)\nusing this:\n  bprv\n   (all yy'\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))))\n  \\<lbrakk>imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n            (eql \\<langle>neg \\<phi>\\<rangle> (Var yy'))\n           \\<in> fmla;\n   yy' \\<in> var; yy \\<in> var;\n   yy \\<notin> Fvars\n                (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                  (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (all yy\n                       (subst\n                         (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy'))\n                           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy')))\n                         (Var yy) yy'))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "by simp"], ["proof (state)\nthis:\n  bprv\n   (all yy\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma NN_neg_unique:\nassumes [simp]:\"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\"\nshows\n\"bprv (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n           (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))\" (is \"bprv ?A\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))", "have 0: \"bprv (all yy ?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "using NN_unique2[of \"\\<phi>\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv\n                     (all yy\n                       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n                         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n         (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))", "by simp"], ["proof (state)\nthis:\n  bprv\n   (all yy\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))))\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))", "by (rule B.allE_id[OF _ _ 0]) auto"], ["proof (state)\nthis:\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n     (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma NN_exi_cnj:\nassumes \\<phi>[simp]: \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \\<chi>[simp]: \"\\<chi> \\<in> fmla\"\nassumes f: \"Fvars \\<chi> = {yy}\"\nshows \"bprv (eqv (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n                 (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\"\n(is \"bprv (eqv ?A ?B)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (eqv (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))", "proof(intro B.prv_eqvI)"], ["proof (state)\ngoal (4 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\n 4. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "have yy: \"yy \\<in> var\""], ["proof (prove)\ngoal (1 subgoal):\n 1. yy \\<in> var", "by simp"], ["proof (state)\nthis:\n  yy \\<in> var\n\ngoal (4 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\n 4. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "let ?N = \"NN \\<langle>\\<phi>\\<rangle> (Var yy)\""], ["proof (state)\ngoal (4 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\n 4. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "have \"bprv (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) ((subst (cnj \\<chi> ?N) \\<langle>neg \\<phi>\\<rangle> yy)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (subst (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n         \\<langle>neg \\<phi>\\<rangle> yy))", "using NN_neg[OF \\<phi>]"], ["proof (prove)\nusing this:\n  bprv (NN \\<langle>\\<phi>\\<rangle> \\<langle>neg \\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (subst (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n         \\<langle>neg \\<phi>\\<rangle> yy))", "by (simp add: B.prv_imp_cnj B.prv_imp_refl B.prv_imp_triv)"], ["proof (state)\nthis:\n  bprv\n   (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n     (subst (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n       \\<langle>neg \\<phi>\\<rangle> yy))\n\ngoal (4 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\n 4. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "thus \"bprv (imp ?A ?B)\""], ["proof (prove)\nusing this:\n  bprv\n   (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n     (subst (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n       \\<langle>neg \\<phi>\\<rangle> yy))\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n       (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))", "by (elim B.prv_prv_imp_trans[rotated 3], intro B.prv_exi_inst) auto"], ["proof (state)\nthis:\n  bprv\n   (imp (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)\n     (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))))\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "have 00: \"bprv (imp (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)) (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))\n       (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))", "by (rule B.prv_eql_subst_trm_id_rev) auto"], ["proof (state)\nthis:\n  bprv\n   (imp (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))\n     (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "have 11: \"bprv (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy)) (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))", "using 00 NN_neg_unique[OF \\<phi>]"], ["proof (prove)\nusing this:\n  bprv\n   (imp (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))\n     (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n     (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))", "using NN num Var Variable \\<phi> \\<chi> eql imp subst B.prv_prv_imp_trans"], ["proof (prove)\nusing this:\n  bprv\n   (imp (eql \\<langle>neg \\<phi>\\<rangle> (Var yy))\n     (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n     (eql \\<langle>neg \\<phi>\\<rangle> (Var yy)))\n  \\<lbrakk>?t1.0 \\<in> trm; ?t2.0 \\<in> trm\\<rbrakk>\n  \\<Longrightarrow> NN ?t1.0 ?t2.0 \\<in> fmla\n  num \\<subseteq> trm\n  ?x \\<in> var \\<Longrightarrow> Var ?x \\<in> trm\n  Variable ?i \\<in> var\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  \\<chi> \\<in> fmla\n  \\<lbrakk>?t1.0 \\<in> trm; ?t2.0 \\<in> trm\\<rbrakk>\n  \\<Longrightarrow> eql ?t1.0 ?t2.0 \\<in> fmla\n  \\<lbrakk>?\\<phi>1.0 \\<in> fmla; ?\\<phi>2.0 \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> imp ?\\<phi>1.0 ?\\<phi>2.0 \\<in> fmla\n  \\<lbrakk>?\\<phi> \\<in> fmla; ?t \\<in> trm; ?x \\<in> var\\<rbrakk>\n  \\<Longrightarrow> subst ?\\<phi> ?t ?x \\<in> fmla\n  \\<lbrakk>?\\<phi> \\<in> fmla; ?\\<chi> \\<in> fmla; ?\\<psi> \\<in> fmla;\n   bprv (imp ?\\<phi> ?\\<chi>); bprv (imp ?\\<chi> ?\\<psi>)\\<rbrakk>\n  \\<Longrightarrow> bprv (imp ?\\<phi> ?\\<psi>)\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n       (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))", "by (metis (no_types, lifting) enc in_num neg)"], ["proof (state)\nthis:\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n     (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "hence \"bprv (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))\""], ["proof (prove)\nusing this:\n  bprv\n   (imp (NN \\<langle>\\<phi>\\<rangle> (Var yy))\n     (imp \\<chi> (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "by (simp add: 11 B.prv_cnj_imp_monoR2 B.prv_imp_com)"], ["proof (state)\nthis:\n  bprv\n   (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n     (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "hence 1: \"bprv (all yy (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\""], ["proof (prove)\nusing this:\n  bprv\n   (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n     (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))\n\ngoal (1 subgoal):\n 1. bprv\n     (all yy\n       (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n         (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))", "by (simp add: B.prv_all_gen)"], ["proof (state)\nthis:\n  bprv\n   (all yy\n     (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "have 2: \"Fvars (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fvars (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) = {}", "using f"], ["proof (prove)\nusing this:\n  Fvars \\<chi> = {yy}\n\ngoal (1 subgoal):\n 1. Fvars (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) = {}", "by simp"], ["proof (state)\nthis:\n  Fvars (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) = {}\n\ngoal (3 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla\n 3. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "show \"bprv (imp ?B ?A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "using 1 2"], ["proof (prove)\nusing this:\n  bprv\n   (all yy\n     (imp (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy)))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy)))\n  Fvars (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy) = {}\n\ngoal (1 subgoal):\n 1. bprv\n     (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n       (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))", "by (simp add: B.prv_exi_imp)"], ["proof (state)\nthis:\n  bprv\n   (imp (exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))))\n     (subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy))\n\ngoal (2 subgoals):\n 1. subst \\<chi> \\<langle>neg \\<phi>\\<rangle> yy \\<in> fmla\n 2. exi yy (cnj \\<chi> (NN \\<langle>\\<phi>\\<rangle> (Var yy))) \\<in> fmla", "qed auto"], ["", "end \\<comment> \\<open>context @{locale Repr_Neg}\\<close>"], ["", "section \\<open>Representability of Self-Substitution\\<close>"], ["", "text \\<open>Self-substitution is the function that takes a formula @{term \\<phi>}\nand returns $\\phi[\\langle\\phi\\rangle/\\mathit{xx}]$ (for the fixed variable @{term xx}). This is all that\nwill be needed for the diagonalization lemma.\\<close>"], ["", "locale Repr_SelfSubst =\nEncode\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  enc\n+\nDeduct2\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand num\nand eql cnj imp all exi\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\n+\nfixes S :: 'fmla\nassumes\nS[simp,intro!]: \"S \\<in> fmla\"\nand\nFvars_S[simp]: \"Fvars S = {xx,yy}\"\nand\nsubst_implies_prv_S:\n\"\\<And> \\<phi>.\n  let SS = (\\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]) in\n  \\<phi> \\<in> fmla \\<longrightarrow> Fvars \\<phi> = {xx} \\<longrightarrow>\n  bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\"\nand\nS_unique:\n\"\\<And> \\<phi>.\n  let SS = (\\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]) in\n  \\<phi> \\<in> fmla \\<longrightarrow> Fvars \\<phi> = {xx} \\<longrightarrow>\n  bprv (all yy (all yy'\n     (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n          (eql (Var yy) (Var yy')))))\"\nbegin"], ["", "text \\<open>SS is the instantiation combinator of S:\\<close>"], ["", "definition SS where \"SS \\<equiv> \\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]\""], ["", "lemma SS_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow>\n yy \\<notin> FvarsT t1 \\<Longrightarrow>\n SS t1 t2 = subst (subst S t1 xx) t2 yy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> SS t1 t2 = subst (subst S t1 xx) t2 yy", "unfolding SS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst S [(t1, xx), (t2, yy)] =\n                      subst (subst S t1 xx) t2 yy", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "lemma subst_implies_prv_SS:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow> bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (SS \\<langle>\\<phi>\\<rangle>\n                         \\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle>\n                                   xx\\<rangle>)", "using subst_implies_prv_S"], ["proof (prove)\nusing this:\n  let SS = \\<lambda>t1 t2. psubst S [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {xx} \\<longrightarrow>\n     bprv\n      (SS \\<langle>?\\<phi>\\<rangle>\n        \\<langle>subst ?\\<phi> \\<langle>?\\<phi>\\<rangle> xx\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (SS \\<langle>\\<phi>\\<rangle>\n                         \\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle>\n                                   xx\\<rangle>)", "unfolding Let_def SS_def"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {xx} \\<longrightarrow>\n  bprv\n   (psubst S\n     [(\\<langle>?\\<phi>\\<rangle>, xx),\n      (\\<langle>subst ?\\<phi> \\<langle>?\\<phi>\\<rangle> xx\\<rangle>, yy)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (psubst S\n                         [(\\<langle>\\<phi>\\<rangle>, xx),\n                          (\\<langle>subst \\<phi> \\<langle>\\<phi>\\<rangle>\n                                     xx\\<rangle>,\n                           yy)])", "by meson"], ["", "lemma SS_unique:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow>\n bprv (all yy (all yy'\n      (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n           (eql (Var yy) (Var yy')))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy))\n                                  (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n                             (eql (Var yy) (Var yy')))))", "using S_unique"], ["proof (prove)\nusing this:\n  let SS = \\<lambda>t1 t2. psubst S [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {xx} \\<longrightarrow>\n     bprv\n      (all yy\n        (all yy'\n          (imp (cnj (SS \\<langle>?\\<phi>\\<rangle> (Var yy))\n                 (SS \\<langle>?\\<phi>\\<rangle> (Var yy')))\n            (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy))\n                                  (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n                             (eql (Var yy) (Var yy')))))", "unfolding Let_def SS_def"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {xx} \\<longrightarrow>\n  bprv\n   (all yy\n     (all yy'\n       (imp (cnj (psubst S [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy, yy)])\n              (psubst S [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy', yy)]))\n         (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (psubst S\n [(\\<langle>\\<phi>\\<rangle>, xx), (Var yy, yy)])\n                                  (psubst S\n                                    [(\\<langle>\\<phi>\\<rangle>, xx),\n                                     (Var yy', yy)]))\n                             (eql (Var yy) (Var yy')))))", "by meson"], ["", "lemma SS[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> SS t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> SS t1 t2 \\<in> fmla", "unfolding SS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> psubst S [(t1, xx), (t2, yy)] \\<in> fmla", "by auto"], ["", "lemma Fvars_SS[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> Fvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2", "by (auto simp add: SS_def2 subst2_fresh_switch)"], ["", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p\"\n\"m \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy)\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p) &&&\n     (m \\<in> num \\<Longrightarrow>\n      subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy))) &&&\n    (\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p) &&&\n    (\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')) &&&\n    (m \\<in> num \\<Longrightarrow>\n     subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy))", "by (auto simp add: SS_def2 subst_comp_num Let_def)"], ["", "end \\<comment> \\<open>context @{locale Repr_SelfSubst}\\<close>"], ["", "section \\<open>Representability of Self-Soft-Substitution\\<close>"], ["", "text \\<open>The soft substitution function performs substitution logically instead of\nsyntactically. In particular, its \"self\" version sends @{term \\<phi>} to\n@{term \"exi xx (cnj (eql (Var xx) (enc \\<phi>)) \\<phi>)\"}. Representability of self-soft-substitution will be\nan alternative assumption in the diagonalization lemma.\\<close>"], ["", "locale Repr_SelfSoftSubst =\nEncode\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  enc\n+\nDeduct2\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand num\nand eql cnj imp all exi\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\n+\nfixes S :: 'fmla\nassumes\nS[simp,intro!]: \"S \\<in> fmla\"\nand\nFvars_S[simp]: \"Fvars S = {xx,yy}\"\nand\nsoftSubst_implies_prv_S:\n\"\\<And> \\<phi>.\n  let SS = (\\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]) in\n  \\<phi> \\<in> fmla \\<longrightarrow> Fvars \\<phi> = {xx} \\<longrightarrow>\n  bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>softSubst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\"\nand\nS_unique:\n\"\\<And> \\<phi>.\n  let SS = (\\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]) in\n  \\<phi> \\<in> fmla \\<longrightarrow> Fvars \\<phi> = {xx} \\<longrightarrow>\n  bprv (all yy (all yy'\n     (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n          (eql (Var yy) (Var yy')))))\"\nbegin"], ["", "text \\<open>SS is the instantiation combinator of S:\\<close>"], ["", "definition SS where \"SS \\<equiv> \\<lambda> t1 t2. psubst S [(t1,xx), (t2,yy)]\""], ["", "lemma SS_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow>\n yy \\<notin> FvarsT t1 \\<Longrightarrow>\n SS t1 t2 = subst (subst S t1 xx) t2 yy\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> SS t1 t2 = subst (subst S t1 xx) t2 yy", "unfolding SS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst S [(t1, xx), (t2, yy)] =\n                      subst (subst S t1 xx) t2 yy", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "lemma softSubst_implies_prv_SS:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow> bprv (SS \\<langle>\\<phi>\\<rangle> \\<langle>softSubst \\<phi> \\<langle>\\<phi>\\<rangle> xx\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (SS \\<langle>\\<phi>\\<rangle>\n                         \\<langle>softSubst \\<phi> \\<langle>\\<phi>\\<rangle>\n                                   xx\\<rangle>)", "using softSubst_implies_prv_S"], ["proof (prove)\nusing this:\n  let SS = \\<lambda>t1 t2. psubst S [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {xx} \\<longrightarrow>\n     bprv\n      (SS \\<langle>?\\<phi>\\<rangle>\n        \\<langle>softSubst ?\\<phi> \\<langle>?\\<phi>\\<rangle> xx\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (SS \\<langle>\\<phi>\\<rangle>\n                         \\<langle>softSubst \\<phi> \\<langle>\\<phi>\\<rangle>\n                                   xx\\<rangle>)", "unfolding Let_def SS_def"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {xx} \\<longrightarrow>\n  bprv\n   (psubst S\n     [(\\<langle>?\\<phi>\\<rangle>, xx),\n      (\\<langle>softSubst ?\\<phi> \\<langle>?\\<phi>\\<rangle> xx\\<rangle>,\n       yy)])\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (psubst S\n                         [(\\<langle>\\<phi>\\<rangle>, xx),\n                          (\\<langle>softSubst \\<phi>\n                                     \\<langle>\\<phi>\\<rangle> xx\\<rangle>,\n                           yy)])", "by meson"], ["", "lemma SS_unique:\n\"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {xx} \\<Longrightarrow>\n bprv (all yy (all yy'\n     (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy)) (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n          (eql (Var yy) (Var yy')))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy))\n                                  (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n                             (eql (Var yy) (Var yy')))))", "using S_unique"], ["proof (prove)\nusing this:\n  let SS = \\<lambda>t1 t2. psubst S [(t1, xx), (t2, yy)]\n  in ?\\<phi> \\<in> fmla \\<longrightarrow>\n     Fvars ?\\<phi> = {xx} \\<longrightarrow>\n     bprv\n      (all yy\n        (all yy'\n          (imp (cnj (SS \\<langle>?\\<phi>\\<rangle> (Var yy))\n                 (SS \\<langle>?\\<phi>\\<rangle> (Var yy')))\n            (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (SS \\<langle>\\<phi>\\<rangle> (Var yy))\n                                  (SS \\<langle>\\<phi>\\<rangle> (Var yy')))\n                             (eql (Var yy) (Var yy')))))", "unfolding Let_def SS_def"], ["proof (prove)\nusing this:\n  ?\\<phi> \\<in> fmla \\<longrightarrow>\n  Fvars ?\\<phi> = {xx} \\<longrightarrow>\n  bprv\n   (all yy\n     (all yy'\n       (imp (cnj (psubst S [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy, yy)])\n              (psubst S [(\\<langle>?\\<phi>\\<rangle>, xx), (Var yy', yy)]))\n         (eql (Var yy) (Var yy')))))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {xx}\\<rbrakk>\n    \\<Longrightarrow> bprv\n                       (all yy\n                         (all yy'\n                           (imp (cnj (psubst S\n [(\\<langle>\\<phi>\\<rangle>, xx), (Var yy, yy)])\n                                  (psubst S\n                                    [(\\<langle>\\<phi>\\<rangle>, xx),\n                                     (Var yy', yy)]))\n                             (eql (Var yy) (Var yy')))))", "by meson"], ["", "lemma SS[simp,intro]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> SS t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> SS t1 t2 \\<in> fmla", "unfolding SS_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm\\<rbrakk>\n    \\<Longrightarrow> psubst S [(t1, xx), (t2, yy)] \\<in> fmla", "by auto"], ["", "lemma Fvars_SS[simp]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> yy \\<notin> FvarsT t1 \\<Longrightarrow>\nFvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; yy \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> Fvars (SS t1 t2) = FvarsT t1 \\<union> FvarsT t2", "by (auto simp add: SS_def2 subst2_fresh_switch)"], ["", "lemma [simp]:\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p\"\n\"m \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy)\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p\"\n\"m \\<in> num \\<Longrightarrow> p \\<in> num \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')\"\n\"m \\<in> num \\<Longrightarrow> subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (SS m (Var yy)) p yy = SS m p) &&&\n     (m \\<in> num \\<Longrightarrow>\n      subst (SS m (Var yy')) (Var yy) yy' = SS m (Var yy))) &&&\n    (\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (SS m (Var yy')) p yy' = SS m p) &&&\n    (\\<lbrakk>m \\<in> num; p \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (SS m (Var yy')) p yy = SS m (Var yy')) &&&\n    (m \\<in> num \\<Longrightarrow>\n     subst (SS (Var xx) (Var yy)) m xx = SS m (Var yy))", "by (auto simp add: SS_def2 subst_comp_num Let_def)"], ["", "end \\<comment> \\<open>context @{locale Repr_SelfSoftSubst}\\<close>"], ["", "section \\<open>Clean Representability of the \"Proof-of\" Relation\\<close>"], ["", "text\\<open>For the proof-of relation, we must assume a stronger version of\nrepresentability, namely clean representability on the first argument, which\nis dedicated to encoding the proof component. The property asks that the\nrepresentation predicate is provably false on numerals that do not encode\nproofs; it would hold trivially for surjective proof encodings.\n\nCleanness is not a standard concept in the literature -- we have\nintroduced it in our CADE 2019 paper~\\cite{DBLP:conf/cade/0001T19}.\\<close>"], ["", "locale CleanRepr_Proofs =\nEncode_Proofs\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  prv bprv\n  enc\n  fls\n  dsj\n  \"proof\" prfOf\n  encPf\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand num\nand eql cnj imp all exi\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand fls dsj\nand \"proof\" :: \"'proof set\" and prfOf\nand encPf\n+\nfixes Pf :: 'fmla\nassumes\nPf[simp,intro!]: \"Pf \\<in> fmla\"\nand\nFvars_Pf[simp]: \"Fvars Pf = {yy,xx}\"\nand\nprfOf_Pf:\n\"\\<And> prf \\<phi>.\n  let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n  (prf \\<in> proof \\<and> \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<longrightarrow>\n   prfOf prf \\<phi>\n   \\<longrightarrow>\n   bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\"\nand\nnot_prfOf_Pf:\n\"\\<And> prf \\<phi>.\n  let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n  (prf \\<in> proof \\<and> \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<longrightarrow>\n   \\<not> prfOf prf \\<phi>\n   \\<longrightarrow>\n   bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)))\"\nand\nClean_Pf_encPf:\n\"\\<And> p \\<phi>. let PPf = (\\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]) in\n  p \\<in> num \\<and> \\<phi> \\<in> fmla \\<and> Fvars \\<phi> = {} \\<longrightarrow> p \\<notin> encPf ` proof \\<longrightarrow> bprv (neg (PPf p \\<langle>\\<phi>\\<rangle>))\"\nbegin"], ["", "text \\<open>PPf is the instantiation combinator of Pf:\\<close>"], ["", "definition PPf where \"PPf \\<equiv> \\<lambda> t1 t2. psubst Pf [(t1,yy), (t2,xx)]\""], ["", "lemma prfOf_PPf:\nassumes \"prf \\<in> proof\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"prfOf prf \\<phi>\"\nshows \"bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "using assms prfOf_Pf"], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prfOf prf \\<phi>\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?prf \\<in> proof \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     prfOf ?prf ?\\<phi> \\<longrightarrow>\n     bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "unfolding PPf_def"], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prfOf prf \\<phi>\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?prf \\<in> proof \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     prfOf ?prf ?\\<phi> \\<longrightarrow>\n     bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. bprv (psubst Pf [(encPf prf, yy), (\\<langle>\\<phi>\\<rangle>, xx)])", "by auto"], ["", "lemma not_prfOf_PPf:\nassumes \"prf \\<in> proof\" \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" \"\\<not> prfOf prf \\<phi>\"\nshows \"bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "using assms not_prfOf_Pf"], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  \\<not> prfOf prf \\<phi>\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?prf \\<in> proof \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     \\<not> prfOf ?prf ?\\<phi> \\<longrightarrow>\n     bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))", "unfolding PPf_def"], ["proof (prove)\nusing this:\n  prf \\<in> proof\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  \\<not> prfOf prf \\<phi>\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?prf \\<in> proof \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     \\<not> prfOf ?prf ?\\<phi> \\<longrightarrow>\n     bprv (neg (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (psubst Pf [(encPf prf, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))", "by auto"], ["", "lemma Clean_PPf_encPf:\n  assumes \"\\<phi> \\<in> fmla\" \"Fvars \\<phi> = {}\" and \"p \\<in> num\" \"p \\<notin> encPf ` proof\"\n  shows \"bprv (neg (PPf p \\<langle>\\<phi>\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (neg (PPf p \\<langle>\\<phi>\\<rangle>))", "using assms Clean_Pf_encPf"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  p \\<in> num\n  p \\<notin> encPf ` proof\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?p \\<in> num \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     ?p \\<notin> encPf ` proof \\<longrightarrow>\n     bprv (neg (PPf ?p \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (PPf p \\<langle>\\<phi>\\<rangle>))", "unfolding PPf_def"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  p \\<in> num\n  p \\<notin> encPf ` proof\n  let PPf = \\<lambda>t1 t2. psubst Pf [(t1, yy), (t2, xx)]\n  in ?p \\<in> num \\<and>\n     ?\\<phi> \\<in> fmla \\<and> Fvars ?\\<phi> = {} \\<longrightarrow>\n     ?p \\<notin> encPf ` proof \\<longrightarrow>\n     bprv (neg (PPf ?p \\<langle>?\\<phi>\\<rangle>))\n\ngoal (1 subgoal):\n 1. bprv (neg (psubst Pf [(p, yy), (\\<langle>\\<phi>\\<rangle>, xx)]))", "by auto"], ["", "lemma PPf[simp,intro!]: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow> PPf t1 t2 \\<in> fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> PPf t1 t2 \\<in> fmla", "unfolding PPf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst Pf [(t1, yy), (t2, xx)] \\<in> fmla", "by auto"], ["", "lemma PPf_def2: \"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n  PPf t1 t2 = subst (subst Pf t1 yy) t2 xx\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> PPf t1 t2 = subst (subst Pf t1 yy) t2 xx", "unfolding PPf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> psubst Pf [(t1, yy), (t2, xx)] =\n                      subst (subst Pf t1 yy) t2 xx", "by (rule psubst_eq_rawpsubst2[simplified]) auto"], ["", "lemma Fvars_PPf[simp]:\n\"t1 \\<in> trm \\<Longrightarrow> t2 \\<in> trm \\<Longrightarrow> xx \\<notin> FvarsT t1 \\<Longrightarrow>\n Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t1 \\<in> trm; t2 \\<in> trm; xx \\<notin> FvarsT t1\\<rbrakk>\n    \\<Longrightarrow> Fvars (PPf t1 t2) = FvarsT t1 \\<union> FvarsT t2", "by (auto simp add: PPf_def2 subst2_fresh_switch)"], ["", "lemma [simp]:\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n\"\n\"m \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n\"\n\"n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n\"\n\"m \\<in> num \\<Longrightarrow> n \\<in> num \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((n \\<in> num \\<Longrightarrow>\n       subst (PPf (Var yy) (Var xx)) n xx = PPf (Var yy) n) &&&\n      (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n       \\<Longrightarrow> subst (PPf (Var yy) m) n yy = PPf n m)) &&&\n     (n \\<in> num \\<Longrightarrow>\n      subst (PPf (Var yy) (Var xx)) n yy = PPf n (Var xx)) &&&\n     (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (PPf m (Var xx)) n xx = PPf m n)) &&&\n    ((m \\<in> num \\<Longrightarrow>\n      subst (PPf (Var zz) (Var xx')) m zz = PPf m (Var xx')) &&&\n     (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n      \\<Longrightarrow> subst (PPf m (Var xx')) n xx' = PPf m n)) &&&\n    (n \\<in> num \\<Longrightarrow>\n     subst (PPf (Var zz) (Var xx')) n xx' = PPf (Var zz) n) &&&\n    (\\<lbrakk>m \\<in> num; n \\<in> num\\<rbrakk>\n     \\<Longrightarrow> subst (PPf (Var zz) n) m zz = PPf m n)", "by (auto simp add: PPf_def2 subst2_fresh_switch)"], ["", "lemma B_consistent_prfOf_iff_PPf:\n\"B.consistent \\<Longrightarrow> prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow> prfOf prf \\<phi> \\<longleftrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>B.consistent; prf \\<in> proof; \\<phi> \\<in> fmla\\<rbrakk>\n    \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow>\n                      prfOf prf \\<phi> =\n                      bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "unfolding B.consistent_def3"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<phi>\\<in>fmla.\n                \\<not> (bprv \\<phi> \\<and> bprv (neg \\<phi>));\n     prf \\<in> proof; \\<phi> \\<in> fmla\\<rbrakk>\n    \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow>\n                      prfOf prf \\<phi> =\n                      bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "using not_prfOf_PPf[of \"prf\" \\<phi>] prfOf_PPf[of \"prf\" \\<phi>]"], ["proof (prove)\nusing this:\n  \\<lbrakk>prf \\<in> proof; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n   \\<not> prfOf prf \\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>))\n  \\<lbrakk>prf \\<in> proof; \\<phi> \\<in> fmla; Fvars \\<phi> = {};\n   prfOf prf \\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>\\<phi>\\<in>fmla.\n                \\<not> (bprv \\<phi> \\<and> bprv (neg \\<phi>));\n     prf \\<in> proof; \\<phi> \\<in> fmla\\<rbrakk>\n    \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow>\n                      prfOf prf \\<phi> =\n                      bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "by force"], ["", "lemma consistent_prfOf_iff_PPf:\n\"consistent \\<Longrightarrow> prf \\<in> proof \\<Longrightarrow> \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow> prfOf prf \\<phi> \\<longleftrightarrow> bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>consistent; prf \\<in> proof; \\<phi> \\<in> fmla\\<rbrakk>\n    \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow>\n                      prfOf prf \\<phi> =\n                      bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "using B_consistent_prfOf_iff_PPf[OF dwf_dwfd.consistent_B_consistent]"], ["proof (prove)\nusing this:\n  \\<lbrakk>consistent; ?prf \\<in> proof; ?\\<phi> \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> Fvars ?\\<phi> = {} \\<longrightarrow>\n                    prfOf ?prf ?\\<phi> =\n                    bprv (PPf (encPf ?prf) \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>consistent; prf \\<in> proof; \\<phi> \\<in> fmla\\<rbrakk>\n    \\<Longrightarrow> Fvars \\<phi> = {} \\<longrightarrow>\n                      prfOf prf \\<phi> =\n                      bprv (PPf (encPf prf) \\<langle>\\<phi>\\<rangle>)", "."], ["", "end \\<comment> \\<open>context @{locale CleanRepr_Proofs}\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}