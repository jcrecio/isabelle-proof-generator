{"file_name": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness/Abstract_First_Goedel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Goedel_Incompleteness", "problem_names": ["lemma goedel_first_theEasyHalf_pos:\nassumes \"prv \\<phi>G\"   shows \"prv fls\"", "lemma goedel_first_theHardHalf:\nassumes oc: \"\\<omega>consistent\"\nshows \"\\<not> prv (neg \\<phi>G)\"", "theorem goedel_first:\nassumes \"\\<omega>consistent\"\nshows \"\\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\"", "theorem goedel_first_ex:\nassumes \"\\<omega>consistent\"\nshows \"\\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)\"", "theorem isTrue_\\<phi>G:\n  assumes \"consistent\"\n  shows \"isTrue \\<phi>G\"", "theorem goedel_first_strong:\n\"\\<omega>consistent \\<Longrightarrow> \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\"", "theorem goedel_first_strong_ex:\n\"\\<omega>consistent \\<Longrightarrow> \\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>\"", "lemma HBL1_rev:\n  assumes f: \"\\<phi> \\<in> fmla\" and fv: \"Fvars \\<phi> = {}\" and bp: \"bprv (PP \\<langle>\\<phi>\\<rangle>)\"\n  shows \"prv \\<phi>\"", "lemma classical_PP_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\"", "lemma HBL1_iff: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\"", "lemma HBL1_iff_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\"", "lemma goedel_first_theHardHalf_pos:\nassumes \"prv (neg \\<phi>G)\"   shows \"prv fls\"", "theorem goedel_first_classic:\nassumes \"consistent\"\nshows \"\\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\"", "theorem goedel_first_classic_ex:\nassumes \"consistent\"\nshows \"\\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)\"", "lemma TIP_PP: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PP \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> prv \\<phi>\"", "theorem isTrue_\\<phi>G:\n  assumes consistent\n  shows \"isTrue \\<phi>G\"", "theorem goedel_first_classic_strong: \"consistent \\<Longrightarrow> \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\"", "theorem goedel_first_classic_strong_ex:\n\"consistent \\<Longrightarrow> \\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>\""], "translations": [["", "lemma goedel_first_theEasyHalf_pos:\nassumes \"prv \\<phi>G\"   shows \"prv fls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv fls", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prv fls", "have \"prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv (neg (PP \\<langle>\\<phi>G\\<rangle>))", "using prv_eqv_prv[OF _ _ assms prv_\\<phi>G_eqv]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<phi>G \\<in> fmla;\n   neg (PP \\<langle>\\<phi>G\\<rangle>) \\<in> fmla\\<rbrakk>\n  \\<Longrightarrow> prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv (neg (PP \\<langle>\\<phi>G\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv fls", "moreover"], ["proof (state)\nthis:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv fls", "{"], ["proof (state)\nthis:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv fls", "have \"bprv (PP \\<langle>\\<phi>G\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>G\\<rangle>)", "using HBL1[OF \\<phi>G Fvars_\\<phi>G assms]"], ["proof (prove)\nusing this:\n  bprv (subst P \\<langle>\\<phi>G\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. bprv (PP \\<langle>\\<phi>G\\<rangle>)", "unfolding PP_def"], ["proof (prove)\nusing this:\n  bprv (subst P \\<langle>\\<phi>G\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. bprv (subst P \\<langle>\\<phi>G\\<rangle> xx)", "."], ["proof (state)\nthis:\n  bprv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv fls", "from bprv_prv[OF _ _ this, simplified]"], ["proof (chain)\npicking this:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)", "have \"prv (PP \\<langle>\\<phi>G\\<rangle>)\""], ["proof (prove)\nusing this:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv (PP \\<langle>\\<phi>G\\<rangle>)", "."], ["proof (state)\nthis:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv fls", "}"], ["proof (state)\nthis:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv fls", "ultimately"], ["proof (chain)\npicking this:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n  prv (PP \\<langle>\\<phi>G\\<rangle>)", "show ?thesis"], ["proof (prove)\nusing this:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv fls", "using PP prv_neg_fls"], ["proof (prove)\nusing this:\n  prv (neg (PP \\<langle>\\<phi>G\\<rangle>))\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n  ?t \\<in> trm \\<Longrightarrow> PP ?t \\<in> fmla\n  \\<lbrakk>?\\<phi> \\<in> fmla; prv ?\\<phi>; prv (neg ?\\<phi>)\\<rbrakk>\n  \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. prv fls", "by (meson \\<phi>G enc in_num)"], ["proof (state)\nthis:\n  prv fls\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>... then the more standard contrapositive formulation:\\<close>"], ["", "corollary goedel_first_theEasyHalf:\n\"consistent \\<Longrightarrow> \\<not> prv \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow> \\<not> prv \\<phi>G", "using goedel_first_theEasyHalf_pos"], ["proof (prove)\nusing this:\n  prv \\<phi>G \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow> \\<not> prv \\<phi>G", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  prv \\<phi>G \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. \\<not> prv fls \\<Longrightarrow> \\<not> prv \\<phi>G", "by auto"], ["", "end \\<comment> \\<open>context @{locale Goedel_Form}\\<close>"], ["", "subsection \\<open>The hard half\\<close>"], ["", "text \\<open>The hard half needs explicit proofs:\\<close>"], ["", "context Goedel_Form_Proofs begin"], ["", "lemma goedel_first_theHardHalf:\nassumes oc: \"\\<omega>consistent\"\nshows \"\\<not> prv (neg \\<phi>G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prv (neg \\<phi>G)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "assume pn: \"prv (neg \\<phi>G)\""], ["proof (state)\nthis:\n  prv (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "hence pnn: \"prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\""], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))", "using prv_eqv_imp_transi num wrepr.PP \\<phi>G fls neg neg_def prv_\\<phi>G_eqv prv_eqv_sym"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G)\n  \\<lbrakk>?\\<phi>1.0 \\<in> fmla; ?\\<phi>2.0 \\<in> fmla; ?\\<chi> \\<in> fmla;\n   prv (eqv ?\\<phi>1.0 ?\\<phi>2.0); prv (imp ?\\<phi>2.0 ?\\<chi>)\\<rbrakk>\n  \\<Longrightarrow> prv (imp ?\\<phi>1.0 ?\\<chi>)\n  num \\<subseteq> trm\n  ?t \\<in> trm \\<Longrightarrow> wrepr.PP ?t \\<in> fmla\n  \\<phi>G \\<in> fmla\n  fls \\<in> fmla\n  ?\\<phi> \\<in> fmla \\<Longrightarrow> neg ?\\<phi> \\<in> fmla\n  neg ?\\<phi> = imp ?\\<phi> fls\n  prv (eqv \\<phi>G (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n  \\<lbrakk>?\\<phi> \\<in> fmla; ?\\<chi> \\<in> fmla;\n   prv (eqv ?\\<phi> ?\\<chi>)\\<rbrakk>\n  \\<Longrightarrow> prv (eqv ?\\<chi> ?\\<phi>)\n\ngoal (1 subgoal):\n 1. prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))", "by (metis (full_types) enc in_num)"], ["proof (state)\nthis:\n  prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "note c = \\<omega>consistent_implies_consistent[OF oc]"], ["proof (state)\nthis:\n  consistent\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "have np: \"\\<not> prv \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G", "using pn c"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G)\n  consistent\n\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G", "unfolding consistent_def3"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G)\n  \\<forall>\\<phi>\\<in>fmla. \\<not> (prv \\<phi> \\<and> prv (neg \\<phi>))\n\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G", "by blast"], ["proof (state)\nthis:\n  \\<not> prv \\<phi>G\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "have \"\\<forall>p \\<in> num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))", "using not_prv_prv_neg_PPf[OF _ _ np]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<phi>G \\<in> fmla; Fvars \\<phi>G = {}; ?n \\<in> num\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<forall>p\\<in>num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "hence 0: \"\\<forall>p \\<in> num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))", "using not_prv_prv_neg_PPf[OF _ _ np]"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>num. bprv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n  \\<lbrakk>\\<phi>G \\<in> fmla; Fvars \\<phi>G = {}; ?n \\<in> num\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))", "by (fastforce intro: bprv_prv)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "have \"\\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))", "using 0 oc"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n  \\<omega>consistent\n\ngoal (1 subgoal):\n 1. \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))", "unfolding \\<omega>consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>num. prv (neg (PPf p \\<langle>\\<phi>G\\<rangle>))\n  \\<forall>\\<phi>\\<in>fmla.\n     \\<forall>x\\<in>var.\n        Fvars \\<phi> = {x} \\<longrightarrow>\n        (\\<forall>n\\<in>num. prv (neg (subst \\<phi> n x))) \\<longrightarrow>\n        \\<not> prv (neg (neg (exi x \\<phi>)))\n\ngoal (1 subgoal):\n 1. \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))", "by auto"], ["proof (state)\nthis:\n  \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "hence \"\\<not> prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\""], ["proof (prove)\nusing this:\n  \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))", "unfolding wrepr.PP_def"], ["proof (prove)\nusing this:\n  \\<not> prv (neg (neg (exi yy (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))))\n\ngoal (1 subgoal):\n 1. \\<not> prv (neg (neg (subst P \\<langle>\\<phi>G\\<rangle> xx)))", "by (subst P_def) (simp add:  PPf_def2)"], ["proof (state)\nthis:\n  \\<not> prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv (neg \\<phi>G) \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. False", "using pnn"], ["proof (prove)\nusing this:\n  \\<not> prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n  prv (neg (neg (wrepr.PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem goedel_first:\nassumes \"\\<omega>consistent\"\nshows \"\\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)", "using assms goedel_first_theEasyHalf goedel_first_theHardHalf \\<omega>consistent_implies_consistent"], ["proof (prove)\nusing this:\n  \\<omega>consistent\n  consistent \\<Longrightarrow> \\<not> prv \\<phi>G\n  \\<omega>consistent \\<Longrightarrow> \\<not> prv (neg \\<phi>G)\n  \\<omega>consistent \\<Longrightarrow> consistent\n\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)", "by blast"], ["", "theorem goedel_first_ex:\nassumes \"\\<omega>consistent\"\nshows \"\\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)", "using assms goedel_first"], ["proof (prove)\nusing this:\n  \\<omega>consistent\n  \\<omega>consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)", "by (intro exI[of _ \\<phi>G]) blast"], ["", "end \\<comment> \\<open>context @{locale Goedel_Form_Proofs}\\<close>"], ["", "section \\<open>Model-Theoretic Versions of G?del's First\\<close>"], ["", "text \\<open>The model-theoretic twist is that of additionally proving\nthe truth of G?del sentences.\\<close>"], ["", "subsection \\<open>First model-theoretic version\\<close>"], ["", "locale Goedel_Form_Proofs_Minimal_Truth =\nGoedel_Form_Proofs\n  var trm fmla Var FvarsT substT Fvars subst\n  num\n  eql cnj imp all exi\n  fls\n  prv bprv\n  enc\n  S\n  dsj\n  \"proof\" prfOf encPf\n  Pf\n+\nMinimal_Truth_Soundness\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  bprv\n  isTrue\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand \"proof\" :: \"'proof set\" and prfOf encPf\nand Pf\nand isTrue\nbegin"], ["", "text \\<open>Recall that \"consistent\" and \"$\\omega$-consistent\" refer to @{term prv}, not to @{term bprv}.\\<close>"], ["", "theorem isTrue_\\<phi>G:\n  assumes \"consistent\"\n  shows \"isTrue \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "have \"\\<forall> n \\<in> num. bprv (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>G\\<rangle>))", "using not_prv_prv_neg_PPf[OF _ _ goedel_first_theEasyHalf[OF assms]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<phi>G \\<in> fmla; Fvars \\<phi>G = {}; ?n \\<in> num\\<rbrakk>\n  \\<Longrightarrow> bprv (neg (PPf ?n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>G\\<rangle>))", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "hence \"\\<forall> n \\<in> num. isTrue (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. bprv (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<in>num. isTrue (neg (PPf n \\<langle>\\<phi>G\\<rangle>))", "by (auto intro: sound_isTrue)"], ["proof (state)\nthis:\n  \\<forall>n\\<in>num. isTrue (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "hence \"isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<in>num. isTrue (neg (PPf n \\<langle>\\<phi>G\\<rangle>))\n\ngoal (1 subgoal):\n 1. isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))", "by (auto intro: isTrue_all)"], ["proof (state)\nthis:\n  isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "moreover"], ["proof (state)\nthis:\n  isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "have \"isTrue (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue\n     (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)", "using bprv_eqv_all_not_PPf_imp_\\<phi>G"], ["proof (prove)\nusing this:\n  bprv (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)\n\ngoal (1 subgoal):\n 1. isTrue\n     (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)", "by (auto intro!: sound_isTrue)"], ["proof (state)\nthis:\n  isTrue\n   (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "ultimately"], ["proof (chain)\npicking this:\n  isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))\n  isTrue\n   (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)", "show ?thesis"], ["proof (prove)\nusing this:\n  isTrue (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>)))\n  isTrue\n   (imp (all yy (neg (PPf (Var yy) \\<langle>\\<phi>G\\<rangle>))) \\<phi>G)\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "by (rule isTrue_imp[rotated -2]) auto"], ["proof (state)\nthis:\n  isTrue \\<phi>G\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The \"strong\" form of G?del's First (also asserting the truth of\nthe G?del sentences):\\<close>"], ["", "theorem goedel_first_strong:\n\"\\<omega>consistent \\<Longrightarrow> \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>consistent \\<Longrightarrow>\n    \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G", "using goedel_first isTrue_\\<phi>G \\<omega>consistent_implies_consistent"], ["proof (prove)\nusing this:\n  \\<omega>consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\n  consistent \\<Longrightarrow> isTrue \\<phi>G\n  \\<omega>consistent \\<Longrightarrow> consistent\n\ngoal (1 subgoal):\n 1. \\<omega>consistent \\<Longrightarrow>\n    \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G", "by blast"], ["", "theorem goedel_first_strong_ex:\n\"\\<omega>consistent \\<Longrightarrow> \\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega>consistent \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>", "using goedel_first_strong"], ["proof (prove)\nusing this:\n  \\<omega>consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\n\ngoal (1 subgoal):\n 1. \\<omega>consistent \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>", "by (intro exI[of _ \\<phi>G]) blast"], ["", "end \\<comment> \\<open>context @{locale Goedel_Form_Proofs_Minimal_Truth}\\<close>"], ["", "subsection \\<open>Second model-theoretic version\\<close>"], ["", "locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_Compl_Pf =\nGoedel_Form\n  var trm fmla Var num\n  FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  prv bprv\n  enc\n  S\n  P\n+\nMinimal_Truth_Soundness_HBL1iff_Compl_Pf\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  enc\n  prv bprv\n  P\n  isTrue\n  Pf\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand isTrue\nand P\nand Pf"], ["", "locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf =\nGoedel_Form_Minimal_Truth_Soundness_HBL1iff_Compl_Pf\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  prv bprv\n  enc\n  S\n  isTrue\n  P\n  Pf\n+\nMinimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  enc\n  prv bprv\n  P\n  isTrue\n  Pf\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand isTrue\nand P\nand Pf\n+\nassumes prv_\\<omega>consistent: \"\\<omega>consistent\""], ["", "(* Semantic Goedel's first, Goedel-style, second variant\n... established as a sublocale statement *)"], ["", "sublocale\n  Goedel_Form_Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf <\n  recover_proofs: Goedel_Form_Proofs_Minimal_Truth\n  where prfOf = prfOf and \"proof\" = \"proof\" and encPf = encPf\n  and prv = prv and bprv = bprv"], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form_Proofs_Minimal_Truth var trm fmla Var FvarsT substT Fvars\n     subst eql cnj imp all exi fls dsj num prv bprv enc S proof prfOf encPf\n     Pf isTrue", "by standard"], ["", "(* ... and here is the explicit statement, inside the locale that\nprovides all the assumptions *)"], ["", "context Goedel_Form_Minimal_Truth_Soundness_HBL1iff_Compl_Pf_Compl_NegPf begin"], ["", "thm recover_proofs.goedel_first_strong"], ["", "end"], ["", "section \\<open>Classical-Logic Versions of G?del's First\\<close>"], ["", "subsection \\<open>First classical-logic version\\<close>"], ["", "locale Goedel_Form_Classical_HBL1_rev_prv =\nGoedel_Form\n  var trm fmla Var num FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  prv bprv\n  enc\n  S\n  P\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var num FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand P\n+\nassumes\n\\<comment> \\<open>NB: we don't really need to assume classical reasoning (double negation)\nfor all formulas, but only for the provability predicate:\\<close>\nclassical_P_prv: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> let PP = (\\<lambda>t. subst P t xx) in\n  prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\"\nand\nHBL1_rev_prv: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> prv \\<phi>\"\nbegin"], ["", "lemma HBL1_rev:\n  assumes f: \"\\<phi> \\<in> fmla\" and fv: \"Fvars \\<phi> = {}\" and bp: \"bprv (PP \\<langle>\\<phi>\\<rangle>)\"\n  shows \"prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv \\<phi>", "using assms"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  bprv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by (auto intro!: HBL1_rev_prv bprv_prv[OF _ _ bp])"], ["", "lemma classical_PP_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>))) \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)", "using classical_P_prv"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (neg (neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (neg (neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     prv (neg (neg (subst P \\<langle>\\<phi>\\<rangle> xx)))\\<rbrakk>\n    \\<Longrightarrow> prv (subst P \\<langle>\\<phi>\\<rangle> xx)", "by auto"], ["", "lemma HBL1_iff: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "using HBL1 HBL1_rev"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   bprv (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}; prv ?\\<phi>\\<rbrakk>\n  \\<Longrightarrow> bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   bprv (subst P \\<langle>?\\<phi>\\<rangle> xx)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> bprv (subst P \\<langle>\\<phi>\\<rangle> xx) =\n                      prv \\<phi>", "by auto"], ["", "lemma HBL1_iff_prv: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) \\<longleftrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {}\\<rbrakk>\n    \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>) = prv \\<phi>", "by (meson HBL1_PP HBL1_rev_prv PP d_dwf.bprv_prv' enc in_num)"], ["", "lemma goedel_first_theHardHalf_pos:\nassumes \"prv (neg \\<phi>G)\"   shows \"prv fls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv fls", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. prv fls", "have \"prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))", "using assms neg_def prv_\\<phi>G_eqv prv_eqv_imp_transi_rev"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G)\n  neg ?\\<phi> = imp ?\\<phi> fls\n  prv (eqv \\<phi>G (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n  \\<lbrakk>?\\<phi>1.0 \\<in> fmla; ?\\<phi>2.0 \\<in> fmla; ?\\<chi> \\<in> fmla;\n   prv (eqv ?\\<phi>1.0 ?\\<phi>2.0); prv (imp ?\\<phi>1.0 ?\\<chi>)\\<rbrakk>\n  \\<Longrightarrow> prv (imp ?\\<phi>2.0 ?\\<chi>)\n\ngoal (1 subgoal):\n 1. prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))", "by fastforce"], ["proof (state)\nthis:\n  prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv fls", "hence \"prv (PP \\<langle>\\<phi>G\\<rangle>)\""], ["proof (prove)\nusing this:\n  prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv (PP \\<langle>\\<phi>G\\<rangle>)", "using classical_PP_prv"], ["proof (prove)\nusing this:\n  prv (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   prv (neg (neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv (PP \\<langle>\\<phi>G\\<rangle>)", "by auto"], ["proof (state)\nthis:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv fls", "hence \"prv \\<phi>G\""], ["proof (prove)\nusing this:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>G", "using Fvars_\\<phi>G HBL1_rev_prv"], ["proof (prove)\nusing this:\n  prv (PP \\<langle>\\<phi>G\\<rangle>)\n  Fvars \\<phi>G = {}\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   prv (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi>G", "by blast"], ["proof (state)\nthis:\n  prv \\<phi>G\n\ngoal (1 subgoal):\n 1. prv fls", "thus ?thesis"], ["proof (prove)\nusing this:\n  prv \\<phi>G\n\ngoal (1 subgoal):\n 1. prv fls", "using assms prv_neg_fls"], ["proof (prove)\nusing this:\n  prv \\<phi>G\n  prv (neg \\<phi>G)\n  \\<lbrakk>?\\<phi> \\<in> fmla; prv ?\\<phi>; prv (neg ?\\<phi>)\\<rbrakk>\n  \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. prv fls", "by blast"], ["proof (state)\nthis:\n  prv fls\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary goedel_first_theHardHalf:\n\"consistent \\<Longrightarrow> \\<not> prv (neg \\<phi>G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow> \\<not> prv (neg \\<phi>G)", "using goedel_first_theHardHalf_pos"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G) \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow> \\<not> prv (neg \\<phi>G)", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  prv (neg \\<phi>G) \\<Longrightarrow> prv fls\n\ngoal (1 subgoal):\n 1. \\<not> prv fls \\<Longrightarrow> \\<not> prv (neg \\<phi>G)", "by auto"], ["", "theorem goedel_first_classic:\nassumes \"consistent\"\nshows \"\\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)", "using assms goedel_first_theEasyHalf goedel_first_theHardHalf"], ["proof (prove)\nusing this:\n  consistent\n  consistent \\<Longrightarrow> \\<not> prv \\<phi>G\n  consistent \\<Longrightarrow> \\<not> prv (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)", "by blast"], ["", "theorem goedel_first_classic_ex:\nassumes \"consistent\"\nshows \"\\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)", "using assms goedel_first_classic"], ["proof (prove)\nusing this:\n  consistent\n  consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>)", "by (intro exI[of _ \\<phi>G]) blast"], ["", "end \\<comment> \\<open>context @{locale Goedel_Form_Classical_HBL1_rev_prv}\\<close>"], ["", "subsection \\<open>Second classical-logic version\\<close>"], ["", "locale Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP =\nGoedel_Form_Classical_HBL1_rev_prv\n  var trm fmla Var num FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  prv bprv\n  enc\n  S\n  P\n+\nMinimal_Truth_Soundness\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  bprv\n  isTrue\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var num FvarsT substT Fvars subst\nand eql cnj dsj imp all exi\nand fls\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand P\nand isTrue\n+\nassumes\n\\<comment>\\<open>Truth of @{term \\<phi>} implies provability (TIP) of (the internal representation of) @{term \\<phi>}\\<close>\nTIP: \"\\<And> \\<phi>. \\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow>\n  let PP = (\\<lambda>t. subst P t xx) in\n  isTrue (PP \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> prv \\<phi>\"\nbegin"], ["", "lemma TIP_PP: \"\\<phi> \\<in> fmla \\<Longrightarrow> Fvars \\<phi> = {} \\<Longrightarrow> isTrue (PP \\<langle>\\<phi>\\<rangle>) \\<Longrightarrow> prv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n    \\<Longrightarrow> prv \\<phi>", "using TIP"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in isTrue (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n    \\<Longrightarrow> prv \\<phi>", "unfolding PP_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in isTrue (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n     isTrue (subst P \\<langle>\\<phi>\\<rangle> xx)\\<rbrakk>\n    \\<Longrightarrow> prv \\<phi>", "by auto"], ["", "theorem isTrue_\\<phi>G:\n  assumes consistent\n  shows \"isTrue \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "assume \"\\<not> isTrue \\<phi>G\""], ["proof (state)\nthis:\n  \\<not> isTrue \\<phi>G\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "hence 1: \"isTrue (neg \\<phi>G)\""], ["proof (prove)\nusing this:\n  \\<not> isTrue \\<phi>G\n\ngoal (1 subgoal):\n 1. isTrue (neg \\<phi>G)", "using isTrue_neg"], ["proof (prove)\nusing this:\n  \\<not> isTrue \\<phi>G\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> isTrue ?\\<phi> \\<or> isTrue (neg ?\\<phi>)\n\ngoal (1 subgoal):\n 1. isTrue (neg \\<phi>G)", "by fastforce"], ["proof (state)\nthis:\n  isTrue (neg \\<phi>G)\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "have \"bprv (imp (neg \\<phi>G) (neg (neg (PP \\<langle>\\<phi>G\\<rangle>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bprv (imp (neg \\<phi>G) (neg (neg (PP \\<langle>\\<phi>G\\<rangle>))))", "by (auto simp add: bprv_\\<phi>G_eqv B.prv_imp_eqvER B.prv_imp_neg_rev)"], ["proof (state)\nthis:\n  bprv (imp (neg \\<phi>G) (neg (neg (PP \\<langle>\\<phi>G\\<rangle>))))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "from prv_imp_implies_isTrue[OF _ _ _ _ this 1, simplified]"], ["proof (chain)\npicking this:\n  isTrue (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))", "have \"isTrue (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\""], ["proof (prove)\nusing this:\n  isTrue (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. isTrue (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))", "."], ["proof (state)\nthis:\n  isTrue (neg (neg (PP \\<langle>\\<phi>G\\<rangle>)))\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "from isTrue_neg_neg[OF _ _ this, simplified]"], ["proof (chain)\npicking this:\n  isTrue (PP \\<langle>\\<phi>G\\<rangle>)", "have \"isTrue (PP \\<langle>\\<phi>G\\<rangle>)\""], ["proof (prove)\nusing this:\n  isTrue (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue (PP \\<langle>\\<phi>G\\<rangle>)", "."], ["proof (state)\nthis:\n  isTrue (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "hence \"prv \\<phi>G\""], ["proof (prove)\nusing this:\n  isTrue (PP \\<langle>\\<phi>G\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>G", "using assms TIP_PP"], ["proof (prove)\nusing this:\n  isTrue (PP \\<langle>\\<phi>G\\<rangle>)\n  consistent\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   isTrue (PP \\<langle>?\\<phi>\\<rangle>)\\<rbrakk>\n  \\<Longrightarrow> prv ?\\<phi>\n\ngoal (1 subgoal):\n 1. prv \\<phi>G", "by auto"], ["proof (state)\nthis:\n  prv \\<phi>G\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "hence False"], ["proof (prove)\nusing this:\n  prv \\<phi>G\n\ngoal (1 subgoal):\n 1. False", "using goedel_first_classic assms"], ["proof (prove)\nusing this:\n  prv \\<phi>G\n  consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\n  consistent\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "}"], ["proof (state)\nthis:\n  \\<not> isTrue \\<phi>G \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> isTrue \\<phi>G \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. isTrue \\<phi>G", "by auto"], ["proof (state)\nthis:\n  isTrue \\<phi>G\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem goedel_first_classic_strong: \"consistent \\<Longrightarrow> \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow>\n    \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G", "using goedel_first_classic isTrue_\\<phi>G"], ["proof (prove)\nusing this:\n  consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G)\n  consistent \\<Longrightarrow> isTrue \\<phi>G\n\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow>\n    \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G", "by simp"], ["", "theorem goedel_first_classic_strong_ex:\n\"consistent \\<Longrightarrow> \\<exists> \\<phi>. \\<phi> \\<in> fmla \\<and> \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>", "using goedel_first_classic_strong"], ["proof (prove)\nusing this:\n  consistent \\<Longrightarrow>\n  \\<not> prv \\<phi>G \\<and> \\<not> prv (neg \\<phi>G) \\<and> isTrue \\<phi>G\n\ngoal (1 subgoal):\n 1. consistent \\<Longrightarrow>\n    \\<exists>\\<phi>.\n       \\<phi> \\<in> fmla \\<and>\n       \\<not> prv \\<phi> \\<and> \\<not> prv (neg \\<phi>) \\<and> isTrue \\<phi>", "by (intro exI[of _ \\<phi>G]) blast"], ["", "end \\<comment> \\<open>context @{locale Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP}\\<close>"], ["", "subsection \\<open>Third classical-logic version\\<close>"], ["", "locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical =\nGoedel_Form\n  var trm fmla Var num FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  prv bprv\n  enc\n  S\n  P\n+\nMinimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical\n  var trm fmla Var FvarsT substT Fvars subst\n  eql cnj imp all exi\n  fls\n  dsj\n  num\n  enc\n  prv bprv\n  P\n  isTrue\n  Pf\nfor\nvar :: \"'var set\" and trm :: \"'trm set\" and fmla :: \"'fmla set\"\nand Var FvarsT substT Fvars subst\nand eql cnj imp all exi\nand fls\nand dsj\nand num\nand prv bprv\nand enc (\"\\<langle>_\\<rangle>\")\nand S\nand isTrue\nand P\nand Pf"], ["", "sublocale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical <\n  recover_proofs: Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP where prv = prv and bprv = bprv"], ["proof (prove)\ngoal (1 subgoal):\n 1. Goedel_Form_Classical_HBL1_rev_prv_Minimal_Truth_Soundness_TIP var trm\n     fmla Var num FvarsT substT Fvars subst eql cnj dsj imp all exi fls prv\n     bprv enc S P isTrue", "proof (standard, goal_cases classical rev_rpv TIPf)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n       \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        prv (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "case (classical \\<phi>)"], ["proof (state)\nthis:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx\n  in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\n\ngoal (3 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\\<rbrakk>\n       \\<Longrightarrow> prv (PP \\<langle>\\<phi>\\<rangle>)\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        prv (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>\n 3. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx\n  in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))", "show ?case"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx\n  in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\n\ngoal (1 subgoal):\n 1. prv (PP \\<langle>\\<phi>\\<rangle>)", "using HBL1_iff classical_P"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx\n  in prv (neg (neg (PP \\<langle>\\<phi>\\<rangle>)))\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> bprv (PP \\<langle>?\\<phi>\\<rangle>) = prv ?\\<phi>\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (neg (neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv (PP \\<langle>\\<phi>\\<rangle>)", "by (simp add: mts_prv_mts.PP_deff)"], ["proof (state)\nthis:\n  prv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        prv (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        prv (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "case (rev_rpv \\<phi>)"], ["proof (state)\nthis:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (2 subgoals):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        prv (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>\n 2. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv (PP \\<langle>\\<phi>\\<rangle>)", "show ?case"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "using HBL1_iff_prv PP_def"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  prv (PP \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {}\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>) = prv ?\\<phi>\n  PP \\<equiv> \\<lambda>t. subst P t xx\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by simp"], ["proof (state)\nthis:\n  prv \\<phi>\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "case (TIPf \\<phi>)"], ["proof (state)\nthis:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx in isTrue (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. \\<And>\\<phi>.\n       \\<lbrakk>\\<phi> \\<in> fmla; Fvars \\<phi> = {};\n        let PP = \\<lambda>t. subst P t xx\n        in isTrue (PP \\<langle>\\<phi>\\<rangle>)\\<rbrakk>\n       \\<Longrightarrow> prv \\<phi>", "then"], ["proof (chain)\npicking this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx in isTrue (PP \\<langle>\\<phi>\\<rangle>)", "show ?case"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx in isTrue (PP \\<langle>\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "using classical_P"], ["proof (prove)\nusing this:\n  \\<phi> \\<in> fmla\n  Fvars \\<phi> = {}\n  let PP = \\<lambda>t. subst P t xx in isTrue (PP \\<langle>\\<phi>\\<rangle>)\n  \\<lbrakk>?\\<phi> \\<in> fmla; Fvars ?\\<phi> = {};\n   let PP = \\<lambda>t. subst P t xx\n   in prv (neg (neg (PP \\<langle>?\\<phi>\\<rangle>)))\\<rbrakk>\n  \\<Longrightarrow> prv (PP \\<langle>?\\<phi>\\<rangle>)\n\ngoal (1 subgoal):\n 1. prv \\<phi>", "by (simp add: SS_def PP_def mts_prv_mts.TIP)"], ["proof (state)\nthis:\n  prv \\<phi>\n\ngoal:\nNo subgoals!", "qed"], ["", "context Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical begin"], ["", "thm recover_proofs.goedel_first_classic_strong"], ["", "end \\<comment>\\<open>context @{locale Goedel_Form_Minimal_Truth_Soundness_HBL1iff_prv_Compl_Pf_Classical}\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}