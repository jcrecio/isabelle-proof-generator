{"file_name": "/home/qj213/afp-2021-10-22/thys/LOFT/Sort_Descending.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LOFT", "problem_names": ["lemma sorted_descending_Cons: \"sorted_descending (x#xs) \\<longleftrightarrow> sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. y \\<le> x)\"", "lemma sorted_descending_tail: \"sorted_descending (xs@[x]) \\<longleftrightarrow> sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. x \\<le> y)\"", "lemma sorted_descending_append: \"sorted_descending (xs @ ys) = \n    (sorted_descending xs \\<and> sorted_descending ys \\<and> (\\<forall>x\\<in>set xs. \\<forall>y\\<in>set ys. x \\<ge> y))\"", "lemma sorted_descending: \"sorted_descending (rev xs) \\<longleftrightarrow> sorted xs\"", "lemma sorted_descending_alt: \"sorted_descending xs \\<longleftrightarrow> sorted (rev xs)\"", "lemma sort_descending: \"sorted_descending (sort_descending_key (\\<lambda>x. x) xs)\"", "lemma sort_descending_key_distinct: \"distinct xs \\<Longrightarrow> distinct (sort_descending_key f xs)\"", "lemma sorted_descending_sort_descending_key: \"sorted_descending (map f (sort_descending_key f xs))\"", "lemma sorted_descending_split: \"sorted_descending (map f l) \\<Longrightarrow> \n  \t\\<exists>m n. l = m @ n \\<and> (\\<forall>e \\<in> set m. f (hd l) = f e) \\<and> (\\<forall>e \\<in> set n. f e < f (hd l))\"", "lemma sort_descending_set_inv[simp]: \"set (sort_descending_key k t) = set t\""], "translations": [["", "lemma sorted_descending_Cons: \"sorted_descending (x#xs) \\<longleftrightarrow> sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. y \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (x # xs) =\n    (sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. y \\<le> x))", "by(induction xs) auto"], ["", "lemma sorted_descending_tail: \"sorted_descending (xs@[x]) \\<longleftrightarrow> sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. x \\<le> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (xs @ [x]) =\n    (sorted_descending xs \\<and> (\\<forall>y\\<in>set xs. x \\<le> y))", "by(induction xs) auto"], ["", "lemma sorted_descending_append: \"sorted_descending (xs @ ys) = \n    (sorted_descending xs \\<and> sorted_descending ys \\<and> (\\<forall>x\\<in>set xs. \\<forall>y\\<in>set ys. x \\<ge> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (xs @ ys) =\n    (sorted_descending xs \\<and>\n     sorted_descending ys \\<and>\n     (\\<forall>x\\<in>set xs. \\<forall>y\\<in>set ys. y \\<le> x))", "by(induction xs) auto"], ["", "lemma sorted_descending: \"sorted_descending (rev xs) \\<longleftrightarrow> sorted xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (rev xs) = sorted xs", "apply(induction xs)"], ["proof (prove)\ngoal (2 subgoals):\n 1. sorted_descending (rev []) = sorted []\n 2. \\<And>a xs.\n       sorted_descending (rev xs) = sorted xs \\<Longrightarrow>\n       sorted_descending (rev (a # xs)) = sorted (a # xs)", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a xs.\n       sorted_descending (rev xs) = sorted xs \\<Longrightarrow>\n       sorted_descending (rev (a # xs)) = sorted (a # xs)", "apply(auto simp add: sorted_descending_tail)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma sorted_descending_alt: \"sorted_descending xs \\<longleftrightarrow> sorted (rev xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending xs = sorted (rev xs)", "using sorted_descending[of \"rev xs\"]"], ["proof (prove)\nusing this:\n  sorted_descending (rev (rev xs)) = sorted (rev xs)\n\ngoal (1 subgoal):\n 1. sorted_descending xs = sorted (rev xs)", "unfolding rev_rev_ident"], ["proof (prove)\nusing this:\n  sorted_descending xs = sorted (rev xs)\n\ngoal (1 subgoal):\n 1. sorted_descending xs = sorted (rev xs)", "."], ["", "lemma sort_descending: \"sorted_descending (sort_descending_key (\\<lambda>x. x) xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (sort_descending_key (\\<lambda>x. x) xs)", "by(simp add: sort_descending_key_def sorted_descending)"], ["", "lemma sort_descending_key_distinct: \"distinct xs \\<Longrightarrow> distinct (sort_descending_key f xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> distinct (sort_descending_key f xs)", "by(simp add: sort_descending_key_def)"], ["", "lemma sorted_descending_sort_descending_key: \"sorted_descending (map f (sort_descending_key f xs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (map f (sort_descending_key f xs))", "apply(simp add: sort_descending_key_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (map f (rev (sort_key f xs)))", "using sorted_descending"], ["proof (prove)\nusing this:\n  sorted_descending (rev ?xs) = sorted ?xs\n\ngoal (1 subgoal):\n 1. sorted_descending (map f (rev (sort_key f xs)))", "by (metis rev_map sorted_sort_key)"], ["", "lemma sorted_descending_split: \"sorted_descending (map f l) \\<Longrightarrow> \n  \t\\<exists>m n. l = m @ n \\<and> (\\<forall>e \\<in> set m. f (hd l) = f e) \\<and> (\\<forall>e \\<in> set n. f e < f (hd l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_descending (map f l) \\<Longrightarrow>\n    \\<exists>m n.\n       l = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd l))", "proof(induction l)"], ["proof (state)\ngoal (2 subgoals):\n 1. sorted_descending (map f []) \\<Longrightarrow>\n    \\<exists>m n.\n       [] = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd []) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd []))\n 2. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "case Nil"], ["proof (state)\nthis:\n  sorted_descending (map f [])\n\ngoal (2 subgoals):\n 1. sorted_descending (map f []) \\<Longrightarrow>\n    \\<exists>m n.\n       [] = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd []) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd []))\n 2. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "thus ?case"], ["proof (prove)\nusing this:\n  sorted_descending (map f [])\n\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       [] = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd []) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd []))", "by simp"], ["proof (state)\nthis:\n  \\<exists>m n.\n     [] = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd []) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd []))\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "case (Cons a as)"], ["proof (state)\nthis:\n  sorted_descending (map f as) \\<Longrightarrow>\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))\n  sorted_descending (map f (a # as))\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "from Cons(2)"], ["proof (chain)\npicking this:\n  sorted_descending (map f (a # as))", "have IHm: \"sorted_descending (map f as)\""], ["proof (prove)\nusing this:\n  sorted_descending (map f (a # as))\n\ngoal (1 subgoal):\n 1. sorted_descending (map f as)", "by simp"], ["proof (state)\nthis:\n  sorted_descending (map f as)\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "note mIH = Cons(1)[OF this]"], ["proof (state)\nthis:\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>sorted_descending (map f l) \\<Longrightarrow>\n                \\<exists>m n.\n                   l = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd l) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd l));\n        sorted_descending (map f (a # l))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # l = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # l)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # l)))", "thus ?case (is ?kees)"], ["proof (prove)\nusing this:\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))\n\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "proof(cases as)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>m n.\n                as = m @ n \\<and>\n                (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                (\\<forall>e\\<in>set n. f e < f (hd as));\n     as = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m n.\n                         a # as = m @ n \\<and>\n                         (\\<forall>e\\<in>set m.\n                             f (hd (a # as)) = f e) \\<and>\n                         (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. \\<And>aa list.\n       \\<lbrakk>\\<exists>m n.\n                   as = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd as));\n        as = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # as = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # as)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "case Nil"], ["proof (state)\nthis:\n  as = []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<exists>m n.\n                as = m @ n \\<and>\n                (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                (\\<forall>e\\<in>set n. f e < f (hd as));\n     as = []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>m n.\n                         a # as = m @ n \\<and>\n                         (\\<forall>e\\<in>set m.\n                             f (hd (a # as)) = f e) \\<and>\n                         (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. \\<And>aa list.\n       \\<lbrakk>\\<exists>m n.\n                   as = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd as));\n        as = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # as = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # as)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "show ?kees"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "unfolding Nil"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       [a] = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd [a]) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd [a]))", "by force"], ["proof (state)\nthis:\n  \\<exists>m n.\n     a # as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<exists>m n.\n                   as = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd as));\n        as = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # as = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # as)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<exists>m n.\n                   as = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd as));\n        as = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # as = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # as)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "case (Cons aa ass)"], ["proof (state)\nthis:\n  as = aa # ass\n\ngoal (1 subgoal):\n 1. \\<And>aa list.\n       \\<lbrakk>\\<exists>m n.\n                   as = m @ n \\<and>\n                   (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n                   (\\<forall>e\\<in>set n. f e < f (hd as));\n        as = aa # list\\<rbrakk>\n       \\<Longrightarrow> \\<exists>m n.\n                            a # as = m @ n \\<and>\n                            (\\<forall>e\\<in>set m.\n                                f (hd (a # as)) = f e) \\<and>\n                            (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "show ?kees"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "proof(cases \"f a = f aa\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "case True"], ["proof (state)\nthis:\n  f a = f aa\n\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "from mIH"], ["proof (chain)\npicking this:\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))", "obtain m n where mn: \"as = m @ n\" \"(\\<forall>e\\<in>set m. f a = f e)\" \"(\\<forall>e\\<in>set n. f e < f a)\""], ["proof (prove)\nusing this:\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>as = m @ n; \\<forall>e\\<in>set m. f a = f e;\n         \\<forall>e\\<in>set n. f e < f a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using True local.Cons"], ["proof (prove)\nusing this:\n  \\<exists>m n.\n     as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd as) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd as))\n  f a = f aa\n  as = aa # ass\n\ngoal (1 subgoal):\n 1. (\\<And>m n.\n        \\<lbrakk>as = m @ n; \\<forall>e\\<in>set m. f a = f e;\n         \\<forall>e\\<in>set n. f e < f a\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  as = m @ n\n  \\<forall>e\\<in>set m. f a = f e\n  \\<forall>e\\<in>set n. f e < f a\n\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "have \"a # as = a # m @ n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a # as = a # m @ n", "using mn(1)"], ["proof (prove)\nusing this:\n  as = m @ n\n\ngoal (1 subgoal):\n 1. a # as = a # m @ n", "by simp"], ["proof (state)\nthis:\n  a # as = a # m @ n\n\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "moreover"], ["proof (state)\nthis:\n  a # as = a # m @ n\n\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "have \"\\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e", "unfolding list.sel(1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set (a # m). f a = f e", "using True mn(2)"], ["proof (prove)\nusing this:\n  f a = f aa\n  \\<forall>e\\<in>set m. f a = f e\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set (a # m). f a = f e", "using Cons"], ["proof (prove)\nusing this:\n  f a = f aa\n  \\<forall>e\\<in>set m. f a = f e\n  as = aa # ass\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set (a # m). f a = f e", "by auto"], ["proof (state)\nthis:\n  \\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e\n\ngoal (2 subgoals):\n 1. f a = f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n 2. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "ultimately"], ["proof (chain)\npicking this:\n  a # as = a # m @ n\n  \\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e", "show \"\\<exists>m n. a # as = m @ n \\<and> (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and> \n  \t\t\t\t(\\<forall>e\\<in>set n. f e < f (hd (a # as)))\""], ["proof (prove)\nusing this:\n  a # as = a # m @ n\n  \\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e\n\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "using mn(3)"], ["proof (prove)\nusing this:\n  a # as = a # m @ n\n  \\<forall>e\\<in>set (a # m). f (hd (a # m)) = f e\n  \\<forall>e\\<in>set n. f e < f a\n\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "by (metis append.simps(2) list.sel(1))"], ["proof (state)\nthis:\n  \\<exists>m n.\n     a # as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "case False"], ["proof (state)\nthis:\n  f a \\<noteq> f aa\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "from Cons.prems"], ["proof (chain)\npicking this:\n  sorted_descending (map f (a # as))", "have \"\\<forall>y\\<in>set (map f as). y < f a\""], ["proof (prove)\nusing this:\n  sorted_descending (map f (a # as))\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (map f as). y < f a", "unfolding list.map(2)"], ["proof (prove)\nusing this:\n  sorted_descending (f a # map f as)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (map f as). y < f a", "unfolding sorted_descending_Cons"], ["proof (prove)\nusing this:\n  sorted_descending (map f as) \\<and>\n  (\\<forall>y\\<in>set (map f as). y \\<le> f a)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (map f as). y < f a", "unfolding set_map"], ["proof (prove)\nusing this:\n  sorted_descending (map f as) \\<and>\n  (\\<forall>y\\<in>f ` set as. y \\<le> f a)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>f ` set as. y < f a", "unfolding local.Cons"], ["proof (prove)\nusing this:\n  sorted_descending (map f (aa # ass)) \\<and>\n  (\\<forall>y\\<in>f ` set (aa # ass). y \\<le> f a)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>f ` set (aa # ass). y < f a", "using False"], ["proof (prove)\nusing this:\n  sorted_descending (map f (aa # ass)) \\<and>\n  (\\<forall>y\\<in>f ` set (aa # ass). y \\<le> f a)\n  f a \\<noteq> f aa\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>f ` set (aa # ass). y < f a", "by auto"], ["proof (state)\nthis:\n  \\<forall>y\\<in>set (map f as). y < f a\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "then"], ["proof (chain)\npicking this:\n  \\<forall>y\\<in>set (map f as). y < f a", "have \"\\<forall>e\\<in>set as. f e < f a\""], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>set (map f as). y < f a\n\ngoal (1 subgoal):\n 1. \\<forall>e\\<in>set as. f e < f a", "by simp"], ["proof (state)\nthis:\n  \\<forall>e\\<in>set as. f e < f a\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "moreover"], ["proof (state)\nthis:\n  \\<forall>e\\<in>set as. f e < f a\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "have \"a # as = [a] @ as \\<and> (\\<forall>e\\<in>set [a]. f (hd [a]) = f e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a # as = [a] @ as \\<and> (\\<forall>e\\<in>set [a]. f (hd [a]) = f e)", "by simp"], ["proof (state)\nthis:\n  a # as = [a] @ as \\<and> (\\<forall>e\\<in>set [a]. f (hd [a]) = f e)\n\ngoal (1 subgoal):\n 1. f a \\<noteq> f aa \\<Longrightarrow>\n    \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>e\\<in>set as. f e < f a\n  a # as = [a] @ as \\<and> (\\<forall>e\\<in>set [a]. f (hd [a]) = f e)", "show ?kees"], ["proof (prove)\nusing this:\n  \\<forall>e\\<in>set as. f e < f a\n  a # as = [a] @ as \\<and> (\\<forall>e\\<in>set [a]. f (hd [a]) = f e)\n\ngoal (1 subgoal):\n 1. \\<exists>m n.\n       a # as = m @ n \\<and>\n       (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n       (\\<forall>e\\<in>set n. f e < f (hd (a # as)))", "by (metis list.sel(1))"], ["proof (state)\nthis:\n  \\<exists>m n.\n     a # as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m n.\n     a # as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m n.\n     a # as = m @ n \\<and>\n     (\\<forall>e\\<in>set m. f (hd (a # as)) = f e) \\<and>\n     (\\<forall>e\\<in>set n. f e < f (hd (a # as)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sort_descending_set_inv[simp]: \"set (sort_descending_key k t) = set t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sort_descending_key k t) = set t", "by (simp add: sort_descending_key_def)"], ["", "end"]]}