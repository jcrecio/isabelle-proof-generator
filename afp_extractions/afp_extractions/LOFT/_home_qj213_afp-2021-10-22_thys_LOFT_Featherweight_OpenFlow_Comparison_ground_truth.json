{"file_name": "/home/qj213/afp-2021-10-22/thys/LOFT/Featherweight_OpenFlow_Comparison.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LOFT", "problem_names": ["lemma guha_table_semantics_ex2res:\n    assumes ta: \"CARD('a) \\<ge> 2\" (* if there's only one action, the whole thing is moot. *)\n\tassumes ms: \"\\<exists>ff. \\<gamma> ff p\" (* if our matcher rejects the packet for any match condition, it is borked. *)\n\tshows \"\\<exists>ft (a1 :: 'a) (a2 :: 'a). a1 \\<noteq> a2 \\<and> guha_table_semantics \\<gamma> ft p (Some a1) \\<and> guha_table_semantics \\<gamma> ft p (Some a2)\"", "lemma guha_umstaendlich: (* or maybe it's Coq where the original formulation is more beneficial *)\n\tassumes ae: \"a = ofe_action fe\"\n\tassumes ele: \"fe \\<in> set ft\"\n\tassumes rest: \"\\<gamma> (ofe_fields fe) p\" \n\t              \"\\<forall>fe' \\<in> set ft. ofe_prio fe' > ofe_prio fe \\<longrightarrow> \\<not>\\<gamma> (ofe_fields fe') p\"\n \tshows \"guha_table_semantics \\<gamma> ft p (Some a)\"", "lemma guha_matched_rule_inversion:\n\tassumes \"guha_table_semantics \\<gamma> ft p (Some a)\"\n\tshows \"\\<exists>fe \\<in> set ft. a = ofe_action fe \\<and> \\<gamma> (ofe_fields fe) p \\<and> (\\<forall>fe' \\<in> set ft. ofe_prio fe' > ofe_prio fe \\<longrightarrow> \\<not>\\<gamma> (ofe_fields fe') p)\"", "lemma guha_equal_Action:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tassumes spm: \"OF_priority_match \\<gamma> ft p = Action a\"\n\tshows \"guha_table_semantics \\<gamma> ft p (Some a)\"", "lemma guha_equal_NoAction:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tassumes spm: \"OF_priority_match \\<gamma> ft p = NoAction\"\n\tshows \"guha_table_semantics \\<gamma> ft p None\"", "lemma guha_equal_hlp:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tshows \"guha_table_semantics \\<gamma> ft p (ftb_to_option (OF_priority_match \\<gamma> ft p))\"", "lemma guha_deterministic1: \"guha_table_semantics \\<gamma> ft p (Some x1) \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\"", "lemma guha_deterministic2: \"\\<lbrakk>no_overlaps \\<gamma> ft; guha_table_semantics \\<gamma> ft p (Some x1); guha_table_semantics \\<gamma> ft p (Some a)\\<rbrakk> \\<Longrightarrow> x1 = a\"", "lemma guha_equal:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tshows \"OF_priority_match \\<gamma> ft p = option_to_ftb d \\<longleftrightarrow> guha_table_semantics \\<gamma> ft p d\"", "lemma guha_nondeterministicD:\n\tassumes \"\\<not>check_no_overlap \\<gamma> ft\"\n\tshows \"\\<exists>fe1 fe2 p. fe1 \\<in> set ft \\<and> fe2 \\<in> set ft\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1))\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2))\"", "lemma\n  assumes \"CARD('action) \\<ge> 3\"\n  assumes \"\\<forall>p. \\<gamma> x p\" (* with a sane \\<gamma>, x = {} *)\n\tshows \"\\<exists>ft::('a, 'action) flow_entry_match list. \\<not>check_no_overlap \\<gamma> ft \\<and>\n\t  \\<not>(\\<exists>fe1 fe2 p. fe1 \\<in> set ft \\<and> fe2 \\<in> set ft \\<and> fe1 \\<noteq> fe2 \\<and> ofe_prio fe1 = ofe_prio fe2\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1))\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))\""], "translations": [["", "lemma guha_table_semantics_ex2res:\n    assumes ta: \"CARD('a) \\<ge> 2\" (* if there's only one action, the whole thing is moot. *)\n\tassumes ms: \"\\<exists>ff. \\<gamma> ff p\" (* if our matcher rejects the packet for any match condition, it is borked. *)\n\tshows \"\\<exists>ft (a1 :: 'a) (a2 :: 'a). a1 \\<noteq> a2 \\<and> guha_table_semantics \\<gamma> ft p (Some a1) \\<and> guha_table_semantics \\<gamma> ft p (Some a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "from ms"], ["proof (chain)\npicking this:\n  \\<exists>ff. \\<gamma> ff p", "obtain ff  where m: \"\\<gamma> ff p\""], ["proof (prove)\nusing this:\n  \\<exists>ff. \\<gamma> ff p\n\ngoal (1 subgoal):\n 1. (\\<And>ff. \\<gamma> ff p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<gamma> ff p\n\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "from ta"], ["proof (chain)\npicking this:\n  2 \\<le> CARD('a)", "obtain a1 a2 :: 'a where as: \"a1 \\<noteq> a2\""], ["proof (prove)\nusing this:\n  2 \\<le> CARD('a)\n\ngoal (1 subgoal):\n 1. (\\<And>a1 a2. a1 \\<noteq> a2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using card2_eI"], ["proof (prove)\nusing this:\n  2 \\<le> CARD('a)\n  2 \\<le> card ?S \\<Longrightarrow>\n  \\<exists>x y. x \\<noteq> y \\<and> x \\<in> ?S \\<and> y \\<in> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>a1 a2. a1 \\<noteq> a2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a1 \\<noteq> a2\n\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "let ?fe1 = \"OFEntry 0 ff a1\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "let ?fe2 = \"OFEntry 0 ff a2\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "let ?ft = \"[?fe1, ?fe2]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "have \"guha_table_semantics \\<gamma> ?ft p (Some a1)\" \"guha_table_semantics \\<gamma> ?ft p (Some a2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n     (Some a1) &&&\n    guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n     (Some a2)", "by(rule guha_table_semantics.intros(1)[of \\<gamma> ?fe1 p \"[]\" \"[?fe2]\", unfolded append_Nil flow_entry_match.sel] | \n\t   rule guha_table_semantics.intros(1)[of \\<gamma> ?fe2 p \"[?fe1]\" \"[]\", unfolded append_Nil2 flow_entry_match.sel append.simps] |\n\t   simp add: m)+"], ["proof (state)\nthis:\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a1)\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a2)\n\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a1)\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a2)\n\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "using as"], ["proof (prove)\nusing this:\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a1)\n  guha_table_semantics \\<gamma> [OFEntry 0 ff a1, OFEntry 0 ff a2] p\n   (Some a2)\n  a1 \\<noteq> a2\n\ngoal (1 subgoal):\n 1. \\<exists>ft a1 a2.\n       a1 \\<noteq> a2 \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some a2)", "by(intro exI conjI)"], ["proof (state)\nthis:\n  \\<exists>ft a1 a2.\n     a1 \\<noteq> a2 \\<and>\n     guha_table_semantics \\<gamma> ft p (Some a1) \\<and>\n     guha_table_semantics \\<gamma> ft p (Some a2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma guha_umstaendlich: (* or maybe it's Coq where the original formulation is more beneficial *)\n\tassumes ae: \"a = ofe_action fe\"\n\tassumes ele: \"fe \\<in> set ft\"\n\tassumes rest: \"\\<gamma> (ofe_fields fe) p\" \n\t              \"\\<forall>fe' \\<in> set ft. ofe_prio fe' > ofe_prio fe \\<longrightarrow> \\<not>\\<gamma> (ofe_fields fe') p\"\n \tshows \"guha_table_semantics \\<gamma> ft p (Some a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "from ele"], ["proof (chain)\npicking this:\n  fe \\<in> set ft", "obtain ft1 ft2 where ftspl: \"ft = ft1 @ fe # ft2\""], ["proof (prove)\nusing this:\n  fe \\<in> set ft\n\ngoal (1 subgoal):\n 1. (\\<And>ft1 ft2.\n        ft = ft1 @ fe # ft2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using split_list"], ["proof (prove)\nusing this:\n  fe \\<in> set ft\n  ?x \\<in> set ?xs \\<Longrightarrow> \\<exists>ys zs. ?xs = ys @ ?x # zs\n\ngoal (1 subgoal):\n 1. (\\<And>ft1 ft2.\n        ft = ft1 @ fe # ft2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  ft = ft1 @ fe # ft2\n\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "unfolding ae ftspl"], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> (ft1 @ fe # ft2) p (Some (ofe_action fe))", "apply(rule guha_table_semantics.intros(1))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<gamma> (ofe_fields fe) p = True\n 2. \\<forall>fe'\\<in>set (ft1 @ ft2).\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<gamma> (ofe_fields fe') p = False", "using rest(1)"], ["proof (prove)\nusing this:\n  \\<gamma> (ofe_fields fe) p\n\ngoal (2 subgoals):\n 1. \\<gamma> (ofe_fields fe) p = True\n 2. \\<forall>fe'\\<in>set (ft1 @ ft2).\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<gamma> (ofe_fields fe') p = False", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>fe'\\<in>set (ft1 @ ft2).\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<gamma> (ofe_fields fe') p = False", "using rest(2)[unfolded ftspl]"], ["proof (prove)\nusing this:\n  \\<forall>fe'\\<in>set (ft1 @ fe # ft2).\n     ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n     \\<not> \\<gamma> (ofe_fields fe') p\n\ngoal (1 subgoal):\n 1. \\<forall>fe'\\<in>set (ft1 @ ft2).\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<gamma> (ofe_fields fe') p = False", "apply simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  guha_table_semantics \\<gamma> ft p (Some a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma guha_matched_rule_inversion:\n\tassumes \"guha_table_semantics \\<gamma> ft p (Some a)\"\n\tshows \"\\<exists>fe \\<in> set ft. a = ofe_action fe \\<and> \\<gamma> (ofe_fields fe) p \\<and> (\\<forall>fe' \\<in> set ft. ofe_prio fe' > ofe_prio fe \\<longrightarrow> \\<not>\\<gamma> (ofe_fields fe') p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "assume \"guha_table_semantics \\<gamma> ft p d\""], ["proof (state)\nthis:\n  guha_table_semantics \\<gamma> ft p d\n\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "hence \"Some a = d \\<Longrightarrow> (\\<exists>fe \\<in> set ft. a = ofe_action fe \\<and> \\<gamma> (ofe_fields fe) p \\<and> (\\<forall>fe' \\<in> set ft. ofe_prio fe' > ofe_prio fe \\<longrightarrow> \\<not>\\<gamma> (ofe_fields fe') p))\""], ["proof (prove)\nusing this:\n  guha_table_semantics \\<gamma> ft p d\n\ngoal (1 subgoal):\n 1. Some a = d \\<Longrightarrow>\n    \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "by(induction rule: guha_table_semantics.induct) simp_all"], ["proof (state)\nthis:\n  Some a = d \\<Longrightarrow>\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "(* strange to show this by induction, but I don't see an exhaust or cases I could use. *)"], ["proof (state)\nthis:\n  Some a = d \\<Longrightarrow>\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>guha_table_semantics \\<gamma> ft p ?d2; Some a = ?d2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>fe\\<in>set ft.\n                       a = ofe_action fe \\<and>\n                       \\<gamma> (ofe_fields fe) p \\<and>\n                       (\\<forall>fe'\\<in>set ft.\n                           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n                           \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "from this[OF assms refl]"], ["proof (chain)\npicking this:\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. \\<exists>fe\\<in>set ft.\n       a = ofe_action fe \\<and>\n       \\<gamma> (ofe_fields fe) p \\<and>\n       (\\<forall>fe'\\<in>set ft.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p)", "."], ["proof (state)\nthis:\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma guha_equal_Action:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tassumes spm: \"OF_priority_match \\<gamma> ft p = Action a\"\n\tshows \"guha_table_semantics \\<gamma> ft p (Some a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "note spm[THEN OF_spm3_get_fe]"], ["proof (state)\nthis:\n  \\<exists>fe.\n     ofe_action fe = a \\<and>\n     fe \\<in> set ft \\<and> OF_priority_match_ana \\<gamma> ft p = Action fe\n\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "then"], ["proof (chain)\npicking this:\n  \\<exists>fe.\n     ofe_action fe = a \\<and>\n     fe \\<in> set ft \\<and> OF_priority_match_ana \\<gamma> ft p = Action fe", "obtain fe where a: \"ofe_action fe = a\" and fein: \"fe \\<in> set ft\" and feana: \"OF_priority_match_ana \\<gamma> ft p = Action fe\""], ["proof (prove)\nusing this:\n  \\<exists>fe.\n     ofe_action fe = a \\<and>\n     fe \\<in> set ft \\<and> OF_priority_match_ana \\<gamma> ft p = Action fe\n\ngoal (1 subgoal):\n 1. (\\<And>fe.\n        \\<lbrakk>ofe_action fe = a; fe \\<in> set ft;\n         OF_priority_match_ana \\<gamma> ft p = Action fe\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ofe_action fe = a\n  fe \\<in> set ft\n  OF_priority_match_ana \\<gamma> ft p = Action fe\n\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some a)", "apply(rule guha_umstaendlich)"], ["proof (prove)\ngoal (4 subgoals):\n 1. a = ofe_action ?fe\n 2. ?fe \\<in> set ft\n 3. \\<gamma> (ofe_fields ?fe) p\n 4. \\<forall>fe'\\<in>set ft.\n       ofe_prio ?fe < ofe_prio fe' \\<longrightarrow>\n       \\<not> \\<gamma> (ofe_fields fe') p", "apply(rule a[symmetric])"], ["proof (prove)\ngoal (3 subgoals):\n 1. fe \\<in> set ft\n 2. \\<gamma> (ofe_fields fe) p\n 3. \\<forall>fe'\\<in>set ft.\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<not> \\<gamma> (ofe_fields fe') p", "apply(rule fein)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<gamma> (ofe_fields fe) p\n 2. \\<forall>fe'\\<in>set ft.\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<not> \\<gamma> (ofe_fields fe') p", "using feana"], ["proof (prove)\nusing this:\n  OF_priority_match_ana \\<gamma> ft p = Action fe\n\ngoal (2 subgoals):\n 1. \\<gamma> (ofe_fields fe) p\n 2. \\<forall>fe'\\<in>set ft.\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<not> \\<gamma> (ofe_fields fe') p", "unfolding OF_priority_match_ana_def"], ["proof (prove)\nusing this:\n  (let m = filter (\\<lambda>f. \\<gamma> (ofe_fields f) p) ft;\n       m' = filter\n             (\\<lambda>f.\n                 \\<forall>fo\\<in>set m. ofe_prio fo \\<le> ofe_prio f)\n             m\n   in case m' of [] \\<Rightarrow> NoAction | [s] \\<Rightarrow> Action s\n      | s # aa # lista \\<Rightarrow> Undefined) =\n  Action fe\n\ngoal (2 subgoals):\n 1. \\<gamma> (ofe_fields fe) p\n 2. \\<forall>fe'\\<in>set ft.\n       ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n       \\<not> \\<gamma> (ofe_fields fe') p", "apply(auto dest!: filter_singleton split: list.splits)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  guha_table_semantics \\<gamma> ft p (Some a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma guha_equal_NoAction:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tassumes spm: \"OF_priority_match \\<gamma> ft p = NoAction\"\n\tshows \"guha_table_semantics \\<gamma> ft p None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p None", "using spm"], ["proof (prove)\nusing this:\n  OF_priority_match \\<gamma> ft p = NoAction\n\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p None", "unfolding OF_priority_match_def"], ["proof (prove)\nusing this:\n  (let m = filter (\\<lambda>f. \\<gamma> (ofe_fields f) p) ft;\n       m' = filter\n             (\\<lambda>f.\n                 \\<forall>fo\\<in>set m. ofe_prio fo \\<le> ofe_prio f)\n             m\n   in case m' of [] \\<Rightarrow> NoAction\n      | [s] \\<Rightarrow> Action (ofe_action s)\n      | s # aa # lista \\<Rightarrow> Undefined) =\n  NoAction\n\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p None", "by(auto simp add: filter_empty_conv OF_spm3_noa_none[OF no spm] intro: guha_table_semantics.intros(2) split: list.splits)"], ["", "lemma guha_equal_hlp:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tshows \"guha_table_semantics \\<gamma> ft p (ftb_to_option (OF_priority_match \\<gamma> ft p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p\n     (ftb_to_option (OF_priority_match \\<gamma> ft p))", "unfolding ftb_to_option_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)", "apply(cases \"(OF_priority_match \\<gamma> ft p)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x1.\n       OF_priority_match \\<gamma> ft p = Action x1 \\<Longrightarrow>\n       guha_table_semantics \\<gamma> ft p\n        (case OF_priority_match \\<gamma> ft p of\n         Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None)\n 2. OF_priority_match \\<gamma> ft p = NoAction \\<Longrightarrow>\n    guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)\n 3. OF_priority_match \\<gamma> ft p = Undefined \\<Longrightarrow>\n    guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)", "apply(simp add: guha_equal_Action[OF no])"], ["proof (prove)\ngoal (2 subgoals):\n 1. OF_priority_match \\<gamma> ft p = NoAction \\<Longrightarrow>\n    guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)\n 2. OF_priority_match \\<gamma> ft p = Undefined \\<Longrightarrow>\n    guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)", "apply(simp add: guha_equal_NoAction[OF no])"], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_priority_match \\<gamma> ft p = Undefined \\<Longrightarrow>\n    guha_table_semantics \\<gamma> ft p\n     (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n      | NoAction \\<Rightarrow> None)", "apply(subgoal_tac False, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_priority_match \\<gamma> ft p = Undefined \\<Longrightarrow> False", "apply(simp add: no no_overlaps_not_unefined)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma guha_deterministic1: \"guha_table_semantics \\<gamma> ft p (Some x1) \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma> ft p (Some x1) \\<Longrightarrow>\n    \\<not> guha_table_semantics \\<gamma> ft p None", "by(auto simp add: guha_table_semantics.simps)"], ["", "lemma guha_deterministic2: \"\\<lbrakk>no_overlaps \\<gamma> ft; guha_table_semantics \\<gamma> ft p (Some x1); guha_table_semantics \\<gamma> ft p (Some a)\\<rbrakk> \\<Longrightarrow> x1 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a)\\<rbrakk>\n    \\<Longrightarrow> x1 = a", "proof(rule ccontr, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "case 1"], ["proof (state)\nthis:\n  no_overlaps \\<gamma> ft\n  guha_table_semantics \\<gamma> ft p (Some x1)\n  guha_table_semantics \\<gamma> ft p (Some a)\n  x1 \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "note 1(2-3)[THEN guha_matched_rule_inversion]"], ["proof (state)\nthis:\n  \\<exists>fe\\<in>set ft.\n     x1 = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>fe\\<in>set ft.\n     x1 = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)", "obtain fe1 fe2 where fes:\n\t\"fe1\\<in>set ft\" \"x1 = ofe_action fe1\" \"\\<gamma> (ofe_fields fe1) p\" \"(\\<forall>fe'\\<in>set ft. ofe_prio fe1 < ofe_prio fe' \\<longrightarrow> \\<not> \\<gamma> (ofe_fields fe') p)\"\n    \"fe2\\<in>set ft\" \"a  = ofe_action fe2\" \"\\<gamma> (ofe_fields fe2) p\" \"(\\<forall>fe'\\<in>set ft. ofe_prio fe2 < ofe_prio fe' \\<longrightarrow> \\<not> \\<gamma> (ofe_fields fe') p)\""], ["proof (prove)\nusing this:\n  \\<exists>fe\\<in>set ft.\n     x1 = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n  \\<exists>fe\\<in>set ft.\n     a = ofe_action fe \\<and>\n     \\<gamma> (ofe_fields fe) p \\<and>\n     (\\<forall>fe'\\<in>set ft.\n         ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n         \\<not> \\<gamma> (ofe_fields fe') p)\n\ngoal (1 subgoal):\n 1. (\\<And>fe1 fe2.\n        \\<lbrakk>fe1 \\<in> set ft; x1 = ofe_action fe1;\n         \\<gamma> (ofe_fields fe1) p;\n         \\<forall>fe'\\<in>set ft.\n            ofe_prio fe1 < ofe_prio fe' \\<longrightarrow>\n            \\<not> \\<gamma> (ofe_fields fe') p;\n         fe2 \\<in> set ft; a = ofe_action fe2; \\<gamma> (ofe_fields fe2) p;\n         \\<forall>fe'\\<in>set ft.\n            ofe_prio fe2 < ofe_prio fe' \\<longrightarrow>\n            \\<not> \\<gamma> (ofe_fields fe') p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  fe1 \\<in> set ft\n  x1 = ofe_action fe1\n  \\<gamma> (ofe_fields fe1) p\n  \\<forall>fe'\\<in>set ft.\n     ofe_prio fe1 < ofe_prio fe' \\<longrightarrow>\n     \\<not> \\<gamma> (ofe_fields fe') p\n  fe2 \\<in> set ft\n  a = ofe_action fe2\n  \\<gamma> (ofe_fields fe2) p\n  \\<forall>fe'\\<in>set ft.\n     ofe_prio fe2 < ofe_prio fe' \\<longrightarrow>\n     \\<not> \\<gamma> (ofe_fields fe') p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "from \\<open>x1 \\<noteq> a\\<close>"], ["proof (chain)\npicking this:\n  x1 \\<noteq> a", "have fene: \"fe1 \\<noteq> fe2\""], ["proof (prove)\nusing this:\n  x1 \\<noteq> a\n\ngoal (1 subgoal):\n 1. fe1 \\<noteq> fe2", "using fes(2,6)"], ["proof (prove)\nusing this:\n  x1 \\<noteq> a\n  x1 = ofe_action fe1\n  a = ofe_action fe2\n\ngoal (1 subgoal):\n 1. fe1 \\<noteq> fe2", "by blast"], ["proof (state)\nthis:\n  fe1 \\<noteq> fe2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "have pe: \"ofe_prio fe1 = ofe_prio fe2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ofe_prio fe1 = ofe_prio fe2", "using fes(1,3-4,5,7-8) less_linear"], ["proof (prove)\nusing this:\n  fe1 \\<in> set ft\n  \\<gamma> (ofe_fields fe1) p\n  \\<forall>fe'\\<in>set ft.\n     ofe_prio fe1 < ofe_prio fe' \\<longrightarrow>\n     \\<not> \\<gamma> (ofe_fields fe') p\n  fe2 \\<in> set ft\n  \\<gamma> (ofe_fields fe2) p\n  \\<forall>fe'\\<in>set ft.\n     ofe_prio fe2 < ofe_prio fe' \\<longrightarrow>\n     \\<not> \\<gamma> (ofe_fields fe') p\n  ?x < ?y \\<or> ?x = ?y \\<or> ?y < ?x\n\ngoal (1 subgoal):\n 1. ofe_prio fe1 = ofe_prio fe2", "by blast"], ["proof (state)\nthis:\n  ofe_prio fe1 = ofe_prio fe2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "note \\<open>no_overlaps \\<gamma> ft\\<close>[THEN check_no_overlapI, unfolded check_no_overlap_def]"], ["proof (state)\nthis:\n  \\<forall>a\\<in>set ft.\n     \\<forall>b\\<in>set ft.\n        \\<forall>p\\<in>UNIV.\n           ofe_prio a = ofe_prio b \\<and>\n           \\<gamma> (ofe_fields a) p \\<and> a \\<noteq> b \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields b) p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "note this[unfolded Ball_def, THEN spec, THEN mp, OF fes(1), THEN spec, THEN mp, OF fes(5),THEN spec, THEN mp, OF UNIV_I, of p] pe fene fes(3,7)"], ["proof (state)\nthis:\n  ofe_prio fe1 = ofe_prio fe2 \\<and>\n  \\<gamma> (ofe_fields fe1) p \\<and> fe1 \\<noteq> fe2 \\<longrightarrow>\n  \\<not> \\<gamma> (ofe_fields fe2) p\n  ofe_prio fe1 = ofe_prio fe2\n  fe1 \\<noteq> fe2\n  \\<gamma> (ofe_fields fe1) p\n  \\<gamma> (ofe_fields fe2) p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>no_overlaps \\<gamma> ft;\n     guha_table_semantics \\<gamma> ft p (Some x1);\n     guha_table_semantics \\<gamma> ft p (Some a); x1 \\<noteq> a\\<rbrakk>\n    \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  ofe_prio fe1 = ofe_prio fe2 \\<and>\n  \\<gamma> (ofe_fields fe1) p \\<and> fe1 \\<noteq> fe2 \\<longrightarrow>\n  \\<not> \\<gamma> (ofe_fields fe2) p\n  ofe_prio fe1 = ofe_prio fe2\n  fe1 \\<noteq> fe2\n  \\<gamma> (ofe_fields fe1) p\n  \\<gamma> (ofe_fields fe2) p\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma guha_equal:\n\tassumes no: \"no_overlaps \\<gamma> ft\"\n\tshows \"OF_priority_match \\<gamma> ft p = option_to_ftb d \\<longleftrightarrow> guha_table_semantics \\<gamma> ft p d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (OF_priority_match \\<gamma> ft p = option_to_ftb d) =\n    guha_table_semantics \\<gamma> ft p d", "using guha_equal_hlp[OF no, of p]"], ["proof (prove)\nusing this:\n  guha_table_semantics \\<gamma> ft p\n   (ftb_to_option (OF_priority_match \\<gamma> ft p))\n\ngoal (1 subgoal):\n 1. (OF_priority_match \\<gamma> ft p = option_to_ftb d) =\n    guha_table_semantics \\<gamma> ft p d", "unfolding ftb_to_option_def option_to_ftb_def"], ["proof (prove)\nusing this:\n  guha_table_semantics \\<gamma> ft p\n   (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n    | NoAction \\<Rightarrow> None)\n\ngoal (1 subgoal):\n 1. (OF_priority_match \\<gamma> ft p =\n     (case d of None \\<Rightarrow> NoAction\n      | Some a \\<Rightarrow> Action a)) =\n    guha_table_semantics \\<gamma> ft p d", "apply(cases \"OF_priority_match \\<gamma> ft p\"; cases d)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p\n                 (case OF_priority_match \\<gamma> ft p of\n                  Action a \\<Rightarrow> Some a\n                  | NoAction \\<Rightarrow> None);\n        OF_priority_match \\<gamma> ft p = Action x1;\n        guha_table_semantics \\<gamma> ft p\n         (case OF_priority_match \\<gamma> ft p of\n          Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n        d = None\\<rbrakk>\n       \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                          (case d of None \\<Rightarrow> NoAction\n                           | Some a \\<Rightarrow> Action a)) =\n                         guha_table_semantics \\<gamma> ft p d\n 2. \\<And>x1 a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p\n                 (case OF_priority_match \\<gamma> ft p of\n                  Action a \\<Rightarrow> Some a\n                  | NoAction \\<Rightarrow> None);\n        OF_priority_match \\<gamma> ft p = Action x1;\n        guha_table_semantics \\<gamma> ft p\n         (case OF_priority_match \\<gamma> ft p of\n          Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n        d = Some a\\<rbrakk>\n       \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                          (case d of None \\<Rightarrow> NoAction\n                           | Some a \\<Rightarrow> Action a)) =\n                         guha_table_semantics \\<gamma> ft p d\n 3. \\<lbrakk>guha_table_semantics \\<gamma> ft p\n              (case OF_priority_match \\<gamma> ft p of\n               Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n     OF_priority_match \\<gamma> ft p = NoAction;\n     guha_table_semantics \\<gamma> ft p\n      (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n       | NoAction \\<Rightarrow> None);\n     d = None\\<rbrakk>\n    \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                       (case d of None \\<Rightarrow> NoAction\n                        | Some a \\<Rightarrow> Action a)) =\n                      guha_table_semantics \\<gamma> ft p d\n 4. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p\n                 (case OF_priority_match \\<gamma> ft p of\n                  Action a \\<Rightarrow> Some a\n                  | NoAction \\<Rightarrow> None);\n        OF_priority_match \\<gamma> ft p = NoAction;\n        guha_table_semantics \\<gamma> ft p\n         (case OF_priority_match \\<gamma> ft p of\n          Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n        d = Some a\\<rbrakk>\n       \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                          (case d of None \\<Rightarrow> NoAction\n                           | Some a \\<Rightarrow> Action a)) =\n                         guha_table_semantics \\<gamma> ft p d\n 5. \\<lbrakk>guha_table_semantics \\<gamma> ft p\n              (case OF_priority_match \\<gamma> ft p of\n               Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n     OF_priority_match \\<gamma> ft p = Undefined;\n     guha_table_semantics \\<gamma> ft p\n      (case OF_priority_match \\<gamma> ft p of Action a \\<Rightarrow> Some a\n       | NoAction \\<Rightarrow> None);\n     d = None\\<rbrakk>\n    \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                       (case d of None \\<Rightarrow> NoAction\n                        | Some a \\<Rightarrow> Action a)) =\n                      guha_table_semantics \\<gamma> ft p d\n 6. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p\n                 (case OF_priority_match \\<gamma> ft p of\n                  Action a \\<Rightarrow> Some a\n                  | NoAction \\<Rightarrow> None);\n        OF_priority_match \\<gamma> ft p = Undefined;\n        guha_table_semantics \\<gamma> ft p\n         (case OF_priority_match \\<gamma> ft p of\n          Action a \\<Rightarrow> Some a | NoAction \\<Rightarrow> None);\n        d = Some a\\<rbrakk>\n       \\<Longrightarrow> (OF_priority_match \\<gamma> ft p =\n                          (case d of None \\<Rightarrow> NoAction\n                           | Some a \\<Rightarrow> Action a)) =\n                         guha_table_semantics \\<gamma> ft p d", "apply(simp_all)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = None\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 2. \\<And>x1 a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = Some a\\<rbrakk>\n       \\<Longrightarrow> (x1 = a) =\n                         guha_table_semantics \\<gamma> ft p (Some a)\n 3. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 4. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 5. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "using guha_deterministic1"], ["proof (prove)\nusing this:\n  guha_table_semantics ?\\<gamma> ?ft ?p (Some ?x1.0) \\<Longrightarrow>\n  \\<not> guha_table_semantics ?\\<gamma> ?ft ?p None\n\ngoal (5 subgoals):\n 1. \\<And>x1.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = None\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 2. \\<And>x1 a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = Some a\\<rbrakk>\n       \\<Longrightarrow> (x1 = a) =\n                         guha_table_semantics \\<gamma> ft p (Some a)\n 3. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 4. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 5. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "apply fast"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = Some a\\<rbrakk>\n       \\<Longrightarrow> (x1 = a) =\n                         guha_table_semantics \\<gamma> ft p (Some a)\n 2. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 3. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 4. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "using guha_deterministic2[OF no]"], ["proof (prove)\nusing this:\n  \\<lbrakk>guha_table_semantics \\<gamma> ft ?p (Some ?x1.0);\n   guha_table_semantics \\<gamma> ft ?p (Some ?a)\\<rbrakk>\n  \\<Longrightarrow> ?x1.0 = ?a\n\ngoal (4 subgoals):\n 1. \\<And>x1 a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p (Some x1);\n        OF_priority_match \\<gamma> ft p = Action x1; d = Some a\\<rbrakk>\n       \\<Longrightarrow> (x1 = a) =\n                         guha_table_semantics \\<gamma> ft p (Some a)\n 2. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 3. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 4. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "apply blast"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 2. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 3. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "using guha_deterministic1"], ["proof (prove)\nusing this:\n  guha_table_semantics ?\\<gamma> ?ft ?p (Some ?x1.0) \\<Longrightarrow>\n  \\<not> guha_table_semantics ?\\<gamma> ?ft ?p None\n\ngoal (3 subgoals):\n 1. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p None;\n        OF_priority_match \\<gamma> ft p = NoAction; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)\n 2. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 3. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "apply fast"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 2. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "using no_overlaps_not_unefined[OF no]"], ["proof (prove)\nusing this:\n  OF_priority_match \\<gamma> ft ?p \\<noteq> Undefined\n\ngoal (2 subgoals):\n 1. \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n     OF_priority_match \\<gamma> ft p = Undefined; d = None\\<rbrakk>\n    \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p None\n 2. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "using no_overlaps_not_unefined[OF no]"], ["proof (prove)\nusing this:\n  OF_priority_match \\<gamma> ft ?p \\<noteq> Undefined\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>guha_table_semantics \\<gamma> ft p undefined;\n        OF_priority_match \\<gamma> ft p = Undefined; d = Some a\\<rbrakk>\n       \\<Longrightarrow> \\<not> guha_table_semantics \\<gamma> ft p (Some a)", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma guha_nondeterministicD:\n\tassumes \"\\<not>check_no_overlap \\<gamma> ft\"\n\tshows \"\\<exists>fe1 fe2 p. fe1 \\<in> set ft \\<and> fe2 \\<in> set ft\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1))\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>fe1 fe2 p.\n       fe1 \\<in> set ft \\<and>\n       fe2 \\<in> set ft \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2))", "using assms"], ["proof (prove)\nusing this:\n  \\<not> check_no_overlap \\<gamma> ft\n\ngoal (1 subgoal):\n 1. \\<exists>fe1 fe2 p.\n       fe1 \\<in> set ft \\<and>\n       fe2 \\<in> set ft \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2))", "apply(unfold check_no_overlap_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>a\\<in>set ft.\n               \\<forall>b\\<in>set ft.\n                  \\<forall>p\\<in>UNIV.\n                     ofe_prio a = ofe_prio b \\<and>\n                     \\<gamma> (ofe_fields a) p \\<and>\n                     a \\<noteq> b \\<longrightarrow>\n                     \\<not> \\<gamma> (ofe_fields b) p) \\<Longrightarrow>\n    \\<exists>fe1 fe2 p.\n       fe1 \\<in> set ft \\<and>\n       fe2 \\<in> set ft \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n       guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2))", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>a \\<in> set ft; b \\<in> set ft; ofe_prio a = ofe_prio b;\n        \\<gamma> (ofe_fields a) p; a \\<noteq> b;\n        \\<gamma> (ofe_fields b) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fe1.\n                            fe1 \\<in> set ft \\<and>\n                            (\\<exists>fe2.\n                                fe2 \\<in> set ft \\<and>\n                                (\\<exists>p.\n                                    guha_table_semantics \\<gamma> ft p\n                                     (Some (ofe_action fe1)) \\<and>\n                                    guha_table_semantics \\<gamma> ft p\n                                     (Some (ofe_action fe2))))", "apply(rename_tac fe1 fe2 p)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fe1.\n                            fe1 \\<in> set ft \\<and>\n                            (\\<exists>fe2.\n                                fe2 \\<in> set ft \\<and>\n                                (\\<exists>p.\n                                    guha_table_semantics \\<gamma> ft p\n                                     (Some (ofe_action fe1)) \\<and>\n                                    guha_table_semantics \\<gamma> ft p\n                                     (Some (ofe_action fe2))))", "apply(rule_tac x = fe1 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> fe1 \\<in> set ft \\<and>\n                         (\\<exists>fe2.\n                             fe2 \\<in> set ft \\<and>\n                             (\\<exists>p.\n                                 guha_table_semantics \\<gamma> ft p\n                                  (Some (ofe_action fe1)) \\<and>\n                                 guha_table_semantics \\<gamma> ft p\n                                  (Some (ofe_action fe2))))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fe2.\n                            fe2 \\<in> set ft \\<and>\n                            (\\<exists>p.\n                                guha_table_semantics \\<gamma> ft p\n                                 (Some (ofe_action fe1)) \\<and>\n                                guha_table_semantics \\<gamma> ft p\n                                 (Some (ofe_action fe2)))", "apply(rule_tac x = fe2 in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> fe2 \\<in> set ft \\<and>\n                         (\\<exists>p.\n                             guha_table_semantics \\<gamma> ft p\n                              (Some (ofe_action fe1)) \\<and>\n                             guha_table_semantics \\<gamma> ft p\n                              (Some (ofe_action fe2)))", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p.\n                            guha_table_semantics \\<gamma> ft p\n                             (Some (ofe_action fe1)) \\<and>\n                            guha_table_semantics \\<gamma> ft p\n                             (Some (ofe_action fe2))", "apply(rule_tac x = p in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe1)) \\<and>\n                         guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe1))\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(subst guha_table_semantics.simps)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>\\<gamma>' fe pa ft1 ft2.\n                             \\<gamma> = \\<gamma>' \\<and>\n                             ft = ft1 @ fe # ft2 \\<and>\n                             p = pa \\<and>\n                             Some (ofe_action fe1) =\n                             Some (ofe_action fe) \\<and>\n                             \\<gamma>' (ofe_fields fe) pa = True \\<and>\n                             (\\<forall>fe'\\<in>set (ft1 @ ft2).\n                                 ofe_prio fe\n                                 < ofe_prio fe' \\<longrightarrow>\n                                 \\<gamma>' (ofe_fields fe') pa =\n                                 False)) \\<or>\n                         (\\<exists>fta \\<gamma>' pa.\n                             \\<gamma> = \\<gamma>' \\<and>\n                             ft = fta \\<and>\n                             p = pa \\<and>\n                             Some (ofe_action fe1) = None \\<and>\n                             (\\<forall>fe\\<in>set fta.\n                                 \\<gamma>' (ofe_fields fe) pa = False))\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rule disjI1)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>\\<gamma>' fe pa ft1 ft2.\n                            \\<gamma> = \\<gamma>' \\<and>\n                            ft = ft1 @ fe # ft2 \\<and>\n                            p = pa \\<and>\n                            Some (ofe_action fe1) =\n                            Some (ofe_action fe) \\<and>\n                            \\<gamma>' (ofe_fields fe) pa = True \\<and>\n                            (\\<forall>fe'\\<in>set (ft1 @ ft2).\n                                ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n                                \\<gamma>' (ofe_fields fe') pa = False)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>fe ft1 ft2.\n                            ft = ft1 @ fe # ft2 \\<and>\n                            ofe_action fe1 = ofe_action fe \\<and>\n                            \\<gamma> (ofe_fields fe) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                                ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rule_tac x = fe1 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ft1 ft2.\n                            ft = ft1 @ fe1 # ft2 \\<and>\n                            ofe_action fe1 = ofe_action fe1 \\<and>\n                            \\<gamma> (ofe_fields fe1) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                                ofe_prio fe1\n                                < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(drule split_list)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe2 \\<in> set ft; ofe_prio fe1 = ofe_prio fe2;\n        \\<gamma> (ofe_fields fe1) p; fe1 \\<noteq> fe2;\n        \\<gamma> (ofe_fields fe2) p;\n        \\<exists>ys zs. ft = ys @ fe1 # zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ft1 ft2.\n                            ft = ft1 @ fe1 # ft2 \\<and>\n                            ofe_action fe1 = ofe_action fe1 \\<and>\n                            \\<gamma> (ofe_fields fe1) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                                ofe_prio fe1\n                                < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(clarify)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p ys zs.\n       \\<lbrakk>fe2 \\<in> set (ys @ fe1 # zs); ofe_prio fe1 = ofe_prio fe2;\n        \\<gamma> (ofe_fields fe1) p; fe1 \\<noteq> fe2;\n        \\<gamma> (ofe_fields fe2) p; ft = ys @ fe1 # zs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ft1 ft2.\n                            ys @ fe1 # zs = ft1 @ fe1 # ft2 \\<and>\n                            ofe_action fe1 = ofe_action fe1 \\<and>\n                            \\<gamma> (ofe_fields fe1) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                                ofe_prio fe1\n                                < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rename_tac ft1 ft2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p ft1 ft2.\n       \\<lbrakk>fe2 \\<in> set (ft1 @ fe1 # ft2);\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p;\n        ft = ft1 @ fe1 # ft2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ft1a ft2a.\n                            ft1 @ fe1 # ft2 = ft1a @ fe1 # ft2a \\<and>\n                            ofe_action fe1 = ofe_action fe1 \\<and>\n                            \\<gamma> (ofe_fields fe1) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1a \\<union> set ft2a.\n                                ofe_prio fe1\n                                < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rule_tac x = ft1 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p ft1 ft2.\n       \\<lbrakk>fe2 \\<in> set (ft1 @ fe1 # ft2);\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p;\n        ft = ft1 @ fe1 # ft2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ft2a.\n                            ft1 @ fe1 # ft2 = ft1 @ fe1 # ft2a \\<and>\n                            ofe_action fe1 = ofe_action fe1 \\<and>\n                            \\<gamma> (ofe_fields fe1) p \\<and>\n                            (\\<forall>fe'\\<in>set ft1 \\<union> set ft2a.\n                                ofe_prio fe1\n                                < ofe_prio fe' \\<longrightarrow>\n                                \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(rule_tac x = ft2 in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p ft1 ft2.\n       \\<lbrakk>fe2 \\<in> set (ft1 @ fe1 # ft2);\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p;\n        ft = ft1 @ fe1 # ft2\\<rbrakk>\n       \\<Longrightarrow> ft1 @ fe1 # ft2 = ft1 @ fe1 # ft2 \\<and>\n                         ofe_action fe1 = ofe_action fe1 \\<and>\n                         \\<gamma> (ofe_fields fe1) p \\<and>\n                         (\\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                             ofe_prio fe1 < ofe_prio fe' \\<longrightarrow>\n                             \\<not> \\<gamma> (ofe_fields fe') p)\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>fe1 fe2 p ft1 ft2.\n       \\<lbrakk>fe2 \\<in> set ft1 \\<or> fe2 \\<in> set ft2;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p;\n        ft = ft1 @ fe1 # ft2\\<rbrakk>\n       \\<Longrightarrow> \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n                            ofe_prio fe2 < ofe_prio fe' \\<longrightarrow>\n                            \\<not> \\<gamma> (ofe_fields fe') p\n 2. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1 \\<in> set ft; fe2 \\<in> set ft;\n        ofe_prio fe1 = ofe_prio fe2; \\<gamma> (ofe_fields fe1) p;\n        fe1 \\<noteq> fe2; \\<gamma> (ofe_fields fe2) p\\<rbrakk>\n       \\<Longrightarrow> guha_table_semantics \\<gamma> ft p\n                          (Some (ofe_action fe2))", "oops"], ["", "(* shadowed overlaps yay! *)"], ["", "text\\<open>The above lemma does indeed not hold, the reason for this are (possibly partially) shadowed overlaps.\nThis is exemplified below: If there are at least three different possible actions (necessary assumption)\nand a match expression that matches all packets (convenience assumption), it is possible to construct a flow \ntable that is admonished by @{const check_no_overlap} but still will never run into undefined behavior.\n\\<close>"], ["", "(* This is not the terribly most important lemma. Feel free to delete it if the proof gives you trouble. *)"], ["", "lemma\n  assumes \"CARD('action) \\<ge> 3\"\n  assumes \"\\<forall>p. \\<gamma> x p\" (* with a sane \\<gamma>, x = {} *)\n\tshows \"\\<exists>ft::('a, 'action) flow_entry_match list. \\<not>check_no_overlap \\<gamma> ft \\<and>\n\t  \\<not>(\\<exists>fe1 fe2 p. fe1 \\<in> set ft \\<and> fe2 \\<in> set ft \\<and> fe1 \\<noteq> fe2 \\<and> ofe_prio fe1 = ofe_prio fe2\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1))\n\t\t\\<and> guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "obtain adef aa ab :: 'action where anb[simp]: \"aa \\<noteq> ab\" \"adef \\<noteq> aa\" \"adef \\<noteq> ab\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>aa ab adef.\n        \\<lbrakk>aa \\<noteq> ab; adef \\<noteq> aa; adef \\<noteq> ab\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(1) card3_eI"], ["proof (prove)\nusing this:\n  3 \\<le> CARD('action)\n  3 \\<le> card ?S \\<Longrightarrow>\n  \\<exists>x y z.\n     x \\<noteq> y \\<and>\n     x \\<noteq> z \\<and> y \\<noteq> z \\<and> x \\<in> ?S \\<and> y \\<in> ?S\n\ngoal (1 subgoal):\n 1. (\\<And>aa ab adef.\n        \\<lbrakk>aa \\<noteq> ab; adef \\<noteq> aa; adef \\<noteq> ab\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  aa \\<noteq> ab\n  adef \\<noteq> aa\n  adef \\<noteq> ab\n\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "let ?cex = \"[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "have ol: \"\\<not>check_no_overlap \\<gamma> ?cex\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> check_no_overlap \\<gamma>\n            [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab]", "unfolding check_no_overlap_def ball_simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>set [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab].\n       \\<exists>x\\<in>set [OFEntry 1 x adef, OFEntry 0 x aa,\n                           OFEntry 0 x ab].\n          \\<not> (\\<forall>p.\n                     ofe_prio xa = ofe_prio x \\<and>\n                     \\<gamma> (ofe_fields xa) p \\<and>\n                     xa \\<noteq> x \\<longrightarrow>\n                     \\<not> \\<gamma> (ofe_fields x) p)", "apply(rule bexI[where x = \"OFEntry 0 x aa\", rotated], (simp;fail))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>set [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab].\n       \\<not> (\\<forall>p.\n                  ofe_prio (OFEntry 0 x aa) = ofe_prio xa \\<and>\n                  \\<gamma> (ofe_fields (OFEntry 0 x aa)) p \\<and>\n                  OFEntry 0 x aa \\<noteq> xa \\<longrightarrow>\n                  \\<not> \\<gamma> (ofe_fields xa) p)", "apply(rule bexI[where x = \"OFEntry 0 x ab\", rotated], (simp;fail))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>p.\n               ofe_prio (OFEntry 0 x aa) = ofe_prio (OFEntry 0 x ab) \\<and>\n               \\<gamma> (ofe_fields (OFEntry 0 x aa)) p \\<and>\n               OFEntry 0 x aa \\<noteq> OFEntry 0 x ab \\<longrightarrow>\n               \\<not> \\<gamma> (ofe_fields (OFEntry 0 x ab)) p)", "apply(simp add: assms)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<not> check_no_overlap \\<gamma>\n          [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab]\n\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "have df: \"guha_table_semantics \\<gamma> ?cex p oc \\<Longrightarrow> oc = Some adef\" for p oc"], ["proof (prove)\ngoal (1 subgoal):\n 1. guha_table_semantics \\<gamma>\n     [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n     oc \\<Longrightarrow>\n    oc = Some adef", "unfolding guha_table_semantics.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>\\<gamma>' fe pa ft1 ft2.\n        \\<gamma> = \\<gamma>' \\<and>\n        [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n        ft1 @ fe # ft2 \\<and>\n        p = pa \\<and>\n        oc = Some (ofe_action fe) \\<and>\n        \\<gamma>' (ofe_fields fe) pa = True \\<and>\n        (\\<forall>fe'\\<in>set (ft1 @ ft2).\n            ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n            \\<gamma>' (ofe_fields fe') pa = False)) \\<or>\n    (\\<exists>ft \\<gamma>' pa.\n        \\<gamma> = \\<gamma>' \\<and>\n        [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] = ft \\<and>\n        p = pa \\<and>\n        oc = None \\<and>\n        (\\<forall>fe\\<in>set ft.\n            \\<gamma>' (ofe_fields fe) pa = False)) \\<Longrightarrow>\n    oc = Some adef", "apply(elim disjE; clarsimp simp: assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe ft1 ft2.\n       \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n                ft1 @ fe # ft2;\n        oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n        \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p\\<rbrakk>\n       \\<Longrightarrow> ofe_action fe = adef", "subgoal for fe ft1 ft2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef", "apply(cases \"ft1 = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 = []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef\n 2. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef", "apply(fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef", "apply(cases \"ft2 = []\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 = []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef\n 2. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef", "apply(fastforce)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef", "apply(subgoal_tac \"ft1 = [OFEntry 1 x adef] \\<and> fe = OFEntry 0 x aa \\<and> ft2 = [OFEntry 0 x ab]\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 \\<noteq> [];\n     ft1 = [OFEntry 1 x adef] \\<and>\n     fe = OFEntry 0 x aa \\<and> ft2 = [OFEntry 0 x ab]\\<rbrakk>\n    \\<Longrightarrow> ofe_action fe = adef\n 2. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ft1 = [OFEntry 1 x adef] \\<and>\n                      fe = OFEntry 0 x aa \\<and> ft2 = [OFEntry 0 x ab]", "apply(simp;fail)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>[OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] =\n             ft1 @ fe # ft2;\n     oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n     \\<forall>fe'\\<in>set ft1 \\<union> set ft2.\n        ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields fe') p;\n     ft1 \\<noteq> []; ft2 \\<noteq> []\\<rbrakk>\n    \\<Longrightarrow> ft1 = [OFEntry 1 x adef] \\<and>\n                      fe = OFEntry 0 x aa \\<and> ft2 = [OFEntry 0 x ab]", "apply(clarsimp simp add: List.neq_Nil_conv)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya ys ysa.\n       \\<lbrakk>[OFEntry 0 x aa, OFEntry 0 x ab] = ys @ fe # ya # ysa;\n        oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n        ft1 = OFEntry 1 x adef # ys; ft2 = ya # ysa;\n        ofe_prio fe < ofe_prio ya \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields ya) p;\n        ofe_prio fe = 0 \\<longrightarrow> \\<not> \\<gamma> x p;\n        \\<forall>fe'\\<in>set ys \\<union> set ysa.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p\\<rbrakk>\n       \\<Longrightarrow> ys = [] \\<and>\n                         fe = OFEntry 0 x aa \\<and>\n                         ya = OFEntry 0 x ab \\<and> ysa = []", "apply(rename_tac ya ys yz)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ya ys yz.\n       \\<lbrakk>[OFEntry 0 x aa, OFEntry 0 x ab] = ys @ fe # ya # yz;\n        oc = Some (ofe_action fe); \\<gamma> (ofe_fields fe) p;\n        ft1 = OFEntry 1 x adef # ys; ft2 = ya # yz;\n        ofe_prio fe < ofe_prio ya \\<longrightarrow>\n        \\<not> \\<gamma> (ofe_fields ya) p;\n        ofe_prio fe = 0 \\<longrightarrow> \\<not> \\<gamma> x p;\n        \\<forall>fe'\\<in>set ys \\<union> set yz.\n           ofe_prio fe < ofe_prio fe' \\<longrightarrow>\n           \\<not> \\<gamma> (ofe_fields fe') p\\<rbrakk>\n       \\<Longrightarrow> ys = [] \\<and>\n                         fe = OFEntry 0 x aa \\<and>\n                         ya = OFEntry 0 x ab \\<and> yz = []", "apply(case_tac ys; clarsimp simp add: List.neq_Nil_conv)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  guha_table_semantics \\<gamma>\n   [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] ?p\n   ?oc \\<Longrightarrow>\n  ?oc = Some adef\n\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ft.\n       \\<not> check_no_overlap \\<gamma> ft \\<and>\n       (\\<nexists>fe1 fe2 p.\n           fe1 \\<in> set ft \\<and>\n           fe2 \\<in> set ft \\<and>\n           fe1 \\<noteq> fe2 \\<and>\n           ofe_prio fe1 = ofe_prio fe2 \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n           guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))", "apply(intro exI[where x = ?cex], intro conjI, fact ol)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>fe1 fe2 p.\n       fe1\n       \\<in> set [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] \\<and>\n       fe2\n       \\<in> set [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] \\<and>\n       fe1 \\<noteq> fe2 \\<and>\n       ofe_prio fe1 = ofe_prio fe2 \\<and>\n       guha_table_semantics \\<gamma>\n        [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n        (Some (ofe_action fe1)) \\<and>\n       guha_table_semantics \\<gamma>\n        [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n        (Some (ofe_action fe2))", "apply(clarify)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1\n                \\<in> set [OFEntry 1 x adef, OFEntry 0 x aa,\n                           OFEntry 0 x ab];\n        fe2 \\<in> set [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab];\n        fe1 \\<noteq> fe2; ofe_prio fe1 = ofe_prio fe2;\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some (ofe_action fe1));\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some (ofe_action fe2))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(unfold set_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>fe1 fe2 p.\n       \\<lbrakk>fe1\n                \\<in> {OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab};\n        fe2 \\<in> {OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab};\n        fe1 \\<noteq> fe2; ofe_prio fe1 = ofe_prio fe2;\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some (ofe_action fe1));\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some (ofe_action fe2))\\<rbrakk>\n       \\<Longrightarrow> False", "apply(elim insertE; clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>p.\n       \\<lbrakk>guha_table_semantics \\<gamma>\n                 [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n                 (Some aa);\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some ab)\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>p.\n       \\<lbrakk>ab \\<noteq> aa;\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p (Some ab);\n        guha_table_semantics \\<gamma>\n         [OFEntry 1 x adef, OFEntry 0 x aa, OFEntry 0 x ab] p\n         (Some aa)\\<rbrakk>\n       \\<Longrightarrow> False", "apply((drule df)+; unfold option.inject; (elim anb[symmetric, THEN notE] | (simp;fail))?)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<exists>ft.\n     \\<not> check_no_overlap \\<gamma> ft \\<and>\n     (\\<nexists>fe1 fe2 p.\n         fe1 \\<in> set ft \\<and>\n         fe2 \\<in> set ft \\<and>\n         fe1 \\<noteq> fe2 \\<and>\n         ofe_prio fe1 = ofe_prio fe2 \\<and>\n         guha_table_semantics \\<gamma> ft p (Some (ofe_action fe1)) \\<and>\n         guha_table_semantics \\<gamma> ft p (Some (ofe_action fe2)))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}