{"file_name": "/home/qj213/afp-2021-10-22/thys/LOFT/OpenFlow_Matches.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LOFT", "problem_names": ["lemma (* as stated in paper *)\n\t\"all_prerequisites p \\<Longrightarrow>\n\t L4Src x y \\<in> p \\<Longrightarrow>\n\t IPv4Proto ` {TCP, UDP, L4_Protocol.SCTP} \\<inter> p \\<noteq> {}\"", "lemma of_safe_unsafe_match_eq: \"all_prerequisites m \\<Longrightarrow> OF_match_fields m p = Some (OF_match_fields_unsafe m p)\"", "lemma of_match_fields_safe_eq: assumes \"all_prerequisites m\" shows \"OF_match_fields_safe m = OF_match_fields_unsafe m\"", "lemma OF_match_fields_alt: \"OF_match_fields m p =\n  (if \\<exists>f \\<in> m. \\<not>prerequisites f m then None else \n    if \\<forall>f \\<in> m. match_no_prereq f p then Some True else Some False)\"", "lemma of_match_fields_safe_eq2: assumes \"all_prerequisites m\" shows \"OF_match_fields_safe m p \\<longleftrightarrow> OF_match_fields m p = Some True\""], "translations": [["", "lemma (* as stated in paper *)\n\t\"all_prerequisites p \\<Longrightarrow>\n\t L4Src x y \\<in> p \\<Longrightarrow>\n\t IPv4Proto ` {TCP, UDP, L4_Protocol.SCTP} \\<inter> p \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>all_prerequisites p; L4Src x y \\<in> p\\<rbrakk>\n    \\<Longrightarrow> IPv4Proto ` {TCP, UDP, L4_Protocol.SCTP} \\<inter>\n                      p \\<noteq>\n                      {}", "unfolding all_prerequisites_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>f\\<in>p. prerequisites f p; L4Src x y \\<in> p\\<rbrakk>\n    \\<Longrightarrow> IPv4Proto ` {TCP, UDP, L4_Protocol.SCTP} \\<inter>\n                      p \\<noteq>\n                      {}", "by auto"], ["", "lemma of_safe_unsafe_match_eq: \"all_prerequisites m \\<Longrightarrow> OF_match_fields m p = Some (OF_match_fields_unsafe m p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. all_prerequisites m \\<Longrightarrow>\n    OF_match_fields m p = Some (OF_match_fields_unsafe m p)", "unfolding OF_match_fields_def OF_match_fields_unsafe_def comp_def set_seq_def match_prereq_def all_prerequisites_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>m. prerequisites f m \\<Longrightarrow>\n    map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "proof goal_cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>m. prerequisites f m \\<Longrightarrow>\n    map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "case 1"], ["proof (state)\nthis:\n  \\<forall>f\\<in>m. prerequisites f m\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>m. prerequisites f m \\<Longrightarrow>\n    map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "have 2: \"(\\<lambda>f. if prerequisites f m then Some (match_no_prereq f p) else None) ` m = (\\<lambda>f. Some (match_no_prereq f p)) ` m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f.\n        if prerequisites f m then Some (match_no_prereq f p) else None) `\n    m =\n    (\\<lambda>f. Some (match_no_prereq f p)) ` m", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>m. prerequisites f m\n\ngoal (1 subgoal):\n 1. (\\<lambda>f.\n        if prerequisites f m then Some (match_no_prereq f p) else None) `\n    m =\n    (\\<lambda>f. Some (match_no_prereq f p)) ` m", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>f.\n      if prerequisites f m then Some (match_no_prereq f p) else None) `\n  m =\n  (\\<lambda>f. Some (match_no_prereq f p)) ` m\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>m. prerequisites f m \\<Longrightarrow>\n    map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "have 3: \"\\<forall>x\\<in>(\\<lambda>f. Some (match_no_prereq f p)) ` m. x \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>f. Some (match_no_prereq f p)) ` m.\n       x \\<noteq> None", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>f. Some (match_no_prereq f p)) ` m.\n     x \\<noteq> None\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>m. prerequisites f m \\<Longrightarrow>\n    map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "unfolding 2"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true\n     (if \\<forall>x\\<in>(\\<lambda>f. Some (match_no_prereq f p)) ` m.\n            x \\<noteq> None\n      then Some (the ` (\\<lambda>f. Some (match_no_prereq f p)) ` m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "unfolding eqTrueI[OF 3]"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true\n     (if True then Some (the ` (\\<lambda>f. Some (match_no_prereq f p)) ` m)\n      else None) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "unfolding if_True"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true\n     (Some (the ` (\\<lambda>f. Some (match_no_prereq f p)) ` m)) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "unfolding image_comp comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true\n     (Some ((\\<lambda>x. the (Some (match_no_prereq x p))) ` m)) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "unfolding option.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option all_true (Some ((\\<lambda>x. match_no_prereq x p) ` m)) =\n    Some (\\<forall>f\\<in>m. match_no_prereq f p)", "by(simp add: all_true_def)"], ["proof (state)\nthis:\n  map_option all_true\n   (if \\<forall>x\\<in>(\\<lambda>f.\n                          if prerequisites f m\n                          then Some (match_no_prereq f p) else None) `\n                      m.\n          x \\<noteq> None\n    then Some\n          (the `\n           (\\<lambda>f.\n               if prerequisites f m then Some (match_no_prereq f p)\n               else None) `\n           m)\n    else None) =\n  Some (\\<forall>f\\<in>m. match_no_prereq f p)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma of_match_fields_safe_eq: assumes \"all_prerequisites m\" shows \"OF_match_fields_safe m = OF_match_fields_unsafe m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_match_fields_safe m = OF_match_fields_unsafe m", "unfolding OF_match_fields_safe_def[abs_def] fun_eq_iff comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. the (OF_match_fields m x) = OF_match_fields_unsafe m x", "unfolding of_safe_unsafe_match_eq[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       the (Some (OF_match_fields_unsafe m x)) = OF_match_fields_unsafe m x", "unfolding option.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. OF_match_fields_unsafe m x = OF_match_fields_unsafe m x", "by clarify"], ["", "lemma OF_match_fields_alt: \"OF_match_fields m p =\n  (if \\<exists>f \\<in> m. \\<not>prerequisites f m then None else \n    if \\<forall>f \\<in> m. match_no_prereq f p then Some True else Some False)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_match_fields m p =\n    (if \\<exists>f\\<in>m. \\<not> prerequisites f m then None\n     else if \\<forall>f\\<in>m. match_no_prereq f p then Some True\n          else Some False)", "unfolding OF_match_fields_def all_true_def[abs_def] set_seq_def match_prereq_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_option (\\<lambda>s. \\<forall>x\\<in>s. x)\n     (if \\<forall>x\\<in>(\\<lambda>f.\n                            if prerequisites f m\n                            then Some (match_no_prereq f p) else None) `\n                        m.\n            x \\<noteq> None\n      then Some\n            (the `\n             (\\<lambda>f.\n                 if prerequisites f m then Some (match_no_prereq f p)\n                 else None) `\n             m)\n      else None) =\n    (if \\<exists>f\\<in>m. \\<not> prerequisites f m then None\n     else if \\<forall>f\\<in>m. match_no_prereq f p then Some True\n          else Some False)", "by(auto simp add: ball_Un)"], ["", "lemma of_match_fields_safe_eq2: assumes \"all_prerequisites m\" shows \"OF_match_fields_safe m p \\<longleftrightarrow> OF_match_fields m p = Some True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_match_fields_safe m p = (OF_match_fields m p = Some True)", "unfolding OF_match_fields_safe_def[abs_def] fun_eq_iff comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. the (OF_match_fields m p) = (OF_match_fields m p = Some True)", "unfolding of_safe_unsafe_match_eq[OF assms]"], ["proof (prove)\ngoal (1 subgoal):\n 1. the (Some (OF_match_fields_unsafe m p)) =\n    (Some (OF_match_fields_unsafe m p) = Some True)", "unfolding option.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. OF_match_fields_unsafe m p =\n    (Some (OF_match_fields_unsafe m p) = Some True)", "by simp"], ["", "end"]]}