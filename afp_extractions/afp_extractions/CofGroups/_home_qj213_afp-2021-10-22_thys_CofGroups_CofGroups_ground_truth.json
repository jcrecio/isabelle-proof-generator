{"file_name": "/home/qj213/afp-2021-10-22/thys/CofGroups/CofGroups.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CofGroups", "problem_names": ["lemma inj_upOne: \"inj upOne\"", "lemma surj_upOne: \"surj upOne\"", "theorem bij_upOne: \"bij upOne\"", "lemma no_fix_upOne: \"upOne n \\<noteq> n\"", "theorem \"Fix upOne = {}\"", "lemma inv_upOne_eq: \"(inv upOne) (n::int) = n - 1\"", "lemma \"(inv upOne) n = n - 1\"", "lemma Ex1_Normal_form_part1: \"f \\<in> Ex1 \\<Longrightarrow> \\<exists>k. \\<forall> n. f(n) = n + k\"", "lemma Ex1_Normal_form_part2: \n  \"(\\<forall>f. ((\\<forall>n. f n = n + k) \\<longrightarrow> f \\<in> Ex1))\" (is \"?P k\")", "theorem Ex1_Normal_form: \"(f \\<in> Ex1) = (\\<exists>k. \\<forall>n. f(n) = n + k)\"", "theorem all_bij: \"f \\<in> Ex1 \\<Longrightarrow> bij f\"", "theorem no_fixed_pt: \n  assumes f_Ex1: \"f \\<in> Ex1\"\n  and f_not_id: \"f \\<noteq> id\"\n  shows \"Fix f = {}\"", "theorem closed_comp: \"f \\<in> Ex1 \\<and> g \\<in> Ex1 \\<Longrightarrow> f \\<circ> g \\<in> Ex1\"", "theorem closed_inv: \"f \\<in> Ex1 \\<Longrightarrow> inv f \\<in> Ex1\"", "lemma bij_f_o_inf_f: \"bij f \\<Longrightarrow> f \\<circ> inv f = id\"", "theorem conj_fix_pt: \"\\<And>f::('a \\<Rightarrow> 'b). \\<And>g::('b \\<Rightarrow> 'b). (bij f) \n  \\<Longrightarrow> ((inv f)`(Fix g)) = Fix ((inv f) \\<circ> g \\<circ> f)\"", "lemma type_CONJ: \"f \\<in> Ex1 \\<Longrightarrow> (inv ni_bij) \\<circ> f \\<circ> ni_bij \\<in> S_inf\"", "lemma inv_CONJ: \n  assumes bij_f: \"bij f\"\n  shows \"inv (CONJ f) = CONJ (inv f)\" (is \"?left = ?right\")", "lemma comp_CONJ:\n  \"CONJ (f \\<circ> g) = (CONJ f) \\<circ> (CONJ g)\" (is \"?left = ?right\")", "lemma id_CONJ: \"CONJ id = id\"", "theorem mem_Ex2_rule: \"f \\<in> Ex2 = (\\<exists>g. (g \\<in> Ex1 \\<and> f = CONJ g))\"", "theorem Ex2_cofinitary:\n  assumes f_Ex2: \"f \\<in> Ex2\"\n  and f_nid: \"f \\<noteq> id\"\n  shows \"Fix f = {}\"", "lemma id_Ex2: \"id \\<in> Ex2\"", "lemma inv_Ex2: \"f \\<in> Ex2 \\<Longrightarrow> (inv f) \\<in> Ex2\"", "lemma comp_Ex2:\n  assumes f_Ex2: \"f \\<in> Ex2\" and\n  g_Ex2: \"g \\<in> Ex2\"\n  shows \"f \\<circ> g \\<in> Ex2\""], "translations": [["", "lemma inj_upOne: \"inj upOne\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj upOne", "by (rule Fun.injI, simp)"], ["", "lemma surj_upOne: \"surj upOne\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj upOne", "proof (unfold Fun.surj_def, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = upOne x", "fix k::int"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = upOne x", "show \"\\<exists>m. k = upOne m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. k = upOne m", "by (rule exI[of \"\\<lambda>l. k = upOne l\" \"k - 1\"], simp)"], ["proof (state)\nthis:\n  \\<exists>m. k = upOne m\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem bij_upOne: \"bij upOne\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij upOne", "by (unfold bij_def, rule conjI [OF inj_upOne surj_upOne])"], ["", "text \\<open>Now we show that the set of fixed points of @{term upOne}\nis empty.  We show this in two steps, first we show that no number\nis a fixed point, and then derive from this that the set of fixed\npoints is empty.\\<close>"], ["", "lemma no_fix_upOne: \"upOne n \\<noteq> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. upOne n \\<noteq> n", "proof (rule notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. upOne n = n \\<Longrightarrow> False", "assume \"upOne n = n\""], ["proof (state)\nthis:\n  upOne n = n\n\ngoal (1 subgoal):\n 1. upOne n = n \\<Longrightarrow> False", "with upOne_def"], ["proof (chain)\npicking this:\n  upOne ?n = ?n + 1\n  upOne n = n", "have \"n+1 = n\""], ["proof (prove)\nusing this:\n  upOne ?n = ?n + 1\n  upOne n = n\n\ngoal (1 subgoal):\n 1. n + 1 = n", "by simp"], ["proof (state)\nthis:\n  n + 1 = n\n\ngoal (1 subgoal):\n 1. upOne n = n \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  n + 1 = n\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem \"Fix upOne = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fix upOne = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Fix upOne = {}", "from Fix_def[of upOne]"], ["proof (chain)\npicking this:\n  Fix upOne = {n. upOne n = n}", "have \"Fix upOne = {n . upOne n = n}\""], ["proof (prove)\nusing this:\n  Fix upOne = {n. upOne n = n}\n\ngoal (1 subgoal):\n 1. Fix upOne = {n. upOne n = n}", "by auto"], ["proof (state)\nthis:\n  Fix upOne = {n. upOne n = n}\n\ngoal (1 subgoal):\n 1. Fix upOne = {}", "with no_fix_upOne"], ["proof (chain)\npicking this:\n  upOne ?n \\<noteq> ?n\n  Fix upOne = {n. upOne n = n}", "have \"Fix upOne = {n . False}\""], ["proof (prove)\nusing this:\n  upOne ?n \\<noteq> ?n\n  Fix upOne = {n. upOne n = n}\n\ngoal (1 subgoal):\n 1. Fix upOne = {n. False}", "by auto"], ["proof (state)\nthis:\n  Fix upOne = {n. False}\n\ngoal (1 subgoal):\n 1. Fix upOne = {}", "with Set.empty_def"], ["proof (chain)\npicking this:\n  {} = {x. False}\n  Fix upOne = {n. False}", "show \"Fix upOne = {}\""], ["proof (prove)\nusing this:\n  {} = {x. False}\n  Fix upOne = {n. False}\n\ngoal (1 subgoal):\n 1. Fix upOne = {}", "by auto"], ["proof (state)\nthis:\n  Fix upOne = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally we derive the equation for the inverse of @{term\nupOne}.  The rule we use references \\<open>Hilbert_Choice\\<close> since the @{term\ninv} operator, the operator that gives an inverse of a function, is\ndefined using Hilbert's choice operator.\\<close>"], ["", "lemma inv_upOne_eq: \"(inv upOne) (n::int) = n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "fix \"n\" :: int"], ["proof (state)\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "have \"((inv upOne) \\<circ> upOne) (n - 1) = (inv upOne) n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv upOne \\<circ> upOne) (n - 1) = inv upOne n", "by simp"], ["proof (state)\nthis:\n  (inv upOne \\<circ> upOne) (n - 1) = inv upOne n\n\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "with inj_upOne and Hilbert_Choice.inv_o_cancel"], ["proof (chain)\npicking this:\n  inj upOne\n  inj ?f \\<Longrightarrow> inv ?f \\<circ> ?f = id\n  (inv upOne \\<circ> upOne) (n - 1) = inv upOne n", "show \"(inv upOne) n = n - 1\""], ["proof (prove)\nusing this:\n  inj upOne\n  inj ?f \\<Longrightarrow> inv ?f \\<circ> ?f = id\n  (inv upOne \\<circ> upOne) (n - 1) = inv upOne n\n\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "by auto"], ["proof (state)\nthis:\n  inv upOne n = n - 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can also show this quickly using Hilbert\\_Choice.inv\\_f\\_eq\nproperly instantiated : @{thm Hilbert_Choice.inv_f_eq[of upOne \"n - 1\"\nn, OF inj_upOne]}.\\<close>"], ["", "lemma \"(inv upOne) n = n - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv upOne n = n - 1", "by (rule Hilbert_Choice.inv_f_eq[of upOne \"n - 1\" n, OF inj_upOne], simp)"], ["", "section \\<open>The Set of Functions and Normal Forms\\<close>"], ["", "text \\<open>\\label {sect:setOFunc} We define the set @{term Ex1} of all\npowers of @{term upOne} and study some of its properties, note that\nthis is the group generated by @{term upOne} (in Section \\ref\n{sect:Ex1Closed} we prove it closed under composition and inverse).\nIn Section \\ref {sect:Ex1CofBij} we show that all its elements are\ncofinitary and bijections (bijections with finitely many fixed\npoints).  Note that this is not a cofinitary group, since our\ndefinition requires the group to be a subset of @{term S_inf}\\<close>"], ["", "inductive_set Ex1 :: \"(int \\<Rightarrow> int) set\" where\nbase_func: \"upOne \\<in> Ex1\" |\ncomp_func: \"f \\<in> Ex1 \\<Longrightarrow> (upOne \\<circ> f) \\<in> Ex1\" |\ncomp_inv : \"f \\<in> Ex1 \\<Longrightarrow> ((inv upOne) \\<circ> f) \\<in> Ex1\""], ["", "text \\<open>We start by showing a \\emph{normal form} for elements in this\nset.\\<close>"], ["", "lemma Ex1_Normal_form_part1: \"f \\<in> Ex1 \\<Longrightarrow> \\<exists>k. \\<forall> n. f(n) = n + k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. f n = n + k", "proof (rule Ex1.induct [of \"f\"], blast) \n    \\<comment> \\<open>blast takes care of the first goal which is formal noise\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. upOne n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "assume \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. upOne n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "have \"\\<forall>n. upOne n = n + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. upOne n = n + 1", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. upOne n = n + 1\n\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. upOne n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "with HOL.exI"], ["proof (chain)\npicking this:\n  ?P ?x \\<Longrightarrow> \\<exists>x. ?P x\n  \\<forall>n. upOne n = n + 1", "show \"\\<exists>k. \\<forall>n. upOne n = n + k\""], ["proof (prove)\nusing this:\n  ?P ?x \\<Longrightarrow> \\<exists>x. ?P x\n  \\<forall>n. upOne n = n + 1\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. upOne n = n + k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. upOne n = n + k\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "fix fa:: \"int => int\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "assume fa_k: \"\\<exists>k. \\<forall>n. fa n = n + k\""], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. fa n = n + k\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (upOne \\<circ> fa) n = n + k\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "thus \"\\<exists>k. \\<forall>n. (upOne \\<circ> fa) n = n + k\""], ["proof (prove)\nusing this:\n  \\<exists>k. \\<forall>n. fa n = n + k\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. (upOne \\<circ> fa) n = n + k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. (upOne \\<circ> fa) n = n + k\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "fix fa :: \"int \\<Rightarrow> int\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "assume fa_k: \"\\<exists>k. \\<forall>n. fa n = n + k\""], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. fa n = n + k\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "from inv_upOne_eq"], ["proof (chain)\npicking this:\n  inv upOne ?n = ?n - 1", "have \"\\<forall>n. (inv upOne) n = n - 1\""], ["proof (prove)\nusing this:\n  inv upOne ?n = ?n - 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. inv upOne n = n - 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. inv upOne n = n - 1\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        \\<exists>k. \\<forall>n. fa n = n + k\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "with fa_k"], ["proof (chain)\npicking this:\n  \\<exists>k. \\<forall>n. fa n = n + k\n  \\<forall>n. inv upOne n = n - 1", "show \"\\<exists>k. \\<forall>n. (inv upOne \\<circ> fa) n = n + k\""], ["proof (prove)\nusing this:\n  \\<exists>k. \\<forall>n. fa n = n + k\n  \\<forall>n. inv upOne n = n - 1\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. (inv upOne \\<circ> fa) n = n + k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. (inv upOne \\<circ> fa) n = n + k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we'll show the other direction.  Then we apply rule \\<open>int_induct\\<close> which allows us to do the induction by first showing it\ntrue for $k = 1$, then showing that if true for $k = i$ it is also\ntrue for $k = i+1$ and finally showing that if true for $k = i$ then\nit is also true for $k = i - 1$.\n\nAll proofs are fairly straightforward and use extensionality for\nfunctions.  In the base case we are just dealing with @{term upOne}.\nIn the other cases we define the function \\<open>?h\\<close> which satisfies\nthe induction hypothesis.  Then @{term f} is obtained from this by\nadding or subtracting one pointwise. \n\nIn this proof we use some pattern matching to save on writing.  In the\nstatement of the theorem, we match the theorem against \\<open>?P k\\<close> thereby\ndefining the predicate \\<open>?P\\<close>.\\<close>"], ["", "lemma Ex1_Normal_form_part2: \n  \"(\\<forall>f. ((\\<forall>n. f n = n + k) \\<longrightarrow> f \\<in> Ex1))\" (is \"?P k\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + k) \\<longrightarrow> f \\<in> CofGroups.Ex1", "proof (rule int_induct [of \"?P\" 1])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "show \"\\<forall>f. (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1", "fix f:: \"int \\<Rightarrow> int\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1", "show \"(\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + 1 \\<Longrightarrow> f \\<in> CofGroups.Ex1", "assume \"\\<forall>n. f n = n + 1\""], ["proof (state)\nthis:\n  \\<forall>n. f n = n + 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + 1 \\<Longrightarrow> f \\<in> CofGroups.Ex1", "hence \"\\<forall>n. f n = upOne n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = upOne n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = upOne n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + 1 \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with fun_eq_iff[of f upOne,THEN sym]"], ["proof (chain)\npicking this:\n  (\\<forall>x. f x = upOne x) = (f = upOne)\n  \\<forall>n. f n = upOne n", "have \"f = upOne\""], ["proof (prove)\nusing this:\n  (\\<forall>x. f x = upOne x) = (f = upOne)\n  \\<forall>n. f n = upOne n\n\ngoal (1 subgoal):\n 1. f = upOne", "by auto"], ["proof (state)\nthis:\n  f = upOne\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + 1 \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with Ex1.base_func"], ["proof (chain)\npicking this:\n  upOne \\<in> CofGroups.Ex1\n  f = upOne", "show \"f \\<in> Ex1\""], ["proof (prove)\nusing this:\n  upOne \\<in> CofGroups.Ex1\n  f = upOne\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + 1) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "fix i::int"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "assume \"1 \\<le> i\""], ["proof (state)\nthis:\n  1 \\<le> i\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "assume induct_hyp: \"\\<forall>f. (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> Ex1\""], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>1 \\<le> i;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i + 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "show \"\\<forall>f. (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "fix f:: \"int \\<Rightarrow> int\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "show \"(\\<forall>n. f n = n + (i + 1)) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "assume f_eq: \"\\<forall>n. f n = n + (i + 1)\""], ["proof (state)\nthis:\n  \\<forall>n. f n = n + (i + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "let ?h = \"\\<lambda>n. n + i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "from induct_hyp"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1", "have h_Ex1: \"?h \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. n + i) \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "from  f_eq"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + (i + 1)", "have \"\\<forall>n. f n = upOne (?h n)\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + (i + 1)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = upOne (n + i)", "by (unfold upOne_def,auto)"], ["proof (state)\nthis:\n  \\<forall>n. f n = upOne (n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "hence \"\\<forall>n. f n = (upOne \\<circ> ?h) n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = upOne (n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = (upOne \\<circ> (\\<lambda>n. n + i)) n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = (upOne \\<circ> (\\<lambda>n. n + i)) n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with fun_eq_iff[THEN sym, of f \"upOne \\<circ> ?h\"]"], ["proof (chain)\npicking this:\n  (\\<forall>x. f x = (upOne \\<circ> (\\<lambda>n. n + i)) x) =\n  (f = upOne \\<circ> (\\<lambda>n. n + i))\n  \\<forall>n. f n = (upOne \\<circ> (\\<lambda>n. n + i)) n", "have \"f = upOne \\<circ> ?h\""], ["proof (prove)\nusing this:\n  (\\<forall>x. f x = (upOne \\<circ> (\\<lambda>n. n + i)) x) =\n  (f = upOne \\<circ> (\\<lambda>n. n + i))\n  \\<forall>n. f n = (upOne \\<circ> (\\<lambda>n. n + i)) n\n\ngoal (1 subgoal):\n 1. f = upOne \\<circ> (\\<lambda>n. n + i)", "by auto"], ["proof (state)\nthis:\n  f = upOne \\<circ> (\\<lambda>n. n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i + 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with h_Ex1 and Ex1.comp_func[of ?h]"], ["proof (chain)\npicking this:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  f = upOne \\<circ> (\\<lambda>n. n + i)", "show \"f \\<in> Ex1\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  f = upOne \\<circ> (\\<lambda>n. n + i)\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (i + 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "fix i::int"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "assume \"i \\<le> 1\""], ["proof (state)\nthis:\n  i \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "assume induct_hyp: \"\\<forall>f. (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> Ex1\""], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 1;\n        \\<forall>f.\n           (\\<forall>n. f n = n + i) \\<longrightarrow>\n           f \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> \\<forall>f.\n                            (\\<forall>n.\n                                f n = n + (i - 1)) \\<longrightarrow>\n                            f \\<in> CofGroups.Ex1", "show \"\\<forall>f. (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "fix f:: \"int \\<Rightarrow> int\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "show \"(\\<forall>n. f n = n + (i - 1)) \\<longrightarrow> f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "assume f_eq: \"\\<forall>n. f n = n + (i - 1)\""], ["proof (state)\nthis:\n  \\<forall>n. f n = n + (i - 1)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "let ?h = \"\\<lambda>n. n + i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "from  induct_hyp"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1", "have h_Ex1: \"?h \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + i) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. n + i) \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "from inv_upOne_eq and f_eq"], ["proof (chain)\npicking this:\n  inv upOne ?n = ?n - 1\n  \\<forall>n. f n = n + (i - 1)", "have \"\\<forall>n. f n = (inv upOne) (?h n)\""], ["proof (prove)\nusing this:\n  inv upOne ?n = ?n - 1\n  \\<forall>n. f n = n + (i - 1)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = inv upOne (n + i)", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = inv upOne (n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "hence \"\\<forall>n. f n = (inv upOne \\<circ> ?h) n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = inv upOne (n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = (inv upOne \\<circ> (\\<lambda>n. n + i)) n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = (inv upOne \\<circ> (\\<lambda>n. n + i)) n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with fun_eq_iff[THEN sym, of f \"inv upOne \\<circ> ?h\"]"], ["proof (chain)\npicking this:\n  (\\<forall>x. f x = (inv upOne \\<circ> (\\<lambda>n. n + i)) x) =\n  (f = inv upOne \\<circ> (\\<lambda>n. n + i))\n  \\<forall>n. f n = (inv upOne \\<circ> (\\<lambda>n. n + i)) n", "have \"f = inv upOne \\<circ> ?h\""], ["proof (prove)\nusing this:\n  (\\<forall>x. f x = (inv upOne \\<circ> (\\<lambda>n. n + i)) x) =\n  (f = inv upOne \\<circ> (\\<lambda>n. n + i))\n  \\<forall>n. f n = (inv upOne \\<circ> (\\<lambda>n. n + i)) n\n\ngoal (1 subgoal):\n 1. f = inv upOne \\<circ> (\\<lambda>n. n + i)", "by auto"], ["proof (state)\nthis:\n  f = inv upOne \\<circ> (\\<lambda>n. n + i)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n + (i - 1) \\<Longrightarrow> f \\<in> CofGroups.Ex1", "with h_Ex1 and Ex1.comp_inv[of ?h]"], ["proof (chain)\npicking this:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  f = inv upOne \\<circ> (\\<lambda>n. n + i)", "show \"f \\<in> Ex1\""], ["proof (prove)\nusing this:\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  (\\<lambda>n. n + i) \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> (\\<lambda>n. n + i) \\<in> CofGroups.Ex1\n  f = inv upOne \\<circ> (\\<lambda>n. n + i)\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (i - 1)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Combining the two directions we get the normal form\ntheorem.\\<close>"], ["", "theorem Ex1_Normal_form: \"(f \\<in> Ex1) = (\\<exists>k. \\<forall>n. f(n) = n + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. f n = n + k)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. f n = n + k\n 2. \\<exists>k. \\<forall>n. f n = n + k \\<Longrightarrow>\n    f \\<in> CofGroups.Ex1", "assume \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    \\<exists>k. \\<forall>n. f n = n + k\n 2. \\<exists>k. \\<forall>n. f n = n + k \\<Longrightarrow>\n    f \\<in> CofGroups.Ex1", "with Ex1_Normal_form_part1 [of f]"], ["proof (chain)\npicking this:\n  f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  \\<exists>k. \\<forall>n. f n = n + k\n  f \\<in> CofGroups.Ex1", "show \"(\\<exists>k. \\<forall>n. f(n) = n + k)\""], ["proof (prove)\nusing this:\n  f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  \\<exists>k. \\<forall>n. f n = n + k\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. f n = n + k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. f n = n + k \\<Longrightarrow>\n    f \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. f n = n + k \\<Longrightarrow>\n    f \\<in> CofGroups.Ex1", "assume \"\\<exists>k. \\<forall>n. f(n) = n + k\""], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. f n = n + k \\<Longrightarrow>\n    f \\<in> CofGroups.Ex1", "with Ex1_Normal_form_part2"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + ?k) \\<longrightarrow> f \\<in> CofGroups.Ex1\n  \\<exists>k. \\<forall>n. f n = n + k", "show \"f \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + ?k) \\<longrightarrow> f \\<in> CofGroups.Ex1\n  \\<exists>k. \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>All Elements Cofinitary Bijections.\\<close>"], ["", "text \\<open>\\label {sect:Ex1CofBij} We now show all elements in @{term\nEx1} are bijections, Theorem @{term all_bij}, and have no fixed\npoints, Theorem @{term no_fixed_pt}.\\<close>"], ["", "theorem all_bij: \"f \\<in> Ex1 \\<Longrightarrow> bij f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij f", "proof (unfold bij_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inj f \\<and> surj f", "assume \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inj f \\<and> surj f", "with Ex1_Normal_form"], ["proof (chain)\npicking this:\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n  f \\<in> CofGroups.Ex1", "obtain k where f_eq:\"\\<forall>n. f n = n + k\""], ["proof (prove)\nusing this:\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n. f n = n + k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inj f \\<and> surj f", "show \"inj f \\<and> surj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f \\<and> surj f", "proof (rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj f\n 2. surj f", "show INJ: \"inj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f", "proof (rule injI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "fix n m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "assume \"f n = f m\""], ["proof (state)\nthis:\n  f n = f m\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "with f_eq"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + k\n  f n = f m", "have \"n + k = m + k\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n  f n = f m\n\ngoal (1 subgoal):\n 1. n + k = m + k", "by auto"], ["proof (state)\nthis:\n  n + k = m + k\n\ngoal (1 subgoal):\n 1. \\<And>x y. f x = f y \\<Longrightarrow> x = y", "thus \"n = m\""], ["proof (prove)\nusing this:\n  n + k = m + k\n\ngoal (1 subgoal):\n 1. n = m", "by auto"], ["proof (state)\nthis:\n  n = m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. surj f", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. surj f", "show SURJ: \"surj f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. surj f", "proof (unfold Fun.surj_def, rule allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = f x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = f x", "from f_eq"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + k", "have \"n = f (n - k)\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. n = f (n - k)", "by auto"], ["proof (state)\nthis:\n  n = f (n - k)\n\ngoal (1 subgoal):\n 1. \\<And>y. \\<exists>x. y = f x", "thus \"\\<exists>m. n = f m\""], ["proof (prove)\nusing this:\n  n = f (n - k)\n\ngoal (1 subgoal):\n 1. \\<exists>m. n = f m", "by (rule exI)"], ["proof (state)\nthis:\n  \\<exists>m. n = f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  surj f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj f \\<and> surj f\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem no_fixed_pt: \n  assumes f_Ex1: \"f \\<in> Ex1\"\n  and f_not_id: \"f \\<noteq> id\"\n  shows \"Fix f = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fix f = {}", "proof -\n    \\<comment> \\<open>we start by proving an easy general fact\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. Fix f = {}", "have f_eq_then_id: \"(\\<forall>n. f(n) = n) \\<Longrightarrow> f = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n \\<Longrightarrow> f = id", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n \\<Longrightarrow> f = id", "assume f_prop : \"\\<forall>n. f(n) = n\""], ["proof (state)\nthis:\n  \\<forall>n. f n = n\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n \\<Longrightarrow> f = id", "have \"(f x = id x) = (f x = x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x = id x) = (f x = x)", "by simp"], ["proof (state)\nthis:\n  (f x = id x) = (f x = x)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n \\<Longrightarrow> f = id", "hence \"(\\<forall>x. (f x = id x)) = (\\<forall>x. (f x = x))\""], ["proof (prove)\nusing this:\n  (f x = id x) = (f x = x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. f x = id x) = (\\<forall>x. f x = x)", "by simp"], ["proof (state)\nthis:\n  (\\<forall>x. f x = id x) = (\\<forall>x. f x = x)\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n = n \\<Longrightarrow> f = id", "with fun_eq_iff[THEN sym, of f id] and f_prop"], ["proof (chain)\npicking this:\n  (\\<forall>x. f x = id x) = (f = id)\n  \\<forall>n. f n = n\n  (\\<forall>x. f x = id x) = (\\<forall>x. f x = x)", "show \"f = id\""], ["proof (prove)\nusing this:\n  (\\<forall>x. f x = id x) = (f = id)\n  \\<forall>n. f n = n\n  (\\<forall>x. f x = id x) = (\\<forall>x. f x = x)\n\ngoal (1 subgoal):\n 1. f = id", "by auto"], ["proof (state)\nthis:\n  f = id\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. f n = n \\<Longrightarrow> f = id\n\ngoal (1 subgoal):\n 1. Fix f = {}", "from f_Ex1 and Ex1_Normal_form"], ["proof (chain)\npicking this:\n  f \\<in> CofGroups.Ex1\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)", "have \"\\<exists>k. \\<forall>n. f(n) = n + k\""], ["proof (prove)\nusing this:\n  f \\<in> CofGroups.Ex1\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n\ngoal (1 subgoal):\n 1. \\<exists>k. \\<forall>n. f n = n + k", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. Fix f = {}", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. \\<forall>n. f n = n + k", "obtain k where k_prop: \"\\<forall>n. f(n) = n + k\""], ["proof (prove)\nusing this:\n  \\<exists>k. \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n. f n = n + k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. Fix f = {}", "hence \"k = 0 \\<Longrightarrow> \\<forall>n. f(n) = n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. k = 0 \\<Longrightarrow> \\<forall>n. f n = n", "by auto"], ["proof (state)\nthis:\n  k = 0 \\<Longrightarrow> \\<forall>n. f n = n\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with f_eq_then_id and f_not_id"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n \\<Longrightarrow> f = id\n  f \\<noteq> id\n  k = 0 \\<Longrightarrow> \\<forall>n. f n = n", "have \"k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n \\<Longrightarrow> f = id\n  f \\<noteq> id\n  k = 0 \\<Longrightarrow> \\<forall>n. f n = n\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with k_prop"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + k\n  k \\<noteq> 0", "have \"\\<forall>n. f(n) \\<noteq> n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>n. f n \\<noteq> n", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n \\<noteq> n\n\ngoal (1 subgoal):\n 1. Fix f = {}", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. f n \\<noteq> n\n\ngoal (1 subgoal):\n 1. Fix f = {}", "from Fix_def[of f]"], ["proof (chain)\npicking this:\n  Fix f = {n. f n = n}", "have \"Fix f = {n . f(n) = n}\""], ["proof (prove)\nusing this:\n  Fix f = {n. f n = n}\n\ngoal (1 subgoal):\n 1. Fix f = {n. f n = n}", "by auto"], ["proof (state)\nthis:\n  Fix f = {n. f n = n}\n\ngoal (1 subgoal):\n 1. Fix f = {}", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n. f n \\<noteq> n\n  Fix f = {n. f n = n}", "have \"Fix f = {n. False}\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n \\<noteq> n\n  Fix f = {n. f n = n}\n\ngoal (1 subgoal):\n 1. Fix f = {n. False}", "by auto"], ["proof (state)\nthis:\n  Fix f = {n. False}\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with Set.empty_def"], ["proof (chain)\npicking this:\n  {} = {x. False}\n  Fix f = {n. False}", "show \"Fix f = {}\""], ["proof (prove)\nusing this:\n  {} = {x. False}\n  Fix f = {n. False}\n\ngoal (1 subgoal):\n 1. Fix f = {}", "by auto"], ["proof (state)\nthis:\n  Fix f = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Closed under Composition and Inverse\\<close>"], ["", "text \\<open>\\label {sect:Ex1Closed} We start by showing that this set is\nclosed under composition.  These facts can later be conjugated to\neasily obtain the corresponding results for the group on the natural\nnumbers.\\<close>"], ["", "theorem closed_comp: \"f \\<in> Ex1 \\<and> g \\<in> Ex1 \\<Longrightarrow> f \\<circ> g \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    f \\<circ> g \\<in> CofGroups.Ex1", "proof (rule Ex1.induct [of f], blast)"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    upOne \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "assume \"f \\<in> Ex1 \\<and> g \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1\n\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    upOne \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "with Ex1.comp_func[of g]"], ["proof (chain)\npicking this:\n  g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> g \\<in> CofGroups.Ex1\n  f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1", "show \"upOne \\<circ> g \\<in> Ex1\""], ["proof (prove)\nusing this:\n  g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> g \\<in> CofGroups.Ex1\n  f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. upOne \\<circ> g \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  upOne \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "fix fa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "assume \"fa \\<circ> g \\<in> Ex1\""], ["proof (state)\nthis:\n  fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "with Ex1.comp_func [of \"fa \\<circ> g\"]\n    and Fun.o_assoc [of \"upOne\" \"fa\" \"g\"]"], ["proof (chain)\npicking this:\n  fa \\<circ> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> (fa \\<circ> g) \\<in> CofGroups.Ex1\n  upOne \\<circ> (fa \\<circ> g) = upOne \\<circ> fa \\<circ> g\n  fa \\<circ> g \\<in> CofGroups.Ex1", "show \"upOne \\<circ> fa \\<circ> g \\<in> Ex1\""], ["proof (prove)\nusing this:\n  fa \\<circ> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  upOne \\<circ> (fa \\<circ> g) \\<in> CofGroups.Ex1\n  upOne \\<circ> (fa \\<circ> g) = upOne \\<circ> fa \\<circ> g\n  fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "fix fa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "assume \"fa \\<circ> g \\<in> Ex1\""], ["proof (state)\nthis:\n  fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1 \\<and> g \\<in> CofGroups.Ex1;\n        fa \\<in> CofGroups.Ex1; fa \\<circ> g \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "with Ex1.comp_inv [of \"fa \\<circ> g\"]\n    and Fun.o_assoc [of \"inv upOne\" \"fa\" \"g\"]"], ["proof (chain)\npicking this:\n  fa \\<circ> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> (fa \\<circ> g) \\<in> CofGroups.Ex1\n  inv upOne \\<circ> (fa \\<circ> g) = inv upOne \\<circ> fa \\<circ> g\n  fa \\<circ> g \\<in> CofGroups.Ex1", "show \"(inv upOne) \\<circ> fa \\<circ> g \\<in> Ex1\""], ["proof (prove)\nusing this:\n  fa \\<circ> g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> (fa \\<circ> g) \\<in> CofGroups.Ex1\n  inv upOne \\<circ> (fa \\<circ> g) = inv upOne \\<circ> fa \\<circ> g\n  fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv upOne \\<circ> fa \\<circ> g \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we show the set is closed under inverses.  This is\ndone by an induction on the definition of @{term Ex1} only using\nthe normal form theorem and rewriting of expressions.\\<close>"], ["", "theorem closed_inv: \"f \\<in> Ex1 \\<Longrightarrow> inv f \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv f \\<in> CofGroups.Ex1", "proof (rule Ex1.induct [of \"f\"], blast)"], ["proof (state)\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv upOne \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "assume \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (3 subgoals):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv upOne \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 3. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "show \"inv upOne \\<in> Ex1\" (is \"?right \\<in> Ex1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "let ?left  = \"inv upOne \\<circ> (inv upOne \\<circ> upOne)\""], ["proof (state)\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "from Ex1.comp_inv and Ex1.base_func"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> ?f \\<in> CofGroups.Ex1\n  upOne \\<in> CofGroups.Ex1", "have \"?left \\<in> Ex1\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv upOne \\<circ> ?f \\<in> CofGroups.Ex1\n  upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "{"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "from bij_upOne and bij_is_inj"], ["proof (chain)\npicking this:\n  bij upOne\n  bij ?f \\<Longrightarrow> inj ?f", "have \"inj upOne\""], ["proof (prove)\nusing this:\n  bij upOne\n  bij ?f \\<Longrightarrow> inj ?f\n\ngoal (1 subgoal):\n 1. inj upOne", "by auto"], ["proof (state)\nthis:\n  inj upOne\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "hence \"inv upOne \\<circ> upOne = id\""], ["proof (prove)\nusing this:\n  inj upOne\n\ngoal (1 subgoal):\n 1. inv upOne \\<circ> upOne = id", "by auto"], ["proof (state)\nthis:\n  inv upOne \\<circ> upOne = id\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "hence \"?left = ?right\""], ["proof (prove)\nusing this:\n  inv upOne \\<circ> upOne = id\n\ngoal (1 subgoal):\n 1. inv upOne \\<circ> (inv upOne \\<circ> upOne) = inv upOne", "by auto"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) = inv upOne\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) = inv upOne\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) = inv upOne", "show ?thesis"], ["proof (prove)\nusing this:\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) \\<in> CofGroups.Ex1\n  inv upOne \\<circ> (inv upOne \\<circ> upOne) = inv upOne\n\ngoal (1 subgoal):\n 1. inv upOne \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv upOne \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv upOne \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "assume f_Ex1: \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "from f_Ex1 and Ex1_Normal_form"], ["proof (chain)\npicking this:\n  f \\<in> CofGroups.Ex1\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)", "obtain k where f_eq: \"\\<forall>n. f n = n + k\""], ["proof (prove)\nusing this:\n  f \\<in> CofGroups.Ex1\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n. f n = n + k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = n + k\n\ngoal (2 subgoals):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (upOne \\<circ> fa) \\<in> CofGroups.Ex1\n 2. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "show \"inv (upOne \\<circ> f) \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "let ?ic = \"inv (upOne \\<circ> f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "let ?ci = \"inv f \\<circ> inv upOne\""], ["proof (state)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "{\n      \\<comment> \\<open>first we get an expression for @{term ?ci}\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "from all_bij and f_Ex1"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1", "have \"bij f\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. bij f", "by auto"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "with bij_is_inj"], ["proof (chain)\npicking this:\n  bij ?f \\<Longrightarrow> inj ?f\n  bij f", "have inj_f: \"inj f\""], ["proof (prove)\nusing this:\n  bij ?f \\<Longrightarrow> inj ?f\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by auto"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "have \"\\<forall>n. inv f n = n - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. inv f n = n - k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "from f_eq"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + k", "have \"f (n - k) = n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. f (n - k) = n", "by auto"], ["proof (state)\nthis:\n  f (n - k) = n\n\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "with inv_f_eq[of f \"n-k\" \"n\"] and inj_f"], ["proof (chain)\npicking this:\n  \\<lbrakk>inj f; f (n - k) = n\\<rbrakk> \\<Longrightarrow> inv f n = n - k\n  inj f\n  f (n - k) = n", "show \"inv f n = n-k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>inj f; f (n - k) = n\\<rbrakk> \\<Longrightarrow> inv f n = n - k\n  inj f\n  f (n - k) = n\n\ngoal (1 subgoal):\n 1. inv f n = n - k", "by auto"], ["proof (state)\nthis:\n  inv f n = n - k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. inv f n = n - k\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "with inv_upOne_eq"], ["proof (chain)\npicking this:\n  inv upOne ?n = ?n - 1\n  \\<forall>n. inv f n = n - k", "have \"\\<forall>n. ?ci n = n - k - 1\""], ["proof (prove)\nusing this:\n  inv upOne ?n = ?n - 1\n  \\<forall>n. inv f n = n - k\n\ngoal (1 subgoal):\n 1. \\<forall>n. (inv f \\<circ> inv upOne) n = n - k - 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n - k - 1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "hence \"\\<forall>n. ?ci n = n + (-1 - k)\""], ["proof (prove)\nusing this:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n - k - 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)", "by arith"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover\n      \\<comment> \\<open>then we check that this implies @{term ?ci} is\\<close>\n      \\<comment> \\<open>a member of @{term Ex1}\\<close>"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "{"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "from Ex1_Normal_form_part2[of \"-1 - k\"]"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1", "have \"(\\<forall>f. ((\\<forall>n. f n = n + (-1 - k)) \\<longrightarrow> f \\<in> Ex1))\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1", "have \"?ci \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>n. (inv f \\<circ> inv upOne) n = n + (- 1 - k)\n  \\<forall>f.\n     (\\<forall>n. f n = n + (- 1 - k)) \\<longrightarrow>\n     f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv f \\<circ> inv upOne \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "{"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "from f_Ex1 all_bij"], ["proof (chain)\npicking this:\n  f \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f", "have \"bij f\""], ["proof (prove)\nusing this:\n  f \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n\ngoal (1 subgoal):\n 1. bij f", "by auto"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "with bij_upOne and o_inv_distrib[THEN sym]"], ["proof (chain)\npicking this:\n  bij upOne\n  \\<lbrakk>bij ?f1; bij ?g1\\<rbrakk>\n  \\<Longrightarrow> inv ?g1 \\<circ> inv ?f1 = inv (?f1 \\<circ> ?g1)\n  bij f", "have \"?ci = ?ic\""], ["proof (prove)\nusing this:\n  bij upOne\n  \\<lbrakk>bij ?f1; bij ?g1\\<rbrakk>\n  \\<Longrightarrow> inv ?g1 \\<circ> inv ?f1 = inv (?f1 \\<circ> ?g1)\n  bij f\n\ngoal (1 subgoal):\n 1. inv f \\<circ> inv upOne = inv (upOne \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne = inv (upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv f \\<circ> inv upOne = inv (upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n  inv f \\<circ> inv upOne = inv (upOne \\<circ> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  inv f \\<circ> inv upOne \\<in> CofGroups.Ex1\n  inv f \\<circ> inv upOne = inv (upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (upOne \\<circ> f) \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv (upOne \\<circ> f) \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv (upOne \\<circ> f) \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "assume f_Ex1: \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "with Ex1_Normal_form"], ["proof (chain)\npicking this:\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n  f \\<in> CofGroups.Ex1", "obtain k where f_eq: \"\\<forall>n. f n = n + k\""], ["proof (prove)\nusing this:\n  (?f \\<in> CofGroups.Ex1) = (\\<exists>k. \\<forall>n. ?f n = n + k)\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<forall>n. f n = n + k \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. \\<And>fa.\n       \\<lbrakk>f \\<in> CofGroups.Ex1; fa \\<in> CofGroups.Ex1;\n        inv fa \\<in> CofGroups.Ex1\\<rbrakk>\n       \\<Longrightarrow> inv (inv upOne \\<circ> fa) \\<in> CofGroups.Ex1", "show \"inv (inv upOne \\<circ> f) \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "let ?ic = \"inv (inv upOne \\<circ> f)\""], ["proof (state)\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "let ?c = \"inv f \\<circ> upOne\""], ["proof (state)\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "from all_bij and f_Ex1"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1", "have \"bij f\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. bij f", "by auto"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "with bij_is_inj"], ["proof (chain)\npicking this:\n  bij ?f \\<Longrightarrow> inj ?f\n  bij f", "have inj_f: \"inj f\""], ["proof (prove)\nusing this:\n  bij ?f \\<Longrightarrow> inj ?f\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by auto"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "have \"\\<forall>n. inv f n = n - k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n. inv f n = n - k", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "from f_eq"], ["proof (chain)\npicking this:\n  \\<forall>n. f n = n + k", "have \"f (n - k) = n\""], ["proof (prove)\nusing this:\n  \\<forall>n. f n = n + k\n\ngoal (1 subgoal):\n 1. f (n - k) = n", "by auto"], ["proof (state)\nthis:\n  f (n - k) = n\n\ngoal (1 subgoal):\n 1. \\<And>n. inv f n = n - k", "with inv_f_eq[of f \"n-k\" \"n\"] and inj_f"], ["proof (chain)\npicking this:\n  \\<lbrakk>inj f; f (n - k) = n\\<rbrakk> \\<Longrightarrow> inv f n = n - k\n  inj f\n  f (n - k) = n", "show \"inv f n = n-k\""], ["proof (prove)\nusing this:\n  \\<lbrakk>inj f; f (n - k) = n\\<rbrakk> \\<Longrightarrow> inv f n = n - k\n  inj f\n  f (n - k) = n\n\ngoal (1 subgoal):\n 1. inv f n = n - k", "by auto"], ["proof (state)\nthis:\n  inv f n = n - k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. inv f n = n - k\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "with upOne_def"], ["proof (chain)\npicking this:\n  upOne ?n = ?n + 1\n  \\<forall>n. inv f n = n - k", "have \"\\<forall>n. (inv f \\<circ> upOne) n = n - k + 1\""], ["proof (prove)\nusing this:\n  upOne ?n = ?n + 1\n  \\<forall>n. inv f n = n - k\n\ngoal (1 subgoal):\n 1. \\<forall>n. (inv f \\<circ> upOne) n = n - k + 1", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> upOne) n = n - k + 1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "hence \"\\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)\""], ["proof (prove)\nusing this:\n  \\<forall>n. (inv f \\<circ> upOne) n = n - k + 1\n\ngoal (1 subgoal):\n 1. \\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)", "by arith"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "from Ex1_Normal_form_part2[of \"1 - k\"]"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> CofGroups.Ex1", "have \"(\\<forall>f. ((\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> Ex1))\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. \\<forall>f.\n       (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow>\n       f \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  \\<forall>f.\n     (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)\n  \\<forall>f.\n     (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> CofGroups.Ex1", "have \"?c \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>n. (inv f \\<circ> upOne) n = n + (1 - k)\n  \\<forall>f.\n     (\\<forall>n. f n = n + (1 - k)) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv f \\<circ> upOne \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "{"], ["proof (state)\nthis:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "from f_Ex1 all_bij and bij_is_inj"], ["proof (chain)\npicking this:\n  f \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  bij ?f \\<Longrightarrow> inj ?f", "have \"bij f\""], ["proof (prove)\nusing this:\n  f \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  bij ?f \\<Longrightarrow> inj ?f\n\ngoal (1 subgoal):\n 1. bij f", "by auto"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "from bij_upOne and bij_imp_bij_inv"], ["proof (chain)\npicking this:\n  bij upOne\n  bij ?f \\<Longrightarrow> bij (inv ?f)", "have \"bij (inv upOne)\""], ["proof (prove)\nusing this:\n  bij upOne\n  bij ?f \\<Longrightarrow> bij (inv ?f)\n\ngoal (1 subgoal):\n 1. bij (inv upOne)", "by auto"], ["proof (state)\nthis:\n  bij (inv upOne)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  bij (inv upOne)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "note o_inv_distrib[THEN sym]"], ["proof (state)\nthis:\n  \\<lbrakk>bij ?f1; bij ?g1\\<rbrakk>\n  \\<Longrightarrow> inv ?g1 \\<circ> inv ?f1 = inv (?f1 \\<circ> ?g1)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  bij f\n  bij (inv upOne)\n  \\<lbrakk>bij ?f1; bij ?g1\\<rbrakk>\n  \\<Longrightarrow> inv ?g1 \\<circ> inv ?f1 = inv (?f1 \\<circ> ?g1)", "have \"inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)\""], ["proof (prove)\nusing this:\n  bij f\n  bij (inv upOne)\n  \\<lbrakk>bij ?f1; bij ?g1\\<rbrakk>\n  \\<Longrightarrow> inv ?g1 \\<circ> inv ?f1 = inv (?f1 \\<circ> ?g1)\n\ngoal (1 subgoal):\n 1. inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "moreover"], ["proof (state)\nthis:\n  inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "from bij_upOne and inv_inv_eq"], ["proof (chain)\npicking this:\n  bij upOne\n  bij ?f \\<Longrightarrow> inv (inv ?f) = ?f", "have \"inv (inv upOne) = upOne\""], ["proof (prove)\nusing this:\n  bij upOne\n  bij ?f \\<Longrightarrow> inv (inv ?f) = ?f\n\ngoal (1 subgoal):\n 1. inv (inv upOne) = upOne", "by auto"], ["proof (state)\nthis:\n  inv (inv upOne) = upOne\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)\n  inv (inv upOne) = upOne", "have \"?c = ?ic\""], ["proof (prove)\nusing this:\n  inv f \\<circ> inv (inv upOne) = inv (inv upOne \\<circ> f)\n  inv (inv upOne) = upOne\n\ngoal (1 subgoal):\n 1. inv f \\<circ> upOne = inv (inv upOne \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  inv f \\<circ> upOne = inv (inv upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "}"], ["proof (state)\nthis:\n  inv f \\<circ> upOne = inv (inv upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "ultimately"], ["proof (chain)\npicking this:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n  inv f \\<circ> upOne = inv (inv upOne \\<circ> f)", "show ?thesis"], ["proof (prove)\nusing this:\n  inv f \\<circ> upOne \\<in> CofGroups.Ex1\n  inv f \\<circ> upOne = inv (inv upOne \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv (inv upOne \\<circ> f) \\<in> CofGroups.Ex1\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Conjugation with a Bijection\\<close>"], ["", "text \\<open>\\label {sect:moveNN} An abbreviation of the bijection from the\nnatural numbers to the integers defined in the library.  This will be\nused to coerce the functions above to be on the natural numbers.\\<close>"], ["", "abbreviation \"ni_bij == int_decode\""], ["", "lemma bij_f_o_inf_f: \"bij f \\<Longrightarrow> f \\<circ> inv f = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij f \\<Longrightarrow> f \\<circ> inv f = id", "unfolding bij_def surj_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. inj f \\<and> f \\<circ> inv f = id \\<Longrightarrow> f \\<circ> inv f = id", "by simp"], ["", "text \\<open>The following theorem is a key theorem in showing that the\ngroup we are interested in is cofinitary.  It states that when you\nconjugate a function with a bijection the fixed points get mapped\nover.\\<close>"], ["", "theorem conj_fix_pt: \"\\<And>f::('a \\<Rightarrow> 'b). \\<And>g::('b \\<Rightarrow> 'b). (bij f) \n  \\<Longrightarrow> ((inv f)`(Fix g)) = Fix ((inv f) \\<circ> g \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "fix f::\"'a \\<Rightarrow> 'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "assume bij_f: \"bij f\""], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "with bij_def"], ["proof (chain)\npicking this:\n  bij ?f = (inj ?f \\<and> surj ?f)\n  bij f", "have inj_f: \"inj f\""], ["proof (prove)\nusing this:\n  bij ?f = (inj ?f \\<and> surj ?f)\n  bij f\n\ngoal (1 subgoal):\n 1. inj f", "by auto"], ["proof (state)\nthis:\n  inj f\n\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "fix g::\"'b\\<Rightarrow>'b\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f g.\n       bij f \\<Longrightarrow>\n       inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "show \"((inv f)`(Fix g)) = Fix ((inv f) \\<circ> g \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "thm set_eq_subset[of \"(inv f)`(Fix g)\" \"Fix((inv f) \\<circ> g \\<circ> f)\"]"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inv f ` Fix g \\<subseteq> Fix (inv f \\<circ> g \\<circ> f)\n 2. Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> inv f ` Fix g", "show \"(inv f)`(Fix g) \\<subseteq> Fix ((inv f) \\<circ> g \\<circ> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f ` Fix g \\<subseteq> Fix (inv f \\<circ> g \\<circ> f)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "assume \"x \\<in> (inv f)`(Fix g)\""], ["proof (state)\nthis:\n  x \\<in> inv f ` Fix g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with image_def"], ["proof (chain)\npicking this:\n  ?f ` ?A = {y. \\<exists>x\\<in>?A. y = ?f x}\n  x \\<in> inv f ` Fix g", "have \"\\<exists>y \\<in> Fix g. x = (inv f) y\""], ["proof (prove)\nusing this:\n  ?f ` ?A = {y. \\<exists>x\\<in>?A. y = ?f x}\n  x \\<in> inv f ` Fix g\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>Fix g. x = inv f y", "by auto"], ["proof (state)\nthis:\n  \\<exists>y\\<in>Fix g. x = inv f y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y\\<in>Fix g. x = inv f y", "obtain y where y_prop: \"y \\<in> Fix g \\<and> x = (inv f) y\""], ["proof (prove)\nusing this:\n  \\<exists>y\\<in>Fix g. x = inv f y\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        y \\<in> Fix g \\<and> x = inv f y \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  y \\<in> Fix g \\<and> x = inv f y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "hence \"x = (inv f) y\""], ["proof (prove)\nusing this:\n  y \\<in> Fix g \\<and> x = inv f y\n\ngoal (1 subgoal):\n 1. x = inv f y", ".."], ["proof (state)\nthis:\n  x = inv f y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "hence \"f x = (f \\<circ> inv f) y\""], ["proof (prove)\nusing this:\n  x = inv f y\n\ngoal (1 subgoal):\n 1. f x = (f \\<circ> inv f) y", "by auto"], ["proof (state)\nthis:\n  f x = (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with bij_f and bij_f_o_inf_f[of f]"], ["proof (chain)\npicking this:\n  bij f\n  bij f \\<Longrightarrow> f \\<circ> inv f = id\n  f x = (f \\<circ> inv f) y", "have f_x_y: \"f x = y\""], ["proof (prove)\nusing this:\n  bij f\n  bij f \\<Longrightarrow> f \\<circ> inv f = id\n  f x = (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. f x = y", "by auto"], ["proof (state)\nthis:\n  f x = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "from y_prop"], ["proof (chain)\npicking this:\n  y \\<in> Fix g \\<and> x = inv f y", "have \"y \\<in> Fix g\""], ["proof (prove)\nusing this:\n  y \\<in> Fix g \\<and> x = inv f y\n\ngoal (1 subgoal):\n 1. y \\<in> Fix g", ".."], ["proof (state)\nthis:\n  y \\<in> Fix g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with Fix_def[of g]"], ["proof (chain)\npicking this:\n  Fix g = {n. g n = n}\n  y \\<in> Fix g", "have \"g y = y\""], ["proof (prove)\nusing this:\n  Fix g = {n. g n = n}\n  y \\<in> Fix g\n\ngoal (1 subgoal):\n 1. g y = y", "by auto"], ["proof (state)\nthis:\n  g y = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with f_x_y"], ["proof (chain)\npicking this:\n  f x = y\n  g y = y", "have \"g (f x) = f x\""], ["proof (prove)\nusing this:\n  f x = y\n  g y = y\n\ngoal (1 subgoal):\n 1. g (f x) = f x", "by auto"], ["proof (state)\nthis:\n  g (f x) = f x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "hence \"(inv f) (g (f x)) = inv f (f x)\""], ["proof (prove)\nusing this:\n  g (f x) = f x\n\ngoal (1 subgoal):\n 1. inv f (g (f x)) = inv f (f x)", "by auto"], ["proof (state)\nthis:\n  inv f (g (f x)) = inv f (f x)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with inv_f_f and inj_f"], ["proof (chain)\npicking this:\n  inj ?f \\<Longrightarrow> inv ?f (?f ?x) = ?x\n  inj f\n  inv f (g (f x)) = inv f (f x)", "have \"(inv f) (g (f x)) = x\""], ["proof (prove)\nusing this:\n  inj ?f \\<Longrightarrow> inv ?f (?f ?x) = ?x\n  inj f\n  inv f (g (f x)) = inv f (f x)\n\ngoal (1 subgoal):\n 1. inv f (g (f x)) = x", "by auto"], ["proof (state)\nthis:\n  inv f (g (f x)) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "hence \"((inv f) \\<circ> g \\<circ> f) x = x\""], ["proof (prove)\nusing this:\n  inv f (g (f x)) = x\n\ngoal (1 subgoal):\n 1. (inv f \\<circ> g \\<circ> f) x = x", "by auto"], ["proof (state)\nthis:\n  (inv f \\<circ> g \\<circ> f) x = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> inv f ` Fix g \\<Longrightarrow>\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "with Fix_def[of \"inv f \\<circ> g \\<circ> f\"]"], ["proof (chain)\npicking this:\n  Fix (inv f \\<circ> g \\<circ> f) = {n. (inv f \\<circ> g \\<circ> f) n = n}\n  (inv f \\<circ> g \\<circ> f) x = x", "show \"x \\<in> Fix ((inv f) \\<circ> g \\<circ> f)\""], ["proof (prove)\nusing this:\n  Fix (inv f \\<circ> g \\<circ> f) = {n. (inv f \\<circ> g \\<circ> f) n = n}\n  (inv f \\<circ> g \\<circ> f) x = x\n\ngoal (1 subgoal):\n 1. x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  x \\<in> Fix (inv f \\<circ> g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv f ` Fix g \\<subseteq> Fix (inv f \\<circ> g \\<circ> f)\n\ngoal (1 subgoal):\n 1. Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> inv f ` Fix g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> inv f ` Fix g", "show \"Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> (inv f)`(Fix g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> inv f ` Fix g", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "assume \"x \\<in> Fix (inv f \\<circ> g \\<circ> f)\""], ["proof (state)\nthis:\n  x \\<in> Fix (inv f \\<circ> g \\<circ> f)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with Fix_def[of \"inv f \\<circ> g \\<circ> f\"]"], ["proof (chain)\npicking this:\n  Fix (inv f \\<circ> g \\<circ> f) = {n. (inv f \\<circ> g \\<circ> f) n = n}\n  x \\<in> Fix (inv f \\<circ> g \\<circ> f)", "have x_fix: \"(inv f \\<circ> g \\<circ> f) x = x\""], ["proof (prove)\nusing this:\n  Fix (inv f \\<circ> g \\<circ> f) = {n. (inv f \\<circ> g \\<circ> f) n = n}\n  x \\<in> Fix (inv f \\<circ> g \\<circ> f)\n\ngoal (1 subgoal):\n 1. (inv f \\<circ> g \\<circ> f) x = x", "by auto"], ["proof (state)\nthis:\n  (inv f \\<circ> g \\<circ> f) x = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "hence \"(inv f) (g(f(x))) = x\""], ["proof (prove)\nusing this:\n  (inv f \\<circ> g \\<circ> f) x = x\n\ngoal (1 subgoal):\n 1. inv f (g (f x)) = x", "by auto"], ["proof (state)\nthis:\n  inv f (g (f x)) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "hence \"\\<exists>y. (inv f) y = x\""], ["proof (prove)\nusing this:\n  inv f (g (f x)) = x\n\ngoal (1 subgoal):\n 1. \\<exists>y. inv f y = x", "by auto"], ["proof (state)\nthis:\n  \\<exists>y. inv f y = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "from this"], ["proof (chain)\npicking this:\n  \\<exists>y. inv f y = x", "obtain y where x_inf_f_y: \"x = (inv f) y\""], ["proof (prove)\nusing this:\n  \\<exists>y. inv f y = x\n\ngoal (1 subgoal):\n 1. (\\<And>y. x = inv f y \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  x = inv f y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with x_fix"], ["proof (chain)\npicking this:\n  (inv f \\<circ> g \\<circ> f) x = x\n  x = inv f y", "have \"(inv f \\<circ> g \\<circ> f)((inv f) y) = (inv f) y\""], ["proof (prove)\nusing this:\n  (inv f \\<circ> g \\<circ> f) x = x\n  x = inv f y\n\ngoal (1 subgoal):\n 1. (inv f \\<circ> g \\<circ> f) (inv f y) = inv f y", "by auto"], ["proof (state)\nthis:\n  (inv f \\<circ> g \\<circ> f) (inv f y) = inv f y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "hence \"(f \\<circ> inv f \\<circ> g \\<circ> f \\<circ> inv f) (y) = (f \\<circ> inv f)(y)\""], ["proof (prove)\nusing this:\n  (inv f \\<circ> g \\<circ> f) (inv f y) = inv f y\n\ngoal (1 subgoal):\n 1. (f \\<circ> inv f \\<circ> g \\<circ> f \\<circ> inv f) y =\n    (f \\<circ> inv f) y", "by auto"], ["proof (state)\nthis:\n  (f \\<circ> inv f \\<circ> g \\<circ> f \\<circ> inv f) y =\n  (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with o_assoc"], ["proof (chain)\npicking this:\n  ?f \\<circ> (?g \\<circ> ?h) = ?f \\<circ> ?g \\<circ> ?h\n  (f \\<circ> inv f \\<circ> g \\<circ> f \\<circ> inv f) y =\n  (f \\<circ> inv f) y", "have \"((f \\<circ> inv f) \\<circ> g \\<circ> (f \\<circ> inv f)) y = (f \\<circ> inv f)y\""], ["proof (prove)\nusing this:\n  ?f \\<circ> (?g \\<circ> ?h) = ?f \\<circ> ?g \\<circ> ?h\n  (f \\<circ> inv f \\<circ> g \\<circ> f \\<circ> inv f) y =\n  (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. (f \\<circ> inv f \\<circ> g \\<circ> (f \\<circ> inv f)) y =\n    (f \\<circ> inv f) y", "by auto"], ["proof (state)\nthis:\n  (f \\<circ> inv f \\<circ> g \\<circ> (f \\<circ> inv f)) y =\n  (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with bij_f and bij_f_o_inf_f[of f]"], ["proof (chain)\npicking this:\n  bij f\n  bij f \\<Longrightarrow> f \\<circ> inv f = id\n  (f \\<circ> inv f \\<circ> g \\<circ> (f \\<circ> inv f)) y =\n  (f \\<circ> inv f) y", "have \"g y = y\""], ["proof (prove)\nusing this:\n  bij f\n  bij f \\<Longrightarrow> f \\<circ> inv f = id\n  (f \\<circ> inv f \\<circ> g \\<circ> (f \\<circ> inv f)) y =\n  (f \\<circ> inv f) y\n\ngoal (1 subgoal):\n 1. g y = y", "by auto"], ["proof (state)\nthis:\n  g y = y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with Fix_def[of g]"], ["proof (chain)\npicking this:\n  Fix g = {n. g n = n}\n  g y = y", "have \"y \\<in> Fix g\""], ["proof (prove)\nusing this:\n  Fix g = {n. g n = n}\n  g y = y\n\ngoal (1 subgoal):\n 1. y \\<in> Fix g", "by auto"], ["proof (state)\nthis:\n  y \\<in> Fix g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> Fix (inv f \\<circ> g \\<circ> f) \\<Longrightarrow>\n       x \\<in> inv f ` Fix g", "with x_inf_f_y"], ["proof (chain)\npicking this:\n  x = inv f y\n  y \\<in> Fix g", "show \"x \\<in> (inv f)`(Fix g)\""], ["proof (prove)\nusing this:\n  x = inv f y\n  y \\<in> Fix g\n\ngoal (1 subgoal):\n 1. x \\<in> inv f ` Fix g", "by auto"], ["proof (state)\nthis:\n  x \\<in> inv f ` Fix g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Fix (inv f \\<circ> g \\<circ> f) \\<subseteq> inv f ` Fix g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv f ` Fix g = Fix (inv f \\<circ> g \\<circ> f)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Bijections on $\\mathbb{N}$\\<close>"], ["", "text \\<open>\\label {sect:bijN} In this section we define the subset @{term\nEx2} of @{term S_inf} that is the conjugate of @{term Ex1} bij @{term\nni_bij}, and show its basic properties. \n\n@{term CONJ} is the function that will conjugate @{term Ex1} to @{term Ex2}.\\<close>"], ["", "definition CONJ :: \"(int \\<Rightarrow> int) \\<Rightarrow> (nat \\<Rightarrow> nat)\"\nwhere\n\"CONJ f = (inv ni_bij) \\<circ> f \\<circ> ni_bij\""], ["", "declare CONJ_def [simp] \\<comment> \\<open>automated tools can use the definition\\<close>"], ["", "text \\<open>We quickly check that this function is of the right type, and\nthen show three of its properties that are very useful in showing\n@{term Ex2} is a group.\\<close>"], ["", "lemma type_CONJ: \"f \\<in> Ex1 \\<Longrightarrow> (inv ni_bij) \\<circ> f \\<circ> ni_bij \\<in> S_inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "assume f_Ex1: \"f \\<in> Ex1\""], ["proof (state)\nthis:\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "with all_bij"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1", "have \"bij f\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. bij f", "by auto"], ["proof (state)\nthis:\n  bij f\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "with bij_int_decode and bij_comp"], ["proof (chain)\npicking this:\n  bij ni_bij\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk> \\<Longrightarrow> bij (?g \\<circ> ?f)\n  bij f", "have bij_f_nibij: \"bij (f \\<circ> ni_bij)\""], ["proof (prove)\nusing this:\n  bij ni_bij\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk> \\<Longrightarrow> bij (?g \\<circ> ?f)\n  bij f\n\ngoal (1 subgoal):\n 1. bij (f \\<circ> ni_bij)", "by auto"], ["proof (state)\nthis:\n  bij (f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "with bij_int_decode and bij_imp_bij_inv"], ["proof (chain)\npicking this:\n  bij ni_bij\n  bij ?f \\<Longrightarrow> bij (inv ?f)\n  bij (f \\<circ> ni_bij)", "have \"bij (inv ni_bij)\""], ["proof (prove)\nusing this:\n  bij ni_bij\n  bij ?f \\<Longrightarrow> bij (inv ?f)\n  bij (f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. bij (inv ni_bij)", "by auto"], ["proof (state)\nthis:\n  bij (inv ni_bij)\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "with bij_f_nibij and bij_comp[of  \"f \\<circ> ni_bij\" \"inv ni_bij\"] \n    and o_assoc[of \"inv ni_bij\" \"f\" \"ni_bij\"]"], ["proof (chain)\npicking this:\n  bij (f \\<circ> ni_bij)\n  \\<lbrakk>bij (f \\<circ> ni_bij); bij (inv ni_bij)\\<rbrakk>\n  \\<Longrightarrow> bij (inv ni_bij \\<circ> (f \\<circ> ni_bij))\n  inv ni_bij \\<circ> (f \\<circ> ni_bij) =\n  inv ni_bij \\<circ> f \\<circ> ni_bij\n  bij (inv ni_bij)", "have \"bij ((inv ni_bij) \\<circ> f \\<circ> ni_bij)\""], ["proof (prove)\nusing this:\n  bij (f \\<circ> ni_bij)\n  \\<lbrakk>bij (f \\<circ> ni_bij); bij (inv ni_bij)\\<rbrakk>\n  \\<Longrightarrow> bij (inv ni_bij \\<circ> (f \\<circ> ni_bij))\n  inv ni_bij \\<circ> (f \\<circ> ni_bij) =\n  inv ni_bij \\<circ> f \\<circ> ni_bij\n  bij (inv ni_bij)\n\ngoal (1 subgoal):\n 1. bij (inv ni_bij \\<circ> f \\<circ> ni_bij)", "by auto"], ["proof (state)\nthis:\n  bij (inv ni_bij \\<circ> f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n    inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "with S_inf_def"], ["proof (chain)\npicking this:\n  S_inf = {f. bij f}\n  bij (inv ni_bij \\<circ> f \\<circ> ni_bij)", "show \"((inv ni_bij) \\<circ> f \\<circ> ni_bij) \\<in> S_inf\""], ["proof (prove)\nusing this:\n  S_inf = {f. bij f}\n  bij (inv ni_bij \\<circ> f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf", "by auto"], ["proof (state)\nthis:\n  inv ni_bij \\<circ> f \\<circ> ni_bij \\<in> S_inf\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_CONJ: \n  assumes bij_f: \"bij f\"\n  shows \"inv (CONJ f) = CONJ (inv f)\" (is \"?left = ?right\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "have st1: \"?left = inv ((inv ni_bij) \\<circ> f \\<circ> ni_bij)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv (CONJ f) = inv (inv ni_bij \\<circ> f \\<circ> ni_bij)", "using CONJ_def"], ["proof (prove)\nusing this:\n  CONJ ?f = inv ni_bij \\<circ> ?f \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = inv (inv ni_bij \\<circ> f \\<circ> ni_bij)", "by auto"], ["proof (state)\nthis:\n  inv (CONJ f) = inv (inv ni_bij \\<circ> f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "from bij_int_decode and bij_imp_bij_inv"], ["proof (chain)\npicking this:\n  bij ni_bij\n  bij ?f \\<Longrightarrow> bij (inv ?f)", "have inv_ni_bij_bij: \"bij (inv ni_bij)\""], ["proof (prove)\nusing this:\n  bij ni_bij\n  bij ?f \\<Longrightarrow> bij (inv ?f)\n\ngoal (1 subgoal):\n 1. bij (inv ni_bij)", "by auto"], ["proof (state)\nthis:\n  bij (inv ni_bij)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with bij_f and bij_comp"], ["proof (chain)\npicking this:\n  bij f\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk> \\<Longrightarrow> bij (?g \\<circ> ?f)\n  bij (inv ni_bij)", "have \"bij (inv ni_bij \\<circ> f)\""], ["proof (prove)\nusing this:\n  bij f\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk> \\<Longrightarrow> bij (?g \\<circ> ?f)\n  bij (inv ni_bij)\n\ngoal (1 subgoal):\n 1. bij (inv ni_bij \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  bij (inv ni_bij \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with o_inv_distrib[of \"inv ni_bij \\<circ> f\" ni_bij] and bij_int_decode"], ["proof (chain)\npicking this:\n  \\<lbrakk>bij (inv ni_bij \\<circ> f); bij ni_bij\\<rbrakk>\n  \\<Longrightarrow> inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n                    inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n  bij ni_bij\n  bij (inv ni_bij \\<circ> f)", "have \"inv ((inv ni_bij) \\<circ> f \\<circ>  ni_bij) = \n    (inv ni_bij) \\<circ> (inv ((inv ni_bij) \\<circ> f))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>bij (inv ni_bij \\<circ> f); bij ni_bij\\<rbrakk>\n  \\<Longrightarrow> inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n                    inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n  bij ni_bij\n  bij (inv ni_bij \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n    inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n  inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with st1"], ["proof (chain)\npicking this:\n  inv (CONJ f) = inv (inv ni_bij \\<circ> f \\<circ> ni_bij)\n  inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n  inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)", "have st2: \"?left =\n    (inv ni_bij) \\<circ> (inv ((inv ni_bij) \\<circ> f))\""], ["proof (prove)\nusing this:\n  inv (CONJ f) = inv (inv ni_bij \\<circ> f \\<circ> ni_bij)\n  inv (inv ni_bij \\<circ> f \\<circ> ni_bij) =\n  inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)", "by auto"], ["proof (state)\nthis:\n  inv (CONJ f) = inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "from inv_ni_bij_bij and \\<open>bij f\\<close> and o_inv_distrib"], ["proof (chain)\npicking this:\n  bij (inv ni_bij)\n  bij f\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk>\n  \\<Longrightarrow> inv (?f \\<circ> ?g) = inv ?g \\<circ> inv ?f", "have h1: \"inv (inv ni_bij \\<circ> f) = inv f \\<circ> inv (inv (ni_bij))\""], ["proof (prove)\nusing this:\n  bij (inv ni_bij)\n  bij f\n  \\<lbrakk>bij ?f; bij ?g\\<rbrakk>\n  \\<Longrightarrow> inv (?f \\<circ> ?g) = inv ?g \\<circ> inv ?f\n\ngoal (1 subgoal):\n 1. inv (inv ni_bij \\<circ> f) = inv f \\<circ> inv (inv ni_bij)", "by auto"], ["proof (state)\nthis:\n  inv (inv ni_bij \\<circ> f) = inv f \\<circ> inv (inv ni_bij)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "from bij_int_decode and inv_inv_eq[of ni_bij]"], ["proof (chain)\npicking this:\n  bij ni_bij\n  bij ni_bij \\<Longrightarrow> inv (inv ni_bij) = ni_bij", "have \"inv (inv ni_bij) = ni_bij\""], ["proof (prove)\nusing this:\n  bij ni_bij\n  bij ni_bij \\<Longrightarrow> inv (inv ni_bij) = ni_bij\n\ngoal (1 subgoal):\n 1. inv (inv ni_bij) = ni_bij", "by auto"], ["proof (state)\nthis:\n  inv (inv ni_bij) = ni_bij\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with st2 and h1"], ["proof (chain)\npicking this:\n  inv (CONJ f) = inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n  inv (inv ni_bij \\<circ> f) = inv f \\<circ> inv (inv ni_bij)\n  inv (inv ni_bij) = ni_bij", "have \"?left = (inv ni_bij \\<circ> (inv f \\<circ> ( ni_bij)))\""], ["proof (prove)\nusing this:\n  inv (CONJ f) = inv ni_bij \\<circ> inv (inv ni_bij \\<circ> f)\n  inv (inv ni_bij \\<circ> f) = inv f \\<circ> inv (inv ni_bij)\n  inv (inv ni_bij) = ni_bij\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = inv ni_bij \\<circ> (inv f \\<circ> ni_bij)", "by auto"], ["proof (state)\nthis:\n  inv (CONJ f) = inv ni_bij \\<circ> (inv f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with o_assoc"], ["proof (chain)\npicking this:\n  ?f \\<circ> (?g \\<circ> ?h) = ?f \\<circ> ?g \\<circ> ?h\n  inv (CONJ f) = inv ni_bij \\<circ> (inv f \\<circ> ni_bij)", "have \"?left = inv ni_bij \\<circ> inv f \\<circ> ni_bij\""], ["proof (prove)\nusing this:\n  ?f \\<circ> (?g \\<circ> ?h) = ?f \\<circ> ?g \\<circ> ?h\n  inv (CONJ f) = inv ni_bij \\<circ> (inv f \\<circ> ni_bij)\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij", "by auto"], ["proof (state)\nthis:\n  inv (CONJ f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "with CONJ_def[of \"inv f\"]"], ["proof (chain)\npicking this:\n  CONJ (inv f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij\n  inv (CONJ f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij", "show ?thesis"], ["proof (prove)\nusing this:\n  CONJ (inv f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij\n  inv (CONJ f) = inv ni_bij \\<circ> inv f \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. inv (CONJ f) = CONJ (inv f)", "by auto"], ["proof (state)\nthis:\n  inv (CONJ f) = CONJ (inv f)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_CONJ:\n  \"CONJ (f \\<circ> g) = (CONJ f) \\<circ> (CONJ g)\" (is \"?left = ?right\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "from bij_int_decode"], ["proof (chain)\npicking this:\n  bij ni_bij", "have \"surj ni_bij\""], ["proof (prove)\nusing this:\n  bij ni_bij\n\ngoal (1 subgoal):\n 1. surj ni_bij", "unfolding bij_def"], ["proof (prove)\nusing this:\n  inj ni_bij \\<and> surj ni_bij\n\ngoal (1 subgoal):\n 1. surj ni_bij", "by auto"], ["proof (state)\nthis:\n  surj ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "then"], ["proof (chain)\npicking this:\n  surj ni_bij", "have \"ni_bij \\<circ> (inv ni_bij) = id\""], ["proof (prove)\nusing this:\n  surj ni_bij\n\ngoal (1 subgoal):\n 1. ni_bij \\<circ> inv ni_bij = id", "unfolding surj_iff"], ["proof (prove)\nusing this:\n  ni_bij \\<circ> inv ni_bij = id\n\ngoal (1 subgoal):\n 1. ni_bij \\<circ> inv ni_bij = id", "by auto"], ["proof (state)\nthis:\n  ni_bij \\<circ> inv ni_bij = id\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "moreover"], ["proof (state)\nthis:\n  ni_bij \\<circ> inv ni_bij = id\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "have \"?left = (inv ni_bij) \\<circ> (f \\<circ> g) \\<circ> ni_bij\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = inv ni_bij \\<circ> (f \\<circ> g) \\<circ> ni_bij", "by simp"], ["proof (state)\nthis:\n  CONJ (f \\<circ> g) = inv ni_bij \\<circ> (f \\<circ> g) \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "hence \"?left = (inv ni_bij) \\<circ> ((f \\<circ> id) \\<circ> g) \\<circ> ni_bij\""], ["proof (prove)\nusing this:\n  CONJ (f \\<circ> g) = inv ni_bij \\<circ> (f \\<circ> g) \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) =\n    inv ni_bij \\<circ> (f \\<circ> id \\<circ> g) \\<circ> ni_bij", "by simp"], ["proof (state)\nthis:\n  CONJ (f \\<circ> g) =\n  inv ni_bij \\<circ> (f \\<circ> id \\<circ> g) \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "ultimately"], ["proof (chain)\npicking this:\n  ni_bij \\<circ> inv ni_bij = id\n  CONJ (f \\<circ> g) =\n  inv ni_bij \\<circ> (f \\<circ> id \\<circ> g) \\<circ> ni_bij", "have \"?left = \n    (inv ni_bij) \\<circ> ((f \\<circ> (ni_bij \\<circ> (inv ni_bij))) \\<circ> g) \\<circ> ni_bij\""], ["proof (prove)\nusing this:\n  ni_bij \\<circ> inv ni_bij = id\n  CONJ (f \\<circ> g) =\n  inv ni_bij \\<circ> (f \\<circ> id \\<circ> g) \\<circ> ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) =\n    inv ni_bij \\<circ>\n    (f \\<circ> (ni_bij \\<circ> inv ni_bij) \\<circ> g) \\<circ>\n    ni_bij", "by auto\n      \\<comment> \\<open>a simple computation using only associativity\\<close>\n      \\<comment> \\<open>completes the proof\\<close>"], ["proof (state)\nthis:\n  CONJ (f \\<circ> g) =\n  inv ni_bij \\<circ>\n  (f \\<circ> (ni_bij \\<circ> inv ni_bij) \\<circ> g) \\<circ>\n  ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "thus \"?left = ?right\""], ["proof (prove)\nusing this:\n  CONJ (f \\<circ> g) =\n  inv ni_bij \\<circ>\n  (f \\<circ> (ni_bij \\<circ> inv ni_bij) \\<circ> g) \\<circ>\n  ni_bij\n\ngoal (1 subgoal):\n 1. CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g", "by (auto simp add: o_assoc)"], ["proof (state)\nthis:\n  CONJ (f \\<circ> g) = CONJ f \\<circ> CONJ g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma id_CONJ: \"CONJ id = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CONJ id = id", "proof (unfold CONJ_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> id \\<circ> ni_bij = id", "from bij_int_decode"], ["proof (chain)\npicking this:\n  bij ni_bij", "have \"inj ni_bij\""], ["proof (prove)\nusing this:\n  bij ni_bij\n\ngoal (1 subgoal):\n 1. inj ni_bij", "using bij_def"], ["proof (prove)\nusing this:\n  bij ni_bij\n  bij ?f = (inj ?f \\<and> surj ?f)\n\ngoal (1 subgoal):\n 1. inj ni_bij", "by auto"], ["proof (state)\nthis:\n  inj ni_bij\n\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> id \\<circ> ni_bij = id", "hence \"inv ni_bij \\<circ> ni_bij = id\""], ["proof (prove)\nusing this:\n  inj ni_bij\n\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> ni_bij = id", "by auto"], ["proof (state)\nthis:\n  inv ni_bij \\<circ> ni_bij = id\n\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> id \\<circ> ni_bij = id", "thus \"(inv ni_bij \\<circ> id) \\<circ> ni_bij = id\""], ["proof (prove)\nusing this:\n  inv ni_bij \\<circ> ni_bij = id\n\ngoal (1 subgoal):\n 1. inv ni_bij \\<circ> id \\<circ> ni_bij = id", "by auto"], ["proof (state)\nthis:\n  inv ni_bij \\<circ> id \\<circ> ni_bij = id\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We now define the group we are interested in, and show the\nbasic facts that together will show this is a cofinitary group.\\<close>"], ["", "definition Ex2 :: \"(nat \\<Rightarrow> nat) set\"\nwhere\n\"Ex2 = CONJ`Ex1\""], ["", "theorem mem_Ex2_rule: \"f \\<in> Ex2 = (\\<exists>g. (g \\<in> Ex1 \\<and> f = CONJ g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> Ex2 \\<Longrightarrow>\n    \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n 2. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "assume \"f \\<in> Ex2\""], ["proof (state)\nthis:\n  f \\<in> Ex2\n\ngoal (2 subgoals):\n 1. f \\<in> Ex2 \\<Longrightarrow>\n    \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n 2. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "hence \"f \\<in> CONJ`Ex1\""], ["proof (prove)\nusing this:\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. f \\<in> CONJ ` CofGroups.Ex1", "using Ex2_def"], ["proof (prove)\nusing this:\n  f \\<in> Ex2\n  Ex2 = CONJ ` CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<in> CONJ ` CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f \\<in> CONJ ` CofGroups.Ex1\n\ngoal (2 subgoals):\n 1. f \\<in> Ex2 \\<Longrightarrow>\n    \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n 2. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "from this"], ["proof (chain)\npicking this:\n  f \\<in> CONJ ` CofGroups.Ex1", "obtain \"g\" where \"g \\<in> Ex1 \\<and> f = CONJ g\""], ["proof (prove)\nusing this:\n  f \\<in> CONJ ` CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n\ngoal (2 subgoals):\n 1. f \\<in> Ex2 \\<Longrightarrow>\n    \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n 2. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "thus \"\\<exists>g. (g \\<in> Ex1 \\<and> f = CONJ g)\""], ["proof (prove)\nusing this:\n  g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n\ngoal (1 subgoal):\n 1. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g", "by auto"], ["proof (state)\nthis:\n  \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n\ngoal (1 subgoal):\n 1. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "assume \"\\<exists>g. (g \\<in> Ex1 \\<and> f = CONJ g)\""], ["proof (state)\nthis:\n  \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n\ngoal (1 subgoal):\n 1. \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g \\<Longrightarrow>\n    f \\<in> Ex2", "with Ex2_def"], ["proof (chain)\npicking this:\n  Ex2 = CONJ ` CofGroups.Ex1\n  \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g", "show \"f \\<in> Ex2\""], ["proof (prove)\nusing this:\n  Ex2 = CONJ ` CofGroups.Ex1\n  \\<exists>g. g \\<in> CofGroups.Ex1 \\<and> f = CONJ g\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  f \\<in> Ex2\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem Ex2_cofinitary:\n  assumes f_Ex2: \"f \\<in> Ex2\"\n  and f_nid: \"f \\<noteq> id\"\n  shows \"Fix f = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Fix f = {}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Fix f = {}", "from f_Ex2 and mem_Ex2_rule"], ["proof (chain)\npicking this:\n  f \\<in> Ex2\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)", "obtain g where g_Ex1: \"g \\<in> Ex1\" and f_cg: \"f = CONJ g\""], ["proof (prove)\nusing this:\n  f \\<in> Ex2\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> CofGroups.Ex1; f = CONJ g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with id_CONJ and f_nid"], ["proof (chain)\npicking this:\n  CONJ id = id\n  f \\<noteq> id\n  g \\<in> CofGroups.Ex1\n  f = CONJ g", "have \"g \\<noteq> id\""], ["proof (prove)\nusing this:\n  CONJ id = id\n  f \\<noteq> id\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. g \\<noteq> id", "by auto"], ["proof (state)\nthis:\n  g \\<noteq> id\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with g_Ex1 and no_fixed_pt[of g]"], ["proof (chain)\npicking this:\n  g \\<in> CofGroups.Ex1\n  \\<lbrakk>g \\<in> CofGroups.Ex1; g \\<noteq> id\\<rbrakk>\n  \\<Longrightarrow> Fix g = {}\n  g \\<noteq> id", "have fg_empty: \"Fix g = {}\""], ["proof (prove)\nusing this:\n  g \\<in> CofGroups.Ex1\n  \\<lbrakk>g \\<in> CofGroups.Ex1; g \\<noteq> id\\<rbrakk>\n  \\<Longrightarrow> Fix g = {}\n  g \\<noteq> id\n\ngoal (1 subgoal):\n 1. Fix g = {}", "by auto"], ["proof (state)\nthis:\n  Fix g = {}\n\ngoal (1 subgoal):\n 1. Fix f = {}", "from conj_fix_pt[of ni_bij g] and bij_int_decode"], ["proof (chain)\npicking this:\n  bij ni_bij \\<Longrightarrow>\n  inv ni_bij ` Fix g = Fix (inv ni_bij \\<circ> g \\<circ> ni_bij)\n  bij ni_bij", "have \"(inv ni_bij)`(Fix g) = Fix(CONJ g)\""], ["proof (prove)\nusing this:\n  bij ni_bij \\<Longrightarrow>\n  inv ni_bij ` Fix g = Fix (inv ni_bij \\<circ> g \\<circ> ni_bij)\n  bij ni_bij\n\ngoal (1 subgoal):\n 1. inv ni_bij ` Fix g = Fix (CONJ g)", "by auto"], ["proof (state)\nthis:\n  inv ni_bij ` Fix g = Fix (CONJ g)\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with fg_empty"], ["proof (chain)\npicking this:\n  Fix g = {}\n  inv ni_bij ` Fix g = Fix (CONJ g)", "have \"{} = Fix (CONJ g)\""], ["proof (prove)\nusing this:\n  Fix g = {}\n  inv ni_bij ` Fix g = Fix (CONJ g)\n\ngoal (1 subgoal):\n 1. {} = Fix (CONJ g)", "by auto"], ["proof (state)\nthis:\n  {} = Fix (CONJ g)\n\ngoal (1 subgoal):\n 1. Fix f = {}", "with f_cg"], ["proof (chain)\npicking this:\n  f = CONJ g\n  {} = Fix (CONJ g)", "show \"Fix f = {}\""], ["proof (prove)\nusing this:\n  f = CONJ g\n  {} = Fix (CONJ g)\n\ngoal (1 subgoal):\n 1. Fix f = {}", "by auto"], ["proof (state)\nthis:\n  Fix f = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma id_Ex2: \"id \\<in> Ex2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. id \\<in> Ex2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. id \\<in> Ex2", "from Ex1_Normal_form_part2[of \"0\"]"], ["proof (chain)\npicking this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + 0) \\<longrightarrow> f \\<in> CofGroups.Ex1", "have \"id \\<in> Ex1\""], ["proof (prove)\nusing this:\n  \\<forall>f.\n     (\\<forall>n. f n = n + 0) \\<longrightarrow> f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. id \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  id \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. id \\<in> Ex2", "with id_CONJ and Ex2_def and mem_Ex2_rule"], ["proof (chain)\npicking this:\n  CONJ id = id\n  Ex2 = CONJ ` CofGroups.Ex1\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  id \\<in> CofGroups.Ex1", "show ?thesis"], ["proof (prove)\nusing this:\n  CONJ id = id\n  Ex2 = CONJ ` CofGroups.Ex1\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  id \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. id \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  id \\<in> Ex2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_Ex2: \"f \\<in> Ex2 \\<Longrightarrow> (inv f) \\<in> Ex2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "assume \"f \\<in> Ex2\""], ["proof (state)\nthis:\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "with mem_Ex2_rule"], ["proof (chain)\npicking this:\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  f \\<in> Ex2", "obtain \"g\" where \"g \\<in> Ex1\" and \"f = CONJ g\""], ["proof (prove)\nusing this:\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> CofGroups.Ex1; f = CONJ g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "with closed_inv"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv ?f \\<in> CofGroups.Ex1\n  g \\<in> CofGroups.Ex1\n  f = CONJ g", "have \"inv g \\<in> Ex1\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv ?f \\<in> CofGroups.Ex1\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. inv g \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "from \\<open>f = CONJ g\\<close>"], ["proof (chain)\npicking this:\n  f = CONJ g", "have if_iCg: \"inv f = inv (CONJ g)\""], ["proof (prove)\nusing this:\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. inv f = inv (CONJ g)", "by auto"], ["proof (state)\nthis:\n  inv f = inv (CONJ g)\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "from all_bij and \\<open>g \\<in> Ex1\\<close>"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  g \\<in> CofGroups.Ex1", "have \"bij g\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> bij ?f\n  g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. bij g", "by auto"], ["proof (state)\nthis:\n  bij g\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "with if_iCg and inv_CONJ"], ["proof (chain)\npicking this:\n  inv f = inv (CONJ g)\n  bij ?f \\<Longrightarrow> inv (CONJ ?f) = CONJ (inv ?f)\n  bij g", "have \"inv f = CONJ (inv g)\""], ["proof (prove)\nusing this:\n  inv f = inv (CONJ g)\n  bij ?f \\<Longrightarrow> inv (CONJ ?f) = CONJ (inv ?f)\n  bij g\n\ngoal (1 subgoal):\n 1. inv f = CONJ (inv g)", "by auto"], ["proof (state)\nthis:\n  inv f = CONJ (inv g)\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "from \\<open>g \\<in> Ex1\\<close> and \"closed_inv\""], ["proof (chain)\npicking this:\n  g \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv ?f \\<in> CofGroups.Ex1", "have \"inv g \\<in> Ex1\""], ["proof (prove)\nusing this:\n  g \\<in> CofGroups.Ex1\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow> inv ?f \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv g \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  inv g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2", "with \\<open>inv f = CONJ (inv g)\\<close> and mem_Ex2_rule"], ["proof (chain)\npicking this:\n  inv f = CONJ (inv g)\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  inv g \\<in> CofGroups.Ex1", "show \"inv f \\<in> Ex2\""], ["proof (prove)\nusing this:\n  inv f = CONJ (inv g)\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  inv g \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. inv f \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  inv f \\<in> Ex2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma comp_Ex2:\n  assumes f_Ex2: \"f \\<in> Ex2\" and\n  g_Ex2: \"g \\<in> Ex2\"\n  shows \"f \\<circ> g \\<in> Ex2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "from f_Ex2"], ["proof (chain)\npicking this:\n  f \\<in> Ex2", "obtain f_1 \n    where f_1_Ex1: \"f_1 \\<in> Ex1\" and \"f = CONJ f_1\""], ["proof (prove)\nusing this:\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. (\\<And>f_1.\n        \\<lbrakk>f_1 \\<in> CofGroups.Ex1; f = CONJ f_1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mem_Ex2_rule"], ["proof (prove)\nusing this:\n  f \\<in> Ex2\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n\ngoal (1 subgoal):\n 1. (\\<And>f_1.\n        \\<lbrakk>f_1 \\<in> CofGroups.Ex1; f = CONJ f_1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f_1 \\<in> CofGroups.Ex1\n  f = CONJ f_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "moreover"], ["proof (state)\nthis:\n  f_1 \\<in> CofGroups.Ex1\n  f = CONJ f_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "from g_Ex2"], ["proof (chain)\npicking this:\n  g \\<in> Ex2", "obtain g_1 \n    where g_1_Ex1: \"g_1 \\<in> Ex1\" and \"g = CONJ g_1\""], ["proof (prove)\nusing this:\n  g \\<in> Ex2\n\ngoal (1 subgoal):\n 1. (\\<And>g_1.\n        \\<lbrakk>g_1 \\<in> CofGroups.Ex1; g = CONJ g_1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mem_Ex2_rule"], ["proof (prove)\nusing this:\n  g \\<in> Ex2\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n\ngoal (1 subgoal):\n 1. (\\<And>g_1.\n        \\<lbrakk>g_1 \\<in> CofGroups.Ex1; g = CONJ g_1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g_1 \\<in> CofGroups.Ex1\n  g = CONJ g_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "ultimately"], ["proof (chain)\npicking this:\n  f_1 \\<in> CofGroups.Ex1\n  f = CONJ f_1\n  g_1 \\<in> CofGroups.Ex1\n  g = CONJ g_1", "have \"f \\<circ> g = (CONJ f_1) \\<circ> (CONJ g_1)\""], ["proof (prove)\nusing this:\n  f_1 \\<in> CofGroups.Ex1\n  f = CONJ f_1\n  g_1 \\<in> CofGroups.Ex1\n  g = CONJ g_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g = CONJ f_1 \\<circ> CONJ g_1", "by auto"], ["proof (state)\nthis:\n  f \\<circ> g = CONJ f_1 \\<circ> CONJ g_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "hence \"f \\<circ> g = CONJ (f_1 \\<circ> g_1)\""], ["proof (prove)\nusing this:\n  f \\<circ> g = CONJ f_1 \\<circ> CONJ g_1\n\ngoal (1 subgoal):\n 1. f \\<circ> g = CONJ (f_1 \\<circ> g_1)", "using comp_CONJ"], ["proof (prove)\nusing this:\n  f \\<circ> g = CONJ f_1 \\<circ> CONJ g_1\n  CONJ (?f \\<circ> ?g) = CONJ ?f \\<circ> CONJ ?g\n\ngoal (1 subgoal):\n 1. f \\<circ> g = CONJ (f_1 \\<circ> g_1)", "by auto"], ["proof (state)\nthis:\n  f \\<circ> g = CONJ (f_1 \\<circ> g_1)\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "moreover"], ["proof (state)\nthis:\n  f \\<circ> g = CONJ (f_1 \\<circ> g_1)\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "have \"f_1 \\<circ> g_1 \\<in> Ex1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f_1 \\<circ> g_1 \\<in> CofGroups.Ex1", "using closed_comp and f_1_Ex1 and g_1_Ex1"], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<and> ?g \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  ?f \\<circ> ?g \\<in> CofGroups.Ex1\n  f_1 \\<in> CofGroups.Ex1\n  g_1 \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f_1 \\<circ> g_1 \\<in> CofGroups.Ex1", "by auto"], ["proof (state)\nthis:\n  f_1 \\<circ> g_1 \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "ultimately"], ["proof (chain)\npicking this:\n  f \\<circ> g = CONJ (f_1 \\<circ> g_1)\n  f_1 \\<circ> g_1 \\<in> CofGroups.Ex1", "show \"f \\<circ> g \\<in> Ex2\""], ["proof (prove)\nusing this:\n  f \\<circ> g = CONJ (f_1 \\<circ> g_1)\n  f_1 \\<circ> g_1 \\<in> CofGroups.Ex1\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "using mem_Ex2_rule"], ["proof (prove)\nusing this:\n  f \\<circ> g = CONJ (f_1 \\<circ> g_1)\n  f_1 \\<circ> g_1 \\<in> CofGroups.Ex1\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  f \\<circ> g \\<in> Ex2\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>The Conclusion\\<close>"], ["", "text \\<open>\\label{sect:concl} With all that we have shown we have already\nclearly shown @{term Ex2} to be a cofinitary group.  The formalization\nalso shows this, we just have to refer to the correct theorems proved\nabove.\\<close>"], ["", "interpretation CofinitaryGroup Ex2"], ["proof (prove)\ngoal (1 subgoal):\n 1. CofinitaryGroup Ex2", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. Ex2 \\<subseteq> S_inf\n 2. id \\<in> Ex2\n 3. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 4. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 5. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "show \"Ex2 \\<subseteq> S_inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Ex2 \\<subseteq> S_inf", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Ex2 \\<Longrightarrow> x \\<in> S_inf", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Ex2 \\<Longrightarrow> x \\<in> S_inf", "assume \"f \\<in> Ex2\""], ["proof (state)\nthis:\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Ex2 \\<Longrightarrow> x \\<in> S_inf", "with mem_Ex2_rule"], ["proof (chain)\npicking this:\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  f \\<in> Ex2", "obtain g where \"g \\<in> Ex1\" and \"f = CONJ g\""], ["proof (prove)\nusing this:\n  (?f \\<in> Ex2) = (\\<exists>g. g \\<in> CofGroups.Ex1 \\<and> ?f = CONJ g)\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> CofGroups.Ex1; f = CONJ g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> Ex2 \\<Longrightarrow> x \\<in> S_inf", "with type_CONJ"], ["proof (chain)\npicking this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv ni_bij \\<circ> ?f \\<circ> ni_bij \\<in> S_inf\n  g \\<in> CofGroups.Ex1\n  f = CONJ g", "show \"f \\<in> S_inf\""], ["proof (prove)\nusing this:\n  ?f \\<in> CofGroups.Ex1 \\<Longrightarrow>\n  inv ni_bij \\<circ> ?f \\<circ> ni_bij \\<in> S_inf\n  g \\<in> CofGroups.Ex1\n  f = CONJ g\n\ngoal (1 subgoal):\n 1. f \\<in> S_inf", "by auto"], ["proof (state)\nthis:\n  f \\<in> S_inf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Ex2 \\<subseteq> S_inf\n\ngoal (4 subgoals):\n 1. id \\<in> Ex2\n 2. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 3. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 4. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. id \\<in> Ex2\n 2. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 3. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 4. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "from id_Ex2"], ["proof (chain)\npicking this:\n  id \\<in> Ex2", "show \"id \\<in> Ex2\""], ["proof (prove)\nusing this:\n  id \\<in> Ex2\n\ngoal (1 subgoal):\n 1. id \\<in> Ex2", "."], ["proof (state)\nthis:\n  id \\<in> Ex2\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 2. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 3. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 2. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 3. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "fix f g"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 2. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 3. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "assume \"f \\<in> Ex2 \\<and> g \\<in> Ex2\""], ["proof (state)\nthis:\n  f \\<in> Ex2 \\<and> g \\<in> Ex2\n\ngoal (3 subgoals):\n 1. \\<And>f g.\n       f \\<in> Ex2 \\<and> g \\<in> Ex2 \\<Longrightarrow>\n       f \\<circ> g \\<in> Ex2\n 2. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 3. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "with comp_Ex2"], ["proof (chain)\npicking this:\n  \\<lbrakk>?f \\<in> Ex2; ?g \\<in> Ex2\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> ?g \\<in> Ex2\n  f \\<in> Ex2 \\<and> g \\<in> Ex2", "show \"f \\<circ> g \\<in> Ex2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> Ex2; ?g \\<in> Ex2\\<rbrakk>\n  \\<Longrightarrow> ?f \\<circ> ?g \\<in> Ex2\n  f \\<in> Ex2 \\<and> g \\<in> Ex2\n\ngoal (1 subgoal):\n 1. f \\<circ> g \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  f \\<circ> g \\<in> Ex2\n\ngoal (2 subgoals):\n 1. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 2. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 2. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 2. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "assume \"f \\<in> Ex2\""], ["proof (state)\nthis:\n  f \\<in> Ex2\n\ngoal (2 subgoals):\n 1. \\<And>f. f \\<in> Ex2 \\<Longrightarrow> inv f \\<in> Ex2\n 2. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "with inv_Ex2"], ["proof (chain)\npicking this:\n  ?f \\<in> Ex2 \\<Longrightarrow> inv ?f \\<in> Ex2\n  f \\<in> Ex2", "show \"inv f \\<in> Ex2\""], ["proof (prove)\nusing this:\n  ?f \\<in> Ex2 \\<Longrightarrow> inv ?f \\<in> Ex2\n  f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. inv f \\<in> Ex2", "by auto"], ["proof (state)\nthis:\n  inv f \\<in> Ex2\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "assume \"f \\<in> Ex2 \\<and> f \\<noteq> id\""], ["proof (state)\nthis:\n  f \\<in> Ex2 \\<and> f \\<noteq> id\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "with Ex2_cofinitary"], ["proof (chain)\npicking this:\n  \\<lbrakk>?f \\<in> Ex2; ?f \\<noteq> id\\<rbrakk>\n  \\<Longrightarrow> Fix ?f = {}\n  f \\<in> Ex2 \\<and> f \\<noteq> id", "have \"Fix f = {}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<in> Ex2; ?f \\<noteq> id\\<rbrakk>\n  \\<Longrightarrow> Fix ?f = {}\n  f \\<in> Ex2 \\<and> f \\<noteq> id\n\ngoal (1 subgoal):\n 1. Fix f = {}", "by auto"], ["proof (state)\nthis:\n  Fix f = {}\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> Ex2 \\<and> f \\<noteq> id \\<Longrightarrow> finite (Fix f)", "thus \"finite (Fix f)\""], ["proof (prove)\nusing this:\n  Fix f = {}\n\ngoal (1 subgoal):\n 1. finite (Fix f)", "using finite_def"], ["proof (prove)\nusing this:\n  Fix f = {}\n  finite \\<equiv>\n  lfp (\\<lambda>p x. x = {} \\<or> (\\<exists>A a. x = insert a A \\<and> p A))\n\ngoal (1 subgoal):\n 1. finite (Fix f)", "by auto"], ["proof (state)\nthis:\n  finite (Fix f)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}