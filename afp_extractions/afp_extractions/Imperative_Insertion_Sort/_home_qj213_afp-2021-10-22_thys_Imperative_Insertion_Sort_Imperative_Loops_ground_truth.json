{"file_name": "/home/qj213/afp-2021-10-22/thys/Imperative_Insertion_Sort/Imperative_Loops.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Imperative_Insertion_Sort", "problem_names": ["lemma ro_cond: \"ro_cond p\"", "lemma cond_cases [execute_simps]:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> execute p h = Some (True, h)\"\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> execute p h = Some (False, h)\"", "lemma execute_while_unfolds [execute_simps]:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> execute (while p f) h = execute (f \\<then> while p f) h\"\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> execute (while p f) h = execute (return ()) h\"", "lemma\n  success_while_cond: \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' r \\<Longrightarrow> success (while p f) h' \\<Longrightarrow>\n    success (while p f) h\" and\n  success_while_not_cond: \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> success (while p f) h\"", "lemma success_cond_effect:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect p h h True\"", "lemma success_not_cond_effect:\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> effect p h h False\"", "lemma ro_cond_effect_while_post:\n  assumes \"ro_cond p\"\n    and \"effect (while p f) h h' r\"\n  shows \"success p h' \\<and> \\<not> cond p h'\"", "lemma ro_cond_effect_while_induct:\n  assumes \"ro_cond p\"\n  assumes \"effect (while p f) h h' u\"\n    and \"I h\"\n    and \"\\<And>h h' u. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' u \\<Longrightarrow> I h'\"\n  shows \"I h'\"", "lemma effect_success_conv:\n  \"(\\<exists>h'. effect c h h' () \\<and> I h') \\<longleftrightarrow> success c h \\<and> I (snd (the (execute c h)))\"", "lemmas\n  effect_while_post = ro_cond_effect_while_post [OF ro_cond] and\n  effect_while_induct [consumes 1, case_names base step] = ro_cond_effect_while_induct [OF ro_cond]", "lemma wf_while_induct [consumes 1, case_names success_cond success_body base step]:\n  assumes \"wf R\" \\<comment> \\<open>a well-founded relation on heaps proving termination of the loop\\<close>\n    and success_p: \"\\<And>h. I h \\<Longrightarrow> success p h\" \\<comment> \\<open>the loop-condition terminates\\<close>\n    and success_f: \"\\<And>h. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> success f h\" \\<comment> \\<open>the loop-body terminates\\<close>\n    and \"I h\" \\<comment> \\<open>the invariant holds before the loop is entered\\<close>\n    and step: \"\\<And>h h' r. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' r \\<Longrightarrow> (h', h) \\<in> R \\<and> I h'\"\n       \\<comment> \\<open>the invariant is preserved by iterating the loop\\<close>\n  shows \"\\<exists>h'. effect (while p f) h h' () \\<and> I h'\"", "lemmas\n  success_while_induct [consumes 1, case_names success_cond success_body base step] =\n    wf_while_induct [unfolded effect_success_conv, THEN conjunct1]", "lemma effect_for_induct [consumes 2, case_names base step]:\n  assumes \"i \\<le> j\"\n    and \"effect (for [i ..< j] f) h h' u\"\n    and \"I i h\"\n    and \"\\<And>k h h' r. i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> I k h \\<Longrightarrow> effect (f k) h h' r \\<Longrightarrow> I (Suc k) h'\"\n  shows \"I j h'\"", "lemma for_induct [consumes 1, case_names succeed base step]:\n  assumes \"i \\<le> j\"\n    and \"\\<And>k h. I k h \\<Longrightarrow> i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> success (f k) h\"\n    and \"I i h\"\n    and \"\\<And>k h h' r. I k h \\<Longrightarrow> i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> effect (f k) h h' r \\<Longrightarrow> I (Suc k) h'\"\n  shows \"\\<exists>h'. effect (for [i ..< j] f) h h' () \\<and> I j h'\" (is \"?P i h\")", "lemmas\n  success_for_induct [consumes 1, case_names succeed base step] =\n    for_induct [unfolded effect_success_conv, THEN conjunct1]"], "translations": [["", "lemma ro_cond: \"ro_cond p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ro_cond p", "using read_only"], ["proof (prove)\nusing this:\n  success p ?h \\<Longrightarrow> snd (the (execute p ?h)) = ?h\n\ngoal (1 subgoal):\n 1. ro_cond p", "by (simp add: ro_cond_def)"], ["", "lemma cond_cases [execute_simps]:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> execute p h = Some (True, h)\"\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> execute p h = Some (False, h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>success p h; cond p h\\<rbrakk>\n     \\<Longrightarrow> execute p h = Some (True, h)) &&&\n    (\\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n     \\<Longrightarrow> execute p h = Some (False, h))", "using read_only [of h]"], ["proof (prove)\nusing this:\n  success p h \\<Longrightarrow> snd (the (execute p h)) = h\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>success p h; cond p h\\<rbrakk>\n     \\<Longrightarrow> execute p h = Some (True, h)) &&&\n    (\\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n     \\<Longrightarrow> execute p h = Some (False, h))", "by (auto simp: cond_def success_def)"], ["", "lemma execute_while_unfolds [execute_simps]:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> execute (while p f) h = execute (f \\<then> while p f) h\"\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> execute (while p f) h = execute (return ()) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>success p h; cond p h\\<rbrakk>\n     \\<Longrightarrow> execute (while p f) h =\n                       execute (f \\<bind> (\\<lambda>_. while p f)) h) &&&\n    (\\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n     \\<Longrightarrow> execute (while p f) h = execute (return ()) h)", "by (auto simp: while.simps execute_simps)"], ["", "lemma\n  success_while_cond: \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' r \\<Longrightarrow> success (while p f) h' \\<Longrightarrow>\n    success (while p f) h\" and\n  success_while_not_cond: \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> success (while p f) h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>success p h; cond p h; effect f h h' r;\n      success (while p f) h'\\<rbrakk>\n     \\<Longrightarrow> success (while p f) h) &&&\n    (\\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n     \\<Longrightarrow> success (while p f) h)", "by (auto simp: while.simps effect_def execute_simps intro!: success_intros)"], ["", "lemma success_cond_effect:\n  \"success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect p h h True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>success p h; cond p h\\<rbrakk>\n    \\<Longrightarrow> effect p h h True", "using read_only [of h]"], ["proof (prove)\nusing this:\n  success p h \\<Longrightarrow> snd (the (execute p h)) = h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>success p h; cond p h\\<rbrakk>\n    \\<Longrightarrow> effect p h h True", "by (auto simp: effect_def execute_simps)"], ["", "lemma success_not_cond_effect:\n  \"success p h \\<Longrightarrow> \\<not> cond p h \\<Longrightarrow> effect p h h False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n    \\<Longrightarrow> effect p h h False", "using read_only [of h]"], ["proof (prove)\nusing this:\n  success p h \\<Longrightarrow> snd (the (execute p h)) = h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>success p h; \\<not> cond p h\\<rbrakk>\n    \\<Longrightarrow> effect p h h False", "by (auto simp: effect_def execute_simps)"], ["", "end"], ["", "text \\<open>The loop-condition does no longer hold after the loop is finished.\\<close>"], ["", "lemma ro_cond_effect_while_post:\n  assumes \"ro_cond p\"\n    and \"effect (while p f) h h' r\"\n  shows \"success p h' \\<and> \\<not> cond p h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. success p h' \\<and> \\<not> cond p h'", "using assms(1)"], ["proof (prove)\nusing this:\n  ro_cond p\n\ngoal (1 subgoal):\n 1. success p h' \\<and> \\<not> cond p h'", "apply (induct rule: while.raw_induct [OF _ assms(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>while p f pa fa r.\n       \\<lbrakk>\\<And>a b h h' r.\n                   \\<lbrakk>effect (while a b) h h' r; ro_cond a\\<rbrakk>\n                   \\<Longrightarrow> success a h' \\<and> \\<not> cond a h';\n        effect\n         (p \\<bind>\n          (\\<lambda>b.\n              if b then f \\<bind> (\\<lambda>_. while p f) else return ()))\n         pa fa r;\n        ro_cond p\\<rbrakk>\n       \\<Longrightarrow> success p fa \\<and> \\<not> cond p fa", "apply (auto elim!: effect_elims effect_ifE simp: cond_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>while p pa h' r.\n       \\<lbrakk>\\<And>a b h h'.\n                   \\<lbrakk>effect (while a b) h h' (); ro_cond a\\<rbrakk>\n                   \\<Longrightarrow> success a h' \\<and>\n                                     \\<not> fst (the (execute a h'));\n        ro_cond p; effect p pa h' False; \\<not> r\\<rbrakk>\n       \\<Longrightarrow> success p h'\n 2. \\<And>while p pa h' r.\n       \\<lbrakk>\\<And>a b h h'.\n                   \\<lbrakk>effect (while a b) h h' (); ro_cond a\\<rbrakk>\n                   \\<Longrightarrow> success a h' \\<and>\n                                     \\<not> fst (the (execute a h'));\n        ro_cond p; effect p pa h' False; \\<not> r;\n        fst (the (execute p h'))\\<rbrakk>\n       \\<Longrightarrow> False", "apply (metis effectE ro_cond.read_only)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open>A rule for proving partial correctness of while loops.\\<close>"], ["", "lemma ro_cond_effect_while_induct:\n  assumes \"ro_cond p\"\n  assumes \"effect (while p f) h h' u\"\n    and \"I h\"\n    and \"\\<And>h h' u. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' u \\<Longrightarrow> I h'\"\n  shows \"I h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I h'", "using assms(1, 3-)"], ["proof (prove)\nusing this:\n  ro_cond p\n  I h\n  \\<lbrakk>I ?h; success p ?h; cond p ?h; effect f ?h ?h' ?u\\<rbrakk>\n  \\<Longrightarrow> I ?h'\n\ngoal (1 subgoal):\n 1. I h'", "proof (induction p f h h' u rule: while.raw_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>while p f pa fa r.\n       \\<lbrakk>\\<And>a b h h' r.\n                   \\<lbrakk>effect (while a b) h h' r; ro_cond a; I h;\n                    \\<And>h h' u.\n                       \\<lbrakk>I h; success a h; cond a h;\n                        effect b h h' u\\<rbrakk>\n                       \\<Longrightarrow> I h'\\<rbrakk>\n                   \\<Longrightarrow> I h';\n        effect\n         (p \\<bind>\n          (\\<lambda>b.\n              if b then f \\<bind> (\\<lambda>_. while p f) else return ()))\n         pa fa r;\n        ro_cond p; I pa;\n        \\<And>h h' u.\n           \\<lbrakk>I h; success p h; cond p h; effect f h h' u\\<rbrakk>\n           \\<Longrightarrow> I h'\\<rbrakk>\n       \\<Longrightarrow> I fa\n 2. effect (while p f) h h' u", "case (1 w p f h h' u)"], ["proof (state)\nthis:\n  \\<lbrakk>effect (w ?a ?b) ?h ?h' ?r; ro_cond ?a; I ?h;\n   \\<And>h h' u.\n      \\<lbrakk>I h; success ?a h; cond ?a h; effect ?b h h' u\\<rbrakk>\n      \\<Longrightarrow> I h'\\<rbrakk>\n  \\<Longrightarrow> I ?h'\n  effect\n   (p \\<bind>\n    (\\<lambda>b. if b then f \\<bind> (\\<lambda>_. w p f) else return ()))\n   h h' u\n  ro_cond p\n  I h\n  \\<lbrakk>I ?h; success p ?h; cond p ?h; effect f ?h ?h' ?u\\<rbrakk>\n  \\<Longrightarrow> I ?h'\n\ngoal (2 subgoals):\n 1. \\<And>while p f pa fa r.\n       \\<lbrakk>\\<And>a b h h' r.\n                   \\<lbrakk>effect (while a b) h h' r; ro_cond a; I h;\n                    \\<And>h h' u.\n                       \\<lbrakk>I h; success a h; cond a h;\n                        effect b h h' u\\<rbrakk>\n                       \\<Longrightarrow> I h'\\<rbrakk>\n                   \\<Longrightarrow> I h';\n        effect\n         (p \\<bind>\n          (\\<lambda>b.\n              if b then f \\<bind> (\\<lambda>_. while p f) else return ()))\n         pa fa r;\n        ro_cond p; I pa;\n        \\<And>h h' u.\n           \\<lbrakk>I h; success p h; cond p h; effect f h h' u\\<rbrakk>\n           \\<Longrightarrow> I h'\\<rbrakk>\n       \\<Longrightarrow> I fa\n 2. effect (while p f) h h' u", "obtain b\n    where \"effect p h h b\"\n    and *: \"effect (if b then f \\<then> w p f else return ()) h h' u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>effect p h h b;\n         effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h\n          h' u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \"1.hyps\" and \\<open>ro_cond p\\<close>"], ["proof (prove)\nusing this:\n  effect\n   (p \\<bind>\n    (\\<lambda>b. if b then f \\<bind> (\\<lambda>_. w p f) else return ()))\n   h h' u\n  ro_cond p\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>effect p h h b;\n         effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h\n          h' u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: effect_elims intro: effect_intros) (metis effectE ro_cond.read_only)"], ["proof (state)\nthis:\n  effect p h h b\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u\n\ngoal (2 subgoals):\n 1. \\<And>while p f pa fa r.\n       \\<lbrakk>\\<And>a b h h' r.\n                   \\<lbrakk>effect (while a b) h h' r; ro_cond a; I h;\n                    \\<And>h h' u.\n                       \\<lbrakk>I h; success a h; cond a h;\n                        effect b h h' u\\<rbrakk>\n                       \\<Longrightarrow> I h'\\<rbrakk>\n                   \\<Longrightarrow> I h';\n        effect\n         (p \\<bind>\n          (\\<lambda>b.\n              if b then f \\<bind> (\\<lambda>_. while p f) else return ()))\n         pa fa r;\n        ro_cond p; I pa;\n        \\<And>h h' u.\n           \\<lbrakk>I h; success p h; cond p h; effect f h h' u\\<rbrakk>\n           \\<Longrightarrow> I h'\\<rbrakk>\n       \\<Longrightarrow> I fa\n 2. effect (while p f) h h' u", "then"], ["proof (chain)\npicking this:\n  effect p h h b\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u", "have cond: \"success p h\" \"cond p h = b\""], ["proof (prove)\nusing this:\n  effect p h h b\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u\n\ngoal (1 subgoal):\n 1. success p h &&& cond p h = b", "by (auto simp: cond_def elim!: effect_elims effectE)"], ["proof (state)\nthis:\n  success p h\n  cond p h = b\n\ngoal (2 subgoals):\n 1. \\<And>while p f pa fa r.\n       \\<lbrakk>\\<And>a b h h' r.\n                   \\<lbrakk>effect (while a b) h h' r; ro_cond a; I h;\n                    \\<And>h h' u.\n                       \\<lbrakk>I h; success a h; cond a h;\n                        effect b h h' u\\<rbrakk>\n                       \\<Longrightarrow> I h'\\<rbrakk>\n                   \\<Longrightarrow> I h';\n        effect\n         (p \\<bind>\n          (\\<lambda>b.\n              if b then f \\<bind> (\\<lambda>_. while p f) else return ()))\n         pa fa r;\n        ro_cond p; I pa;\n        \\<And>h h' u.\n           \\<lbrakk>I h; success p h; cond p h; effect f h h' u\\<rbrakk>\n           \\<Longrightarrow> I h'\\<rbrakk>\n       \\<Longrightarrow> I fa\n 2. effect (while p f) h h' u", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. I h'", "proof (cases \"b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<Longrightarrow> I h'\n 2. \\<not> b \\<Longrightarrow> I h'", "assume \"\\<not> b\""], ["proof (state)\nthis:\n  \\<not> b\n\ngoal (2 subgoals):\n 1. b \\<Longrightarrow> I h'\n 2. \\<not> b \\<Longrightarrow> I h'", "then"], ["proof (chain)\npicking this:\n  \\<not> b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b\n\ngoal (1 subgoal):\n 1. I h'", "using * and \\<open>I h\\<close>"], ["proof (prove)\nusing this:\n  \\<not> b\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u\n  I h\n\ngoal (1 subgoal):\n 1. I h'", "by (auto elim: effect_elims)"], ["proof (state)\nthis:\n  I h'\n\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "assume \"b\""], ["proof (state)\nthis:\n  b\n\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "moreover"], ["proof (state)\nthis:\n  b\n\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "with *"], ["proof (chain)\npicking this:\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u\n  b", "obtain h'' and r\n      where \"effect f h h'' r\" and \"effect (w p f) h'' h' u\""], ["proof (prove)\nusing this:\n  effect (if b then f \\<bind> (\\<lambda>_. w p f) else return ()) h h' u\n  b\n\ngoal (1 subgoal):\n 1. (\\<And>h'' r.\n        \\<lbrakk>effect f h h'' r; effect (w p f) h'' h' u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: effect_elims)"], ["proof (state)\nthis:\n  effect f h h'' r\n  effect (w p f) h'' h' u\n\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "moreover"], ["proof (state)\nthis:\n  effect f h h'' r\n  effect (w p f) h'' h' u\n\ngoal (1 subgoal):\n 1. b \\<Longrightarrow> I h'", "ultimately"], ["proof (chain)\npicking this:\n  b\n  effect f h h'' r\n  effect (w p f) h'' h' u\n  effect f h h'' r\n  effect (w p f) h'' h' u", "show ?thesis"], ["proof (prove)\nusing this:\n  b\n  effect f h h'' r\n  effect (w p f) h'' h' u\n  effect f h h'' r\n  effect (w p f) h'' h' u\n\ngoal (1 subgoal):\n 1. I h'", "using 1 and cond"], ["proof (prove)\nusing this:\n  b\n  effect f h h'' r\n  effect (w p f) h'' h' u\n  effect f h h'' r\n  effect (w p f) h'' h' u\n  \\<lbrakk>effect (w ?a ?b) ?h ?h' ?r; ro_cond ?a; I ?h;\n   \\<And>h h' u.\n      \\<lbrakk>I h; success ?a h; cond ?a h; effect ?b h h' u\\<rbrakk>\n      \\<Longrightarrow> I h'\\<rbrakk>\n  \\<Longrightarrow> I ?h'\n  effect\n   (p \\<bind>\n    (\\<lambda>b. if b then f \\<bind> (\\<lambda>_. w p f) else return ()))\n   h h' u\n  ro_cond p\n  I h\n  \\<lbrakk>I ?h; success p ?h; cond p ?h; effect f ?h ?h' ?u\\<rbrakk>\n  \\<Longrightarrow> I ?h'\n  success p h\n  cond p h = b\n\ngoal (1 subgoal):\n 1. I h'", "by blast"], ["proof (state)\nthis:\n  I h'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I h'\n\ngoal (1 subgoal):\n 1. effect (while p f) h h' u", "qed fact"], ["", "lemma effect_success_conv:\n  \"(\\<exists>h'. effect c h h' () \\<and> I h') \\<longleftrightarrow> success c h \\<and> I (snd (the (execute c h)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>h'. effect c h h' () \\<and> I h') =\n    (success c h \\<and> I (snd (the (execute c h))))", "by (auto simp: success_def effect_def)"], ["", "context ro_cond\nbegin"], ["", "lemmas\n  effect_while_post = ro_cond_effect_while_post [OF ro_cond] and\n  effect_while_induct [consumes 1, case_names base step] = ro_cond_effect_while_induct [OF ro_cond]"], ["", "text \\<open>A rule for proving total correctness of while loops.\\<close>"], ["", "lemma wf_while_induct [consumes 1, case_names success_cond success_body base step]:\n  assumes \"wf R\" \\<comment> \\<open>a well-founded relation on heaps proving termination of the loop\\<close>\n    and success_p: \"\\<And>h. I h \\<Longrightarrow> success p h\" \\<comment> \\<open>the loop-condition terminates\\<close>\n    and success_f: \"\\<And>h. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> success f h\" \\<comment> \\<open>the loop-body terminates\\<close>\n    and \"I h\" \\<comment> \\<open>the invariant holds before the loop is entered\\<close>\n    and step: \"\\<And>h h' r. I h \\<Longrightarrow> success p h \\<Longrightarrow> cond p h \\<Longrightarrow> effect f h h' r \\<Longrightarrow> (h', h) \\<in> R \\<and> I h'\"\n       \\<comment> \\<open>the invariant is preserved by iterating the loop\\<close>\n  shows \"\\<exists>h'. effect (while p f) h h' () \\<and> I h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "using \\<open>wf R\\<close> and \\<open>I h\\<close>"], ["proof (prove)\nusing this:\n  wf R\n  I h\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "proof (induction h)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; I y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (while p f) y h' () \\<and> I h';\n        I x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'. effect (while p f) x h' () \\<and> I h'", "case (less h)"], ["proof (state)\nthis:\n  \\<lbrakk>(?y, h) \\<in> R; I ?y\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'. effect (while p f) ?y h' () \\<and> I h'\n  I h\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; I y\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (while p f) y h' () \\<and> I h';\n        I x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'. effect (while p f) x h' () \\<and> I h'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "proof (cases \"cond p h\")"], ["proof (state)\ngoal (2 subgoals):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'\n 2. \\<not> cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "assume \"\\<not> cond p h\""], ["proof (state)\nthis:\n  \\<not> cond p h\n\ngoal (2 subgoals):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'\n 2. \\<not> cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "then"], ["proof (chain)\npicking this:\n  \\<not> cond p h", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> cond p h\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "using \\<open>I h\\<close> and success_p [of h]"], ["proof (prove)\nusing this:\n  \\<not> cond p h\n  I h\n  I h \\<Longrightarrow> success p h\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "by (simp add: effect_def execute_simps)"], ["proof (state)\nthis:\n  \\<exists>h'. effect (while p f) h h' () \\<and> I h'\n\ngoal (1 subgoal):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "assume \"cond p h\""], ["proof (state)\nthis:\n  cond p h\n\ngoal (1 subgoal):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "with \\<open>I h\\<close> and success_f [of h] and step [of h] and success_p [of h]"], ["proof (chain)\npicking this:\n  I h\n  \\<lbrakk>I h; success p h; cond p h\\<rbrakk> \\<Longrightarrow> success f h\n  \\<lbrakk>I h; success p h; cond p h; effect f h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> (?h', h) \\<in> R \\<and> I ?h'\n  I h \\<Longrightarrow> success p h\n  cond p h", "obtain h' and r where \"effect f h h' r\" and \"(h', h) \\<in> R\" and \"I h'\" and \"success p h\""], ["proof (prove)\nusing this:\n  I h\n  \\<lbrakk>I h; success p h; cond p h\\<rbrakk> \\<Longrightarrow> success f h\n  \\<lbrakk>I h; success p h; cond p h; effect f h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> (?h', h) \\<in> R \\<and> I ?h'\n  I h \\<Longrightarrow> success p h\n  cond p h\n\ngoal (1 subgoal):\n 1. (\\<And>h' r.\n        \\<lbrakk>effect f h h' r; (h', h) \\<in> R; I h';\n         success p h\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: success_def effect_def)"], ["proof (state)\nthis:\n  effect f h h' r\n  (h', h) \\<in> R\n  I h'\n  success p h\n\ngoal (1 subgoal):\n 1. cond p h \\<Longrightarrow>\n    \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "with less.IH [of h']"], ["proof (chain)\npicking this:\n  \\<lbrakk>(h', h) \\<in> R; I h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'a. effect (while p f) h' h'a () \\<and> I h'a\n  effect f h h' r\n  (h', h) \\<in> R\n  I h'\n  success p h", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>(h', h) \\<in> R; I h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'a. effect (while p f) h' h'a () \\<and> I h'a\n  effect f h h' r\n  (h', h) \\<in> R\n  I h'\n  success p h\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "using \\<open>cond p h\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>(h', h) \\<in> R; I h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'a. effect (while p f) h' h'a () \\<and> I h'a\n  effect f h h' r\n  (h', h) \\<in> R\n  I h'\n  success p h\n  cond p h\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (while p f) h h' () \\<and> I h'", "by (auto simp: execute_simps effect_def)"], ["proof (state)\nthis:\n  \\<exists>h'. effect (while p f) h h' () \\<and> I h'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>h'. effect (while p f) h h' () \\<and> I h'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A rule for proving termination of while loops.\\<close>"], ["", "lemmas\n  success_while_induct [consumes 1, case_names success_cond success_body base step] =\n    wf_while_induct [unfolded effect_success_conv, THEN conjunct1]"], ["", "end"], ["", "subsection \\<open>For Loops\\<close>"], ["", "fun \"for\" :: \"'a list \\<Rightarrow> ('a \\<Rightarrow> 'b Heap) \\<Rightarrow> unit Heap\"\nwhere\n  \"for [] f = return ()\" |\n  \"for (x # xs) f = f x \\<then> for xs f\""], ["", "text \\<open>A rule for proving partial correctness of for loops.\\<close>"], ["", "lemma effect_for_induct [consumes 2, case_names base step]:\n  assumes \"i \\<le> j\"\n    and \"effect (for [i ..< j] f) h h' u\"\n    and \"I i h\"\n    and \"\\<And>k h h' r. i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> I k h \\<Longrightarrow> effect (f k) h h' r \\<Longrightarrow> I (Suc k) h'\"\n  shows \"I j h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I j h'", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. I j h'", "proof (induction \"j - i\" arbitrary: i h)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i h.\n       \\<lbrakk>0 = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'\n 2. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    effect (for [i..<j] f) h h' u; I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>i \\<le> k; k < j; I k h;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> I j h';\n        Suc x = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'", "case 0"], ["proof (state)\nthis:\n  0 = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (2 subgoals):\n 1. \\<And>i h.\n       \\<lbrakk>0 = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'\n 2. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    effect (for [i..<j] f) h h' u; I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>i \\<le> k; k < j; I k h;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> I j h';\n        Suc x = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'", "then"], ["proof (chain)\npicking this:\n  0 = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'", "show ?case"], ["proof (prove)\nusing this:\n  0 = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. I j h'", "by (auto elim: effect_elims)"], ["proof (state)\nthis:\n  I j h'\n\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    effect (for [i..<j] f) h h' u; I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>i \\<le> k; k < j; I k h;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> I j h';\n        Suc x = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    effect (for [i..<j] f) h h' u; I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>i \\<le> k; k < j; I k h;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> I j h';\n        Suc x = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j; effect (for [?i..<j] f) ?h h' u; I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>?i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> I j h'\n  Suc k = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    effect (for [i..<j] f) h h' u; I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>i \\<le> k; k < j; I k h;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> I j h';\n        Suc x = j - i; i \\<le> j; effect (for [i..<j] f) h h' u; I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> I j h'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. I j h'", "proof (cases \"j = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = i \\<Longrightarrow> I j h'\n 2. j \\<noteq> i \\<Longrightarrow> I j h'", "case True"], ["proof (state)\nthis:\n  j = i\n\ngoal (2 subgoals):\n 1. j = i \\<Longrightarrow> I j h'\n 2. j \\<noteq> i \\<Longrightarrow> I j h'", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j; effect (for [?i..<j] f) ?h h' u; I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>?i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> I j h'\n  Suc k = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n  j = i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j; effect (for [?i..<j] f) ?h h' u; I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>?i \\<le> k; k < j; I k h; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> I j h'\n  Suc k = j - i\n  i \\<le> j\n  effect (for [i..<j] f) h h' u\n  I i h\n  \\<lbrakk>i \\<le> ?k; ?k < j; I ?k ?h; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n  j = i\n\ngoal (1 subgoal):\n 1. I j h'", "by auto"], ["proof (state)\nthis:\n  I j h'\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "case False"], ["proof (state)\nthis:\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "with \\<open>i \\<le> j\\<close> and \\<open>Suc k = j - i\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> j\n  Suc k = j - i\n  j \\<noteq> i", "have \"i < j\" and \"k = j - Suc i\" and \"Suc i \\<le> j\""], ["proof (prove)\nusing this:\n  i \\<le> j\n  Suc k = j - i\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. i < j &&& k = j - Suc i &&& Suc i \\<le> j", "by auto"], ["proof (state)\nthis:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "then"], ["proof (chain)\npicking this:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j", "have \"[i ..< j] = i # [Suc i ..< j]\""], ["proof (prove)\nusing this:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j\n\ngoal (1 subgoal):\n 1. [i..<j] = i # [Suc i..<j]", "by (metis upt_rec)"], ["proof (state)\nthis:\n  [i..<j] = i # [Suc i..<j]\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "with \\<open>effect (for [i ..< j] f) h h' u\\<close>"], ["proof (chain)\npicking this:\n  effect (for [i..<j] f) h h' u\n  [i..<j] = i # [Suc i..<j]", "obtain h'' r\n      where *: \"effect (f i) h h'' r\" and **: \"effect (for [Suc i ..< j] f) h'' h' u\""], ["proof (prove)\nusing this:\n  effect (for [i..<j] f) h h' u\n  [i..<j] = i # [Suc i..<j]\n\ngoal (1 subgoal):\n 1. (\\<And>h'' r.\n        \\<lbrakk>effect (f i) h h'' r;\n         effect (for [Suc i..<j] f) h'' h' u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: effect_elims)"], ["proof (state)\nthis:\n  effect (f i) h h'' r\n  effect (for [Suc i..<j] f) h'' h' u\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "from Suc(6) [OF _ _ \\<open>I i h\\<close> *] and \\<open>i < j\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>i \\<le> i; i < j\\<rbrakk> \\<Longrightarrow> I (Suc i) h''\n  i < j", "have \"I (Suc i) h''\""], ["proof (prove)\nusing this:\n  \\<lbrakk>i \\<le> i; i < j\\<rbrakk> \\<Longrightarrow> I (Suc i) h''\n  i < j\n\ngoal (1 subgoal):\n 1. I (Suc i) h''", "by auto"], ["proof (state)\nthis:\n  I (Suc i) h''\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow> I j h'", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. I j h'", "by (rule Suc(1) [OF \\<open>k = j - Suc i\\<close> \\<open>Suc i \\<le> j\\<close> ** \\<open>I (Suc i) h''\\<close> Suc(6)]) auto"], ["proof (state)\nthis:\n  I j h'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I j h'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A rule for proving total correctness of for loops.\\<close>"], ["", "lemma for_induct [consumes 1, case_names succeed base step]:\n  assumes \"i \\<le> j\"\n    and \"\\<And>k h. I k h \\<Longrightarrow> i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> success (f k) h\"\n    and \"I i h\"\n    and \"\\<And>k h h' r. I k h \\<Longrightarrow> i \\<le> k \\<Longrightarrow> k < j \\<Longrightarrow> effect (f k) h h' r \\<Longrightarrow> I (Suc k) h'\"\n  shows \"\\<exists>h'. effect (for [i ..< j] f) h h' () \\<and> I j h'\" (is \"?P i h\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "using assms"], ["proof (prove)\nusing this:\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "proof (induction \"j - i\" arbitrary: i h)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i h.\n       \\<lbrakk>0 = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'\n 2. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    \\<And>k h.\n                       \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n                       \\<Longrightarrow> success (f k) h;\n                    I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>I k h; i \\<le> k; k < j;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (for [i..<j] f) h h' () \\<and> I j h';\n        Suc x = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'", "case 0"], ["proof (state)\nthis:\n  0 = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (2 subgoals):\n 1. \\<And>i h.\n       \\<lbrakk>0 = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'\n 2. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    \\<And>k h.\n                       \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n                       \\<Longrightarrow> success (f k) h;\n                    I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>I k h; i \\<le> k; k < j;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (for [i..<j] f) h h' () \\<and> I j h';\n        Suc x = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'", "then"], ["proof (chain)\npicking this:\n  0 = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'", "show ?case"], ["proof (prove)\nusing this:\n  0 = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "by (auto simp: effect_def execute_simps)"], ["proof (state)\nthis:\n  \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    \\<And>k h.\n                       \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n                       \\<Longrightarrow> success (f k) h;\n                    I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>I k h; i \\<le> k; k < j;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (for [i..<j] f) h h' () \\<and> I j h';\n        Suc x = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    \\<And>k h.\n                       \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n                       \\<Longrightarrow> success (f k) h;\n                    I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>I k h; i \\<le> k; k < j;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (for [i..<j] f) h h' () \\<and> I j h';\n        Suc x = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j;\n   \\<And>k h.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j\\<rbrakk>\n      \\<Longrightarrow> success (f k) h;\n   I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'.\n                       effect (for [?i..<j] f) ?h h' () \\<and> I j h'\n  Suc k = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. \\<And>x i h.\n       \\<lbrakk>\\<And>i h.\n                   \\<lbrakk>x = j - i; i \\<le> j;\n                    \\<And>k h.\n                       \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n                       \\<Longrightarrow> success (f k) h;\n                    I i h;\n                    \\<And>k h h' r.\n                       \\<lbrakk>I k h; i \\<le> k; k < j;\n                        effect (f k) h h' r\\<rbrakk>\n                       \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>h'.\n  effect (for [i..<j] f) h h' () \\<and> I j h';\n        Suc x = j - i; i \\<le> j;\n        \\<And>k h.\n           \\<lbrakk>I k h; i \\<le> k; k < j\\<rbrakk>\n           \\<Longrightarrow> success (f k) h;\n        I i h;\n        \\<And>k h h' r.\n           \\<lbrakk>I k h; i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n           \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>h'.\n                            effect (for [i..<j] f) h h' () \\<and> I j h'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "proof (cases \"j = i\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j = i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n 2. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "assume \"j = i\""], ["proof (state)\nthis:\n  j = i\n\ngoal (2 subgoals):\n 1. j = i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n 2. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "with Suc"], ["proof (chain)\npicking this:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j;\n   \\<And>k h.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j\\<rbrakk>\n      \\<Longrightarrow> success (f k) h;\n   I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'.\n                       effect (for [?i..<j] f) ?h h' () \\<and> I j h'\n  Suc k = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n  j = i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>k = j - ?i; ?i \\<le> j;\n   \\<And>k h.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j\\<rbrakk>\n      \\<Longrightarrow> success (f k) h;\n   I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'.\n                       effect (for [?i..<j] f) ?h h' () \\<and> I j h'\n  Suc k = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n  j = i\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "by auto"], ["proof (state)\nthis:\n  \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "assume \"j \\<noteq> i\""], ["proof (state)\nthis:\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "with \\<open>i \\<le> j\\<close> and \\<open>Suc k = j - i\\<close>"], ["proof (chain)\npicking this:\n  i \\<le> j\n  Suc k = j - i\n  j \\<noteq> i", "have \"i < j\" and \"k = j - Suc i\" and \"Suc i \\<le> j\""], ["proof (prove)\nusing this:\n  i \\<le> j\n  Suc k = j - i\n  j \\<noteq> i\n\ngoal (1 subgoal):\n 1. i < j &&& k = j - Suc i &&& Suc i \\<le> j", "by auto"], ["proof (state)\nthis:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "then"], ["proof (chain)\npicking this:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j", "have [simp]: \"[i ..< j] = i # [Suc i ..< j]\""], ["proof (prove)\nusing this:\n  i < j\n  k = j - Suc i\n  Suc i \\<le> j\n\ngoal (1 subgoal):\n 1. [i..<j] = i # [Suc i..<j]", "by (metis upt_rec)"], ["proof (state)\nthis:\n  [i..<j] = i # [Suc i..<j]\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "obtain h' r where *: \"effect (f i) h h' r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h' r.\n        effect (f i) h h' r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Suc(4) [OF \\<open>I i h\\<close> le_refl \\<open>i < j\\<close>]"], ["proof (prove)\nusing this:\n  success (f i) h\n\ngoal (1 subgoal):\n 1. (\\<And>h' r.\n        effect (f i) h h' r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim!: success_effectE)"], ["proof (state)\nthis:\n  effect (f i) h h' r\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "moreover"], ["proof (state)\nthis:\n  effect (f i) h h' r\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "then"], ["proof (chain)\npicking this:\n  effect (f i) h h' r", "have \"I (Suc i) h'\""], ["proof (prove)\nusing this:\n  effect (f i) h h' r\n\ngoal (1 subgoal):\n 1. I (Suc i) h'", "using Suc"], ["proof (prove)\nusing this:\n  effect (f i) h h' r\n  \\<lbrakk>k = j - ?i; ?i \\<le> j;\n   \\<And>k h.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j\\<rbrakk>\n      \\<Longrightarrow> success (f k) h;\n   I ?i ?h;\n   \\<And>k h h' r.\n      \\<lbrakk>I k h; ?i \\<le> k; k < j; effect (f k) h h' r\\<rbrakk>\n      \\<Longrightarrow> I (Suc k) h'\\<rbrakk>\n  \\<Longrightarrow> \\<exists>h'.\n                       effect (for [?i..<j] f) ?h h' () \\<and> I j h'\n  Suc k = j - i\n  i \\<le> j\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j\\<rbrakk>\n  \\<Longrightarrow> success (f ?k) ?h\n  I i h\n  \\<lbrakk>I ?k ?h; i \\<le> ?k; ?k < j; effect (f ?k) ?h ?h' ?r\\<rbrakk>\n  \\<Longrightarrow> I (Suc ?k) ?h'\n\ngoal (1 subgoal):\n 1. I (Suc i) h'", "by auto"], ["proof (state)\nthis:\n  I (Suc i) h'\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "moreover"], ["proof (state)\nthis:\n  I (Suc i) h'\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "have \"?P (Suc i) h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h'a. effect (for [Suc i..<j] f) h' h'a () \\<and> I j h'a", "by (rule Suc(1) [OF \\<open>k = j - Suc i\\<close> \\<open>Suc i \\<le> j\\<close> Suc(4) \\<open>I (Suc i) h'\\<close> Suc(6)]) auto"], ["proof (state)\nthis:\n  \\<exists>h'a. effect (for [Suc i..<j] f) h' h'a () \\<and> I j h'a\n\ngoal (1 subgoal):\n 1. j \\<noteq> i \\<Longrightarrow>\n    \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "ultimately"], ["proof (chain)\npicking this:\n  effect (f i) h h' r\n  I (Suc i) h'\n  \\<exists>h'a. effect (for [Suc i..<j] f) h' h'a () \\<and> I j h'a", "show ?case"], ["proof (prove)\nusing this:\n  effect (f i) h h' r\n  I (Suc i) h'\n  \\<exists>h'a. effect (for [Suc i..<j] f) h' h'a () \\<and> I j h'a\n\ngoal (1 subgoal):\n 1. \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'", "by (auto simp: effect_def execute_simps)"], ["proof (state)\nthis:\n  \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>h'. effect (for [i..<j] f) h h' () \\<and> I j h'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A rule for proving termination of for loops.\\<close>"], ["", "lemmas\n  success_for_induct [consumes 1, case_names succeed base step] =\n    for_induct [unfolded effect_success_conv, THEN conjunct1]"], ["", "end"]]}