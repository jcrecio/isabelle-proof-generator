{"file_name": "/home/qj213/afp-2021-10-22/thys/PSemigroupsConvolution/Unary_Modalities.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/PSemigroupsConvolution", "problem_names": ["lemma fdia_bmod_comp: \"( |R\\<rangle> f x) = \\<otimes> (\\<lambda>x y z. (x,y) \\<in> R) f c1 x\"", "lemma bdia_bmod_comp: \"(\\<langle>R| f x) = \\<otimes> (\\<lambda>y x z. (x,y) \\<in> R) f c1 x\"", "lemma bmod_fdia_comp: \"\\<otimes> R f g x = |{(x,(y,z)) |x y z. R x y z}\\<rangle> (\\<lambda>(x,y). (f x) \\<cdot> (g y)) x\"", "lemma bmod_fdia_comp_var: \n  \"\\<otimes> R f g x = |{(x,(y,z)) |x y z. R x y z}\\<rangle> (\\<lambda>(x,y). (\\<lambda>(v,w).(v \\<cdot> w)) (f x,g y)) x\"", "lemma fdia_im: \"( |R\\<rangle> f x) = \\<Squnion>(f ` R `` {x})\"", "lemma fdia_un_rel: \"fdia (R \\<union> S) = fdia R \\<squnion> fdia S\"", "lemma fdia_Un_rel: \"( |\\<Union>\\<R>\\<rangle> f x) = \\<Squnion>{|R\\<rangle> f x |R. R \\<in> \\<R>}\"", "lemma fdia_sup_fun: \"fdia R (f \\<squnion> g) = fdia R f \\<squnion> fdia R g\"", "lemma fdia_Sup_fun: \"( |R\\<rangle> (\\<Squnion>\\<F>) x) = \\<Squnion>{|R\\<rangle> f x |f. f \\<in> \\<F>} \"", "lemma fdia_seq: \"fdia (R ; S) f x  = fdia R (fdia S f) x\"", "lemma fdia_Id [simp]: \"( |Id\\<rangle> f x) = f x\"", "lemma fdia_fbox_demorgan: \"( |R\\<rangle> (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - |R] (\\<lambda>y. -f y) x\"", "lemma fbox_fdia_demorgan: \"( |R] (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - |R\\<rangle> (\\<lambda>y. -f y) x\"", "lemma bdia_bbox_demorgan: \"(\\<langle>R| (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - [R| (\\<lambda>y. -f y) x\"", "lemma bbox_bdia_demorgan: \"( [R| (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - \\<langle>R| (\\<lambda>y. -f y) x\"", "lemma fdia_bdia_conv: \"( |R\\<rangle> f x) = \\<langle>converse R| f x\"", "lemma fbox_bbox_conv: \"( |R] f x) = [converse R| f x\"", "lemma fdia_bbox_galois: \"(\\<forall>x. ( |R\\<rangle> f x) \\<le> g x) \\<longleftrightarrow> (\\<forall>x. f x \\<le> [R| g x)\"", "lemma bdia_fbox_galois: \"(\\<forall>x. (\\<langle>R| f x) \\<le> g x) \\<longleftrightarrow> (\\<forall>x. f x \\<le> |R] g x)\"", "lemma dia_conjugate: \n  \"(\\<forall>x. ( |R\\<rangle> (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) \\<sqinter> g x = \\<bottom>) \\<longleftrightarrow> (\\<forall>x. f x \\<sqinter> (\\<langle>R| g x) = \\<bottom>)\"", "lemma box_conjugate: \n  \"(\\<forall>x. ( |R] (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) \\<squnion> g x = \\<top>) \\<longleftrightarrow> (\\<forall>x. f x \\<squnion> ([R| g x) = \\<top>)\""], "translations": [["", "lemma fdia_bmod_comp: \"( |R\\<rangle> f x) = \\<otimes> (\\<lambda>x y z. (x,y) \\<in> R) f c1 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R\\<rangle> f x = \\<otimes> (\\<lambda>x y z. (x, y) \\<in> R) f c1 x", "by (simp add: fdia_def bmod_comp_def c1_def)"], ["", "lemma bdia_bmod_comp: \"(\\<langle>R| f x) = \\<otimes> (\\<lambda>y x z. (x,y) \\<in> R) f c1 x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<langle>R| f x = \\<otimes> (\\<lambda>y x z. (x, y) \\<in> R) f c1 x", "by (simp add: bdia_def bmod_comp_def c1_def)"], ["", "lemma bmod_fdia_comp: \"\\<otimes> R f g x = |{(x,(y,z)) |x y z. R x y z}\\<rangle> (\\<lambda>(x,y). (f x) \\<cdot> (g y)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<otimes> R f g x =\n     |{(x, y, z) |x y z.\n       R x y z}\\<rangle> (\\<lambda>(x, y). f x \\<cdot> g y) x", "by (simp add: fdia_def bmod_comp_def)"], ["", "lemma bmod_fdia_comp_var: \n  \"\\<otimes> R f g x = |{(x,(y,z)) |x y z. R x y z}\\<rangle> (\\<lambda>(x,y). (\\<lambda>(v,w).(v \\<cdot> w)) (f x,g y)) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<otimes> R f g x =\n     |{(x, y, z) |x y z.\n       R x y\n        z}\\<rangle> (\\<lambda>(x, y).\n                        case (f x, g y) of\n                        (v, w) \\<Rightarrow> v \\<cdot> w) x", "by (simp add: fdia_def bmod_comp_def)"], ["", "lemma fdia_im: \"( |R\\<rangle> f x) = \\<Squnion>(f ` R `` {x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R\\<rangle> f x = \\<Squnion>(f ` R `` {x})", "apply (simp add: fdia_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{f y |y. (x, y) \\<in> R} = \\<Squnion>(f ` R `` {x})", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> \\<Squnion>(f ` R `` {x})\n 2. \\<Squnion>(f ` R `` {x}) \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "apply (intro Sup_least, clarsimp simp: SUP_upper)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(f ` R `` {x}) \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "by (intro SUP_least Sup_upper, force)"], ["", "lemma fdia_un_rel: \"fdia (R \\<union> S) = fdia R \\<squnion> fdia S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fdia (R \\<union> S) = fdia R \\<squnion> fdia S", "apply (simp add: fun_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x xa.\n        |R \\<union> S\\<rangle> x xa =\n        |R\\<rangle> x xa \\<squnion>  |S\\<rangle> x xa", "by (clarsimp simp: fun_eq_iff fdia_im SUP_union Un_Image)"], ["", "lemma fdia_Un_rel: \"( |\\<Union>\\<R>\\<rangle> f x) = \\<Squnion>{|R\\<rangle> f x |R. R \\<in> \\<R>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |\\<Union> \\<R>\\<rangle> f x =\n    \\<Squnion>{ |R\\<rangle> f x |R. R \\<in> \\<R>}", "apply (simp add: fdia_im)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(f ` \\<Union> \\<R> `` {x}) =\n    \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Squnion>(f ` \\<Union> \\<R> `` {x})\n    \\<le> \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}\n    \\<le> \\<Squnion>(f ` \\<Union> \\<R> `` {x})", "apply (intro SUP_least, safe)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa xaa X.\n       \\<lbrakk>(x, xa) \\<in> X; X \\<in> \\<R>\\<rbrakk>\n       \\<Longrightarrow> f xa\n                         \\<le> \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R.\n    R \\<in> \\<R>}\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}\n    \\<le> \\<Squnion>(f ` \\<Union> \\<R> `` {x})", "apply (rule Sup_upper2, force)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa xaa X.\n       \\<lbrakk>(x, xa) \\<in> X; X \\<in> \\<R>\\<rbrakk>\n       \\<Longrightarrow> f xa \\<le> \\<Squnion>(f ` X `` {x})\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}\n    \\<le> \\<Squnion>(f ` \\<Union> \\<R> `` {x})", "apply (rule SUP_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |R. R \\<in> \\<R>}\n    \\<le> \\<Squnion>(f ` \\<Union> \\<R> `` {x})", "apply (rule Sup_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {\\<Squnion>(f ` R `` {x}) |R.\n                 R \\<in> \\<R>} \\<Longrightarrow>\n       xa \\<le> \\<Squnion>(f ` \\<Union> \\<R> `` {x})", "by (clarsimp simp: Image_mono SUP_subset_mono Sup_upper)"], ["", "lemma fdia_sup_fun: \"fdia R (f \\<squnion> g) = fdia R f \\<squnion> fdia R g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fdia R (f \\<squnion> g) = fdia R f \\<squnion> fdia R g", "by (simp add: fun_eq_iff fdia_im complete_lattice_class.SUP_sup_distrib)"], ["", "lemma fdia_Sup_fun: \"( |R\\<rangle> (\\<Squnion>\\<F>) x) = \\<Squnion>{|R\\<rangle> f x |f. f \\<in> \\<F>} \""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R\\<rangle> \\<Squnion>\\<F> x =\n    \\<Squnion>{ |R\\<rangle> f x |f. f \\<in> \\<F>}", "apply (simp add: fdia_im)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x) =\n    \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)\n    \\<le> \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}\n    \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "apply (rule SUP_least)+"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa f.\n       \\<lbrakk>xa \\<in> R `` {x}; f \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> f xa\n                         \\<le> \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f.\n    f \\<in> \\<F>}\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}\n    \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "apply (rule Sup_upper2, force)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa f.\n       \\<lbrakk>xa \\<in> R `` {x}; f \\<in> \\<F>\\<rbrakk>\n       \\<Longrightarrow> f xa \\<le> \\<Squnion>(f ` R `` {x})\n 2. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}\n    \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "apply (rule SUP_upper, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{\\<Squnion>(f ` R `` {x}) |f. f \\<in> \\<F>}\n    \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "apply (rule Sup_least, safe)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa f.\n       f \\<in> \\<F> \\<Longrightarrow>\n       \\<Squnion>(f ` R `` {x})\n       \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "apply (rule SUP_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa f xaa.\n       \\<lbrakk>f \\<in> \\<F>; xaa \\<in> R `` {x}\\<rbrakk>\n       \\<Longrightarrow> f xaa\n                         \\<le> (SUP x\\<in>R `` {x}. SUP f\\<in>\\<F>. f x)", "by (simp add: SUP_upper2)"], ["", "lemma fdia_seq: \"fdia (R ; S) f x  = fdia R (fdia S f) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R ; S\\<rangle> f x =  |R\\<rangle> fdia S f x", "by (simp add: fdia_im relcomp_Image, metis Image_eq_UN SUP_UNION)"], ["", "lemma fdia_Id [simp]: \"( |Id\\<rangle> f x) = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |Id\\<rangle> f x = f x", "by (simp add: fdia_def)"], ["", "subsection \\<open>Forward and Backward Boxes\\<close>"], ["", "definition fbox :: \"('a \\<times> 'b) set \\<Rightarrow> ('b \\<Rightarrow> 'c::complete_lattice) \\<Rightarrow> 'a \\<Rightarrow> 'c\" (\"|_] _ _\" [61,81] 82) where\n  \"( |R] f x) = \\<Sqinter>{f y|y. (x,y) \\<in> R}\""], ["", "definition bbox :: \"('a \\<times> 'b) set \\<Rightarrow> ('a \\<Rightarrow> 'c::complete_lattice) \\<Rightarrow> 'b \\<Rightarrow> 'c\" (\"[_| _ _\" [61,81] 82)where\n  \"([R| f y) = \\<Sqinter>{f x |x. (x,y) \\<in> R}\""], ["", "subsection \\<open>Symmetries and Dualities\\<close>"], ["", "lemma fdia_fbox_demorgan: \"( |R\\<rangle> (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - |R] (\\<lambda>y. -f y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R\\<rangle> f x = - |R] (\\<lambda>y. - f y) x", "apply (simp add: fbox_def fdia_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{f y |y. (x, y) \\<in> R} =\n    - \\<Sqinter>{- f y |y. (x, y) \\<in> R}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Squnion>{f y |y. (x, y) \\<in> R}\n    \\<le> - \\<Sqinter>{- f y |y. (x, y) \\<in> R}\n 2. - \\<Sqinter>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "apply (rule Sup_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> {f y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       xa \\<le> - \\<Sqinter>{- f y |y. (x, y) \\<in> R}\n 2. - \\<Sqinter>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "apply (simp add: Inf_lower compl_le_swap1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<Sqinter>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "apply (simp add: uminus_Inf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(uminus ` {- f y |y. (x, y) \\<in> R})\n    \\<le> \\<Squnion>{f y |y. (x, y) \\<in> R}", "apply (rule SUP_least; intro Sup_upper)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {- f y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       - xa \\<in> {f y |y. (x, y) \\<in> R}", "by auto"], ["", "lemma fbox_fdia_demorgan: \"( |R] (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - |R\\<rangle> (\\<lambda>y. -f y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |R] f x = -  |R\\<rangle> (\\<lambda>y. - f y) x", "apply (simp add: fbox_def fdia_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>{f y |y. (x, y) \\<in> R} =\n    - \\<Squnion>{- f y |y. (x, y) \\<in> R}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sqinter>{f y |y. (x, y) \\<in> R}\n    \\<le> - \\<Squnion>{- f y |y. (x, y) \\<in> R}\n 2. - \\<Squnion>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Sqinter>{f y |y. (x, y) \\<in> R}", "apply (simp add: uminus_Sup)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sqinter>{f y |y. (x, y) \\<in> R}\n    \\<le> \\<Sqinter>(uminus ` {- f y |y. (x, y) \\<in> R})\n 2. - \\<Squnion>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Sqinter>{f y |y. (x, y) \\<in> R}", "apply (rule INF_greatest; rule Inf_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> {- f y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       - xa \\<in> {f y |y. (x, y) \\<in> R}\n 2. - \\<Squnion>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Sqinter>{f y |y. (x, y) \\<in> R}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<Squnion>{- f y |y. (x, y) \\<in> R}\n    \\<le> \\<Sqinter>{f y |y. (x, y) \\<in> R}", "apply (rule Inf_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {f y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       - \\<Squnion>{- f y |y. (x, y) \\<in> R} \\<le> xa", "by (simp add: Sup_upper compl_le_swap2)"], ["", "lemma bdia_bbox_demorgan: \"(\\<langle>R| (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - [R| (\\<lambda>y. -f y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  \\<langle>R| f x = - [R| (\\<lambda>y. - f y) x", "apply (simp add: bbox_def bdia_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>{f xa |xa. (xa, x) \\<in> R} =\n    - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Squnion>{f xa |xa. (xa, x) \\<in> R}\n    \\<le> - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}\n 2. - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Squnion>{f xa |xa. (xa, x) \\<in> R}", "apply (rule Sup_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> {f xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       xa \\<le> - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}\n 2. - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Squnion>{f xa |xa. (xa, x) \\<in> R}", "apply (simp add: Inf_lower compl_le_swap1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<Sqinter>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Squnion>{f xa |xa. (xa, x) \\<in> R}", "apply (simp add: uminus_Inf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion>(uminus ` {- f xa |xa. (xa, x) \\<in> R})\n    \\<le> \\<Squnion>{f xa |xa. (xa, x) \\<in> R}", "apply (rule SUP_least; intro Sup_upper)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {- f xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       - xa \\<in> {f xa |xa. (xa, x) \\<in> R}", "by auto"], ["", "lemma bbox_bdia_demorgan: \"( [R| (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) = - \\<langle>R| (\\<lambda>y. -f y) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [R| f x = -  \\<langle>R| (\\<lambda>y. - f y) x", "apply (simp add: bbox_def bdia_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>{f xa |xa. (xa, x) \\<in> R} =\n    - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}\n    \\<le> - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}\n 2. - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}", "apply (simp add: uminus_Sup)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Sqinter>(uminus ` {- f xa |xa. (xa, x) \\<in> R})\n 2. - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}", "apply (rule INF_greatest; rule Inf_lower)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa \\<in> {- f xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       - xa \\<in> {f xa |xa. (xa, x) \\<in> R}\n 2. - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}", "apply auto[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R}\n    \\<le> \\<Sqinter>{f xa |xa. (xa, x) \\<in> R}", "apply (rule Inf_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {f xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       - \\<Squnion>{- f xa |xa. (xa, x) \\<in> R} \\<le> xa", "by (simp add: Sup_upper compl_le_swap2)"], ["", "lemma fdia_bdia_conv: \"( |R\\<rangle> f x) = \\<langle>converse R| f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |R\\<rangle> f x =  \\<langle>R\\<inverse>| f x", "by (simp add: fdia_def bdia_def)"], ["", "lemma fbox_bbox_conv: \"( |R] f x) = [converse R| f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. |R] f x = [R\\<inverse>| f x", "by (simp add: fbox_def bbox_def)"], ["", "lemma fdia_bbox_galois: \"(\\<forall>x. ( |R\\<rangle> f x) \\<le> g x) \\<longleftrightarrow> (\\<forall>x. f x \\<le> [R| g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.  |R\\<rangle> f x \\<le> g x) =\n    (\\<forall>x. f x \\<le> [R| g x)", "apply (standard, simp_all add: fdia_def bbox_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x \\<Longrightarrow>\n    \\<forall>x. f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R}\n 2. \\<forall>x.\n       f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n    \\<forall>x. \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>x.\n          \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x \\<Longrightarrow>\n       f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R}\n 2. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x", "apply (rule Inf_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<forall>x. \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x;\n        xa \\<in> {g xa |xa. (xa, x) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> f x \\<le> xa\n 2. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x", "apply (force simp: Sup_le_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f y |y. (x, y) \\<in> R} \\<le> g x", "apply (rule Sup_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<forall>x. f x \\<le> \\<Sqinter>{g xa |xa. (xa, x) \\<in> R};\n        xa \\<in> {f y |y. (x, y) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> g x", "by (force simp: le_Inf_iff)"], ["", "lemma bdia_fbox_galois: \"(\\<forall>x. (\\<langle>R| f x) \\<le> g x) \\<longleftrightarrow> (\\<forall>x. f x \\<le> |R] g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.  \\<langle>R| f x \\<le> g x) =\n    (\\<forall>x. f x \\<le> |R] g x)", "apply (standard, simp_all add: bdia_def fbox_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>x.\n       \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x \\<Longrightarrow>\n    \\<forall>x. f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R}\n 2. \\<forall>x.\n       f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R} \\<Longrightarrow>\n    \\<forall>x. \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>x.\n          \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x \\<Longrightarrow>\n       f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R}\n 2. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x", "apply (rule Inf_greatest)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<forall>x. \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x;\n        xa \\<in> {g y |y. (x, y) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> f x \\<le> xa\n 2. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x", "apply (force simp: Sup_le_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x.\n          f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R} \\<Longrightarrow>\n       \\<Squnion>{f xa |xa. (xa, x) \\<in> R} \\<le> g x", "apply (rule Sup_least)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>\\<forall>x. f x \\<le> \\<Sqinter>{g y |y. (x, y) \\<in> R};\n        xa \\<in> {f xa |xa. (xa, x) \\<in> R}\\<rbrakk>\n       \\<Longrightarrow> xa \\<le> g x", "by (force simp: le_Inf_iff)"], ["", "lemma dia_conjugate: \n  \"(\\<forall>x. ( |R\\<rangle> (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) \\<sqinter> g x = \\<bottom>) \\<longleftrightarrow> (\\<forall>x. f x \\<sqinter> (\\<langle>R| g x) = \\<bottom>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.  |R\\<rangle> f x \\<sqinter> g x = \\<bottom>) =\n    (\\<forall>x. f x \\<sqinter>  \\<langle>R| g x = \\<bottom>)", "by (simp add: meet_shunt fdia_bbox_galois bdia_bbox_demorgan)"], ["", "lemma box_conjugate: \n  \"(\\<forall>x. ( |R] (f::'b \\<Rightarrow> 'c::complete_boolean_algebra) x) \\<squnion> g x = \\<top>) \\<longleftrightarrow> (\\<forall>x. f x \\<squnion> ([R| g x) = \\<top>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "have \"(\\<forall>x. ( |R] f x) \\<squnion> g x = \\<top>) \\<longleftrightarrow> (\\<forall>x. -g x \\<le> |R] f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. - g x \\<le> |R] f x)", "by (simp add: join_shunt sup_commute)"], ["proof (state)\nthis:\n  (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n  (\\<forall>x. - g x \\<le> |R] f x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "also"], ["proof (state)\nthis:\n  (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n  (\\<forall>x. - g x \\<le> |R] f x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "have \"... \\<longleftrightarrow> (\\<forall>x. -g x \\<le> - |R\\<rangle> (\\<lambda>y. -f y) x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. - g x \\<le> |R] f x) =\n    (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x)", "by (simp add: fbox_fdia_demorgan)"], ["proof (state)\nthis:\n  (\\<forall>x. - g x \\<le> |R] f x) =\n  (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "also"], ["proof (state)\nthis:\n  (\\<forall>x. - g x \\<le> |R] f x) =\n  (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "have \"... \\<longleftrightarrow> (\\<forall>x. ( |R\\<rangle> (\\<lambda>y. -f y) x) \\<le> g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x) =\n    (\\<forall>x.  |R\\<rangle> (\\<lambda>y. - f y) x \\<le> g x)", "by simp"], ["proof (state)\nthis:\n  (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x) =\n  (\\<forall>x.  |R\\<rangle> (\\<lambda>y. - f y) x \\<le> g x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "also"], ["proof (state)\nthis:\n  (\\<forall>x. - g x \\<le> -  |R\\<rangle> (\\<lambda>y. - f y) x) =\n  (\\<forall>x.  |R\\<rangle> (\\<lambda>y. - f y) x \\<le> g x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "have \"... \\<longleftrightarrow> (\\<forall>x. -f x \\<le> [R| g x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x.  |R\\<rangle> (\\<lambda>y. - f y) x \\<le> g x) =\n    (\\<forall>x. - f x \\<le> [R| g x)", "by (simp add: fdia_bbox_galois)"], ["proof (state)\nthis:\n  (\\<forall>x.  |R\\<rangle> (\\<lambda>y. - f y) x \\<le> g x) =\n  (\\<forall>x. - f x \\<le> [R| g x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "finally"], ["proof (chain)\npicking this:\n  (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n  (\\<forall>x. - f x \\<le> [R| g x)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n  (\\<forall>x. - f x \\<le> [R| g x)\n\ngoal (1 subgoal):\n 1. (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n    (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)", "by (simp add: join_shunt)"], ["proof (state)\nthis:\n  (\\<forall>x. |R] f x \\<squnion> g x = \\<top>) =\n  (\\<forall>x. f x \\<squnion> [R| g x = \\<top>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}