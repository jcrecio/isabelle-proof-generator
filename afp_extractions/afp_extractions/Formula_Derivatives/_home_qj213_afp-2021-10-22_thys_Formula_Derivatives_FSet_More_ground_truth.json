{"file_name": "/home/qj213/afp-2021-10-22/thys/Formula_Derivatives/FSet_More.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Formula_Derivatives", "problem_names": ["lemma Suc_pred_image[simp]: \"0 \\<notin> P \\<Longrightarrow> (\\<lambda>x. Suc (x - Suc 0)) ` P = P\"", "lemmas Suc_pred_fimage[simp] = Suc_pred_image[Transfer.transferred]", "lemma ffilter_eq_fempty_iff:\n  \"ffilter P X = {||} \\<longleftrightarrow> (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x)\"\n  \"{||} = ffilter P X \\<longleftrightarrow> (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x)\"", "lemma max_ffilter_below[simp]: \"\\<lbrakk>x |\\<in>| P; x < n\\<rbrakk> \\<Longrightarrow>\n  max n (Suc (fMax (ffilter (\\<lambda>i. i < n) P))) = n\"", "lemma fMax_boundedD:\n  \"\\<lbrakk>fMax P < n; x |\\<in>| P\\<rbrakk> \\<Longrightarrow> x < n\"\n  \"\\<lbrakk>fMax P \\<le> n; n |\\<notin>| P; x |\\<in>| P\\<rbrakk> \\<Longrightarrow> x < n\"", "lemma fMax_ffilter_less: \"x |\\<in>| P \\<Longrightarrow> x < n \\<Longrightarrow> fMax (ffilter (\\<lambda>i. i < n) P) < n\""], "translations": [["", "lemma Suc_pred_image[simp]: \"0 \\<notin> P \\<Longrightarrow> (\\<lambda>x. Suc (x - Suc 0)) ` P = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> P \\<Longrightarrow> (\\<lambda>x. Suc (x - Suc 0)) ` P = P", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<notin> P \\<Longrightarrow>\n    {y. \\<exists>x\\<in>P. y = Suc (x - Suc 0)} = P", "by safe (metis Suc_pred neq0_conv)+"], ["", "context includes fset.lifting begin"], ["", "lemmas Suc_pred_fimage[simp] = Suc_pred_image[Transfer.transferred]"], ["", "end"], ["", "lemma ffilter_eq_fempty_iff:\n  \"ffilter P X = {||} \\<longleftrightarrow> (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x)\"\n  \"{||} = ffilter P X \\<longleftrightarrow> (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (ffilter P X = {||}) =\n    (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x) &&&\n    ({||} = ffilter P X) =\n    (\\<forall>x. x |\\<in>| X \\<longrightarrow> \\<not> P x)", "by auto"], ["", "lemma max_ffilter_below[simp]: \"\\<lbrakk>x |\\<in>| P; x < n\\<rbrakk> \\<Longrightarrow>\n  max n (Suc (fMax (ffilter (\\<lambda>i. i < n) P))) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>| P; x < n\\<rbrakk>\n    \\<Longrightarrow> max n (Suc (fMax (ffilter (\\<lambda>i. i < n) P))) = n", "by (metis max.absorb1 Suc_leI fMax_in fempty_iff ffmember_filter)"], ["", "lemma fMax_boundedD:\n  \"\\<lbrakk>fMax P < n; x |\\<in>| P\\<rbrakk> \\<Longrightarrow> x < n\"\n  \"\\<lbrakk>fMax P \\<le> n; n |\\<notin>| P; x |\\<in>| P\\<rbrakk> \\<Longrightarrow> x < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>fMax P < n; x |\\<in>| P\\<rbrakk> \\<Longrightarrow> x < n) &&&\n    (\\<lbrakk>fMax P \\<le> n; n |\\<notin>| P; x |\\<in>| P\\<rbrakk>\n     \\<Longrightarrow> x < n)", "by (metis fMax_ge le_less_trans, metis fMax_ge leD neqE order.strict_trans2)"], ["", "lemma fMax_ffilter_less: \"x |\\<in>| P \\<Longrightarrow> x < n \\<Longrightarrow> fMax (ffilter (\\<lambda>i. i < n) P) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x |\\<in>| P; x < n\\<rbrakk>\n    \\<Longrightarrow> fMax (ffilter (\\<lambda>i. i < n) P) < n", "by (metis fMax_in ffilter_eq_fempty_iff(2) ffmember_filter)"], ["", "end"]]}