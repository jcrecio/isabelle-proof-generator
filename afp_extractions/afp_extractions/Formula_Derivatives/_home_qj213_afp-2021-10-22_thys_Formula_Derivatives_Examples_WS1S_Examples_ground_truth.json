{"file_name": "/home/qj213/afp-2021-10-22/thys/Formula_Derivatives/Examples/WS1S_Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Formula_Derivatives", "problem_names": ["lemma \"check_eqv (Abs_idx (1, 0)) (FAnd (FEq_Const 0 100000) (FEq_Const 0 0)) FFalse\"", "lemma \"check_eqv (Abs_idx (1, 0)) (FEq_Plus 0 0 1) FFalse\"", "lemma \"check_eqv (Abs_idx (0, 1)) (FSuc_SO 0 0) (FBase (Empty 0))\"", "lemma \"check_eqv (Abs_idx (0, 2))\n  (FEx SO (FAnd (FBase (Subset 1 0)) (FSuc_SO 0 2)))\n  (FAll FO (FImp (FIn 0 0) (FEx FO (FAnd (FEq_Plus 1 0 1) (FIn 0 1)))))\"", "lemma \"Thm (Abs_idx (0, 1)) (FNot M2L)\"", "lemma \"Thm (Abs_idx (0, 0)) \\<Phi>\"", "lemma \"Thm (Abs_idx (0, 1)) (\\<Psi> 0)\"", "lemma \"Thm (Abs_idx (0, 2)) (\\<Psi> 1)\"", "lemma \"Thm (Abs_idx (0, 3)) (\\<Psi> 2)\"", "lemma \"Thm (Abs_idx (0, 4)) (\\<Psi> 3)\"", "lemma \"Thm (Abs_idx (0, 5)) (\\<Psi> 4)\"", "lemma \"Thm (Abs_idx (0, 6)) (\\<Psi> 5)\"", "lemma \"Thm (Abs_idx (0, 11)) (\\<Psi> 10)\"", "lemma \"Thm (Abs_idx (0, 16)) (\\<Psi> 15)\""], "translations": [["", "lemma \"check_eqv (Abs_idx (1, 0)) (FAnd (FEq_Const 0 100000) (FEq_Const 0 0)) FFalse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. check_eqv (Abs_idx (1, 0)) (x\\<^sub>0 = 100000 \\<and> x\\<^sub>0 = 0)\n     \\<bottom>", "by check_equiv"], ["", "lemma \"check_eqv (Abs_idx (1, 0)) (FEq_Plus 0 0 1) FFalse\""], ["proof (prove)\ngoal (1 subgoal):\n 1. check_eqv (Abs_idx (1, 0)) (x\\<^sub>0 = x\\<^sub>0 + 1) \\<bottom>", "by check_equiv"], ["", "lemma \"check_eqv (Abs_idx (0, 1)) (FSuc_SO 0 0) (FBase (Empty 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. check_eqv (Abs_idx (0, 1)) (X\\<^sub>0 = X\\<^sub>0 + 1) (FBase (Empty 0))", "by check_equiv"], ["", "lemma \"check_eqv (Abs_idx (0, 2))\n  (FEx SO (FAnd (FBase (Subset 1 0)) (FSuc_SO 0 2)))\n  (FAll FO (FImp (FIn 0 0) (FEx FO (FAnd (FEq_Plus 1 0 1) (FIn 0 1)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. check_eqv (Abs_idx (0, 2))\n     (\\<exists>\\<^sub>2 FBase (Subset 1 0) \\<and> X\\<^sub>0 = X\\<^sub>2 + 1)\n     (\\<forall>\\<^sub>1 \\<not> x\\<^sub>0 \\<in> X\\<^bsub>0\\<^esub> \\<or>\n                        (\\<exists>\\<^sub>1 x\\<^sub>1 = x\\<^sub>0 + 1 \\<and>\n     x\\<^sub>0 \\<in> X\\<^bsub>1\\<^esub>))", "by check_equiv"], ["", "value \"automaton (\\<sigma> (Abs_idx (0, 1))) (FBase (Eq_Presb None 0 (2 ^ 32)))\""], ["", "value \"automaton (\\<sigma> (Abs_idx (1, 0))) (nFAnd (FEq_Const 0 100000) (FEq_Const 0 42))\""], ["", "value \"automaton (\\<sigma> (Abs_idx (1, 0))) (nFAnd (FOr (FEq_Const 0 100000) (FEx FO (FBase (Eq_FO False 1 0)))) (FEq_Const 0 42))\""], ["", "(*true in M2L, false in WS1S*)"], ["", "definition \"M2L = (FEx SO (FAll FO (FBase (In False 0 0))) :: formula)\""], ["", "(*false in M2L, true in WS1S*)"], ["", "definition \"\\<Phi> = (FAll FO (FEx FO (FBase (Less None 1 0))) :: formula)\""], ["", "lemma \"Thm (Abs_idx (0, 1)) (FNot M2L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 1)) (\\<not> M2L)", "by (simp add: Thm_def M2L_def) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 0)) \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 0)) \\<Phi>", "by (simp add: Thm_def \\<Phi>_def) check_equiv"], ["", "abbreviation Globally (\"\\<box>_\" [40] 40) where \"Globally P == %n. FAll FO (FImp (FNot (FBase (Less None (n+1) 0))) (P 0))\""], ["", "abbreviation Future (\"\\<diamond>_\" [40] 40) where \"Future P == %n. FEx FO (FAnd (FNot (FBase (Less None (n+1) 0))) (P 0))\""], ["", "abbreviation IMP (infixr \"\\<rightarrow>\" 50) where \"IMP P1 P2 == %n. FImp (P1 n) (P2 n)\""], ["", "definition \\<Psi> :: \"nat \\<Rightarrow> formula\" where\n  \"\\<Psi> n = FAll FO (((\\<box>(foldr (\\<lambda>i \\<phi>. (\\<lambda>m. FBase (In False m i)) \\<rightarrow> \\<phi>) [0..<n] (\\<lambda>m. FBase (In False m n)))) \\<rightarrow>\n     foldr (\\<lambda>i \\<phi>. (\\<box>(\\<lambda>m. FBase (In False m i))) \\<rightarrow> \\<phi>) [0..<n] (\\<box>(\\<lambda>m. FBase (In False m n)))) 0)\""], ["", "lemma \"Thm (Abs_idx (0, 1)) (\\<Psi> 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 1)) (\\<Psi> 0)", "by (simp add: Thm_def \\<Psi>_def) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 2)) (\\<Psi> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 2)) (\\<Psi> 1)", "by (simp add: Thm_def \\<Psi>_def) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 3)) (\\<Psi> 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 3)) (\\<Psi> 2)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 4)) (\\<Psi> 3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 4)) (\\<Psi> 3)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 5)) (\\<Psi> 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 5)) (\\<Psi> 4)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 6)) (\\<Psi> 5)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 6)) (\\<Psi> 5)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 11)) (\\<Psi> 10)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 11)) (\\<Psi> 10)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "lemma \"Thm (Abs_idx (0, 16)) (\\<Psi> 15)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Thm (Abs_idx (0, 16)) (\\<Psi> 15)", "by (simp add: Thm_def \\<Psi>_def numeral_nat) check_equiv"], ["", "(*<*)\n(*\ndefinition \"Thm1 n = (\\<lambda>(ws,X). (ws = [], int (card X), X)) (the (WS1S.closure (Abs_idx (0, n + 1)) (norm (\\<Psi> n), FBool True)))\"\n\nvalue \"Thm1 0\"\nvalue \"Thm1 1\"\nvalue \"Thm1 2\"\nvalue \"Thm1 3\"\nvalue \"Thm1 4\"\nvalue \"Thm1 5\"\nvalue \"Thm1 6\"\nvalue \"Thm1 7\"\nvalue \"Thm1 8\"\nvalue \"Thm1 9\"\nvalue \"Thm1 10\"\nvalue \"Thm1 11\"\nvalue \"Thm1 12\"\nvalue \"Thm1 13\"\nvalue \"Thm1 14\"\nvalue \"Thm1 15\"\n\ndefinition \"mod_two a b c d = FIff a (FIff b (FIff c d))\"\ndefinition \"at_least_two a b c d = FIff d (FOr (FAnd a b) (FOr (FAnd b c) (FAnd a c)))\"\n\ndefinition \"ADD S A B = FEx SO (FAnd (FAll FO (FImp (First 0) (FNot (FBase (In 0 0)))))\n  (FAll FO (FAnd (mod_two (FBase (In 0 (A+1))) (FBase (In 0 (B+1))) (FBase (In 0 0)) (FBase (In 0 (S+1))))\n       ((FImp (FEx FO (FAnd (Last 0) (FBase (Less 1 0)))))\n            (at_least_two (FBase (In 0 (A+1))) (FBase (In 0 (B+1))) (FBase (In 0 0)) (FAll FO (FImp (Succ 0 1) (FBase (In 0 0)))))))))\"\n\nlemma Comm_Test: \"check_eqv (Abs_idx (0, 3)) (ADD 0 1 2) (ADD 1 0 2)\"\n  by eval\n\nabbreviation transition (\"\\\"_\\\" -> \\\"_\\\" [label=\\\"_\\\"];\")\n  where \"transition from to lab \\<equiv> ((from, lab), to)\"\n\nvalue \"WS1S.automaton (\\<sigma> (Abs_idx (0, 0))) M2L\"\n*)"], ["", "end"], ["", "(*>*)"]]}