{"file_name": "/home/qj213/afp-2021-10-22/thys/Robbins-Conjecture/Robbins_Conjecture.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Robbins-Conjecture", "problem_names": ["lemma boolean_II_is_boolean:\n   \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\"", "lemma boolean_is_boolean_II:\n  \"class.boolean_algebra_II uminus inf sup bot top\"", "lemma boolean_is_huntington:\n  \"class.huntington_algebra uminus inf sup bot top\"", "lemma boolean_II_is_huntington:\n  \"class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\"", "lemma huntington_id: \"x \\<squnion> -x = -x \\<squnion> -(-x)\"", "lemma dbl_neg: \"- (-x) = x\"", "lemma towards_sup_compl: \"x \\<squnion> -x = y \\<squnion> -y\"", "lemma sup_compl: \"x \\<squnion> -x = \\<top>\"", "lemma towards_inf_compl: \"x \\<sqinter> -x = y \\<sqinter> -y\"", "lemma inf_compl: \"x \\<sqinter> -x = \\<bottom>\"", "lemma towards_idem: \"\\<bottom> = \\<bottom> \\<squnion> \\<bottom>\"", "lemma sup_ident: \"x \\<squnion> \\<bottom> = x\"", "lemma inf_ident: \"x \\<sqinter> \\<top> = x\"", "lemma sup_idem: \"x \\<squnion> x = x\"", "lemma inf_idem: \"x \\<sqinter> x = x\"", "lemma sup_nil: \"x \\<squnion> \\<top> = \\<top>\"", "lemma inf_nil: \"x \\<sqinter> \\<bottom> = \\<bottom>\"", "lemma sup_absorb: \"x \\<squnion> x \\<sqinter> y = x\"", "lemma inf_absorb: \"x \\<sqinter> (x \\<squnion> y) = x\"", "lemma partition: \"x \\<sqinter> y \\<squnion> x \\<sqinter> -y = x\"", "lemma demorgans1: \"-(x \\<sqinter> y) = -x \\<squnion> -y\"", "lemma demorgans2: \"-(x \\<squnion> y) = -x \\<sqinter> -y\"", "lemma inf_comm: \"x \\<sqinter> y = y \\<sqinter> x\"", "lemma inf_assoc: \"x \\<sqinter> (y \\<sqinter> z) = x \\<sqinter> y \\<sqinter> z\"", "lemma inf_sup_distrib1: \"x \\<sqinter> (y \\<squnion> z) = (x \\<sqinter> y) \\<squnion> (x \\<sqinter> z)\"", "lemma sup_inf_distrib1:\n  \"x \\<squnion> (y \\<sqinter> z) = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\"", "lemma huntington_is_boolean_II:\n   \"class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\"", "lemma huntington_is_boolean:\n   \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\"", "lemma boolean_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\"", "lemma boolean_II_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\"", "lemma huntington_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\"", "lemma one:  \"1 \\<times> x = x\"", "lemma two:  \"2 \\<times> x = x \\<squnion> x\"", "lemma three:  \"3 \\<times> x = x \\<squnion> x \\<squnion> x\"", "lemma four:  \"4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x\"", "lemma five:  \"5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\"", "lemma six:  \"6 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\"", "lemma copyp_distrib: \"k \\<otimes> (x \\<squnion> y) = (k \\<otimes> x) \\<squnion> (k \\<otimes> y)\"", "lemma copyp_arith: \"(k + l + 1) \\<otimes> x = (k \\<otimes> x) \\<squnion> (l \\<otimes> x)\"", "lemma copy_arith: \n   assumes \"k \\<noteq> 0\" and \"l \\<noteq> 0\"\n     shows \"(k + l) \\<times> x = (k \\<times> x) \\<squnion> (l \\<times> x)\"", "lemma robbins2: \"y = -(-(-x \\<squnion> y) \\<squnion> -(x \\<squnion> y))\"", "lemma mann0: \"-(x \\<squnion> y) = -(-(-(x \\<squnion> y) \\<squnion> -x \\<squnion> y) \\<squnion> y)\"", "lemma mann1: \"-(-x \\<squnion> y) = -(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y) \\<squnion> y)\"", "lemma mann2: \"y = -(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y))\"", "lemma mann3: \"z = -(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> z) \\<squnion> -(y \\<squnion> z))\"", "lemma mann4: \"-(y \\<squnion> z) = \n  -(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> -(y \\<squnion> z) \\<squnion> z) \\<squnion> z)\"", "lemma mann5: \"u = \n-(-(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> \n      -(-x \\<squnion> y) \\<squnion> - (y \\<squnion> z) \\<squnion> z) \\<squnion> z \\<squnion> u) \\<squnion> \n  -(-(y \\<squnion> z) \\<squnion> u))\"", "lemma mann6: \n\"-(- 3\\<times>x \\<squnion> x) = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x) \\<squnion> -(-(- 3\\<times>x \\<squnion> x) \\<squnion> 5\\<times>x))\"", "lemma mann7:\n\"- 3\\<times>x = -(-(- 3\\<times>x \\<squnion> x) \\<squnion> 5\\<times>x)\"", "lemma mann8:\n\"-(- 3\\<times>x \\<squnion> x) \\<squnion> 2\\<times>x = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> - 3\\<times>x)\"\n(is \"?lhs = ?rhs\")", "lemma mann9: \"x = -(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x )\"", "lemma mann10: \"y = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x \\<squnion> y) \\<squnion> -(x \\<squnion> y))\"", "theorem mann: \"2\\<times>x = -(- 3\\<times>x \\<squnion> x) \\<squnion> 2\\<times>x\"", "lemma less_eq_introp: \n\"-(x \\<squnion> -(y \\<squnion> z)) = -(x \\<squnion> y \\<squnion> -z) \\<Longrightarrow> y \\<sqsubseteq> x\"", "lemma eq_intro: \n\"-(x \\<squnion> -(y \\<squnion> z)) = -(y \\<squnion> -(x \\<squnion> z)) \\<Longrightarrow> x = y\"", "lemma copyp0:\n   assumes \"-(x \\<squnion> -y) = z\"\n     shows \"-(x \\<squnion> -(y \\<squnion> k \\<otimes> (x \\<squnion> z))) = z\"", "lemma copyp1:\n   assumes \"-(-(x \\<squnion> -y) \\<squnion> -y) = x\"\n     shows \"-(y \\<squnion> k \\<otimes> (x \\<squnion> -(x \\<squnion> -y))) = -y\"", "lemma two_threep:\n   assumes \"-(2 \\<times> x \\<squnion> y) = -y\"\n       and \"-(3 \\<times> x \\<squnion> y) = -y\" \n     shows \"2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y\"", "lemma two_three:\n   assumes \"-(x \\<squnion> y) = -y \\<or> -(-(x \\<squnion> -y) \\<squnion> -y) = x\"\n     shows \"y \\<squnion> 2 \\<times> (x \\<squnion> -(x \\<squnion> -y)) = y \\<squnion> 3 \\<times> (x \\<squnion> -(x \\<squnion> -y))\"\n           (is \"y \\<squnion> ?z2 = y \\<squnion> ?z3\")", "lemma sup_idem: \"\\<rho> \\<squnion> \\<rho> = \\<rho>\"", "lemma sup_ident: \"x \\<squnion> \\<bottom>\\<bottom> = x\"", "lemma dbl_neg: \"- (-x) = x\"", "theorem robbins_is_huntington:\n  \"class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\"", "theorem robbins_is_boolean_II:\n  \"class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\"", "theorem robbins_is_boolean:\n  \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\""], "translations": [["", "lemma boolean_II_is_boolean:\n   \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "apply unfold_locales"], ["proof (prove)\ngoal (16 subgoals):\n 1. \\<And>x y.\n       (x \\<sqsubset> y) =\n       (x \\<sqsubseteq> y \\<and> \\<not> y \\<sqsubseteq> x)\n 2. \\<And>x. x \\<sqsubseteq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 5. \\<And>x y. x \\<sqinter> y \\<sqsubseteq> x\n 6. \\<And>x y. x \\<sqinter> y \\<sqsubseteq> y\n 7. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; x \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> y \\<sqinter> z\n 8. \\<And>x y. x \\<sqsubseteq> x \\<squnion> y\n 9. \\<And>y x. y \\<sqsubseteq> x \\<squnion> y\n 10. \\<And>y x z.\n        \\<lbrakk>y \\<sqsubseteq> x; z \\<sqsubseteq> x\\<rbrakk>\n        \\<Longrightarrow> y \\<squnion> z \\<sqsubseteq> x\nA total of 16 subgoals...", "apply (metis inf_absorb inf_assoc inf_comm inf_compl\n             less_def less_eq_def minus_def \n             sup_absorb sup_assoc sup_comm\n             sup_compl sup_inf_distrib1\n             sup_absorb inf_comm)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "context boolean_algebra begin"], ["", "lemma boolean_is_boolean_II:\n  \"class.boolean_algebra_II uminus inf sup bot top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus inf_class.inf sup_class.sup\n     bot_class.bot top_class.top", "apply unfold_locales"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>x y z.\n       sup_class.sup x (sup_class.sup y z) =\n       sup_class.sup (sup_class.sup x y) z\n 2. \\<And>x y. sup_class.sup x y = sup_class.sup y x\n 3. \\<And>x y. inf_class.inf x y = inf_class.inf y x\n 4. \\<And>x y z.\n       inf_class.inf x (inf_class.inf y z) =\n       inf_class.inf (inf_class.inf x y) z\n 5. \\<And>x y. sup_class.sup x (inf_class.inf x y) = x\n 6. \\<And>x y. inf_class.inf x (sup_class.sup x y) = x\n 7. \\<And>x y z.\n       sup_class.sup x (inf_class.inf y z) =\n       inf_class.inf (sup_class.sup x y) (sup_class.sup x z)\n 8. \\<And>x. sup_class.sup x (- x) = top_class.top\n 9. \\<And>x. inf_class.inf x (- x) = bot_class.bot", "apply (metis sup_assoc sup_commute sup_inf_absorb sup_compl_top\n             inf_assoc inf_commute inf_sup_absorb inf_compl_bot\n             sup_inf_distrib1)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "subsection \\<open>Huntington Algebra\\<close>"], ["", "text \\<open>We shall illustrate here that all Boolean algebra using our \n        formulation are Huntington algebras, and illustrate that every \n        Huntington algebra may be interpreted as a Boolean algebra.\n\n        Since the Isabelle/HOL library has good automation, it is convenient \n        to first show that the library instances Huntington algebras to exploit \n        previous results, and then use our previously derived correspondence.\\<close>"], ["", "context boolean_algebra begin"], ["", "lemma boolean_is_huntington:\n  \"class.huntington_algebra uminus inf sup bot top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus inf_class.inf sup_class.sup\n     bot_class.bot top_class.top", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y z.\n       sup_class.sup x (sup_class.sup y z) =\n       sup_class.sup (sup_class.sup x y) z\n 2. \\<And>x y. sup_class.sup x y = sup_class.sup y x\n 3. \\<And>x y. inf_class.inf x y = - sup_class.sup (- x) (- y)\n 4. top_class.top =\n    sup_class.sup common_algebra.secret_object1\n     (- common_algebra.secret_object1)\n 5. bot_class.bot =\n    - sup_class.sup common_algebra.secret_object1\n       (- common_algebra.secret_object1)\n 6. \\<And>x y.\n       sup_class.sup (- sup_class.sup (- x) (- y))\n        (- sup_class.sup (- x) y) =\n       x", "apply (metis double_compl inf_sup_distrib1 inf_top_right\n             compl_inf inf_commute inf_compl_bot  \n             compl_sup sup_commute sup_compl_top \n             sup_compl_top sup_assoc)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "context boolean_algebra_II begin"], ["", "lemma boolean_II_is_huntington:\n  \"class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "interpret boolean: \n    boolean_algebra minus uminus \"(\\<sqinter>)\" \"(\\<sqsubseteq>)\" \"(\\<sqsubset>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "by (fact boolean_II_is_boolean)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "by (simp add: boolean.boolean_is_huntington)"], ["proof (state)\nthis:\n  class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context huntington_algebra begin"], ["", "lemma huntington_id: \"x \\<squnion> -x = -x \\<squnion> -(-x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from huntington"], ["proof (chain)\npicking this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x", "have \n  \"x \\<squnion> -x = -(-x \\<squnion> -(-(-x))) \\<squnion> -(-x \\<squnion> -(-x)) \\<squnion> \n             (-(-(-x) \\<squnion> -(-(-x))) \\<squnion> -(-(-x) \\<squnion> -(-x)))\""], ["proof (prove)\nusing this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x =\n    - (- x \\<squnion> - (- (- x))) \\<squnion>\n    - (- x \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- x) \\<squnion> - (- x)))", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> - x =\n  - (- x \\<squnion> - (- (- x))) \\<squnion>\n  - (- x \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  x \\<squnion> - x =\n  - (- x \\<squnion> - (- (- x))) \\<squnion>\n  - (- x \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n  \"\\<dots> = -(-(-x) \\<squnion> -(-x)) \\<squnion> -(-(-x) \\<squnion> -(-(-x))) \\<squnion> \n        (-(-(-x) \\<squnion> -x) \\<squnion> -(-(-(-x)) \\<squnion> -x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- x \\<squnion> - (- (- x))) \\<squnion>\n    - (- x \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- x) \\<squnion> - (- x))) =\n    - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n    (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x))", "by simp"], ["proof (state)\nthis:\n  - (- x \\<squnion> - (- (- x))) \\<squnion>\n  - (- x \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - (- x))) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  - (- x \\<squnion> - (- (- x))) \\<squnion>\n  - (- x \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - (- x))) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n  \"\\<dots> = -(-(-x) \\<squnion> -(-x)) \\<squnion> \n        (-(-(-x) \\<squnion> -(-(-x))) \\<squnion> -(-(-x) \\<squnion> -x)) \\<squnion> \n       -(-(-(-x)) \\<squnion> -x)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n    (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x)) =\n    - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- x) \\<squnion> - x)) \\<squnion>\n    - (- (- (- x)) \\<squnion> - x)", "by simp"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x)) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - x)) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion> - (- (- (- x)) \\<squnion> - x)) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - x)) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n  \"\\<dots> = -(-(-x) \\<squnion> -(-x)) \\<squnion> \n        (-(-(-x) \\<squnion> -x) \\<squnion> -(-(-x) \\<squnion> -(-(-x)))) \\<squnion> \n       -(-(-(-x)) \\<squnion> -x)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- x) \\<squnion> - x)) \\<squnion>\n    - (- (- (- x)) \\<squnion> - x) =\n    - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - x) \\<squnion>\n     - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n    - (- (- (- x)) \\<squnion> - x)", "by simp"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - x)) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion>\n   - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- x) \\<squnion> - x)) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion>\n   - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n  \"\\<dots> = -(-(-x) \\<squnion> -(-x)) \\<squnion> -(-(-x) \\<squnion> -x) \\<squnion> \n        (-(-(-x) \\<squnion> -(-(-x))) \\<squnion> -(-(-(-x)) \\<squnion> -x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    (- (- (- x) \\<squnion> - x) \\<squnion>\n     - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n    - (- (- (- x)) \\<squnion> - x) =\n    - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - x) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- (- x)) \\<squnion> - x))", "by simp"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion>\n   - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  (- (- (- x) \\<squnion> - x) \\<squnion>\n   - (- (- x) \\<squnion> - (- (- x)))) \\<squnion>\n  - (- (- (- x)) \\<squnion> - x) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n  \"\\<dots> = -(-(-x) \\<squnion> -(-x)) \\<squnion> -(-(-x) \\<squnion> -x) \\<squnion> \n        (-(-(-(-x)) \\<squnion> -(-x)) \\<squnion> -(-(-(-x)) \\<squnion> -x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - x) \\<squnion>\n    (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n     - (- (- (- x)) \\<squnion> - x)) =\n    - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - x) \\<squnion>\n    (- (- (- (- x)) \\<squnion> - (- x)) \\<squnion>\n     - (- (- (- x)) \\<squnion> - x))", "by simp"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x)) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- (- x)) \\<squnion> - (- x)) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "also"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- x) \\<squnion> - (- (- x))) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x)) =\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- (- x)) \\<squnion> - (- x)) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "from huntington"], ["proof (chain)\npicking this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x", "have \n  \"\\<dots> = -x \\<squnion> -(-x)\""], ["proof (prove)\nusing this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. - (- (- x) \\<squnion> - (- x)) \\<squnion>\n    - (- (- x) \\<squnion> - x) \\<squnion>\n    (- (- (- (- x)) \\<squnion> - (- x)) \\<squnion>\n     - (- (- (- x)) \\<squnion> - x)) =\n    - x \\<squnion> - (- x)", "by simp"], ["proof (state)\nthis:\n  - (- (- x) \\<squnion> - (- x)) \\<squnion>\n  - (- (- x) \\<squnion> - x) \\<squnion>\n  (- (- (- (- x)) \\<squnion> - (- x)) \\<squnion>\n   - (- (- (- x)) \\<squnion> - x)) =\n  - x \\<squnion> - (- x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "finally"], ["proof (chain)\npicking this:\n  x \\<squnion> - x = - x \\<squnion> - (- x)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<squnion> - x = - x \\<squnion> - (- x)\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = - x \\<squnion> - (- x)", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> - x = - x \\<squnion> - (- x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dbl_neg: \"- (-x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- x) = x", "apply (metis huntington huntington_id sup_comm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma towards_sup_compl: \"x \\<squnion> -x = y \\<squnion> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from huntington"], ["proof (chain)\npicking this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x", "have \n  \"x \\<squnion> -x = -(-x \\<squnion> -(-y)) \\<squnion> -(-x \\<squnion> -y) \\<squnion> (-(-(-x) \\<squnion> -(-y)) \\<squnion> -(-(-x) \\<squnion> -y))\""], ["proof (prove)\nusing this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x =\n    - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n    (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y))", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> - x =\n  - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n  (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  x \\<squnion> - x =\n  - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n  (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n  \"\\<dots> = -(-(-y) \\<squnion> -x) \\<squnion> -(-y \\<squnion> -x) \\<squnion> (-(-y \\<squnion> -(-x)) \\<squnion> -(-(-y) \\<squnion> -(-x)))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n    (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y)) =\n    - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x)))", "by simp"], ["proof (state)\nthis:\n  - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n  (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y)) =\n  - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  - (- x \\<squnion> - (- y)) \\<squnion> - (- x \\<squnion> - y) \\<squnion>\n  (- (- (- x) \\<squnion> - (- y)) \\<squnion> - (- (- x) \\<squnion> - y)) =\n  - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n  \"\\<dots> = -(-(-y) \\<squnion> -x) \\<squnion> (-(-y \\<squnion> -x) \\<squnion> -(-y \\<squnion> -(-x))) \\<squnion> -(-(-y) \\<squnion> -(-x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n    - (- (- y) \\<squnion> - x) \\<squnion>\n    (- (- y \\<squnion> - x) \\<squnion>\n     - (- y \\<squnion> - (- x))) \\<squnion>\n    - (- (- y) \\<squnion> - (- x))", "by simp"], ["proof (state)\nthis:\n  - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - x) \\<squnion> - (- y \\<squnion> - (- x))) \\<squnion>\n  - (- (- y) \\<squnion> - (- x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  - (- (- y) \\<squnion> - x) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - x) \\<squnion> - (- y \\<squnion> - (- x))) \\<squnion>\n  - (- (- y) \\<squnion> - (- x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n  \"\\<dots> = -(-y \\<squnion> -(-x)) \\<squnion> -(-y \\<squnion> -x) \\<squnion> -(-(-y) \\<squnion> -x) \\<squnion> -(-(-y) \\<squnion> -(-x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- y) \\<squnion> - x) \\<squnion>\n    (- (- y \\<squnion> - x) \\<squnion>\n     - (- y \\<squnion> - (- x))) \\<squnion>\n    - (- (- y) \\<squnion> - (- x)) =\n    - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    - (- (- y) \\<squnion> - x) \\<squnion>\n    - (- (- y) \\<squnion> - (- x))", "by simp"], ["proof (state)\nthis:\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - x) \\<squnion> - (- y \\<squnion> - (- x))) \\<squnion>\n  - (- (- y) \\<squnion> - (- x)) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - (- x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  (- (- y \\<squnion> - x) \\<squnion> - (- y \\<squnion> - (- x))) \\<squnion>\n  - (- (- y) \\<squnion> - (- x)) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - (- x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n  \"\\<dots> = -(-y \\<squnion> -(-x)) \\<squnion> -(-y \\<squnion> -x) \\<squnion> (-(-(-y) \\<squnion> -x) \\<squnion> -(-(-y) \\<squnion> -(-x)))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    - (- (- y) \\<squnion> - x) \\<squnion>\n    - (- (- y) \\<squnion> - (- x)) =\n    - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x)))", "by simp"], ["proof (state)\nthis:\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - (- x)) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - x) \\<squnion>\n  - (- (- y) \\<squnion> - (- x)) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x)))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n  \"\\<dots> = -(-y \\<squnion> -(-x)) \\<squnion> -(-y \\<squnion> -x) \\<squnion> (-(-(-y) \\<squnion> -(-x)) \\<squnion> -(-(-y) \\<squnion> -x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n    - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- (- y) \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - x))", "by simp"], ["proof (state)\nthis:\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "also"], ["proof (state)\nthis:\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - x) \\<squnion> - (- (- y) \\<squnion> - (- x))) =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "from huntington"], ["proof (chain)\npicking this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x", "have \n  \"y \\<squnion> -y = \\<dots>\""], ["proof (prove)\nusing this:\n  - (- ?x \\<squnion> - ?y) \\<squnion> - (- ?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. y \\<squnion> - y =\n    - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n    (- (- (- y) \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - x))", "by simp"], ["proof (state)\nthis:\n  y \\<squnion> - y =\n  - (- y \\<squnion> - (- x)) \\<squnion> - (- y \\<squnion> - x) \\<squnion>\n  (- (- (- y) \\<squnion> - (- x)) \\<squnion> - (- (- y) \\<squnion> - x))\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "finally"], ["proof (chain)\npicking this:\n  y \\<squnion> - y = x \\<squnion> - x", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<squnion> - y = x \\<squnion> - x\n\ngoal (1 subgoal):\n 1. x \\<squnion> - x = y \\<squnion> - y", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> - x = y \\<squnion> - y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sup_compl: \"x \\<squnion> -x = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> - x = \\<top>", "by (simp add: top_eq towards_sup_compl)"], ["", "lemma towards_inf_compl: \"x \\<sqinter> -x = y \\<sqinter> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - x = y \\<sqinter> - y", "by (metis dbl_neg inf_eq sup_comm sup_compl)"], ["", "lemma inf_compl: \"x \\<sqinter> -x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - x = \\<bottom>", "by (metis dbl_neg sup_comm bot_eq towards_inf_compl inf_eq)"], ["", "lemma towards_idem: \"\\<bottom> = \\<bottom> \\<squnion> \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> = \\<bottom> \\<squnion> \\<bottom>", "by (metis dbl_neg huntington inf_compl inf_eq sup_assoc sup_comm sup_compl)"], ["", "lemma sup_ident: \"x \\<squnion> \\<bottom> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom> = x", "by (metis dbl_neg huntington inf_compl inf_eq sup_assoc \n          sup_comm sup_compl towards_idem)"], ["", "lemma inf_ident: \"x \\<sqinter> \\<top> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> \\<top> = x", "by (metis dbl_neg inf_compl inf_eq sup_ident sup_comm sup_compl)"], ["", "lemma sup_idem: \"x \\<squnion> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> x = x", "by (metis dbl_neg huntington inf_compl inf_eq sup_ident sup_comm sup_compl)"], ["", "lemma inf_idem: \"x \\<sqinter> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> x = x", "by (metis dbl_neg inf_eq sup_idem)"], ["", "lemma sup_nil: \"x \\<squnion> \\<top> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> \\<top> = \\<top>", "by (metis sup_idem sup_assoc sup_comm sup_compl)"], ["", "lemma inf_nil: \"x \\<sqinter> \\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> \\<bottom> = \\<bottom>", "by (metis dbl_neg inf_compl inf_eq sup_nil sup_comm sup_compl)"], ["", "lemma sup_absorb: \"x \\<squnion> x \\<sqinter> y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> x \\<sqinter> y = x", "by (metis huntington inf_eq sup_idem sup_assoc sup_comm)"], ["", "lemma inf_absorb: \"x \\<sqinter> (x \\<squnion> y) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> (x \\<squnion> y) = x", "by (metis dbl_neg inf_eq sup_absorb)"], ["", "lemma partition: \"x \\<sqinter> y \\<squnion> x \\<sqinter> -y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<squnion> x \\<sqinter> - y = x", "by (metis dbl_neg huntington inf_eq sup_comm)"], ["", "lemma demorgans1: \"-(x \\<sqinter> y) = -x \\<squnion> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<sqinter> y) = - x \\<squnion> - y", "by (metis dbl_neg inf_eq)"], ["", "lemma demorgans2: \"-(x \\<squnion> y) = -x \\<sqinter> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> y) = - x \\<sqinter> - y", "by (metis dbl_neg inf_eq)"], ["", "lemma inf_comm: \"x \\<sqinter> y = y \\<sqinter> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> y = y \\<sqinter> x", "by (metis inf_eq sup_comm)"], ["", "lemma inf_assoc: \"x \\<sqinter> (y \\<sqinter> z) = x \\<sqinter> y \\<sqinter> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<sqinter> z) = x \\<sqinter> y \\<sqinter> z", "by (metis dbl_neg inf_eq sup_assoc)"], ["", "lemma inf_sup_distrib1: \"x \\<sqinter> (y \\<squnion> z) = (x \\<sqinter> y) \\<squnion> (x \\<sqinter> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from partition"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x", "have \n  \"x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) =\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y", ".."], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<squnion> z) =\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<squnion> z) =\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_assoc"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z", "have\n  \"\\<dots> = x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n    x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> y \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_comm"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x", "have\n  \"\\<dots> = x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n    x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> y) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_absorb"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?x \\<squnion> ?y) = ?x", "have\n  \"\\<dots> = (x \\<sqinter> y) \\<squnion> (x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y)\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n    x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n    x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<sqinter> (y \\<squnion> z)) \\<squnion>\n  x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from partition"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y \\<sqinter> z) \\<squnion> (x \\<sqinter> (y \\<squnion> z) \\<sqinter> -y \\<sqinter> -z))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n     x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n   x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<squnion> x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n   x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_assoc"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z))) \\<squnion> (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> -z))))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n     x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z)))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n   x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> z \\<squnion>\n   x \\<sqinter> (y \\<squnion> z) \\<sqinter> - y \\<sqinter> - z) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from demorgans2"], ["proof (chain)\npicking this:\n  - (?x \\<squnion> ?y) = - ?x \\<sqinter> - ?y", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z))) \\<squnion> (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> -(y \\<squnion> z))))\""], ["proof (prove)\nusing this:\n  - (?x \\<squnion> ?y) = - ?x \\<sqinter> - ?y\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z))) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z)))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> - z))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_compl"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> - ?x = \\<bottom>", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z))) \\<squnion> (x \\<sqinter> \\<bottom>))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> - ?x = \\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z))) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> \\<bottom>)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> ((y \\<squnion> z) \\<sqinter> - (y \\<squnion> z))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_nil"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> \\<bottom> = \\<bottom>", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z))) \\<squnion> \\<bottom>)\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> \\<bottom> = \\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     x \\<sqinter> \\<bottom>) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     \\<bottom>)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   x \\<sqinter> \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_idem"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?x = ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       ((x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z))) \\<squnion> \\<bottom>)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?x = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     \\<bottom>) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     \\<bottom>)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_ident"], ["proof (chain)\npicking this:\n  ?x \\<squnion> \\<bottom> = ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (-y \\<sqinter> z)))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> \\<bottom> = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter>\n     ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n     \\<bottom>) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) \\<squnion>\n   \\<bottom>) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_comm"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       (x \\<sqinter> ((-y \\<sqinter> z) \\<sqinter> (y \\<squnion> z)))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> ((y \\<squnion> z) \\<sqinter> (- y \\<sqinter> z)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       (x \\<sqinter> ((-y \\<sqinter> z) \\<sqinter> (z \\<squnion> y)))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z)) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (y \\<squnion> z)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_assoc"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> (y \\<sqinter> z)) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> \n       (x \\<sqinter> (-y \\<sqinter> (z \\<sqinter> (z \\<squnion> y))))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y)) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y)))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z \\<sqinter> (z \\<squnion> y)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y)))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_absorb"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?x \\<squnion> ?y) = ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> (y \\<sqinter> z)) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> (x \\<sqinter> (-y \\<sqinter> z))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?x \\<squnion> ?y) = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y))) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> (z \\<sqinter> (z \\<squnion> y))) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_comm"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> (z \\<sqinter> y)) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> (x \\<sqinter> (z \\<sqinter> -y))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (- y \\<sqinter> z) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (y \\<sqinter> z) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (- y \\<sqinter> z) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> ((x \\<sqinter> (z \\<sqinter> y)) \\<squnion> (x \\<sqinter> y \\<sqinter> -z))) \\<squnion> (x \\<sqinter> (z \\<sqinter> -y))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n     x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> ((x \\<sqinter> y \\<sqinter> -z) \\<squnion> (x \\<sqinter> (z \\<sqinter> y)))) \\<squnion> (x \\<sqinter> (z \\<sqinter> -y))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n     x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n     x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n   x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> y \\<sqinter> - z) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n   x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> ((x \\<sqinter> (z \\<sqinter> y)) \\<squnion> (x \\<sqinter> (z \\<sqinter> -y)))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n     x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n    x \\<sqinter> (z \\<sqinter> - y) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n     x \\<sqinter> (z \\<sqinter> - y))", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n   x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion> x \\<sqinter> (z \\<sqinter> - y))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  (x \\<sqinter> y \\<sqinter> - z \\<squnion>\n   x \\<sqinter> (z \\<sqinter> y)) \\<squnion>\n  x \\<sqinter> (z \\<sqinter> - y) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion> x \\<sqinter> (z \\<sqinter> - y))\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from inf_assoc"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z", "have\n  \"\\<dots> = ((x \\<sqinter> y \\<sqinter> z) \\<squnion> (x \\<sqinter> y \\<sqinter> -z)) \\<squnion> ((x \\<sqinter> z \\<sqinter> y) \\<squnion> (x \\<sqinter> z \\<sqinter> -y))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?x \\<sqinter> ?y \\<sqinter> ?z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n     x \\<sqinter> (z \\<sqinter> - y)) =\n    x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> z \\<sqinter> y \\<squnion> x \\<sqinter> z \\<sqinter> - y)", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> (z \\<sqinter> - y)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> z \\<sqinter> y \\<squnion> x \\<sqinter> z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "also"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> (z \\<sqinter> y) \\<squnion>\n   x \\<sqinter> (z \\<sqinter> - y)) =\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> z \\<sqinter> y \\<squnion> x \\<sqinter> z \\<sqinter> - y)\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "from partition"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x", "have \"\\<dots> = (x \\<sqinter> y) \\<squnion> (x \\<sqinter> z)\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> - ?y = ?x\n\ngoal (1 subgoal):\n 1. x \\<sqinter> y \\<sqinter> z \\<squnion>\n    x \\<sqinter> y \\<sqinter> - z \\<squnion>\n    (x \\<sqinter> z \\<sqinter> y \\<squnion> x \\<sqinter> z \\<sqinter> - y) =\n    x \\<sqinter> y \\<squnion> x \\<sqinter> z", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> y \\<sqinter> z \\<squnion>\n  x \\<sqinter> y \\<sqinter> - z \\<squnion>\n  (x \\<sqinter> z \\<sqinter> y \\<squnion> x \\<sqinter> z \\<sqinter> - y) =\n  x \\<sqinter> y \\<squnion> x \\<sqinter> z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "finally"], ["proof (chain)\npicking this:\n  x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z\n\ngoal (1 subgoal):\n 1. x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z", "by simp"], ["proof (state)\nthis:\n  x \\<sqinter> (y \\<squnion> z) = x \\<sqinter> y \\<squnion> x \\<sqinter> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sup_inf_distrib1:\n  \"x \\<squnion> (y \\<sqinter> z) = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from dbl_neg"], ["proof (chain)\npicking this:\n  - (- ?x) = ?x", "have\n  \"x \\<squnion> (y \\<sqinter> z) = -(-(-(-x) \\<squnion> (y \\<sqinter> z)))\""], ["proof (prove)\nusing this:\n  - (- ?x) = ?x\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z = - (- (- (- x) \\<squnion> y \\<sqinter> z))", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> y \\<sqinter> z = - (- (- (- x) \\<squnion> y \\<sqinter> z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "also"], ["proof (state)\nthis:\n  x \\<squnion> y \\<sqinter> z = - (- (- (- x) \\<squnion> y \\<sqinter> z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from inf_eq"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> ?y = - (- ?x \\<squnion> - ?y)", "have\n  \"\\<dots> = -(-x \\<sqinter> (-y \\<squnion> -z))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> ?y = - (- ?x \\<squnion> - ?y)\n\ngoal (1 subgoal):\n 1. - (- (- (- x) \\<squnion> y \\<sqinter> z)) =\n    - (- x \\<sqinter> (- y \\<squnion> - z))", "by simp"], ["proof (state)\nthis:\n  - (- (- (- x) \\<squnion> y \\<sqinter> z)) =\n  - (- x \\<sqinter> (- y \\<squnion> - z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "also"], ["proof (state)\nthis:\n  - (- (- (- x) \\<squnion> y \\<sqinter> z)) =\n  - (- x \\<sqinter> (- y \\<squnion> - z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from inf_sup_distrib1"], ["proof (chain)\npicking this:\n  ?x \\<sqinter> (?y \\<squnion> ?z) =\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> ?z", "have\n  \"\\<dots> = -((-x \\<sqinter> -y) \\<squnion> (-x \\<sqinter> -z))\""], ["proof (prove)\nusing this:\n  ?x \\<sqinter> (?y \\<squnion> ?z) =\n  ?x \\<sqinter> ?y \\<squnion> ?x \\<sqinter> ?z\n\ngoal (1 subgoal):\n 1. - (- x \\<sqinter> (- y \\<squnion> - z)) =\n    - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z)", "by simp"], ["proof (state)\nthis:\n  - (- x \\<sqinter> (- y \\<squnion> - z)) =\n  - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "also"], ["proof (state)\nthis:\n  - (- x \\<sqinter> (- y \\<squnion> - z)) =\n  - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from demorgans2"], ["proof (chain)\npicking this:\n  - (?x \\<squnion> ?y) = - ?x \\<sqinter> - ?y", "have\n  \"\\<dots> = -(-x \\<sqinter> -y) \\<sqinter> -(-x \\<sqinter> -z)\""], ["proof (prove)\nusing this:\n  - (?x \\<squnion> ?y) = - ?x \\<sqinter> - ?y\n\ngoal (1 subgoal):\n 1. - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z) =\n    - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z)", "by simp"], ["proof (state)\nthis:\n  - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z) =\n  - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "also"], ["proof (state)\nthis:\n  - (- x \\<sqinter> - y \\<squnion> - x \\<sqinter> - z) =\n  - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from demorgans1"], ["proof (chain)\npicking this:\n  - (?x \\<sqinter> ?y) = - ?x \\<squnion> - ?y", "have\n  \"\\<dots> = (-(-x) \\<squnion> -(-y)) \\<sqinter> (-(-x) \\<squnion> -(-z))\""], ["proof (prove)\nusing this:\n  - (?x \\<sqinter> ?y) = - ?x \\<squnion> - ?y\n\ngoal (1 subgoal):\n 1. - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z) =\n    (- (- x) \\<squnion> - (- y)) \\<sqinter> (- (- x) \\<squnion> - (- z))", "by simp"], ["proof (state)\nthis:\n  - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z) =\n  (- (- x) \\<squnion> - (- y)) \\<sqinter> (- (- x) \\<squnion> - (- z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "also"], ["proof (state)\nthis:\n  - (- x \\<sqinter> - y) \\<sqinter> - (- x \\<sqinter> - z) =\n  (- (- x) \\<squnion> - (- y)) \\<sqinter> (- (- x) \\<squnion> - (- z))\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "from dbl_neg"], ["proof (chain)\npicking this:\n  - (- ?x) = ?x", "have\n  \"\\<dots> = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\""], ["proof (prove)\nusing this:\n  - (- ?x) = ?x\n\ngoal (1 subgoal):\n 1. (- (- x) \\<squnion> - (- y)) \\<sqinter> (- (- x) \\<squnion> - (- z)) =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "by simp"], ["proof (state)\nthis:\n  (- (- x) \\<squnion> - (- y)) \\<sqinter> (- (- x) \\<squnion> - (- z)) =\n  (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "finally"], ["proof (chain)\npicking this:\n  x \\<squnion> y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<squnion> y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<sqinter> z =\n    (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)", "by simp"], ["proof (state)\nthis:\n  x \\<squnion> y \\<sqinter> z = (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma huntington_is_boolean_II:\n   \"class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "apply unfold_locales"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y. x \\<sqinter> y = y \\<sqinter> x\n 2. \\<And>x y z. x \\<sqinter> (y \\<sqinter> z) = x \\<sqinter> y \\<sqinter> z\n 3. \\<And>x y. x \\<squnion> x \\<sqinter> y = x\n 4. \\<And>x y. x \\<sqinter> (x \\<squnion> y) = x\n 5. \\<And>x y z.\n       x \\<squnion> y \\<sqinter> z =\n       (x \\<squnion> y) \\<sqinter> (x \\<squnion> z)\n 6. \\<And>x. x \\<squnion> - x = \\<top>\n 7. \\<And>x. x \\<sqinter> - x = \\<bottom>", "apply (metis inf_comm inf_assoc sup_absorb \n             inf_absorb sup_inf_distrib1 \n             sup_compl inf_compl)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma huntington_is_boolean:\n   \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "interpret boolean_II: \n    boolean_algebra_II uminus \"(\\<sqinter>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "by (fact huntington_is_boolean_II)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "by (simp add: boolean_II.boolean_II_is_boolean)"], ["proof (state)\nthis:\n  class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n   (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Robbins' Algebra\\<close>"], ["", "context boolean_algebra begin"], ["", "lemma boolean_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus inf_class.inf sup_class.sup bot_class.bot\n     top_class.top", "apply unfold_locales"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y z.\n       sup_class.sup x (sup_class.sup y z) =\n       sup_class.sup (sup_class.sup x y) z\n 2. \\<And>x y. sup_class.sup x y = sup_class.sup y x\n 3. \\<And>x y. inf_class.inf x y = - sup_class.sup (- x) (- y)\n 4. top_class.top =\n    sup_class.sup common_algebra.secret_object1\n     (- common_algebra.secret_object1)\n 5. bot_class.bot =\n    - sup_class.sup common_algebra.secret_object1\n       (- common_algebra.secret_object1)\n 6. \\<And>x y.\n       - sup_class.sup (- sup_class.sup x y) (- sup_class.sup x (- y)) = x", "apply (metis sup_assoc sup_commute compl_inf double_compl sup_compl_top \n             inf_compl_bot diff_eq sup_bot_right sup_inf_distrib1)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "context boolean_algebra_II begin"], ["", "lemma boolean_II_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "interpret boolean: \n    boolean_algebra minus uminus \"(\\<sqinter>)\" \"(\\<sqsubseteq>)\" \"(\\<sqsubset>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "by (fact boolean_II_is_boolean)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "by (simp add: boolean.boolean_is_robbins)"], ["proof (state)\nthis:\n  class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context huntington_algebra begin"], ["", "lemma huntington_is_robbins:\n  \"class.robbins_algebra uminus inf sup bot top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "interpret boolean: \n    boolean_algebra minus uminus \"(\\<sqinter>)\" \"(\\<sqsubseteq>)\" \"(\\<sqsubset>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "by (fact huntington_is_boolean)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>", "by (simp add: boolean.boolean_is_robbins)"], ["proof (state)\nthis:\n  class.robbins_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>Before diving into the proof that the Robbins algebra is Boolean,\n        we shall present some shorthand machinery\\<close>"], ["", "context common_algebra begin"], ["", "(* Iteration Machinery/Shorthand *)"], ["", "primrec copyp :: \"nat \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infix \"\\<otimes>\" 80)\nwhere \n  copyp_0:   \"0 \\<otimes> x = x\"\n| copyp_Suc: \"(Suc k) \\<otimes> x = (k \\<otimes> x) \\<squnion> x\""], ["", "no_notation \n  Product_Type.Times (infixr \"\\<times>\" 80)"], ["", "primrec copy :: \"nat \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infix \"\\<times>\" 85)\nwhere\n  \"0 \\<times> x = x\"\n| \"(Suc k) \\<times> x = k \\<otimes> x\""], ["", "(* Theorems for translating shorthand into syntax *)"], ["", "lemma one:  \"1 \\<times> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "have       \"1 = Suc(0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = Suc 0", "by arith"], ["proof (state)\nthis:\n  1 = Suc 0\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "hence      \"1 \\<times> x = Suc(0) \\<times> x\""], ["proof (prove)\nusing this:\n  1 = Suc 0\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = Suc 0 \\<times> x", "by metis"], ["proof (state)\nthis:\n  1 \\<times> x = Suc 0 \\<times> x\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "also"], ["proof (state)\nthis:\n  1 \\<times> x = Suc 0 \\<times> x\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "have  \"\\<dots> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc 0 \\<times> x = x", "by simp"], ["proof (state)\nthis:\n  Suc 0 \\<times> x = x\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "finally"], ["proof (chain)\npicking this:\n  1 \\<times> x = x", "show ?thesis"], ["proof (prove)\nusing this:\n  1 \\<times> x = x\n\ngoal (1 subgoal):\n 1. 1 \\<times> x = x", "by simp"], ["proof (state)\nthis:\n  1 \\<times> x = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma two:  \"2 \\<times> x = x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "have       \"2 = Suc(Suc(0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 = Suc (Suc 0)", "by arith"], ["proof (state)\nthis:\n  2 = Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "hence      \"2 \\<times> x = Suc(Suc(0)) \\<times> x\""], ["proof (prove)\nusing this:\n  2 = Suc (Suc 0)\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = Suc (Suc 0) \\<times> x", "by metis"], ["proof (state)\nthis:\n  2 \\<times> x = Suc (Suc 0) \\<times> x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "also"], ["proof (state)\nthis:\n  2 \\<times> x = Suc (Suc 0) \\<times> x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "have  \"\\<dots> = x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc 0) \\<times> x = x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  Suc (Suc 0) \\<times> x = x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "finally"], ["proof (chain)\npicking this:\n  2 \\<times> x = x \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  2 \\<times> x = x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  2 \\<times> x = x \\<squnion> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma three:  \"3 \\<times> x = x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "have       \"3 = Suc(Suc(Suc(0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = Suc (Suc (Suc 0))", "by arith"], ["proof (state)\nthis:\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "hence      \"3 \\<times> x = Suc(Suc(Suc(0))) \\<times> x\""], ["proof (prove)\nusing this:\n  3 = Suc (Suc (Suc 0))\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = Suc (Suc (Suc 0)) \\<times> x", "by metis"], ["proof (state)\nthis:\n  3 \\<times> x = Suc (Suc (Suc 0)) \\<times> x\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "also"], ["proof (state)\nthis:\n  3 \\<times> x = Suc (Suc (Suc 0)) \\<times> x\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "have  \"\\<dots> = x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc 0)) \\<times> x = x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  Suc (Suc (Suc 0)) \\<times> x = x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "finally"], ["proof (chain)\npicking this:\n  3 \\<times> x = x \\<squnion> x \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 3 \\<times> x = x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma four:  \"4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "have       \"4 = Suc(Suc(Suc(Suc(0))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 = Suc (Suc (Suc (Suc 0)))", "by arith"], ["proof (state)\nthis:\n  4 = Suc (Suc (Suc (Suc 0)))\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "hence      \"4 \\<times> x = Suc(Suc(Suc(Suc(0)))) \\<times> x\""], ["proof (prove)\nusing this:\n  4 = Suc (Suc (Suc (Suc 0)))\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = Suc (Suc (Suc (Suc 0))) \\<times> x", "by metis"], ["proof (state)\nthis:\n  4 \\<times> x = Suc (Suc (Suc (Suc 0))) \\<times> x\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "also"], ["proof (state)\nthis:\n  4 \\<times> x = Suc (Suc (Suc (Suc 0))) \\<times> x\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "have  \"\\<dots> = x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc (Suc 0))) \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  Suc (Suc (Suc (Suc 0))) \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "finally"], ["proof (chain)\npicking this:\n  4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  4 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma five:  \"5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have       \"5 = Suc(Suc(Suc(Suc(Suc(0)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 5 = Suc (Suc (Suc (Suc (Suc 0))))", "by arith"], ["proof (state)\nthis:\n  5 = Suc (Suc (Suc (Suc (Suc 0))))\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "hence      \"5 \\<times> x = Suc(Suc(Suc(Suc(Suc(0))))) \\<times> x\""], ["proof (prove)\nusing this:\n  5 = Suc (Suc (Suc (Suc (Suc 0))))\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = Suc (Suc (Suc (Suc (Suc 0)))) \\<times> x", "by metis"], ["proof (state)\nthis:\n  5 \\<times> x = Suc (Suc (Suc (Suc (Suc 0)))) \\<times> x\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "also"], ["proof (state)\nthis:\n  5 \\<times> x = Suc (Suc (Suc (Suc (Suc 0)))) \\<times> x\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have  \"\\<dots> = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc (Suc (Suc 0)))) \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  Suc (Suc (Suc (Suc (Suc 0)))) \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "finally"], ["proof (chain)\npicking this:\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma six:  \"6 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have       \"6 = Suc(Suc(Suc(Suc(Suc(Suc(0))))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 6 = Suc (Suc (Suc (Suc (Suc (Suc 0)))))", "by arith"], ["proof (state)\nthis:\n  6 = Suc (Suc (Suc (Suc (Suc (Suc 0)))))\n\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "hence      \"6 \\<times> x = Suc(Suc(Suc(Suc(Suc(Suc(0)))))) \\<times> x\""], ["proof (prove)\nusing this:\n  6 = Suc (Suc (Suc (Suc (Suc (Suc 0)))))\n\ngoal (1 subgoal):\n 1. 6 \\<times> x = Suc (Suc (Suc (Suc (Suc (Suc 0))))) \\<times> x", "by metis"], ["proof (state)\nthis:\n  6 \\<times> x = Suc (Suc (Suc (Suc (Suc (Suc 0))))) \\<times> x\n\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "also"], ["proof (state)\nthis:\n  6 \\<times> x = Suc (Suc (Suc (Suc (Suc (Suc 0))))) \\<times> x\n\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have  \"\\<dots> = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (Suc (Suc (Suc (Suc (Suc 0))))) \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  Suc (Suc (Suc (Suc (Suc (Suc 0))))) \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "finally"], ["proof (chain)\npicking this:\n  6 \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  6 \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. 6 \\<times> x =\n    x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  6 \\<times> x =\n  x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Distribution Laws *)"], ["", "lemma copyp_distrib: \"k \\<otimes> (x \\<squnion> y) = (k \\<otimes> x) \\<squnion> (k \\<otimes> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<otimes> (x \\<squnion> y) = k \\<otimes> x \\<squnion> k \\<otimes> y", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<otimes> (x \\<squnion> y) = 0 \\<otimes> x \\<squnion> 0 \\<otimes> y\n 2. \\<And>k.\n       k \\<otimes> (x \\<squnion> y) =\n       k \\<otimes> x \\<squnion> k \\<otimes> y \\<Longrightarrow>\n       Suc k \\<otimes> (x \\<squnion> y) =\n       Suc k \\<otimes> x \\<squnion> Suc k \\<otimes> y", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. 0 \\<otimes> (x \\<squnion> y) = 0 \\<otimes> x \\<squnion> 0 \\<otimes> y\n 2. \\<And>k.\n       k \\<otimes> (x \\<squnion> y) =\n       k \\<otimes> x \\<squnion> k \\<otimes> y \\<Longrightarrow>\n       Suc k \\<otimes> (x \\<squnion> y) =\n       Suc k \\<otimes> x \\<squnion> Suc k \\<otimes> y", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<otimes> (x \\<squnion> y) = 0 \\<otimes> x \\<squnion> 0 \\<otimes> y", "by simp"], ["proof (state)\nthis:\n  0 \\<otimes> (x \\<squnion> y) = 0 \\<otimes> x \\<squnion> 0 \\<otimes> y\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<otimes> (x \\<squnion> y) =\n       k \\<otimes> x \\<squnion> k \\<otimes> y \\<Longrightarrow>\n       Suc k \\<otimes> (x \\<squnion> y) =\n       Suc k \\<otimes> x \\<squnion> Suc k \\<otimes> y", "case Suc"], ["proof (state)\nthis:\n  k_ \\<otimes> (x \\<squnion> y) = k_ \\<otimes> x \\<squnion> k_ \\<otimes> y\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k \\<otimes> (x \\<squnion> y) =\n       k \\<otimes> x \\<squnion> k \\<otimes> y \\<Longrightarrow>\n       Suc k \\<otimes> (x \\<squnion> y) =\n       Suc k \\<otimes> x \\<squnion> Suc k \\<otimes> y", "thus ?case"], ["proof (prove)\nusing this:\n  k_ \\<otimes> (x \\<squnion> y) = k_ \\<otimes> x \\<squnion> k_ \\<otimes> y\n\ngoal (1 subgoal):\n 1. Suc k_ \\<otimes> (x \\<squnion> y) =\n    Suc k_ \\<otimes> x \\<squnion> Suc k_ \\<otimes> y", "by (simp, metis sup_assoc sup_comm)"], ["proof (state)\nthis:\n  Suc k_ \\<otimes> (x \\<squnion> y) =\n  Suc k_ \\<otimes> x \\<squnion> Suc k_ \\<otimes> y\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary copy_distrib: \"k \\<times> (x \\<squnion> y) = (k \\<times> x) \\<squnion> (k \\<times> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<times> (x \\<squnion> y) = k \\<times> x \\<squnion> k \\<times> y", "by (induct k, (simp add: sup_assoc sup_comm copyp_distrib)+)"], ["", "lemma copyp_arith: \"(k + l + 1) \\<otimes> x = (k \\<otimes> x) \\<squnion> (l \\<otimes> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k + l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> l \\<otimes> x", "proof (induct l)"], ["proof (state)\ngoal (2 subgoals):\n 1. (k + 0 + 1) \\<otimes> x = k \\<otimes> x \\<squnion> 0 \\<otimes> x\n 2. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (k + 0 + 1) \\<otimes> x = k \\<otimes> x \\<squnion> 0 \\<otimes> x\n 2. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "have \"k + 0 + 1 = Suc(k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + 0 + 1 = Suc k", "by arith"], ["proof (state)\nthis:\n  k + 0 + 1 = Suc k\n\ngoal (2 subgoals):\n 1. (k + 0 + 1) \\<otimes> x = k \\<otimes> x \\<squnion> 0 \\<otimes> x\n 2. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "thus ?case"], ["proof (prove)\nusing this:\n  k + 0 + 1 = Suc k\n\ngoal (1 subgoal):\n 1. (k + 0 + 1) \\<otimes> x = k \\<otimes> x \\<squnion> 0 \\<otimes> x", "by simp"], ["proof (state)\nthis:\n  (k + 0 + 1) \\<otimes> x = k \\<otimes> x \\<squnion> 0 \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "case (Suc l)"], ["proof (state)\nthis:\n  (k + l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> l \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "note ind_hyp = this"], ["proof (state)\nthis:\n  (k + l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> l \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "have \"k + Suc(l) + 1 = Suc(k + l + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k + Suc l + 1 = Suc (k + l + 1)", "by arith+"], ["proof (state)\nthis:\n  k + Suc l + 1 = Suc (k + l + 1)\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "hence \"(k + Suc(l) + 1) \\<otimes> x = (k + l + 1) \\<otimes> x \\<squnion> x\""], ["proof (prove)\nusing this:\n  k + Suc l + 1 = Suc (k + l + 1)\n\ngoal (1 subgoal):\n 1. (k + Suc l + 1) \\<otimes> x = (k + l + 1) \\<otimes> x \\<squnion> x", "by (simp add: ind_hyp)"], ["proof (state)\nthis:\n  (k + Suc l + 1) \\<otimes> x = (k + l + 1) \\<otimes> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "also"], ["proof (state)\nthis:\n  (k + Suc l + 1) \\<otimes> x = (k + l + 1) \\<otimes> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "from ind_hyp"], ["proof (chain)\npicking this:\n  (k + l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> l \\<otimes> x", "have \n          \"\\<dots> = (k \\<otimes> x) \\<squnion> (l \\<otimes> x) \\<squnion> x\""], ["proof (prove)\nusing this:\n  (k + l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> l \\<otimes> x\n\ngoal (1 subgoal):\n 1. (k + l + 1) \\<otimes> x \\<squnion> x =\n    k \\<otimes> x \\<squnion> l \\<otimes> x \\<squnion> x", "by simp"], ["proof (state)\nthis:\n  (k + l + 1) \\<otimes> x \\<squnion> x =\n  k \\<otimes> x \\<squnion> l \\<otimes> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "also"], ["proof (state)\nthis:\n  (k + l + 1) \\<otimes> x \\<squnion> x =\n  k \\<otimes> x \\<squnion> l \\<otimes> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "note sup_assoc"], ["proof (state)\nthis:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       (k + l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> l \\<otimes> x \\<Longrightarrow>\n       (k + Suc l + 1) \\<otimes> x =\n       k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "finally"], ["proof (chain)\npicking this:\n  k \\<otimes> x \\<squnion> (l \\<otimes> x \\<squnion> x) =\n  (k + Suc l + 1) \\<otimes> x", "show ?case"], ["proof (prove)\nusing this:\n  k \\<otimes> x \\<squnion> (l \\<otimes> x \\<squnion> x) =\n  (k + Suc l + 1) \\<otimes> x\n\ngoal (1 subgoal):\n 1. (k + Suc l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> Suc l \\<otimes> x", "by simp"], ["proof (state)\nthis:\n  (k + Suc l + 1) \\<otimes> x = k \\<otimes> x \\<squnion> Suc l \\<otimes> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma copy_arith: \n   assumes \"k \\<noteq> 0\" and \"l \\<noteq> 0\"\n     shows \"(k + l) \\<times> x = (k \\<times> x) \\<squnion> (l \\<times> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x", "using assms"], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from assms"], ["proof (chain)\npicking this:\n  k \\<noteq> 0\n  l \\<noteq> 0", "have \"\\<exists> k'. Suc(k') = k\" \n              and \"\\<exists> l'. Suc(l') = l\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n  l \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k'. Suc k' = k &&& \\<exists>l'. Suc l' = l", "by arith+"], ["proof (state)\nthis:\n  \\<exists>k'. Suc k' = k\n  \\<exists>l'. Suc l' = l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from this"], ["proof (chain)\npicking this:\n  \\<exists>k'. Suc k' = k\n  \\<exists>l'. Suc l' = l", "obtain k' l' where A: \"Suc(k') = k\"\n                           and B: \"Suc(l') = l\""], ["proof (prove)\nusing this:\n  \\<exists>k'. Suc k' = k\n  \\<exists>l'. Suc l' = l\n\ngoal (1 subgoal):\n 1. (\\<And>k' l'.\n        \\<lbrakk>Suc k' = k; Suc l' = l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast+"], ["proof (state)\nthis:\n  Suc k' = k\n  Suc l' = l\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from this"], ["proof (chain)\npicking this:\n  Suc k' = k\n  Suc l' = l", "have A1: \"k \\<times> x = k' \\<otimes> x\"\n             and B1: \"l \\<times> x = l' \\<otimes> x\""], ["proof (prove)\nusing this:\n  Suc k' = k\n  Suc l' = l\n\ngoal (1 subgoal):\n 1. k \\<times> x = k' \\<otimes> x &&& l \\<times> x = l' \\<otimes> x", "by fastforce+"], ["proof (state)\nthis:\n  k \\<times> x = k' \\<otimes> x\n  l \\<times> x = l' \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from A B"], ["proof (chain)\npicking this:\n  Suc k' = k\n  Suc l' = l", "have \"k + l = Suc(k' + l' + 1)\""], ["proof (prove)\nusing this:\n  Suc k' = k\n  Suc l' = l\n\ngoal (1 subgoal):\n 1. k + l = Suc (k' + l' + 1)", "by arith"], ["proof (state)\nthis:\n  k + l = Suc (k' + l' + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "hence \"(k + l) \\<times> x = (k' + l' + 1) \\<otimes> x\""], ["proof (prove)\nusing this:\n  k + l = Suc (k' + l' + 1)\n\ngoal (1 subgoal):\n 1. (k + l) \\<times> x = (k' + l' + 1) \\<otimes> x", "by simp"], ["proof (state)\nthis:\n  (k + l) \\<times> x = (k' + l' + 1) \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "also"], ["proof (state)\nthis:\n  (k + l) \\<times> x = (k' + l' + 1) \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from copyp_arith"], ["proof (chain)\npicking this:\n  (?k + ?l + 1) \\<otimes> ?x = ?k \\<otimes> ?x \\<squnion> ?l \\<otimes> ?x", "have  \n        \"\\<dots> = k' \\<otimes> x \\<squnion> l' \\<otimes> x\""], ["proof (prove)\nusing this:\n  (?k + ?l + 1) \\<otimes> ?x = ?k \\<otimes> ?x \\<squnion> ?l \\<otimes> ?x\n\ngoal (1 subgoal):\n 1. (k' + l' + 1) \\<otimes> x = k' \\<otimes> x \\<squnion> l' \\<otimes> x", "by fast"], ["proof (state)\nthis:\n  (k' + l' + 1) \\<otimes> x = k' \\<otimes> x \\<squnion> l' \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "also"], ["proof (state)\nthis:\n  (k' + l' + 1) \\<otimes> x = k' \\<otimes> x \\<squnion> l' \\<otimes> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "from A1 B1"], ["proof (chain)\npicking this:\n  k \\<times> x = k' \\<otimes> x\n  l \\<times> x = l' \\<otimes> x", "have\n        \"\\<dots> = k \\<times> x \\<squnion> l \\<times> x\""], ["proof (prove)\nusing this:\n  k \\<times> x = k' \\<otimes> x\n  l \\<times> x = l' \\<otimes> x\n\ngoal (1 subgoal):\n 1. k' \\<otimes> x \\<squnion> l' \\<otimes> x =\n    k \\<times> x \\<squnion> l \\<times> x", "by fastforce"], ["proof (state)\nthis:\n  k' \\<otimes> x \\<squnion> l' \\<otimes> x =\n  k \\<times> x \\<squnion> l \\<times> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>k \\<noteq> 0; l \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> (k + l) \\<times> x =\n                      k \\<times> x \\<squnion> l \\<times> x", "finally"], ["proof (chain)\npicking this:\n  (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x", "show ?thesis"], ["proof (prove)\nusing this:\n  (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x\n\ngoal (1 subgoal):\n 1. (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x", "by simp"], ["proof (state)\nthis:\n  (k + l) \\<times> x = k \\<times> x \\<squnion> l \\<times> x\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>The theorem asserting all Robbins algebras are Boolean  \n       comes in 6 movements.\n       \n       First: The Winker identity is proved.\n\n       Second: Idempotence for a particular object is proved.  \n       Note that falsum is defined in terms of this object.\n\n       Third: An identity law for falsum is derived.\n\n       Fourth: Idempotence for supremum is derived.\n\n       Fifth: The double negation law is proven\n\n       Sixth: Robbin's algebras are proven to be Huntington Algebras.\\<close>"], ["", "context robbins_algebra begin"], ["", "definition secret_object2 :: \"'a\" (\"\\<alpha>\") where\n  \"\\<alpha> = -(-(\\<iota> \\<squnion> \\<iota> \\<squnion> \\<iota>) \\<squnion> \\<iota>)\""], ["", "definition secret_object3 :: \"'a\" (\"\\<beta>\") where\n  \"\\<beta> = \\<iota> \\<squnion> \\<iota>\""], ["", "definition secret_object4 :: \"'a\" (\"\\<delta>\") where\n  \"\\<delta> = \\<beta> \\<squnion> (-(\\<alpha> \\<squnion> -\\<beta>) \\<squnion> -(\\<alpha> \\<squnion> -\\<beta>))\""], ["", "definition secret_object5 :: \"'a\" (\"\\<gamma>\") where\n  \"\\<gamma> = \\<delta> \\<squnion> -(\\<delta> \\<squnion> -\\<delta>)\""], ["", "definition winker_object :: \"'a\" (\"\\<rho>\") where\n  \"\\<rho> = \\<gamma> \\<squnion> \\<gamma> \\<squnion> \\<gamma>\""], ["", "definition fake_bot :: \"'a\" (\"\\<bottom>\\<bottom>\") where\n  \"\\<bottom>\\<bottom> = -(\\<rho> \\<squnion> -\\<rho>)\""], ["", "(* Towards Winker's Identity *)\n\n(* These lemmas are due to Alan Mann *)"], ["", "lemma robbins2: \"y = -(-(-x \\<squnion> y) \\<squnion> -(x \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = - (- (- x \\<squnion> y) \\<squnion> - (x \\<squnion> y))", "by (metis robbins sup_comm)"], ["", "lemma mann0: \"-(x \\<squnion> y) = -(-(-(x \\<squnion> y) \\<squnion> -x \\<squnion> y) \\<squnion> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> y) =\n    - (- (- (x \\<squnion> y) \\<squnion> - x \\<squnion> y) \\<squnion> y)", "by (metis robbins sup_comm sup_assoc)"], ["", "lemma mann1: \"-(-x \\<squnion> y) = -(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y) \\<squnion> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- x \\<squnion> y) =\n    - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y) \\<squnion> y)", "by (metis robbins sup_comm sup_assoc)"], ["", "lemma mann2: \"y = -(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y =\n    - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n          y) \\<squnion>\n       - (- x \\<squnion> y))", "by (metis mann1 robbins sup_comm sup_assoc)"], ["", "lemma mann3: \"z = -(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> z) \\<squnion> -(y \\<squnion> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z) \\<squnion>\n       - (y \\<squnion> z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z) \\<squnion>\n       - (y \\<squnion> z))", "let ?w = \"-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. z =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z) \\<squnion>\n       - (y \\<squnion> z))", "from robbins[where x=\"z\" and y=\"?w\"] sup_comm mann2"], ["proof (chain)\npicking this:\n  - (- (z \\<squnion>\n        (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n            y) \\<squnion>\n         - (- x \\<squnion> y))) \\<squnion>\n     - (z \\<squnion>\n        - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n              y) \\<squnion>\n           - (- x \\<squnion> y)))) =\n  z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?y =\n  - (- (- (- ?x \\<squnion> ?y) \\<squnion> ?x \\<squnion> ?y \\<squnion>\n        ?y) \\<squnion>\n     - (- ?x \\<squnion> ?y))", "have \"z = -(-(y \\<squnion> z) \\<squnion> -(?w \\<squnion> z))\""], ["proof (prove)\nusing this:\n  - (- (z \\<squnion>\n        (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n            y) \\<squnion>\n         - (- x \\<squnion> y))) \\<squnion>\n     - (z \\<squnion>\n        - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n              y) \\<squnion>\n           - (- x \\<squnion> y)))) =\n  z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?y =\n  - (- (- (- ?x \\<squnion> ?y) \\<squnion> ?x \\<squnion> ?y \\<squnion>\n        ?y) \\<squnion>\n     - (- ?x \\<squnion> ?y))\n\ngoal (1 subgoal):\n 1. z =\n    - (- (y \\<squnion> z) \\<squnion>\n       - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z))", "by metis"], ["proof (state)\nthis:\n  z =\n  - (- (y \\<squnion> z) \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z))\n\ngoal (1 subgoal):\n 1. z =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z) \\<squnion>\n       - (y \\<squnion> z))", "thus ?thesis"], ["proof (prove)\nusing this:\n  z =\n  - (- (y \\<squnion> z) \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z))\n\ngoal (1 subgoal):\n 1. z =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z) \\<squnion>\n       - (y \\<squnion> z))", "by (metis sup_comm)"], ["proof (state)\nthis:\n  z =\n  - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z) \\<squnion>\n     - (y \\<squnion> z))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann4: \"-(y \\<squnion> z) = \n  -(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> -(y \\<squnion> z) \\<squnion> z) \\<squnion> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (y \\<squnion> z) =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          - (y \\<squnion> z) \\<squnion>\n          z) \\<squnion>\n       z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - (y \\<squnion> z) =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          - (y \\<squnion> z) \\<squnion>\n          z) \\<squnion>\n       z)", "from robbins2[where x=\"-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> z\" \n                 and y=\"-(y \\<squnion> z)\"]\n      mann3[where x=\"x\" and y=\"y\" and z=\"z\"]"], ["proof (chain)\npicking this:\n  - (y \\<squnion> z) =\n  - (- (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n              y) \\<squnion>\n           - (- x \\<squnion> y) \\<squnion>\n           z) \\<squnion>\n        - (y \\<squnion> z)) \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z \\<squnion>\n        - (y \\<squnion> z)))\n  z =\n  - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z) \\<squnion>\n     - (y \\<squnion> z))", "have \"-(y \\<squnion> z) = \n       -(z \\<squnion> -(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> -(-x \\<squnion> y) \\<squnion> z \\<squnion> -(y \\<squnion> z)))\""], ["proof (prove)\nusing this:\n  - (y \\<squnion> z) =\n  - (- (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n              y) \\<squnion>\n           - (- x \\<squnion> y) \\<squnion>\n           z) \\<squnion>\n        - (y \\<squnion> z)) \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z \\<squnion>\n        - (y \\<squnion> z)))\n  z =\n  - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z) \\<squnion>\n     - (y \\<squnion> z))\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> z) =\n    - (z \\<squnion>\n       - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          z \\<squnion>\n          - (y \\<squnion> z)))", "by metis"], ["proof (state)\nthis:\n  - (y \\<squnion> z) =\n  - (z \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z \\<squnion>\n        - (y \\<squnion> z)))\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> z) =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          - (y \\<squnion> z) \\<squnion>\n          z) \\<squnion>\n       z)", "with sup_comm sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (y \\<squnion> z) =\n  - (z \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z \\<squnion>\n        - (y \\<squnion> z)))", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (y \\<squnion> z) =\n  - (z \\<squnion>\n     - (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        z \\<squnion>\n        - (y \\<squnion> z)))\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> z) =\n    - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n             y) \\<squnion>\n          - (- x \\<squnion> y) \\<squnion>\n          - (y \\<squnion> z) \\<squnion>\n          z) \\<squnion>\n       z)", "by metis"], ["proof (state)\nthis:\n  - (y \\<squnion> z) =\n  - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        - (y \\<squnion> z) \\<squnion>\n        z) \\<squnion>\n     z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann5: \"u = \n-(-(-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> \n      -(-x \\<squnion> y) \\<squnion> - (y \\<squnion> z) \\<squnion> z) \\<squnion> z \\<squnion> u) \\<squnion> \n  -(-(y \\<squnion> z) \\<squnion> u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u =\n    - (- (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n                y) \\<squnion>\n             - (- x \\<squnion> y) \\<squnion>\n             - (y \\<squnion> z) \\<squnion>\n             z) \\<squnion>\n          z \\<squnion>\n          u) \\<squnion>\n       - (- (y \\<squnion> z) \\<squnion> u))", "using robbins2[where x=\"-(-(-(-x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion> y) \\<squnion> \n                          -(-x \\<squnion> y) \\<squnion> -(y \\<squnion> z) \\<squnion> z) \\<squnion> z\"\n                 and y=\"u\"]\n      mann4[where x=x and y=y and z=z] \n      sup_comm"], ["proof (prove)\nusing this:\n  u =\n  - (- (- (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n                 y) \\<squnion>\n              - (- x \\<squnion> y) \\<squnion>\n              - (y \\<squnion> z) \\<squnion>\n              z) \\<squnion>\n           z) \\<squnion>\n        u) \\<squnion>\n     - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n              y) \\<squnion>\n           - (- x \\<squnion> y) \\<squnion>\n           - (y \\<squnion> z) \\<squnion>\n           z) \\<squnion>\n        z \\<squnion>\n        u))\n  - (y \\<squnion> z) =\n  - (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n           y) \\<squnion>\n        - (- x \\<squnion> y) \\<squnion>\n        - (y \\<squnion> z) \\<squnion>\n        z) \\<squnion>\n     z)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. u =\n    - (- (- (- (- (- x \\<squnion> y) \\<squnion> x \\<squnion> y \\<squnion>\n                y) \\<squnion>\n             - (- x \\<squnion> y) \\<squnion>\n             - (y \\<squnion> z) \\<squnion>\n             z) \\<squnion>\n          z \\<squnion>\n          u) \\<squnion>\n       - (- (y \\<squnion> z) \\<squnion> u))", "by metis"], ["", "lemma mann6: \n\"-(- 3\\<times>x \\<squnion> x) = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x) \\<squnion> -(-(- 3\\<times>x \\<squnion> x) \\<squnion> 5\\<times>x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "have \"3+2=(5::nat)\" and \"3\\<noteq>(0::nat)\" and \"2\\<noteq>(0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 + 2 = 5 &&& 3 \\<noteq> 0 &&& 2 \\<noteq> 0", "by arith+"], ["proof (state)\nthis:\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "with copy_arith"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0", "have \\<heartsuit>: \"3\\<times>x \\<squnion> 2\\<times>x = 5\\<times>x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x", "by metis"], ["proof (state)\nthis:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "let ?p = \"-(- 3\\<times>x \\<squnion> x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n    \"-(q \\<squnion> 5\\<times>x) = -(5\\<times>x \\<squnion> q)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> 5 \\<times> x) = - (5 \\<times> x \\<squnion> q)", "by metis"], ["proof (state)\nthis:\n  - (q \\<squnion> 5 \\<times> x) = - (5 \\<times> x \\<squnion> q)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (q \\<squnion> 5 \\<times> x) = - (5 \\<times> x \\<squnion> q)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from \\<heartsuit> mann0[where x=\"3\\<times>x\" and y=\"q \\<squnion> 2\\<times>x\"] sup_assoc sup_comm"], ["proof (chain)\npicking this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n  - (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n    \"\\<dots> = -(-(-(3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> - 3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n  - (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (5 \\<times> x \\<squnion> q) =\n    - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (5 \\<times> x \\<squnion> q) =\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (5 \\<times> x \\<squnion> q) =\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n    \"\\<dots> = -(-(-((3\\<times>x \\<squnion> q) \\<squnion> 2\\<times>x) \\<squnion> - 3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (3 \\<times> x \\<squnion> (q \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n    \"\\<dots> = -(-(-((q \\<squnion> 3\\<times>x) \\<squnion> 2\\<times>x) \\<squnion> - 3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (3 \\<times> x \\<squnion> q \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n    \"\\<dots> = -(-(-(q \\<squnion> (3\\<times>x \\<squnion> 2\\<times>x)) \\<squnion> - 3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 3 \\<times> x \\<squnion> 2 \\<times> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from \\<heartsuit>"], ["proof (chain)\npicking this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x", "have\n    \"\\<dots> = -(-(-(q \\<squnion> 5\\<times>x) \\<squnion> - 3\\<times>x \\<squnion> (q \\<squnion> 2\\<times>x)) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n\ngoal (1 subgoal):\n 1. - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> (3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n    \"\\<dots> = -(-(-(q \\<squnion> 5\\<times>x) \\<squnion> (- 3\\<times>x \\<squnion> q) \\<squnion> 2\\<times>x) \\<squnion> (q \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n          (q \\<squnion> 2 \\<times> x)) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n          (- 3 \\<times> x \\<squnion> q) \\<squnion>\n          2 \\<times> x) \\<squnion>\n       (q \\<squnion> 2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> q) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        (q \\<squnion> 2 \\<times> x)) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> q) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (q \\<squnion> 2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n    \"\\<dots> = -(-(-(q \\<squnion> 5\\<times>x) \\<squnion> (q \\<squnion> - 3\\<times>x) \\<squnion> 2\\<times>x) \\<squnion> (2\\<times>x \\<squnion> q))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n          (- 3 \\<times> x \\<squnion> q) \\<squnion>\n          2 \\<times> x) \\<squnion>\n       (q \\<squnion> 2 \\<times> x)) =\n    - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n          (q \\<squnion> - 3 \\<times> x) \\<squnion>\n          2 \\<times> x) \\<squnion>\n       (2 \\<times> x \\<squnion> q))", "by metis"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> q) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (q \\<squnion> - 3 \\<times> x) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (2 \\<times> x \\<squnion> q))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> q) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (q \\<squnion> 2 \\<times> x)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (q \\<squnion> - 3 \\<times> x) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (2 \\<times> x \\<squnion> q))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n    \"\\<dots> = -(-(-(q \\<squnion> 5\\<times>x) \\<squnion> q \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> q)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n          (q \\<squnion> - 3 \\<times> x) \\<squnion>\n          2 \\<times> x) \\<squnion>\n       (2 \\<times> x \\<squnion> q)) =\n    - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       2 \\<times> x \\<squnion>\n       q)", "by metis"], ["proof (state)\nthis:\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion>\n        (q \\<squnion> - 3 \\<times> x) \\<squnion>\n        2 \\<times> x) \\<squnion>\n     (2 \\<times> x \\<squnion> q)) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     q)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "finally"], ["proof (chain)\npicking this:\n  - (q \\<squnion> 5 \\<times> x) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     q)", "have \n    \"-(q \\<squnion> 5\\<times>x) = -(-(-(q \\<squnion> 5\\<times>x) \\<squnion> q \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> q)\""], ["proof (prove)\nusing this:\n  - (q \\<squnion> 5 \\<times> x) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     q)\n\ngoal (1 subgoal):\n 1. - (q \\<squnion> 5 \\<times> x) =\n    - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       2 \\<times> x \\<squnion>\n       q)", "by simp"], ["proof (state)\nthis:\n  - (q \\<squnion> 5 \\<times> x) =\n  - (- (- (q \\<squnion> 5 \\<times> x) \\<squnion> q \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     q)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "}"], ["proof (state)\nthis:\n  - (?q2 \\<squnion> 5 \\<times> x) =\n  - (- (- (?q2 \\<squnion> 5 \\<times> x) \\<squnion> ?q2 \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     ?q2)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "hence \\<spadesuit>: \n    \"-(?p \\<squnion> 5\\<times>x) = -(-(-(?p \\<squnion> 5\\<times>x) \\<squnion> ?p \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  - (?q2 \\<squnion> 5 \\<times> x) =\n  - (- (- (?q2 \\<squnion> 5 \\<times> x) \\<squnion> ?q2 \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     ?q2)\n\ngoal (1 subgoal):\n 1. - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       2 \\<times> x \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by simp"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from mann5[where x=\"3\\<times>x\" and y=\"x\" and z=\"2\\<times>x\" and u=\"?p\"] \n       sup_assoc three[where x=x] five[where x=x]"], ["proof (chain)\npicking this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              3 \\<times> x \\<squnion>\n              x \\<squnion>\n              x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have\n  \"?p = \n   -(-(-(-(?p \\<squnion> 5\\<times>x) \\<squnion> ?p \\<squnion> -(x \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> ?p) \\<squnion>\n     -(-(x \\<squnion> 2\\<times>x) \\<squnion> ?p))\""], ["proof (prove)\nusing this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              3 \\<times> x \\<squnion>\n              x \\<squnion>\n              x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - (x \\<squnion> 2 \\<times> x) \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)))", "by metis"], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n  \"\\<dots> = \n   -(-(-(-(?p \\<squnion> 5\\<times>x) \\<squnion> ?p \\<squnion> -(2\\<times>x \\<squnion> x) \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> ?p) \\<squnion>\n     -(-(2\\<times>x \\<squnion> x) \\<squnion> ?p))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - (x \\<squnion> 2 \\<times> x) \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x))) =\n    - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - (2 \\<times> x \\<squnion> x) \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)))", "by metis"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (2 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (x \\<squnion> 2 \\<times> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (x \\<squnion> 2 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (2 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from two[where x=x] three[where x=x]"], ["proof (chain)\npicking this:\n  2 \\<times> x = x \\<squnion> x\n  3 \\<times> x = x \\<squnion> x \\<squnion> x", "have\n  \"\\<dots> = \n   -(-(-(-(?p \\<squnion> 5\\<times>x) \\<squnion> ?p \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> 2\\<times>x \\<squnion> ?p) \\<squnion>\n     -(- 3\\<times>x \\<squnion> ?p))\""], ["proof (prove)\nusing this:\n  2 \\<times> x = x \\<squnion> x\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - (2 \\<times> x \\<squnion> x) \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x))) =\n    - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - 3 \\<times> x \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))", "by metis"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (2 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - (2 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- (2 \\<times> x \\<squnion> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from \\<spadesuit>"], ["proof (chain)\npicking this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))", "have \"\\<dots> = -(-(?p \\<squnion> 5\\<times>x) \\<squnion> -(- 3\\<times>x \\<squnion> ?p))\""], ["proof (prove)\nusing this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     2 \\<times> x \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n                5 \\<times> x) \\<squnion>\n             - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             - 3 \\<times> x \\<squnion>\n             2 \\<times> x) \\<squnion>\n          2 \\<times> x \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          5 \\<times> x) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))", "by simp"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n              5 \\<times> x) \\<squnion>\n           - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x \\<squnion>\n           2 \\<times> x) \\<squnion>\n        2 \\<times> x \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x)))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \"\\<dots> = -(-(?p \\<squnion> 5\\<times>x) \\<squnion> -(?p \\<squnion> - 3\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          5 \\<times> x) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          5 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x))", "by simp"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "also"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \"\\<dots> = -(-(?p \\<squnion> - 3\\<times>x) \\<squnion> -(?p \\<squnion> 5\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          5 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "by simp"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "finally"], ["proof (chain)\npicking this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "show ?thesis"], ["proof (prove)\nusing this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "."], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann7:\n\"- 3\\<times>x = -(-(- 3\\<times>x \\<squnion> x) \\<squnion> 5\\<times>x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "let ?p = \"-(- 3\\<times>x \\<squnion> x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "let ?q = \"?p \\<squnion> - 3\\<times>x\""], ["proof (state)\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "let ?r = \"-(?p \\<squnion> 5\\<times>x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from robbins2[where x=\"?q\"\n                  and y=\"?r\"]\n       mann6[where x=x]"], ["proof (chain)\npicking this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x) \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x)) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)))\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "have \"?r = - (?p \\<squnion> - (?q \\<squnion> ?r))\""], ["proof (prove)\nusing this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x) \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x)) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)))\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)))", "by simp"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \"\\<dots> = - (- (?q \\<squnion> ?r) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by simp"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \"\\<dots> = - (- (?r \\<squnion> ?q) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x)) =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by simp"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        - (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x)) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "finally"], ["proof (chain)\npicking this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))", "have \\<spadesuit>: \"?r = - (- (?r \\<squnion> ?q) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "."], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from mann3[where x=\"3\\<times>x\" and y=\"x\" and z=\"- 3\\<times>x\"]\n       sup_comm"], ["proof (chain)\npicking this:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (x \\<squnion> - 3 \\<times> x))\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n       \"- 3\\<times>x = -(-(-(?p \\<squnion> 3\\<times>x \\<squnion> x \\<squnion> x) \\<squnion> ?p \\<squnion> - 3\\<times>x) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (x \\<squnion> - 3 \\<times> x))\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             3 \\<times> x \\<squnion>\n             x \\<squnion>\n             x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by metis"], ["proof (state)\nthis:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "also"], ["proof (state)\nthis:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n       \"\\<dots> = -(-(-(?p \\<squnion> (3\\<times>x \\<squnion> x \\<squnion> x)) \\<squnion> ?q) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             3 \\<times> x \\<squnion>\n             x \\<squnion>\n             x) \\<squnion>\n          - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x)) =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             (3 \\<times> x \\<squnion> x \\<squnion> x)) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x)) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           (3 \\<times> x \\<squnion> x \\<squnion> x)) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           3 \\<times> x \\<squnion>\n           x \\<squnion>\n           x) \\<squnion>\n        - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x)) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           (3 \\<times> x \\<squnion> x \\<squnion> x)) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "from three[where x=x] five[where x=x]"], ["proof (chain)\npicking this:\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x", "have\n       \"\\<dots> = -(-(?r \\<squnion> ?q) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n  5 \\<times> x = x \\<squnion> x \\<squnion> x \\<squnion> x \\<squnion> x\n\ngoal (1 subgoal):\n 1. - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             (3 \\<times> x \\<squnion> x \\<squnion> x)) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x)) =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           (3 \\<times> x \\<squnion> x \\<squnion> x)) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x)) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "finally"], ["proof (chain)\npicking this:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))", "have \"- 3\\<times>x = -(-(?r \\<squnion> ?q) \\<squnion> ?p)\""], ["proof (prove)\nusing this:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             5 \\<times> x) \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x)) \\<squnion>\n       - (- 3 \\<times> x \\<squnion> x))", "by metis"], ["proof (state)\nthis:\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "with \\<spadesuit>"], ["proof (chain)\npicking this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))", "show ?thesis"], ["proof (prove)\nusing this:\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x) =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n  - 3 \\<times> x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           5 \\<times> x) \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         - 3 \\<times> x)) \\<squnion>\n     - (- 3 \\<times> x \\<squnion> x))\n\ngoal (1 subgoal):\n 1. - 3 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "by simp"], ["proof (state)\nthis:\n  - 3 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann8:\n\"-(- 3\\<times>x \\<squnion> x) \\<squnion> 2\\<times>x = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x \\<squnion> 2\\<times>x) \\<squnion> - 3\\<times>x)\"\n(is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "let ?p = \"-(- 3\\<times>x \\<squnion> x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "let ?q = \"?p \\<squnion> 2\\<times>x\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "let ?r = \"3\\<times>x\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "have \"3+2=(5::nat)\" and \"3\\<noteq>(0::nat)\" and \"2\\<noteq>(0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 + 2 = 5 &&& 3 \\<noteq> 0 &&& 2 \\<noteq> 0", "by arith+"], ["proof (state)\nthis:\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "with copy_arith"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0", "have \\<heartsuit>: \"3\\<times>x \\<squnion> 2\\<times>x = 5\\<times>x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  3 + 2 = 5\n  3 \\<noteq> 0\n  2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x", "by metis"], ["proof (state)\nthis:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from robbins2[where x=\"?r\" and y=\"?q\"] and sup_assoc"], ["proof (chain)\npicking this:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x)))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \"?q = -(-(- 3\\<times>x \\<squnion> ?q) \\<squnion> -(3\\<times>x \\<squnion> ?p \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x)))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- 3 \\<times> x \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x)) \\<squnion>\n       - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have \n       \"\\<dots> = -(-(?q \\<squnion> - 3\\<times>x) \\<squnion> -(?p \\<squnion> 3\\<times>x \\<squnion> 2\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- 3 \\<times> x \\<squnion>\n          (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           2 \\<times> x)) \\<squnion>\n       - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          2 \\<times> x)) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n          2 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        2 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- 3 \\<times> x \\<squnion>\n        (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n         2 \\<times> x)) \\<squnion>\n     - (3 \\<times> x \\<squnion> - (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        2 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        2 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from \\<heartsuit> sup_assoc"], ["proof (chain)\npicking this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n       \"\\<dots> = -(-(?q \\<squnion> - 3\\<times>x) \\<squnion> -(?p \\<squnion> 5\\<times>x))\""], ["proof (prove)\nusing this:\n  3 \\<times> x \\<squnion> 2 \\<times> x = 5 \\<times> x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n          2 \\<times> x)) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        2 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        2 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from mann7[where x=x]"], ["proof (chain)\npicking this:\n  - 3 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)", "have \n       \"\\<dots> = -(-(?q \\<squnion> - 3\\<times>x) \\<squnion> - 3\\<times>x)\""], ["proof (prove)\nusing this:\n  - 3 \\<times> x =\n  - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x)) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n       \"\\<dots> = -(-(?p \\<squnion> (2\\<times>x  \\<squnion> - 3\\<times>x)) \\<squnion> - 3\\<times>x)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n          - 3 \\<times> x) \\<squnion>\n       - 3 \\<times> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n       - 3 \\<times> x)", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - 3 \\<times> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x \\<squnion>\n        - 3 \\<times> x) \\<squnion>\n     - 3 \\<times> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from sup_comm"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x", "have\n       \"\\<dots> = -(-(?p \\<squnion> (- 3\\<times>x  \\<squnion> 2\\<times>x)) \\<squnion> - 3\\<times>x)\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n       - 3 \\<times> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          (- 3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n       - 3 \\<times> x)", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n     - 3 \\<times> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "also"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (2 \\<times> x \\<squnion> - 3 \\<times> x)) \\<squnion>\n     - 3 \\<times> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "from sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n       \"\\<dots> = ?rhs\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          (- 3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n       - 3 \\<times> x) =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n        (- 3 \\<times> x \\<squnion> 2 \\<times> x)) \\<squnion>\n     - 3 \\<times> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "finally"], ["proof (chain)\npicking this:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - 3 \\<times> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          2 \\<times> x) \\<squnion>\n       - 3 \\<times> x)", "by simp"], ["proof (state)\nthis:\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann9: \"x = -(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "let ?p = \"-(- 3\\<times>x \\<squnion> x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "let ?q = \"?p \\<squnion> 4\\<times>x\""], ["proof (state)\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "have \"4+1=(5::nat)\" and \"1\\<noteq>(0::nat)\" and \"4\\<noteq>(0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 + 1 = 5 &&& 1 \\<noteq> 0 &&& 4 \\<noteq> 0", "by arith+"], ["proof (state)\nthis:\n  4 + 1 = 5\n  1 \\<noteq> 0\n  4 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "with copy_arith one"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  1 \\<times> ?x = ?x\n  4 + 1 = 5\n  1 \\<noteq> 0\n  4 \\<noteq> 0", "have \\<heartsuit>: \"4\\<times>x \\<squnion> x = 5\\<times>x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  1 \\<times> ?x = ?x\n  4 + 1 = 5\n  1 \\<noteq> 0\n  4 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 4 \\<times> x \\<squnion> x = 5 \\<times> x", "by metis"], ["proof (state)\nthis:\n  4 \\<times> x \\<squnion> x = 5 \\<times> x\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "with sup_assoc robbins2[where y=x and x=\"?q\"]"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 4 \\<times> x \\<squnion>\n        x))\n  4 \\<times> x \\<squnion> x = 5 \\<times> x", "have \"x = -(-(-?q \\<squnion> x) \\<squnion> -(?p \\<squnion> 5\\<times>x))\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 4 \\<times> x \\<squnion>\n        x))\n  4 \\<times> x \\<squnion> x = 5 \\<times> x\n\ngoal (1 subgoal):\n 1. x =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             4 \\<times> x) \\<squnion>\n          x) \\<squnion>\n       - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "by metis"], ["proof (state)\nthis:\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "with mann7"], ["proof (chain)\npicking this:\n  - 3 \\<times> ?x =\n  - (- (- 3 \\<times> ?x \\<squnion> ?x) \\<squnion> 5 \\<times> ?x)\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))", "have \"x = -(-(-?q \\<squnion> x) \\<squnion> - 3\\<times>x)\""], ["proof (prove)\nusing this:\n  - 3 \\<times> ?x =\n  - (- (- 3 \\<times> ?x \\<squnion> ?x) \\<squnion> 5 \\<times> ?x)\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 5 \\<times> x))\n\ngoal (1 subgoal):\n 1. x =\n    - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n             4 \\<times> x) \\<squnion>\n          x) \\<squnion>\n       - 3 \\<times> x)", "by metis"], ["proof (state)\nthis:\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "moreover"], ["proof (state)\nthis:\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - 3 \\<times> x)\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "have \"3+1=(4::nat)\" and \"1\\<noteq>(0::nat)\" and \"3\\<noteq>(0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 + 1 = 4 &&& 1 \\<noteq> 0 &&& 3 \\<noteq> 0", "by arith+"], ["proof (state)\nthis:\n  3 + 1 = 4\n  1 \\<noteq> 0\n  3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "with copy_arith one"], ["proof (chain)\npicking this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  1 \\<times> ?x = ?x\n  3 + 1 = 4\n  1 \\<noteq> 0\n  3 \\<noteq> 0", "have \\<spadesuit>: \"3\\<times>x \\<squnion> x = 4\\<times>x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?k \\<noteq> 0; ?l \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (?k + ?l) \\<times> ?x =\n                    ?k \\<times> ?x \\<squnion> ?l \\<times> ?x\n  1 \\<times> ?x = ?x\n  3 + 1 = 4\n  1 \\<noteq> 0\n  3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 3 \\<times> x \\<squnion> x = 4 \\<times> x", "by metis"], ["proof (state)\nthis:\n  3 \\<times> x \\<squnion> x = 4 \\<times> x\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "with mann1[where x=\"3\\<times>x\" and y=\"x\"] sup_assoc"], ["proof (chain)\npicking this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        x) \\<squnion>\n     x)\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> x \\<squnion> x = 4 \\<times> x", "have\n  \"-(-?q \\<squnion> x) = ?p\""], ["proof (prove)\nusing this:\n  - (- 3 \\<times> x \\<squnion> x) =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 3 \\<times> x \\<squnion>\n        x) \\<squnion>\n     x)\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> x \\<squnion> x = 4 \\<times> x\n\ngoal (1 subgoal):\n 1. - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          4 \\<times> x) \\<squnion>\n       x) =\n    - (- 3 \\<times> x \\<squnion> x)", "by metis"], ["proof (state)\nthis:\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 4 \\<times> x) \\<squnion>\n     x) =\n  - (- 3 \\<times> x \\<squnion> x)\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "ultimately"], ["proof (chain)\npicking this:\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - 3 \\<times> x)\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 4 \\<times> x) \\<squnion>\n     x) =\n  - (- 3 \\<times> x \\<squnion> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  x =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           4 \\<times> x) \\<squnion>\n        x) \\<squnion>\n     - 3 \\<times> x)\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> 4 \\<times> x) \\<squnion>\n     x) =\n  - (- 3 \\<times> x \\<squnion> x)\n\ngoal (1 subgoal):\n 1. x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)", "by simp"], ["proof (state)\nthis:\n  x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mann10: \"y = -(-(-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x \\<squnion> y) \\<squnion> -(x \\<squnion> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          y) \\<squnion>\n       - (x \\<squnion> y))", "using robbins2[where x=\"-(- 3\\<times>x \\<squnion> x) \\<squnion> - 3\\<times>x\" and y=y]\n      mann9[where x=x]\n      sup_comm"], ["proof (prove)\nusing this:\n  y =\n  - (- (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n           - 3 \\<times> x) \\<squnion>\n        y) \\<squnion>\n     - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        y))\n  x = - (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. y =\n    - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion>\n          - 3 \\<times> x \\<squnion>\n          y) \\<squnion>\n       - (x \\<squnion> y))", "by metis"], ["", "theorem mann: \"2\\<times>x = -(- 3\\<times>x \\<squnion> x) \\<squnion> 2\\<times>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<times> x = - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x", "using mann10[where x=x and y=\"2\\<times>x\"]\n      mann8[where x=x]\n      two[where x=x] three[where x=x] sup_comm"], ["proof (prove)\nusing this:\n  2 \\<times> x =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - (x \\<squnion> 2 \\<times> x))\n  - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x =\n  - (- (- (- 3 \\<times> x \\<squnion> x) \\<squnion> - 3 \\<times> x \\<squnion>\n        2 \\<times> x) \\<squnion>\n     - 3 \\<times> x)\n  2 \\<times> x = x \\<squnion> x\n  3 \\<times> x = x \\<squnion> x \\<squnion> x\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x = - (- 3 \\<times> x \\<squnion> x) \\<squnion> 2 \\<times> x", "by metis"], ["", "corollary winkerr: \"\\<alpha> \\<squnion> \\<beta> = \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<alpha> \\<squnion> \\<beta> = \\<beta>", "using mann secret_object2_def secret_object3_def two three"], ["proof (prove)\nusing this:\n  2 \\<times> ?x = - (- 3 \\<times> ?x \\<squnion> ?x) \\<squnion> 2 \\<times> ?x\n  \\<alpha> =\n  - (- (\\<iota> \\<squnion> \\<iota> \\<squnion> \\<iota>) \\<squnion> \\<iota>)\n  \\<beta> = \\<iota> \\<squnion> \\<iota>\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<squnion> \\<beta> = \\<beta>", "by metis"], ["", "corollary winker: \"\\<beta> \\<squnion> \\<alpha> = \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion> \\<alpha> = \\<beta>", "by (metis winkerr sup_comm)"], ["", "corollary multi_winkerp: \"\\<beta> \\<squnion> k \\<otimes> \\<alpha> = \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion> k \\<otimes> \\<alpha> = \\<beta>", "by (induct k, (simp add: winker sup_comm sup_assoc)+)"], ["", "corollary multi_winker: \"\\<beta> \\<squnion> k \\<times> \\<alpha> = \\<beta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion> k \\<times> \\<alpha> = \\<beta>", "by (induct k, (simp add: multi_winkerp winker sup_comm sup_assoc)+)"], ["", "(* Towards Idempotence *)"], ["", "lemma less_eq_introp: \n\"-(x \\<squnion> -(y \\<squnion> z)) = -(x \\<squnion> y \\<squnion> -z) \\<Longrightarrow> y \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> z)) =\n    - (x \\<squnion> y \\<squnion> - z) \\<Longrightarrow>\n    y \\<sqsubseteq> x", "by (metis robbins sup_assoc less_eq_def\n            sup_comm[where x=x and y=y])"], ["", "corollary less_eq_intro:\n\"-(x \\<squnion> -(y \\<squnion> z)) = -(x \\<squnion> y \\<squnion> -z) \\<Longrightarrow> x \\<squnion> y = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> z)) =\n    - (x \\<squnion> y \\<squnion> - z) \\<Longrightarrow>\n    x \\<squnion> y = x", "by (metis less_eq_introp less_eq_def sup_comm)"], ["", "lemma eq_intro: \n\"-(x \\<squnion> -(y \\<squnion> z)) = -(y \\<squnion> -(x \\<squnion> z)) \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> z)) =\n    - (y \\<squnion> - (x \\<squnion> z)) \\<Longrightarrow>\n    x = y", "by (metis robbins sup_assoc sup_comm)"], ["", "lemma copyp0:\n   assumes \"-(x \\<squnion> -y) = z\"\n     shows \"-(x \\<squnion> -(y \\<squnion> k \\<otimes> (x \\<squnion> z))) = z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) = z", "using assms"], ["proof (prove)\nusing this:\n  - (x \\<squnion> - y) = z\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) = z", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. - (x \\<squnion> - y) = z \\<Longrightarrow>\n    - (x \\<squnion> - (y \\<squnion> 0 \\<otimes> (x \\<squnion> z))) = z\n 2. \\<And>k.\n       \\<lbrakk>- (x \\<squnion> - y) = z \\<Longrightarrow>\n                - (x \\<squnion>\n                   - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) =\n                z;\n        - (x \\<squnion> - y) = z\\<rbrakk>\n       \\<Longrightarrow> - (x \\<squnion>\n                            - (y \\<squnion>\n                               Suc k \\<otimes> (x \\<squnion> z))) =\n                         z", "case 0"], ["proof (state)\nthis:\n  - (x \\<squnion> - y) = z\n\ngoal (2 subgoals):\n 1. - (x \\<squnion> - y) = z \\<Longrightarrow>\n    - (x \\<squnion> - (y \\<squnion> 0 \\<otimes> (x \\<squnion> z))) = z\n 2. \\<And>k.\n       \\<lbrakk>- (x \\<squnion> - y) = z \\<Longrightarrow>\n                - (x \\<squnion>\n                   - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) =\n                z;\n        - (x \\<squnion> - y) = z\\<rbrakk>\n       \\<Longrightarrow> - (x \\<squnion>\n                            - (y \\<squnion>\n                               Suc k \\<otimes> (x \\<squnion> z))) =\n                         z", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> 0 \\<otimes> (x \\<squnion> z))) = z", "by (simp, metis assms robbins sup_assoc sup_comm)"], ["proof (state)\nthis:\n  - (x \\<squnion> - (y \\<squnion> 0 \\<otimes> (x \\<squnion> z))) = z\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>- (x \\<squnion> - y) = z \\<Longrightarrow>\n                - (x \\<squnion>\n                   - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) =\n                z;\n        - (x \\<squnion> - y) = z\\<rbrakk>\n       \\<Longrightarrow> - (x \\<squnion>\n                            - (y \\<squnion>\n                               Suc k \\<otimes> (x \\<squnion> z))) =\n                         z", "case Suc"], ["proof (state)\nthis:\n  - (x \\<squnion> - y) = z \\<Longrightarrow>\n  - (x \\<squnion> - (y \\<squnion> k_ \\<otimes> (x \\<squnion> z))) = z\n  - (x \\<squnion> - y) = z\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>- (x \\<squnion> - y) = z \\<Longrightarrow>\n                - (x \\<squnion>\n                   - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) =\n                z;\n        - (x \\<squnion> - y) = z\\<rbrakk>\n       \\<Longrightarrow> - (x \\<squnion>\n                            - (y \\<squnion>\n                               Suc k \\<otimes> (x \\<squnion> z))) =\n                         z", "note ind_hyp = this"], ["proof (state)\nthis:\n  - (x \\<squnion> - y) = z \\<Longrightarrow>\n  - (x \\<squnion> - (y \\<squnion> k_ \\<otimes> (x \\<squnion> z))) = z\n  - (x \\<squnion> - y) = z\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>- (x \\<squnion> - y) = z \\<Longrightarrow>\n                - (x \\<squnion>\n                   - (y \\<squnion> k \\<otimes> (x \\<squnion> z))) =\n                z;\n        - (x \\<squnion> - y) = z\\<rbrakk>\n       \\<Longrightarrow> - (x \\<squnion>\n                            - (y \\<squnion>\n                               Suc k \\<otimes> (x \\<squnion> z))) =\n                         z", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion> - (y \\<squnion> Suc k_ \\<otimes> (x \\<squnion> z))) = z", "by (simp, metis ind_hyp robbins sup_assoc sup_comm)"], ["proof (state)\nthis:\n  - (x \\<squnion> - (y \\<squnion> Suc k_ \\<otimes> (x \\<squnion> z))) = z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma copyp1:\n   assumes \"-(-(x \\<squnion> -y) \\<squnion> -y) = x\"\n     shows \"-(y \\<squnion> k \\<otimes> (x \\<squnion> -(x \\<squnion> -y))) = -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "using assms"], ["proof (prove)\nusing this:\n  - (- (x \\<squnion> - y) \\<squnion> - y) = x\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "let ?z = \"-(x \\<squnion> - y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "let ?ky = \"y \\<squnion> k \\<otimes> (x \\<squnion> ?z)\""], ["proof (state)\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "have \"-(x \\<squnion> -?ky) = ?z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (x \\<squnion>\n       - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n    - (x \\<squnion> - y)", "by (simp add: copyp0)"], ["proof (state)\nthis:\n  - (x \\<squnion>\n     - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n  - (x \\<squnion> - y)\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "hence \"-(-?ky \\<squnion> -(-y \\<squnion> ?z)) = ?z\""], ["proof (prove)\nusing this:\n  - (x \\<squnion>\n     - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n  - (x \\<squnion> - y)\n\ngoal (1 subgoal):\n 1. - (- (y \\<squnion>\n          k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n       - (- y \\<squnion> - (x \\<squnion> - y))) =\n    - (x \\<squnion> - y)", "by (metis assms sup_comm)"], ["proof (state)\nthis:\n  - (- (y \\<squnion>\n        k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n     - (- y \\<squnion> - (x \\<squnion> - y))) =\n  - (x \\<squnion> - y)\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "also"], ["proof (state)\nthis:\n  - (- (y \\<squnion>\n        k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n     - (- y \\<squnion> - (x \\<squnion> - y))) =\n  - (x \\<squnion> - y)\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "have \"-(?z \\<squnion> -?ky) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion>\n       - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n    x", "by (metis assms copyp0 sup_comm)"], ["proof (state)\nthis:\n  - (- (x \\<squnion> - y) \\<squnion>\n     - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n  x\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "hence \"?z = -(-y \\<squnion> -(-?ky \\<squnion> ?z))\""], ["proof (prove)\nusing this:\n  - (- (x \\<squnion> - y) \\<squnion>\n     - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y)))) =\n  x\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> - y) =\n    - (- y \\<squnion>\n       - (- (y \\<squnion>\n             k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n          - (x \\<squnion> - y)))", "by (metis sup_comm)"], ["proof (state)\nthis:\n  - (x \\<squnion> - y) =\n  - (- y \\<squnion>\n     - (- (y \\<squnion>\n           k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n        - (x \\<squnion> - y)))\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "finally"], ["proof (chain)\npicking this:\n  - (- (y \\<squnion>\n        k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n     - (- y \\<squnion> - (x \\<squnion> - y))) =\n  - (- y \\<squnion>\n     - (- (y \\<squnion>\n           k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n        - (x \\<squnion> - y)))", "show ?thesis"], ["proof (prove)\nusing this:\n  - (- (y \\<squnion>\n        k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n     - (- y \\<squnion> - (x \\<squnion> - y))) =\n  - (- y \\<squnion>\n     - (- (y \\<squnion>\n           k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) \\<squnion>\n        - (x \\<squnion> - y)))\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "by (metis eq_intro)"], ["proof (state)\nthis:\n  - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary copyp2: \n   assumes \"-(x \\<squnion> y) = -y\"\n     shows \"-(y \\<squnion> k \\<otimes> (x \\<squnion> -(x \\<squnion> -y))) = -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (y \\<squnion> k \\<otimes> (x \\<squnion> - (x \\<squnion> - y))) = - y", "by (metis assms robbins sup_comm copyp1)"], ["", "lemma two_threep:\n   assumes \"-(2 \\<times> x \\<squnion> y) = -y\"\n       and \"-(3 \\<times> x \\<squnion> y) = -y\" \n     shows \"2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "using assms"], ["proof (prove)\nusing this:\n  - (2 \\<times> x \\<squnion> y) = - y\n  - (3 \\<times> x \\<squnion> y) = - y\n\ngoal (1 subgoal):\n 1. 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "from assms two three"], ["proof (chain)\npicking this:\n  - (2 \\<times> x \\<squnion> y) = - y\n  - (3 \\<times> x \\<squnion> y) = - y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x", "have \n     A: \"-(x \\<squnion> x \\<squnion> y) = -y\" and\n     B: \"-(x \\<squnion> x \\<squnion> x \\<squnion> y) = -y\""], ["proof (prove)\nusing this:\n  - (2 \\<times> x \\<squnion> y) = - y\n  - (3 \\<times> x \\<squnion> y) = - y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> x \\<squnion> y) = - y &&&\n    - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y", "by simp+"], ["proof (state)\nthis:\n  - (x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "with sup_assoc\n       copyp2[where x=\"x\" and y=\"x \\<squnion> x \\<squnion> y\" and k=\"0\"]"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (x \\<squnion> (x \\<squnion> x \\<squnion> y)) =\n  - (x \\<squnion> x \\<squnion> y) \\<Longrightarrow>\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     0 \\<otimes>\n     (x \\<squnion> - (x \\<squnion> - (x \\<squnion> x \\<squnion> y)))) =\n  - (x \\<squnion> x \\<squnion> y)\n  - (x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y", "have \"-(x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion> -(x \\<squnion> -y)) = -y\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (x \\<squnion> (x \\<squnion> x \\<squnion> y)) =\n  - (x \\<squnion> x \\<squnion> y) \\<Longrightarrow>\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     0 \\<otimes>\n     (x \\<squnion> - (x \\<squnion> - (x \\<squnion> x \\<squnion> y)))) =\n  - (x \\<squnion> x \\<squnion> y)\n  - (x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n       - (x \\<squnion> - y)) =\n    - y", "by simp"], ["proof (state)\nthis:\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y)) =\n  - y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "moreover"], ["proof (state)\nthis:\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y)) =\n  - y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "from sup_comm sup_assoc A B\n       copyp2[where x=\"x \\<squnion> x\" and y=\"y\" and k=\"0\"]"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> y) = - y \\<Longrightarrow>\n  - (y \\<squnion>\n     0 \\<otimes>\n     (x \\<squnion> x \\<squnion> - (x \\<squnion> x \\<squnion> - y))) =\n  - y", "have \"-(y \\<squnion> x \\<squnion> x \\<squnion> -(x \\<squnion> x \\<squnion> -y)) = -y\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> x \\<squnion> y) = - y\n  - (x \\<squnion> x \\<squnion> y) = - y \\<Longrightarrow>\n  - (y \\<squnion>\n     0 \\<otimes>\n     (x \\<squnion> x \\<squnion> - (x \\<squnion> x \\<squnion> - y))) =\n  - y\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> x \\<squnion> x \\<squnion>\n       - (x \\<squnion> x \\<squnion> - y)) =\n    - y", "by fastforce"], ["proof (state)\nthis:\n  - (y \\<squnion> x \\<squnion> x \\<squnion>\n     - (x \\<squnion> x \\<squnion> - y)) =\n  - y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "with sup_comm sup_assoc"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (y \\<squnion> x \\<squnion> x \\<squnion>\n     - (x \\<squnion> x \\<squnion> - y)) =\n  - y", "have \"-(x \\<squnion> x \\<squnion> y \\<squnion> -(x \\<squnion> (x \\<squnion> -y))) = -y\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  - (y \\<squnion> x \\<squnion> x \\<squnion>\n     - (x \\<squnion> x \\<squnion> - y)) =\n  - y\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> x \\<squnion> y \\<squnion>\n       - (x \\<squnion> (x \\<squnion> - y))) =\n    - y", "by metis"], ["proof (state)\nthis:\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "ultimately"], ["proof (chain)\npicking this:\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y)) =\n  - y\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - y", "have \n    \"-(x \\<squnion> x \\<squnion> y \\<squnion> -(x \\<squnion> (x \\<squnion> -y))) = -(x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion> -(x \\<squnion> -y))\""], ["proof (prove)\nusing this:\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y)) =\n  - y\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - y\n\ngoal (1 subgoal):\n 1. - (x \\<squnion> x \\<squnion> y \\<squnion>\n       - (x \\<squnion> (x \\<squnion> - y))) =\n    - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n       - (x \\<squnion> - y))", "by simp"], ["proof (state)\nthis:\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "with less_eq_intro"], ["proof (chain)\npicking this:\n  - (?x \\<squnion> - (?y \\<squnion> ?z)) =\n  - (?x \\<squnion> ?y \\<squnion> - ?z) \\<Longrightarrow>\n  ?x \\<squnion> ?y = ?x\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y))", "have \"x \\<squnion> x \\<squnion> y = x \\<squnion> x \\<squnion> y \\<squnion> x\""], ["proof (prove)\nusing this:\n  - (?x \\<squnion> - (?y \\<squnion> ?z)) =\n  - (?x \\<squnion> ?y \\<squnion> - ?z) \\<Longrightarrow>\n  ?x \\<squnion> ?y = ?x\n  - (x \\<squnion> x \\<squnion> y \\<squnion>\n     - (x \\<squnion> (x \\<squnion> - y))) =\n  - (x \\<squnion> x \\<squnion> y \\<squnion> x \\<squnion>\n     - (x \\<squnion> - y))\n\ngoal (1 subgoal):\n 1. x \\<squnion> x \\<squnion> y = x \\<squnion> x \\<squnion> y \\<squnion> x", "by metis"], ["proof (state)\nthis:\n  x \\<squnion> x \\<squnion> y = x \\<squnion> x \\<squnion> y \\<squnion> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>- (2 \\<times> x \\<squnion> y) = - y;\n     - (3 \\<times> x \\<squnion> y) = - y\\<rbrakk>\n    \\<Longrightarrow> 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "with sup_comm sup_assoc two three"], ["proof (chain)\npicking this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  x \\<squnion> x \\<squnion> y = x \\<squnion> x \\<squnion> y \\<squnion> x", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  x \\<squnion> x \\<squnion> y = x \\<squnion> x \\<squnion> y \\<squnion> x\n\ngoal (1 subgoal):\n 1. 2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y", "by metis"], ["proof (state)\nthis:\n  2 \\<times> x \\<squnion> y = 3 \\<times> x \\<squnion> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma two_three:\n   assumes \"-(x \\<squnion> y) = -y \\<or> -(-(x \\<squnion> -y) \\<squnion> -y) = x\"\n     shows \"y \\<squnion> 2 \\<times> (x \\<squnion> -(x \\<squnion> -y)) = y \\<squnion> 3 \\<times> (x \\<squnion> -(x \\<squnion> -y))\"\n           (is \"y \\<squnion> ?z2 = y \\<squnion> ?z3\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "using assms"], ["proof (prove)\nusing this:\n  - (x \\<squnion> y) = - y \\<or> - (- (x \\<squnion> - y) \\<squnion> - y) = x\n\ngoal (1 subgoal):\n 1. y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. - (x \\<squnion> y) = - y \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))\n 2. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "assume \"-(x \\<squnion> y) = -y\""], ["proof (state)\nthis:\n  - (x \\<squnion> y) = - y\n\ngoal (2 subgoals):\n 1. - (x \\<squnion> y) = - y \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))\n 2. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "with copyp2[where k=\"Suc(0)\"] \n           copyp2[where k=\"Suc(Suc(0))\"]\n           two three"], ["proof (chain)\npicking this:\n  - (?x \\<squnion> ?y) = - ?y \\<Longrightarrow>\n  - (?y \\<squnion> Suc 0 \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  - (?x \\<squnion> ?y) = - ?y \\<Longrightarrow>\n  - (?y \\<squnion>\n     Suc (Suc 0) \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - (x \\<squnion> y) = - y", "have \"-(y \\<squnion> ?z2) = -y\" and \"-(y \\<squnion> ?z3) = -y\""], ["proof (prove)\nusing this:\n  - (?x \\<squnion> ?y) = - ?y \\<Longrightarrow>\n  - (?y \\<squnion> Suc 0 \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  - (?x \\<squnion> ?y) = - ?y \\<Longrightarrow>\n  - (?y \\<squnion>\n     Suc (Suc 0) \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - (x \\<squnion> y) = - y\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) =\n    - y &&&\n    - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y", "by simp+"], ["proof (state)\nthis:\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n\ngoal (2 subgoals):\n 1. - (x \\<squnion> y) = - y \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))\n 2. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "with two_threep sup_comm"], ["proof (chain)\npicking this:\n  \\<lbrakk>- (2 \\<times> ?x \\<squnion> ?y) = - ?y;\n   - (3 \\<times> ?x \\<squnion> ?y) = - ?y\\<rbrakk>\n  \\<Longrightarrow> 2 \\<times> ?x \\<squnion> ?y =\n                    3 \\<times> ?x \\<squnion> ?y\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>- (2 \\<times> ?x \\<squnion> ?y) = - ?y;\n   - (3 \\<times> ?x \\<squnion> ?y) = - ?y\\<rbrakk>\n  \\<Longrightarrow> 2 \\<times> ?x \\<squnion> ?y =\n                    3 \\<times> ?x \\<squnion> ?y\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n\ngoal (1 subgoal):\n 1. y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "by metis"], ["proof (state)\nthis:\n  y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n  y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "assume \"-(-(x \\<squnion> -y) \\<squnion> -y) = x\""], ["proof (state)\nthis:\n  - (- (x \\<squnion> - y) \\<squnion> - y) = x\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "with copyp1[where k=\"Suc(0)\"] \n           copyp1[where k=\"Suc(Suc(0))\"]\n           two three"], ["proof (chain)\npicking this:\n  - (- (?x \\<squnion> - ?y) \\<squnion> - ?y) = ?x \\<Longrightarrow>\n  - (?y \\<squnion> Suc 0 \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  - (- (?x \\<squnion> - ?y) \\<squnion> - ?y) = ?x \\<Longrightarrow>\n  - (?y \\<squnion>\n     Suc (Suc 0) \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - (- (x \\<squnion> - y) \\<squnion> - y) = x", "have \"-(y \\<squnion> ?z2) = -y\" and \"-(y \\<squnion> ?z3) = -y\""], ["proof (prove)\nusing this:\n  - (- (?x \\<squnion> - ?y) \\<squnion> - ?y) = ?x \\<Longrightarrow>\n  - (?y \\<squnion> Suc 0 \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  - (- (?x \\<squnion> - ?y) \\<squnion> - ?y) = ?x \\<Longrightarrow>\n  - (?y \\<squnion>\n     Suc (Suc 0) \\<otimes> (?x \\<squnion> - (?x \\<squnion> - ?y))) =\n  - ?y\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - (- (x \\<squnion> - y) \\<squnion> - y) = x\n\ngoal (1 subgoal):\n 1. - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) =\n    - y &&&\n    - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y", "by simp+"], ["proof (state)\nthis:\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n\ngoal (1 subgoal):\n 1. - (- (x \\<squnion> - y) \\<squnion> - y) = x \\<Longrightarrow>\n    y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "with two_threep sup_comm"], ["proof (chain)\npicking this:\n  \\<lbrakk>- (2 \\<times> ?x \\<squnion> ?y) = - ?y;\n   - (3 \\<times> ?x \\<squnion> ?y) = - ?y\\<rbrakk>\n  \\<Longrightarrow> 2 \\<times> ?x \\<squnion> ?y =\n                    3 \\<times> ?x \\<squnion> ?y\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>- (2 \\<times> ?x \\<squnion> ?y) = - ?y;\n   - (3 \\<times> ?x \\<squnion> ?y) = - ?y\\<rbrakk>\n  \\<Longrightarrow> 2 \\<times> ?x \\<squnion> ?y =\n                    3 \\<times> ?x \\<squnion> ?y\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n  - (y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))) = - y\n\ngoal (1 subgoal):\n 1. y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n    y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))", "by metis"], ["proof (state)\nthis:\n  y \\<squnion> 2 \\<times> (x \\<squnion> - (x \\<squnion> - y)) =\n  y \\<squnion> 3 \\<times> (x \\<squnion> - (x \\<squnion> - y))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sup_idem: \"\\<rho> \\<squnion> \\<rho> = \\<rho>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from winkerr two \n         copyp2[where x=\"\\<alpha>\" and y=\"\\<beta>\" and k=\"Suc(0)\"]"], ["proof (chain)\npicking this:\n  \\<alpha> \\<squnion> \\<beta> = \\<beta>\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  - (\\<alpha> \\<squnion> \\<beta>) = - \\<beta> \\<Longrightarrow>\n  - (\\<beta> \\<squnion>\n     Suc 0 \\<otimes>\n     (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))) =\n  - \\<beta>", "have\n    \"-\\<beta> = -(\\<beta> \\<squnion> 2 \\<times> (\\<alpha> \\<squnion> -(\\<alpha> \\<squnion> -\\<beta>)))\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<squnion> \\<beta> = \\<beta>\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  - (\\<alpha> \\<squnion> \\<beta>) = - \\<beta> \\<Longrightarrow>\n  - (\\<beta> \\<squnion>\n     Suc 0 \\<otimes>\n     (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))) =\n  - \\<beta>\n\ngoal (1 subgoal):\n 1. - \\<beta> =\n    - (\\<beta> \\<squnion>\n       2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)))", "by simp"], ["proof (state)\nthis:\n  - \\<beta> =\n  - (\\<beta> \\<squnion>\n     2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  - \\<beta> =\n  - (\\<beta> \\<squnion>\n     2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from copy_distrib sup_assoc"], ["proof (chain)\npicking this:\n  ?k \\<times> (?x \\<squnion> ?y) = ?k \\<times> ?x \\<squnion> ?k \\<times> ?y\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have\n    \"\\<dots> = -(\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion> 2 \\<times> (-(\\<alpha> \\<squnion> -\\<beta>)))\""], ["proof (prove)\nusing this:\n  ?k \\<times> (?x \\<squnion> ?y) = ?k \\<times> ?x \\<squnion> ?k \\<times> ?y\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. - (\\<beta> \\<squnion>\n       2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))) =\n    - (\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion>\n       2 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)))", "by simp"], ["proof (state)\nthis:\n  - (\\<beta> \\<squnion>\n     2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))) =\n  - (\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion>\n     2 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  - (\\<beta> \\<squnion>\n     2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))) =\n  - (\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion>\n     2 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from sup_assoc secret_object4_def two\n              multi_winker[where k=\"2\"]"], ["proof (chain)\npicking this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  \\<beta> \\<squnion> 2 \\<times> \\<alpha> = \\<beta>", "have\n    \"\\<dots> = -\\<delta>\""], ["proof (prove)\nusing this:\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  \\<beta> \\<squnion> 2 \\<times> \\<alpha> = \\<beta>\n\ngoal (1 subgoal):\n 1. - (\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion>\n       2 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>))) =\n    - \\<delta>", "by metis"], ["proof (state)\nthis:\n  - (\\<beta> \\<squnion> 2 \\<times> \\<alpha> \\<squnion>\n     2 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>))) =\n  - \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "finally"], ["proof (chain)\npicking this:\n  - \\<beta> = - \\<delta>", "have \"-\\<beta> = -\\<delta>\""], ["proof (prove)\nusing this:\n  - \\<beta> = - \\<delta>\n\ngoal (1 subgoal):\n 1. - \\<beta> = - \\<delta>", "by simp"], ["proof (state)\nthis:\n  - \\<beta> = - \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "with secret_object4_def sup_assoc three"], ["proof (chain)\npicking this:\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - \\<beta> = - \\<delta>", "have\n    \"\\<delta> \\<squnion> -(\\<alpha> \\<squnion> -\\<delta>) = \\<beta> \\<squnion> 3 \\<times> (-(\\<alpha> \\<squnion> -\\<beta>))\""], ["proof (prove)\nusing this:\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  - \\<beta> = - \\<delta>\n\ngoal (1 subgoal):\n 1. \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) =\n    \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>))", "by simp"], ["proof (state)\nthis:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) =\n  \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) =\n  \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from copy_distrib[where k=\"3\"] \n              multi_winker[where k=\"3\"] \n              sup_assoc"], ["proof (chain)\npicking this:\n  3 \\<times> (?x \\<squnion> ?y) = 3 \\<times> ?x \\<squnion> 3 \\<times> ?y\n  \\<beta> \\<squnion> 3 \\<times> \\<alpha> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n    \"\\<dots> = \\<beta> \\<squnion> 3 \\<times> (\\<alpha> \\<squnion> -(\\<alpha> \\<squnion> -\\<beta>))\""], ["proof (prove)\nusing this:\n  3 \\<times> (?x \\<squnion> ?y) = 3 \\<times> ?x \\<squnion> 3 \\<times> ?y\n  \\<beta> \\<squnion> 3 \\<times> \\<alpha> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)) =\n    \\<beta> \\<squnion>\n    3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))", "by metis"], ["proof (state)\nthis:\n  \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  \\<beta> \\<squnion> 3 \\<times> (- (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from winker sup_comm two_three[where x=\"\\<alpha>\" and y=\"\\<beta>\"]"], ["proof (chain)\npicking this:\n  \\<beta> \\<squnion> \\<alpha> = \\<beta>\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (\\<alpha> \\<squnion> \\<beta>) = - \\<beta> \\<or>\n  - (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion> - \\<beta>) =\n  \\<alpha> \\<Longrightarrow>\n  \\<beta> \\<squnion>\n  2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))", "have \n    \"\\<dots> = \\<beta> \\<squnion> 2 \\<times> (\\<alpha> \\<squnion> -(\\<alpha> \\<squnion> -\\<beta>))\""], ["proof (prove)\nusing this:\n  \\<beta> \\<squnion> \\<alpha> = \\<beta>\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (\\<alpha> \\<squnion> \\<beta>) = - \\<beta> \\<or>\n  - (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion> - \\<beta>) =\n  \\<alpha> \\<Longrightarrow>\n  \\<beta> \\<squnion>\n  2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion>\n    3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n    \\<beta> \\<squnion>\n    2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))", "by fastforce"], ["proof (state)\nthis:\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  \\<beta> \\<squnion>\n  3 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<beta> \\<squnion>\n  2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from copy_distrib[where k=\"2\"] \n              multi_winker[where k=\"2\"] \n              sup_assoc two secret_object4_def"], ["proof (chain)\npicking this:\n  2 \\<times> (?x \\<squnion> ?y) = 2 \\<times> ?x \\<squnion> 2 \\<times> ?y\n  \\<beta> \\<squnion> 2 \\<times> \\<alpha> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))", "have \n    \"\\<dots> = \\<delta>\""], ["proof (prove)\nusing this:\n  2 \\<times> (?x \\<squnion> ?y) = 2 \\<times> ?x \\<squnion> 2 \\<times> ?y\n  \\<beta> \\<squnion> 2 \\<times> \\<alpha> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n\ngoal (1 subgoal):\n 1. \\<beta> \\<squnion>\n    2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n    \\<delta>", "by metis"], ["proof (state)\nthis:\n  \\<beta> \\<squnion>\n  2 \\<times> (\\<alpha> \\<squnion> - (\\<alpha> \\<squnion> - \\<beta>)) =\n  \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "finally"], ["proof (chain)\npicking this:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>", "have \\<heartsuit>: \"\\<delta> \\<squnion> -(\\<alpha> \\<squnion> -\\<delta>) = \\<delta>\""], ["proof (prove)\nusing this:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>", "by simp"], ["proof (state)\nthis:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from secret_object4_def winkerr sup_assoc"], ["proof (chain)\npicking this:\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  \\<alpha> \\<squnion> \\<beta> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z", "have \n          \"\\<alpha> \\<squnion> \\<delta> = \\<delta>\""], ["proof (prove)\nusing this:\n  \\<delta> =\n  \\<beta> \\<squnion>\n  (- (\\<alpha> \\<squnion> - \\<beta>) \\<squnion>\n   - (\\<alpha> \\<squnion> - \\<beta>))\n  \\<alpha> \\<squnion> \\<beta> = \\<beta>\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n\ngoal (1 subgoal):\n 1. \\<alpha> \\<squnion> \\<delta> = \\<delta>", "by metis"], ["proof (state)\nthis:\n  \\<alpha> \\<squnion> \\<delta> = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "hence \"\\<delta> \\<squnion> \\<alpha> = \\<delta>\""], ["proof (prove)\nusing this:\n  \\<alpha> \\<squnion> \\<delta> = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<delta> \\<squnion> \\<alpha> = \\<delta>", "by (metis sup_comm)"], ["proof (state)\nthis:\n  \\<delta> \\<squnion> \\<alpha> = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "hence \"-(-(\\<delta> \\<squnion> -\\<delta>) \\<squnion> -\\<delta>) = -(-(\\<delta> \\<squnion> (\\<alpha> \\<squnion> -\\<delta>)) \\<squnion> -\\<delta>)\""], ["proof (prove)\nusing this:\n  \\<delta> \\<squnion> \\<alpha> = \\<delta>\n\ngoal (1 subgoal):\n 1. - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) =\n    - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n       - \\<delta>)", "by (metis sup_assoc)"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) =\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) =\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - \\<delta>)\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from \\<heartsuit>"], ["proof (chain)\npicking this:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>", "have\n          \"\\<dots> = -(-(\\<delta> \\<squnion> (\\<alpha> \\<squnion> -\\<delta>)) \\<squnion> -(\\<delta> \\<squnion> -(\\<alpha> \\<squnion> -\\<delta>)))\""], ["proof (prove)\nusing this:\n  \\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n       - \\<delta>) =\n    - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n       - (\\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>)))", "by metis"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - \\<delta>) =\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - (\\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "also"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - \\<delta>) =\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - (\\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>)))\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "from robbins"], ["proof (chain)\npicking this:\n  - (- (?x \\<squnion> ?y) \\<squnion> - (?x \\<squnion> - ?y)) = ?x", "have\n          \"\\<dots> = \\<delta>\""], ["proof (prove)\nusing this:\n  - (- (?x \\<squnion> ?y) \\<squnion> - (?x \\<squnion> - ?y)) = ?x\n\ngoal (1 subgoal):\n 1. - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n       - (\\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>))) =\n    \\<delta>", "by metis"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> (\\<alpha> \\<squnion> - \\<delta>)) \\<squnion>\n     - (\\<delta> \\<squnion> - (\\<alpha> \\<squnion> - \\<delta>))) =\n  \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "finally"], ["proof (chain)\npicking this:\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>", "have \"-(-(\\<delta> \\<squnion> -\\<delta>) \\<squnion> -\\<delta>) = \\<delta>\""], ["proof (prove)\nusing this:\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>", "by simp"], ["proof (state)\nthis:\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "with two_three[where x=\"\\<delta>\" and y=\"\\<delta>\"] \n         secret_object5_def sup_comm"], ["proof (chain)\npicking this:\n  - (\\<delta> \\<squnion> \\<delta>) = - \\<delta> \\<or>\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) =\n  \\<delta> \\<Longrightarrow>\n  \\<delta> \\<squnion>\n  2 \\<times> (\\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)) =\n  \\<delta> \\<squnion>\n  3 \\<times> (\\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>))\n  \\<gamma> = \\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>", "have \"3 \\<times> \\<gamma> \\<squnion> \\<delta> = 2 \\<times> \\<gamma> \\<squnion> \\<delta>\""], ["proof (prove)\nusing this:\n  - (\\<delta> \\<squnion> \\<delta>) = - \\<delta> \\<or>\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) =\n  \\<delta> \\<Longrightarrow>\n  \\<delta> \\<squnion>\n  2 \\<times> (\\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)) =\n  \\<delta> \\<squnion>\n  3 \\<times> (\\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>))\n  \\<gamma> = \\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  - (- (\\<delta> \\<squnion> - \\<delta>) \\<squnion> - \\<delta>) = \\<delta>\n\ngoal (1 subgoal):\n 1. 3 \\<times> \\<gamma> \\<squnion> \\<delta> =\n    2 \\<times> \\<gamma> \\<squnion> \\<delta>", "by fastforce"], ["proof (state)\nthis:\n  3 \\<times> \\<gamma> \\<squnion> \\<delta> =\n  2 \\<times> \\<gamma> \\<squnion> \\<delta>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "with secret_object5_def sup_assoc sup_comm"], ["proof (chain)\npicking this:\n  \\<gamma> = \\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  3 \\<times> \\<gamma> \\<squnion> \\<delta> =\n  2 \\<times> \\<gamma> \\<squnion> \\<delta>", "have  \n         \"3 \\<times> \\<gamma> \\<squnion> \\<gamma> = 2 \\<times> \\<gamma> \\<squnion> \\<gamma>\""], ["proof (prove)\nusing this:\n  \\<gamma> = \\<delta> \\<squnion> - (\\<delta> \\<squnion> - \\<delta>)\n  ?x \\<squnion> (?y \\<squnion> ?z) = ?x \\<squnion> ?y \\<squnion> ?z\n  ?x \\<squnion> ?y = ?y \\<squnion> ?x\n  3 \\<times> \\<gamma> \\<squnion> \\<delta> =\n  2 \\<times> \\<gamma> \\<squnion> \\<delta>\n\ngoal (1 subgoal):\n 1. 3 \\<times> \\<gamma> \\<squnion> \\<gamma> =\n    2 \\<times> \\<gamma> \\<squnion> \\<gamma>", "by fastforce"], ["proof (state)\nthis:\n  3 \\<times> \\<gamma> \\<squnion> \\<gamma> =\n  2 \\<times> \\<gamma> \\<squnion> \\<gamma>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "with two three four five six"], ["proof (chain)\npicking this:\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  4 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  5 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  6 \\<times> ?x =\n  ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  3 \\<times> \\<gamma> \\<squnion> \\<gamma> =\n  2 \\<times> \\<gamma> \\<squnion> \\<gamma>", "have\n         \"6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>\""], ["proof (prove)\nusing this:\n  2 \\<times> ?x = ?x \\<squnion> ?x\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n  4 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  5 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  6 \\<times> ?x =\n  ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x \\<squnion> ?x\n  3 \\<times> \\<gamma> \\<squnion> \\<gamma> =\n  2 \\<times> \\<gamma> \\<squnion> \\<gamma>\n\ngoal (1 subgoal):\n 1. 6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>", "by simp"], ["proof (state)\nthis:\n  6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "moreover"], ["proof (state)\nthis:\n  6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "have \"3 + 3 = (6::nat)\" and \"3 \\<noteq> (0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 + 3 = 6 &&& 3 \\<noteq> 0", "by arith+"], ["proof (state)\nthis:\n  3 + 3 = 6\n  3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "moreover"], ["proof (state)\nthis:\n  3 + 3 = 6\n  3 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "note copy_arith[where k=\"3\" and l=\"3\" and x=\"\\<gamma>\"]\n                  winker_object_def three"], ["proof (state)\nthis:\n  \\<lbrakk>3 \\<noteq> 0; 3 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (3 + 3) \\<times> \\<gamma> =\n                    3 \\<times> \\<gamma> \\<squnion> 3 \\<times> \\<gamma>\n  \\<rho> = \\<gamma> \\<squnion> \\<gamma> \\<squnion> \\<gamma>\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "ultimately"], ["proof (chain)\npicking this:\n  6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>\n  3 + 3 = 6\n  3 \\<noteq> 0\n  \\<lbrakk>3 \\<noteq> 0; 3 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (3 + 3) \\<times> \\<gamma> =\n                    3 \\<times> \\<gamma> \\<squnion> 3 \\<times> \\<gamma>\n  \\<rho> = \\<gamma> \\<squnion> \\<gamma> \\<squnion> \\<gamma>\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  6 \\<times> \\<gamma> = 3 \\<times> \\<gamma>\n  3 + 3 = 6\n  3 \\<noteq> 0\n  \\<lbrakk>3 \\<noteq> 0; 3 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> (3 + 3) \\<times> \\<gamma> =\n                    3 \\<times> \\<gamma> \\<squnion> 3 \\<times> \\<gamma>\n  \\<rho> = \\<gamma> \\<squnion> \\<gamma> \\<squnion> \\<gamma>\n  3 \\<times> ?x = ?x \\<squnion> ?x \\<squnion> ?x\n\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<rho> = \\<rho>", "by simp"], ["proof (state)\nthis:\n  \\<rho> \\<squnion> \\<rho> = \\<rho>\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Idempotence implies the identity law *)"], ["", "lemma sup_ident: \"x \\<squnion> \\<bottom>\\<bottom> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "have I: \"\\<rho> = -(-\\<rho> \\<squnion> \\<bottom>\\<bottom>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> = - (- \\<rho> \\<squnion> \\<bottom>\\<bottom>)", "by (metis fake_bot_def inf_eq robbins sup_comm sup_idem)"], ["proof (state)\nthis:\n  \\<rho> = - (- \\<rho> \\<squnion> \\<bottom>\\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "{"], ["proof (state)\nthis:\n  \\<rho> = - (- \\<rho> \\<squnion> \\<bottom>\\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "have \"x = -(-(x \\<squnion> -\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion> -(x \\<squnion> \\<rho>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    - (- (x \\<squnion> - \\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n       - (x \\<squnion> \\<rho>))", "by (metis I robbins sup_assoc)"], ["proof (state)\nthis:\n  x =\n  - (- (x \\<squnion> - \\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (x \\<squnion> \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "}"], ["proof (state)\nthis:\n  ?xa2 =\n  - (- (?xa2 \\<squnion> - \\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (?xa2 \\<squnion> \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "note II = this"], ["proof (state)\nthis:\n  ?xa2 =\n  - (- (?xa2 \\<squnion> - \\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (?xa2 \\<squnion> \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "have III: \"-\\<rho> = -(-(\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>) \\<squnion> \\<rho>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - \\<rho> =\n    - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion> \\<rho>)", "by (metis robbins[where x=\"-\\<rho>\" and y=\"\\<rho> \\<squnion> -\\<rho>\"]\n              I sup_comm fake_bot_def)"], ["proof (state)\nthis:\n  - \\<rho> =\n  - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion> \\<rho>)\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "hence \"\\<rho> = -(-(\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>) \\<squnion> -\\<rho>)\""], ["proof (prove)\nusing this:\n  - \\<rho> =\n  - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion> \\<rho>)\n\ngoal (1 subgoal):\n 1. \\<rho> =\n    - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion>\n       - \\<rho>)", "by (metis robbins[where x=\"\\<rho>\" and y=\"\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>\"]\n              sup_comm[where x=\"\\<rho>\" and y=\"-(\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>)\"]\n              sup_assoc sup_idem)"], ["proof (state)\nthis:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion> - \\<rho>)\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "hence \"-(\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>) = \\<bottom>\\<bottom>\""], ["proof (prove)\nusing this:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) \\<squnion> - \\<rho>)\n\ngoal (1 subgoal):\n 1. - (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) = \\<bottom>\\<bottom>", "by (metis robbins[where x=\"-(\\<rho> \\<squnion> -\\<rho> \\<squnion> -\\<rho>)\" and y=\"\\<rho>\"] \n              III sup_comm fake_bot_def)"], ["proof (state)\nthis:\n  - (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) = \\<bottom>\\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "hence \"-\\<rho> = -(\\<rho> \\<squnion> \\<bottom>\\<bottom>)\""], ["proof (prove)\nusing this:\n  - (\\<rho> \\<squnion> - \\<rho> \\<squnion> - \\<rho>) = \\<bottom>\\<bottom>\n\ngoal (1 subgoal):\n 1. - \\<rho> = - (\\<rho> \\<squnion> \\<bottom>\\<bottom>)", "by (metis III sup_comm)"], ["proof (state)\nthis:\n  - \\<rho> = - (\\<rho> \\<squnion> \\<bottom>\\<bottom>)\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "hence \"\\<rho> = -(-(\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion> -(\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> -\\<rho>))\""], ["proof (prove)\nusing this:\n  - \\<rho> = - (\\<rho> \\<squnion> \\<bottom>\\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<rho> =\n    - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n       - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))", "by (metis II sup_idem sup_comm sup_assoc)"], ["proof (state)\nthis:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "moreover"], ["proof (state)\nthis:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "have \"\\<rho> \\<squnion> \\<bottom>\\<bottom> = -(-(\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion> -(\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> -\\<rho>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<rho> \\<squnion> \\<bottom>\\<bottom> =\n    - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n       - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))", "by (metis robbins[where x=\"\\<rho> \\<squnion> \\<bottom>\\<bottom>\" and y=\"\\<rho>\"] \n              sup_comm[where y=\"\\<rho>\"] \n              sup_assoc sup_idem)"], ["proof (state)\nthis:\n  \\<rho> \\<squnion> \\<bottom>\\<bottom> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "ultimately"], ["proof (chain)\npicking this:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n  \\<rho> \\<squnion> \\<bottom>\\<bottom> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))", "have \"\\<rho> = \\<rho> \\<squnion> \\<bottom>\\<bottom>\""], ["proof (prove)\nusing this:\n  \\<rho> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n  \\<rho> \\<squnion> \\<bottom>\\<bottom> =\n  - (- (\\<rho> \\<squnion> \\<bottom>\\<bottom>) \\<squnion>\n     - (\\<rho> \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. \\<rho> = \\<rho> \\<squnion> \\<bottom>\\<bottom>", "by auto"], ["proof (state)\nthis:\n  \\<rho> = \\<rho> \\<squnion> \\<bottom>\\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "hence \"x \\<squnion> \\<bottom>\\<bottom> = -(-(x \\<squnion> \\<rho>) \\<squnion> -(x \\<squnion> \\<bottom>\\<bottom> \\<squnion> -\\<rho>))\""], ["proof (prove)\nusing this:\n  \\<rho> = \\<rho> \\<squnion> \\<bottom>\\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> =\n    - (- (x \\<squnion> \\<rho>) \\<squnion>\n       - (x \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))", "by (metis robbins[where x=\"x \\<squnion> \\<bottom>\\<bottom>\" and y=\\<rho>]\n              sup_comm[where x=\"\\<bottom>\\<bottom>\" and y=\\<rho>]\n              sup_assoc)"], ["proof (state)\nthis:\n  x \\<squnion> \\<bottom>\\<bottom> =\n  - (- (x \\<squnion> \\<rho>) \\<squnion>\n     - (x \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<squnion> \\<bottom>\\<bottom> =\n  - (- (x \\<squnion> \\<rho>) \\<squnion>\n     - (x \\<squnion> \\<bottom>\\<bottom> \\<squnion> - \\<rho>))\n\ngoal (1 subgoal):\n 1. x \\<squnion> \\<bottom>\\<bottom> = x", "by (metis sup_assoc sup_comm II)"], ["proof (state)\nthis:\n  x \\<squnion> \\<bottom>\\<bottom> = x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* The identity law implies double negation *)"], ["", "lemma dbl_neg: \"- (-x) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- x) = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- x) = x", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- x) = x", "have \"\\<bottom>\\<bottom> = -(-x \\<squnion> -(-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom>\\<bottom> = - (- x \\<squnion> - (- x))", "by (metis robbins sup_comm sup_ident)"], ["proof (state)\nthis:\n  \\<bottom>\\<bottom> = - (- x \\<squnion> - (- x))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "}"], ["proof (state)\nthis:\n  \\<bottom>\\<bottom> = - (- ?xa2 \\<squnion> - (- ?xa2))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "note I = this"], ["proof (state)\nthis:\n  \\<bottom>\\<bottom> = - (- ?xa2 \\<squnion> - (- ?xa2))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "{"], ["proof (state)\nthis:\n  \\<bottom>\\<bottom> = - (- ?xa2 \\<squnion> - (- ?xa2))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- x) = x", "have \"-x = -(-(-x \\<squnion> -(-(-x))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - x = - (- (- x \\<squnion> - (- (- x))))", "by (metis I robbins sup_comm sup_ident)"], ["proof (state)\nthis:\n  - x = - (- (- x \\<squnion> - (- (- x))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "}"], ["proof (state)\nthis:\n  - ?xa2 = - (- (- ?xa2 \\<squnion> - (- (- ?xa2))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "note II = this"], ["proof (state)\nthis:\n  - ?xa2 = - (- (- ?xa2 \\<squnion> - (- (- ?xa2))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "{"], ["proof (state)\nthis:\n  - ?xa2 = - (- (- ?xa2 \\<squnion> - (- (- ?xa2))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. - (- x) = x", "have \"-(-(-x)) = -(-(-x \\<squnion> -(-(-x))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- (- x)) = - (- (- x \\<squnion> - (- (- x))))", "by (metis I II robbins sup_assoc sup_comm sup_ident)"], ["proof (state)\nthis:\n  - (- (- x)) = - (- (- x \\<squnion> - (- (- x))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "}"], ["proof (state)\nthis:\n  - (- (- ?xa2)) = - (- (- ?xa2 \\<squnion> - (- (- ?xa2))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "note III = this"], ["proof (state)\nthis:\n  - (- (- ?xa2)) = - (- (- ?xa2 \\<squnion> - (- (- ?xa2))))\n\ngoal (1 subgoal):\n 1. - (- x) = x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (- x) = x", "by (metis II III robbins)"], ["proof (state)\nthis:\n  - (- x) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "(* Double negation implies Huntington's axiom, hence Boolean*)"], ["", "theorem robbins_is_huntington:\n  \"class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "apply unfold_locales"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. - (- x \\<squnion> - y) \\<squnion> - (- x \\<squnion> y) = x", "apply (metis dbl_neg robbins sup_comm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "theorem robbins_is_boolean_II:\n  \"class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "interpret huntington: \n    huntington_algebra uminus \"(\\<sqinter>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "by (fact robbins_is_huntington)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "by (simp add: huntington.huntington_is_boolean_II)"], ["proof (state)\nthis:\n  class.boolean_algebra_II uminus (\\<sqinter>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem robbins_is_boolean:\n  \"class.boolean_algebra minus uminus (\\<sqinter>) (\\<sqsubseteq>) (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "interpret huntington: \n    huntington_algebra uminus \"(\\<sqinter>)\" \"(\\<squnion>)\" \\<bottom> \\<top>"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.huntington_algebra uminus (\\<sqinter>) (\\<squnion>) \\<bottom>\n     \\<top>", "by (fact robbins_is_huntington)"], ["proof (state)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n     (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>", "by (simp add: huntington.huntington_is_boolean)"], ["proof (state)\nthis:\n  class.boolean_algebra (-) uminus (\\<sqinter>) (\\<sqsubseteq>)\n   (\\<sqsubset>) (\\<squnion>) \\<bottom> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "no_notation secret_object1 (\"\\<iota>\")\n   and secret_object2 (\"\\<alpha>\") \n   and secret_object3 (\"\\<beta>\")\n   and secret_object4 (\"\\<delta>\")\n   and secret_object5 (\"\\<gamma>\")\n   and winker_object (\"\\<rho>\")\n   and less_eq  (infix \"\\<sqsubseteq>\" 50) \n   and less (infix \"\\<sqsubset>\" 50)\n   and inf (infixl \"\\<sqinter>\" 70) \n   and sup (infixl \"\\<squnion>\" 65) \n   and top (\"\\<top>\")\n   and bot (\"\\<bottom>\")\n   and copyp (infix \"\\<otimes>\" 80)\n   and copy (infix \"\\<times>\" 85)"], ["", "notation\n  Product_Type.Times  (infixr \"\\<times>\" 80)"], ["", "end"]]}