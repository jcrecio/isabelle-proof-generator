{"file_name": "/home/qj213/afp-2021-10-22/thys/Heard_Of/Reduction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Heard_Of", "problem_names": ["lemma fg_state_change:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and rd: \"round (rho (Suc n)) p = round (rho n) p\"\n  shows \"state (rho (Suc n)) p = state (rho n) p\"", "lemma fg_round_numbers_increase:\n  assumes rho: \"fg_run A rho HOs SHOs coords\" and n: \"n \\<le> m\"\n  shows \"round (rho n) p \\<le> round (rho m) p\"", "lemma fg_same_round_same_state:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and rd: \"round (rho m) p = round (rho n) p\"\n  shows \"state (rho m) p = state (rho n) p\"", "lemma fg_start_round:\n  assumes \"fg_run A rho HOs SHOs coords\"\n  shows \"round (rho (fg_start_round rho p r)) p = r\"", "lemma fg_start_round_smallest:\n  assumes \"round (rho k) p = r\"\n  shows \"fg_start_round rho p r \\<le> (k::nat)\"", "lemma fg_start_round_later:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and r: \"round (rho n) p = r\" and r': \"r < r'\"\n  shows \"n < fg_start_round rho p r'\" (is \"_ < ?start\")", "lemma fg_start_round_0:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"fg_start_round rho p 0 = 0\"", "lemma fg_start_round_strict_mono:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"strict_mono (fg_start_round rho p)\"", "lemma fg_round_between_start_rounds:\nassumes rho: \"fg_run A rho HOs SHOs coords\"\n    and 1: \"fg_start_round rho p r \\<le> n\"\n    and 2: \"n < fg_start_round rho p (Suc r)\"\nshows \"round (rho n) p = r\" (is \"?rd = r\")", "lemma fg_local_transition_from_round:\nassumes rho: \"fg_run A rho HOs SHOs coords\"\nobtains n where \"round (rho n) p = r\"\n            and \"fg_start_round rho p (Suc r) = Suc n\"\n            and \"fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\"", "lemma fg_invariant1:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"(p,r,q,m) \\<in> network (rho n)\" (is \"?msg n\")\n  shows \"m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\"", "lemma fg_invariant2a:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"rcvd (rho n) q p = Some m\" (is \"?rcvd n\")\n  shows \"p \\<in> HOs (round (rho n) q) q\"\n  (is \"p \\<in> HOs (?rd n) q\" is \"?P n\")", "lemma fg_invariant2b:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"rcvd (rho n) q p = Some m\" (is \"?rcvd n\")\n      and sho: \"p \\<in> SHOs (round (rho n) q) q\" (is \"p \\<in> SHOs (?rd n) q\")\n  shows \"m = sendMsg A (?rd n) p q \n                     (state (rho (fg_start_round rho p (?rd n))) p)\"\n        (is \"?P n\")", "theorem reduction:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"CSHORun A (coarse_run rho) HOs SHOs coords\"\n        (is \"CSHORun _ ?cr _ _ _\")", "lemma locally_similar_refl: \"locally_similar \\<sigma> \\<sigma>\"", "lemma locally_similar_sym: \"locally_similar \\<sigma> \\<tau> \\<Longrightarrow> locally_similar \\<tau> \\<sigma>\"", "lemma locally_similar_trans [trans]:\n  \"locally_similar \\<rho> \\<sigma> \\<Longrightarrow> locally_similar \\<sigma> \\<tau> \\<Longrightarrow> locally_similar \\<rho> \\<tau>\"", "lemma local_property_eq:\n  \"local_property P = (\\<forall>\\<sigma> \\<tau>. locally_similar \\<sigma> \\<tau> \\<longrightarrow> P \\<sigma> = P \\<tau>)\"", "lemma coarse_run_locally_similar:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"locally_similar (state \\<circ> rho) (coarse_run rho)\"", "theorem local_property_reduction:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and P: \"local_property P\"\n      and coarse_correct: \n            \"\\<And> crho. \\<lbrakk> CSHORun A crho HOs SHOs coords; crho 0 = state (rho 0)\\<rbrakk>\n                      \\<Longrightarrow> P crho\"\n  shows \"P (state \\<circ> rho)\"", "lemma integrity_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and val: \"\\<And>n. dec (\\<sigma> n p) = Some v \\<Longrightarrow> v \\<in> range vals\"\n      and dec: \"dec (\\<tau> n p) = Some v\"\n  shows \"v \\<in> range vals\"", "lemma validity_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and val: \"\\<And>n. dec (\\<sigma> n p) = Some w \\<Longrightarrow> w = v\"\n      and dec: \"dec (\\<tau> n p) = Some w\"\n  shows \"w = v\"", "lemma agreement_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n  and agr: \"\\<And>m n. \\<lbrakk>dec (\\<sigma> m p) = Some v; dec (\\<sigma> n q) = Some w\\<rbrakk> \\<Longrightarrow> v=w\"\n  and v: \"dec (\\<tau> m p) = Some v\" and w: \"dec (\\<tau> n q) = Some w\"\n  shows \"v = w\"", "lemma termination_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and trm: \"dec (\\<sigma> m p) = Some v\"\n  shows \"\\<exists>n. dec (\\<tau> n p) = Some v\"", "theorem consensus_is_local: \"local_property (consensus vals dec)\"", "theorem weak_consensus_is_local: \"local_property (weak_consensus vals dec)\""], "translations": [["", "lemma fg_state_change:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and rd: \"round (rho (Suc n)) p = round (rho n) p\"\n  shows \"state (rho (Suc n)) p = state (rho n) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (rho (Suc n)) p = state (rho n) p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. state (rho (Suc n)) p = state (rho n) p", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have \"\\<exists>p'. fg_next_config A p' (HOs (round (rho n) p') p') \n                                          (SHOs (round (rho n) p') p')\n                                          (coords (round (rho (Suc n)) p') p') \n                                          (rho n) (rho (Suc n))\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. \\<exists>p'.\n       fg_next_config A p' (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n        (rho n) (rho (Suc n))", "by (auto simp: fg_run_def)"], ["proof (state)\nthis:\n  \\<exists>p'.\n     fg_next_config A p' (HOs (round (rho n) p') p')\n      (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n      (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. state (rho (Suc n)) p = state (rho n) p", "with rd"], ["proof (chain)\npicking this:\n  round (rho (Suc n)) p = round (rho n) p\n  \\<exists>p'.\n     fg_next_config A p' (HOs (round (rho n) p') p')\n      (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n      (rho n) (rho (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho (Suc n)) p = round (rho n) p\n  \\<exists>p'.\n     fg_next_config A p' (HOs (round (rho n) p') p')\n      (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n      (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. state (rho (Suc n)) p = state (rho n) p", "by (auto simp: fg_next_config_def fg_send_msg_def fg_rcv_msg_def fg_local_def)"], ["proof (state)\nthis:\n  state (rho (Suc n)) p = state (rho n) p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Round numbers never decrease.\n\\<close>"], ["", "lemma fg_round_numbers_increase:\n  assumes rho: \"fg_run A rho HOs SHOs coords\" and n: \"n \\<le> m\"\n  shows \"round (rho n) p \\<le> round (rho m) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "from n"], ["proof (chain)\npicking this:\n  n \\<le> m", "obtain k where k: \"m = n+k\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>k. m = n + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  m = n + k\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "{"], ["proof (state)\nthis:\n  m = n + k\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "have \"round (rho n) p \\<le> round (rho (n+i)) p\" (is \"?P i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho (n + i)) p", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. round (rho n) p \\<le> round (rho (n + 0)) p\n 2. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "show \"?P 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho (n + 0)) p", "by simp"], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho (n + 0)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "assume ih: \"?P j\""], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho (n + j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have \"\\<exists>p'. fg_next_config A p' (HOs (round (rho (n+j)) p') p')\n                                              (SHOs (round (rho (n+j)) p') p')\n                                              (coords (round (rho (Suc (n+j))) p') p')\n                                              (rho (n+j)) (rho (Suc (n+j)))\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. \\<exists>p'.\n       fg_next_config A p' (HOs (round (rho (n + j)) p') p')\n        (SHOs (round (rho (n + j)) p') p')\n        (coords (round (rho (Suc (n + j))) p') p') (rho (n + j))\n        (rho (Suc (n + j)))", "by (auto simp: fg_run_def)"], ["proof (state)\nthis:\n  \\<exists>p'.\n     fg_next_config A p' (HOs (round (rho (n + j)) p') p')\n      (SHOs (round (rho (n + j)) p') p')\n      (coords (round (rho (Suc (n + j))) p') p') (rho (n + j))\n      (rho (Suc (n + j)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "hence \"round (rho (n+j)) p \\<le> round (rho (n + Suc j)) p\""], ["proof (prove)\nusing this:\n  \\<exists>p'.\n     fg_next_config A p' (HOs (round (rho (n + j)) p') p')\n      (SHOs (round (rho (n + j)) p') p')\n      (coords (round (rho (Suc (n + j))) p') p') (rho (n + j))\n      (rho (Suc (n + j)))\n\ngoal (1 subgoal):\n 1. round (rho (n + j)) p \\<le> round (rho (n + Suc j)) p", "by (auto simp: fg_next_config_def fg_send_msg_def fg_rcv_msg_def fg_local_def)"], ["proof (state)\nthis:\n  round (rho (n + j)) p \\<le> round (rho (n + Suc j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       round (rho n) p \\<le> round (rho (n + i)) p \\<Longrightarrow>\n       round (rho n) p \\<le> round (rho (n + Suc i)) p", "with ih"], ["proof (chain)\npicking this:\n  round (rho n) p \\<le> round (rho (n + j)) p\n  round (rho (n + j)) p \\<le> round (rho (n + Suc j)) p", "show \"?P (Suc j)\""], ["proof (prove)\nusing this:\n  round (rho n) p \\<le> round (rho (n + j)) p\n  round (rho (n + j)) p \\<le> round (rho (n + Suc j)) p\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho (n + Suc j)) p", "by auto"], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho (n + Suc j)) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho (n + i)) p\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "}"], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho (n + ?i2)) p\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "with k"], ["proof (chain)\npicking this:\n  m = n + k\n  round (rho n) p \\<le> round (rho (n + ?i2)) p", "show ?thesis"], ["proof (prove)\nusing this:\n  m = n + k\n  round (rho n) p \\<le> round (rho (n + ?i2)) p\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> round (rho m) p", "by simp"], ["proof (state)\nthis:\n  round (rho n) p \\<le> round (rho m) p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Combining the two preceding lemmas, it follows that the local states\n  of process \\<open>p\\<close> at two configurations are the same if these \n  configurations have the same round number.\n\\<close>"], ["", "lemma fg_same_round_same_state:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and rd: \"round (rho m) p = round (rho n) p\"\n  shows \"state (rho m) p = state (rho n) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "fix k i"], ["proof (state)\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "have \"round (rho (k+i)) p = round (rho k) p \n          \\<Longrightarrow> state (rho (k+i)) p = state (rho k) p\"\n      (is \"?R i \\<Longrightarrow> ?S i\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n    state (rho (k + i)) p = state (rho k) p", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. round (rho (k + 0)) p = round (rho k) p \\<Longrightarrow>\n    state (rho (k + 0)) p = state (rho k) p\n 2. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "show \"?S 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (rho (k + 0)) p = state (rho k) p", "by simp"], ["proof (state)\nthis:\n  state (rho (k + 0)) p = state (rho k) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "assume ih: \"?R j \\<Longrightarrow> ?S j\" \n         and r: \"round (rho (k + Suc j)) p = round (rho k) p\""], ["proof (state)\nthis:\n  round (rho (k + j)) p = round (rho k) p \\<Longrightarrow>\n  state (rho (k + j)) p = state (rho k) p\n  round (rho (k + Suc j)) p = round (rho k) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have 1: \"round (rho k) p \\<le> round (rho (k+j)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho k) p \\<le> round (rho (k + j)) p", "by (auto elim: fg_round_numbers_increase)"], ["proof (state)\nthis:\n  round (rho k) p \\<le> round (rho (k + j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have 2: \"round (rho (k+j)) p \\<le> round (rho (k + Suc j)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho (k + j)) p \\<le> round (rho (k + Suc j)) p", "by (auto elim: fg_round_numbers_increase)"], ["proof (state)\nthis:\n  round (rho (k + j)) p \\<le> round (rho (k + Suc j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "from 1 2 r"], ["proof (chain)\npicking this:\n  round (rho k) p \\<le> round (rho (k + j)) p\n  round (rho (k + j)) p \\<le> round (rho (k + Suc j)) p\n  round (rho (k + Suc j)) p = round (rho k) p", "have 3: \"round (rho (k+j)) p = round (rho k) p\""], ["proof (prove)\nusing this:\n  round (rho k) p \\<le> round (rho (k + j)) p\n  round (rho (k + j)) p \\<le> round (rho (k + Suc j)) p\n  round (rho (k + Suc j)) p = round (rho k) p\n\ngoal (1 subgoal):\n 1. round (rho (k + j)) p = round (rho k) p", "by auto"], ["proof (state)\nthis:\n  round (rho (k + j)) p = round (rho k) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "with r"], ["proof (chain)\npicking this:\n  round (rho (k + Suc j)) p = round (rho k) p\n  round (rho (k + j)) p = round (rho k) p", "have \"round (rho (Suc (k+j))) p = round (rho (k+j)) p\""], ["proof (prove)\nusing this:\n  round (rho (k + Suc j)) p = round (rho k) p\n  round (rho (k + j)) p = round (rho k) p\n\ngoal (1 subgoal):\n 1. round (rho (Suc (k + j))) p = round (rho (k + j)) p", "by simp"], ["proof (state)\nthis:\n  round (rho (Suc (k + j))) p = round (rho (k + j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho (Suc (k + j))) p = round (rho (k + j)) p", "have \"state (rho (Suc (k+j))) p = state (rho (k+j)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho (Suc (k + j))) p = round (rho (k + j)) p\n\ngoal (1 subgoal):\n 1. state (rho (Suc (k + j))) p = state (rho (k + j)) p", "by (auto elim: fg_state_change)"], ["proof (state)\nthis:\n  state (rho (Suc (k + j))) p = state (rho (k + j)) p\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n                state (rho (k + i)) p = state (rho k) p;\n        round (rho (k + Suc i)) p = round (rho k) p\\<rbrakk>\n       \\<Longrightarrow> state (rho (k + Suc i)) p = state (rho k) p", "with 3 ih"], ["proof (chain)\npicking this:\n  round (rho (k + j)) p = round (rho k) p\n  round (rho (k + j)) p = round (rho k) p \\<Longrightarrow>\n  state (rho (k + j)) p = state (rho k) p\n  state (rho (Suc (k + j))) p = state (rho (k + j)) p", "show \"?S (Suc j)\""], ["proof (prove)\nusing this:\n  round (rho (k + j)) p = round (rho k) p\n  round (rho (k + j)) p = round (rho k) p \\<Longrightarrow>\n  state (rho (k + j)) p = state (rho k) p\n  state (rho (Suc (k + j))) p = state (rho (k + j)) p\n\ngoal (1 subgoal):\n 1. state (rho (k + Suc j)) p = state (rho k) p", "by simp"], ["proof (state)\nthis:\n  state (rho (k + Suc j)) p = state (rho k) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  round (rho (k + i)) p = round (rho k) p \\<Longrightarrow>\n  state (rho (k + i)) p = state (rho k) p\n\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "}"], ["proof (state)\nthis:\n  round (rho (?k2 + ?i2)) p = round (rho ?k2) p \\<Longrightarrow>\n  state (rho (?k2 + ?i2)) p = state (rho ?k2) p\n\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "note aux = this"], ["proof (state)\nthis:\n  round (rho (?k2 + ?i2)) p = round (rho ?k2) p \\<Longrightarrow>\n  state (rho (?k2 + ?i2)) p = state (rho ?k2) p\n\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "proof (cases \"n \\<le> m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p\n 2. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "case True"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p\n 2. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "then"], ["proof (chain)\npicking this:\n  n \\<le> m", "obtain k where \"m = n+k\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>k. m = n + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  m = n + k\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p\n 2. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "with rd"], ["proof (chain)\npicking this:\n  round (rho m) p = round (rho n) p\n  m = n + k", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho m) p = round (rho n) p\n  m = n + k\n\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "by (auto simp: aux)"], ["proof (state)\nthis:\n  state (rho m) p = state (rho n) p\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "case False"], ["proof (state)\nthis:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "hence \"m \\<le> n\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by simp"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "then"], ["proof (chain)\npicking this:\n  m \\<le> n", "obtain k where \"n = m+k\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = m + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  n = m + k\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> state (rho m) p = state (rho n) p", "with rd"], ["proof (chain)\npicking this:\n  round (rho m) p = round (rho n) p\n  n = m + k", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho m) p = round (rho n) p\n  n = m + k\n\ngoal (1 subgoal):\n 1. state (rho m) p = state (rho n) p", "by (auto simp: aux)"], ["proof (state)\nthis:\n  state (rho m) p = state (rho n) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  state (rho m) p = state (rho n) p\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Since every process executes every round, function \\<open>fg_startRound\\<close>\n  is well-defined. We also list a few facts about \\<open>fg_startRound\\<close> that\n  will be used to show that it is a ``stuttering sampling function'',\n  a notion introduced in the theories about stuttering equivalence.\n\\<close>"], ["", "lemma fg_start_round:\n  assumes \"fg_run A rho HOs SHOs coords\"\n  shows \"round (rho (fg_start_round rho p r)) p = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p = r", "using assms"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p = r", "by (auto simp: fg_run_def fg_start_round_def intro: LeastI_ex)"], ["", "lemma fg_start_round_smallest:\n  assumes \"round (rho k) p = r\"\n  shows \"fg_start_round rho p r \\<le> (k::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fg_start_round rho p r \\<le> k", "using assms"], ["proof (prove)\nusing this:\n  round (rho k) p = r\n\ngoal (1 subgoal):\n 1. fg_start_round rho p r \\<le> k", "unfolding fg_start_round_def"], ["proof (prove)\nusing this:\n  round (rho k) p = r\n\ngoal (1 subgoal):\n 1. (LEAST n. round (rho n) p = r) \\<le> k", "by (rule Least_le)"], ["", "lemma fg_start_round_later:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and r: \"round (rho n) p = r\" and r': \"r < r'\"\n  shows \"n < fg_start_round rho p r'\" (is \"_ < ?start\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. n < fg_start_round rho p r'", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n < fg_start_round rho p r' \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> n < fg_start_round rho p r'\n\ngoal (1 subgoal):\n 1. \\<not> n < fg_start_round rho p r' \\<Longrightarrow> False", "hence start: \"?start \\<le> n\""], ["proof (prove)\nusing this:\n  \\<not> n < fg_start_round rho p r'\n\ngoal (1 subgoal):\n 1. fg_start_round rho p r' \\<le> n", "by simp"], ["proof (state)\nthis:\n  fg_start_round rho p r' \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n < fg_start_round rho p r' \\<Longrightarrow> False", "from rho this"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  fg_start_round rho p r' \\<le> n", "have \"round (rho ?start) p \\<le> round (rho n) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  fg_start_round rho p r' \\<le> n\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r')) p \\<le> round (rho n) p", "by (rule fg_round_numbers_increase)"], ["proof (state)\nthis:\n  round (rho (fg_start_round rho p r')) p \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. \\<not> n < fg_start_round rho p r' \\<Longrightarrow> False", "with r"], ["proof (chain)\npicking this:\n  round (rho n) p = r\n  round (rho (fg_start_round rho p r')) p \\<le> round (rho n) p", "have \"r' \\<le> r\""], ["proof (prove)\nusing this:\n  round (rho n) p = r\n  round (rho (fg_start_round rho p r')) p \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. r' \\<le> r", "by (simp add: fg_start_round[OF rho])"], ["proof (state)\nthis:\n  r' \\<le> r\n\ngoal (1 subgoal):\n 1. \\<not> n < fg_start_round rho p r' \\<Longrightarrow> False", "with r'"], ["proof (chain)\npicking this:\n  r < r'\n  r' \\<le> r", "show \"False\""], ["proof (prove)\nusing this:\n  r < r'\n  r' \\<le> r\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fg_start_round_0:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"fg_start_round rho p 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have \"round (rho 0) p = 0\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho 0) p = 0", "by (auto simp: fg_run_def fg_init_config_def)"], ["proof (state)\nthis:\n  round (rho 0) p = 0\n\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "hence \"fg_start_round rho p 0 \\<le> 0\""], ["proof (prove)\nusing this:\n  round (rho 0) p = 0\n\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 \\<le> 0", "by (rule fg_start_round_smallest)"], ["proof (state)\nthis:\n  fg_start_round rho p 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "thus ?thesis"], ["proof (prove)\nusing this:\n  fg_start_round rho p 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "by simp"], ["proof (state)\nthis:\n  fg_start_round rho p 0 = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fg_start_round_strict_mono:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"strict_mono (fg_start_round rho p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (fg_start_round rho p)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x < y \\<Longrightarrow>\n       fg_start_round rho p x < fg_start_round rho p y", "fix r r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x < y \\<Longrightarrow>\n       fg_start_round rho p x < fg_start_round rho p y", "assume r: \"(r::nat) < r'\""], ["proof (state)\nthis:\n  r < r'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x < y \\<Longrightarrow>\n       fg_start_round rho p x < fg_start_round rho p y", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have \"round (rho (fg_start_round rho p r)) p = r\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p = r", "by (rule fg_start_round)"], ["proof (state)\nthis:\n  round (rho (fg_start_round rho p r)) p = r\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       x < y \\<Longrightarrow>\n       fg_start_round rho p x < fg_start_round rho p y", "from rho this r"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho (fg_start_round rho p r)) p = r\n  r < r'", "show \"fg_start_round rho p r < fg_start_round rho p r'\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho (fg_start_round rho p r)) p = r\n  r < r'\n\ngoal (1 subgoal):\n 1. fg_start_round rho p r < fg_start_round rho p r'", "by (rule fg_start_round_later)"], ["proof (state)\nthis:\n  fg_start_round rho p r < fg_start_round rho p r'\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Process \\<open>p\\<close> is at round \\<open>r\\<close> at all configurations between \n  the start of round \\<open>r\\<close> and the start of round \\<open>r+1\\<close>.\n  By lemma \\<open>fg_same_round_same_state\\<close>, this implies that the\n  local state of process \\<open>p\\<close> is the same at all these configurations.\n\\<close>"], ["", "lemma fg_round_between_start_rounds:\nassumes rho: \"fg_run A rho HOs SHOs coords\"\n    and 1: \"fg_start_round rho p r \\<le> n\"\n    and 2: \"n < fg_start_round rho p (Suc r)\"\nshows \"round (rho n) p = r\" (is \"?rd = r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p = r", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. round (rho n) p \\<le> r\n 2. r \\<le> round (rho n) p", "from 1"], ["proof (chain)\npicking this:\n  fg_start_round rho p r \\<le> n", "have \"round (rho (fg_start_round rho p r)) p \\<le> ?rd\""], ["proof (prove)\nusing this:\n  fg_start_round rho p r \\<le> n\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p \\<le> round (rho n) p", "by (rule fg_round_numbers_increase[OF rho])"], ["proof (state)\nthis:\n  round (rho (fg_start_round rho p r)) p \\<le> round (rho n) p\n\ngoal (2 subgoals):\n 1. round (rho n) p \\<le> r\n 2. r \\<le> round (rho n) p", "thus \"r \\<le> ?rd\""], ["proof (prove)\nusing this:\n  round (rho (fg_start_round rho p r)) p \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. r \\<le> round (rho n) p", "by (simp add: fg_start_round[OF rho])"], ["proof (state)\nthis:\n  r \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> r", "show \"?rd \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p \\<le> r", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> round (rho n) p \\<le> r\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "hence \"Suc r \\<le> ?rd\""], ["proof (prove)\nusing this:\n  \\<not> round (rho n) p \\<le> r\n\ngoal (1 subgoal):\n 1. Suc r \\<le> round (rho n) p", "by simp"], ["proof (state)\nthis:\n  Suc r \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "hence \"fg_start_round rho p (Suc r) \\<le> fg_start_round rho p ?rd\""], ["proof (prove)\nusing this:\n  Suc r \\<le> round (rho n) p\n\ngoal (1 subgoal):\n 1. fg_start_round rho p (Suc r)\n    \\<le> fg_start_round rho p (round (rho n) p)", "by (rule rho[THEN fg_start_round_strict_mono, THEN strict_mono_mono, \n                   THEN monoD])"], ["proof (state)\nthis:\n  fg_start_round rho p (Suc r) \\<le> fg_start_round rho p (round (rho n) p)\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  fg_start_round rho p (Suc r) \\<le> fg_start_round rho p (round (rho n) p)\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "have \"... \\<le> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fg_start_round rho p (round (rho n) p) \\<le> n", "by (auto intro: fg_start_round_smallest)"], ["proof (state)\nthis:\n  fg_start_round rho p (round (rho n) p) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  fg_start_round rho p (round (rho n) p) \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "note 2"], ["proof (state)\nthis:\n  n < fg_start_round rho p (Suc r)\n\ngoal (1 subgoal):\n 1. \\<not> round (rho n) p \\<le> r \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) < fg_start_round rho p (Suc r)", "show \"False\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) < fg_start_round rho p (Suc r)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  round (rho n) p \\<le> r\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  For any process \\<open>p\\<close> and round \\<open>r\\<close> there is some instant \\<open>n\\<close>\n  where \\<open>p\\<close> executes a local transition from round \\<open>r\\<close>. In fact,\n  \\<open>n+1\\<close> marks the start of round \\<open>r+1\\<close>.\n\\<close>"], ["", "lemma fg_local_transition_from_round:\nassumes rho: \"fg_run A rho HOs SHOs coords\"\nobtains n where \"round (rho n) p = r\"\n            and \"fg_start_round rho p (Suc r) = Suc n\"\n            and \"fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"fg_start_round rho p (Suc r) \\<noteq> 0\" (is \"?start \\<noteq> 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. fg_start_round rho p (Suc r) \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_start_round rho p (Suc r) = 0 \\<Longrightarrow> False", "assume contr: \"?start = 0\""], ["proof (state)\nthis:\n  fg_start_round rho p (Suc r) = 0\n\ngoal (1 subgoal):\n 1. fg_start_round rho p (Suc r) = 0 \\<Longrightarrow> False", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "have \"round (rho ?start) p = Suc r\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p (Suc r))) p = Suc r", "by (rule fg_start_round)"], ["proof (state)\nthis:\n  round (rho (fg_start_round rho p (Suc r))) p = Suc r\n\ngoal (1 subgoal):\n 1. fg_start_round rho p (Suc r) = 0 \\<Longrightarrow> False", "with contr rho"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) = 0\n  fg_run A rho HOs SHOs coords\n  round (rho (fg_start_round rho p (Suc r))) p = Suc r", "show \"False\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) = 0\n  fg_run A rho HOs SHOs coords\n  round (rho (fg_start_round rho p (Suc r))) p = Suc r\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: fg_run_def fg_init_config_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fg_start_round rho p (Suc r) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) \\<noteq> 0", "obtain n where n: \"?start = Suc n\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        fg_start_round rho p (Suc r) = Suc n \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: gr0_conv_Suc)"], ["proof (state)\nthis:\n  fg_start_round rho p (Suc r) = Suc n\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with fg_start_round[OF rho, of p \"Suc r\"]"], ["proof (chain)\npicking this:\n  round (rho (fg_start_round rho p (Suc r))) p = Suc r\n  fg_start_round rho p (Suc r) = Suc n", "have 0: \"round (rho (Suc n)) p = Suc r\""], ["proof (prove)\nusing this:\n  round (rho (fg_start_round rho p (Suc r))) p = Suc r\n  fg_start_round rho p (Suc r) = Suc n\n\ngoal (1 subgoal):\n 1. round (rho (Suc n)) p = Suc r", "by simp"], ["proof (state)\nthis:\n  round (rho (Suc n)) p = Suc r\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have 1: \"round (rho n) p = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. round (rho n) p = r", "proof (rule fg_round_between_start_rounds[OF rho])"], ["proof (state)\ngoal (2 subgoals):\n 1. fg_start_round rho p r \\<le> n\n 2. n < fg_start_round rho p (Suc r)", "have \"fg_start_round rho p r < fg_start_round rho p (Suc r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fg_start_round rho p r < fg_start_round rho p (Suc r)", "by (rule fg_start_round_strict_mono[OF rho, THEN strict_monoD]) simp"], ["proof (state)\nthis:\n  fg_start_round rho p r < fg_start_round rho p (Suc r)\n\ngoal (2 subgoals):\n 1. fg_start_round rho p r \\<le> n\n 2. n < fg_start_round rho p (Suc r)", "with n"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) = Suc n\n  fg_start_round rho p r < fg_start_round rho p (Suc r)", "show \"fg_start_round rho p r \\<le> n\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) = Suc n\n  fg_start_round rho p r < fg_start_round rho p (Suc r)\n\ngoal (1 subgoal):\n 1. fg_start_round rho p r \\<le> n", "by simp"], ["proof (state)\nthis:\n  fg_start_round rho p r \\<le> n\n\ngoal (1 subgoal):\n 1. n < fg_start_round rho p (Suc r)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n < fg_start_round rho p (Suc r)", "from n"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) = Suc n", "show \"n < ?start\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) = Suc n\n\ngoal (1 subgoal):\n 1. n < fg_start_round rho p (Suc r)", "by simp"], ["proof (state)\nthis:\n  n < fg_start_round rho p (Suc r)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  round (rho n) p = r\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "obtain p' where\n    \"fg_next_config A p' (HOs (round (rho n) p') p')\n                         (SHOs (round (rho n) p') p')\n                         (coords (round (rho (Suc n)) p') p')\n                         (rho n) (rho (Suc n))\"\n    (is \"fg_next_config _ _ ?HO ?SHO ?crd ?cfg ?cfg'\")"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        fg_next_config A p' (HOs (round (rho n) p') p')\n         (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n         (rho n) (rho (Suc n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp: fg_run_def)"], ["proof (state)\nthis:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\""], ["proof (prove)\nusing this:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "proof (auto simp: fg_next_config_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q.\n       fg_send_msg A p' q (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "fix q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q.\n       fg_send_msg A p' q (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "assume \"fg_send_msg A p' q ?cfg ?cfg'\"\n      \\<comment> \\<open>impossible because round changes\\<close>"], ["proof (state)\nthis:\n  fg_send_msg A p' q (rho n) (rho (Suc n))\n\ngoal (3 subgoals):\n 1. \\<And>q.\n       fg_send_msg A p' q (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "with 0 1"], ["proof (chain)\npicking this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_send_msg A p' q (rho n) (rho (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_send_msg A p' q (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "by (auto simp: fg_send_msg_def)"], ["proof (state)\nthis:\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "assume \"fg_rcv_msg p' q ?HO ?SHO ?cfg ?cfg'\"\n      \\<comment> \\<open>impossible because round changes\\<close>"], ["proof (state)\nthis:\n  fg_rcv_msg p' q (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>q.\n       fg_rcv_msg p' q (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "with 0 1"], ["proof (chain)\npicking this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_rcv_msg p' q (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_rcv_msg p' q (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "by (auto simp: fg_rcv_msg_def)"], ["proof (state)\nthis:\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "assume \"fg_local A p' ?HO ?crd ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "with 0 1"], ["proof (chain)\npicking this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho (Suc n)) p = Suc r\n  round (rho n) p = r\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "by (cases \"p' = p\") (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with 1 n that"], ["proof (chain)\npicking this:\n  round (rho n) p = r\n  fg_start_round rho p (Suc r) = Suc n\n  \\<lbrakk>round (rho ?n) p = r; fg_start_round rho p (Suc r) = Suc ?n;\n   fg_local A p (HOs r p) (coords (Suc r) p) (rho ?n)\n    (rho (Suc ?n))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  round (rho n) p = r\n  fg_start_round rho p (Suc r) = Suc n\n  \\<lbrakk>round (rho ?n) p = r; fg_start_round rho p (Suc r) = Suc ?n;\n   fg_local A p (HOs r p) (coords (Suc r) p) (rho ?n)\n    (rho (Suc ?n))\\<rbrakk>\n  \\<Longrightarrow> thesis\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now prove two invariants asserted in \\cite{saad:reduction}. The first\n  one states that any message \\<open>m\\<close> in transit from process \\<open>p\\<close>\n  to process \\<open>q\\<close> for round \\<open>r\\<close> corresponds to the message\n  computed by \\<open>p\\<close> for \\<open>q\\<close>, given \\<open>p\\<close>'s state at its\n  \\<open>r\\<close>th local transition.\n\\<close>"], ["", "lemma fg_invariant1:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"(p,r,q,m) \\<in> network (rho n)\" (is \"?msg n\")\n  shows \"m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "using m"], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "proof (induct n)\n  \\<comment> \\<open>the base case is trivial because the network is empty\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. (p, r, q, m) \\<in> network (rho 0) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "assume \"?msg 0\""], ["proof (state)\nthis:\n  (p, r, q, m) \\<in> network (rho 0)\n\ngoal (2 subgoals):\n 1. (p, r, q, m) \\<in> network (rho 0) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  (p, r, q, m) \\<in> network (rho 0)", "show \"?thesis\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  (p, r, q, m) \\<in> network (rho 0)\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "by (auto simp: fg_run_def fg_init_config_def)"], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "assume m': \"?msg (Suc n)\" and ih: \"?msg n \\<Longrightarrow> ?thesis\""], ["proof (state)\nthis:\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "obtain p' where\n    \"fg_next_config A p' (HOs (round (rho n) p') p') \n                         (SHOs (round (rho n) p') p')\n                         (coords (round (rho (Suc n)) p') p')\n                         (rho n) (rho (Suc n))\"\n    (is \"fg_next_config _ _ ?HO ?SHO ?crd ?cfg ?cfg'\")"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        fg_next_config A p' (HOs (round (rho n) p') p')\n         (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n         (rho n) (rho (Suc n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp: fg_run_def)"], ["proof (state)\nthis:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>(p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n                m =\n                sendMsg A r p q (state (rho (fg_start_round rho p r)) p);\n        (p, r, q, m) \\<in> network (rho (Suc n))\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A r p q\n                          (state (rho (fg_start_round rho p r)) p)", "thus \"?thesis\""], ["proof (prove)\nusing this:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "proof (auto simp: fg_next_config_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "txt \\<open>\n      Only \\<open>fg_send_msg\\<close> transitions for process \\<open>p\\<close> are interesting,\n      since all other transitions cannot add a message for \\<open>p\\<close>, hence we can\n      apply the induction hypothesis.\n\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "fix q'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "assume send: \"fg_send_msg A p' q' ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "proof (cases \"?msg n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "case True"], ["proof (state)\nthis:\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (2 subgoals):\n 1. (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with ih"], ["proof (chain)\npicking this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "."], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "case False"], ["proof (state)\nthis:\n  (p, r, q, m) \\<notin> network (rho n)\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with send m'"], ["proof (chain)\npicking this:\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  (p, r, q, m) \\<notin> network (rho n)", "have 1: \"p' = p\" \"round ?cfg p = r\"\n                    and 2: \"m = sendMsg A r p q (state ?cfg p)\""], ["proof (prove)\nusing this:\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  (p, r, q, m) \\<notin> network (rho n)\n\ngoal (1 subgoal):\n 1. (p' = p &&& round (rho n) p = r) &&&\n    m = sendMsg A r p q (state (rho n) p)", "by (auto simp: fg_send_msg_def)"], ["proof (state)\nthis:\n  p' = p\n  round (rho n) p = r\n  m = sendMsg A r p q (state (rho n) p)\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "from rho 1"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  p' = p\n  round (rho n) p = r", "have \"state ?cfg p = state (rho (fg_start_round rho p r)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  p' = p\n  round (rho n) p = r\n\ngoal (1 subgoal):\n 1. state (rho n) p = state (rho (fg_start_round rho p r)) p", "by (auto simp: fg_start_round fg_same_round_same_state)"], ["proof (state)\nthis:\n  state (rho n) p = state (rho (fg_start_round rho p r)) p\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<notin> network (rho n) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with 1 2"], ["proof (chain)\npicking this:\n  p' = p\n  round (rho n) p = r\n  m = sendMsg A r p q (state (rho n) p)\n  state (rho n) p = state (rho (fg_start_round rho p r)) p", "show ?thesis"], ["proof (prove)\nusing this:\n  p' = p\n  round (rho n) p = r\n  m = sendMsg A r p q (state (rho n) p)\n  state (rho n) p = state (rho (fg_start_round rho p r)) p\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "by simp"], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "fix q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "assume \"fg_rcv_msg p' q' ?HO ?SHO ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with m'"], ["proof (chain)\npicking this:\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))", "have \"?msg n\""], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<in> network (rho n)", "by (auto simp: fg_rcv_msg_def)"], ["proof (state)\nthis:\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with ih"], ["proof (chain)\npicking this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "."], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "assume \"fg_local A p' ?HO ?crd ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with m'"], ["proof (chain)\npicking this:\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))", "have \"?msg n\""], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho (Suc n))\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (p, r, q, m) \\<in> network (rho n)", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "with ih"], ["proof (chain)\npicking this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)", "show ?thesis"], ["proof (prove)\nusing this:\n  (p, r, q, m) \\<in> network (rho n) \\<Longrightarrow>\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n  (p, r, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)", "."], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m = sendMsg A r p q (state (rho (fg_start_round rho p r)) p)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The second invariant states that if process \\<open>q\\<close> received message\n  \\<open>m\\<close> from process \\<open>p\\<close>, then (a) \\<open>p\\<close> is in \\<open>q\\<close>'s\n  HO set for that round \\<open>m\\<close>, and (b) if \\<open>p\\<close> is moreover in\n  \\<open>q\\<close>'s SHO set, then \\<open>m\\<close> is the message that \\<open>p\\<close> computed\n  at the start of that round.\n\\<close>"], ["", "lemma fg_invariant2a:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"rcvd (rho n) q p = Some m\" (is \"?rcvd n\")\n  shows \"p \\<in> HOs (round (rho n) q) q\"\n  (is \"p \\<in> HOs (?rd n) q\" is \"?P n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho n) q) q", "using m"], ["proof (prove)\nusing this:\n  rcvd (rho n) q p = Some m\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho n) q) q", "proof (induct n)\n  \\<comment> \\<open>The base case is trivial because @{text q} has not received any message initially\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. rcvd (rho 0) q p = Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho 0) q) q\n 2. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "assume \"?rcvd 0\""], ["proof (state)\nthis:\n  rcvd (rho 0) q p = Some m\n\ngoal (2 subgoals):\n 1. rcvd (rho 0) q p = Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho 0) q) q\n 2. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  rcvd (rho 0) q p = Some m", "show \"?P 0\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  rcvd (rho 0) q p = Some m\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho 0) q) q", "by (auto simp: fg_run_def fg_init_config_def)"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho 0) q) q\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "assume rcvd: \"?rcvd (Suc n)\" and ih: \"?rcvd n \\<Longrightarrow> ?P n\"\n  \\<comment> \\<open>For the inductive step we distinguish the possible transitions\\<close>"], ["proof (state)\nthis:\n  rcvd (rho (Suc n)) q p = Some m\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "obtain p' where\n    \"fg_next_config A p' (HOs (round (rho n) p') p') \n                         (SHOs (round (rho n) p') p')\n                         (coords (round (rho (Suc n)) p') p')\n                         (rho n) (rho (Suc n))\"\n    (is \"fg_next_config _ _ ?HO ?SHO ?crd ?cfg ?cfg'\")"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        fg_next_config A p' (HOs (round (rho n) p') p')\n         (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n         (rho n) (rho (Suc n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp: fg_run_def)"], ["proof (state)\nthis:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>rcvd (rho n) q p = Some m \\<Longrightarrow>\n                p \\<in> HOs (round (rho n) q) q;\n        rcvd (rho (Suc n)) q p = Some m\\<rbrakk>\n       \\<Longrightarrow> p \\<in> HOs (round (rho (Suc n)) q) q", "thus \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "proof (auto simp: fg_next_config_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "txt \\<open>\n      Except for \\<open>fg_rcv_msg\\<close> steps of process \\<open>q\\<close>, the proof\n      is immediately reduced to the induction hypothesis.\n\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "fix q'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "assume rcvmsg: \"fg_rcv_msg p' q' ?HO ?SHO ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "hence rd: \"?rd (Suc n) = ?rd n\""], ["proof (prove)\nusing this:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_rcv_msg_def)"], ["proof (state)\nthis:\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "show \"?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "proof (cases \"?rcvd n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. rcvd (rho n) q p = Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q\n 2. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "case True"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n\ngoal (2 subgoals):\n 1. rcvd (rho n) q p = Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q\n 2. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with ih rd"], ["proof (chain)\npicking this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p = Some m", "show ?thesis"], ["proof (prove)\nusing this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p = Some m\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "by simp"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "case False"], ["proof (state)\nthis:\n  rcvd (rho n) q p \\<noteq> Some m\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with rcvd rcvmsg rd"], ["proof (chain)\npicking this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p \\<noteq> Some m", "show ?thesis"], ["proof (prove)\nusing this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p \\<noteq> Some m\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "by (auto simp: fg_rcv_msg_def)"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "fix q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "assume \"fg_send_msg A p' q' ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with rcvd"], ["proof (chain)\npicking this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_send_msg A p' q' (rho n) (rho (Suc n))", "have \"?rcvd n\" and \"?rd (Suc n) = ?rd n\""], ["proof (prove)\nusing this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p = Some m &&& round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_send_msg_def)"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       p \\<in> HOs (round (rho (Suc n)) q) q\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with ih"], ["proof (chain)\npicking this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "by simp"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "assume \"fg_local A p' ?HO ?crd ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with rcvd"], ["proof (chain)\npicking this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))", "have \"?rcvd n\" and \"?rd (Suc n) = ?rd n\"\n      \\<comment> \\<open>in fact, @{text \"p' = q\"} is impossible because the @{text rcvd} field of @{text p'} is cleared\\<close>"], ["proof (prove)\nusing this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p = Some m &&& round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    p \\<in> HOs (round (rho (Suc n)) q) q", "with ih"], ["proof (chain)\npicking this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  rcvd (rho n) q p = Some m \\<Longrightarrow>\n  p \\<in> HOs (round (rho n) q) q\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. p \\<in> HOs (round (rho (Suc n)) q) q", "by simp"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> HOs (round (rho (Suc n)) q) q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fg_invariant2b:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and m: \"rcvd (rho n) q p = Some m\" (is \"?rcvd n\")\n      and sho: \"p \\<in> SHOs (round (rho n) q) q\" (is \"p \\<in> SHOs (?rd n) q\")\n  shows \"m = sendMsg A (?rd n) p q \n                     (state (rho (fg_start_round rho p (?rd n))) p)\"\n        (is \"?P n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho n) q) p q\n     (state (rho (fg_start_round rho p (round (rho n) q))) p)", "using m sho"], ["proof (prove)\nusing this:\n  rcvd (rho n) q p = Some m\n  p \\<in> SHOs (round (rho n) q) q\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho n) q) p q\n     (state (rho (fg_start_round rho p (round (rho n) q))) p)", "proof (induct n)\n  \\<comment> \\<open>The base case is trivial because @{text q} has not received any message initially\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>rcvd (rho 0) q p = Some m;\n     p \\<in> SHOs (round (rho 0) q) q\\<rbrakk>\n    \\<Longrightarrow> m =\n                      sendMsg A (round (rho 0) q) p q\n                       (state (rho (fg_start_round rho p (round (rho 0) q)))\n                         p)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "assume \"?rcvd 0\""], ["proof (state)\nthis:\n  rcvd (rho 0) q p = Some m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>rcvd (rho 0) q p = Some m;\n     p \\<in> SHOs (round (rho 0) q) q\\<rbrakk>\n    \\<Longrightarrow> m =\n                      sendMsg A (round (rho 0) q) p q\n                       (state (rho (fg_start_round rho p (round (rho 0) q)))\n                         p)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  rcvd (rho 0) q p = Some m", "show \"?P 0\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  rcvd (rho 0) q p = Some m\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho 0) q) p q\n     (state (rho (fg_start_round rho p (round (rho 0) q))) p)", "by (auto simp: fg_run_def fg_init_config_def)"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho 0) q) p q\n   (state (rho (fg_start_round rho p (round (rho 0) q))) p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "assume rcvd: \"?rcvd (Suc n)\" and p: \"p \\<in> SHOs (?rd (Suc n)) q\"\n     and ih: \"?rcvd n \\<Longrightarrow> p \\<in> SHOs (?rd n) q \\<Longrightarrow> ?P n\"\n  \\<comment> \\<open>For the inductive step we again distinguish the possible transitions\\<close>"], ["proof (state)\nthis:\n  rcvd (rho (Suc n)) q p = Some m\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "obtain p' where\n    \"fg_next_config A p' (HOs (round (rho n) p') p')\n                         (SHOs (round (rho n) p') p')\n                         (coords (round (rho (Suc n)) p') p')\n                         (rho n) (rho (Suc n))\"\n    (is \"fg_next_config _ _ ?HO ?SHO ?crd ?cfg ?cfg'\")"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        fg_next_config A p' (HOs (round (rho n) p') p')\n         (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p')\n         (rho n) (rho (Suc n)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp: fg_run_def)"], ["proof (state)\nthis:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>rcvd (rho n) q p = Some m;\n                 p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n                \\<Longrightarrow> m =\n                                  sendMsg A (round (rho n) q) p q\n                                   (state\n                                     (rho\n (fg_start_round rho p (round (rho n) q)))\n                                     p);\n        rcvd (rho (Suc n)) q p = Some m;\n        p \\<in> SHOs (round (rho (Suc n)) q) q\\<rbrakk>\n       \\<Longrightarrow> m =\n                         sendMsg A (round (rho (Suc n)) q) p q\n                          (state\n                            (rho (fg_start_round rho p\n                                   (round (rho (Suc n)) q)))\n                            p)", "thus \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  fg_next_config A p' (HOs (round (rho n) p') p')\n   (SHOs (round (rho n) p') p') (coords (round (rho (Suc n)) p') p') (rho n)\n   (rho (Suc n))\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "proof (auto simp: fg_next_config_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "txt \\<open>\n      Except for \\<open>fg_rcv_msg\\<close> steps of process \\<open>q\\<close>, the proof\n      is immediately reduced to the induction hypothesis.\n\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "fix q'"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "assume rcvmsg: \"fg_rcv_msg p' q' ?HO ?SHO ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "hence rd: \"?rd (Suc n) = ?rd n\""], ["proof (prove)\nusing this:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_rcv_msg_def)"], ["proof (state)\nthis:\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (3 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. \\<And>qa.\n       fg_rcv_msg p' qa (HOs (round (rho n) p') p')\n        (SHOs (round (rho n) p') p') (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 3. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "show \"?P (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "proof (cases \"?rcvd n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. rcvd (rho n) q p = Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "case True"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n\ngoal (2 subgoals):\n 1. rcvd (rho n) q p = Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with ih p rd"], ["proof (chain)\npicking this:\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p = Some m", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  rcvd (rho n) q p = Some m\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "by simp"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "case False"], ["proof (state)\nthis:\n  rcvd (rho n) q p \\<noteq> Some m\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "from rcvmsg"], ["proof (chain)\npicking this:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))", "obtain m' m'' where\n        \"(q', round ?cfg p', p', m') \\<in> network ?cfg\"\n        \"rcvd ?cfg' = (rcvd ?cfg)(p' := (rcvd ?cfg p')(q' := \n                          if q' \\<in> ?SHO then Some m' else Some m''))\""], ["proof (prove)\nusing this:\n  fg_rcv_msg p' q' (HOs (round (rho n) p') p') (SHOs (round (rho n) p') p')\n   (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>m' m''.\n        \\<lbrakk>(q', round (rho n) p', p', m') \\<in> network (rho n);\n         rcvd (rho (Suc n)) = (rcvd (rho n))\n         (p' := (rcvd (rho n) p')\n            (q' :=\n               if q' \\<in> SHOs (round (rho n) p') p' then Some m'\n               else Some m''))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: fg_rcv_msg_def split del: if_split_asm)"], ["proof (state)\nthis:\n  (q', round (rho n) p', p', m') \\<in> network (rho n)\n  rcvd (rho (Suc n)) = (rcvd (rho n))\n  (p' := (rcvd (rho n) p')\n     (q' :=\n        if q' \\<in> SHOs (round (rho n) p') p' then Some m' else Some m''))\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with False rcvd p rd"], ["proof (chain)\npicking this:\n  rcvd (rho n) q p \\<noteq> Some m\n  rcvd (rho (Suc n)) q p = Some m\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  (q', round (rho n) p', p', m') \\<in> network (rho n)\n  rcvd (rho (Suc n)) = (rcvd (rho n))\n  (p' := (rcvd (rho n) p')\n     (q' :=\n        if q' \\<in> SHOs (round (rho n) p') p' then Some m' else Some m''))", "have \"(p, ?rd n, q, m) \\<in> network ?cfg\""], ["proof (prove)\nusing this:\n  rcvd (rho n) q p \\<noteq> Some m\n  rcvd (rho (Suc n)) q p = Some m\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  round (rho (Suc n)) q = round (rho n) q\n  (q', round (rho n) p', p', m') \\<in> network (rho n)\n  rcvd (rho (Suc n)) = (rcvd (rho n))\n  (p' := (rcvd (rho n) p')\n     (q' :=\n        if q' \\<in> SHOs (round (rho n) p') p' then Some m' else Some m''))\n\ngoal (1 subgoal):\n 1. (p, round (rho n) q, q, m) \\<in> network (rho n)", "by auto"], ["proof (state)\nthis:\n  (p, round (rho n) q, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p \\<noteq> Some m \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with rho rd"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho (Suc n)) q = round (rho n) q\n  (p, round (rho n) q, q, m) \\<in> network (rho n)", "show ?thesis"], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho (Suc n)) q = round (rho n) q\n  (p, round (rho n) q, q, m) \\<in> network (rho n)\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "by (auto simp: fg_invariant1)"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "fix q'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "assume \"fg_send_msg A p' q' ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with rcvd"], ["proof (chain)\npicking this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_send_msg A p' q' (rho n) (rho (Suc n))", "have \"?rcvd n\" and \"?rd (Suc n) = ?rd n\""], ["proof (prove)\nusing this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_send_msg A p' q' (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p = Some m &&& round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_send_msg_def)"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (2 subgoals):\n 1. \\<And>qa.\n       fg_send_msg A p' qa (rho n) (rho (Suc n)) \\<Longrightarrow>\n       m =\n       sendMsg A (round (rho (Suc n)) q) p q\n        (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n 2. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with p ih"], ["proof (chain)\npicking this:\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "by simp"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "assume \"fg_local A p' ?HO ?crd ?cfg ?cfg'\""], ["proof (state)\nthis:\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with rcvd"], ["proof (chain)\npicking this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))", "have \"?rcvd n\" and \"?rd (Suc n) = ?rd n\"\n      \\<comment> \\<open>in fact, @{text \"p' = q\"} is impossible because the @{text rcvd} field of @{text p'} is cleared\\<close>"], ["proof (prove)\nusing this:\n  rcvd (rho (Suc n)) q p = Some m\n  fg_local A p' (HOs (round (rho n) p') p')\n   (coords (round (rho (Suc n)) p') p') (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. rcvd (rho n) q p = Some m &&& round (rho (Suc n)) q = round (rho n) q", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. fg_local A p' (HOs (round (rho n) p') p')\n     (coords (round (rho (Suc n)) p') p') (rho n)\n     (rho (Suc n)) \\<Longrightarrow>\n    m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "with p ih"], ["proof (chain)\npicking this:\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q", "show \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  p \\<in> SHOs (round (rho (Suc n)) q) q\n  \\<lbrakk>rcvd (rho n) q p = Some m;\n   p \\<in> SHOs (round (rho n) q) q\\<rbrakk>\n  \\<Longrightarrow> m =\n                    sendMsg A (round (rho n) q) p q\n                     (state (rho (fg_start_round rho p (round (rho n) q)))\n                       p)\n  rcvd (rho n) q p = Some m\n  round (rho (Suc n)) q = round (rho n) q\n\ngoal (1 subgoal):\n 1. m =\n    sendMsg A (round (rho (Suc n)) q) p q\n     (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)", "by simp"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  m =\n  sendMsg A (round (rho (Suc n)) q) p q\n   (state (rho (fg_start_round rho p (round (rho (Suc n)) q))) p)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>From Fine-Grained to Coarse-Grained Runs\\<close>"], ["", "text \\<open>\n  The reduction theorem asserts that for any fine-grained run \\<open>rho\\<close>\n  there is a coarse-grained run such that every process sees the same\n  sequence of local states in the two runs, modulo stuttering. In other words,\n  no process can locally distinguish the two runs.\n\n  Given fine-grained run \\<open>rho\\<close>, the corresponding coarse-grained run \\<open>sigma\\<close> is \n  defined as the sequence of state vectors at the beginning of every round. \n  Notice in particular that the local states \\<open>sigma r p\\<close> and \n  \\<open>sigma r q\\<close> of two different processes \\<open>p\\<close> and \\<open>q\\<close>\n  appear at different instants in the original run \\<open>rho\\<close>. Nevertheless,\n  we prove that \\<open>sigma\\<close> is a coarse-grained run of the algorithm for\n  the same HO, SHO, and coordinator assignments. By definition (and the\n  fact that local states remain equal between \\<open>fg_start_round\\<close>\n  instants), the sequences of process states in \\<open>rho\\<close> and\n  \\<open>sigma\\<close> are easily seen to be stuttering equivalent, and this\n  will be formally stated below.\n\\<close>"], ["", "definition coarse_run where\n  \"coarse_run rho r p \\<equiv> state (rho (fg_start_round rho p r)) p\""], ["", "theorem reduction:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"CSHORun A (coarse_run rho) HOs SHOs coords\"\n        (is \"CSHORun _ ?cr _ _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. CSHORun A (coarse_run rho) HOs SHOs coords", "proof (auto simp: CSHORun_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. CHOinitConfig A (coarse_run rho 0) (coords 0)\n 2. \\<And>r.\n       CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r)\n        (coords (Suc r)) (coarse_run rho (Suc r))", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "show \"CHOinitConfig A (?cr 0) (coords 0)\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. CHOinitConfig A (coarse_run rho 0) (coords 0)", "by (auto simp: fg_run_def fg_init_config_def CHOinitConfig_def \n                   coarse_run_def fg_start_round_0[OF rho])"], ["proof (state)\nthis:\n  CHOinitConfig A (coarse_run rho 0) (coords 0)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r)\n        (coords (Suc r)) (coarse_run rho (Suc r))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r)\n        (coords (Suc r)) (coarse_run rho (Suc r))", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r)\n        (coords (Suc r)) (coarse_run rho (Suc r))", "show \"CSHOnextConfig A r (?cr r) (HOs r) (SHOs r) (coords (Suc r))\n                       (?cr (Suc r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r) (coords (Suc r))\n     (coarse_run rho (Suc r))", "proof (auto simp add: CSHOnextConfig_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "from rho[THEN fg_local_transition_from_round]"], ["proof (chain)\npicking this:\n  (\\<And>n.\n      \\<lbrakk>round (rho n) ?p = ?r;\n       fg_start_round rho ?p (Suc ?r) = Suc n;\n       fg_local A ?p (HOs ?r ?p) (coords (Suc ?r) ?p) (rho n)\n        (rho (Suc n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain n\n      where n: \"round (rho n) p = r\"\n        and start: \"fg_start_round rho p (Suc r) = Suc n\" (is \"?start = _\")\n        and loc: \"fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\"\n                 (is \"fg_local _ _ ?HO ?crd ?cfg ?cfg'\")"], ["proof (prove)\nusing this:\n  (\\<And>n.\n      \\<lbrakk>round (rho n) ?p = ?r;\n       fg_start_round rho ?p (Suc ?r) = Suc n;\n       fg_local A ?p (HOs ?r ?p) (coords (Suc ?r) ?p) (rho n)\n        (rho (Suc n))\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>round (rho n) p = r; fg_start_round rho p (Suc r) = Suc n;\n         fg_local A p (HOs r p) (coords (Suc r) p) (rho n)\n          (rho (Suc n))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  round (rho n) p = r\n  fg_start_round rho p (Suc r) = Suc n\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "have cfg: \"?cr r p = state ?cfg p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coarse_run rho r p = state (rho n) p", "unfolding coarse_run_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. state (rho (fg_start_round rho p r)) p = state (rho n) p", "proof (rule fg_same_round_same_state[OF rho])"], ["proof (state)\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p = round (rho n) p", "from n"], ["proof (chain)\npicking this:\n  round (rho n) p = r", "show \"round (rho (fg_start_round rho p r)) p = round ?cfg p\""], ["proof (prove)\nusing this:\n  round (rho n) p = r\n\ngoal (1 subgoal):\n 1. round (rho (fg_start_round rho p r)) p = round (rho n) p", "by (simp add: fg_start_round[OF rho])"], ["proof (state)\nthis:\n  round (rho (fg_start_round rho p r)) p = round (rho n) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coarse_run rho r p = state (rho n) p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "from start"], ["proof (chain)\npicking this:\n  fg_start_round rho p (Suc r) = Suc n", "have cfg': \"?cr (Suc r) p = state ?cfg' p\""], ["proof (prove)\nusing this:\n  fg_start_round rho p (Suc r) = Suc n\n\ngoal (1 subgoal):\n 1. coarse_run rho (Suc r) p = state (rho (Suc n)) p", "by (simp add: coarse_run_def)"], ["proof (state)\nthis:\n  coarse_run rho (Suc r) p = state (rho (Suc n)) p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "have rcvd: \"rcvd ?cfg p \\<in> SHOmsgVectors A r p (?cr r) ?HO (SHOs r p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rcvd (rho n) p\n    \\<in> SHOmsgVectors A r p (coarse_run rho r) (HOs r p) (SHOs r p)", "proof (auto simp: SHOmsgVectors_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q.\n       q \\<in> HOs r p \\<Longrightarrow>\n       \\<exists>y. rcvd (rho n) p q = Some y\n 2. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 3. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "fix q"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>q.\n       q \\<in> HOs r p \\<Longrightarrow>\n       \\<exists>y. rcvd (rho n) p q = Some y\n 2. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 3. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "assume \"q \\<in> ?HO\""], ["proof (state)\nthis:\n  q \\<in> HOs r p\n\ngoal (3 subgoals):\n 1. \\<And>q.\n       q \\<in> HOs r p \\<Longrightarrow>\n       \\<exists>y. rcvd (rho n) p q = Some y\n 2. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 3. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "with n loc"], ["proof (chain)\npicking this:\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n  q \\<in> HOs r p", "show \"\\<exists>m. rcvd ?cfg p q = Some m\""], ["proof (prove)\nusing this:\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n  q \\<in> HOs r p\n\ngoal (1 subgoal):\n 1. \\<exists>m. rcvd (rho n) p q = Some m", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  \\<exists>m. rcvd (rho n) p q = Some m\n\ngoal (2 subgoals):\n 1. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "fix q m"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "assume \"rcvd ?cfg p q = Some m\""], ["proof (state)\nthis:\n  rcvd (rho n) p q = Some m\n\ngoal (2 subgoals):\n 1. \\<And>q y. rcvd (rho n) p q = Some y \\<Longrightarrow> q \\<in> HOs r p\n 2. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "with rho n"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = r\n  rcvd (rho n) p q = Some m", "show \"q \\<in> ?HO\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = r\n  rcvd (rho n) p q = Some m\n\ngoal (1 subgoal):\n 1. q \\<in> HOs r p", "by (auto simp: fg_invariant2a)"], ["proof (state)\nthis:\n  q \\<in> HOs r p\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "assume sho: \"q \\<in> SHOs r p\" and ho: \"q \\<in> ?HO\""], ["proof (state)\nthis:\n  q \\<in> SHOs r p\n  q \\<in> HOs r p\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "from ho n loc"], ["proof (chain)\npicking this:\n  q \\<in> HOs r p\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))", "obtain m where \"rcvd ?cfg p q = Some m\""], ["proof (prove)\nusing this:\n  q \\<in> HOs r p\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        rcvd (rho n) p q = Some m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  rcvd (rho n) p q = Some m\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       \\<lbrakk>q \\<in> SHOs r p; q \\<in> HOs r p\\<rbrakk>\n       \\<Longrightarrow> rcvd (rho n) p q =\n                         Some (sendMsg A r q p (coarse_run rho r q))", "with rho n sho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = r\n  q \\<in> SHOs r p\n  rcvd (rho n) p q = Some m", "show \"rcvd ?cfg p q = Some (sendMsg A r q p (?cr r q))\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = r\n  q \\<in> SHOs r p\n  rcvd (rho n) p q = Some m\n\ngoal (1 subgoal):\n 1. rcvd (rho n) p q = Some (sendMsg A r q p (coarse_run rho r q))", "by (auto simp: fg_invariant2b coarse_run_def)"], ["proof (state)\nthis:\n  rcvd (rho n) p q = Some (sendMsg A r q p (coarse_run rho r q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  rcvd (rho n) p\n  \\<in> SHOmsgVectors A r p (coarse_run rho r) (HOs r p) (SHOs r p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<exists>\\<mu>\n                \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                      (SHOs r p).\n          CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n           (coarse_run rho (Suc r) p)", "with n loc cfg cfg'"], ["proof (chain)\npicking this:\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n  coarse_run rho r p = state (rho n) p\n  coarse_run rho (Suc r) p = state (rho (Suc n)) p\n  rcvd (rho n) p\n  \\<in> SHOmsgVectors A r p (coarse_run rho r) (HOs r p) (SHOs r p)", "show \"\\<exists>\\<mu> \\<in> SHOmsgVectors A r p (?cr r) ?HO (SHOs r p).\n             CnextState A r p (?cr r p) \\<mu> ?crd (?cr (Suc r) p)\""], ["proof (prove)\nusing this:\n  round (rho n) p = r\n  fg_local A p (HOs r p) (coords (Suc r) p) (rho n) (rho (Suc n))\n  coarse_run rho r p = state (rho n) p\n  coarse_run rho (Suc r) p = state (rho (Suc n)) p\n  rcvd (rho n) p\n  \\<in> SHOmsgVectors A r p (coarse_run rho r) (HOs r p) (SHOs r p)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<mu>\n             \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p)\n                   (SHOs r p).\n       CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n        (coarse_run rho (Suc r) p)", "by (auto simp: fg_local_def)"], ["proof (state)\nthis:\n  \\<exists>\\<mu>\n           \\<in>SHOmsgVectors A r p (coarse_run rho r) (HOs r p) (SHOs r p).\n     CnextState A r p (coarse_run rho r p) \\<mu> (coords (Suc r) p)\n      (coarse_run rho (Suc r) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CSHOnextConfig A r (coarse_run rho r) (HOs r) (SHOs r) (coords (Suc r))\n   (coarse_run rho (Suc r))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Locally Similar Runs and Local Properties\\<close>"], ["", "text \\<open>\n  We say that two sequences of configurations (vectors of process states)\n  are \\emph{locally similar} if for every process the sequences of its\n  process states are stuttering equivalent. Observe that different stuttering\n  reduction may be applied for every process, hence the original sequences of\n  configurations need not be stuttering equivalent and can indeed differ\n  wildly in the combinations of local states that occur.\n\n  A property of a sequence of configurations is called \\emph{local} if it\n  is insensitive to local similarity.\n\\<close>"], ["", "definition locally_similar where\n  \"locally_similar (\\<sigma>::nat \\<Rightarrow> 'proc \\<Rightarrow> 'pst)  \\<tau> \\<equiv> \n   \\<forall>p::'proc. (\\<lambda>n. \\<sigma> n p) \\<approx> (\\<lambda>n. \\<tau> n p)\""], ["", "definition local_property where\n  \"local_property P \\<equiv>\n   \\<forall>\\<sigma> \\<tau>. locally_similar \\<sigma> \\<tau> \\<longrightarrow> P \\<sigma> \\<longrightarrow> P \\<tau>\""], ["", "text \\<open>\n  Local similarity is an equivalence relation.\n\\<close>"], ["", "lemma locally_similar_refl: \"locally_similar \\<sigma> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locally_similar \\<sigma> \\<sigma>", "by (simp add: locally_similar_def stutter_equiv_refl)"], ["", "lemma locally_similar_sym: \"locally_similar \\<sigma> \\<tau> \\<Longrightarrow> locally_similar \\<tau> \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locally_similar \\<sigma> \\<tau> \\<Longrightarrow>\n    locally_similar \\<tau> \\<sigma>", "by (simp add: locally_similar_def stutter_equiv_sym)"], ["", "lemma locally_similar_trans [trans]:\n  \"locally_similar \\<rho> \\<sigma> \\<Longrightarrow> locally_similar \\<sigma> \\<tau> \\<Longrightarrow> locally_similar \\<rho> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>locally_similar \\<rho> \\<sigma>;\n     locally_similar \\<sigma> \\<tau>\\<rbrakk>\n    \\<Longrightarrow> locally_similar \\<rho> \\<tau>", "by (force simp add: locally_similar_def elim: stutter_equiv_trans)"], ["", "lemma local_property_eq:\n  \"local_property P = (\\<forall>\\<sigma> \\<tau>. locally_similar \\<sigma> \\<tau> \\<longrightarrow> P \\<sigma> = P \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_property P =\n    (\\<forall>\\<sigma> \\<tau>.\n        locally_similar \\<sigma> \\<tau> \\<longrightarrow>\n        P \\<sigma> = P \\<tau>)", "by (auto simp: local_property_def dest: locally_similar_sym)"], ["", "text \\<open>\n  Consider any fine-grained run \\<open>rho\\<close>. The projection of \\<open>rho\\<close>\n  to vectors of process states is locally similar to the coarse-grained run\n  computed from \\<open>rho\\<close>.\n\\<close>"], ["", "lemma coarse_run_locally_similar:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n  shows \"locally_similar (state \\<circ> rho) (coarse_run rho)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. locally_similar (state \\<circ> rho) (coarse_run rho)", "proof (auto simp: locally_similar_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<lambda>n. state (rho n) p) \\<approx>\n       (\\<lambda>n. coarse_run rho n p)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       (\\<lambda>n. state (rho n) p) \\<approx>\n       (\\<lambda>n. coarse_run rho n p)", "show \"(\\<lambda>n. state (rho n) p) \\<approx> (\\<lambda>n. coarse_run rho n p)\" (is \"?fgr \\<approx> ?cgr\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. state (rho n) p) \\<approx> (\\<lambda>n. coarse_run rho n p)", "proof (rule stutter_equivI)"], ["proof (state)\ngoal (3 subgoals):\n 1. stutter_sampler ?f (\\<lambda>n. state (rho n) p)\n 2. stutter_sampler ?g (\\<lambda>n. coarse_run rho n p)\n 3. (\\<lambda>n. state (rho n) p) \\<circ> ?f =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> ?g", "show \"stutter_sampler (fg_start_round rho p) ?fgr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler (fg_start_round rho p) (\\<lambda>n. state (rho n) p)", "proof (auto simp: stutter_sampler_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. fg_start_round rho p 0 = 0\n 2. strict_mono (fg_start_round rho p)\n 3. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "from rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords", "show \"fg_start_round rho p 0 = 0\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n\ngoal (1 subgoal):\n 1. fg_start_round rho p 0 = 0", "by (rule fg_start_round_0)"], ["proof (state)\nthis:\n  fg_start_round rho p 0 = 0\n\ngoal (2 subgoals):\n 1. strict_mono (fg_start_round rho p)\n 2. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. strict_mono (fg_start_round rho p)\n 2. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "show \"strict_mono (fg_start_round rho p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono (fg_start_round rho p)", "by (rule fg_start_round_strict_mono[OF rho])"], ["proof (state)\nthis:\n  strict_mono (fg_start_round rho p)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "fix r n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "assume \"fg_start_round rho p r < n\" and \"n < fg_start_round rho p (Suc r)\""], ["proof (state)\nthis:\n  fg_start_round rho p r < n\n  n < fg_start_round rho p (Suc r)\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  fg_start_round rho p r < n\n  n < fg_start_round rho p (Suc r)", "have \"round (rho n) p = round (rho (fg_start_round rho p r)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  fg_start_round rho p r < n\n  n < fg_start_round rho p (Suc r)\n\ngoal (1 subgoal):\n 1. round (rho n) p = round (rho (fg_start_round rho p r)) p", "by (simp add: fg_start_round fg_round_between_start_rounds)"], ["proof (state)\nthis:\n  round (rho n) p = round (rho (fg_start_round rho p r)) p\n\ngoal (1 subgoal):\n 1. \\<And>k n.\n       \\<lbrakk>fg_start_round rho p k < n;\n        n < fg_start_round rho p (Suc k)\\<rbrakk>\n       \\<Longrightarrow> state (rho n) p =\n                         state (rho (fg_start_round rho p k)) p", "with rho"], ["proof (chain)\npicking this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = round (rho (fg_start_round rho p r)) p", "show \"state (rho n) p = state (rho (fg_start_round rho p r)) p\""], ["proof (prove)\nusing this:\n  fg_run A rho HOs SHOs coords\n  round (rho n) p = round (rho (fg_start_round rho p r)) p\n\ngoal (1 subgoal):\n 1. state (rho n) p = state (rho (fg_start_round rho p r)) p", "by (rule fg_same_round_same_state)"], ["proof (state)\nthis:\n  state (rho n) p = state (rho (fg_start_round rho p r)) p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  stutter_sampler (fg_start_round rho p) (\\<lambda>n. state (rho n) p)\n\ngoal (2 subgoals):\n 1. stutter_sampler ?g (\\<lambda>n. coarse_run rho n p)\n 2. (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> ?g", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. stutter_sampler ?g (\\<lambda>n. coarse_run rho n p)\n 2. (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> ?g", "show \"stutter_sampler id ?cgr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_sampler id (\\<lambda>n. coarse_run rho n p)", "by (rule id_stutter_sampler)"], ["proof (state)\nthis:\n  stutter_sampler id (\\<lambda>n. coarse_run rho n p)\n\ngoal (1 subgoal):\n 1. (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> id", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> id", "show \"?fgr \\<circ> fg_start_round rho p = ?cgr \\<circ> id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n    (\\<lambda>n. coarse_run rho n p) \\<circ> id", "by (auto simp: coarse_run_def)"], ["proof (state)\nthis:\n  (\\<lambda>n. state (rho n) p) \\<circ> fg_start_round rho p =\n  (\\<lambda>n. coarse_run rho n p) \\<circ> id\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>n. state (rho n) p) \\<approx> (\\<lambda>n. coarse_run rho n p)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Therefore, in order to verify a local property \\<open>P\\<close> for a\n  fine-grained run over given \\<open>HO\\<close>, \\<open>SHO\\<close>, and \\<open>coord\\<close>\n  collections, it is enough to show that \\<open>P\\<close> holds for all\n  coarse-grained runs for these same collections.\n  Indeed, one may restrict attention to coarse-grained runs whose \n  initial states agree with that of the given fine-grained run.\n\\<close>"], ["", "theorem local_property_reduction:\n  assumes rho: \"fg_run A rho HOs SHOs coords\"\n      and P: \"local_property P\"\n      and coarse_correct: \n            \"\\<And> crho. \\<lbrakk> CSHORun A crho HOs SHOs coords; crho 0 = state (rho 0)\\<rbrakk>\n                      \\<Longrightarrow> P crho\"\n  shows \"P (state \\<circ> rho)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (state \\<circ> rho)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P (state \\<circ> rho)", "have \"coarse_run rho 0 = state (rho 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coarse_run rho 0 = state (rho 0)", "by (rule ext, simp add: coarse_run_def fg_start_round_0[OF rho])"], ["proof (state)\nthis:\n  coarse_run rho 0 = state (rho 0)\n\ngoal (1 subgoal):\n 1. P (state \\<circ> rho)", "from rho[THEN reduction] this"], ["proof (chain)\npicking this:\n  CSHORun A (coarse_run rho) HOs SHOs coords\n  coarse_run rho 0 = state (rho 0)", "have \"P (coarse_run rho)\""], ["proof (prove)\nusing this:\n  CSHORun A (coarse_run rho) HOs SHOs coords\n  coarse_run rho 0 = state (rho 0)\n\ngoal (1 subgoal):\n 1. P (coarse_run rho)", "by (rule coarse_correct)"], ["proof (state)\nthis:\n  P (coarse_run rho)\n\ngoal (1 subgoal):\n 1. P (state \\<circ> rho)", "with coarse_run_locally_similar[OF rho] P"], ["proof (chain)\npicking this:\n  locally_similar (state \\<circ> rho) (coarse_run rho)\n  local_property P\n  P (coarse_run rho)", "show ?thesis"], ["proof (prove)\nusing this:\n  locally_similar (state \\<circ> rho) (coarse_run rho)\n  local_property P\n  P (coarse_run rho)\n\ngoal (1 subgoal):\n 1. P (state \\<circ> rho)", "by (auto simp: local_property_eq)"], ["proof (state)\nthis:\n  P (state \\<circ> rho)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Consensus as a Local Property\\<close>"], ["", "text \\<open>\n  Consensus and Weak Consensus are local properties and can therefore\n  be verified just over coarse-grained runs, according to theorem\n  \\<open>local_property_reduction\\<close>.\n\\<close>"], ["", "lemma integrity_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and val: \"\\<And>n. dec (\\<sigma> n p) = Some v \\<Longrightarrow> v \\<in> range vals\"\n      and dec: \"dec (\\<tau> n p) = Some v\"\n  shows \"v \\<in> range vals\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<in> range vals", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v \\<in> range vals", "from sim"], ["proof (chain)\npicking this:\n  locally_similar \\<sigma> \\<tau>", "have \"(\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "by (simp add: locally_similar_def)"], ["proof (state)\nthis:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. v \\<in> range vals", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "obtain m where \"\\<sigma> m p = \\<tau> n p\""], ["proof (prove)\nusing this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<sigma> m p = \\<tau> n p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_element_left)"], ["proof (state)\nthis:\n  \\<sigma> m p = \\<tau> n p\n\ngoal (1 subgoal):\n 1. v \\<in> range vals", "from sym[OF this] dec"], ["proof (chain)\npicking this:\n  \\<tau> n p = \\<sigma> m p\n  dec (\\<tau> n p) = Some v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<tau> n p = \\<sigma> m p\n  dec (\\<tau> n p) = Some v\n\ngoal (1 subgoal):\n 1. v \\<in> range vals", "by (auto elim: val)"], ["proof (state)\nthis:\n  v \\<in> range vals\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma validity_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and val: \"\\<And>n. dec (\\<sigma> n p) = Some w \\<Longrightarrow> w = v\"\n      and dec: \"dec (\\<tau> n p) = Some w\"\n  shows \"w = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. w = v", "from sim"], ["proof (chain)\npicking this:\n  locally_similar \\<sigma> \\<tau>", "have \"(\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "by (simp add: locally_similar_def)"], ["proof (state)\nthis:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. w = v", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "obtain m where \"\\<sigma> m p = \\<tau> n p\""], ["proof (prove)\nusing this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<sigma> m p = \\<tau> n p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_element_left)"], ["proof (state)\nthis:\n  \\<sigma> m p = \\<tau> n p\n\ngoal (1 subgoal):\n 1. w = v", "from sym[OF this] dec"], ["proof (chain)\npicking this:\n  \\<tau> n p = \\<sigma> m p\n  dec (\\<tau> n p) = Some w", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<tau> n p = \\<sigma> m p\n  dec (\\<tau> n p) = Some w\n\ngoal (1 subgoal):\n 1. w = v", "by (auto elim: val)"], ["proof (state)\nthis:\n  w = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma agreement_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n  and agr: \"\\<And>m n. \\<lbrakk>dec (\\<sigma> m p) = Some v; dec (\\<sigma> n q) = Some w\\<rbrakk> \\<Longrightarrow> v=w\"\n  and v: \"dec (\\<tau> m p) = Some v\" and w: \"dec (\\<tau> n q) = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = w", "from sim"], ["proof (chain)\npicking this:\n  locally_similar \\<sigma> \\<tau>", "have \"(\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "by (simp add: locally_similar_def)"], ["proof (state)\nthis:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. v = w", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "obtain m' where m': \"\\<sigma> m' p = \\<tau> m p\""], ["proof (prove)\nusing this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. (\\<And>m'.\n        \\<sigma> m' p = \\<tau> m p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_element_left)"], ["proof (state)\nthis:\n  \\<sigma> m' p = \\<tau> m p\n\ngoal (1 subgoal):\n 1. v = w", "from sim"], ["proof (chain)\npicking this:\n  locally_similar \\<sigma> \\<tau>", "have \"(\\<lambda>r. \\<sigma> r q) \\<approx> (\\<lambda>r. \\<tau> r q)\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. \\<sigma> r q) \\<approx> (\\<lambda>r. \\<tau> r q)", "by (simp add: locally_similar_def)"], ["proof (state)\nthis:\n  (\\<lambda>r. \\<sigma> r q) \\<approx> (\\<lambda>r. \\<tau> r q)\n\ngoal (1 subgoal):\n 1. v = w", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>r. \\<sigma> r q) \\<approx> (\\<lambda>r. \\<tau> r q)", "obtain n' where n': \"\\<sigma> n' q = \\<tau> n q\""], ["proof (prove)\nusing this:\n  (\\<lambda>r. \\<sigma> r q) \\<approx> (\\<lambda>r. \\<tau> r q)\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<sigma> n' q = \\<tau> n q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_element_left)"], ["proof (state)\nthis:\n  \\<sigma> n' q = \\<tau> n q\n\ngoal (1 subgoal):\n 1. v = w", "from sym[OF m'] sym[OF n'] v w"], ["proof (chain)\npicking this:\n  \\<tau> m p = \\<sigma> m' p\n  \\<tau> n q = \\<sigma> n' q\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w", "show \"v = w\""], ["proof (prove)\nusing this:\n  \\<tau> m p = \\<sigma> m' p\n  \\<tau> n q = \\<sigma> n' q\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w\n\ngoal (1 subgoal):\n 1. v = w", "by (auto elim: agr)"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma termination_is_local:\n  assumes sim: \"locally_similar \\<sigma> \\<tau>\"\n      and trm: \"dec (\\<sigma> m p) = Some v\"\n  shows \"\\<exists>n. dec (\\<tau> n p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. dec (\\<tau> n p) = Some v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n. dec (\\<tau> n p) = Some v", "from sim"], ["proof (chain)\npicking this:\n  locally_similar \\<sigma> \\<tau>", "have \"(\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n\ngoal (1 subgoal):\n 1. (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "by (simp add: locally_similar_def)"], ["proof (state)\nthis:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. \\<exists>n. dec (\\<tau> n p) = Some v", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)", "obtain n where \"\\<sigma> m p = \\<tau> n p\""], ["proof (prove)\nusing this:\n  (\\<lambda>r. \\<sigma> r p) \\<approx> (\\<lambda>r. \\<tau> r p)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<sigma> m p = \\<tau> n p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule stutter_equiv_element_right)"], ["proof (state)\nthis:\n  \\<sigma> m p = \\<tau> n p\n\ngoal (1 subgoal):\n 1. \\<exists>n. dec (\\<tau> n p) = Some v", "with trm"], ["proof (chain)\npicking this:\n  dec (\\<sigma> m p) = Some v\n  \\<sigma> m p = \\<tau> n p", "show ?thesis"], ["proof (prove)\nusing this:\n  dec (\\<sigma> m p) = Some v\n  \\<sigma> m p = \\<tau> n p\n\ngoal (1 subgoal):\n 1. \\<exists>n. dec (\\<tau> n p) = Some v", "by auto"], ["proof (state)\nthis:\n  \\<exists>n. dec (\\<tau> n p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem consensus_is_local: \"local_property (consensus vals dec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_property (consensus vals dec)", "proof (auto simp: local_property_def consensus_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> n p v.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> n p) = Some v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> range vals\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> n p v"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> n p v.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> n p) = Some v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> range vals\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>n p v. dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals\"\n  and \"dec (\\<tau> n p) = Some v\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>n p v.\n     dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals\n  dec (\\<tau> n p) = Some v\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> n p v.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> n p) = Some v\\<rbrakk>\n       \\<Longrightarrow> v \\<in> range vals\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"v \\<in> range vals\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>n p v.\n     dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals\n  dec (\\<tau> n p) = Some v\n\ngoal (1 subgoal):\n 1. v \\<in> range vals", "by (blast intro: integrity_is_local)"], ["proof (state)\nthis:\n  v \\<in> range vals\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> m n p q v w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>m n p q v w. dec (\\<sigma> m p) = Some v \\<and> dec (\\<sigma> n q) = Some w \\<longrightarrow> v = w\"\n  and \"dec (\\<tau> m p) = Some v\" and \"dec (\\<tau> n q) = Some w\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>m n p q v w.\n     dec (\\<sigma> m p) = Some v \\<and>\n     dec (\\<sigma> n q) = Some w \\<longrightarrow>\n     v = w\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"v = w\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>m n p q v w.\n     dec (\\<sigma> m p) = Some v \\<and>\n     dec (\\<sigma> n q) = Some w \\<longrightarrow>\n     v = w\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w\n\ngoal (1 subgoal):\n 1. v = w", "by (blast intro: agreement_is_local)"], ["proof (state)\nthis:\n  v = w\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p v.\n           dec (\\<sigma> n p) = Some v \\<longrightarrow> v \\<in> range vals;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"\\<exists>n w. dec (\\<tau> n p) = Some w\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\n\ngoal (1 subgoal):\n 1. \\<exists>n w. dec (\\<tau> n p) = Some w", "by (blast dest: termination_is_local)"], ["proof (state)\nthis:\n  \\<exists>n w. dec (\\<tau> n p) = Some w\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem weak_consensus_is_local: \"local_property (weak_consensus vals dec)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_property (weak_consensus vals dec)", "proof (auto simp: local_property_def weak_consensus_def)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> v n p w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        \\<forall>p. vals p = v; dec (\\<tau> n p) = Some w\\<rbrakk>\n       \\<Longrightarrow> w = v\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> n p v w"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> v n p w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        \\<forall>p. vals p = v; dec (\\<tau> n p) = Some w\\<rbrakk>\n       \\<Longrightarrow> w = v\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v\"\n  and \"dec (\\<tau> n p) = Some w\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v\n  dec (\\<tau> n p) = Some w\n\ngoal (3 subgoals):\n 1. \\<And>\\<sigma> \\<tau> v n p w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v;\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        \\<forall>p. vals p = v; dec (\\<tau> n p) = Some w\\<rbrakk>\n       \\<Longrightarrow> w = v\n 2. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 3. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"w = v\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>n p w. dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v\n  dec (\\<tau> n p) = Some w\n\ngoal (1 subgoal):\n 1. w = v", "by (blast intro: validity_is_local)"], ["proof (state)\nthis:\n  w = v\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> m n p q v w"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>m n p q v w. dec (\\<sigma> m p) = Some v \\<and> dec (\\<sigma> n q) = Some w \\<longrightarrow> v = w\"\n  and \"dec (\\<tau> m p) = Some v\" and w: \"dec (\\<tau> n q) = Some w\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>m n p q v w.\n     dec (\\<sigma> m p) = Some v \\<and>\n     dec (\\<sigma> n q) = Some w \\<longrightarrow>\n     v = w\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w\n\ngoal (2 subgoals):\n 1. \\<And>\\<sigma> \\<tau> m n p q v w.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y;\n        dec (\\<tau> m p) = Some v; dec (\\<tau> n q) = Some w\\<rbrakk>\n       \\<Longrightarrow> v = w\n 2. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"v = w\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>m n p q v w.\n     dec (\\<sigma> m p) = Some v \\<and>\n     dec (\\<sigma> n q) = Some w \\<longrightarrow>\n     v = w\n  dec (\\<tau> m p) = Some v\n  dec (\\<tau> n q) = Some w\n\ngoal (1 subgoal):\n 1. v = w", "by (blast intro: agreement_is_local)"], ["proof (state)\nthis:\n  v = w\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "fix \\<sigma> \\<tau> p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "assume \"locally_similar \\<sigma> \\<tau>\"\n  and \"\\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\""], ["proof (state)\nthis:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\n\ngoal (1 subgoal):\n 1. \\<And>\\<sigma> \\<tau> p.\n       \\<lbrakk>locally_similar \\<sigma> \\<tau>;\n        \\<forall>v.\n           (\\<forall>p. vals p = v) \\<longrightarrow>\n           (\\<forall>n p w.\n               dec (\\<sigma> n p) = Some w \\<longrightarrow> w = v);\n        \\<forall>m n p q v w.\n           dec (\\<sigma> m p) = Some v \\<and>\n           dec (\\<sigma> n q) = Some w \\<longrightarrow>\n           v = w;\n        \\<forall>p. \\<exists>n y. dec (\\<sigma> n p) = Some y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n y. dec (\\<tau> n p) = Some y", "thus \"\\<exists>n w. dec (\\<tau> n p) = Some w\""], ["proof (prove)\nusing this:\n  locally_similar \\<sigma> \\<tau>\n  \\<forall>p. \\<exists>m v. dec (\\<sigma> m p) = Some v\n\ngoal (1 subgoal):\n 1. \\<exists>n w. dec (\\<tau> n p) = Some w", "by (blast dest: termination_is_local)"], ["proof (state)\nthis:\n  \\<exists>n w. dec (\\<tau> n p) = Some w\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}