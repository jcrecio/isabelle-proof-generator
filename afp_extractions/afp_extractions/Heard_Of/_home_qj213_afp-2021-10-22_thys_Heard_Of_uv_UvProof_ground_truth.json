{"file_name": "/home/qj213/afp-2021-10-22/thys/Heard_Of/uv/UvProof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Heard_Of", "problem_names": ["lemma some_common_msg:\n  assumes \"HOcommPerRd UV_M (HOs r)\"\n  shows \"\\<exists>pq. pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n            \\<and> pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n            \\<and> (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) pq \n              = (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) pq\"", "lemma minval_step0:\n  assumes com: \"HOcommPerRd UV_M (HOs r)\" and s0: \"step r = 0\"\n  shows \"smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n         \\<in> {v. \\<exists>p. (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) p = Some (Val v)}\"\n         (is \"smallestValRcvd ?msgs \\<in> ?vals\")", "lemma minval_step1:\n  assumes  com: \"HOcommPerRd UV_M (HOs r)\" and s1: \"step r \\<noteq> 0\"\n  and nov: \"someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\"\n  shows \"smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n          \\<in> {v . \\<exists>p. (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) p\n                     = Some (ValVote v None)}\"\n        (is \"smallestValNoVoteRcvd ?msgs \\<in> ?vals\")", "lemma reset_vote:\n  assumes run: \"HORun UV_M rho HOs\" and s0: \"step r' = 0\"\n  shows \"vote (rho r' p) = None\"", "lemma x_vote_eq:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and vote: \"vote (rho r p) = Some v\"\n  shows \"v = x (rho r p)\"", "lemma decide_step:\n  assumes run: \"HORun UV_M rho HOs\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\" \n  shows \"step r = 1\"", "lemma decide_nonnull:\n  assumes run: \"HORun UV_M rho HOs\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\" \n  shows \"decide (rho (Suc r) p) \\<noteq> None\"", "lemma msgs_unanimity:\n  assumes run: \"HORun UV_M rho HOs\"\n      and vote: \"vote (rho (Suc r) p) = Some v\"\n      and q: \"q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\"\n             (is \"_ \\<in> msgRcvd ?msgs\")\n  shows \"getval (the (?msgs q)) = v\"", "lemma vote_agreement:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"vote (rho r p) = Some v\"\n      and q: \"vote (rho r q) = Some w\"\n  shows \"v = w\"", "lemma decide_equals_x:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decval: \"decide (rho (Suc r) p) = Some v\"\n  shows \"x (rho (Suc r) q) = v\"", "lemma same_x_stable:\n  assumes run: \"HORun UV_M rho HOs\"\n      and comm: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and x: \"\\<forall>p. x (rho r p) = v\"\n  shows \"x (rho (Suc r) q) = v\"", "lemma safety_argument:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decval: \"decide (rho (Suc r) p) = Some v\"\n  shows \"x (rho (Suc r+k) q) = v\"", "lemma decided_then_past_decision:\n  assumes run: \"HORun UV_M rho HOs\"\n      and dec: \"decide (rho n p) = Some v\"\n  shows \"\\<exists>m<n. decide (rho (Suc m) p) \\<noteq> decide (rho m p)\n             \\<and> decide (rho (Suc m) p) = Some v\"", "lemma x_values_initial:\n  assumes run:\"HORun UV_M rho HOs\"\n      and com:\"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n  shows \"\\<exists>q. x (rho r p) = x (rho 0 q)\"", "theorem uv_integrity:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and dec: \"decide (rho r p) = Some v\"\n  shows \"\\<exists>q. v = x (rho 0 q)\"", "lemma two_decisions_agree:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decidep: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decvalp: \"decide (rho (Suc r) p) = Some v\"\n      and decideq: \"decide (rho (Suc (r+k)) q) \\<noteq> decide (rho (r+k) q)\"\n      and decvalq: \"decide (rho (Suc (r+k)) q) = Some w\"\n  shows \"v = w\"", "theorem uv_agreement:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"decide (rho m p) = Some v\"\n      and q: \"decide (rho n q) = Some w\"\n  shows \"v = w\"", "theorem uv_irrevocability:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"decide (rho m p) = Some v\"\n  shows \"decide (rho (m+n) p) = Some v\"", "lemma hoeq_xeq:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and hoeq: \"HOs r p = HOs r q\"\n  shows \"x (rho (Suc r) p) = x (rho (Suc r) q)\"", "theorem uv_termination:\n  assumes run: \"HORun UV_M rho HOs\"\n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"\\<exists>r v. decide (rho r p) = Some v\"", "theorem uv_consensus:\n  assumes run: \"HORun UV_M rho HOs\" \n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"consensus (x \\<circ> (rho 0)) decide rho\"", "theorem uv_consensus_fg:\n  assumes run: \"fg_run UV_M rho HOs HOs (\\<lambda>r q. undefined)\"\n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)\"\n    (is \"consensus ?inits _ _\")"], "translations": [["", "lemma some_common_msg:\n  assumes \"HOcommPerRd UV_M (HOs r)\"\n  shows \"\\<exists>pq. pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n            \\<and> pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n            \\<and> (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) pq \n              = (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) pq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>pq.\n       pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<and>\n       pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<and>\n       HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n       HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq", "using assms"], ["proof (prove)\nusing this:\n  HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. \\<exists>pq.\n       pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<and>\n       pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<and>\n       HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n       HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq", "by (auto simp: UV_HOMachine_def UV_commPerRd_def HOrcvdMsgs_def\n                 UV_sendMsg_def send0_def send1_def msgRcvd_def)"], ["", "text \\<open>\n  When executing step 0, the minimum received value is always well defined.\n\\<close>"], ["", "lemma minval_step0:\n  assumes com: \"HOcommPerRd UV_M (HOs r)\" and s0: \"step r = 0\"\n  shows \"smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n         \\<in> {v. \\<exists>p. (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) p = Some (Val v)}\"\n         (is \"smallestValRcvd ?msgs \\<in> ?vals\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n    \\<in> {v. \\<exists>p.\n                 HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}", "unfolding smallestValRcvd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {v. \\<exists>qa.\n               HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)}\n    \\<in> {v. \\<exists>p.\n                 HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}", "proof (rule Min_in)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {v. \\<exists>qa.\n            HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)}\n 2. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)} \\<noteq>\n    {}", "have \"?vals \\<subseteq> getval ` ((the \\<circ> ?msgs) ` (HOs r q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}\n    \\<subseteq> getval `\n                (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) `\n                HOs r q", "by (auto simp: HOrcvdMsgs_def image_def)"], ["proof (state)\nthis:\n  {v. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}\n  \\<subseteq> getval `\n              (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) ` HOs r q\n\ngoal (2 subgoals):\n 1. finite\n     {v. \\<exists>qa.\n            HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)}\n 2. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)} \\<noteq>\n    {}", "thus \"finite ?vals\""], ["proof (prove)\nusing this:\n  {v. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}\n  \\<subseteq> getval `\n              (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) ` HOs r q\n\ngoal (1 subgoal):\n 1. finite\n     {v. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}", "by (auto simp: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {v. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)}\n\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)} \\<noteq>\n    {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)} \\<noteq>\n    {}", "from some_common_msg[of HOs, OF com]"], ["proof (chain)\npicking this:\n  \\<exists>pq.\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r)) \\<and>\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r)) \\<and>\n     HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r) pq =\n     HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r) pq", "obtain p where \"p \\<in> msgRcvd ?msgs\""], ["proof (prove)\nusing this:\n  \\<exists>pq.\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r)) \\<and>\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r)) \\<and>\n     HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r) pq =\n     HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r) pq\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        p \\<in> msgRcvd\n                 (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa = Some (Val v)} \\<noteq>\n    {}", "with s0"], ["proof (chain)\npicking this:\n  step r = 0\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "show \"?vals \\<noteq> {}\""], ["proof (prove)\nusing this:\n  step r = 0\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {v. \\<exists>p.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)} \\<noteq>\n    {}", "by (auto simp: msgRcvd_def HOrcvdMsgs_def UV_HOMachine_def \n                   UV_sendMsg_def send0_def)"], ["proof (state)\nthis:\n  {v. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  When executing step 1 and no vote has been received, the minimum among values received\n  in messages carrying no vote is well defined.\n\\<close>"], ["", "lemma minval_step1:\n  assumes  com: \"HOcommPerRd UV_M (HOs r)\" and s1: \"step r \\<noteq> 0\"\n  and nov: \"someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\"\n  shows \"smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n          \\<in> {v . \\<exists>p. (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) p\n                     = Some (ValVote v None)}\"\n        (is \"smallestValNoVoteRcvd ?msgs \\<in> ?vals\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n    \\<in> {v. \\<exists>p.\n                 HOrcvdMsgs UV_M r q (HOs r q) (rho r) p =\n                 Some (ValVote v None)}", "unfolding smallestValNoVoteRcvd_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {v. \\<exists>qa.\n               HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n               Some (ValVote v None)}\n    \\<in> {v. \\<exists>p.\n                 HOrcvdMsgs UV_M r q (HOs r q) (rho r) p =\n                 Some (ValVote v None)}", "proof (rule Min_in)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {v. \\<exists>qa.\n            HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n            Some (ValVote v None)}\n 2. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n           Some (ValVote v None)} \\<noteq>\n    {}", "have \"?vals \\<subseteq> getval ` ((the \\<circ> ?msgs) ` (HOs r q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {v. \\<exists>p.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)}\n    \\<subseteq> getval `\n                (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) `\n                HOs r q", "by (auto simp: HOrcvdMsgs_def image_def)"], ["proof (state)\nthis:\n  {v. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)}\n  \\<subseteq> getval `\n              (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) ` HOs r q\n\ngoal (2 subgoals):\n 1. finite\n     {v. \\<exists>qa.\n            HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n            Some (ValVote v None)}\n 2. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n           Some (ValVote v None)} \\<noteq>\n    {}", "thus \"finite ?vals\""], ["proof (prove)\nusing this:\n  {v. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)}\n  \\<subseteq> getval `\n              (the \\<circ> HOrcvdMsgs UV_M r q (HOs r q) (rho r)) ` HOs r q\n\ngoal (1 subgoal):\n 1. finite\n     {v. \\<exists>p.\n            HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)}", "by (auto simp: finite_subset)"], ["proof (state)\nthis:\n  finite\n   {v. \\<exists>p.\n          HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)}\n\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n           Some (ValVote v None)} \\<noteq>\n    {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n           Some (ValVote v None)} \\<noteq>\n    {}", "from some_common_msg[of HOs, OF com]"], ["proof (chain)\npicking this:\n  \\<exists>pq.\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r)) \\<and>\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r)) \\<and>\n     HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r) pq =\n     HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r) pq", "obtain p where \"p \\<in> msgRcvd ?msgs\""], ["proof (prove)\nusing this:\n  \\<exists>pq.\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r)) \\<and>\n     pq \\<in> msgRcvd (HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r)) \\<and>\n     HOrcvdMsgs UV_M r ?p (HOs r ?p) (?rho r) pq =\n     HOrcvdMsgs UV_M r ?q (HOs r ?q) (?rho r) pq\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        p \\<in> msgRcvd\n                 (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {v. \\<exists>qa.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) qa =\n           Some (ValVote v None)} \\<noteq>\n    {}", "with s1 nov"], ["proof (chain)\npicking this:\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "show \"?vals \\<noteq> {}\""], ["proof (prove)\nusing this:\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {v. \\<exists>p.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) p =\n           Some (ValVote v None)} \\<noteq>\n    {}", "by (auto simp: msgRcvd_def HOrcvdMsgs_def someVoteRcvd_def isValVote_def\n                   UV_HOMachine_def UV_sendMsg_def send1_def)"], ["proof (state)\nthis:\n  {v. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p =\n         Some (ValVote v None)} \\<noteq>\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The \\<open>vote\\<close> field is reset every time a new phase begins. \n\\<close>"], ["", "lemma reset_vote:\n  assumes run: \"HORun UV_M rho HOs\" and s0: \"step r' = 0\"\n  shows \"vote (rho r' p) = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vote (rho r' p) = None", "proof (cases r')"], ["proof (state)\ngoal (2 subgoals):\n 1. r' = 0 \\<Longrightarrow> vote (rho r' p) = None\n 2. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "assume \"r' = 0\""], ["proof (state)\nthis:\n  r' = 0\n\ngoal (2 subgoals):\n 1. r' = 0 \\<Longrightarrow> vote (rho r' p) = None\n 2. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  r' = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  r' = 0\n\ngoal (1 subgoal):\n 1. vote (rho r' p) = None", "by (auto simp: UV_HOMachine_def HORun_eq HOinitConfig_eq\n                   initState_def UV_initState_def)"], ["proof (state)\nthis:\n  vote (rho r' p) = None\n\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "assume sucr: \"r' = Suc r\""], ["proof (state)\nthis:\n  r' = Suc r\n\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have nxt: \"nextState UV_M r p (rho r p)\n                                (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \n                                (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: UV_HOMachine_def HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "from s0 sucr"], ["proof (chain)\npicking this:\n  step r' = 0\n  r' = Suc r", "have \"step r = 1\""], ["proof (prove)\nusing this:\n  step r' = 0\n  r' = Suc r\n\ngoal (1 subgoal):\n 1. step r = 1", "by (auto simp: step_def mod_Suc)"], ["proof (state)\nthis:\n  step r = 1\n\ngoal (1 subgoal):\n 1. \\<And>nat. r' = Suc nat \\<Longrightarrow> vote (rho r' p) = None", "with nxt sucr"], ["proof (chain)\npicking this:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  r' = Suc r\n  step r = 1", "show ?thesis"], ["proof (prove)\nusing this:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  r' = Suc r\n  step r = 1\n\ngoal (1 subgoal):\n 1. vote (rho r' p) = None", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def next1_def)"], ["proof (state)\nthis:\n  vote (rho r' p) = None\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Processes only vote for the value they hold in their \\<open>x\\<close> field.\n\\<close>"], ["", "(* The proof relies on previous lemmas @{text reset_vote} and @{text some_common_msg}. *)"], ["", "lemma x_vote_eq:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and vote: \"vote (rho r p) = Some v\"\n  shows \"v = x (rho r p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = x (rho r p)", "proof (cases r)"], ["proof (state)\ngoal (2 subgoals):\n 1. r = 0 \\<Longrightarrow> v = x (rho r p)\n 2. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "case 0"], ["proof (state)\nthis:\n  r = 0\n\ngoal (2 subgoals):\n 1. r = 0 \\<Longrightarrow> v = x (rho r p)\n 2. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "with run vote"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  r = 0", "show ?thesis  \\<comment> \\<open>no vote in initial state\\<close>"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  r = 0\n\ngoal (1 subgoal):\n 1. v = x (rho r p)", "by (auto simp: UV_HOMachine_def HORun_eq HOinitConfig_eq \n                   initState_def UV_initState_def)"], ["proof (state)\nthis:\n  v = x (rho r p)\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "fix r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "assume r: \"r = Suc r'\""], ["proof (state)\nthis:\n  r = Suc r'\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "let ?msgs = \"HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r' p (rho r' p) ?msgs (rho (Suc r') p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r' p (rho r' p)\n     (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) (rho (Suc r') p)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n   (rho (Suc r') p)\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "with vote r"], ["proof (chain)\npicking this:\n  vote (rho r p) = Some v\n  r = Suc r'\n  nextState UV_M r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n   (rho (Suc r') p)", "have nxt0: \"next0 r' p (rho r' p) ?msgs (rho r p)\" and s0: \"step r' = 0\""], ["proof (prove)\nusing this:\n  vote (rho r p) = Some v\n  r = Suc r'\n  nextState UV_M r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n   (rho (Suc r') p)\n\ngoal (1 subgoal):\n 1. next0 r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n     (rho r p) &&&\n    step r' = 0", "by (auto simp:  nextState_def UV_HOMachine_def UV_nextState_def next1_def)"], ["proof (state)\nthis:\n  next0 r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) (rho r p)\n  step r' = 0\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "from run s0"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r' = 0", "have \"vote (rho r' p) = None\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r' = 0\n\ngoal (1 subgoal):\n 1. vote (rho r' p) = None", "by (rule reset_vote)"], ["proof (state)\nthis:\n  vote (rho r' p) = None\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "with vote nxt0"], ["proof (chain)\npicking this:\n  vote (rho r p) = Some v\n  next0 r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) (rho r p)\n  vote (rho r' p) = None", "have idv: \"\\<forall>q \\<in> msgRcvd ?msgs. ?msgs q = Some (Val v)\"\n    and x: \"x (rho r p) = smallestValRcvd ?msgs\""], ["proof (prove)\nusing this:\n  vote (rho r p) = Some v\n  next0 r' p (rho r' p) (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) (rho r p)\n  vote (rho r' p) = None\n\ngoal (1 subgoal):\n 1. \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n       HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v) &&&\n    x (rho r p) = smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  x (rho r p) = smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "moreover"], ["proof (state)\nthis:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  x (rho r p) = smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "from com"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "obtain q where \"q \\<in> msgRcvd ?msgs\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        q \\<in> msgRcvd\n                 (HOrcvdMsgs UV_M r' p (HOs r' p)\n                   (rho r')) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  q \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "with idv"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  q \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))", "have \"{x . \\<exists>qq. ?msgs qq = Some (Val x)} = {v}\""], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  q \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n\ngoal (1 subgoal):\n 1. {x. \\<exists>qq.\n           HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') qq = Some (Val x)} =\n    {v}", "by (auto simp: msgRcvd_def)"], ["proof (state)\nthis:\n  {x. \\<exists>qq.\n         HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') qq = Some (Val x)} =\n  {v}\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "hence \"smallestValRcvd ?msgs = v\""], ["proof (prove)\nusing this:\n  {x. \\<exists>qq.\n         HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') qq = Some (Val x)} =\n  {v}\n\ngoal (1 subgoal):\n 1. smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) = v", "by (auto simp: smallestValRcvd_def)"], ["proof (state)\nthis:\n  smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) = v\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = x (rho r p)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  x (rho r p) = smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>q\\<in>msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')).\n     HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') q = Some (Val v)\n  x (rho r p) = smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  smallestValRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')) = v\n\ngoal (1 subgoal):\n 1. v = x (rho r p)", "by simp"], ["proof (state)\nthis:\n  v = x (rho r p)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of Irrevocability, Agreement and Integrity\\<close>"], ["", "text \\<open>A decision can only be taken in the second round of a phase.\\<close>"], ["", "lemma decide_step:\n  assumes run: \"HORun UV_M rho HOs\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\" \n  shows \"step r = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step r = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. step r = 1", "let ?msgs = \"HOrcvdMsgs UV_M r p (HOs r p) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. step r = 1", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r p (rho r p) ?msgs (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. step r = 1", "with decide"], ["proof (chain)\npicking this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. step r = 1", "by (auto simp: nextState_def UV_HOMachine_def UV_nextState_def\n                   next0_def step_def)"], ["proof (state)\nthis:\n  step r = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>No process ever decides \\<open>None\\<close>.\\<close>"], ["", "lemma decide_nonnull:\n  assumes run: \"HORun UV_M rho HOs\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\" \n  shows \"decide (rho (Suc r) p) \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "let ?msgs = \"HOrcvdMsgs UV_M r p (HOs r p) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "from assms"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)", "have s1: \"step r = 1\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n\ngoal (1 subgoal):\n 1. step r = 1", "by (rule decide_step)"], ["proof (state)\nthis:\n  step r = 1\n\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r = 1", "have \"next1 r p (rho r p) ?msgs (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r = 1\n\ngoal (1 subgoal):\n 1. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: UV_HOMachine_def HORun_eq HOnextConfig_eq\n                   nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "with decide"], ["proof (chain)\npicking this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. decide (rho (Suc r) p) \\<noteq> None", "by (auto simp: next1_def dec_update_def)"], ["proof (state)\nthis:\n  decide (rho (Suc r) p) \\<noteq> None\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If some process \\<open>p\\<close> votes for \\<open>v\\<close> at some round \\<open>r\\<close>, then any message\n  that \\<open>p\\<close> received in \\<open>r\\<close> was holding \\<open>v\\<close> as a value.\n\\<close>"], ["", "lemma msgs_unanimity:\n  assumes run: \"HORun UV_M rho HOs\"\n      and vote: \"vote (rho (Suc r) p) = Some v\"\n      and q: \"q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\"\n             (is \"_ \\<in> msgRcvd ?msgs\")\n  shows \"getval (the (?msgs q)) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "have s0: \"step r = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step r = 0", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow> False", "assume \"step r \\<noteq> 0\""], ["proof (state)\nthis:\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow> False", "hence \"step (Suc r) = 0\""], ["proof (prove)\nusing this:\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. step (Suc r) = 0", "by (simp add: step_def mod_Suc)"], ["proof (state)\nthis:\n  step (Suc r) = 0\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow> False", "with run vote"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  vote (rho (Suc r) p) = Some v\n  step (Suc r) = 0", "show False"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  vote (rho (Suc r) p) = Some v\n  step (Suc r) = 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: reset_vote)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  step r = 0\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r = 0", "have novote: \"vote (rho r p) = None\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r = 0\n\ngoal (1 subgoal):\n 1. vote (rho r p) = None", "by (auto simp: reset_vote)"], ["proof (state)\nthis:\n  vote (rho r p) = None\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r p (rho r p) ?msgs (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "with s0"], ["proof (chain)\npicking this:\n  step r = 0\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)", "have nxt: \"next0 r p (rho r p) ?msgs (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  step r = 0\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "with novote vote q"], ["proof (chain)\npicking this:\n  vote (rho r p) = None\n  vote (rho (Suc r) p) = Some v\n  q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)", "show ?thesis"], ["proof (prove)\nusing this:\n  vote (rho r p) = None\n  vote (rho (Suc r) p) = Some v\n  q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  getval (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Any two processes can only vote for the same value.\n\\<close>"], ["", "(* The proof relies on previous lemmas @{text some_common_msg} and @{text msgs_unanimity}. *)"], ["", "lemma vote_agreement:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"vote (rho r p) = Some v\"\n      and q: \"vote (rho r q) = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof (cases r)"], ["proof (state)\ngoal (2 subgoals):\n 1. r = 0 \\<Longrightarrow> v = w\n 2. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "case 0"], ["proof (state)\nthis:\n  r = 0\n\ngoal (2 subgoals):\n 1. r = 0 \\<Longrightarrow> v = w\n 2. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "with run p"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  r = 0", "show ?thesis  \\<comment> \\<open>no votes in initial state\\<close>"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  r = 0\n\ngoal (1 subgoal):\n 1. v = w", "by (auto simp: UV_HOMachine_def HORun_eq HOinitConfig_eq\n                   initState_def UV_initState_def)"], ["proof (state)\nthis:\n  v = w\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "fix r'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "assume r: \"r = Suc r'\""], ["proof (state)\nthis:\n  r = Suc r'\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "let \"?msgs p\" = \"HOrcvdMsgs UV_M r' p (HOs r' p) (rho r')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "from com"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "obtain pq\n    where \"?msgs p pq = ?msgs q pq\"\n      and smp: \"pq \\<in> msgRcvd (?msgs p)\" and smq: \"pq \\<in> msgRcvd (?msgs q)\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. (\\<And>pq.\n        \\<lbrakk>HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq =\n                 HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq;\n         pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'));\n         pq \\<in> msgRcvd\n                   (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq =\n  HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "moreover"], ["proof (state)\nthis:\n  HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq =\n  HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "from run p smp r"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  r = Suc r'", "have \"getval (the (?msgs p pq)) = v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  vote (rho r p) = Some v\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  r = Suc r'\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq)) = v", "by (simp add: msgs_unanimity)"], ["proof (state)\nthis:\n  getval (the (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq)) = v\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "moreover"], ["proof (state)\nthis:\n  getval (the (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq)) = v\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "from run q smq r"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  vote (rho r q) = Some w\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n  r = Suc r'", "have \"getval (the (?msgs q pq)) = w\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  vote (rho r q) = Some w\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n  r = Suc r'\n\ngoal (1 subgoal):\n 1. getval (the (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq)) = w", "by (simp add: msgs_unanimity)"], ["proof (state)\nthis:\n  getval (the (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq)) = w\n\ngoal (1 subgoal):\n 1. \\<And>nat. r = Suc nat \\<Longrightarrow> v = w", "ultimately"], ["proof (chain)\npicking this:\n  HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq =\n  HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n  getval (the (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq)) = v\n  getval (the (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq)) = w", "show ?thesis"], ["proof (prove)\nusing this:\n  HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq =\n  HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r'))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n  getval (the (HOrcvdMsgs UV_M r' p (HOs r' p) (rho r') pq)) = v\n  getval (the (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') pq)) = w\n\ngoal (1 subgoal):\n 1. v = w", "by simp"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If a process decides value \\<open>v\\<close> then all processes must have \\<open>v\\<close>\n  in their \\<open>x\\<close> fields.\n\\<close>"], ["", "(* The proof relies on previous lemmas @{text decide_step}, @{text some_common_msg},\n   @{text vote_agreement}. *)"], ["", "lemma decide_equals_x:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decval: \"decide (rho (Suc r) p) = Some v\"\n  shows \"x (rho (Suc r) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "let \"?msgs p'\" = \"HOrcvdMsgs UV_M r p' (HOs r p') (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from run decide"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)", "have s1: \"step r = 1\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n\ngoal (1 subgoal):\n 1. step r = 1", "by (rule decide_step)"], ["proof (state)\nthis:\n  step r = 1\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r p (rho r p) (?msgs p) (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "with s1"], ["proof (chain)\npicking this:\n  step r = 1\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)", "have nxtp: \"next1 r p (rho r p) (?msgs p) (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  step r = 1\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r q (rho r q) (?msgs q) (rho (Suc r) q)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "with s1"], ["proof (chain)\npicking this:\n  step r = 1\n  nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)", "have nxtq: \"next1 r q (rho r q) (?msgs q) (rho (Suc r) q)\""], ["proof (prove)\nusing this:\n  step r = 1\n  nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q)", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from com"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "obtain pq where\n    pq: \"pq \\<in> msgRcvd (?msgs p)\" \"pq \\<in> msgRcvd (?msgs q)\" \n        \"(?msgs p) pq = (?msgs q) pq\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. (\\<And>pq.\n        \\<lbrakk>pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r));\n         pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r));\n         HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "with decide decval nxtp"], ["proof (chain)\npicking this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  decide (rho (Suc r) p) = Some v\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq", "have vote: \"isValVote (the (?msgs p pq))\"\n             \"getvote (the (?msgs p pq)) = Some v\""], ["proof (prove)\nusing this:\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  decide (rho (Suc r) p) = Some v\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n\ngoal (1 subgoal):\n 1. isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) &&&\n    getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v", "by (auto simp: next1_def dec_update_def identicalVoteRcvd_def)"], ["proof (state)\nthis:\n  isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq))\n  getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "with nxtq pq"], ["proof (chain)\npicking this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n  isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq))\n  getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v", "obtain q' where\n    q': \"q' \\<in> someVoteRcvd (?msgs q)\"\n        \"x (rho (Suc r) q) = the (getvote (the (?msgs q q')))\""], ["proof (prove)\nusing this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n  isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq))\n  getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        \\<lbrakk>q' \\<in> someVoteRcvd\n                           (HOrcvdMsgs UV_M r q (HOs r q) (rho r));\n         x (rho (Suc r) q) =\n         the (getvote\n               (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) q')))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: next1_def x_update_def someVoteRcvd_def)"], ["proof (state)\nthis:\n  q' \\<in> someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  x (rho (Suc r) q) =\n  the (getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) q')))\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "with s1 pq vote"], ["proof (chain)\npicking this:\n  step r = 1\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n  isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq))\n  getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v\n  q' \\<in> someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  x (rho (Suc r) q) =\n  the (getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) q')))", "show ?thesis"], ["proof (prove)\nusing this:\n  step r = 1\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  pq \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r) pq\n  isValVote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq))\n  getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) pq)) = Some v\n  q' \\<in> someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  x (rho (Suc r) q) =\n  the (getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) q')))\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "by (auto simp: HOrcvdMsgs_def UV_HOMachine_def UV_sendMsg_def send1_def\n                   someVoteRcvd_def msgRcvd_def vote_agreement[OF run com])"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  If at some point all processes hold value \\<open>v\\<close> in their \\<open>x\\<close>\n  fields, then this will still be the case at the next step.\n\\<close>"], ["", "(* The proof relies on the previous lemma @{text x_vote_eq}. *)"], ["", "lemma same_x_stable:\n  assumes run: \"HORun UV_M rho HOs\"\n      and comm: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and x: \"\\<forall>p. x (rho r p) = v\"\n  shows \"x (rho (Suc r) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "let ?msgs = \"HOrcvdMsgs UV_M r q (HOs r q) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from comm"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "obtain p where p: \"p \\<in> msgRcvd ?msgs\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        p \\<in> msgRcvd\n                 (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r q (rho r q) ?msgs (rho (Suc r) q)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "hence \"next0 r q (rho r q) ?msgs (rho (Suc r) q) \\<and> step r = 0\n         \\<or> next1 r q (rho r q) ?msgs (rho (Suc r) q) \\<and> step r \\<noteq> 0\"\n    (is \"?nxt0 \\<or> ?nxt1\")"], ["proof (prove)\nusing this:\n  nextState UV_M r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<or>\n    next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0 \\<or>\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "thus ?thesis"], ["proof (prove)\nusing this:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0 \\<or>\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "assume nxt0: \"?nxt0\""], ["proof (state)\nthis:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "hence \"x (rho (Suc r) q) = smallestValRcvd ?msgs\""], ["proof (prove)\nusing this:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) =\n    smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) q) =\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "moreover"], ["proof (state)\nthis:\n  x (rho (Suc r) q) =\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "from nxt0 x"], ["proof (chain)\npicking this:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0\n  \\<forall>p. x (rho r p) = v", "have \"\\<forall>p \\<in> msgRcvd ?msgs. ?msgs p = Some (Val v)\""], ["proof (prove)\nusing this:\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r = 0\n  \\<forall>p. x (rho r p) = v\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n       HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def\n                     msgRcvd_def send0_def)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "from this p"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "have \"{x . \\<exists>p. ?msgs p = Some (Val x)} = {v}\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val v)\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {x. \\<exists>p.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val x)} =\n    {v}", "by (auto simp: msgRcvd_def)"], ["proof (state)\nthis:\n  {x. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val x)} =\n  {v}\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "hence \"smallestValRcvd ?msgs = v\""], ["proof (prove)\nusing this:\n  {x. \\<exists>p. HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (Val x)} =\n  {v}\n\ngoal (1 subgoal):\n 1. smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v", "by (auto simp: smallestValRcvd_def)"], ["proof (state)\nthis:\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v\n\ngoal (2 subgoals):\n 1. next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r = 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "ultimately"], ["proof (chain)\npicking this:\n  x (rho (Suc r) q) =\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  x (rho (Suc r) q) =\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  smallestValRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "by simp"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal (1 subgoal):\n 1. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "assume nxt1: \"?nxt1\""], ["proof (state)\nthis:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "proof (cases \"someVoteRcvd ?msgs = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "case True"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}", "have \"x (rho (Suc r) q) = smallestValNoVoteRcvd ?msgs\""], ["proof (prove)\nusing this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) =\n    smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "by (auto simp: next1_def x_update_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) q) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "moreover"], ["proof (state)\nthis:\n  x (rho (Suc r) q) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "from nxt1 x True"], ["proof (chain)\npicking this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  \\<forall>p. x (rho r p) = v\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}", "have \"\\<forall>p \\<in> msgRcvd ?msgs. ?msgs p = Some (ValVote v None)\""], ["proof (prove)\nusing this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  \\<forall>p. x (rho r p) = v\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = {}\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n       HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def\n                       msgRcvd_def send1_def someVoteRcvd_def isValVote_def)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "from this p"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))", "have \"{x . \\<exists>p. ?msgs p = Some (ValVote x None)} = {v}\""], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)).\n     HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote v None)\n  p \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n\ngoal (1 subgoal):\n 1. {x. \\<exists>p.\n           HOrcvdMsgs UV_M r q (HOs r q) (rho r) p =\n           Some (ValVote x None)} =\n    {v}", "by (auto simp: msgRcvd_def)"], ["proof (state)\nthis:\n  {x. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote x None)} =\n  {v}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "hence \"smallestValNoVoteRcvd ?msgs = v\""], ["proof (prove)\nusing this:\n  {x. \\<exists>p.\n         HOrcvdMsgs UV_M r q (HOs r q) (rho r) p = Some (ValVote x None)} =\n  {v}\n\ngoal (1 subgoal):\n 1. smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v", "by (auto simp: smallestValNoVoteRcvd_def)"], ["proof (state)\nthis:\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v\n 2. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "ultimately"], ["proof (chain)\npicking this:\n  x (rho (Suc r) q) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  x (rho (Suc r) q) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) = v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "by simp"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "case False"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq> {}", "obtain p' v' where\n        p': \"p' \\<in> msgRcvd ?msgs\" \"isValVote (the (?msgs p'))\"\n            \"getvote (the (?msgs p')) = Some v'\"\"x (rho (Suc r) q) = v'\""], ["proof (prove)\nusing this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>p' v'.\n        \\<lbrakk>p' \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r));\n         isValVote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p'));\n         getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p')) = Some v';\n         x (rho (Suc r) q) = v'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: someVoteRcvd_def next1_def x_update_def)"], ["proof (state)\nthis:\n  p' \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  isValVote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p'))\n  getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p')) = Some v'\n  x (rho (Suc r) q) = v'\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  p' \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  isValVote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p'))\n  getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p')) = Some v'\n  x (rho (Suc r) q) = v'", "have \"x (rho (Suc r) q) = x (rho r p')\""], ["proof (prove)\nusing this:\n  next1 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q) \\<and>\n  step r \\<noteq> 0\n  p' \\<in> msgRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n  isValVote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p'))\n  getvote (the (HOrcvdMsgs UV_M r q (HOs r q) (rho r) p')) = Some v'\n  x (rho (Suc r) q) = v'\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = x (rho r p')", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def\n                       msgRcvd_def send1_def isValVote_def\n                       x_vote_eq[OF run comm])"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = x (rho r p')\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r q (HOs r q) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) q) = v", "with x"], ["proof (chain)\npicking this:\n  \\<forall>p. x (rho r p) = v\n  x (rho (Suc r) q) = x (rho r p')", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>p. x (rho r p) = v\n  x (rho (Suc r) q) = x (rho r p')\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) q) = v", "by auto"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc r) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Combining the last two lemmas, it follows that as soon as some process\n  decides value \\<open>v\\<close>, all processes hold \\<open>v\\<close> in their \\<open>x\\<close> fields.\n\\<close>"], ["", "lemma safety_argument:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decide: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decval: \"decide (rho (Suc r) p) = Some v\"\n  shows \"x (rho (Suc r+k) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r + k) q) = v", "proof (induct k arbitrary: q)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q. x (rho (Suc r + 0) q) = v\n 2. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q. x (rho (Suc r + 0) q) = v\n 2. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "from decide_equals_x[OF assms]"], ["proof (chain)\npicking this:\n  x (rho (Suc r) ?q) = v", "show \"x (rho (Suc r + 0) q) = v\""], ["proof (prove)\nusing this:\n  x (rho (Suc r) ?q) = v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r + 0) q) = v", "by simp"], ["proof (state)\nthis:\n  x (rho (Suc r + 0) q) = v\n\ngoal (1 subgoal):\n 1. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "fix k q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "assume \"\\<And>q. x (rho (Suc r+k) q) = v\""], ["proof (state)\nthis:\n  x (rho (Suc r + k) ?q) = v\n\ngoal (1 subgoal):\n 1. \\<And>k q.\n       (\\<And>q. x (rho (Suc r + k) q) = v) \\<Longrightarrow>\n       x (rho (Suc r + Suc k) q) = v", "with run com"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  x (rho (Suc r + k) ?q) = v", "show \"x (rho (Suc r + Suc k) q) = v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  x (rho (Suc r + k) ?q) = v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r + Suc k) q) = v", "by (auto dest: same_x_stable)"], ["proof (state)\nthis:\n  x (rho (Suc r + Suc k) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Any process that holds a non-null decision value has made a decision\n  sometime in the past.\n\\<close>"], ["", "lemma decided_then_past_decision:\n  assumes run: \"HORun UV_M rho HOs\"\n      and dec: \"decide (rho n p) = Some v\"\n  shows \"\\<exists>m<n. decide (rho (Suc m) p) \\<noteq> decide (rho m p)\n             \\<and> decide (rho (Suc m) p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m<n.\n       decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n       decide (rho (Suc m) p) = Some v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m<n.\n       decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n       decide (rho (Suc m) p) = Some v", "let \"?dec k\" = \"decide (rho k p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>m<n.\n       decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n       decide (rho (Suc m) p) = Some v", "have \"(\\<forall>m<n. ?dec (Suc m) \\<noteq> ?dec m \\<longrightarrow> ?dec (Suc m) \\<noteq> Some v)\n        \\<longrightarrow> ?dec n \\<noteq> Some v\"\n    (is \"?P n\" is \"?A n \\<longrightarrow> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>m<n.\n        decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n        decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n    decide (rho n p) \\<noteq> Some v", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<forall>m<0.\n        decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n        decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n    decide (rho 0 p) \\<noteq> Some v\n 2. \\<And>n.\n       (\\<forall>m<n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho n p) \\<noteq> Some v \\<Longrightarrow>\n       (\\<forall>m<Suc n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho (Suc n) p) \\<noteq> Some v", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "show \"?P 0\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. (\\<forall>m<0.\n        decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n        decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n    decide (rho 0 p) \\<noteq> Some v", "by (auto simp: HORun_eq UV_HOMachine_def HOinitConfig_eq\n                     initState_def UV_initState_def)"], ["proof (state)\nthis:\n  (\\<forall>m<0.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho 0 p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<forall>m<n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho n p) \\<noteq> Some v \\<Longrightarrow>\n       (\\<forall>m<Suc n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho (Suc n) p) \\<noteq> Some v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<forall>m<n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho n p) \\<noteq> Some v \\<Longrightarrow>\n       (\\<forall>m<Suc n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho (Suc n) p) \\<noteq> Some v", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<forall>m<n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho n p) \\<noteq> Some v \\<Longrightarrow>\n       (\\<forall>m<Suc n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho (Suc n) p) \\<noteq> Some v", "assume ih: \"?P n\""], ["proof (state)\nthis:\n  (\\<forall>m<n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho n p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       (\\<forall>m<n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho n p) \\<noteq> Some v \\<Longrightarrow>\n       (\\<forall>m<Suc n.\n           decide (rho (Suc m) p) \\<noteq>\n           decide (rho m p) \\<longrightarrow>\n           decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n       decide (rho (Suc n) p) \\<noteq> Some v", "thus \"?P (Suc n)\""], ["proof (prove)\nusing this:\n  (\\<forall>m<n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho n p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. (\\<forall>m<Suc n.\n        decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n        decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n    decide (rho (Suc n) p) \\<noteq> Some v", "by force"], ["proof (state)\nthis:\n  (\\<forall>m<Suc n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho (Suc n) p) \\<noteq> Some v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<forall>m<n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho n p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. \\<exists>m<n.\n       decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n       decide (rho (Suc m) p) = Some v", "with dec"], ["proof (chain)\npicking this:\n  decide (rho n p) = Some v\n  (\\<forall>m<n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho n p) \\<noteq> Some v", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho n p) = Some v\n  (\\<forall>m<n.\n      decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<longrightarrow>\n      decide (rho (Suc m) p) \\<noteq> Some v) \\<longrightarrow>\n  decide (rho n p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. \\<exists>m<n.\n       decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n       decide (rho (Suc m) p) = Some v", "by auto"], ["proof (state)\nthis:\n  \\<exists>m<n.\n     decide (rho (Suc m) p) \\<noteq> decide (rho m p) \\<and>\n     decide (rho (Suc m) p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We can now prove the safety properties of the algorithm, and start with\n  proving Integrity.\n\\<close>"], ["", "lemma x_values_initial:\n  assumes run:\"HORun UV_M rho HOs\"\n      and com:\"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n  shows \"\\<exists>q. x (rho r p) = x (rho 0 q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho r p) = x (rho 0 q)", "proof (induct r arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p. \\<exists>q. x (rho 0 p) = x (rho 0 q)\n 2. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "fix p"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p. \\<exists>q. x (rho 0 p) = x (rho 0 q)\n 2. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "show \"\\<exists>q. x (rho 0 p) = x (rho 0 q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho 0 p) = x (rho 0 q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. x (rho 0 p) = x (rho 0 q)\n\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "fix r p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "assume ih: \"\\<And>p'. \\<exists>q. x (rho r p') = x (rho 0 q)\""], ["proof (state)\nthis:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "let ?msgs = \"HOrcvdMsgs UV_M r p (HOs r p) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "from run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs", "have \"nextState UV_M r p (rho r p) ?msgs (rho (Suc r) p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n\ngoal (1 subgoal):\n 1. nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p)", "by (auto simp: HORun_eq HOnextConfig_eq nextState_def)"], ["proof (state)\nthis:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "hence \"next0 r p (rho r p) ?msgs (rho (Suc r) p) \\<and> step r = 0\n         \\<or> next1 r p (rho r p) ?msgs (rho (Suc r) p) \\<and> step r \\<noteq> 0\"\n    (is \"?nxt0 \\<or> ?nxt1\")"], ["proof (prove)\nusing this:\n  nextState UV_M r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<or>\n    next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0", "by (auto simp: UV_HOMachine_def nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0 \\<or>\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>r p.\n       (\\<And>p. \\<exists>q. x (rho r p) = x (rho 0 q)) \\<Longrightarrow>\n       \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "thus \"\\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\""], ["proof (prove)\nusing this:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0 \\<or>\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "assume nxt0: \"?nxt0\""], ["proof (state)\nthis:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "hence \"x (rho (Suc r) p) = smallestValRcvd ?msgs\""], ["proof (prove)\nusing this:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) =\n    smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) =\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "also"], ["proof (state)\nthis:\n  x (rho (Suc r) p) =\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with com nxt0"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n  x (rho (Suc r) p) =\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))", "have \"\\<dots> \\<in> {v . \\<exists>q. ?msgs q = Some (Val v)}\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n  x (rho (Suc r) p) =\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (1 subgoal):\n 1. smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n    \\<in> {v. \\<exists>q.\n                 HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)}", "by (intro minval_step0) auto"], ["proof (state)\nthis:\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)}\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "also"], ["proof (state)\nthis:\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)}\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with nxt0"], ["proof (chain)\npicking this:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)}", "have \"\\<dots> = { x (rho r q) | q . q \\<in> msgRcvd ?msgs }\""], ["proof (prove)\nusing this:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r = 0\n  smallestValRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)}\n\ngoal (1 subgoal):\n 1. {v. \\<exists>q.\n           HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)} =\n    {x (rho r q) |q.\n     q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                     msgRcvd_def send0_def)"], ["proof (state)\nthis:\n  {v. \\<exists>q. HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (Val v)} =\n  {x (rho r q) |q. q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "finally"], ["proof (chain)\npicking this:\n  x (rho (Suc r) p)\n  \\<in> {x (rho r q) |q.\n         q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}", "obtain q where \"x (rho (Suc r) p) = x (rho r q)\""], ["proof (prove)\nusing this:\n  x (rho (Suc r) p)\n  \\<in> {x (rho r q) |q.\n         q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        x (rho (Suc r) p) = x (rho r q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (2 subgoals):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r = 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with ih"], ["proof (chain)\npicking this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n\ngoal (1 subgoal):\n 1. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "assume nxt1: \"?nxt1\""], ["proof (state)\nthis:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) \\<and>\n    step r \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "proof (cases \"someVoteRcvd ?msgs = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "case True"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}", "have \"x (rho (Suc r) p) = smallestValNoVoteRcvd ?msgs\""], ["proof (prove)\nusing this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) =\n    smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))", "by (auto simp: next1_def x_update_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "also"], ["proof (state)\nthis:\n  x (rho (Suc r) p) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with com nxt1 True"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n  x (rho (Suc r) p) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))", "have \"\\<dots> \\<in> {v . \\<exists>q. ?msgs q = Some (ValVote v None)}\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n  x (rho (Suc r) p) =\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n\ngoal (1 subgoal):\n 1. smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n    \\<in> {v. \\<exists>q.\n                 HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n                 Some (ValVote v None)}", "by (intro minval_step1) auto"], ["proof (state)\nthis:\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n               Some (ValVote v None)}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "also"], ["proof (state)\nthis:\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n               Some (ValVote v None)}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with nxt1 True"], ["proof (chain)\npicking this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n               Some (ValVote v None)}", "have \"\\<dots> = { x (rho r q) | q . q \\<in> msgRcvd ?msgs }\""], ["proof (prove)\nusing this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n  smallestValNoVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  \\<in> {v. \\<exists>q.\n               HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n               Some (ValVote v None)}\n\ngoal (1 subgoal):\n 1. {v. \\<exists>q.\n           HOrcvdMsgs UV_M r p (HOs r p) (rho r) q =\n           Some (ValVote v None)} =\n    {x (rho r q) |q.\n     q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                       someVoteRcvd_def isValVote_def msgRcvd_def send1_def)"], ["proof (state)\nthis:\n  {v. \\<exists>q.\n         HOrcvdMsgs UV_M r p (HOs r p) (rho r) q = Some (ValVote v None)} =\n  {x (rho r q) |q. q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "finally"], ["proof (chain)\npicking this:\n  x (rho (Suc r) p)\n  \\<in> {x (rho r q) |q.\n         q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}", "obtain q where \"x (rho (Suc r) p) = x (rho r q)\""], ["proof (prove)\nusing this:\n  x (rho (Suc r) p)\n  \\<in> {x (rho r q) |q.\n         q \\<in> msgRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        x (rho (Suc r) p) = x (rho r q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with ih"], ["proof (chain)\npicking this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "case False"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}", "obtain q where\n        \"q \\<in> someVoteRcvd ?msgs\" \n        \"x (rho (Suc r) p) = the (getvote (the (?msgs q)))\""], ["proof (prove)\nusing this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        \\<lbrakk>q \\<in> someVoteRcvd\n                          (HOrcvdMsgs UV_M r p (HOs r p) (rho r));\n         x (rho (Suc r) p) =\n         the (getvote\n               (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: next1_def x_update_def)"], ["proof (state)\nthis:\n  q \\<in> someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  x (rho (Suc r) p) =\n  the (getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)))\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with nxt1"], ["proof (chain)\npicking this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  q \\<in> someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  x (rho (Suc r) p) =\n  the (getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)))", "have \"vote (rho r q) = Some (x (rho (Suc r) p))\""], ["proof (prove)\nusing this:\n  next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p) \\<and>\n  step r \\<noteq> 0\n  q \\<in> someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n  x (rho (Suc r) p) =\n  the (getvote (the (HOrcvdMsgs UV_M r p (HOs r p) (rho r) q)))\n\ngoal (1 subgoal):\n 1. vote (rho r q) = Some (x (rho (Suc r) p))", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                       someVoteRcvd_def isValVote_def msgRcvd_def send1_def)"], ["proof (state)\nthis:\n  vote (rho r q) = Some (x (rho (Suc r) p))\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with run com"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  vote (rho r q) = Some (x (rho (Suc r) p))", "have \"x (rho (Suc r) p) = x (rho r q)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  vote (rho r q) = Some (x (rho (Suc r) p))\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho r q)", "by (rule x_vote_eq)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "with ih"], ["proof (chain)\npicking this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>q. x (rho r ?p') = x (rho 0 q)\n  x (rho (Suc r) p) = x (rho r q)\n\ngoal (1 subgoal):\n 1. \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q. x (rho (Suc r) p) = x (rho 0 q)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem uv_integrity:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and dec: \"decide (rho r p) = Some v\"\n  shows \"\\<exists>q. v = x (rho 0 q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "from run dec"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho r p) = Some v", "obtain k where\n    \"decide (rho (Suc k) p) \\<noteq> decide (rho k p)\"\n    \"decide (rho (Suc k) p) = Some v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho r p) = Some v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>decide (rho (Suc k) p) \\<noteq> decide (rho k p);\n         decide (rho (Suc k) p) = Some v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: decided_then_past_decision)"], ["proof (state)\nthis:\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "with run com"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v", "have \"x (rho (Suc k) p) = v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n\ngoal (1 subgoal):\n 1. x (rho (Suc k) p) = v", "by (rule decide_equals_x)"], ["proof (state)\nthis:\n  x (rho (Suc k) p) = v\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "with run com"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  x (rho (Suc k) p) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  x (rho (Suc k) p) = v\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "by (auto dest: x_values_initial)"], ["proof (state)\nthis:\n  \\<exists>q. v = x (rho 0 q)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now turn to Agreement.\n\\<close>"], ["", "lemma two_decisions_agree:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and decidep: \"decide (rho (Suc r) p) \\<noteq> decide (rho r p)\"\n      and decvalp: \"decide (rho (Suc r) p) = Some v\"\n      and decideq: \"decide (rho (Suc (r+k)) q) \\<noteq> decide (rho (r+k) q)\"\n      and decvalq: \"decide (rho (Suc (r+k)) q) = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = w", "from run com decidep decvalp"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  decide (rho (Suc r) p) = Some v", "have \"x (rho (Suc r+k) q) = v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc r) p) \\<noteq> decide (rho r p)\n  decide (rho (Suc r) p) = Some v\n\ngoal (1 subgoal):\n 1. x (rho (Suc r + k) q) = v", "by (rule safety_argument)"], ["proof (state)\nthis:\n  x (rho (Suc r + k) q) = v\n\ngoal (1 subgoal):\n 1. v = w", "moreover"], ["proof (state)\nthis:\n  x (rho (Suc r + k) q) = v\n\ngoal (1 subgoal):\n 1. v = w", "from run com decideq decvalq"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc (r + k)) q) \\<noteq> decide (rho (r + k) q)\n  decide (rho (Suc (r + k)) q) = Some w", "have \"x (rho (Suc (r+k)) q) = w\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc (r + k)) q) \\<noteq> decide (rho (r + k) q)\n  decide (rho (Suc (r + k)) q) = Some w\n\ngoal (1 subgoal):\n 1. x (rho (Suc (r + k)) q) = w", "by (rule decide_equals_x)"], ["proof (state)\nthis:\n  x (rho (Suc (r + k)) q) = w\n\ngoal (1 subgoal):\n 1. v = w", "ultimately"], ["proof (chain)\npicking this:\n  x (rho (Suc r + k) q) = v\n  x (rho (Suc (r + k)) q) = w", "show ?thesis"], ["proof (prove)\nusing this:\n  x (rho (Suc r + k) q) = v\n  x (rho (Suc (r + k)) q) = w\n\ngoal (1 subgoal):\n 1. v = w", "by simp"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem uv_agreement:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"decide (rho m p) = Some v\"\n      and q: \"decide (rho n q) = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = w", "from run p"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho m p) = Some v", "obtain k where\n    k: \"decide (rho (Suc k) p) \\<noteq> decide (rho k p)\"\n       \"decide (rho (Suc k) p) = Some v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho m p) = Some v\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>decide (rho (Suc k) p) \\<noteq> decide (rho k p);\n         decide (rho (Suc k) p) = Some v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: decided_then_past_decision)"], ["proof (state)\nthis:\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n\ngoal (1 subgoal):\n 1. v = w", "from run q"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho n q) = Some w", "obtain l where\n    l: \"decide (rho (Suc l) q) \\<noteq> decide (rho l q)\"\n       \"decide (rho (Suc l) q) = Some w\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho n q) = Some w\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>decide (rho (Suc l) q) \\<noteq> decide (rho l q);\n         decide (rho (Suc l) q) = Some w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: decided_then_past_decision)"], ["proof (state)\nthis:\n  decide (rho (Suc l) q) \\<noteq> decide (rho l q)\n  decide (rho (Suc l) q) = Some w\n\ngoal (1 subgoal):\n 1. v = w", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof (cases \"k \\<le> l\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> v = w\n 2. \\<not> k \\<le> l \\<Longrightarrow> v = w", "case True"], ["proof (state)\nthis:\n  k \\<le> l\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> v = w\n 2. \\<not> k \\<le> l \\<Longrightarrow> v = w", "then"], ["proof (chain)\npicking this:\n  k \\<le> l", "obtain m where m: \"l = k+m\""], ["proof (prove)\nusing this:\n  k \\<le> l\n\ngoal (1 subgoal):\n 1. (\\<And>m. l = k + m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  l = k + m\n\ngoal (2 subgoals):\n 1. k \\<le> l \\<Longrightarrow> v = w\n 2. \\<not> k \\<le> l \\<Longrightarrow> v = w", "from run com k l m"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n  decide (rho (Suc l) q) \\<noteq> decide (rho l q)\n  decide (rho (Suc l) q) = Some w\n  l = k + m", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n  decide (rho (Suc l) q) \\<noteq> decide (rho l q)\n  decide (rho (Suc l) q) = Some w\n  l = k + m\n\ngoal (1 subgoal):\n 1. v = w", "by (blast dest: two_decisions_agree)"], ["proof (state)\nthis:\n  v = w\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow> v = w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow> v = w", "case False"], ["proof (state)\nthis:\n  \\<not> k \\<le> l\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow> v = w", "hence \"l \\<le> k\""], ["proof (prove)\nusing this:\n  \\<not> k \\<le> l\n\ngoal (1 subgoal):\n 1. l \\<le> k", "by simp"], ["proof (state)\nthis:\n  l \\<le> k\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow> v = w", "then"], ["proof (chain)\npicking this:\n  l \\<le> k", "obtain m where m: \"k = l+m\""], ["proof (prove)\nusing this:\n  l \\<le> k\n\ngoal (1 subgoal):\n 1. (\\<And>m. k = l + m \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  k = l + m\n\ngoal (1 subgoal):\n 1. \\<not> k \\<le> l \\<Longrightarrow> v = w", "from run com k l m"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n  decide (rho (Suc l) q) \\<noteq> decide (rho l q)\n  decide (rho (Suc l) q) = Some w\n  k = l + m", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  decide (rho (Suc k) p) \\<noteq> decide (rho k p)\n  decide (rho (Suc k) p) = Some v\n  decide (rho (Suc l) q) \\<noteq> decide (rho l q)\n  decide (rho (Suc l) q) = Some w\n  k = l + m\n\ngoal (1 subgoal):\n 1. v = w", "by (blast dest: two_decisions_agree)"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Irrevocability is a consequence of Agreement and the fact that no process\n  can decide \\<open>None\\<close>.\n\\<close>"], ["", "theorem uv_irrevocability:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and p: \"decide (rho m p) = Some v\"\n  shows \"decide (rho (m+n) p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decide (rho (m + n) p) = Some v", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. decide (rho (m + 0) p) = Some v\n 2. \\<And>n.\n       decide (rho (m + n) p) = Some v \\<Longrightarrow>\n       decide (rho (m + Suc n) p) = Some v", "from p"], ["proof (chain)\npicking this:\n  decide (rho m p) = Some v", "show \"decide (rho (m+0) p) = Some v\""], ["proof (prove)\nusing this:\n  decide (rho m p) = Some v\n\ngoal (1 subgoal):\n 1. decide (rho (m + 0) p) = Some v", "by simp"], ["proof (state)\nthis:\n  decide (rho (m + 0) p) = Some v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       decide (rho (m + n) p) = Some v \\<Longrightarrow>\n       decide (rho (m + Suc n) p) = Some v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       decide (rho (m + n) p) = Some v \\<Longrightarrow>\n       decide (rho (m + Suc n) p) = Some v", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       decide (rho (m + n) p) = Some v \\<Longrightarrow>\n       decide (rho (m + Suc n) p) = Some v", "assume ih: \"decide (rho (m+n) p) = Some v\""], ["proof (state)\nthis:\n  decide (rho (m + n) p) = Some v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       decide (rho (m + n) p) = Some v \\<Longrightarrow>\n       decide (rho (m + Suc n) p) = Some v", "show \"decide (rho (m + Suc n) p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) = Some v", "proof (rule classical)"], ["proof (state)\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) \\<noteq> Some v \\<Longrightarrow>\n    decide (rho (m + Suc n) p) = Some v", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  decide (rho (m + Suc n) p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) \\<noteq> Some v \\<Longrightarrow>\n    decide (rho (m + Suc n) p) = Some v", "with run ih"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  decide (rho (m + n) p) = Some v\n  decide (rho (m + Suc n) p) \\<noteq> Some v", "obtain w where w: \"decide (rho (m + Suc n) p) = Some w\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  decide (rho (m + n) p) = Some v\n  decide (rho (m + Suc n) p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        decide (rho (m + Suc n) p) = Some w \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest!: decide_nonnull)"], ["proof (state)\nthis:\n  decide (rho (m + Suc n) p) = Some w\n\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) \\<noteq> Some v \\<Longrightarrow>\n    decide (rho (m + Suc n) p) = Some v", "with p"], ["proof (chain)\npicking this:\n  decide (rho m p) = Some v\n  decide (rho (m + Suc n) p) = Some w", "have \"w = v\""], ["proof (prove)\nusing this:\n  decide (rho m p) = Some v\n  decide (rho (m + Suc n) p) = Some w\n\ngoal (1 subgoal):\n 1. w = v", "by (auto simp: uv_agreement[OF run com])"], ["proof (state)\nthis:\n  w = v\n\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) \\<noteq> Some v \\<Longrightarrow>\n    decide (rho (m + Suc n) p) = Some v", "with w"], ["proof (chain)\npicking this:\n  decide (rho (m + Suc n) p) = Some w\n  w = v", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (m + Suc n) p) = Some w\n  w = v\n\ngoal (1 subgoal):\n 1. decide (rho (m + Suc n) p) = Some v", "by simp"], ["proof (state)\nthis:\n  decide (rho (m + Suc n) p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decide (rho (m + Suc n) p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of Termination\\<close>"], ["", "text \\<open>\n  Two processes having the same \\emph{Heard-Of} set at some round will\n  hold the same value in their \\<open>x\\<close> variable at the next round.\n\\<close>"], ["", "(* The proof relies on the previous lemma @{text vote_agreement}. *)"], ["", "lemma hoeq_xeq:\n  assumes run: \"HORun UV_M rho HOs\"\n      and com: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and hoeq: \"HOs r p = HOs r q\"\n  shows \"x (rho (Suc r) p) = x (rho (Suc r) q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "let \"?msgs p\" = \"HOrcvdMsgs UV_M r p (HOs r p) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "from hoeq"], ["proof (chain)\npicking this:\n  HOs r p = HOs r q", "have msgeq: \"?msgs p = ?msgs q\""], ["proof (prove)\nusing this:\n  HOs r p = HOs r q\n\ngoal (1 subgoal):\n 1. HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n    HOrcvdMsgs UV_M r q (HOs r q) (rho r)", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                   send0_def send1_def)"], ["proof (state)\nthis:\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "proof (cases \"step r = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. step r = 0 \\<Longrightarrow> x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "case True"], ["proof (state)\nthis:\n  step r = 0\n\ngoal (2 subgoals):\n 1. step r = 0 \\<Longrightarrow> x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r = 0", "have \"\\<forall>p. next0 r p (rho r p) (?msgs p) (rho (Suc r) p)\" (is \"\\<forall>p. ?nxt0 p\")"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r = 0\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n        (rho (Suc r) p)", "by (force simp: UV_HOMachine_def HORun_eq HOnextConfig_eq\n                      nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  \\<forall>p.\n     next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n      (rho (Suc r) p)\n\ngoal (2 subgoals):\n 1. step r = 0 \\<Longrightarrow> x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "hence \"?nxt0 p\" \"?nxt0 q\""], ["proof (prove)\nusing this:\n  \\<forall>p.\n     next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n      (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) &&&\n    next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q)", "by auto"], ["proof (state)\nthis:\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (2 subgoals):\n 1. step r = 0 \\<Longrightarrow> x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with msgeq"], ["proof (chain)\npicking this:\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r)\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)", "show ?thesis"], ["proof (prove)\nusing this:\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r)\n  next0 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  next0 r q (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "assume stp: \"step r \\<noteq> 0\""], ["proof (state)\nthis:\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r \\<noteq> 0", "have \"\\<forall>p. next1 r p (rho r p) (?msgs p) (rho (Suc r) p)\" (is \"\\<forall>p. ?nxt1 p\")"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n        (rho (Suc r) p)", "by (force simp: UV_HOMachine_def HORun_eq HOnextConfig_eq\n                      nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  \\<forall>p.\n     next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n      (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "hence \"x_update (rho r p) (?msgs p) (rho (Suc r) p)\"\n          \"x_update (rho r q) (?msgs q) (rho (Suc r) q)\""], ["proof (prove)\nusing this:\n  \\<forall>p.\n     next1 r p (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n      (rho (Suc r) p)\n\ngoal (1 subgoal):\n 1. UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) &&&\n    UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n     (rho (Suc r) q)", "by (auto simp: next1_def)"], ["proof (state)\nthis:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with msgeq"], ["proof (chain)\npicking this:\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r)\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)", "have\n      x': \"x_update (rho r p) (?msgs p) (rho (Suc r) p)\"\n          \"x_update (rho r q) (?msgs p) (rho (Suc r) q)\""], ["proof (prove)\nusing this:\n  HOrcvdMsgs UV_M r p (HOs r p) (rho r) =\n  HOrcvdMsgs UV_M r q (HOs r q) (rho r)\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r q (HOs r q) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) p) &&&\n    UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n     (rho (Suc r) q)", "by auto"], ["proof (state)\nthis:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. step r \\<noteq> 0 \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "proof (cases \"someVoteRcvd (?msgs p) = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "case True"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n\ngoal (2 subgoals):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) =\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)\n 2. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with x'"], ["proof (chain)\npicking this:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) q)\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) q)\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) = {}\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "by (auto simp: x_update_def)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho (Suc r) q)\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "case False"], ["proof (state)\nthis:\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with x' stp"], ["proof (chain)\npicking this:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) q)\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}", "obtain qp qq where\n        \"vote (rho r qp) = Some (x (rho (Suc r) p))\" and\n        \"vote (rho r qq) = Some (x (rho (Suc r) q))\""], ["proof (prove)\nusing this:\n  UvDefs.x_update (rho r p) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) p)\n  UvDefs.x_update (rho r q) (HOrcvdMsgs UV_M r p (HOs r p) (rho r))\n   (rho (Suc r) q)\n  step r \\<noteq> 0\n  someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>qp qq.\n        \\<lbrakk>vote (rho r qp) = Some (x (rho (Suc r) p));\n         vote (rho r qq) = Some (x (rho (Suc r) q))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                        x_update_def someVoteRcvd_def isValVote_def \n                        msgRcvd_def send1_def)"], ["proof (state)\nthis:\n  vote (rho r qp) = Some (x (rho (Suc r) p))\n  vote (rho r qq) = Some (x (rho (Suc r) q))\n\ngoal (1 subgoal):\n 1. someVoteRcvd (HOrcvdMsgs UV_M r p (HOs r p) (rho r)) \\<noteq>\n    {} \\<Longrightarrow>\n    x (rho (Suc r) p) = x (rho (Suc r) q)", "with run com"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  vote (rho r qp) = Some (x (rho (Suc r) p))\n  vote (rho r qq) = Some (x (rho (Suc r) q))", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  vote (rho r qp) = Some (x (rho (Suc r) p))\n  vote (rho r qq) = Some (x (rho (Suc r) q))\n\ngoal (1 subgoal):\n 1. x (rho (Suc r) p) = x (rho (Suc r) q)", "by (rule vote_agreement)"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho (Suc r) q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho (Suc r) q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc r) p) = x (rho (Suc r) q)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  We now prove that \\emph{UniformVoting} terminates.\n\\<close>"], ["", "theorem uv_termination:\n  assumes run: \"HORun UV_M rho HOs\"\n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"\\<exists>r v. decide (rho r p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "txt \\<open>First obtain a round where all \\<open>x\\<close> values agree.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from commG"], ["proof (chain)\npicking this:\n  HOcommGlobal UV_M HOs", "obtain r0 where r0: \"\\<forall>q. HOs r0 q = HOs r0 p\""], ["proof (prove)\nusing this:\n  HOcommGlobal UV_M HOs\n\ngoal (1 subgoal):\n 1. (\\<And>r0.\n        \\<forall>q. HOs r0 q = HOs r0 p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (force simp: UV_HOMachine_def UV_commGlobal_def)"], ["proof (state)\nthis:\n  \\<forall>q. HOs r0 q = HOs r0 p\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "let ?v = \"x (rho (Suc r0) p)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from run commR r0"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  \\<forall>q. HOs r0 q = HOs r0 p", "have xs: \"\\<forall>q. x (rho (Suc r0) q) = ?v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  \\<forall>q. HOs r0 q = HOs r0 p\n\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)", "by (auto dest: hoeq_xeq)"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "txt \\<open>Now obtain a round where all votes agree.\\<close>"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "define r' where \"r' = (if step (Suc r0) = 0 then Suc r0 else Suc (Suc r0))\""], ["proof (state)\nthis:\n  r' = (if step (Suc r0) = 0 then Suc r0 else Suc (Suc r0))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "have stp': \"step r' = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. step r' = 0", "by (simp add: r'_def step_def mod_Suc)"], ["proof (state)\nthis:\n  step r' = 0\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "have x': \"\\<forall>q. x (rho r' q) = ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho r' q) = x (rho (Suc r0) p)", "proof (auto simp: r'_def)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       step (Suc r0) = 0 \\<Longrightarrow>\n       x (rho (Suc r0) q) = x (rho (Suc r0) p)\n 2. \\<And>q.\n       0 < step (Suc r0) \\<Longrightarrow>\n       x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "fix q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>q.\n       step (Suc r0) = 0 \\<Longrightarrow>\n       x (rho (Suc r0) q) = x (rho (Suc r0) p)\n 2. \\<And>q.\n       0 < step (Suc r0) \\<Longrightarrow>\n       x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "from xs"], ["proof (chain)\npicking this:\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)", "show \"x (rho (Suc r0) q) = ?v\""], ["proof (prove)\nusing this:\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc r0) q) = x (rho (Suc r0) p)", ".."], ["proof (state)\nthis:\n  x (rho (Suc r0) q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       0 < step (Suc r0) \\<Longrightarrow>\n       x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       0 < step (Suc r0) \\<Longrightarrow>\n       x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       0 < step (Suc r0) \\<Longrightarrow>\n       x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "from run commR xs"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)", "show \"x (rho (Suc (Suc r0)) q) = ?v\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  \\<forall>q. x (rho (Suc r0) q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)", "by (rule same_x_stable)"], ["proof (state)\nthis:\n  x (rho (Suc (Suc r0)) q) = x (rho (Suc r0) p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q. x (rho r' q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "have vote': \"\\<forall>q. vote (rho (Suc r') q) = Some ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "let ?msgs = \"HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "from run stp'"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step r' = 0", "have \"next0 r' q (rho r' q) ?msgs (rho (Suc r') q)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step r' = 0\n\ngoal (1 subgoal):\n 1. next0 r' q (rho r' q) (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n     (rho (Suc r') q)", "by (force simp: UV_HOMachine_def HORun_eq HOnextConfig_eq\n                      nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next0 r' q (rho r' q) (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n   (rho (Suc r') q)\n\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "moreover"], ["proof (state)\nthis:\n  next0 r' q (rho r' q) (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n   (rho (Suc r') q)\n\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "from stp' x'"], ["proof (chain)\npicking this:\n  step r' = 0\n  \\<forall>q. x (rho r' q) = x (rho (Suc r0) p)", "have \"\\<forall>q' \\<in> msgRcvd ?msgs. ?msgs q' = Some (Val ?v)\""], ["proof (prove)\nusing this:\n  step r' = 0\n  \\<forall>q. x (rho r' q) = x (rho (Suc r0) p)\n\ngoal (1 subgoal):\n 1. \\<forall>q'\\<in>msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')).\n       HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') q' =\n       Some (Val (x (rho (Suc r0) p)))", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def \n                     send0_def msgRcvd_def)"], ["proof (state)\nthis:\n  \\<forall>q'\\<in>msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')).\n     HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') q' =\n     Some (Val (x (rho (Suc r0) p)))\n\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "moreover"], ["proof (state)\nthis:\n  \\<forall>q'\\<in>msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')).\n     HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') q' =\n     Some (Val (x (rho (Suc r0) p)))\n\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "from commR"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "have \"msgRcvd ?msgs \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')) \\<noteq> {}", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "ultimately"], ["proof (chain)\npicking this:\n  next0 r' q (rho r' q) (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n   (rho (Suc r') q)\n  \\<forall>q'\\<in>msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')).\n     HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') q' =\n     Some (Val (x (rho (Suc r0) p)))\n  msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')) \\<noteq> {}", "show \"vote (rho (Suc r') q) = Some ?v\""], ["proof (prove)\nusing this:\n  next0 r' q (rho r' q) (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r'))\n   (rho (Suc r') q)\n  \\<forall>q'\\<in>msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')).\n     HOrcvdMsgs UV_M r' q (HOs r' q) (rho r') q' =\n     Some (Val (x (rho (Suc r0) p)))\n  msgRcvd (HOrcvdMsgs UV_M r' q (HOs r' q) (rho r')) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "by (auto simp: next0_def)"], ["proof (state)\nthis:\n  vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "txt \\<open>At the subsequent round, process \\<open>p\\<close> will decide.\\<close>"], ["proof (state)\nthis:\n  \\<forall>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "let ?r'' = \"Suc r'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "let ?msgs' = \"HOrcvdMsgs UV_M ?r'' p (HOs ?r'' p) (rho ?r'')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from stp'"], ["proof (chain)\npicking this:\n  step r' = 0", "have stp'': \"step ?r'' = 1\""], ["proof (prove)\nusing this:\n  step r' = 0\n\ngoal (1 subgoal):\n 1. step (Suc r') = 1", "by (simp add: step_def mod_Suc)"], ["proof (state)\nthis:\n  step (Suc r') = 1\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "with run"], ["proof (chain)\npicking this:\n  HORun UV_M rho HOs\n  step (Suc r') = 1", "have \"next1 ?r'' p (rho ?r'' p) ?msgs' (rho (Suc ?r'') p)\""], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  step (Suc r') = 1\n\ngoal (1 subgoal):\n 1. next1 (Suc r') p (rho (Suc r') p)\n     (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n     (rho (Suc (Suc r')) p)", "by (auto simp: UV_HOMachine_def HORun_eq HOnextConfig_eq\n                   nextState_def UV_nextState_def)"], ["proof (state)\nthis:\n  next1 (Suc r') p (rho (Suc r') p)\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (rho (Suc (Suc r')) p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "moreover"], ["proof (state)\nthis:\n  next1 (Suc r') p (rho (Suc r') p)\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (rho (Suc (Suc r')) p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from stp'' vote'"], ["proof (chain)\npicking this:\n  step (Suc r') = 1\n  \\<forall>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))", "have \"identicalVoteRcvd ?msgs' ?v\""], ["proof (prove)\nusing this:\n  step (Suc r') = 1\n  \\<forall>q. vote (rho (Suc r') q) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. identicalVoteRcvd\n     (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n     (x (rho (Suc r0) p))", "by (auto simp: UV_HOMachine_def HOrcvdMsgs_def UV_sendMsg_def\n                   send1_def identicalVoteRcvd_def isValVote_def msgRcvd_def)"], ["proof (state)\nthis:\n  identicalVoteRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "moreover"], ["proof (state)\nthis:\n  identicalVoteRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from commR"], ["proof (chain)\npicking this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)", "have \"msgRcvd ?msgs' \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n\ngoal (1 subgoal):\n 1. msgRcvd\n     (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r'))) \\<noteq>\n    {}", "by (force dest: some_common_msg)"], ["proof (state)\nthis:\n  msgRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r'))) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "ultimately"], ["proof (chain)\npicking this:\n  next1 (Suc r') p (rho (Suc r') p)\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (rho (Suc (Suc r')) p)\n  identicalVoteRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (x (rho (Suc r0) p))\n  msgRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r'))) \\<noteq>\n  {}", "have \"decide (rho (Suc ?r'') p) = Some ?v\""], ["proof (prove)\nusing this:\n  next1 (Suc r') p (rho (Suc r') p)\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (rho (Suc (Suc r')) p)\n  identicalVoteRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r')))\n   (x (rho (Suc r0) p))\n  msgRcvd\n   (HOrcvdMsgs UV_M (Suc r') p (HOs (Suc r') p) (rho (Suc r'))) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. decide (rho (Suc (Suc r')) p) = Some (x (rho (Suc r0) p))", "by (force simp: next1_def dec_update_def identicalVoteRcvd_def\n                    msgRcvd_def isValVote_def)"], ["proof (state)\nthis:\n  decide (rho (Suc (Suc r')) p) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "(* subtle point: there can't be two different identical votes received,\n     proving this requires \"force\" and takes a while *)"], ["proof (state)\nthis:\n  decide (rho (Suc (Suc r')) p) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "thus ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (Suc (Suc r')) p) = Some (x (rho (Suc r0) p))\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "by blast"], ["proof (state)\nthis:\n  \\<exists>r v. decide (rho r p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>\\emph{UniformVoting} Solves Consensus\\<close>"], ["", "text \\<open>\n  Summing up, all (coarse-grained) runs of \\emph{UniformVoting} for\n  HO collections that satisfy the communication predicate satisfy\n  the Consensus property.\n\\<close>"], ["", "theorem uv_consensus:\n  assumes run: \"HORun UV_M rho HOs\" \n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"consensus (x \\<circ> (rho 0)) decide rho\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consensus (x \\<circ> rho 0) decide rho", "using assms"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  HOcommGlobal UV_M HOs\n\ngoal (1 subgoal):\n 1. consensus (x \\<circ> rho 0) decide rho", "unfolding consensus_def image_def"], ["proof (prove)\nusing this:\n  HORun UV_M rho HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  HOcommGlobal UV_M HOs\n\ngoal (1 subgoal):\n 1. (\\<forall>n p v.\n        decide (rho n p) = Some v \\<longrightarrow>\n        v \\<in> {y. \\<exists>xa\\<in>UNIV. y = (x \\<circ> rho 0) xa}) \\<and>\n    (\\<forall>m n p q v w.\n        decide (rho m p) = Some v \\<and>\n        decide (rho n q) = Some w \\<longrightarrow>\n        v = w) \\<and>\n    (\\<forall>p. \\<exists>n. decide (rho n p) \\<noteq> None)", "by (auto elim: uv_integrity uv_agreement uv_termination)"], ["", "text \\<open>\n  By the reduction theorem, the correctness of the algorithm carries over\n  to the fine-grained model of runs.\n\\<close>"], ["", "theorem uv_consensus_fg:\n  assumes run: \"fg_run UV_M rho HOs HOs (\\<lambda>r q. undefined)\"\n      and commR: \"\\<forall>r. HOcommPerRd UV_M (HOs r)\"\n      and commG: \"HOcommGlobal UV_M HOs\"\n  shows \"consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)\"\n    (is \"consensus ?inits _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)", "proof (rule local_property_reduction[OF run consensus_is_local])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun UV_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "fix crun"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun UV_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "assume crun: \"CSHORun UV_M crun HOs HOs (\\<lambda>r q. undefined)\"\n     and init: \"crun 0 = state (rho 0)\""], ["proof (state)\nthis:\n  CSHORun UV_M crun HOs HOs (\\<lambda>r q. undefined)\n  crun 0 = state (rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun UV_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "from crun"], ["proof (chain)\npicking this:\n  CSHORun UV_M crun HOs HOs (\\<lambda>r q. undefined)", "have \"HORun UV_M crun HOs\""], ["proof (prove)\nusing this:\n  CSHORun UV_M crun HOs HOs (\\<lambda>r q. undefined)\n\ngoal (1 subgoal):\n 1. HORun UV_M crun HOs", "by (unfold HORun_def SHORun_def)"], ["proof (state)\nthis:\n  HORun UV_M crun HOs\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun UV_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "from this commR commG"], ["proof (chain)\npicking this:\n  HORun UV_M crun HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  HOcommGlobal UV_M HOs", "have \"consensus (x \\<circ> (crun 0)) decide crun\""], ["proof (prove)\nusing this:\n  HORun UV_M crun HOs\n  \\<forall>r. HOcommPerRd UV_M (HOs r)\n  HOcommGlobal UV_M HOs\n\ngoal (1 subgoal):\n 1. consensus (x \\<circ> crun 0) decide crun", "by (rule uv_consensus)"], ["proof (state)\nthis:\n  consensus (x \\<circ> crun 0) decide crun\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun UV_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "with init"], ["proof (chain)\npicking this:\n  crun 0 = state (rho 0)\n  consensus (x \\<circ> crun 0) decide crun", "show \"consensus ?inits decide crun\""], ["proof (prove)\nusing this:\n  crun 0 = state (rho 0)\n  consensus (x \\<circ> crun 0) decide crun\n\ngoal (1 subgoal):\n 1. consensus (\\<lambda>p. x (state (rho 0) p)) decide crun", "by (simp add: o_def)"], ["proof (state)\nthis:\n  consensus (\\<lambda>p. x (state (rho 0) p)) decide crun\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}