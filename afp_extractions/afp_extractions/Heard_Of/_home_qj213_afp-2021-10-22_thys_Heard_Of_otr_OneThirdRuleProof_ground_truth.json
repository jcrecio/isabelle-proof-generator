{"file_name": "/home/qj213/afp-2021-10-22/thys/Heard_Of/otr/OneThirdRuleProof.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Heard_Of", "problem_names": ["lemma vinv_invariant:\n  assumes run:\"HORun OTR_M rho HOs\"\n  shows \"VInv rho n\"", "theorem OTR_integrity:\n  assumes run:\"HORun OTR_M rho HOs\" and dec: \"decide (rho n p) = Some v\"\n  shows \"\\<exists>q. v = x (rho 0 q)\"", "lemma nextState_change:\n  assumes \"HORun OTR_M rho HOs\"\n      and \"\\<not> ((2*N) div 3 \n              < card {q. (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) q \\<noteq> None})\"\n  shows \"rho (Suc n) p = rho n p\"", "lemma nextState_decide:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and chg: \"decide (rho (Suc n) p) \\<noteq> decide (rho n p)\"\n  shows \"TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n                   (the (decide (rho (Suc n) p)))\"", "lemma A1:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and dec: \"decide (rho (Suc n) p) = Some v\"\n  and chg: \"decide (rho (Suc n) p) \\<noteq> decide (rho n p)\" (is \"decide ?st' \\<noteq> decide ?st\")\n  shows \"(2*N) div 3 < card { q . x (rho n q) = v }\"", "lemma A2:\n  assumes run: \"HORun OTR_M rho HOs\"\n  and HO: \"(2*N) div 3\n             < card { q . HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None }\"\n  and maj: \"(2*N) div 3 < card { q . x (rho n q) = v }\"\n  shows \"x (rho (Suc n) p) = v\"", "lemma A3:\n  assumes run:\"HORun OTR_M rho HOs\"\n      and n: \"(2*N) div 3 < card { q . x (rho n q) = v }\" (is \"?twothird n\")\n  shows \"?twothird (n+k)\"", "lemma A4:\n  assumes run: \"HORun OTR_M rho HOs\" \n  and dec: \"decide (rho n p) = Some v\" (is \"?dec n\")\n  shows \"\\<forall>k. (2*N) div 3 < card { q . x (rho (n+k) q) = v }\"\n        (is \"\\<forall>k. ?twothird (n+k)\")", "lemma A5:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and p: \"decide (rho n p) = Some v\"\n  and p': \"decide (rho (n+k) p') = Some w\"\n  shows \"v = w\"", "theorem OTR_agreement:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and p: \"decide (rho n p) = Some v\"\n  and p': \"decide (rho m p') = Some w\"\n  shows \"v = w\"", "theorem OTR_termination:\n  assumes run: \"HORun OTR_M rho HOs\"\n      and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"\\<exists>r v. decide (rho r p) = Some v\"", "theorem OTR_consensus:\n  assumes run: \"HORun OTR_M rho HOs\" and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"consensus (x \\<circ> (rho 0)) decide rho\"", "theorem OTR_consensus_fg:\n  assumes run: \"fg_run OTR_M rho HOs HOs (\\<lambda>r q. undefined)\"\n      and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)\"\n    (is \"consensus ?inits _ _\")"], "translations": [["", "lemma vinv_invariant:\n  assumes run:\"HORun OTR_M rho HOs\"\n  shows \"VInv rho n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. VInv rho n", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. VInv rho 0\n 2. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "show \"VInv rho 0\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. VInv rho 0", "by (simp add: HORun_eq HOinitConfig_eq OTR_HOMachine_def initState_def\n                  OTR_initState_def VInv_def image_def)"], ["proof (state)\nthis:\n  VInv rho 0\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "assume ih: \"VInv rho m\""], ["proof (state)\nthis:\n  VInv rho m\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "let ?xinit = \"range (x \\<circ> (rho 0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "have \"range (x \\<circ> (rho (Suc m))) \\<subseteq> ?xinit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (x \\<circ> rho (Suc m)) \\<subseteq> range (x \\<circ> rho 0)", "proof (clarsimp cong del: image_cong_simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. x (rho (Suc m) xa) \\<in> range (x \\<circ> rho 0)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. x (rho (Suc m) xa) \\<in> range (x \\<circ> rho 0)", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have nxt: \"OTR_nextState m p (rho m p) \n                        (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n                        (rho (Suc m) p)\"\n          (is \"OTR_nextState _ _ ?st ?msgs ?st'\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n     (rho (Suc m) p)", "by (simp add: HORun_eq HOnextConfig_eq OTR_HOMachine_def nextState_def)"], ["proof (state)\nthis:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n\ngoal (1 subgoal):\n 1. \\<And>xa. x (rho (Suc m) xa) \\<in> range (x \\<circ> rho 0)", "show \"x ?st' \\<in> ?xinit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "proof (cases \"(2*N) div 3 < card (HOs m p)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "case True"], ["proof (state)\nthis:\n  2 * N div 3 < card (HOs m p)\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "hence HO: \"HOs m p \\<noteq> {}\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card (HOs m p)\n\ngoal (1 subgoal):\n 1. HOs m p \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  HOs m p \\<noteq> {}\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "let ?MFRs = \"{v. MFR ?msgs v}\""], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "have \"Min ?MFRs \\<in> ?MFRs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n    \\<in> {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}", "proof (rule Min_in)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n 2. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}", "from HO"], ["proof (chain)\npicking this:\n  HOs m p \\<noteq> {}", "have \"?MFRs \\<subseteq> (the \\<circ> ?msgs)`(HOs m p)\""], ["proof (prove)\nusing this:\n  HOs m p \\<noteq> {}\n\ngoal (1 subgoal):\n 1. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n    \\<subseteq> (the \\<circ> HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) `\n                HOs m p", "by (auto simp: image_def intro: MFR_in_msgs)"], ["proof (state)\nthis:\n  {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  \\<subseteq> (the \\<circ> HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) ` HOs m p\n\ngoal (2 subgoals):\n 1. finite {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n 2. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}", "thus \"finite ?MFRs\""], ["proof (prove)\nusing this:\n  {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  \\<subseteq> (the \\<circ> HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) ` HOs m p\n\ngoal (1 subgoal):\n 1. finite {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}", "by (auto elim: finite_subset)"], ["proof (state)\nthis:\n  finite {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n\ngoal (1 subgoal):\n 1. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}", "from MFR_exists"], ["proof (chain)\npicking this:\n  \\<exists>v. MFR ?msgs v", "show \"?MFRs \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>v. MFR ?msgs v\n\ngoal (1 subgoal):\n 1. {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} \\<noteq> {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  \\<in> {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "with HO"], ["proof (chain)\npicking this:\n  HOs m p \\<noteq> {}\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  \\<in> {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}", "have \"\\<exists>q \\<in> HOs m p. Min ?MFRs = the (?msgs q)\""], ["proof (prove)\nusing this:\n  HOs m p \\<noteq> {}\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  \\<in> {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>HOs m p.\n       Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} =\n       the (HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q)", "by (intro MFR_in_msgs) auto"], ["proof (state)\nthis:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} =\n     the (HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q)\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "hence \"\\<exists>q \\<in> HOs m p. Min ?MFRs = x (rho m q)\""], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} =\n     the (HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q)\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>HOs m p.\n       Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)", "by (auto simp: HOrcvdMsgs_def OTR_HOMachine_def OTR_sendMsg_def)"], ["proof (state)\nthis:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "moreover"], ["proof (state)\nthis:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "from True nxt"], ["proof (chain)\npicking this:\n  2 * N div 3 < card (HOs m p)\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)", "have \"x ?st' = Min ?MFRs\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card (HOs m p)\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc m) p) =\n    Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}", "by (simp add: OTR_nextState_def HOrcvdMsgs_def)"], ["proof (state)\nthis:\n  x (rho (Suc m) p) =\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n\ngoal (2 subgoals):\n 1. 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)\n  x (rho (Suc m) p) =\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)\n  x (rho (Suc m) p) =\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n\ngoal (1 subgoal):\n 1. x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "using ih"], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>HOs m p.\n     Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v} = x (rho m q)\n  x (rho (Suc m) p) =\n  Min {v. MFR (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v}\n  VInv rho m\n\ngoal (1 subgoal):\n 1. x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "by (auto simp: VInv_def image_def)"], ["proof (state)\nthis:\n  x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "case False"], ["proof (state)\nthis:\n  \\<not> 2 * N div 3 < card (HOs m p)\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3 < card (HOs m p) \\<Longrightarrow>\n    x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "with nxt ih"], ["proof (chain)\npicking this:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<not> 2 * N div 3 < card (HOs m p)", "show ?thesis"], ["proof (prove)\nusing this:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<not> 2 * N div 3 < card (HOs m p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)", "by (auto simp: OTR_nextState_def VInv_def HOrcvdMsgs_def Let_def)"], ["proof (state)\nthis:\n  x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc m) p) \\<in> range (x \\<circ> rho 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (x \\<circ> rho (Suc m)) \\<subseteq> range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "moreover"], ["proof (state)\nthis:\n  range (x \\<circ> rho (Suc m)) \\<subseteq> range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "have \"\\<forall>p. decide ((rho (Suc m)) p) \\<in> {None} \\<union> (Some ` ?xinit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>p.\n       decide (rho (Suc m) p)\n       \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       decide (rho (Suc m) p)\n       \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       decide (rho (Suc m) p)\n       \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have nxt: \"OTR_nextState m p (rho m p) \n                        (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n                        (rho (Suc m) p)\"\n          (is \"OTR_nextState _ _ ?st ?msgs ?st'\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n     (rho (Suc m) p)", "by (simp add: HORun_eq HOnextConfig_eq OTR_HOMachine_def nextState_def)"], ["proof (state)\nthis:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       decide (rho (Suc m) p)\n       \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "show \"decide ?st' \\<in> {None} \\<union> (Some ` ?xinit)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "proof (cases \"(2*N) div 3 < card {q. ?msgs q \\<noteq> None}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n           None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3\n           < card\n              {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n                  None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "assume HO: \"(2*N) div 3 < card {q. ?msgs q \\<noteq> None}\""], ["proof (state)\nthis:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n           None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<not> 2 * N div 3\n           < card\n              {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n                  None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "proof (cases \"\\<exists>v. TwoThirds ?msgs v\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "case True"], ["proof (state)\nthis:\n  \\<exists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v\n\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "let ?dec = \"\\<some>v. TwoThirds ?msgs v\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "from True"], ["proof (chain)\npicking this:\n  \\<exists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v", "have \"TwoThirds ?msgs ?dec\""], ["proof (prove)\nusing this:\n  \\<exists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n     (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v)\n\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "hence \"HOV ?msgs ?dec \\<noteq> {}\""], ["proof (prove)\nusing this:\n  TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v)\n\ngoal (1 subgoal):\n 1. HOV (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n     (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) \\<noteq>\n    {}", "by (auto simp add: TwoThirds_def)"], ["proof (state)\nthis:\n  HOV (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) \\<noteq>\n  {}\n\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "then"], ["proof (chain)\npicking this:\n  HOV (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) \\<noteq>\n  {}", "obtain q where \"x (rho m q) = ?dec\""], ["proof (prove)\nusing this:\n  HOV (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        x (rho m q) =\n        (SOME v.\n            TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n             v) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: HOV_def HOrcvdMsgs_def OTR_HOMachine_def\n                         OTR_sendMsg_def)"], ["proof (state)\nthis:\n  x (rho m q) =\n  (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v)\n\ngoal (2 subgoals):\n 1. \\<exists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n 2. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "from sym[OF this] nxt ih"], ["proof (chain)\npicking this:\n  (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) =\n  x (rho m q)\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m", "show ?thesis"], ["proof (prove)\nusing this:\n  (SOME v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v) =\n  x (rho m q)\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n\ngoal (1 subgoal):\n 1. decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by (auto simp: OTR_nextState_def VInv_def image_def)"], ["proof (state)\nthis:\n  decide (rho (Suc m) p)\n  \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "case False"], ["proof (state)\nthis:\n  \\<nexists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v\n\ngoal (1 subgoal):\n 1. \\<nexists>v.\n       TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n        v \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "with HO nxt ih"], ["proof (chain)\npicking this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<nexists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<nexists>v. TwoThirds (HOrcvdMsgs OTR_M m p (HOs m p) (rho m)) v\n\ngoal (1 subgoal):\n 1. decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by (auto simp: OTR_nextState_def VInv_def HOrcvdMsgs_def image_def)"], ["proof (state)\nthis:\n  decide (rho (Suc m) p)\n  \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decide (rho (Suc m) p)\n  \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n                  None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n                  None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "case False"], ["proof (state)\nthis:\n  \\<not> 2 * N div 3\n         < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq>\n                  None} \\<Longrightarrow>\n    decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "with nxt ih"], ["proof (chain)\npicking this:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<not> 2 * N div 3\n         < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}", "show ?thesis"], ["proof (prove)\nusing this:\n  OTR_nextState m p (rho m p) (HOrcvdMsgs OTR_M m p (HOs m p) (rho m))\n   (rho (Suc m) p)\n  VInv rho m\n  \\<not> 2 * N div 3\n         < card {q. HOrcvdMsgs OTR_M m p (HOs m p) (rho m) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. decide (rho (Suc m) p)\n    \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by (auto simp: OTR_nextState_def VInv_def image_def)"], ["proof (state)\nthis:\n  decide (rho (Suc m) p)\n  \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  decide (rho (Suc m) p)\n  \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>p.\n     decide (rho (Suc m) p)\n     \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "hence \"range (decide \\<circ> (rho (Suc m))) \\<subseteq> {None} \\<union> (Some ` ?xinit)\""], ["proof (prove)\nusing this:\n  \\<forall>p.\n     decide (rho (Suc m) p)\n     \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. range (decide \\<circ> rho (Suc m))\n    \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by auto"], ["proof (state)\nthis:\n  range (decide \\<circ> rho (Suc m))\n  \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>n. VInv rho n \\<Longrightarrow> VInv rho (Suc n)", "ultimately"], ["proof (chain)\npicking this:\n  range (x \\<circ> rho (Suc m)) \\<subseteq> range (x \\<circ> rho 0)\n  range (decide \\<circ> rho (Suc m))\n  \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)", "show \"VInv rho (Suc m)\""], ["proof (prove)\nusing this:\n  range (x \\<circ> rho (Suc m)) \\<subseteq> range (x \\<circ> rho 0)\n  range (decide \\<circ> rho (Suc m))\n  \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. VInv rho (Suc m)", "by (auto simp: VInv_def image_def)"], ["proof (state)\nthis:\n  VInv rho (Suc m)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Integrity is an immediate consequence.\n\\<close>"], ["", "theorem OTR_integrity:\n  assumes run:\"HORun OTR_M rho HOs\" and dec: \"decide (rho n p) = Some v\"\n  shows \"\\<exists>q. v = x (rho 0 q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "let ?xinit = \"range (x \\<circ> (rho 0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have \"VInv rho n\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. VInv rho n", "by (rule vinv_invariant)"], ["proof (state)\nthis:\n  VInv rho n\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "hence \"range (decide \\<circ> (rho n)) \\<subseteq> {None} \\<union> (Some ` ?xinit)\""], ["proof (prove)\nusing this:\n  VInv rho n\n\ngoal (1 subgoal):\n 1. range (decide \\<circ> rho n)\n    \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by (auto simp: VInv_def Let_def)"], ["proof (state)\nthis:\n  range (decide \\<circ> rho n)\n  \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "hence \"decide ((rho n) p) \\<in> {None} \\<union> (Some ` ?xinit)\""], ["proof (prove)\nusing this:\n  range (decide \\<circ> rho n)\n  \\<subseteq> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. decide (rho n p) \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "by (auto simp: image_def)"], ["proof (state)\nthis:\n  decide (rho n p) \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "with dec"], ["proof (chain)\npicking this:\n  decide (rho n p) = Some v\n  decide (rho n p) \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho n p) = Some v\n  decide (rho n p) \\<in> {None} \\<union> Some ` range (x \\<circ> rho 0)\n\ngoal (1 subgoal):\n 1. \\<exists>q. v = x (rho 0 q)", "by auto"], ["proof (state)\nthis:\n  \\<exists>q. v = x (rho 0 q)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of Agreement\\<close>"], ["", "text \\<open>\n  The following lemma \\<open>A1\\<close> asserts that if process \\<open>p\\<close> \n  decides in a round on a value \\<open>v\\<close> then more than $2/3$ of \n  all processes have \\<open>v\\<close> as their \\<open>x\\<close> value in their \n  local state.\n\n  We show a few simple lemmas in preparation.\n\\<close>"], ["", "lemma nextState_change:\n  assumes \"HORun OTR_M rho HOs\"\n      and \"\\<not> ((2*N) div 3 \n              < card {q. (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) q \\<noteq> None})\"\n  shows \"rho (Suc n) p = rho n p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rho (Suc n) p = rho n p", "using assms"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  \\<not> 2 * N div 3\n         < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. rho (Suc n) p = rho n p", "by (auto simp: HORun_eq HOnextConfig_eq OTR_HOMachine_def\n                 nextState_def OTR_nextState_def)"], ["", "lemma nextState_decide:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and chg: \"decide (rho (Suc n) p) \\<noteq> decide (rho n p)\"\n  shows \"TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n                   (the (decide (rho (Suc n) p)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (the (decide (rho (Suc n) p)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (the (decide (rho (Suc n) p)))", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have \"OTR_nextState n p (rho n p)\n                    (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) (rho (Suc n) p)\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (rho (Suc n) p)", "by (simp add: HORun_eq HOnextConfig_eq OTR_HOMachine_def nextState_def)"], ["proof (state)\nthis:\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (the (decide (rho (Suc n) p)))", "with chg"], ["proof (chain)\npicking this:\n  decide (rho (Suc n) p) \\<noteq> decide (rho n p)\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (Suc n) p) \\<noteq> decide (rho n p)\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (the (decide (rho (Suc n) p)))", "by (auto simp: OTR_nextState_def elim: someI)"], ["proof (state)\nthis:\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (the (decide (rho (Suc n) p)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma A1:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and dec: \"decide (rho (Suc n) p) = Some v\"\n  and chg: \"decide (rho (Suc n) p) \\<noteq> decide (rho n p)\" (is \"decide ?st' \\<noteq> decide ?st\")\n  shows \"(2*N) div 3 < card { q . x (rho n q) = v }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "from run chg"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho (Suc n) p) \\<noteq> decide (rho n p)", "have \"TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) \n                  (the (decide ?st'))\"\n    (is \"TwoThirds ?msgs _\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho (Suc n) p) \\<noteq> decide (rho n p)\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (the (decide (rho (Suc n) p)))", "by (rule nextState_decide)"], ["proof (state)\nthis:\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (the (decide (rho (Suc n) p)))\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "with dec"], ["proof (chain)\npicking this:\n  decide (rho (Suc n) p) = Some v\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (the (decide (rho (Suc n) p)))", "have \"TwoThirds ?msgs v\""], ["proof (prove)\nusing this:\n  decide (rho (Suc n) p) = Some v\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (the (decide (rho (Suc n) p)))\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v", "by simp"], ["proof (state)\nthis:\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "hence \"(2*N) div 3 < card { q . ?msgs q = Some v }\""], ["proof (prove)\nusing this:\n  TwoThirds (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n\ngoal (1 subgoal):\n 1. 2 * N div 3\n    < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}", "by (simp add: TwoThirds_def HOV_def)"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "moreover"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "have \"{ q . ?msgs q = Some v } \\<subseteq> { q . x (rho n q) = v }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n    \\<subseteq> {q. x (rho n q) = v}", "by (auto simp: OTR_HOMachine_def OTR_sendMsg_def HOrcvdMsgs_def)"], ["proof (state)\nthis:\n  {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<subseteq> {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "hence \"card { q . ?msgs q = Some v } \\<le> card { q . x (rho n q) = v }\""], ["proof (prove)\nusing this:\n  {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<subseteq> {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n    \\<le> card {q. x (rho n q) = v}", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "ultimately"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. x (rho n q) = v}", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho n q) = v}", "by simp"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho n q) = v}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The following lemma \\<open>A2\\<close> contains the crucial correctness argument:\n  if more than $2/3$ of all processes send \\<open>v\\<close> and process \\<open>p\\<close>\n  hears from more than $2/3$ of all processes then the \\<open>x\\<close> field of\n  \\<open>p\\<close> will be updated to \\<open>v\\<close>.\n\\<close>"], ["", "lemma A2:\n  assumes run: \"HORun OTR_M rho HOs\"\n  and HO: \"(2*N) div 3\n             < card { q . HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None }\"\n  and maj: \"(2*N) div 3 < card { q . x (rho n q) = v }\"\n  shows \"x (rho (Suc n) p) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have nxt: \"OTR_nextState n p (rho n p) \n                      (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) \n                      (rho (Suc n) p)\"\n        (is \"OTR_nextState _ _ ?st ?msgs ?st'\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n     (rho (Suc n) p)", "by (simp add: HORun_eq HOnextConfig_eq OTR_HOMachine_def nextState_def)"], ["proof (state)\nthis:\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "let ?HOVothers = \"\\<Union> { HOV ?msgs w | w . w \\<noteq> v}\"\n  \\<comment> \\<open>processes from which @{text p} received values different from @{text v}\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have w: \"card ?HOVothers \\<le> N div 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "have \"card ?HOVothers \\<le> card (UNIV - { q . x (rho n q) = v })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> card (UNIV - {q. x (rho n q) = v})", "by (auto simp: HOV_def HOrcvdMsgs_def OTR_HOMachine_def OTR_sendMsg_def \n               intro: card_mono)"], ["proof (state)\nthis:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> card (UNIV - {q. x (rho n q) = v})\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "also"], ["proof (state)\nthis:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> card (UNIV - {q. x (rho n q) = v})\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "have \"\\<dots> = N - card { q . x (rho n q) = v }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (UNIV - {q. x (rho n q) = v}) = N - card {q. x (rho n q) = v}", "by (auto simp: card_Diff_subset)"], ["proof (state)\nthis:\n  card (UNIV - {q. x (rho n q) = v}) = N - card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "also"], ["proof (state)\nthis:\n  card (UNIV - {q. x (rho n q) = v}) = N - card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "from maj"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. x (rho n q) = v}", "have \"\\<dots> \\<le> N div 3\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. N - card {q. x (rho n q) = v} \\<le> N div 3", "by auto"], ["proof (state)\nthis:\n  N - card {q. x (rho n q) = v} \\<le> N div 3\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "finally"], ["proof (chain)\npicking this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3", "show ?thesis"], ["proof (prove)\nusing this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n\ngoal (1 subgoal):\n 1. card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n    \\<le> N div 3", "."], ["proof (state)\nthis:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have hov: \"HOV ?msgs v = { q . ?msgs q \\<noteq> None } - ?HOVothers\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v =\n    {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n    \\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}", "by (auto simp: HOV_def) blast"], ["proof (state)\nthis:\n  HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v =\n  {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have othHO: \"?HOVothers \\<subseteq> { q . ?msgs q \\<noteq> None }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n    \\<subseteq> {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "by (auto simp: HOV_def)"], ["proof (state)\nthis:\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<subseteq> {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "txt \\<open>Show that \\<open>v\\<close> has been received from more than $N/3$ processes.\\<close>"], ["proof (state)\nthis:\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<subseteq> {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "from HO"], ["proof (chain)\npicking this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "have \"N div 3 < card { q . ?msgs q \\<noteq> None } - (N div 3)\""], ["proof (prove)\nusing this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. N div 3\n    < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n      N div 3", "by auto"], ["proof (state)\nthis:\n  N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n    N div 3\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "also"], ["proof (state)\nthis:\n  N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n    N div 3\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "from w HO"], ["proof (chain)\npicking this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "have \"\\<dots> \\<le> card { q . ?msgs q \\<noteq> None } - card ?HOVothers\""], ["proof (prove)\nusing this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n    N div 3\n    \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n          card\n           (\\<Union>\n             {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n              w \\<noteq> v})", "by auto"], ["proof (state)\nthis:\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} - N div 3\n  \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n        card\n         (\\<Union>\n           {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n            w \\<noteq> v})\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "also"], ["proof (state)\nthis:\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} - N div 3\n  \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n        card\n         (\\<Union>\n           {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n            w \\<noteq> v})\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "from hov othHO"], ["proof (chain)\npicking this:\n  HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v =\n  {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<subseteq> {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "have \"\\<dots> = card (HOV ?msgs v)\""], ["proof (prove)\nusing this:\n  HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v =\n  {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<Union> {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}\n  \\<subseteq> {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n    card\n     (\\<Union>\n       {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}) =\n    card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)", "by (auto simp: card_Diff_subset)"], ["proof (state)\nthis:\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None} -\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v}) =\n  card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "finally"], ["proof (chain)\npicking this:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)", "have HOV: \"N div 3 < card (HOV ?msgs v)\""], ["proof (prove)\nusing this:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)", "."], ["proof (state)\nthis:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "txt \\<open>All other values are received from at most $N/3$ processes.\\<close>"], ["proof (state)\nthis:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have \"\\<forall>w. w \\<noteq> v \\<longrightarrow> card (HOV ?msgs w) \\<le> card ?HOVothers\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       w \\<noteq> v \\<longrightarrow>\n       card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n       \\<le> card\n              (\\<Union>\n                {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n                 w \\<noteq> v})", "by (force intro: card_mono)"], ["proof (state)\nthis:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n     \\<le> card\n            (\\<Union>\n              {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n               w \\<noteq> v})\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "with w"], ["proof (chain)\npicking this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n     \\<le> card\n            (\\<Union>\n              {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n               w \\<noteq> v})", "have cardw: \"\\<forall>w. w \\<noteq> v \\<longrightarrow> card (HOV ?msgs w) \\<le> N div 3\""], ["proof (prove)\nusing this:\n  card\n   (\\<Union>\n     {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w. w \\<noteq> v})\n  \\<le> N div 3\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n     \\<le> card\n            (\\<Union>\n              {HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w |w.\n               w \\<noteq> v})\n\ngoal (1 subgoal):\n 1. \\<forall>w.\n       w \\<noteq> v \\<longrightarrow>\n       card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3", "by auto"], ["proof (state)\nthis:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "txt \\<open>In particular, \\<open>v\\<close> is the single most frequently received value.\\<close>"], ["proof (state)\nthis:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "with HOV"], ["proof (chain)\npicking this:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3", "have \"MFR ?msgs v\""], ["proof (prove)\nusing this:\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3\n\ngoal (1 subgoal):\n 1. MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v", "by (auto simp: MFR_def)"], ["proof (state)\nthis:\n  MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "moreover"], ["proof (state)\nthis:\n  MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have \"\\<forall>w. w \\<noteq> v \\<longrightarrow> \\<not>(MFR ?msgs w)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>w.\n       w \\<noteq> v \\<longrightarrow>\n       \\<not> MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w", "proof (auto simp: MFR_def not_le)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<noteq> v \\<Longrightarrow>\n       \\<exists>wa.\n          card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n          < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) wa)", "fix w"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<noteq> v \\<Longrightarrow>\n       \\<exists>wa.\n          card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n          < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) wa)", "assume \"w \\<noteq> v\""], ["proof (state)\nthis:\n  w \\<noteq> v\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<noteq> v \\<Longrightarrow>\n       \\<exists>wa.\n          card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n          < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) wa)", "with cardw HOV"], ["proof (chain)\npicking this:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n  w \\<noteq> v", "have \"card (HOV ?msgs w) < card (HOV ?msgs v)\""], ["proof (prove)\nusing this:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w) \\<le> N div 3\n  N div 3 < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n  w \\<noteq> v\n\ngoal (1 subgoal):\n 1. card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n    < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)", "by auto"], ["proof (state)\nthis:\n  card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n  < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. \\<And>w.\n       w \\<noteq> v \\<Longrightarrow>\n       \\<exists>wa.\n          card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n          < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) wa)", "thus \"\\<exists>v. card (HOV ?msgs w) < card (HOV ?msgs v)\""], ["proof (prove)\nusing this:\n  card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n  < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal (1 subgoal):\n 1. \\<exists>v.\n       card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n       < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)", ".."], ["proof (state)\nthis:\n  \\<exists>v.\n     card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w)\n     < card (HOV (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     \\<not> MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "ultimately"], ["proof (chain)\npicking this:\n  MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     \\<not> MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w", "have mfrv: \"{ w . MFR ?msgs w } = {v}\""], ["proof (prove)\nusing this:\n  MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) v\n  \\<forall>w.\n     w \\<noteq> v \\<longrightarrow>\n     \\<not> MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w\n\ngoal (1 subgoal):\n 1. {w. MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w} = {v}", "by auto"], ["proof (state)\nthis:\n  {w. MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w} = {v}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "have \"card { q . ?msgs q = Some v } \\<le> card { q . ?msgs q \\<noteq> None }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n    \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "by (auto intro: card_mono)"], ["proof (state)\nthis:\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "with HO mfrv nxt"], ["proof (chain)\npicking this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n  {w. MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w} = {v}\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n  {w. MFR (HOrcvdMsgs OTR_M n p (HOs n p) (rho n)) w} = {v}\n  OTR_nextState n p (rho n p) (HOrcvdMsgs OTR_M n p (HOs n p) (rho n))\n   (rho (Suc n) p)\n  card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q = Some v}\n  \\<le> card {q. HOrcvdMsgs OTR_M n p (HOs n p) (rho n) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. x (rho (Suc n) p) = v", "by (auto simp: OTR_nextState_def)"], ["proof (state)\nthis:\n  x (rho (Suc n) p) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Therefore, once more than two thirds of the processes hold \\<open>v\\<close>\n  in their \\<open>x\\<close> field, this will remain true forever.\n\\<close>"], ["", "lemma A3:\n  assumes run:\"HORun OTR_M rho HOs\"\n      and n: \"(2*N) div 3 < card { q . x (rho n q) = v }\" (is \"?twothird n\")\n  shows \"?twothird (n+k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + k) q) = v}", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3 < card {q. x (rho (n + 0) q) = v}\n 2. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "from n"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. x (rho n q) = v}", "show \"?twothird (n+0)\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho n q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + 0) q) = v}", "by simp"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + 0) q) = v}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "assume m: \"?twothird (n+m)\""], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "have \"\\<forall>q. x (rho (n+m) q) = v \\<longrightarrow> x (rho (n + Suc m) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q.\n       x (rho (n + m) q) = v \\<longrightarrow> x (rho (n + Suc m) q) = v", "proof (rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       x (rho (n + m) q) = v \\<Longrightarrow> x (rho (n + Suc m) q) = v", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       x (rho (n + m) q) = v \\<Longrightarrow> x (rho (n + Suc m) q) = v", "assume q: \"x ((rho (n+m)) q) = v\""], ["proof (state)\nthis:\n  x (rho (n + m) q) = v\n\ngoal (1 subgoal):\n 1. \\<And>q.\n       x (rho (n + m) q) = v \\<Longrightarrow> x (rho (n + Suc m) q) = v", "let ?msgs = \"HOrcvdMsgs OTR_M (n+m) q (HOs (n+m) q) (rho (n+m))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q.\n       x (rho (n + m) q) = v \\<Longrightarrow> x (rho (n + Suc m) q) = v", "show \"x (rho (n + Suc m) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (n + Suc m) q) = v", "proof (cases \"(2*N) div 3 < card { q . ?msgs q \\<noteq> None }\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {qa.\n        HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n        None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "case True"], ["proof (state)\nthis:\n  2 * N div 3\n  < card\n     {qa.\n      HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n      None}\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {qa.\n        HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n        None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "from m"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}", "have \"(2*N) div 3 < card { q . x (rho (n+m) q) = v }\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + m) q) = v}", "by simp"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {qa.\n        HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n        None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "with True run"], ["proof (chain)\npicking this:\n  2 * N div 3\n  < card\n     {qa.\n      HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n      None}\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N div 3\n  < card\n     {qa.\n      HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m)) qa \\<noteq>\n      None}\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n\ngoal (1 subgoal):\n 1. x (rho (n + Suc m) q) = v", "by (auto elim: A2)"], ["proof (state)\nthis:\n  x (rho (n + Suc m) q) = v\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "case False"], ["proof (state)\nthis:\n  \\<not> 2 * N div 3\n         < card\n            {qa.\n             HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n              qa \\<noteq>\n             None}\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {qa.\n               HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n                qa \\<noteq>\n               None} \\<Longrightarrow>\n    x (rho (n + Suc m) q) = v", "with run q"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  x (rho (n + m) q) = v\n  \\<not> 2 * N div 3\n         < card\n            {qa.\n             HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n              qa \\<noteq>\n             None}", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  x (rho (n + m) q) = v\n  \\<not> 2 * N div 3\n         < card\n            {qa.\n             HOrcvdMsgs OTR_M (n + m) q (HOs (n + m) q) (rho (n + m))\n              qa \\<noteq>\n             None}\n\ngoal (1 subgoal):\n 1. x (rho (n + Suc m) q) = v", "by (auto dest: nextState_change)"], ["proof (state)\nthis:\n  x (rho (n + Suc m) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (n + Suc m) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q.\n     x (rho (n + m) q) = v \\<longrightarrow> x (rho (n + Suc m) q) = v\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "hence \"card {q. x (rho (n+m) q) = v} \\<le> card {q. x (rho (n + Suc m) q) = v}\""], ["proof (prove)\nusing this:\n  \\<forall>q.\n     x (rho (n + m) q) = v \\<longrightarrow> x (rho (n + Suc m) q) = v\n\ngoal (1 subgoal):\n 1. card {q. x (rho (n + m) q) = v}\n    \\<le> card {q. x (rho (n + Suc m) q) = v}", "by (auto intro: card_mono)"], ["proof (state)\nthis:\n  card {q. x (rho (n + m) q) = v} \\<le> card {q. x (rho (n + Suc m) q) = v}\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       2 * N div 3 < card {q. x (rho (n + k) q) = v} \\<Longrightarrow>\n       2 * N div 3 < card {q. x (rho (n + Suc k) q) = v}", "with m"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n  card {q. x (rho (n + m) q) = v} \\<le> card {q. x (rho (n + Suc m) q) = v}", "show \"?twothird (n + Suc m)\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho (n + m) q) = v}\n  card {q. x (rho (n + m) q) = v} \\<le> card {q. x (rho (n + Suc m) q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + Suc m) q) = v}", "by simp"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + Suc m) q) = v}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  It now follows that once a process has decided on some value \\<open>v\\<close>, \n  more than two thirds of all processes continue to hold \\<open>v\\<close> in\n  their \\<open>x\\<close> field.\n\\<close>"], ["", "lemma A4:\n  assumes run: \"HORun OTR_M rho HOs\" \n  and dec: \"decide (rho n p) = Some v\" (is \"?dec n\")\n  shows \"\\<forall>k. (2*N) div 3 < card { q . x (rho (n+k) q) = v }\"\n        (is \"\\<forall>k. ?twothird (n+k)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v}", "using dec"], ["proof (prove)\nusing this:\n  decide (rho n p) = Some v\n\ngoal (1 subgoal):\n 1. \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v}", "proof (induct n)\n  \\<comment> \\<open>The base case is trivial since no process has decided\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. decide (rho 0 p) = Some v \\<Longrightarrow>\n    \\<forall>k. 2 * N div 3 < card {q. x (rho (0 + k) q) = v}\n 2. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "assume \"?dec 0\""], ["proof (state)\nthis:\n  decide (rho 0 p) = Some v\n\ngoal (2 subgoals):\n 1. decide (rho 0 p) = Some v \\<Longrightarrow>\n    \\<forall>k. 2 * N div 3 < card {q. x (rho (0 + k) q) = v}\n 2. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "with run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho 0 p) = Some v", "show \"\\<forall>k. ?twothird (0+k)\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho 0 p) = Some v\n\ngoal (1 subgoal):\n 1. \\<forall>k. 2 * N div 3 < card {q. x (rho (0 + k) q) = v}", "by (simp add: HORun_eq HOinitConfig_eq OTR_HOMachine_def \n                  initState_def OTR_initState_def)"], ["proof (state)\nthis:\n  \\<forall>k. 2 * N div 3 < card {q. x (rho (0 + k) q) = v}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "next\n  \\<comment> \\<open>For the inductive step, we assume that process @{text p} has decided on @{text v}.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "assume ih: \"?dec m \\<Longrightarrow> \\<forall>k. ?twothird (m+k)\" and m: \"?dec (Suc m)\""], ["proof (state)\nthis:\n  decide (rho m p) = Some v \\<Longrightarrow>\n  \\<forall>k. 2 * N div 3 < card {q. x (rho (m + k) q) = v}\n  decide (rho (Suc m) p) = Some v\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>decide (rho n p) = Some v \\<Longrightarrow>\n                \\<forall>k. 2 * N div 3 < card {q. x (rho (n + k) q) = v};\n        decide (rho (Suc n) p) = Some v\\<rbrakk>\n       \\<Longrightarrow> \\<forall>k.\n                            2 * N div 3\n                            < card {q. x (rho (Suc n + k) q) = v}", "show \"\\<forall>k. ?twothird ((Suc m) + k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}", "have \"?twothird (m + Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "txt \\<open>\n      There are two cases to consider: if \\<open>p\\<close> had already decided on \\<open>v\\<close>\n      before, the assertion follows from the induction hypothesis. Otherwise, the\n      assertion follows from lemmas \\<open>A1\\<close> and \\<open>A3\\<close>.\n\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "proof (cases \"?dec m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. decide (rho m p) = Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n 2. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "case True"], ["proof (state)\nthis:\n  decide (rho m p) = Some v\n\ngoal (2 subgoals):\n 1. decide (rho m p) = Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n 2. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "with ih"], ["proof (chain)\npicking this:\n  decide (rho m p) = Some v \\<Longrightarrow>\n  \\<forall>k. 2 * N div 3 < card {q. x (rho (m + k) q) = v}\n  decide (rho m p) = Some v", "show ?thesis"], ["proof (prove)\nusing this:\n  decide (rho m p) = Some v \\<Longrightarrow>\n  \\<forall>k. 2 * N div 3 < card {q. x (rho (m + k) q) = v}\n  decide (rho m p) = Some v\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "by blast"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n\ngoal (1 subgoal):\n 1. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "case False"], ["proof (state)\nthis:\n  decide (rho m p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "with run m"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho (Suc m) p) = Some v\n  decide (rho m p) \\<noteq> Some v", "have \"?twothird m\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho (Suc m) p) = Some v\n  decide (rho m p) \\<noteq> Some v\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho m q) = v}", "by (auto elim: A1)"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho m q) = v}\n\ngoal (1 subgoal):\n 1. decide (rho m p) \\<noteq> Some v \\<Longrightarrow>\n    2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "with run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {q. x (rho m q) = v}", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {q. x (rho m q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}", "by (blast dest: A3)"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n\ngoal (1 subgoal):\n 1. \\<And>k. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}", "thus \"?twothird ((Suc m) + k)\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho (m + Suc k) q) = v}\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}", "by simp"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k. 2 * N div 3 < card {q. x (rho (Suc m + k) q) = v}\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  The Agreement property follows easily from lemma \\<open>A4\\<close>: if processes\n  \\<open>p\\<close> and \\<open>q\\<close> decide values \\<open>v\\<close> and \\<open>w\\<close>,\n  respectively, then more than two thirds of the processes must propose\n  \\<open>v\\<close> and more than two thirds must propose \\<open>w\\<close>.\n  Because these two majorities must have an intersection, we must have\n  \\<open>v=w\\<close>.\n\n  We first prove an ``asymmetric'' version of the agreement property before\n  deriving the general agreement theorem.\n\\<close>"], ["", "lemma A5:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and p: \"decide (rho n p) = Some v\"\n  and p': \"decide (rho (n+k) p') = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v = w", "from run p"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v", "have \"(2*N) div 3 < card {q. x (rho (n+k) q) = v}\" (is \"_ < card ?V\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + k) q) = v}", "by (blast dest: A4)"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + k) q) = v}\n\ngoal (1 subgoal):\n 1. v = w", "moreover"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + k) q) = v}\n\ngoal (1 subgoal):\n 1. v = w", "from run p'"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho (n + k) p') = Some w", "have \"(2*N) div 3 < card {q. x (rho ((n+k)+0) q) = w}\" (is \"_ < card ?W\")"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho (n + k) p') = Some w\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {q. x (rho (n + k + 0) q) = w}", "by (blast dest: A4)"], ["proof (state)\nthis:\n  2 * N div 3 < card {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. v = w", "ultimately"], ["proof (chain)\npicking this:\n  2 * N div 3 < card {q. x (rho (n + k) q) = v}\n  2 * N div 3 < card {q. x (rho (n + k + 0) q) = w}", "have \"N < card ?V + card ?W\""], ["proof (prove)\nusing this:\n  2 * N div 3 < card {q. x (rho (n + k) q) = v}\n  2 * N div 3 < card {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. N < card {q. x (rho (n + k) q) = v} +\n        card {q. x (rho (n + k + 0) q) = w}", "by auto"], ["proof (state)\nthis:\n  N < card {q. x (rho (n + k) q) = v} + card {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. v = w", "then"], ["proof (chain)\npicking this:\n  N < card {q. x (rho (n + k) q) = v} + card {q. x (rho (n + k + 0) q) = w}", "obtain proc where \"proc \\<in> ?V \\<inter> ?W\""], ["proof (prove)\nusing this:\n  N < card {q. x (rho (n + k) q) = v} + card {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. (\\<And>proc.\n        proc\n        \\<in> {q. x (rho (n + k) q) = v} \\<inter>\n              {q. x (rho (n + k + 0) q) = w} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: majorities_intersect)"], ["proof (state)\nthis:\n  proc\n  \\<in> {q. x (rho (n + k) q) = v} \\<inter> {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. v = w", "thus ?thesis"], ["proof (prove)\nusing this:\n  proc\n  \\<in> {q. x (rho (n + k) q) = v} \\<inter> {q. x (rho (n + k + 0) q) = w}\n\ngoal (1 subgoal):\n 1. v = w", "by auto"], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem OTR_agreement:\n  assumes run:\"HORun OTR_M rho HOs\"\n  and p: \"decide (rho n p) = Some v\"\n  and p': \"decide (rho m p') = Some w\"\n  shows \"v = w\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v = w", "proof (cases \"n \\<le> m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> v = w\n 2. \\<not> n \\<le> m \\<Longrightarrow> v = w", "case True"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> v = w\n 2. \\<not> n \\<le> m \\<Longrightarrow> v = w", "then"], ["proof (chain)\npicking this:\n  n \\<le> m", "obtain k where \"m = n+k\""], ["proof (prove)\nusing this:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. (\\<And>k. m = n + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp add: le_iff_add)"], ["proof (state)\nthis:\n  m = n + k\n\ngoal (2 subgoals):\n 1. n \\<le> m \\<Longrightarrow> v = w\n 2. \\<not> n \\<le> m \\<Longrightarrow> v = w", "with run p p'"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v\n  decide (rho m p') = Some w\n  m = n + k", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v\n  decide (rho m p') = Some w\n  m = n + k\n\ngoal (1 subgoal):\n 1. v = w", "by (auto elim: A5)"], ["proof (state)\nthis:\n  v = w\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "case False"], ["proof (state)\nthis:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "hence \"m \\<le> n\""], ["proof (prove)\nusing this:\n  \\<not> n \\<le> m\n\ngoal (1 subgoal):\n 1. m \\<le> n", "by auto"], ["proof (state)\nthis:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "then"], ["proof (chain)\npicking this:\n  m \\<le> n", "obtain k where \"n = m+k\""], ["proof (prove)\nusing this:\n  m \\<le> n\n\ngoal (1 subgoal):\n 1. (\\<And>k. n = m + k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp add: le_iff_add)"], ["proof (state)\nthis:\n  n = m + k\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "with run p p'"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v\n  decide (rho m p') = Some w\n  n = m + k", "have \"w = v\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  decide (rho n p) = Some v\n  decide (rho m p') = Some w\n  n = m + k\n\ngoal (1 subgoal):\n 1. w = v", "by (auto elim: A5)"], ["proof (state)\nthis:\n  w = v\n\ngoal (1 subgoal):\n 1. \\<not> n \\<le> m \\<Longrightarrow> v = w", "thus ?thesis"], ["proof (prove)\nusing this:\n  w = v\n\ngoal (1 subgoal):\n 1. v = w", ".."], ["proof (state)\nthis:\n  v = w\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Proof of  Termination\\<close>"], ["", "text \\<open>\n  We now show that every process must eventually decide.\n\n  The idea of the proof is to observe that the communication predicate\n  guarantees the existence of two uniform rounds where every process hears\n  from the same two-thirds majority of processes. The first such round\n  serves to ensure that all \\<open>x\\<close> fields hold the same value, the\n  second round copies that value into all decision fields.\n\n  Lemma \\<open>A2\\<close> is instrumental in this proof.\n\\<close>"], ["", "theorem OTR_termination:\n  assumes run: \"HORun OTR_M rho HOs\"\n      and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"\\<exists>r v. decide (rho r p) = Some v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from commG"], ["proof (chain)\npicking this:\n  HOcommGlobal OTR_M HOs", "obtain r0 \\<Pi> where \n    pi: \"\\<forall>q. HOs r0 q = \\<Pi>\" and pic: \"card \\<Pi> > (2*N) div 3\""], ["proof (prove)\nusing this:\n  HOcommGlobal OTR_M HOs\n\ngoal (1 subgoal):\n 1. (\\<And>r0 \\<Pi>.\n        \\<lbrakk>\\<forall>q. HOs r0 q = \\<Pi>;\n         2 * N div 3 < card \\<Pi>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: OTR_HOMachine_def OTR_commGlobal_def)"], ["proof (state)\nthis:\n  \\<forall>q. HOs r0 q = \\<Pi>\n  2 * N div 3 < card \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "let \"?msgs q r\" = \"HOrcvdMsgs OTR_M r q (HOs r q) (rho r)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from run pi"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  \\<forall>q. HOs r0 q = \\<Pi>", "have \"\\<forall>p q. ?msgs q r0 = ?msgs p r0\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  \\<forall>q. HOs r0 q = \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<forall>p q.\n       HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) =\n       HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0)", "by (auto simp: HORun_eq OTR_HOMachine_def HOrcvdMsgs_def OTR_sendMsg_def)"], ["proof (state)\nthis:\n  \\<forall>p q.\n     HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) =\n     HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "then"], ["proof (chain)\npicking this:\n  \\<forall>p q.\n     HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) =\n     HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0)", "obtain \\<mu> where \"\\<forall>q. ?msgs q r0 = \\<mu>\""], ["proof (prove)\nusing this:\n  \\<forall>p q.\n     HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) =\n     HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<mu>.\n        \\<forall>q.\n           HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) =\n           \\<mu> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>q. HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) = \\<mu>\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "moreover"], ["proof (state)\nthis:\n  \\<forall>q. HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) = \\<mu>\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from pi pic"], ["proof (chain)\npicking this:\n  \\<forall>q. HOs r0 q = \\<Pi>\n  2 * N div 3 < card \\<Pi>", "have \"\\<forall>p. (2*N) div 3 < card {q. ?msgs p r0 q \\<noteq> None}\""], ["proof (prove)\nusing this:\n  \\<forall>q. HOs r0 q = \\<Pi>\n  2 * N div 3 < card \\<Pi>\n\ngoal (1 subgoal):\n 1. \\<forall>p.\n       2 * N div 3\n       < card {q. HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0) q \\<noteq> None}", "by (auto simp: HORun_eq HOnextConfig_eq HOrcvdMsgs_def)"], ["proof (state)\nthis:\n  \\<forall>p.\n     2 * N div 3\n     < card {q. HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "with run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  \\<forall>p.\n     2 * N div 3\n     < card {q. HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0) q \\<noteq> None}", "have \"\\<forall>q. x (rho (Suc r0) q) = Min {v . MFR (?msgs q r0) v}\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  \\<forall>p.\n     2 * N div 3\n     < card {q. HOrcvdMsgs OTR_M r0 p (HOs r0 p) (rho r0) q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<forall>q.\n       x (rho (Suc r0) q) =\n       Min {v. MFR (HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0)) v}", "by (auto simp: HORun_eq HOnextConfig_eq OTR_HOMachine_def \n                   nextState_def OTR_nextState_def)"], ["proof (state)\nthis:\n  \\<forall>q.\n     x (rho (Suc r0) q) =\n     Min {v. MFR (HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0)) v}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>q. HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) = \\<mu>\n  \\<forall>q.\n     x (rho (Suc r0) q) =\n     Min {v. MFR (HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0)) v}", "have \"\\<forall>q. x (rho (Suc r0) q) = Min {v . MFR \\<mu> v}\""], ["proof (prove)\nusing this:\n  \\<forall>q. HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0) = \\<mu>\n  \\<forall>q.\n     x (rho (Suc r0) q) =\n     Min {v. MFR (HOrcvdMsgs OTR_M r0 q (HOs r0 q) (rho r0)) v}\n\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho (Suc r0) q) = Min {v. MFR \\<mu> v}", "by auto"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0) q) = Min {v. MFR \\<mu> v}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "then"], ["proof (chain)\npicking this:\n  \\<forall>q. x (rho (Suc r0) q) = Min {v. MFR \\<mu> v}", "obtain v where v:\"\\<forall>q. x (rho (Suc r0) q) = v\""], ["proof (prove)\nusing this:\n  \\<forall>q. x (rho (Suc r0) q) = Min {v. MFR \\<mu> v}\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        \\<forall>q. x (rho (Suc r0) q) = v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0) q) = v\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "have P:\"\\<forall>k. \\<forall>q. x (rho (Suc r0+k) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k q. x (rho (Suc r0 + k) q) = v", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<forall>q. x (rho (Suc r0 + k) q) = v", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k. \\<forall>q. x (rho (Suc r0 + k) q) = v", "show \"\\<forall>q. x (rho (Suc r0+k) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho (Suc r0 + k) q) = v", "proof (induct k)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>q. x (rho (Suc r0 + 0) q) = v\n 2. \\<And>k.\n       \\<forall>q. x (rho (Suc r0 + k) q) = v \\<Longrightarrow>\n       \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "from v"], ["proof (chain)\npicking this:\n  \\<forall>q. x (rho (Suc r0) q) = v", "show \"\\<forall>q. x (rho (Suc r0+0) q) = v\""], ["proof (prove)\nusing this:\n  \\<forall>q. x (rho (Suc r0) q) = v\n\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho (Suc r0 + 0) q) = v", "by simp"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0 + 0) q) = v\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<forall>q. x (rho (Suc r0 + k) q) = v \\<Longrightarrow>\n       \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<forall>q. x (rho (Suc r0 + k) q) = v \\<Longrightarrow>\n       \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<forall>q. x (rho (Suc r0 + k) q) = v \\<Longrightarrow>\n       \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "assume ih:\"\\<forall>q. x (rho (Suc r0 + k) q) = v\""], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<forall>q. x (rho (Suc r0 + k) q) = v \\<Longrightarrow>\n       \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "show \"\\<forall>q. x (rho (Suc r0 + Suc k) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho (Suc r0 + Suc k) q) = v", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q. x (rho (Suc r0 + Suc k) q) = v", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>q. x (rho (Suc r0 + Suc k) q) = v", "show \"x (rho (Suc r0 + Suc k) q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x (rho (Suc r0 + Suc k) q) = v", "proof (cases \"(2*N) div 3 < card { p . ?msgs q (Suc r0 + k) p \\<noteq> None }\")"], ["proof (state)\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n            (rho (Suc r0 + k)) p \\<noteq>\n           None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "case True"], ["proof (state)\nthis:\n  2 * N div 3\n  < card\n     {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n          (rho (Suc r0 + k)) p \\<noteq>\n         None}\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n            (rho (Suc r0 + k)) p \\<noteq>\n           None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "have \"N > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < N", "by (rule finite_UNIV_card_ge_0) simp"], ["proof (state)\nthis:\n  0 < N\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n            (rho (Suc r0 + k)) p \\<noteq>\n           None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "with ih"], ["proof (chain)\npicking this:\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n  0 < N", "have \"(2*N) div 3 < card { p . x (rho (Suc r0 + k) p) = v }\""], ["proof (prove)\nusing this:\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n  0 < N\n\ngoal (1 subgoal):\n 1. 2 * N div 3 < card {p. x (rho (Suc r0 + k) p) = v}", "by auto"], ["proof (state)\nthis:\n  2 * N div 3 < card {p. x (rho (Suc r0 + k) p) = v}\n\ngoal (2 subgoals):\n 1. 2 * N div 3\n    < card\n       {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n            (rho (Suc r0 + k)) p \\<noteq>\n           None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v\n 2. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "with True run"], ["proof (chain)\npicking this:\n  2 * N div 3\n  < card\n     {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n          (rho (Suc r0 + k)) p \\<noteq>\n         None}\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {p. x (rho (Suc r0 + k) p) = v}", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * N div 3\n  < card\n     {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n          (rho (Suc r0 + k)) p \\<noteq>\n         None}\n  HORun OTR_M rho HOs\n  2 * N div 3 < card {p. x (rho (Suc r0 + k) p) = v}\n\ngoal (1 subgoal):\n 1. x (rho (Suc r0 + Suc k) q) = v", "by (auto elim: A2)"], ["proof (state)\nthis:\n  x (rho (Suc r0 + Suc k) q) = v\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "case False"], ["proof (state)\nthis:\n  \\<not> 2 * N div 3\n         < card\n            {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                 (rho (Suc r0 + k)) p \\<noteq>\n                None}\n\ngoal (1 subgoal):\n 1. \\<not> 2 * N div 3\n           < card\n              {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                   (rho (Suc r0 + k)) p \\<noteq>\n                  None} \\<Longrightarrow>\n    x (rho (Suc r0 + Suc k) q) = v", "with run ih"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n  \\<not> 2 * N div 3\n         < card\n            {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                 (rho (Suc r0 + k)) p \\<noteq>\n                None}", "show ?thesis"], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n  \\<not> 2 * N div 3\n         < card\n            {p. HOrcvdMsgs OTR_M (Suc r0 + k) q (HOs (Suc r0 + k) q)\n                 (rho (Suc r0 + k)) p \\<noteq>\n                None}\n\ngoal (1 subgoal):\n 1. x (rho (Suc r0 + Suc k) q) = v", "by (auto dest: nextState_change)"], ["proof (state)\nthis:\n  x (rho (Suc r0 + Suc k) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x (rho (Suc r0 + Suc k) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0 + Suc k) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>q. x (rho (Suc r0 + k) q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k q. x (rho (Suc r0 + k) q) = v\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from commG"], ["proof (chain)\npicking this:\n  HOcommGlobal OTR_M HOs", "obtain r0' \\<Pi>'\n    where r0': \"r0' \\<ge> Suc r0\"\n      and pi': \"\\<forall>q. HOs r0' q = \\<Pi>'\"\n      and pic': \"card \\<Pi>' > (2*N) div 3\""], ["proof (prove)\nusing this:\n  HOcommGlobal OTR_M HOs\n\ngoal (1 subgoal):\n 1. (\\<And>r0' \\<Pi>'.\n        \\<lbrakk>Suc r0 \\<le> r0'; \\<forall>q. HOs r0' q = \\<Pi>';\n         2 * N div 3 < card \\<Pi>'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force simp: OTR_HOMachine_def OTR_commGlobal_def)"], ["proof (state)\nthis:\n  Suc r0 \\<le> r0'\n  \\<forall>q. HOs r0' q = \\<Pi>'\n  2 * N div 3 < card \\<Pi>'\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from r0' P"], ["proof (chain)\npicking this:\n  Suc r0 \\<le> r0'\n  \\<forall>k q. x (rho (Suc r0 + k) q) = v", "have v':\"\\<forall>q. x (rho r0' q) = v\""], ["proof (prove)\nusing this:\n  Suc r0 \\<le> r0'\n  \\<forall>k q. x (rho (Suc r0 + k) q) = v\n\ngoal (1 subgoal):\n 1. \\<forall>q. x (rho r0' q) = v", "by (auto simp: le_iff_add)"], ["proof (state)\nthis:\n  \\<forall>q. x (rho r0' q) = v\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from run"], ["proof (chain)\npicking this:\n  HORun OTR_M rho HOs", "have \"OTR_nextState r0' p (rho r0' p) (?msgs p r0') (rho (Suc r0') p)\""], ["proof (prove)\nusing this:\n  HORun OTR_M rho HOs\n\ngoal (1 subgoal):\n 1. OTR_nextState r0' p (rho r0' p)\n     (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) (rho (Suc r0') p)", "by (simp add: HORun_eq HOnextConfig_eq OTR_HOMachine_def nextState_def)"], ["proof (state)\nthis:\n  OTR_nextState r0' p (rho r0' p)\n   (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) (rho (Suc r0') p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "moreover"], ["proof (state)\nthis:\n  OTR_nextState r0' p (rho r0' p)\n   (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) (rho (Suc r0') p)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from pi' pic'"], ["proof (chain)\npicking this:\n  \\<forall>q. HOs r0' q = \\<Pi>'\n  2 * N div 3 < card \\<Pi>'", "have \"(2*N) div 3 < card {q. (?msgs p r0') q \\<noteq> None}\""], ["proof (prove)\nusing this:\n  \\<forall>q. HOs r0' q = \\<Pi>'\n  2 * N div 3 < card \\<Pi>'\n\ngoal (1 subgoal):\n 1. 2 * N div 3\n    < card {q. HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0') q \\<noteq> None}", "by (auto simp: HOrcvdMsgs_def OTR_sendMsg_def)"], ["proof (state)\nthis:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0') q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "moreover"], ["proof (state)\nthis:\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0') q \\<noteq> None}\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "from pi' pic' v'"], ["proof (chain)\npicking this:\n  \\<forall>q. HOs r0' q = \\<Pi>'\n  2 * N div 3 < card \\<Pi>'\n  \\<forall>q. x (rho r0' q) = v", "have \"TwoThirds (?msgs p r0') v\""], ["proof (prove)\nusing this:\n  \\<forall>q. HOs r0' q = \\<Pi>'\n  2 * N div 3 < card \\<Pi>'\n  \\<forall>q. x (rho r0' q) = v\n\ngoal (1 subgoal):\n 1. TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v", "by (simp add: TwoThirds_def HOrcvdMsgs_def OTR_HOMachine_def \n                  OTR_sendMsg_def HOV_def)"], ["proof (state)\nthis:\n  TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "ultimately"], ["proof (chain)\npicking this:\n  OTR_nextState r0' p (rho r0' p)\n   (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) (rho (Suc r0') p)\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0') q \\<noteq> None}\n  TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v", "have \"decide (rho (Suc r0') p) = Some (\\<some>v. TwoThirds (?msgs p r0') v)\""], ["proof (prove)\nusing this:\n  OTR_nextState r0' p (rho r0' p)\n   (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) (rho (Suc r0') p)\n  2 * N div 3\n  < card {q. HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0') q \\<noteq> None}\n  TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v\n\ngoal (1 subgoal):\n 1. decide (rho (Suc r0') p) =\n    Some\n     (SOME v. TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v)", "by (auto simp: OTR_nextState_def)"], ["proof (state)\nthis:\n  decide (rho (Suc r0') p) =\n  Some (SOME v. TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "thus ?thesis"], ["proof (prove)\nusing this:\n  decide (rho (Suc r0') p) =\n  Some (SOME v. TwoThirds (HOrcvdMsgs OTR_M r0' p (HOs r0' p) (rho r0')) v)\n\ngoal (1 subgoal):\n 1. \\<exists>r v. decide (rho r p) = Some v", "by blast"], ["proof (state)\nthis:\n  \\<exists>r v. decide (rho r p) = Some v\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>\\emph{One-Third Rule} Solves Consensus\\<close>"], ["", "text \\<open>\n  Summing up, all (coarse-grained) runs of \\emph{One-Third Rule} for\n  HO collections that satisfy the communication predicate satisfy\n  the Consensus property.\n\\<close>"], ["", "theorem OTR_consensus:\n  assumes run: \"HORun OTR_M rho HOs\" and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"consensus (x \\<circ> (rho 0)) decide rho\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consensus (x \\<circ> rho 0) decide rho", "using OTR_integrity[OF run] OTR_agreement[OF run] OTR_termination[OF run commG]"], ["proof (prove)\nusing this:\n  decide (rho ?n ?p) = Some ?v \\<Longrightarrow>\n  \\<exists>q. ?v = x (rho 0 q)\n  \\<lbrakk>decide (rho ?n ?p) = Some ?v;\n   decide (rho ?m ?p') = Some ?w\\<rbrakk>\n  \\<Longrightarrow> ?v = ?w\n  \\<exists>r v. decide (rho r ?p) = Some v\n\ngoal (1 subgoal):\n 1. consensus (x \\<circ> rho 0) decide rho", "by (auto simp: consensus_def image_def)"], ["", "text \\<open>\n  By the reduction theorem, the correctness of the algorithm also follows\n  for fine-grained runs of the algorithm. It would be much more tedious\n  to establish this theorem directly.\n\\<close>"], ["", "theorem OTR_consensus_fg:\n  assumes run: \"fg_run OTR_M rho HOs HOs (\\<lambda>r q. undefined)\"\n      and commG: \"HOcommGlobal OTR_M HOs\"\n  shows \"consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)\"\n    (is \"consensus ?inits _ _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. consensus (\\<lambda>p. x (state (rho 0) p)) decide (state \\<circ> rho)", "proof (rule local_property_reduction[OF run consensus_is_local])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun OTR_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "fix crun"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun OTR_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "assume crun: \"CSHORun OTR_M crun HOs HOs (\\<lambda>r q. undefined)\"\n     and init: \"crun 0 = state (rho 0)\""], ["proof (state)\nthis:\n  CSHORun OTR_M crun HOs HOs (\\<lambda>r q. undefined)\n  crun 0 = state (rho 0)\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun OTR_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "from crun"], ["proof (chain)\npicking this:\n  CSHORun OTR_M crun HOs HOs (\\<lambda>r q. undefined)", "have \"HORun OTR_M crun HOs\""], ["proof (prove)\nusing this:\n  CSHORun OTR_M crun HOs HOs (\\<lambda>r q. undefined)\n\ngoal (1 subgoal):\n 1. HORun OTR_M crun HOs", "by (unfold HORun_def SHORun_def)"], ["proof (state)\nthis:\n  HORun OTR_M crun HOs\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun OTR_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "from this commG"], ["proof (chain)\npicking this:\n  HORun OTR_M crun HOs\n  HOcommGlobal OTR_M HOs", "have \"consensus (x \\<circ> (crun 0)) decide crun\""], ["proof (prove)\nusing this:\n  HORun OTR_M crun HOs\n  HOcommGlobal OTR_M HOs\n\ngoal (1 subgoal):\n 1. consensus (x \\<circ> crun 0) decide crun", "by (rule OTR_consensus)"], ["proof (state)\nthis:\n  consensus (x \\<circ> crun 0) decide crun\n\ngoal (1 subgoal):\n 1. \\<And>crho.\n       \\<lbrakk>CSHORun OTR_M crho HOs HOs (\\<lambda>r q. undefined);\n        crho 0 = state (rho 0)\\<rbrakk>\n       \\<Longrightarrow> consensus (\\<lambda>p. x (state (rho 0) p)) decide\n                          crho", "with init"], ["proof (chain)\npicking this:\n  crun 0 = state (rho 0)\n  consensus (x \\<circ> crun 0) decide crun", "show \"consensus ?inits decide crun\""], ["proof (prove)\nusing this:\n  crun 0 = state (rho 0)\n  consensus (x \\<circ> crun 0) decide crun\n\ngoal (1 subgoal):\n 1. consensus (\\<lambda>p. x (state (rho 0) p)) decide crun", "by (simp add: o_def)"], ["proof (state)\nthis:\n  consensus (\\<lambda>p. x (state (rho 0) p)) decide crun\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}