{"file_name": "/home/qj213/afp-2021-10-22/thys/Resolution_FOL/Completeness_Instance.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Resolution_FOL", "problem_names": ["lemma lift:\n  assumes fin: \"finite C \\<and> finite D\"\n  assumes apart: \"vars\\<^sub>l\\<^sub>s C \\<inter> vars\\<^sub>l\\<^sub>s D = {}\"\n  assumes inst\\<^sub>1: \"instance_of\\<^sub>l\\<^sub>s C' C\"\n  assumes inst\\<^sub>2: \"instance_of\\<^sub>l\\<^sub>s D' D\"\n  assumes appl: \"applicable C' D' L' M' \\<sigma>\"\n  shows \"\\<exists>L M \\<tau>. applicable C D L M \\<tau> \\<and>\n                   instance_of\\<^sub>l\\<^sub>s (resolution C' D' L' M' \\<sigma>) (resolution C D L M \\<tau>)\"", "theorem complete:\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::hterm fun_denot) (G::hterm pred_denot) . \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\"", "theorem complete_countable:\n  assumes inf_uni: \"infinite (UNIV :: ('u :: countable) set)\"\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::'u fun_denot) (G::'u pred_denot). \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\"", "theorem complete_nat:\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::nat fun_denot) (G::nat pred_denot) . \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\""], "translations": [["", "lemma lift:\n  assumes fin: \"finite C \\<and> finite D\"\n  assumes apart: \"vars\\<^sub>l\\<^sub>s C \\<inter> vars\\<^sub>l\\<^sub>s D = {}\"\n  assumes inst\\<^sub>1: \"instance_of\\<^sub>l\\<^sub>s C' C\"\n  assumes inst\\<^sub>2: \"instance_of\\<^sub>l\\<^sub>s D' D\"\n  assumes appl: \"applicable C' D' L' M' \\<sigma>\"\n  shows \"\\<exists>L M \\<tau>. applicable C D L M \\<tau> \\<and>\n                   instance_of\\<^sub>l\\<^sub>s (resolution C' D' L' M' \\<sigma>) (resolution C D L M \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>L M \\<tau>.\n       applicable C D L M \\<tau> \\<and>\n       instance_of\\<^sub>l\\<^sub>s (resolution C' D' L' M' \\<sigma>)\n        (resolution C D L M \\<tau>)", "using assms lifting"], ["proof (prove)\nusing this:\n  finite C \\<and> finite D\n  vars\\<^sub>l\\<^sub>s C \\<inter> vars\\<^sub>l\\<^sub>s D = {}\n  instance_of\\<^sub>l\\<^sub>s C' C\n  instance_of\\<^sub>l\\<^sub>s D' D\n  applicable C' D' L' M' \\<sigma>\n  \\<lbrakk>finite ?C\\<^sub>1 \\<and> finite ?C\\<^sub>2;\n   vars\\<^sub>l\\<^sub>s ?C\\<^sub>1 \\<inter>\n   vars\\<^sub>l\\<^sub>s ?C\\<^sub>2 =\n   {};\n   instance_of\\<^sub>l\\<^sub>s ?C\\<^sub>1' ?C\\<^sub>1 \\<and>\n   instance_of\\<^sub>l\\<^sub>s ?C\\<^sub>2' ?C\\<^sub>2;\n   applicable ?C\\<^sub>1' ?C\\<^sub>2' ?L\\<^sub>1' ?L\\<^sub>2'\n    ?\\<sigma>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>L\\<^sub>1 L\\<^sub>2 \\<tau>.\n                       applicable ?C\\<^sub>1 ?C\\<^sub>2 L\\<^sub>1 L\\<^sub>2\n                        \\<tau> \\<and>\n                       instance_of\\<^sub>l\\<^sub>s\n                        (resolution ?C\\<^sub>1' ?C\\<^sub>2' ?L\\<^sub>1'\n                          ?L\\<^sub>2' ?\\<sigma>)\n                        (resolution ?C\\<^sub>1 ?C\\<^sub>2 L\\<^sub>1\n                          L\\<^sub>2 \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<exists>L M \\<tau>.\n       applicable C D L M \\<tau> \\<and>\n       instance_of\\<^sub>l\\<^sub>s (resolution C' D' L' M' \\<sigma>)\n        (resolution C D L M \\<tau>)", "by metis"], ["", "thm completeness"], ["", "theorem complete:\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::hterm fun_denot) (G::hterm pred_denot) . \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "using assms completeness"], ["proof (prove)\nusing this:\n  finite Cs\n  \\<forall>C\\<in>Cs. finite C\n  \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G Cs\n  \\<lbrakk>finite ?Cs; \\<forall>C\\<in>?Cs. finite C;\n   \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G ?Cs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Cs'.\n                       resolution_deriv ?Cs Cs' \\<and> {} \\<in> Cs'\n\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "by -"], ["", "thm completeness_countable"], ["", "theorem complete_countable:\n  assumes inf_uni: \"infinite (UNIV :: ('u :: countable) set)\"\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::'u fun_denot) (G::'u pred_denot). \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "using assms completeness_countable"], ["proof (prove)\nusing this:\n  infinite UNIV\n  finite Cs\n  \\<forall>C\\<in>Cs. finite C\n  \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G Cs\n  \\<lbrakk>infinite UNIV; finite ?Cs; \\<forall>C\\<in>?Cs. finite C;\n   \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G ?Cs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Cs'.\n                       resolution_deriv ?Cs Cs' \\<and> {} \\<in> Cs'\n\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "by -"], ["", "thm completeness_nat"], ["", "theorem complete_nat:\n  assumes finite_cs: \"finite Cs\" \"\\<forall>C\\<in>Cs. finite C\"\n  assumes unsat: \"\\<forall>(F::nat fun_denot) (G::nat pred_denot) . \\<not>eval\\<^sub>c\\<^sub>s F G Cs\"\n  shows \"\\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "using assms completeness_nat"], ["proof (prove)\nusing this:\n  finite Cs\n  \\<forall>C\\<in>Cs. finite C\n  \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G Cs\n  \\<lbrakk>finite ?Cs; \\<forall>C\\<in>?Cs. finite C;\n   \\<forall>F G. \\<not> eval\\<^sub>c\\<^sub>s F G ?Cs\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Cs'.\n                       resolution_deriv ?Cs Cs' \\<and> {} \\<in> Cs'\n\ngoal (1 subgoal):\n 1. \\<exists>Cs'. resolution_deriv Cs Cs' \\<and> {} \\<in> Cs'", "by -"], ["", "end"]]}