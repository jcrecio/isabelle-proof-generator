{"file_name": "/home/qj213/afp-2021-10-22/thys/Resolution_FOL/Unification_Theorem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Resolution_FOL", "problem_names": ["lemma set_set_to_list: \"finite xs \\<Longrightarrow> set (set_to_list xs) = xs\"", "lemma iterm_to_fterm_cancel[simp]: \"iterm_to_fterm (fterm_to_iterm t) = t\"", "lemma fterm_to_iterm_cancel[simp]: \"fterm_to_iterm (iterm_to_fterm t) = t\"", "lemma iterm_to_fterm_subt: \"(iterm_to_fterm t1) \\<cdot>\\<^sub>t \\<sigma> = iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))\"", "lemma unifiert_unifiers:\n  assumes \"unifier\\<^sub>t\\<^sub>s \\<sigma> ts\"\n  shows \"fsub_to_isub \\<sigma> \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\"", "lemma unify_unification:\n  assumes \"\\<sigma> \\<in> unifiers (set E)\"\n  shows \"\\<exists>\\<theta>. is_imgu \\<theta> (set E)\"", "lemma fterm_to_iterm_subst: \"(fterm_to_iterm t1) \\<cdot> \\<sigma> =fterm_to_iterm (t1 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>)\"", "lemma unifiers_unifiert:\n  assumes \"\\<sigma> \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\"\n  shows \"unifier\\<^sub>t\\<^sub>s (isub_to_fsub \\<sigma>) ts\"", "lemma icomp_fcomp: \"\\<theta> \\<circ>\\<^sub>s i = fsub_to_isub (isub_to_fsub \\<theta> \\<cdot> isub_to_fsub i)\"", "lemma is_mgu_mgu\\<^sub>t\\<^sub>s: \n  assumes \"finite ts\"\n  assumes \"is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\"\n  shows \"mgu\\<^sub>t\\<^sub>s (isub_to_fsub \\<theta>) ts\"", "lemma unification':\n  assumes \"finite ts\"\n  assumes  \"unifier\\<^sub>t\\<^sub>s \\<sigma> ts\"\n  shows \"\\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts\"", "lemma term_to_literal_cancel[simp]: \"term_to_literal (literal_to_term l) = l\"", "lemma literal_to_term_sub: \"literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = (literal_to_term l) \\<cdot>\\<^sub>t \\<sigma>\"", "lemma unifier\\<^sub>l\\<^sub>s_unifier\\<^sub>t\\<^sub>s:\n  assumes \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\"\n  shows \"unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term `  L)\"", "lemma unifiert_unifier\\<^sub>l\\<^sub>s:\n  assumes \"unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term `  L)\"\n  shows \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\"", "lemma mgu\\<^sub>t\\<^sub>s_mgu\\<^sub>l\\<^sub>s:\n  assumes \"mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term `  L)\"\n  shows \"mgu\\<^sub>l\\<^sub>s \\<theta> L\"", "theorem unification:\n  assumes fin: \"finite L\"\n  assumes uni: \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\"\n  shows \"\\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L\""], "translations": [["", "lemma set_set_to_list: \"finite xs \\<Longrightarrow> set (set_to_list xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite xs \\<Longrightarrow> set (set_to_list xs) = xs", "proof (induction rule: finite.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. set (set_to_list {}) = {}\n 2. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "case (emptyI)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. set (set_to_list {}) = {}\n 2. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "have \"set [] = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set [] = {}", "by auto"], ["proof (state)\nthis:\n  set [] = {}\n\ngoal (2 subgoals):\n 1. set (set_to_list {}) = {}\n 2. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "then"], ["proof (chain)\npicking this:\n  set [] = {}", "show ?case"], ["proof (prove)\nusing this:\n  set [] = {}\n\ngoal (1 subgoal):\n 1. set (set_to_list {}) = {}", "unfolding set_to_list_def inv_into_def"], ["proof (prove)\nusing this:\n  set [] = {}\n\ngoal (1 subgoal):\n 1. set (SOME y. y \\<in> UNIV \\<and> set y = {}) = {}", "by auto"], ["proof (state)\nthis:\n  set (set_to_list {}) = {}\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "case (insertI A a)"], ["proof (state)\nthis:\n  finite A\n  set (set_to_list A) = A\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "then"], ["proof (chain)\npicking this:\n  finite A\n  set (set_to_list A) = A", "have \"set (a#set_to_list A) = insert a A\""], ["proof (prove)\nusing this:\n  finite A\n  set (set_to_list A) = A\n\ngoal (1 subgoal):\n 1. set (a # set_to_list A) = insert a A", "by auto"], ["proof (state)\nthis:\n  set (a # set_to_list A) = insert a A\n\ngoal (1 subgoal):\n 1. \\<And>A a.\n       \\<lbrakk>finite A; set (set_to_list A) = A\\<rbrakk>\n       \\<Longrightarrow> set (set_to_list (insert a A)) = insert a A", "then"], ["proof (chain)\npicking this:\n  set (a # set_to_list A) = insert a A", "show ?case"], ["proof (prove)\nusing this:\n  set (a # set_to_list A) = insert a A\n\ngoal (1 subgoal):\n 1. set (set_to_list (insert a A)) = insert a A", "unfolding set_to_list_def inv_into_def"], ["proof (prove)\nusing this:\n  set (a # (SOME y. y \\<in> UNIV \\<and> set y = A)) = insert a A\n\ngoal (1 subgoal):\n 1. set (SOME y. y \\<in> UNIV \\<and> set y = insert a A) = insert a A", "by (metis (mono_tags, lifting) UNIV_I someI)"], ["proof (state)\nthis:\n  set (set_to_list (insert a A)) = insert a A\n\ngoal:\nNo subgoals!", "qed"], ["", "fun iterm_to_fterm :: \"(fun_sym, var_sym) term \\<Rightarrow> fterm\" where\n  \"iterm_to_fterm (Term.Var x) = Var x\"\n| \"iterm_to_fterm (Term.Fun f ts) = Fun f (map iterm_to_fterm ts)\""], ["", "fun fterm_to_iterm :: \"fterm \\<Rightarrow> (fun_sym, var_sym) term\" where\n  \"fterm_to_iterm (Var x) = Term.Var x\"\n| \"fterm_to_iterm (Fun f ts) = Term.Fun f (map fterm_to_iterm ts)\""], ["", "lemma iterm_to_fterm_cancel[simp]: \"iterm_to_fterm (fterm_to_iterm t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterm_to_fterm (fterm_to_iterm t) = t", "by (induction t) (auto simp add: map_idI)"], ["", "lemma fterm_to_iterm_cancel[simp]: \"fterm_to_iterm (iterm_to_fterm t) = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fterm_to_iterm (iterm_to_fterm t) = t", "by (induction t) (auto simp add: map_idI)"], ["", "abbreviation(input) fsub_to_isub :: \"substitution \\<Rightarrow> (fun_sym, var_sym) subst\" where\n  \"fsub_to_isub \\<sigma> \\<equiv> \\<lambda>x. fterm_to_iterm (\\<sigma> x)\""], ["", "abbreviation(input) isub_to_fsub :: \"(fun_sym, var_sym) subst \\<Rightarrow> substitution\" where\n  \"isub_to_fsub \\<sigma> \\<equiv> \\<lambda>x. iterm_to_fterm (\\<sigma> x)\""], ["", "lemma iterm_to_fterm_subt: \"(iterm_to_fterm t1) \\<cdot>\\<^sub>t \\<sigma> = iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n    iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))", "by (induction t1) auto"], ["", "lemma unifiert_unifiers:\n  assumes \"unifier\\<^sub>t\\<^sub>s \\<sigma> ts\"\n  shows \"fsub_to_isub \\<sigma> \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "have \"\\<forall>t1 \\<in> fterm_to_iterm ` ts. \\<forall>t2 \\<in> fterm_to_iterm ` ts. t1 \\<cdot> (fsub_to_isub \\<sigma>) = t2 \\<cdot> (fsub_to_isub \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t1\\<in>fterm_to_iterm ` ts.\n       \\<forall>t2\\<in>fterm_to_iterm ` ts.\n          t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n          t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "proof (rule ballI;rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "fix t1 t2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "assume t1_p: \"t1 \\<in> fterm_to_iterm ` ts\""], ["proof (state)\nthis:\n  t1 \\<in> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "assume t2_p: \"t2 \\<in> fterm_to_iterm ` ts\""], ["proof (state)\nthis:\n  t2 \\<in> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "from t1_p t2_p"], ["proof (chain)\npicking this:\n  t1 \\<in> fterm_to_iterm ` ts\n  t2 \\<in> fterm_to_iterm ` ts", "have \"iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts\""], ["proof (prove)\nusing this:\n  t1 \\<in> fterm_to_iterm ` ts\n  t2 \\<in> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts", "by auto"], ["proof (state)\nthis:\n  iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts", "have \"(iterm_to_fterm t1) \\<cdot>\\<^sub>t \\<sigma> = (iterm_to_fterm t2) \\<cdot>\\<^sub>t \\<sigma>\""], ["proof (prove)\nusing this:\n  iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts\n\ngoal (1 subgoal):\n 1. iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n    iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts\n\ngoal (1 subgoal):\n 1. iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n    iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>", "unfolding unifier\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  iterm_to_fterm t1 \\<in> ts \\<and> iterm_to_fterm t2 \\<in> ts\n  \\<exists>t'. \\<forall>t\\<in>ts. t \\<cdot>\\<^sub>t \\<sigma> = t'\n\ngoal (1 subgoal):\n 1. iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n    iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>", "by auto"], ["proof (state)\nthis:\n  iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n  iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n  iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>", "have \"iterm_to_fterm (t1 \\<cdot> fsub_to_isub \\<sigma>) = iterm_to_fterm (t2 \\<cdot> fsub_to_isub \\<sigma>)\""], ["proof (prove)\nusing this:\n  iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n  iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>\n\ngoal (1 subgoal):\n 1. iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))) =\n    iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))", "using iterm_to_fterm_subt"], ["proof (prove)\nusing this:\n  iterm_to_fterm t1 \\<cdot>\\<^sub>t \\<sigma> =\n  iterm_to_fterm t2 \\<cdot>\\<^sub>t \\<sigma>\n  iterm_to_fterm ?t1.0 \\<cdot>\\<^sub>t ?\\<sigma> =\n  iterm_to_fterm (?t1.0 \\<cdot> (\\<lambda>x. fterm_to_iterm (?\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))) =\n    iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))", "by auto"], ["proof (state)\nthis:\n  iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))) =\n  iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))) =\n  iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))", "have \"fterm_to_iterm (iterm_to_fterm (t1 \\<cdot> fsub_to_isub \\<sigma>)) = fterm_to_iterm (iterm_to_fterm (t2 \\<cdot> fsub_to_isub \\<sigma>))\""], ["proof (prove)\nusing this:\n  iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))) =\n  iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. fterm_to_iterm\n     (iterm_to_fterm\n       (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))) =\n    fterm_to_iterm\n     (iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))))", "by auto"], ["proof (state)\nthis:\n  fterm_to_iterm\n   (iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))) =\n  fterm_to_iterm\n   (iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))))\n\ngoal (1 subgoal):\n 1. \\<And>t1 t2.\n       \\<lbrakk>t1 \\<in> fterm_to_iterm ` ts;\n        t2 \\<in> fterm_to_iterm ` ts\\<rbrakk>\n       \\<Longrightarrow> t1 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n                         t2 \\<cdot>\n                         (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  fterm_to_iterm\n   (iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))) =\n  fterm_to_iterm\n   (iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))))", "show \"t1 \\<cdot> fsub_to_isub \\<sigma> = t2 \\<cdot> fsub_to_isub \\<sigma>\""], ["proof (prove)\nusing this:\n  fterm_to_iterm\n   (iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))) =\n  fterm_to_iterm\n   (iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))))\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n    t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "using fterm_to_iterm_cancel"], ["proof (prove)\nusing this:\n  fterm_to_iterm\n   (iterm_to_fterm (t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)))) =\n  fterm_to_iterm\n   (iterm_to_fterm (t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))))\n  fterm_to_iterm (iterm_to_fterm ?t) = ?t\n\ngoal (1 subgoal):\n 1. t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n    t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "by auto"], ["proof (state)\nthis:\n  t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n  t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t1\\<in>fterm_to_iterm ` ts.\n     \\<forall>t2\\<in>fterm_to_iterm ` ts.\n        t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n        t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "then"], ["proof (chain)\npicking this:\n  \\<forall>t1\\<in>fterm_to_iterm ` ts.\n     \\<forall>t2\\<in>fterm_to_iterm ` ts.\n        t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n        t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "have \"\\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts. fst p \\<cdot> fsub_to_isub \\<sigma> = snd p \\<cdot> fsub_to_isub \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<forall>t1\\<in>fterm_to_iterm ` ts.\n     \\<forall>t2\\<in>fterm_to_iterm ` ts.\n        t1 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n        t2 \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n       fst p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n       snd p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "by (metis mem_Times_iff)"], ["proof (state)\nthis:\n  \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n     fst p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n     snd p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "then"], ["proof (chain)\npicking this:\n  \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n     fst p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n     snd p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n     fst p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n     snd p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "unfolding unifiers_def"], ["proof (prove)\nusing this:\n  \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n     fst p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x)) =\n     snd p \\<cdot> (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> {\\<sigma>.\n           \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n              fst p \\<cdot> \\<sigma> = snd p \\<cdot> \\<sigma>}", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation(input) get_mgut :: \"fterm list \\<Rightarrow> substitution option\" where\n  \"get_mgut ts \\<equiv> map_option (isub_to_fsub \\<circ> subst_of) (unify (List.product (map fterm_to_iterm ts) (map fterm_to_iterm ts)) [])\""], ["", "lemma unify_unification:\n  assumes \"\\<sigma> \\<in> unifiers (set E)\"\n  shows \"\\<exists>\\<theta>. is_imgu \\<theta> (set E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. is_imgu \\<theta> (set E)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. is_imgu \\<theta> (set E)", "from assms"], ["proof (chain)\npicking this:\n  \\<sigma> \\<in> unifiers (set E)", "have \"\\<exists>cs. unify E [] = Some cs\""], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> unifiers (set E)\n\ngoal (1 subgoal):\n 1. \\<exists>cs. unify E [] = Some cs", "using unify_complete"], ["proof (prove)\nusing this:\n  \\<sigma> \\<in> unifiers (set E)\n  unify ?E ?bs = None \\<Longrightarrow> unifiers (set ?E) = {}\n\ngoal (1 subgoal):\n 1. \\<exists>cs. unify E [] = Some cs", "by auto"], ["proof (state)\nthis:\n  \\<exists>cs. unify E [] = Some cs\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. is_imgu \\<theta> (set E)", "then"], ["proof (chain)\npicking this:\n  \\<exists>cs. unify E [] = Some cs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>cs. unify E [] = Some cs\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. is_imgu \\<theta> (set E)", "using unify_sound"], ["proof (prove)\nusing this:\n  \\<exists>cs. unify E [] = Some cs\n  unify ?E [] = Some ?cs \\<Longrightarrow> is_imgu (subst_of ?cs) (set ?E)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. is_imgu \\<theta> (set E)", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<theta>. is_imgu \\<theta> (set E)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fterm_to_iterm_subst: \"(fterm_to_iterm t1) \\<cdot> \\<sigma> =fterm_to_iterm (t1 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fterm_to_iterm t1 \\<cdot> \\<sigma> =\n    fterm_to_iterm\n     (t1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))", "by (induction t1) auto"], ["", "lemma unifiers_unifiert:\n  assumes \"\\<sigma> \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\"\n  shows \"unifier\\<^sub>t\\<^sub>s (isub_to_fsub \\<sigma>) ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "proof (cases \"ts={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. ts = {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts\n 2. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "assume \"ts = {}\""], ["proof (state)\nthis:\n  ts = {}\n\ngoal (2 subgoals):\n 1. ts = {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts\n 2. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "then"], ["proof (chain)\npicking this:\n  ts = {}", "show \"unifier\\<^sub>t\\<^sub>s (isub_to_fsub \\<sigma>) ts\""], ["proof (prove)\nusing this:\n  ts = {}\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "unfolding unifier\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  ts = {}\n\ngoal (1 subgoal):\n 1. \\<exists>t'.\n       \\<forall>t\\<in>ts.\n          t \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) = t'", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts\n\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "assume \"ts \\<noteq> {}\""], ["proof (state)\nthis:\n  ts \\<noteq> {}\n\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "then"], ["proof (chain)\npicking this:\n  ts \\<noteq> {}", "obtain t' where t'_p: \"t' \\<in> ts\""], ["proof (prove)\nusing this:\n  ts \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>t'. t' \\<in> ts \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t' \\<in> ts\n\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "have \"\\<forall>t\\<^sub>1\\<in>ts. \\<forall>t\\<^sub>2\\<in>ts. t\\<^sub>1 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma> = t\\<^sub>2 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<^sub>1\\<in>ts.\n       \\<forall>t\\<^sub>2\\<in>ts.\n          t\\<^sub>1 \\<cdot>\\<^sub>t\n          (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n          t\\<^sub>2 \\<cdot>\\<^sub>t\n          (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "proof (rule ballI ; rule ballI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "fix t\\<^sub>1 t\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "assume \"t\\<^sub>1 \\<in> ts\" \"t\\<^sub>2 \\<in> ts\""], ["proof (state)\nthis:\n  t\\<^sub>1 \\<in> ts\n  t\\<^sub>2 \\<in> ts\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  t\\<^sub>1 \\<in> ts\n  t\\<^sub>2 \\<in> ts", "have \"fterm_to_iterm t\\<^sub>1 \\<in> fterm_to_iterm ` ts\" \"fterm_to_iterm t\\<^sub>2 \\<in> fterm_to_iterm ` ts\""], ["proof (prove)\nusing this:\n  t\\<^sub>1 \\<in> ts\n  t\\<^sub>2 \\<in> ts\n\ngoal (1 subgoal):\n 1. fterm_to_iterm t\\<^sub>1 \\<in> fterm_to_iterm ` ts &&&\n    fterm_to_iterm t\\<^sub>2 \\<in> fterm_to_iterm ` ts", "by auto"], ["proof (state)\nthis:\n  fterm_to_iterm t\\<^sub>1 \\<in> fterm_to_iterm ` ts\n  fterm_to_iterm t\\<^sub>2 \\<in> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  fterm_to_iterm t\\<^sub>1 \\<in> fterm_to_iterm ` ts\n  fterm_to_iterm t\\<^sub>2 \\<in> fterm_to_iterm ` ts", "have \"(fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2) \\<in> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\""], ["proof (prove)\nusing this:\n  fterm_to_iterm t\\<^sub>1 \\<in> fterm_to_iterm ` ts\n  fterm_to_iterm t\\<^sub>2 \\<in> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n    \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts", "by auto"], ["proof (state)\nthis:\n  (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n  \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n  \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts", "have \"(fterm_to_iterm t\\<^sub>1) \\<cdot> \\<sigma> = (fterm_to_iterm t\\<^sub>2) \\<cdot> \\<sigma>\""], ["proof (prove)\nusing this:\n  (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n  \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts\n\ngoal (1 subgoal):\n 1. fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n    fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>", "using assms"], ["proof (prove)\nusing this:\n  (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n  \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts\n  \\<sigma> \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n    fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>", "unfolding unifiers_def"], ["proof (prove)\nusing this:\n  (fterm_to_iterm t\\<^sub>1, fterm_to_iterm t\\<^sub>2)\n  \\<in> fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts\n  \\<sigma>\n  \\<in> {\\<sigma>.\n         \\<forall>p\\<in>fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts.\n            fst p \\<cdot> \\<sigma> = snd p \\<cdot> \\<sigma>}\n\ngoal (1 subgoal):\n 1. fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n    fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>", "by (metis (no_types, lifting) assms fst_conv in_unifiersE snd_conv)"], ["proof (state)\nthis:\n  fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n  fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n  fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>", "have \"fterm_to_iterm (t\\<^sub>1 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>) = fterm_to_iterm (t\\<^sub>2 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>)\""], ["proof (prove)\nusing this:\n  fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n  fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>\n\ngoal (1 subgoal):\n 1. fterm_to_iterm\n     (t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))) =\n    fterm_to_iterm\n     (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))", "using fterm_to_iterm_subst"], ["proof (prove)\nusing this:\n  fterm_to_iterm t\\<^sub>1 \\<cdot> \\<sigma> =\n  fterm_to_iterm t\\<^sub>2 \\<cdot> \\<sigma>\n  fterm_to_iterm ?t1.0 \\<cdot> ?\\<sigma> =\n  fterm_to_iterm\n   (?t1.0 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (?\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. fterm_to_iterm\n     (t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))) =\n    fterm_to_iterm\n     (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))", "by auto"], ["proof (state)\nthis:\n  fterm_to_iterm\n   (t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))) =\n  fterm_to_iterm\n   (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  fterm_to_iterm\n   (t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))) =\n  fterm_to_iterm\n   (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))", "have \"iterm_to_fterm (fterm_to_iterm (t\\<^sub>1 \\<cdot>\\<^sub>t (isub_to_fsub \\<sigma>))) = iterm_to_fterm (fterm_to_iterm (t\\<^sub>2 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>))\""], ["proof (prove)\nusing this:\n  fterm_to_iterm\n   (t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))) =\n  fterm_to_iterm\n   (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. iterm_to_fterm\n     (fterm_to_iterm\n       (t\\<^sub>1 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))) =\n    iterm_to_fterm\n     (fterm_to_iterm\n       (t\\<^sub>2 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x))))", "by auto"], ["proof (state)\nthis:\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>1 \\<cdot>\\<^sub>t\n      (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))) =\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))))\n\ngoal (1 subgoal):\n 1. \\<And>t\\<^sub>1 t\\<^sub>2.\n       \\<lbrakk>t\\<^sub>1 \\<in> ts; t\\<^sub>2 \\<in> ts\\<rbrakk>\n       \\<Longrightarrow> t\\<^sub>1 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n                         t\\<^sub>2 \\<cdot>\\<^sub>t\n                         (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "then"], ["proof (chain)\npicking this:\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>1 \\<cdot>\\<^sub>t\n      (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))) =\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))))", "show \"t\\<^sub>1 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma> = t\\<^sub>2 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>\""], ["proof (prove)\nusing this:\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>1 \\<cdot>\\<^sub>t\n      (\\<lambda>x. iterm_to_fterm (\\<sigma> x)))) =\n  iterm_to_fterm\n   (fterm_to_iterm\n     (t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))))\n\ngoal (1 subgoal):\n 1. t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n    t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "by auto"], ["proof (state)\nthis:\n  t\\<^sub>1 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n  t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<^sub>1\\<in>ts.\n     \\<forall>t\\<^sub>2\\<in>ts.\n        t\\<^sub>1 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n        t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<^sub>1\\<in>ts.\n     \\<forall>t\\<^sub>2\\<in>ts.\n        t\\<^sub>1 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n        t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "have \"\\<forall>t\\<^sub>2\\<in>ts. t' \\<cdot>\\<^sub>t isub_to_fsub \\<sigma> = t\\<^sub>2 \\<cdot>\\<^sub>t isub_to_fsub \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<^sub>1\\<in>ts.\n     \\<forall>t\\<^sub>2\\<in>ts.\n        t\\<^sub>1 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n        t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<^sub>2\\<in>ts.\n       t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n       t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "using t'_p"], ["proof (prove)\nusing this:\n  \\<forall>t\\<^sub>1\\<in>ts.\n     \\<forall>t\\<^sub>2\\<in>ts.\n        t\\<^sub>1 \\<cdot>\\<^sub>t\n        (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n        t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n  t' \\<in> ts\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<^sub>2\\<in>ts.\n       t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n       t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "by blast"], ["proof (state)\nthis:\n  \\<forall>t\\<^sub>2\\<in>ts.\n     t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n     t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. ts \\<noteq> {} \\<Longrightarrow>\n    unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<^sub>2\\<in>ts.\n     t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n     t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))", "show \"unifier\\<^sub>t\\<^sub>s (isub_to_fsub \\<sigma>) ts\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<^sub>2\\<in>ts.\n     t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n     t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts", "unfolding unifier\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  \\<forall>t\\<^sub>2\\<in>ts.\n     t' \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) =\n     t\\<^sub>2 \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x))\n\ngoal (1 subgoal):\n 1. \\<exists>t'.\n       \\<forall>t\\<in>ts.\n          t \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) = t'", "by metis"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<sigma> x)) ts\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma icomp_fcomp: \"\\<theta> \\<circ>\\<^sub>s i = fsub_to_isub (isub_to_fsub \\<theta> \\<cdot> isub_to_fsub i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> \\<circ>\\<^sub>s i =\n    (\\<lambda>x.\n        fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x))", "unfolding composition_def subst_compose_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<theta> x \\<cdot> i) =\n    (\\<lambda>x.\n        fterm_to_iterm\n         (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n          (\\<lambda>x. iterm_to_fterm (i x))))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<theta> x \\<cdot> i =\n       fterm_to_iterm\n        (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n         (\\<lambda>x. iterm_to_fterm (i x)))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<theta> x \\<cdot> i =\n       fterm_to_iterm\n        (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n         (\\<lambda>x. iterm_to_fterm (i x)))", "show \"\\<theta> x \\<cdot> i = fterm_to_iterm (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t (\\<lambda>x. iterm_to_fterm (i x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> x \\<cdot> i =\n    fterm_to_iterm\n     (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n      (\\<lambda>x. iterm_to_fterm (i x)))", "using iterm_to_fterm_subt"], ["proof (prove)\nusing this:\n  iterm_to_fterm ?t1.0 \\<cdot>\\<^sub>t ?\\<sigma> =\n  iterm_to_fterm (?t1.0 \\<cdot> (\\<lambda>x. fterm_to_iterm (?\\<sigma> x)))\n\ngoal (1 subgoal):\n 1. \\<theta> x \\<cdot> i =\n    fterm_to_iterm\n     (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n      (\\<lambda>x. iterm_to_fterm (i x)))", "by auto"], ["proof (state)\nthis:\n  \\<theta> x \\<cdot> i =\n  fterm_to_iterm\n   (iterm_to_fterm (\\<theta> x) \\<cdot>\\<^sub>t\n    (\\<lambda>x. iterm_to_fterm (i x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma is_mgu_mgu\\<^sub>t\\<^sub>s: \n  assumes \"finite ts\"\n  assumes \"is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\"\n  shows \"mgu\\<^sub>t\\<^sub>s (isub_to_fsub \\<theta>) ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "from assms"], ["proof (chain)\npicking this:\n  finite ts\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "have \"unifier\\<^sub>t\\<^sub>s (isub_to_fsub \\<theta>) ts\""], ["proof (prove)\nusing this:\n  finite ts\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "unfolding is_imgu_def"], ["proof (prove)\nusing this:\n  finite ts\n  \\<theta>\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts) \\<and>\n  (\\<forall>\\<tau>\n            \\<in>unifiers\n                  (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts).\n      \\<tau> = \\<theta> \\<circ>\\<^sub>s \\<tau>)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "using unifiers_unifiert"], ["proof (prove)\nusing this:\n  finite ts\n  \\<theta>\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts) \\<and>\n  (\\<forall>\\<tau>\n            \\<in>unifiers\n                  (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts).\n      \\<tau> = \\<theta> \\<circ>\\<^sub>s \\<tau>)\n  ?\\<sigma>\n  \\<in> unifiers\n         (fterm_to_iterm ` ?ts \\<times>\n          fterm_to_iterm ` ?ts) \\<Longrightarrow>\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (?\\<sigma> x)) ?ts\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "moreover"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "have \"\\<forall>u. unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow> (\\<exists>i. u = (isub_to_fsub \\<theta>) \\<cdot> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n       (\\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i)", "proof (rule allI; rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "assume \"unifier\\<^sub>t\\<^sub>s u ts\""], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s u ts\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s u ts", "have \"fsub_to_isub u \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s u ts\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (u x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "using unifiert_unifiers"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s u ts\n  unifier\\<^sub>t\\<^sub>s ?\\<sigma> ?ts \\<Longrightarrow>\n  (\\<lambda>x. fterm_to_iterm (?\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ?ts \\<times> fterm_to_iterm ` ?ts)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (u x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. fterm_to_iterm (u x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. fterm_to_iterm (u x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "have \"\\<exists>i. fsub_to_isub u = \\<theta> \\<circ>\\<^sub>s i\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i", "using assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n  finite ts\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i", "unfolding is_imgu_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n  finite ts\n  \\<theta>\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts) \\<and>\n  (\\<forall>\\<tau>\n            \\<in>unifiers\n                  (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts).\n      \\<tau> = \\<theta> \\<circ>\\<^sub>s \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  \\<exists>i.\n     (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i", "obtain i where \"fsub_to_isub u = \\<theta> \\<circ>\\<^sub>s i\""], ["proof (prove)\nusing this:\n  \\<exists>i.\n     (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        (\\<lambda>x. fterm_to_iterm (u x)) =\n        \\<theta> \\<circ>\\<^sub>s i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i", "have \"fsub_to_isub u =  fsub_to_isub (isub_to_fsub \\<theta> \\<cdot> isub_to_fsub i)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (u x)) =\n    (\\<lambda>x.\n        fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x))", "using icomp_fcomp"], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x)) = \\<theta> \\<circ>\\<^sub>s i\n  ?\\<theta> \\<circ>\\<^sub>s ?i =\n  (\\<lambda>x.\n      fterm_to_iterm\n       (((\\<lambda>x. iterm_to_fterm (?\\<theta> x)) \\<cdot>\n         (\\<lambda>x. iterm_to_fterm (?i x)))\n         x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (u x)) =\n    (\\<lambda>x.\n        fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x))", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. fterm_to_iterm (u x)) =\n  (\\<lambda>x.\n      fterm_to_iterm\n       (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n         (\\<lambda>x. iterm_to_fterm (i x)))\n         x))\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. fterm_to_iterm (u x)) =\n  (\\<lambda>x.\n      fterm_to_iterm\n       (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n         (\\<lambda>x. iterm_to_fterm (i x)))\n         x))", "have \"isub_to_fsub (fsub_to_isub u) = isub_to_fsub (fsub_to_isub (isub_to_fsub \\<theta> \\<cdot> isub_to_fsub i))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (u x)) =\n  (\\<lambda>x.\n      fterm_to_iterm\n       (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n         (\\<lambda>x. iterm_to_fterm (i x)))\n         x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. iterm_to_fterm (fterm_to_iterm (u x))) =\n    (\\<lambda>x.\n        iterm_to_fterm\n         (fterm_to_iterm\n           (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n             (\\<lambda>x. iterm_to_fterm (i x)))\n             x)))", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>x. iterm_to_fterm (fterm_to_iterm (u x))) =\n  (\\<lambda>x.\n      iterm_to_fterm\n       (fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x)))\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. iterm_to_fterm (fterm_to_iterm (u x))) =\n  (\\<lambda>x.\n      iterm_to_fterm\n       (fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x)))", "have \"u = isub_to_fsub \\<theta> \\<cdot> isub_to_fsub i\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. iterm_to_fterm (fterm_to_iterm (u x))) =\n  (\\<lambda>x.\n      iterm_to_fterm\n       (fterm_to_iterm\n         (((\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n           (\\<lambda>x. iterm_to_fterm (i x)))\n           x)))\n\ngoal (1 subgoal):\n 1. u =\n    (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n    (\\<lambda>x. iterm_to_fterm (i x))", "by auto"], ["proof (state)\nthis:\n  u =\n  (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n  (\\<lambda>x. iterm_to_fterm (i x))\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       unifier\\<^sub>t\\<^sub>s u ts \\<Longrightarrow>\n       \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "then"], ["proof (chain)\npicking this:\n  u =\n  (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n  (\\<lambda>x. iterm_to_fterm (i x))", "show \"\\<exists>i. u = isub_to_fsub \\<theta> \\<cdot> i\""], ["proof (prove)\nusing this:\n  u =\n  (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot>\n  (\\<lambda>x. iterm_to_fterm (i x))\n\ngoal (1 subgoal):\n 1. \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i", "by metis"], ["proof (state)\nthis:\n  \\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u.\n     unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n     (\\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "ultimately"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n  \\<forall>u.\n     unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n     (\\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i)", "show ?thesis"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n  \\<forall>u.\n     unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n     (\\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "unfolding mgu\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n  \\<forall>u.\n     unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n     (\\<exists>i. u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x))\n     ts \\<and>\n    (\\<forall>u.\n        unifier\\<^sub>t\\<^sub>s u ts \\<longrightarrow>\n        (\\<exists>i.\n            u = (\\<lambda>x. iterm_to_fterm (\\<theta> x)) \\<cdot> i))", "by auto"], ["proof (state)\nthis:\n  mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unification':\n  assumes \"finite ts\"\n  assumes  \"unifier\\<^sub>t\\<^sub>s \\<sigma> ts\"\n  shows \"\\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "let ?E = \"fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "let ?lE = \"set_to_list ?E\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "from assms"], ["proof (chain)\npicking this:\n  finite ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts", "have \"fsub_to_isub \\<sigma> \\<in> unifiers ?E\""], ["proof (prove)\nusing this:\n  finite ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "using unifiert_unifiers"], ["proof (prove)\nusing this:\n  finite ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts\n  unifier\\<^sub>t\\<^sub>s ?\\<sigma> ?ts \\<Longrightarrow>\n  (\\<lambda>x. fterm_to_iterm (?\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ?ts \\<times> fterm_to_iterm ` ?ts)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n    \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "have \"\\<exists>\\<theta>. is_imgu \\<theta> ?E\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "using unify_unification[of \"fsub_to_isub \\<sigma>\" ?lE] assms"], ["proof (prove)\nusing this:\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n  (\\<lambda>x. fterm_to_iterm (\\<sigma> x))\n  \\<in> unifiers\n         (set (set_to_list\n                (fterm_to_iterm ` ts \\<times>\n                 fterm_to_iterm ` ts))) \\<Longrightarrow>\n  \\<exists>\\<theta>.\n     is_imgu \\<theta>\n      (set (set_to_list (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)))\n  finite ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>.\n       is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "by (simp add: set_set_to_list)"], ["proof (state)\nthis:\n  \\<exists>\\<theta>.\n     is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<theta>.\n     is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "obtain \\<theta> where \"is_imgu \\<theta> ?E\""], ["proof (prove)\nusing this:\n  \\<exists>\\<theta>.\n     is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        is_imgu \\<theta>\n         (fterm_to_iterm ` ts \\<times>\n          fterm_to_iterm ` ts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding set_to_list_def"], ["proof (prove)\nusing this:\n  \\<exists>\\<theta>.\n     is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        is_imgu \\<theta>\n         (fterm_to_iterm ` ts \\<times>\n          fterm_to_iterm ` ts) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "then"], ["proof (chain)\npicking this:\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)", "have \"mgu\\<^sub>t\\<^sub>s (isub_to_fsub \\<theta>) ts\""], ["proof (prove)\nusing this:\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "using assms is_mgu_mgu\\<^sub>t\\<^sub>s"], ["proof (prove)\nusing this:\n  is_imgu \\<theta> (fterm_to_iterm ` ts \\<times> fterm_to_iterm ` ts)\n  finite ts\n  unifier\\<^sub>t\\<^sub>s \\<sigma> ts\n  \\<lbrakk>finite ?ts;\n   is_imgu ?\\<theta>\n    (fterm_to_iterm ` ?ts \\<times> fterm_to_iterm ` ?ts)\\<rbrakk>\n  \\<Longrightarrow> mgu\\<^sub>t\\<^sub>s\n                     (\\<lambda>x. iterm_to_fterm (?\\<theta> x)) ?ts\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "by auto"], ["proof (state)\nthis:\n  mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "then"], ["proof (chain)\npicking this:\n  mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts", "show ?thesis"], ["proof (prove)\nusing this:\n  mgu\\<^sub>t\\<^sub>s (\\<lambda>x. iterm_to_fterm (\\<theta> x)) ts\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ts\n\ngoal:\nNo subgoals!", "qed"], ["", "fun literal_to_term :: \"fterm literal \\<Rightarrow> fterm\" where\n  \"literal_to_term (Pos p ts) = Fun ''Pos'' [Fun p ts]\"\n| \"literal_to_term (Neg p ts) = Fun ''Neg'' [Fun p ts]\""], ["", "fun term_to_literal :: \"fterm \\<Rightarrow> fterm literal\" where\n  \"term_to_literal (Fun s [Fun p ts]) = (if s=''Pos'' then Pos else Neg) p ts\""], ["", "lemma term_to_literal_cancel[simp]: \"term_to_literal (literal_to_term l) = l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. term_to_literal (literal_to_term l) = l", "by (cases l) auto"], ["", "lemma literal_to_term_sub: \"literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = (literal_to_term l) \\<cdot>\\<^sub>t \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) =\n    literal_to_term l \\<cdot>\\<^sub>t \\<sigma>", "by (induction l) auto"], ["", "lemma unifier\\<^sub>l\\<^sub>s_unifier\\<^sub>t\\<^sub>s:\n  assumes \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\"\n  shows \"unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term `  L)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "from assms"], ["proof (chain)\npicking this:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L", "obtain l' where \"\\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding unifier\\<^sub>l\\<^sub>s_def"], ["proof (prove)\nusing this:\n  \\<exists>l'. \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'\n\ngoal (1 subgoal):\n 1. (\\<And>l'.\n        \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'", "have \"\\<forall>l\\<in>L. literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L.\n     literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L.\n     literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'", "have \"\\<forall>l\\<in>L. (literal_to_term l) \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       literal_to_term l \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'", "using literal_to_term_sub"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>) = literal_to_term l'\n  literal_to_term (?l \\<cdot>\\<^sub>l ?\\<sigma>) =\n  literal_to_term ?l \\<cdot>\\<^sub>t ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       literal_to_term l \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L.\n     literal_to_term l \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L.\n     literal_to_term l \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'", "have \"\\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     literal_to_term l \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>literal_to_term ` L.\n       t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>literal_to_term ` L.\n     t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>literal_to_term ` L.\n     t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>literal_to_term ` L.\n     t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "unfolding unifier\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>literal_to_term ` L.\n     t \\<cdot>\\<^sub>t \\<sigma> = literal_to_term l'\n\ngoal (1 subgoal):\n 1. \\<exists>t'.\n       \\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unifiert_unifier\\<^sub>l\\<^sub>s:\n  assumes \"unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term `  L)\"\n  shows \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "from assms"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "obtain t' where \"\\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<forall>t\\<in>literal_to_term ` L.\n           t \\<cdot>\\<^sub>t \\<sigma> = t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding unifier\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  \\<exists>t'.\n     \\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<forall>t\\<in>literal_to_term ` L.\n           t \\<cdot>\\<^sub>t \\<sigma> = t' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'", "have \"\\<forall>t\\<in>literal_to_term ` L. term_to_literal (t \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>literal_to_term ` L. t \\<cdot>\\<^sub>t \\<sigma> = t'\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>literal_to_term ` L.\n       term_to_literal (t \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>literal_to_term ` L.\n     term_to_literal (t \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>literal_to_term ` L.\n     term_to_literal (t \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'", "have \"\\<forall>l\\<in> L. term_to_literal ((literal_to_term l) \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>literal_to_term ` L.\n     term_to_literal (t \\<cdot>\\<^sub>t \\<sigma>) = term_to_literal t'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       term_to_literal (literal_to_term l \\<cdot>\\<^sub>t \\<sigma>) =\n       term_to_literal t'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term l \\<cdot>\\<^sub>t \\<sigma>) =\n     term_to_literal t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term l \\<cdot>\\<^sub>t \\<sigma>) =\n     term_to_literal t'", "have \"\\<forall>l\\<in> L. term_to_literal ((literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>))) = term_to_literal t'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term l \\<cdot>\\<^sub>t \\<sigma>) =\n     term_to_literal t'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       term_to_literal (literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>)) =\n       term_to_literal t'", "using literal_to_term_sub"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term l \\<cdot>\\<^sub>t \\<sigma>) =\n     term_to_literal t'\n  literal_to_term (?l \\<cdot>\\<^sub>l ?\\<sigma>) =\n  literal_to_term ?l \\<cdot>\\<^sub>t ?\\<sigma>\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L.\n       term_to_literal (literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>)) =\n       term_to_literal t'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>)) =\n     term_to_literal t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>)) =\n     term_to_literal t'", "have \"\\<forall>l\\<in> L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'\""], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L.\n     term_to_literal (literal_to_term (l \\<cdot>\\<^sub>l \\<sigma>)) =\n     term_to_literal t'\n\ngoal (1 subgoal):\n 1. \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'", "by auto"], ["proof (state)\nthis:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "then"], ["proof (chain)\npicking this:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<sigma> L", "unfolding unifier\\<^sub>l\\<^sub>s_def"], ["proof (prove)\nusing this:\n  \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = term_to_literal t'\n\ngoal (1 subgoal):\n 1. \\<exists>l'. \\<forall>l\\<in>L. l \\<cdot>\\<^sub>l \\<sigma> = l'", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mgu\\<^sub>t\\<^sub>s_mgu\\<^sub>l\\<^sub>s:\n  assumes \"mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term `  L)\"\n  shows \"mgu\\<^sub>l\\<^sub>s \\<theta> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "from assms"], ["proof (chain)\npicking this:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)", "have \"unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term `  L)\""], ["proof (prove)\nusing this:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)", "unfolding mgu\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L) \\<and>\n  (\\<forall>u.\n      unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L) \\<longrightarrow>\n      (\\<exists>i. u = \\<theta> \\<cdot> i))\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)", "have \"unifier\\<^sub>l\\<^sub>s \\<theta> L\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<theta> L", "using unifiert_unifier\\<^sub>l\\<^sub>s"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n  unifier\\<^sub>t\\<^sub>s ?\\<sigma> (literal_to_term ` ?L) \\<Longrightarrow>\n  unifier\\<^sub>l\\<^sub>s ?\\<sigma> ?L\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<theta> L", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "moreover"], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "{"], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "assume \"unifier\\<^sub>l\\<^sub>s u L\""], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s u L\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  unifier\\<^sub>l\\<^sub>s u L", "have \"unifier\\<^sub>t\\<^sub>s u (literal_to_term `  L)\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s u L\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)", "using unifier\\<^sub>l\\<^sub>s_unifier\\<^sub>t\\<^sub>s"], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s u L\n  unifier\\<^sub>l\\<^sub>s ?\\<sigma> ?L \\<Longrightarrow>\n  unifier\\<^sub>t\\<^sub>s ?\\<sigma> (literal_to_term ` ?L)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)", "have \"\\<exists>i. u = \\<theta> \\<cdot> i\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. \\<exists>i. u = \\<theta> \\<cdot> i", "using assms"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. \\<exists>i. u = \\<theta> \\<cdot> i", "unfolding mgu\\<^sub>t\\<^sub>s_def"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L)\n  unifier\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L) \\<and>\n  (\\<forall>u.\n      unifier\\<^sub>t\\<^sub>s u (literal_to_term ` L) \\<longrightarrow>\n      (\\<exists>i. u = \\<theta> \\<cdot> i))\n\ngoal (1 subgoal):\n 1. \\<exists>i. u = \\<theta> \\<cdot> i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. u = \\<theta> \\<cdot> i\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "}"], ["proof (state)\nthis:\n  unifier\\<^sub>l\\<^sub>s ?u2 L \\<Longrightarrow>\n  \\<exists>i. ?u2 = \\<theta> \\<cdot> i\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "ultimately"], ["proof (chain)\npicking this:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n  unifier\\<^sub>l\\<^sub>s ?u2 L \\<Longrightarrow>\n  \\<exists>i. ?u2 = \\<theta> \\<cdot> i", "show ?thesis"], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n  unifier\\<^sub>l\\<^sub>s ?u2 L \\<Longrightarrow>\n  \\<exists>i. ?u2 = \\<theta> \\<cdot> i\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "unfolding mgu\\<^sub>l\\<^sub>s_def"], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s \\<theta> L\n  unifier\\<^sub>l\\<^sub>s ?u2 L \\<Longrightarrow>\n  \\<exists>i. ?u2 = \\<theta> \\<cdot> i\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>l\\<^sub>s \\<theta> L \\<and>\n    (\\<forall>u.\n        unifier\\<^sub>l\\<^sub>s u L \\<longrightarrow>\n        (\\<exists>i. u = \\<theta> \\<cdot> i))", "by auto"], ["proof (state)\nthis:\n  mgu\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem unification:\n  assumes fin: \"finite L\"\n  assumes uni: \"unifier\\<^sub>l\\<^sub>s \\<sigma> L\"\n  shows \"\\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "from uni"], ["proof (chain)\npicking this:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L", "have \"unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term `  L)\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "using unifier\\<^sub>l\\<^sub>s_unifier\\<^sub>t\\<^sub>s"], ["proof (prove)\nusing this:\n  unifier\\<^sub>l\\<^sub>s \\<sigma> L\n  unifier\\<^sub>l\\<^sub>s ?\\<sigma> ?L \\<Longrightarrow>\n  unifier\\<^sub>t\\<^sub>s ?\\<sigma> (literal_to_term ` ?L)\n\ngoal (1 subgoal):\n 1. unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "by auto"], ["proof (state)\nthis:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)", "obtain \\<theta> where \"mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term `  L)\""], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using fin unification'"], ["proof (prove)\nusing this:\n  unifier\\<^sub>t\\<^sub>s \\<sigma> (literal_to_term ` L)\n  finite L\n  \\<lbrakk>finite ?ts; unifier\\<^sub>t\\<^sub>s ?\\<sigma> ?ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>\\<theta>. mgu\\<^sub>t\\<^sub>s \\<theta> ?ts\n\ngoal (1 subgoal):\n 1. (\\<And>\\<theta>.\n        mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)", "have \"mgu\\<^sub>l\\<^sub>s \\<theta> L\""], ["proof (prove)\nusing this:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "using mgu\\<^sub>t\\<^sub>s_mgu\\<^sub>l\\<^sub>s"], ["proof (prove)\nusing this:\n  mgu\\<^sub>t\\<^sub>s \\<theta> (literal_to_term ` L)\n  mgu\\<^sub>t\\<^sub>s ?\\<theta> (literal_to_term ` ?L) \\<Longrightarrow>\n  mgu\\<^sub>l\\<^sub>s ?\\<theta> ?L\n\ngoal (1 subgoal):\n 1. mgu\\<^sub>l\\<^sub>s \\<theta> L", "by auto"], ["proof (state)\nthis:\n  mgu\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "then"], ["proof (chain)\npicking this:\n  mgu\\<^sub>l\\<^sub>s \\<theta> L", "show ?thesis"], ["proof (prove)\nusing this:\n  mgu\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal (1 subgoal):\n 1. \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<theta>. mgu\\<^sub>l\\<^sub>s \\<theta> L\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}