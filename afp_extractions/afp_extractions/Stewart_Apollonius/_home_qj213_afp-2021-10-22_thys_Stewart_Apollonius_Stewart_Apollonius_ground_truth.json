{"file_name": "/home/qj213/afp-2021-10-22/thys/Stewart_Apollonius/Stewart_Apollonius.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Stewart_Apollonius", "problem_names": ["theorem Stewart:\n  fixes A B C D :: \"'a::euclidean_space\"\n  assumes \"between (B, C) D\"\n  assumes \"a = dist B C\"\n  assumes \"b = dist A C\"\n  assumes \"c = dist B A\"\n  assumes \"d = dist A D\"\n  assumes \"m = dist B D\"\n  assumes \"n = dist C D\"\n  shows \"b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\"", "theorem Stewart':\n  fixes A B C D :: \"'a::euclidean_space\"\n  assumes \"between (B, C) D\"\n  shows \"(dist A C)\\<^sup>2 * dist B D + (dist B A)\\<^sup>2 * dist C D = dist B C * ((dist A D)\\<^sup>2 + dist B D * dist C D)\"", "lemma Apollonius:\n  fixes A B C :: \"'a::euclidean_space\"\n  assumes \"B \\<noteq> C\"\n  assumes \"b = dist A C\"\n  assumes \"c = dist B A\"\n  assumes \"d = dist A (midpoint B C)\"\n  assumes \"m = dist B (midpoint B C)\"\n  shows \"b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)\"", "lemma Apollonius':\n  fixes A B C :: \"'a::euclidean_space\"\n  assumes \"B \\<noteq> C\"\n  shows \"(dist A C)\\<^sup>2 + (dist B A)\\<^sup>2 = 2 * ((dist B (midpoint B C))\\<^sup>2 + (dist A (midpoint B C))\\<^sup>2)\""], "translations": [["", "theorem Stewart:\n  fixes A B C D :: \"'a::euclidean_space\"\n  assumes \"between (B, C) D\"\n  assumes \"a = dist B C\"\n  assumes \"b = dist A C\"\n  assumes \"c = dist B A\"\n  assumes \"d = dist A D\"\n  assumes \"m = dist B D\"\n  assumes \"n = dist C D\"\n  shows \"b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "assume \"B \\<noteq> D \\<and> C \\<noteq> D\""], ["proof (state)\nthis:\n  B \\<noteq> D \\<and> C \\<noteq> D\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "let ?\\<theta> = \"angle B D A\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "let ?\\<theta>' = \"angle A D C\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "from \\<open>B \\<noteq> D \\<and> C \\<noteq> D\\<close> \\<open>between _ _\\<close>"], ["proof (chain)\npicking this:\n  B \\<noteq> D \\<and> C \\<noteq> D\n  between (B, C) D", "have cos: \"cos ?\\<theta>' = - cos ?\\<theta>\""], ["proof (prove)\nusing this:\n  B \\<noteq> D \\<and> C \\<noteq> D\n  between (B, C) D\n\ngoal (1 subgoal):\n 1. cos (angle A D C) = - cos (angle B D A)", "by (auto simp add: angle_inverse[of B C D] angle_commute[of A D C])"], ["proof (state)\nthis:\n  cos (angle A D C) = - cos (angle B D A)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "from \\<open>between _ _\\<close>"], ["proof (chain)\npicking this:\n  between (B, C) D", "have \"m + n = a\""], ["proof (prove)\nusing this:\n  between (B, C) D\n\ngoal (1 subgoal):\n 1. m + n = a", "unfolding \\<open>a = _\\<close> \\<open>m = _\\<close> \\<open>n = _\\<close>"], ["proof (prove)\nusing this:\n  between (B, C) D\n\ngoal (1 subgoal):\n 1. dist B D + dist C D = dist B C", "by (metis (no_types) between dist_commute)"], ["proof (state)\nthis:\n  m + n = a\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "have \"c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos ?\\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos (angle B D A)", "unfolding \\<open>c = _\\<close> \\<open>m = _\\<close> \\<open>d = _\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist B A)\\<^sup>2 =\n    (dist B D)\\<^sup>2 + (dist A D)\\<^sup>2 -\n    2 * dist A D * dist B D * cos (angle B D A)", "by (simp add: cosine_law_triangle[of B A D] dist_commute[of D A] dist_commute[of D B])"], ["proof (state)\nthis:\n  c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos (angle B D A)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "moreover"], ["proof (state)\nthis:\n  c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos (angle B D A)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "have \"b\\<^sup>2 = n\\<^sup>2 + d\\<^sup>2 + 2 * d * n * cos ?\\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>2 = n\\<^sup>2 + d\\<^sup>2 + 2 * d * n * cos (angle B D A)", "unfolding \\<open>b = _\\<close> \\<open>n = _\\<close> \\<open>d = _\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 =\n    (dist C D)\\<^sup>2 + (dist A D)\\<^sup>2 +\n    2 * dist A D * dist C D * cos (angle B D A)", "by (simp add: cosine_law_triangle[of A C D] cos dist_commute[of D A] dist_commute[of D C])"], ["proof (state)\nthis:\n  b\\<^sup>2 = n\\<^sup>2 + d\\<^sup>2 + 2 * d * n * cos (angle B D A)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "ultimately"], ["proof (chain)\npicking this:\n  c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos (angle B D A)\n  b\\<^sup>2 = n\\<^sup>2 + d\\<^sup>2 + 2 * d * n * cos (angle B D A)", "have \"b\\<^sup>2 * m + c\\<^sup>2 * n = n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2\""], ["proof (prove)\nusing this:\n  c\\<^sup>2 = m\\<^sup>2 + d\\<^sup>2 - 2 * d * m * cos (angle B D A)\n  b\\<^sup>2 = n\\<^sup>2 + d\\<^sup>2 + 2 * d * n * cos (angle B D A)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * m + c\\<^sup>2 * n =\n    n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2", "by algebra"], ["proof (state)\nthis:\n  b\\<^sup>2 * m + c\\<^sup>2 * n =\n  n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "also"], ["proof (state)\nthis:\n  b\\<^sup>2 * m + c\\<^sup>2 * n =\n  n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "have \"\\<dots> = (m + n) * (m * n + d\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2 =\n    (m + n) * (m * n + d\\<^sup>2)", "by algebra"], ["proof (state)\nthis:\n  n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2 =\n  (m + n) * (m * n + d\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "also"], ["proof (state)\nthis:\n  n * m\\<^sup>2 + n\\<^sup>2 * m + (m + n) * d\\<^sup>2 =\n  (m + n) * (m * n + d\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "from \\<open>m + n = a\\<close>"], ["proof (chain)\npicking this:\n  m + n = a", "have \"\\<dots> = a * (d\\<^sup>2 + m * n)\""], ["proof (prove)\nusing this:\n  m + n = a\n\ngoal (1 subgoal):\n 1. (m + n) * (m * n + d\\<^sup>2) = a * (d\\<^sup>2 + m * n)", "by simp"], ["proof (state)\nthis:\n  (m + n) * (m * n + d\\<^sup>2) = a * (d\\<^sup>2 + m * n)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n 2. \\<not> ?P \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "finally"], ["proof (chain)\npicking this:\n  b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "show ?thesis"], ["proof (prove)\nusing this:\n  b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "."], ["proof (state)\nthis:\n  b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n\ngoal (1 subgoal):\n 1. \\<not> (B \\<noteq> D \\<and> C \\<noteq> D) \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (B \\<noteq> D \\<and> C \\<noteq> D) \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "assume \"\\<not> (B \\<noteq> D \\<and> C \\<noteq> D)\""], ["proof (state)\nthis:\n  \\<not> (B \\<noteq> D \\<and> C \\<noteq> D)\n\ngoal (1 subgoal):\n 1. \\<not> (B \\<noteq> D \\<and> C \\<noteq> D) \\<Longrightarrow>\n    b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "from this assms"], ["proof (chain)\npicking this:\n  \\<not> (B \\<noteq> D \\<and> C \\<noteq> D)\n  between (B, C) D\n  a = dist B C\n  b = dist A C\n  c = dist B A\n  d = dist A D\n  m = dist B D\n  n = dist C D", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> (B \\<noteq> D \\<and> C \\<noteq> D)\n  between (B, C) D\n  a = dist B C\n  b = dist A C\n  c = dist B A\n  d = dist A D\n  m = dist B D\n  n = dist C D\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)", "by (auto simp add: dist_commute)"], ["proof (state)\nthis:\n  b\\<^sup>2 * m + c\\<^sup>2 * n = a * (d\\<^sup>2 + m * n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nHere is an equivalent formulation that is probably more suitable for further use\nin other geometry theories in Isabelle.\n\\<close>"], ["", "theorem Stewart':\n  fixes A B C D :: \"'a::euclidean_space\"\n  assumes \"between (B, C) D\"\n  shows \"(dist A C)\\<^sup>2 * dist B D + (dist B A)\\<^sup>2 * dist C D = dist B C * ((dist A D)\\<^sup>2 + dist B D * dist C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 * dist B D + (dist B A)\\<^sup>2 * dist C D =\n    dist B C * ((dist A D)\\<^sup>2 + dist B D * dist C D)", "using assms"], ["proof (prove)\nusing this:\n  between (B, C) D\n\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 * dist B D + (dist B A)\\<^sup>2 * dist C D =\n    dist B C * ((dist A D)\\<^sup>2 + dist B D * dist C D)", "by (auto intro: Stewart)"], ["", "subsection \\<open>Apollonius' Theorem\\<close>"], ["", "text \\<open>\nApollonius' theorem is a simple specialisation of Stewart's theorem,\nbut historically predated Stewart's theorem by many centuries.\n\\<close>"], ["", "lemma Apollonius:\n  fixes A B C :: \"'a::euclidean_space\"\n  assumes \"B \\<noteq> C\"\n  assumes \"b = dist A C\"\n  assumes \"c = dist B A\"\n  assumes \"d = dist A (midpoint B C)\"\n  assumes \"m = dist B (midpoint B C)\"\n  shows \"b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "from \\<open>B \\<noteq> C\\<close>"], ["proof (chain)\npicking this:\n  B \\<noteq> C", "have \"m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  B \\<noteq> C\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "unfolding \\<open>m = _\\<close>"], ["proof (prove)\nusing this:\n  B \\<noteq> C\n\ngoal (1 subgoal):\n 1. dist B (midpoint B C) \\<noteq> 0", "using midpoint_eq_endpoint(1)"], ["proof (prove)\nusing this:\n  B \\<noteq> C\n  (midpoint ?a ?b = ?a) = (?a = ?b)\n\ngoal (1 subgoal):\n 1. dist B (midpoint B C) \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "have \"between (B, C) (midpoint B C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. between (B, C) (midpoint B C)", "by (simp add: between_midpoint)"], ["proof (state)\nthis:\n  between (B, C) (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  between (B, C) (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "have \"dist C (midpoint B C) = dist B (midpoint B C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist C (midpoint B C) = dist B (midpoint B C)", "by (simp add: dist_midpoint)"], ["proof (state)\nthis:\n  dist C (midpoint B C) = dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  dist C (midpoint B C) = dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "have \"dist B C = 2 * dist B (midpoint B C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist B C = 2 * dist B (midpoint B C)", "by (simp add: dist_midpoint)"], ["proof (state)\nthis:\n  dist B C = 2 * dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  dist B C = 2 * dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "note assms(2-5)"], ["proof (state)\nthis:\n  b = dist A C\n  c = dist B A\n  d = dist A (midpoint B C)\n  m = dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  between (B, C) (midpoint B C)\n  dist C (midpoint B C) = dist B (midpoint B C)\n  dist B C = 2 * dist B (midpoint B C)\n  b = dist A C\n  c = dist B A\n  d = dist A (midpoint B C)\n  m = dist B (midpoint B C)", "have \"b\\<^sup>2 * m + c\\<^sup>2 * m = (2 * m) * (m\\<^sup>2 + d\\<^sup>2)\""], ["proof (prove)\nusing this:\n  between (B, C) (midpoint B C)\n  dist C (midpoint B C) = dist B (midpoint B C)\n  dist B C = 2 * dist B (midpoint B C)\n  b = dist A C\n  c = dist B A\n  d = dist A (midpoint B C)\n  m = dist B (midpoint B C)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 * m + c\\<^sup>2 * m = 2 * m * (m\\<^sup>2 + d\\<^sup>2)", "by (auto dest!: Stewart[where a=\"2 * m\"] simp add: power2_eq_square)"], ["proof (state)\nthis:\n  b\\<^sup>2 * m + c\\<^sup>2 * m = 2 * m * (m\\<^sup>2 + d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "from this"], ["proof (chain)\npicking this:\n  b\\<^sup>2 * m + c\\<^sup>2 * m = 2 * m * (m\\<^sup>2 + d\\<^sup>2)", "have \"m * (b\\<^sup>2 + c\\<^sup>2) = m * (2 * (m\\<^sup>2 + d\\<^sup>2))\""], ["proof (prove)\nusing this:\n  b\\<^sup>2 * m + c\\<^sup>2 * m = 2 * m * (m\\<^sup>2 + d\\<^sup>2)\n\ngoal (1 subgoal):\n 1. m * (b\\<^sup>2 + c\\<^sup>2) = m * (2 * (m\\<^sup>2 + d\\<^sup>2))", "by (simp add: distrib_left semiring_normalization_rules(7))"], ["proof (state)\nthis:\n  m * (b\\<^sup>2 + c\\<^sup>2) = m * (2 * (m\\<^sup>2 + d\\<^sup>2))\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "from this \\<open>m \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  m * (b\\<^sup>2 + c\\<^sup>2) = m * (2 * (m\\<^sup>2 + d\\<^sup>2))\n  m \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  m * (b\\<^sup>2 + c\\<^sup>2) = m * (2 * (m\\<^sup>2 + d\\<^sup>2))\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  b\\<^sup>2 + c\\<^sup>2 = 2 * (m\\<^sup>2 + d\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nHere is the equivalent formulation that is probably more suitable for further use\nin other geometry theories in Isabelle.\n\\<close>"], ["", "lemma Apollonius':\n  fixes A B C :: \"'a::euclidean_space\"\n  assumes \"B \\<noteq> C\"\n  shows \"(dist A C)\\<^sup>2 + (dist B A)\\<^sup>2 = 2 * ((dist B (midpoint B C))\\<^sup>2 + (dist A (midpoint B C))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 + (dist B A)\\<^sup>2 =\n    2 * ((dist B (midpoint B C))\\<^sup>2 + (dist A (midpoint B C))\\<^sup>2)", "using assms"], ["proof (prove)\nusing this:\n  B \\<noteq> C\n\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 + (dist B A)\\<^sup>2 =\n    2 * ((dist B (midpoint B C))\\<^sup>2 + (dist A (midpoint B C))\\<^sup>2)", "by (rule Apollonius) auto"], ["", "end"]]}