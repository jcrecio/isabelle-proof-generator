{"file_name": "/home/qj213/afp-2021-10-22/thys/TESL_Language/SymbolicPrimitive.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/TESL_Language", "problem_names": ["lemma symbolic_run_interp_cons_morph:\n  \\<open>\\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma context_consistency_preservationI:\n  \\<open>consistent_context ((\\<gamma>::('\\<tau>::linordered_field) constr)#\\<Gamma>) \\<Longrightarrow> consistent_context \\<Gamma>\\<close>", "theorem symrun_interp_fixpoint:\n  \\<open>\\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>) = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "theorem symrun_interp_expansion:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_assoc:\n  \\<open>\\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @ \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_commute:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_left_commute:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @ (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_left_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_right_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemmas symrun_interp_aci =  symrun_interp_commute\n                            symrun_interp_assoc\n                            symrun_interp_left_commute\n                            symrun_interp_left_idem\n\n\\<comment> \\<open>Identity element\\<close>", "lemma symrun_interp_neutral1:\n  \\<open>\\<lbrakk>\\<lbrakk> [] @ \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_neutral2:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma TESL_sem_decreases_head:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma TESL_sem_decreases_tail:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_formula_stuttering:\n  assumes \\<open>\\<gamma> \\<in> set \\<Gamma>\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_remdups_absorb:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> remdups \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_set_lifting:\n  assumes \\<open>set \\<Gamma> = set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "theorem symrun_interp_decreases_setinc:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_decreases_add_head:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_decreases_add_tail:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma>' @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_absorb1:\n  assumes \\<open>set \\<Gamma>\\<^sub>1 \\<subseteq> set \\<Gamma>\\<^sub>2\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>", "lemma symrun_interp_absorb2:\n  assumes \\<open>set \\<Gamma>\\<^sub>2 \\<subseteq> set \\<Gamma>\\<^sub>1\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], "translations": [["", "lemma symbolic_run_interp_cons_morph:\n  \\<open>\\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "definition consistent_context :: \\<open>('\\<tau>::linordered_field) constr list \\<Rightarrow> bool\\<close>\nwhere \n  \\<open>consistent_context \\<Gamma> \\<equiv> ( \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<noteq> {}) \\<close>"], ["", "subsection \\<open>Defining a method for witness construction\\<close>"], ["", "text\\<open>\n  In order to build a run, we can start from an initial run in which no clock \n  ticks and the time is always 0 on any clock.\n\\<close>"], ["", "abbreviation initial_run :: \\<open>('\\<tau>::linordered_field) run\\<close> (\\<open>\\<rho>\\<^sub>\\<odot>\\<close>) where\n  \\<open>\\<rho>\\<^sub>\\<odot> \\<equiv> Abs_run ((\\<lambda>_ _. (False, \\<tau>\\<^sub>c\\<^sub>s\\<^sub>t 0)) ::nat \\<Rightarrow> clock \\<Rightarrow> (bool \\<times> '\\<tau> tag_const))\\<close>"], ["", "text\\<open>\n  To help avoiding that time flows backward, setting the time on a clock at a given \n  instant sets it for the future instants too.\n\\<close>"], ["", "fun time_update\n  :: \\<open>nat \\<Rightarrow> clock \\<Rightarrow> ('\\<tau>::linordered_field) tag_const \\<Rightarrow> (nat \\<Rightarrow> '\\<tau> instant)\n      \\<Rightarrow> (nat \\<Rightarrow> '\\<tau> instant)\\<close>\nwhere\n  \\<open>time_update n K \\<tau> \\<rho> = (\\<lambda>n' K'. if K = K' \\<and> n \\<le> n'\n                                  then (hamlet (\\<rho> n K), \\<tau>)\n                                  else \\<rho> n' K')\\<close>"], ["", "section \\<open>Rules and properties of consistence\\<close>"], ["", "lemma context_consistency_preservationI:\n  \\<open>consistent_context ((\\<gamma>::('\\<tau>::linordered_field) constr)#\\<Gamma>) \\<Longrightarrow> consistent_context \\<Gamma>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent_context (\\<gamma> # \\<Gamma>) \\<Longrightarrow>\n    consistent_context \\<Gamma>", "unfolding consistent_context_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<noteq>\n    {}", "by auto\n\n\\<comment> \\<open>This is very restrictive\\<close>"], ["", "inductive context_independency\n  ::\\<open>('\\<tau>::linordered_field) constr \\<Rightarrow> '\\<tau> constr list \\<Rightarrow> bool\\<close> (\\<open>_ \\<bowtie> _\\<close>)\nwhere\n  NotTicks_independency:\n  \\<open>(K \\<Up> n) \\<notin> set \\<Gamma> \\<Longrightarrow> (K \\<not>\\<Up> n) \\<bowtie> \\<Gamma>\\<close>\n| Ticks_independency:\n  \\<open>(K \\<not>\\<Up> n) \\<notin> set \\<Gamma> \\<Longrightarrow> (K \\<Up> n) \\<bowtie> \\<Gamma>\\<close>\n| Timestamp_independency:\n  \\<open>(\\<nexists>\\<tau>'. \\<tau>' = \\<tau> \\<and> (K \\<Down> n @ \\<tau>) \\<in> set \\<Gamma>) \\<Longrightarrow> (K \\<Down> n @ \\<tau>) \\<bowtie> \\<Gamma>\\<close>"], ["", "section\\<open>Major Theorems\\<close>"], ["", "subsection \\<open>Interpretation of a context\\<close>"], ["", "text\\<open>\n  The interpretation of a context is the intersection of the interpretation \n  of its components.\n\\<close>"], ["", "theorem symrun_interp_fixpoint:\n  \\<open>\\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>) = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (induction \\<Gamma>, simp+)"], ["", "subsection \\<open>Expansion law\\<close>"], ["", "text \\<open>Similar to the expansion laws of lattices\\<close>"], ["", "theorem symrun_interp_expansion:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (induction \\<Gamma>\\<^sub>1, simp, auto)"], ["", "section \\<open>Equations for the interpretation of symbolic primitives\\<close>"], ["", "subsection \\<open>General laws\\<close>"], ["", "lemma symrun_interp_assoc:\n  \\<open>\\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @ \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @\n                       \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 @\n                       \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "lemma symrun_interp_commute:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @\n                       \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_expansion inf_sup_aci(1))"], ["", "lemma symrun_interp_left_commute:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>2 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @ (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>3) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 @\n                       \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 @\n                       \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "unfolding symrun_interp_expansion"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    (\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n     \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    (\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n     \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>3 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m)", "by auto"], ["", "lemma symrun_interp_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_expansion"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 @\n                     ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "lemma symrun_interp_left_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_expansion"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 @\n                     ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "lemma symrun_interp_right_idem:\n  \\<open>\\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> (\\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2) @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "unfolding symrun_interp_expansion"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "lemmas symrun_interp_aci =  symrun_interp_commute\n                            symrun_interp_assoc\n                            symrun_interp_left_commute\n                            symrun_interp_left_idem\n\n\\<comment> \\<open>Identity element\\<close>"], ["", "lemma symrun_interp_neutral1:\n  \\<open>\\<lbrakk>\\<lbrakk> [] @ \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> [] @\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["", "lemma symrun_interp_neutral2:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["", "subsection \\<open>Decreasing interpretation of symbolic primitives\\<close>"], ["", "text\\<open>\n  Adding constraints to a context reduces the number of satisfying runs.\n\\<close>"], ["", "lemma TESL_sem_decreases_head:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["", "lemma TESL_sem_decreases_tail:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_expansion)"], ["", "text\\<open>\n  Adding a constraint that is already in the context does not change the\n  interpretation of the context.\n\\<close>"], ["", "lemma symrun_interp_formula_stuttering:\n  assumes \\<open>\\<gamma> \\<in> set \\<Gamma>\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<gamma> # \\<Gamma> = [\\<gamma>] @ \\<Gamma>\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> # \\<Gamma> = [\\<gamma>] @ \\<Gamma>", "by simp"], ["proof (state)\nthis:\n  \\<gamma> # \\<Gamma> = [\\<gamma>] @ \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "hence \\<open>\\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\nusing this:\n  \\<gamma> # \\<Gamma> = [\\<gamma>] @ \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_expansion"], ["proof (prove)\nusing this:\n  \\<gamma> # \\<Gamma> = [\\<gamma>] @ \\<Gamma>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 @\n                     ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<gamma> #\n                     \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<gamma> #\n                     \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using assms symrun_interp_fixpoint"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<gamma> #\n                     \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<gamma> \\<in> set \\<Gamma>\n  \\<Inter> (symbolic_run_interpretation_primitive ` set ?\\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by fastforce"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<gamma> #\n                     \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  Removing duplicate constraints from a context does not change the\n  interpretation of the context.\n\\<close>"], ["", "lemma symrun_interp_remdups_absorb:\n  \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> remdups \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "proof (induction \\<Gamma>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n 2. \\<And>a \\<Gamma>.\n       \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n       \\<lbrakk>\\<lbrakk> remdups\n                           \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<Longrightarrow>\n       \\<lbrakk>\\<lbrakk> a #\n                          \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n       \\<lbrakk>\\<lbrakk> remdups\n                           (a #\n                            \\<Gamma>) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "case Cons"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> remdups\n                      \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n 2. \\<And>a \\<Gamma>.\n       \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n       \\<lbrakk>\\<lbrakk> remdups\n                           \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<Longrightarrow>\n       \\<lbrakk>\\<lbrakk> a #\n                          \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n       \\<lbrakk>\\<lbrakk> remdups\n                           (a #\n                            \\<Gamma>) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> remdups\n                      \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> a_ #\n                       \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        (a_ #\n                         \\<Gamma>_) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_formula_stuttering"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> remdups\n                      \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  ?\\<gamma> \\<in> set ?\\<Gamma> \\<Longrightarrow>\n  \\<lbrakk>\\<lbrakk> ?\\<gamma> #\n                     ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> a_ #\n                       \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        (a_ #\n                         \\<Gamma>_) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> a_ #\n                     \\<Gamma>_ \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> remdups\n                      (a_ #\n                       \\<Gamma>_) \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> remdups\n                        [] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "qed simp"], ["", "text\\<open>\n  Two identical sets of constraints have the same interpretation,\n  the order in the context does not matter.\n\\<close>"], ["", "lemma symrun_interp_set_lifting:\n  assumes \\<open>set \\<Gamma> = set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (remdups \\<Gamma>) = set (remdups \\<Gamma>')", "by (simp add: assms)"], ["proof (state)\nthis:\n  set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have fxpnt\\<Gamma>: \\<open>\\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>) = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_fixpoint)"], ["proof (state)\nthis:\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have fxpnt\\<Gamma>': \\<open>\\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>') = \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_fixpoint)"], ["proof (state)\nthis:\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>) = \\<Inter> ((\\<lambda>\\<gamma>. \\<lbrakk> \\<gamma> \\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m) ` set \\<Gamma>')\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n    \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>')", "by (simp add: assms)"], ["proof (state)\nthis:\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "ultimately"], ["proof (chain)\npicking this:\n  set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>')", "show ?thesis"], ["proof (prove)\nusing this:\n  set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_remdups_absorb"], ["proof (prove)\nusing this:\n  set (remdups \\<Gamma>) = set (remdups \\<Gamma>')\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>') =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>) =\n  \\<Inter> (symbolic_run_interpretation_primitive ` set \\<Gamma>')\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> remdups\n                      ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>\n  The interpretation of contexts is contravariant with regard to set inclusion.\n\\<close>"], ["", "theorem symrun_interp_decreases_setinc:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "obtain \\<Gamma>\\<^sub>r where decompose: \\<open>set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>r.\n        set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  set \\<Gamma> \\<subseteq> set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. (\\<And>\\<Gamma>\\<^sub>r.\n        set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "hence \\<open>set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\\<close>"], ["proof (prove)\nusing this:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'", "using assms"], ["proof (prove)\nusing this:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n  set \\<Gamma> \\<subseteq> set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'", "by blast"], ["proof (state)\nthis:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>(set \\<Gamma>) \\<union> (set \\<Gamma>\\<^sub>r) = set \\<Gamma>'\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'", "using assms decompose"], ["proof (prove)\nusing this:\n  set \\<Gamma> \\<subseteq> set \\<Gamma>'\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'", "by auto"], ["proof (state)\nthis:\n  set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> @ \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_set_lifting decompose"], ["proof (prove)\nusing this:\n  set ?\\<Gamma> = set ?\\<Gamma>' \\<Longrightarrow>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                       \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_expansion)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter> \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "ultimately"], ["proof (chain)\npicking this:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n  set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "show ?thesis"], ["proof (prove)\nusing this:\n  set (\\<Gamma> @ \\<Gamma>\\<^sub>r) = set \\<Gamma>'\n  set \\<Gamma> \\<union> set \\<Gamma>\\<^sub>r = set \\<Gamma>'\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                     \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<inter>\n  \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>r \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma symrun_interp_decreases_add_head:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<gamma> # \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<gamma> #\n                                   \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_decreases_setinc assms"], ["proof (prove)\nusing this:\n  set ?\\<Gamma> \\<subseteq> set ?\\<Gamma>' \\<Longrightarrow>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> ?\\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  set \\<Gamma> \\<subseteq> set \\<Gamma>'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<gamma> #\n                       \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<gamma> #\n                                   \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by auto"], ["", "lemma symrun_interp_decreases_add_tail:\n  assumes \\<open>set \\<Gamma> \\<subseteq> set \\<Gamma>'\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma> @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<supseteq> \\<lbrakk>\\<lbrakk> \\<Gamma>' @ [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' @\n                       [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                                   [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' @\n                       [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                                   [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "from symrun_interp_decreases_setinc[OF assms]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "have \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "."], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' @\n                       [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                                   [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>' @\n                       [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n    \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                                   [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: symrun_interp_expansion dual_order.trans)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk> \\<Gamma>' @\n                     [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<subseteq> \\<lbrakk>\\<lbrakk> \\<Gamma> @\n                                 [\\<gamma>] \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma symrun_interp_absorb1:\n  assumes \\<open>set \\<Gamma>\\<^sub>1 \\<subseteq> set \\<Gamma>\\<^sub>2\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by (simp add: Int_absorb1 symrun_interp_decreases_setinc\n                          symrun_interp_expansion assms)"], ["", "lemma symrun_interp_absorb2:\n  assumes \\<open>set \\<Gamma>\\<^sub>2 \\<subseteq> set \\<Gamma>\\<^sub>1\\<close>\n    shows \\<open>\\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @ \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m = \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "using symrun_interp_absorb1 symrun_interp_commute assms"], ["proof (prove)\nusing this:\n  set ?\\<Gamma>\\<^sub>1 \\<subseteq> set ?\\<Gamma>\\<^sub>2 \\<Longrightarrow>\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 @\n                     ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>1 @\n                     ?\\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n  \\<lbrakk>\\<lbrakk> ?\\<Gamma>\\<^sub>2 @\n                     ?\\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m\n  set \\<Gamma>\\<^sub>2 \\<subseteq> set \\<Gamma>\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 @\n                       \\<Gamma>\\<^sub>2 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m =\n    \\<lbrakk>\\<lbrakk> \\<Gamma>\\<^sub>1 \\<rbrakk>\\<rbrakk>\\<^sub>p\\<^sub>r\\<^sub>i\\<^sub>m", "by blast"], ["", "end"]]}