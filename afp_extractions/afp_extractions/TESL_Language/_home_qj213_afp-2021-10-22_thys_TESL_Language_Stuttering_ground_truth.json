{"file_name": "/home/qj213/afp-2021-10-22/thys/TESL_Language/Stuttering.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/TESL_Language", "problem_names": ["lemma sporadic_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c sporadic \\<tau> on c'\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c sporadic \\<tau> on c'\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem implies_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 implies c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 implies c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem implies_not_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 implies not c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 implies not c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem weakly_precedes_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 weakly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 weakly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem strictly_precedes_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 strictly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 strictly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem time_delayed_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "lemma tagrel_sub':\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1,c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>R (time ((Rep_run r) n c\\<^sub>1), time ((Rep_run r) n c\\<^sub>2))\\<close>", "lemma tagrel_sub_inv:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>sub \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem kill_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> c\\<^sub>1 kills c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> c\\<^sub>1 kills c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "lemmas atomic_sub_lemmas = sporadic_sub tagrel_sub implies_sub implies_not_sub\n                           time_delayed_sub weakly_precedes_sub\n                           strictly_precedes_sub kill_sub", "lemma atomic_sub: \n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>", "theorem TESL_stuttering_invariant:\n  assumes \\<open>sub \\<lless> r\\<close>\n    shows \\<open>sub \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], "translations": [["", "lemma sporadic_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c sporadic \\<tau> on c'\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c sporadic \\<tau> on c'\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f\n    where \\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n c. time ((Rep_run sub) n c) = time ((Rep_run r) (f n) c)\n           \\<and> hamlet ((Rep_run sub) n c) = hamlet ((Rep_run r) (f n) c)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<forall>n c.\n       time (Rep_run sub n c) = time (Rep_run r (f n) c) \\<and>\n       hamlet (Rep_run sub n c) = hamlet (Rep_run r (f n) c)", "by (simp add: dilating_def)"], ["proof (state)\nthis:\n  \\<forall>n c.\n     time (Rep_run sub n c) = time (Rep_run r (f n) c) \\<and>\n     hamlet (Rep_run sub n c) = hamlet (Rep_run r (f n) c)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  \\<forall>n c.\n     time (Rep_run sub n c) = time (Rep_run r (f n) c) \\<and>\n     hamlet (Rep_run sub n c) = hamlet (Rep_run r (f n) c)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have\n    \\<open>sub \\<in> {r. \\<exists> n. hamlet ((Rep_run r) n c) \\<and> time ((Rep_run r) n c') = \\<tau>}\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {r. \\<exists>n.\n                 hamlet (Rep_run r n c) \\<and>\n                 time (Rep_run r n c') = \\<tau>}", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> {r. \\<exists>n.\n               hamlet (Rep_run r n c) \\<and> time (Rep_run r n c') = \\<tau>}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from this"], ["proof (chain)\npicking this:\n  sub\n  \\<in> {r. \\<exists>n.\n               hamlet (Rep_run r n c) \\<and> time (Rep_run r n c') = \\<tau>}", "obtain k where \\<open>time ((Rep_run sub) k c') = \\<tau> \\<and> hamlet ((Rep_run sub) k c)\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {r. \\<exists>n.\n               hamlet (Rep_run r n c) \\<and> time (Rep_run r n c') = \\<tau>}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        time (Rep_run sub k c') = \\<tau> \\<and>\n        hamlet (Rep_run sub k c) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  time (Rep_run sub k c') = \\<tau> \\<and> hamlet (Rep_run sub k c)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n c.\n     time (Rep_run sub n c) = time (Rep_run r (f n) c) \\<and>\n     hamlet (Rep_run sub n c) = hamlet (Rep_run r (f n) c)\n  time (Rep_run sub k c') = \\<tau> \\<and> hamlet (Rep_run sub k c)", "have \\<open>time ((Rep_run r) (f k) c') = \\<tau> \\<and> hamlet ((Rep_run r) (f k) c)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n c.\n     time (Rep_run sub n c) = time (Rep_run r (f n) c) \\<and>\n     hamlet (Rep_run sub n c) = hamlet (Rep_run r (f n) c)\n  time (Rep_run sub k c') = \\<tau> \\<and> hamlet (Rep_run sub k c)\n\ngoal (1 subgoal):\n 1. time (Rep_run r (f k) c') = \\<tau> \\<and> hamlet (Rep_run r (f k) c)", "by simp"], ["proof (state)\nthis:\n  time (Rep_run r (f k) c') = \\<tau> \\<and> hamlet (Rep_run r (f k) c)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  time (Rep_run r (f k) c') = \\<tau> \\<and> hamlet (Rep_run r (f k) c)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by auto"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c sporadic \\<tau> on c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Implications are preserved in a dilated run.\\<close>"], ["", "theorem implies_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 implies c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 implies c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where \\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 implies\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have\n    \\<open>sub \\<in> {r. \\<forall>n. hamlet ((Rep_run r) n c\\<^sub>1) \\<longrightarrow> hamlet ((Rep_run r) n c\\<^sub>2)}\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 implies\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {r. \\<forall>n.\n                 hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n                 hamlet (Rep_run r n c\\<^sub>2)}", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> {r. \\<forall>n.\n               hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n               hamlet (Rep_run r n c\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. hamlet ((Rep_run sub) n c\\<^sub>1) \\<longrightarrow> hamlet ((Rep_run sub) n c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {r. \\<forall>n.\n               hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n               hamlet (Rep_run r n c\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n       hamlet (Rep_run sub n c\\<^sub>2)", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run sub n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run sub n c\\<^sub>2)", "have \\<open>\\<forall>n. hamlet ((Rep_run r) n c\\<^sub>1) \\<longrightarrow> hamlet ((Rep_run r) n c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run sub n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       hamlet (Rep_run r n c\\<^sub>2)", "using ticks_imp_ticks_subk ticks_sub"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run sub n c\\<^sub>2)\n  \\<lbrakk>dilating ?f ?sub ?r; hamlet (Rep_run ?r ?k ?c)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<^sub>0.\n                       ?f k\\<^sub>0 = ?k \\<and>\n                       hamlet (Rep_run ?sub k\\<^sub>0 ?c)\n  dilating ?f ?sub ?r \\<Longrightarrow>\n  hamlet (Rep_run ?sub ?n ?a) = hamlet (Rep_run ?r (?f ?n) ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       hamlet (Rep_run r n c\\<^sub>2)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run r n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     hamlet (Rep_run r n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c\\<^sub>1 implies\n                    c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem implies_not_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 implies not c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 implies not c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where \\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have\n    \\<open>sub \\<in> {r. \\<forall>n. hamlet ((Rep_run r) n c\\<^sub>1) \\<longrightarrow> \\<not> hamlet ((Rep_run r) n c\\<^sub>2)}\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {r. \\<forall>n.\n                 hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n                 \\<not> hamlet (Rep_run r n c\\<^sub>2)}", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> {r. \\<forall>n.\n               hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n               \\<not> hamlet (Rep_run r n c\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. hamlet ((Rep_run sub) n c\\<^sub>1) \\<longrightarrow> \\<not> hamlet ((Rep_run sub) n c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {r. \\<forall>n.\n               hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n               \\<not> hamlet (Rep_run r n c\\<^sub>2)}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n       \\<not> hamlet (Rep_run sub n c\\<^sub>2)", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run sub n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run sub n c\\<^sub>2)", "have \\<open>\\<forall>n. hamlet ((Rep_run r) n c\\<^sub>1) \\<longrightarrow> \\<not> hamlet ((Rep_run r) n c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run sub n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       \\<not> hamlet (Rep_run r n c\\<^sub>2)", "using ticks_imp_ticks_subk ticks_sub"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run sub n c\\<^sub>2)\n  \\<lbrakk>dilating ?f ?sub ?r; hamlet (Rep_run ?r ?k ?c)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>k\\<^sub>0.\n                       ?f k\\<^sub>0 = ?k \\<and>\n                       hamlet (Rep_run ?sub k\\<^sub>0 ?c)\n  dilating ?f ?sub ?r \\<Longrightarrow>\n  hamlet (Rep_run ?sub ?n ?a) = hamlet (Rep_run ?r (?f ?n) ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       \\<not> hamlet (Rep_run r n c\\<^sub>2)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run r n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     \\<not> hamlet (Rep_run r n c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c\\<^sub>1 implies not\n                    c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Precedence relations are preserved in a dilated run.\\<close>"], ["", "theorem weakly_precedes_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 weakly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 weakly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where *:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have\n    \\<open>sub \\<in> {r. \\<forall>n. (run_tick_count r c\\<^sub>2 n) \\<le> (run_tick_count r c\\<^sub>1 n)}\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {r. \\<forall>n.\n                 #\\<^sub>\\<le> r c\\<^sub>2 n\n                 \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n}", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> {r. \\<forall>n.\n               #\\<^sub>\\<le> r c\\<^sub>2 n\n               \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. (run_tick_count sub c\\<^sub>2 n) \\<le> (run_tick_count sub c\\<^sub>1 n)\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {r. \\<forall>n.\n               #\\<^sub>\\<le> r c\\<^sub>2 n\n               \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       #\\<^sub>\\<le> sub c\\<^sub>2 n \\<le> #\\<^sub>\\<le> sub c\\<^sub>1 n", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     #\\<^sub>\\<le> sub c\\<^sub>2 n \\<le> #\\<^sub>\\<le> sub c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from dil_tick_count[OF assms(1) this]"], ["proof (chain)\npicking this:\n  #\\<^sub>\\<le> r c\\<^sub>2 ?n \\<le> #\\<^sub>\\<le> r c\\<^sub>1 ?n", "have \\<open>\\<forall>n. (run_tick_count r c\\<^sub>2 n) \\<le> (run_tick_count r c\\<^sub>1 n)\\<close>"], ["proof (prove)\nusing this:\n  #\\<^sub>\\<le> r c\\<^sub>2 ?n \\<le> #\\<^sub>\\<le> r c\\<^sub>1 ?n\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       #\\<^sub>\\<le> r c\\<^sub>2 n \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. #\\<^sub>\\<le> r c\\<^sub>2 n \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. #\\<^sub>\\<le> r c\\<^sub>2 n \\<le> #\\<^sub>\\<le> r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c\\<^sub>1 weakly precedes\n                    c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem strictly_precedes_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk>c\\<^sub>1 strictly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk>c\\<^sub>1 strictly precedes c\\<^sub>2\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where *:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have\n    \\<open>sub \\<in> { \\<rho>. \\<forall>n::nat. (run_tick_count \\<rho> c\\<^sub>2 n) \\<le> (run_tick_count_strictly \\<rho> c\\<^sub>1 n) }\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {\\<rho>.\n           \\<forall>n.\n              #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n\n              \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n}", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> {\\<rho>.\n         \\<forall>n.\n            #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n\n            \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "with strictly_precedes_alt_def2[of \\<open>c\\<^sub>2\\<close> \\<open>c\\<^sub>1\\<close>]"], ["proof (chain)\npicking this:\n  {\\<rho>.\n   \\<forall>n.\n      #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n} =\n  {\\<rho>.\n   \\<not> hamlet (Rep_run \\<rho> 0 c\\<^sub>2) \\<and>\n   (\\<forall>n.\n       #\\<^sub>\\<le> \\<rho> c\\<^sub>2 Suc n\n       \\<le> #\\<^sub>\\<le> \\<rho> c\\<^sub>1 n)}\n  sub\n  \\<in> {\\<rho>.\n         \\<forall>n.\n            #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n\n            \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n}", "have\n    \\<open>sub \\<in> { \\<rho>. (\\<not>hamlet ((Rep_run \\<rho>) 0 c\\<^sub>2))\n  \\<and> (\\<forall>n::nat. (run_tick_count \\<rho> c\\<^sub>2 (Suc n)) \\<le> (run_tick_count \\<rho> c\\<^sub>1 n)) }\\<close>"], ["proof (prove)\nusing this:\n  {\\<rho>.\n   \\<forall>n.\n      #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n} =\n  {\\<rho>.\n   \\<not> hamlet (Rep_run \\<rho> 0 c\\<^sub>2) \\<and>\n   (\\<forall>n.\n       #\\<^sub>\\<le> \\<rho> c\\<^sub>2 Suc n\n       \\<le> #\\<^sub>\\<le> \\<rho> c\\<^sub>1 n)}\n  sub\n  \\<in> {\\<rho>.\n         \\<forall>n.\n            #\\<^sub>\\<le> \\<rho> c\\<^sub>2 n\n            \\<le> #\\<^sub>< \\<rho> c\\<^sub>1 n}\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {\\<rho>.\n           \\<not> hamlet (Rep_run \\<rho> 0 c\\<^sub>2) \\<and>\n           (\\<forall>n.\n               #\\<^sub>\\<le> \\<rho> c\\<^sub>2 Suc n\n               \\<le> #\\<^sub>\\<le> \\<rho> c\\<^sub>1 n)}", "by blast"], ["proof (state)\nthis:\n  sub\n  \\<in> {\\<rho>.\n         \\<not> hamlet (Rep_run \\<rho> 0 c\\<^sub>2) \\<and>\n         (\\<forall>n.\n             #\\<^sub>\\<le> \\<rho> c\\<^sub>2 Suc n\n             \\<le> #\\<^sub>\\<le> \\<rho> c\\<^sub>1 n)}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>(\\<not>hamlet ((Rep_run sub) 0 c\\<^sub>2))\n       \\<and> (\\<forall>n::nat. (run_tick_count sub c\\<^sub>2 (Suc n)) \\<le> (run_tick_count sub c\\<^sub>1 n))\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {\\<rho>.\n         \\<not> hamlet (Rep_run \\<rho> 0 c\\<^sub>2) \\<and>\n         (\\<forall>n.\n             #\\<^sub>\\<le> \\<rho> c\\<^sub>2 Suc n\n             \\<le> #\\<^sub>\\<le> \\<rho> c\\<^sub>1 n)}\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n    (\\<forall>n.\n        #\\<^sub>\\<le> sub c\\<^sub>2 Suc n\n        \\<le> #\\<^sub>\\<le> sub c\\<^sub>1 n)", "by simp"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      #\\<^sub>\\<le> sub c\\<^sub>2 Suc n \\<le> #\\<^sub>\\<le> sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence\n    1:\\<open>(\\<not>hamlet ((Rep_run sub) 0 c\\<^sub>2))\n     \\<and> (\\<forall>n::nat. (tick_count sub c\\<^sub>2 (Suc n)) \\<le> (tick_count sub c\\<^sub>1 n))\\<close>"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      #\\<^sub>\\<le> sub c\\<^sub>2 Suc n \\<le> #\\<^sub>\\<le> sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n    (\\<forall>n.\n        tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)", "by (simp add: tick_count_is_fun)"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have \\<open>\\<forall>n::nat. (tick_count r c\\<^sub>2 (Suc n)) \\<le> (tick_count r c\\<^sub>1 n)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "fix n::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have \\<open>tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "proof (cases \\<open>\\<exists>n\\<^sub>0. f n\\<^sub>0 = n\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case True \\<comment> \\<open>n is in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = n\n\ngoal (2 subgoals):\n 1. \\<exists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from this"], ["proof (chain)\npicking this:\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = n", "obtain n\\<^sub>0 where fn:\\<open>f n\\<^sub>0 = n\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = n\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        f n\\<^sub>0 = n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f n\\<^sub>0 = n\n\ngoal (2 subgoals):\n 1. \\<exists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "proof (cases \\<open>\\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case True \\<comment> \\<open>Suc n is in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from this"], ["proof (chain)\npicking this:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n", "obtain sn\\<^sub>0 where fsn:\\<open>f sn\\<^sub>0 = Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. (\\<And>sn\\<^sub>0.\n        f sn\\<^sub>0 = Suc n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f sn\\<^sub>0 = Suc n\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "with fn strict_mono_suc *"], ["proof (chain)\npicking this:\n  f n\\<^sub>0 = n\n  \\<lbrakk>strict_mono ?f; ?f ?sn = Suc (?f ?n)\\<rbrakk>\n  \\<Longrightarrow> ?sn = Suc ?n\n  dilating f sub r\n  f sn\\<^sub>0 = Suc n", "have \\<open>sn\\<^sub>0 = Suc n\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  f n\\<^sub>0 = n\n  \\<lbrakk>strict_mono ?f; ?f ?sn = Suc (?f ?n)\\<rbrakk>\n  \\<Longrightarrow> ?sn = Suc ?n\n  dilating f sub r\n  f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. sn\\<^sub>0 = Suc n\\<^sub>0", "using  dilating_def dilating_fun_def"], ["proof (prove)\nusing this:\n  f n\\<^sub>0 = n\n  \\<lbrakk>strict_mono ?f; ?f ?sn = Suc (?f ?n)\\<rbrakk>\n  \\<Longrightarrow> ?sn = Suc ?n\n  dilating f sub r\n  f sn\\<^sub>0 = Suc n\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating_fun ?f ?r \\<equiv>\n  strict_mono ?f \\<and>\n  ?f 0 = 0 \\<and>\n  (\\<forall>n.\n      n \\<le> ?f n \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = n) \\<longrightarrow>\n       (\\<forall>c. \\<not> hamlet (Rep_run ?r n c))) \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = Suc n) \\<longrightarrow>\n       (\\<forall>c. time (Rep_run ?r (Suc n) c) = time (Rep_run ?r n c))))\n\ngoal (1 subgoal):\n 1. sn\\<^sub>0 = Suc n\\<^sub>0", "by blast"], ["proof (state)\nthis:\n  sn\\<^sub>0 = Suc n\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "with 1"], ["proof (chain)\npicking this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n  sn\\<^sub>0 = Suc n\\<^sub>0", "have \\<open>tick_count sub c\\<^sub>2 sn\\<^sub>0 \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n  sn\\<^sub>0 = Suc n\\<^sub>0\n\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 sn\\<^sub>0\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "thus ?thesis"], ["proof (prove)\nusing this:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "using fn fsn tick_count_sub[OF *]"], ["proof (prove)\nusing this:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n  f n\\<^sub>0 = n\n  f sn\\<^sub>0 = Suc n\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case False \\<comment> \\<open>Suc n is not in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "hence \\<open>\\<not>hamlet ((Rep_run r) (Suc n) c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)", "using *"], ["proof (prove)\nusing this:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "hence \\<open>tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n", "by (simp add: tick_count_suc)"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "also"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have \\<open>... = tick_count sub c\\<^sub>2 n\\<^sub>0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>0", "using fn tick_count_sub[OF *]"], ["proof (prove)\nusing this:\n  f n\\<^sub>0 = n\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "finally"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0", "have \\<open>tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0", "."], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "moreover"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have \\<open>tick_count sub c\\<^sub>2 n\\<^sub>0 \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 n\\<^sub>0\n    \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)", "by (simp add: tick_count_suc)"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 n\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "ultimately"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\n  tick_count sub c\\<^sub>2 n\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)", "have\n                \\<open>tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>0\n  tick_count sub c\\<^sub>2 n\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n)\n    \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "moreover"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have\n                \\<open>tick_count sub c\\<^sub>2 (Suc n\\<^sub>0) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0", "using 1"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "ultimately"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0", "have \\<open>tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>0)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "thus ?thesis"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "using tick_count_sub[OF *] fn"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>0\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n  f n\\<^sub>0 = n\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case False \\<comment> \\<open>n is not in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from greatest_prev_image[OF * this]"], ["proof (chain)\npicking this:\n  \\<exists>n\\<^sub>p.\n     f n\\<^sub>p < n \\<and>\n     (\\<forall>k.\n         f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n         (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))", "obtain n\\<^sub>p  where\n            np_prop:\\<open>f n\\<^sub>p < n \\<and> (\\<forall>k. f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow> (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>n\\<^sub>p.\n     f n\\<^sub>p < n \\<and>\n     (\\<forall>k.\n         f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n         (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>p.\n        f n\\<^sub>p < n \\<and>\n        (\\<forall>k.\n            f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n            (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f n\\<^sub>p < n \\<and>\n  (\\<forall>k.\n      f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n      (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from tick_count_latest[OF * this]"], ["proof (chain)\npicking this:\n  tick_count r ?c n = tick_count r ?c (f n\\<^sub>p)", "have\n            \\<open>tick_count r c\\<^sub>1 n = tick_count r c\\<^sub>1 (f n\\<^sub>p)\\<close>"], ["proof (prove)\nusing this:\n  tick_count r ?c n = tick_count r ?c (f n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>1 n = tick_count r c\\<^sub>1 (f n\\<^sub>p)", "."], ["proof (state)\nthis:\n  tick_count r c\\<^sub>1 n = tick_count r c\\<^sub>1 (f n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "hence a:\\<open>tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>1 n = tick_count r c\\<^sub>1 (f n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p", "using tick_count_sub[OF *]"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>1 n = tick_count r c\\<^sub>1 (f n\\<^sub>p)\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have b: \\<open>tick_count sub c\\<^sub>2 (Suc n\\<^sub>p) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "using 1"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>n\\<^sub>0. f n\\<^sub>0 = n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "proof (cases \\<open>\\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case True \\<comment> \\<open>Suc n is in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from this"], ["proof (chain)\npicking this:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n", "obtain sn\\<^sub>0 where fsn:\\<open>f sn\\<^sub>0 = Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. (\\<And>sn\\<^sub>0.\n        f sn\\<^sub>0 = Suc n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f sn\\<^sub>0 = Suc n\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "from next_non_stuttering[OF * np_prop this]"], ["proof (chain)\npicking this:\n  sn\\<^sub>0 = Suc n\\<^sub>p", "have sn_prop:\\<open>sn\\<^sub>0 = Suc n\\<^sub>p\\<close>"], ["proof (prove)\nusing this:\n  sn\\<^sub>0 = Suc n\\<^sub>p\n\ngoal (1 subgoal):\n 1. sn\\<^sub>0 = Suc n\\<^sub>p", "."], ["proof (state)\nthis:\n  sn\\<^sub>0 = Suc n\\<^sub>p\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "with b"], ["proof (chain)\npicking this:\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n  sn\\<^sub>0 = Suc n\\<^sub>p", "have \\<open>tick_count sub c\\<^sub>2 sn\\<^sub>0 \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\\<close>"], ["proof (prove)\nusing this:\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n  sn\\<^sub>0 = Suc n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 sn\\<^sub>0\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (2 subgoals):\n 1. \\<exists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n 2. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "thus ?thesis"], ["proof (prove)\nusing this:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "using tick_count_sub[OF *] fsn a"], ["proof (prove)\nusing this:\n  tick_count sub c\\<^sub>2 sn\\<^sub>0\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n  f sn\\<^sub>0 = Suc n\n  tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "by auto"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "case False \\<comment> \\<open>Suc n is not in the image of f\\<close>"], ["proof (state)\nthis:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "hence \\<open>\\<not>hamlet ((Rep_run r) (Suc n) c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)", "using *"], ["proof (prove)\nusing this:\n  \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "hence \\<open>tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n", "by (simp add: tick_count_suc)"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "also"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count r c\\<^sub>2 n\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have \\<open>... = tick_count sub c\\<^sub>2 n\\<^sub>p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>p", "using np_prop tick_count_sub[OF *]"], ["proof (prove)\nusing this:\n  f n\\<^sub>p < n \\<and>\n  (\\<forall>k.\n      f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n      (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\n  tick_count sub ?c ?n = tick_count r ?c (f ?n)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>p", "by (simp add: tick_count_latest[OF * np_prop])"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 n = tick_count sub c\\<^sub>2 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "finally"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p", "have \\<open>tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p", "."], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "moreover"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have \\<open>tick_count sub c\\<^sub>2 n\\<^sub>p \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 n\\<^sub>p\n    \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)", "by (simp add: tick_count_suc)"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 n\\<^sub>p\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "ultimately"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\n  tick_count sub c\\<^sub>2 n\\<^sub>p\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)", "have\n                \\<open>tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) = tick_count sub c\\<^sub>2 n\\<^sub>p\n  tick_count sub c\\<^sub>2 n\\<^sub>p\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n)\n    \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "moreover"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "have\n                \\<open>tick_count sub c\\<^sub>2 (Suc n\\<^sub>p) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "using 1"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n    \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "ultimately"], ["proof (chain)\npicking this:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "have \\<open>tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\\<close>"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n)\n  \\<le> tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  tick_count sub c\\<^sub>2 (Suc n\\<^sub>p)\n  \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p", "by simp"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. \\<nexists>sn\\<^sub>0. f sn\\<^sub>0 = Suc n \\<Longrightarrow>\n    tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "thus ?thesis"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "using np_prop mono_tick_count"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n  f n\\<^sub>p < n \\<and>\n  (\\<forall>k.\n      f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n      (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\n  mono (tick_count ?r ?c)\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "using a"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n\\<^sub>p\n  f n\\<^sub>p < n \\<and>\n  (\\<forall>k.\n      f n\\<^sub>p < k \\<and> k \\<le> n \\<longrightarrow>\n      (\\<nexists>k\\<^sub>0. f k\\<^sub>0 = k))\n  mono (tick_count ?r ?c)\n  tick_count r c\\<^sub>1 n = tick_count sub c\\<^sub>1 n\\<^sub>p\n\ngoal (1 subgoal):\n 1. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "by linarith"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "}"], ["proof (state)\nthis:\n  tick_count r c\\<^sub>2 (Suc ?n2) \\<le> tick_count r c\\<^sub>1 ?n2\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", "thus ?thesis"], ["proof (prove)\nusing this:\n  tick_count r c\\<^sub>2 (Suc ?n2) \\<le> tick_count r c\\<^sub>1 ?n2\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n", ".."], ["proof (state)\nthis:\n  \\<forall>n. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  \\<forall>n. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from 1"], ["proof (chain)\npicking this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)", "have \\<open>\\<not>hamlet ((Rep_run r) 0 c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r 0 c\\<^sub>2)", "using * empty_dilated_prefix ticks_sub"], ["proof (prove)\nusing this:\n  \\<not> hamlet (Rep_run sub 0 c\\<^sub>2) \\<and>\n  (\\<forall>n.\n      tick_count sub c\\<^sub>2 (Suc n) \\<le> tick_count sub c\\<^sub>1 n)\n  dilating f sub r\n  \\<lbrakk>dilating ?f ?sub ?r; ?n < ?f 0\\<rbrakk>\n  \\<Longrightarrow> \\<not> hamlet (Rep_run ?r ?n ?c)\n  dilating ?f ?sub ?r \\<Longrightarrow>\n  hamlet (Rep_run ?sub ?n ?a) = hamlet (Rep_run ?r (?f ?n) ?a)\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r 0 c\\<^sub>2)", "by fastforce"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r 0 c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n  \\<not> hamlet (Rep_run r 0 c\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. tick_count r c\\<^sub>2 (Suc n) \\<le> tick_count r c\\<^sub>1 n\n  \\<not> hamlet (Rep_run r 0 c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by (simp add: tick_count_is_fun strictly_precedes_alt_def2)"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c\\<^sub>1 strictly precedes\n                    c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Time delayed relations are preserved in a dilated run.\n\\<close>"], ["", "theorem time_delayed_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where *:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have \\<open>\\<forall>n. hamlet ((Rep_run sub) n a)\n                          \\<longrightarrow> (\\<forall>m \\<ge> n. first_time sub ms m (time ((Rep_run sub) n ms) + \\<delta>\\<tau>)\n                                       \\<longrightarrow> hamlet ((Rep_run sub) m b))\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run sub n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time sub ms m\n            (time (Rep_run sub n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run sub m b))", "using TESL_interpretation_atomic.simps(5)[of \\<open>a\\<close> \\<open>\\<delta>\\<tau>\\<close> \\<open>ms\\<close> \\<open>b\\<close>]"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      hamlet (Rep_run \\<rho> n a) \\<longrightarrow>\n      (let measured_time = time (Rep_run \\<rho> n ms)\n       in \\<forall>m\\<ge>n.\n             first_time \\<rho> ms m\n              (measured_time + \\<delta>\\<tau>) \\<longrightarrow>\n             hamlet (Rep_run \\<rho> m b))}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run sub n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time sub ms m\n            (time (Rep_run sub n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run sub m b))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run sub n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time sub ms m\n          (time (Rep_run sub n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run sub m b))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence **:\\<open>\\<forall>n\\<^sub>0. hamlet ((Rep_run r) (f n\\<^sub>0) a)\n                  \\<longrightarrow> (\\<forall>m\\<^sub>0 \\<ge> n\\<^sub>0. first_time r ms (f m\\<^sub>0) (time ((Rep_run r) (f n\\<^sub>0) ms) + \\<delta>\\<tau>)\n                                  \\<longrightarrow> hamlet ((Rep_run r) (f m\\<^sub>0) b))  \\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run sub n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time sub ms m\n          (time (Rep_run sub n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run sub m b))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b))", "using first_time_image[OF *] dilating_def *"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run sub n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time sub ms m\n          (time (Rep_run sub n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run sub m b))\n  first_time sub ?c ?n ?t = first_time r ?c (f ?n) ?t\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b))", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>n\\<^sub>0.\n     hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n     (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n         first_time r ms (f m\\<^sub>0)\n          (time (Rep_run r (f n\\<^sub>0) ms) +\n           \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r (f m\\<^sub>0) b))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. hamlet ((Rep_run r) n a)\n                  \\<longrightarrow> (\\<forall>m \\<ge> n. first_time r ms m (time ((Rep_run r) n ms) + \\<delta>\\<tau>)\n                                \\<longrightarrow> hamlet ((Rep_run r) m b))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n\\<^sub>0.\n     hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n     (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n         first_time r ms (f m\\<^sub>0)\n          (time (Rep_run r (f n\\<^sub>0) ms) +\n           \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r (f m\\<^sub>0) b))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "assume assm:\\<open>hamlet ((Rep_run r) n a)\\<close>"], ["proof (state)\nthis:\n  hamlet (Rep_run r n a)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "from ticks_image_sub[OF * assm]"], ["proof (chain)\npicking this:\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = n", "obtain n\\<^sub>0 where nfn0:\\<open>n = f n\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = n\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        n = f n\\<^sub>0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  n = f n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "with ** assm"], ["proof (chain)\npicking this:\n  \\<forall>n\\<^sub>0.\n     hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n     (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n         first_time r ms (f m\\<^sub>0)\n          (time (Rep_run r (f n\\<^sub>0) ms) +\n           \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r (f m\\<^sub>0) b))\n  hamlet (Rep_run r n a)\n  n = f n\\<^sub>0", "have ft0:\n        \\<open>(\\<forall>m\\<^sub>0 \\<ge> n\\<^sub>0. first_time r ms (f m\\<^sub>0) (time ((Rep_run r) (f n\\<^sub>0) ms) + \\<delta>\\<tau>)\n                    \\<longrightarrow> hamlet ((Rep_run r) (f m\\<^sub>0) b))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n\\<^sub>0.\n     hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n     (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n         first_time r ms (f m\\<^sub>0)\n          (time (Rep_run r (f n\\<^sub>0) ms) +\n           \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r (f m\\<^sub>0) b))\n  hamlet (Rep_run r n a)\n  n = f n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n       first_time r ms (f m\\<^sub>0)\n        (time (Rep_run r (f n\\<^sub>0) ms) +\n         \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r (f m\\<^sub>0) b)", "by blast"], ["proof (state)\nthis:\n  \\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n     first_time r ms (f m\\<^sub>0)\n      (time (Rep_run r (f n\\<^sub>0) ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r (f m\\<^sub>0) b)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "have \\<open>(\\<forall>m \\<ge> n. first_time r ms m (time ((Rep_run r) n ms) + \\<delta>\\<tau>) \n                       \\<longrightarrow> hamlet ((Rep_run r) m b)) \\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "assume hyp:\\<open>m \\<ge> n\\<close>"], ["proof (state)\nthis:\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "have \\<open>first_time r ms m (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow> hamlet (Rep_run r m b)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "proof (cases \\<open>\\<exists>m\\<^sub>0. f m\\<^sub>0 = m\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "case True"], ["proof (state)\nthis:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m", "obtain m\\<^sub>0 where \\<open>m = f m\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. (\\<And>m\\<^sub>0.\n        m = f m\\<^sub>0 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  m = f m\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "moreover"], ["proof (state)\nthis:\n  m = f m\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "have \\<open>strict_mono f\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono f", "using *"], ["proof (prove)\nusing this:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. strict_mono f", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  strict_mono f\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "ultimately"], ["proof (chain)\npicking this:\n  m = f m\\<^sub>0\n  strict_mono f", "show ?thesis"], ["proof (prove)\nusing this:\n  m = f m\\<^sub>0\n  strict_mono f\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "using ft0 hyp nfn0"], ["proof (prove)\nusing this:\n  m = f m\\<^sub>0\n  strict_mono f\n  \\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n     first_time r ms (f m\\<^sub>0)\n      (time (Rep_run r (f n\\<^sub>0) ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r (f m\\<^sub>0) b)\n  n \\<le> m\n  n = f n\\<^sub>0\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "by (simp add: strict_mono_less_eq)"], ["proof (state)\nthis:\n  first_time r ms m\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "case False"], ["proof (state)\nthis:\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "proof (cases \\<open>m = 0\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m = 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)\n 2. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "case True"], ["proof (state)\nthis:\n  m = 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m = 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)\n 2. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "hence \\<open>m = f 0\\<close>"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. m = f 0", "using *"], ["proof (prove)\nusing this:\n  m = 0\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. m = f 0", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  m = f 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m = 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)\n 2. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "then"], ["proof (chain)\npicking this:\n  m = f 0", "show ?thesis"], ["proof (prove)\nusing this:\n  m = f 0\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "using False"], ["proof (prove)\nusing this:\n  m = f 0\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "by blast"], ["proof (state)\nthis:\n  first_time r ms m\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "case False"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "hence \\<open>\\<exists>pm. m = Suc pm\\<close>"], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>pm. m = Suc pm", "by (simp add: not0_implies_Suc)"], ["proof (state)\nthis:\n  \\<exists>pm. m = Suc pm\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>pm. m = Suc pm", "obtain pm where mpm:\\<open>m = Suc pm\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>pm. m = Suc pm\n\ngoal (1 subgoal):\n 1. (\\<And>pm. m = Suc pm \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  m = Suc pm\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "hence \\<open>\\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm\\<close>"], ["proof (prove)\nusing this:\n  m = Suc pm\n\ngoal (1 subgoal):\n 1. \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm", "using \\<open>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\\<close>"], ["proof (prove)\nusing this:\n  m = Suc pm\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm", "by simp"], ["proof (state)\nthis:\n  \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "with *"], ["proof (chain)\npicking this:\n  dilating f sub r\n  \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm", "have \\<open>time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm\n\ngoal (1 subgoal):\n 1. time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)", "using dilating_def dilating_fun_def"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<nexists>pm\\<^sub>0. f pm\\<^sub>0 = Suc pm\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating_fun ?f ?r \\<equiv>\n  strict_mono ?f \\<and>\n  ?f 0 = 0 \\<and>\n  (\\<forall>n.\n      n \\<le> ?f n \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = n) \\<longrightarrow>\n       (\\<forall>c. \\<not> hamlet (Rep_run ?r n c))) \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = Suc n) \\<longrightarrow>\n       (\\<forall>c. time (Rep_run ?r (Suc n) c) = time (Rep_run ?r n c))))\n\ngoal (1 subgoal):\n 1. time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)", "by blast"], ["proof (state)\nthis:\n  time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "hence \\<open>time (Rep_run r pm ms) = time (Rep_run r m ms)\\<close>"], ["proof (prove)\nusing this:\n  time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)\n\ngoal (1 subgoal):\n 1. time (Rep_run r pm ms) = time (Rep_run r m ms)", "using mpm"], ["proof (prove)\nusing this:\n  time (Rep_run r (Suc pm) ms) = time (Rep_run r pm ms)\n  m = Suc pm\n\ngoal (1 subgoal):\n 1. time (Rep_run r pm ms) = time (Rep_run r m ms)", "by simp"], ["proof (state)\nthis:\n  time (Rep_run r pm ms) = time (Rep_run r m ms)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "moreover"], ["proof (state)\nthis:\n  time (Rep_run r pm ms) = time (Rep_run r m ms)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "from mpm"], ["proof (chain)\npicking this:\n  m = Suc pm", "have \\<open>pm < m\\<close>"], ["proof (prove)\nusing this:\n  m = Suc pm\n\ngoal (1 subgoal):\n 1. pm < m", "by simp"], ["proof (state)\nthis:\n  pm < m\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "ultimately"], ["proof (chain)\npicking this:\n  time (Rep_run r pm ms) = time (Rep_run r m ms)\n  pm < m", "have \\<open>\\<exists>m' < m. time (Rep_run r m' ms) = time (Rep_run r m ms)\\<close>"], ["proof (prove)\nusing this:\n  time (Rep_run r pm ms) = time (Rep_run r m ms)\n  pm < m\n\ngoal (1 subgoal):\n 1. \\<exists>m'<m. time (Rep_run r m' ms) = time (Rep_run r m ms)", "by blast"], ["proof (state)\nthis:\n  \\<exists>m'<m. time (Rep_run r m' ms) = time (Rep_run r m ms)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "hence \\<open>\\<not>(first_time r ms m (time (Rep_run r n ms) + \\<delta>\\<tau>))\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>m'<m. time (Rep_run r m' ms) = time (Rep_run r m ms)\n\ngoal (1 subgoal):\n 1. \\<not> first_time r ms m (time (Rep_run r n ms) + \\<delta>\\<tau>)", "by (auto simp add: first_time_def)"], ["proof (state)\nthis:\n  \\<not> first_time r ms m (time (Rep_run r n ms) + \\<delta>\\<tau>)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<nexists>m\\<^sub>0. f m\\<^sub>0 = m; m \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> first_time r ms m\n                       (time (Rep_run r n ms) +\n                        \\<delta>\\<tau>) \\<longrightarrow>\n                      hamlet (Rep_run r m b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> first_time r ms m (time (Rep_run r n ms) + \\<delta>\\<tau>)\n\ngoal (1 subgoal):\n 1. first_time r ms m\n     (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n    hamlet (Rep_run r m b)", "by simp"], ["proof (state)\nthis:\n  first_time r ms m\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r m b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  first_time r ms m\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r m b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  first_time r ms m\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "}"], ["proof (state)\nthis:\n  n \\<le> ?m2 \\<Longrightarrow>\n  first_time r ms ?m2\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r ?m2 b)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "thus ?thesis"], ["proof (prove)\nusing this:\n  n \\<le> ?m2 \\<Longrightarrow>\n  first_time r ms ?m2\n   (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n  hamlet (Rep_run r ?m2 b)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n.\n       first_time r ms m\n        (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n       hamlet (Rep_run r m b)", "by simp"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>n.\n     first_time r ms m\n      (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r m b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>n.\n     first_time r ms m\n      (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "}"], ["proof (state)\nthis:\n  hamlet (Rep_run r ?n2 a) \\<Longrightarrow>\n  \\<forall>m\\<ge>?n2.\n     first_time r ms m\n      (time (Rep_run r ?n2 ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       hamlet (Rep_run r (f n\\<^sub>0) a) \\<longrightarrow>\n       (\\<forall>m\\<^sub>0\\<ge>n\\<^sub>0.\n           first_time r ms (f m\\<^sub>0)\n            (time (Rep_run r (f n\\<^sub>0) ms) +\n             \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r (f m\\<^sub>0) b)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "thus ?thesis"], ["proof (prove)\nusing this:\n  hamlet (Rep_run r ?n2 a) \\<Longrightarrow>\n  \\<forall>m\\<ge>?n2.\n     first_time r ms m\n      (time (Rep_run r ?n2 ms) + \\<delta>\\<tau>) \\<longrightarrow>\n     hamlet (Rep_run r m b)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n a) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           first_time r ms m\n            (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n           hamlet (Rep_run r m b))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time r ms m\n          (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r m b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time r ms m\n          (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r m b))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r n a) \\<longrightarrow>\n     (\\<forall>m\\<ge>n.\n         first_time r ms m\n          (time (Rep_run r n ms) + \\<delta>\\<tau>) \\<longrightarrow>\n         hamlet (Rep_run r m b))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> a time-delayed by \\<delta>\\<tau> on ms implies b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Time relations are preserved through dilation of a run.\\<close>"], ["", "lemma tagrel_sub':\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1,c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>R (time ((Rep_run r) n c\\<^sub>1), time ((Rep_run r) n c\\<^sub>2))\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where *:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "moreover"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "from assms(2) TESL_interpretation_atomic.simps(2)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> time-relation \\<lfloor>?K\\<^sub>1, ?K\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      ?R (time (Rep_run \\<rho> n ?K\\<^sub>1),\n          time (Rep_run \\<rho> n ?K\\<^sub>2))}", "have\n    \\<open>sub \\<in> {r. \\<forall>n. R (time ((Rep_run r) n c\\<^sub>1), time ((Rep_run r) n c\\<^sub>2))}\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> time-relation \\<lfloor>?K\\<^sub>1, ?K\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      ?R (time (Rep_run \\<rho> n ?K\\<^sub>1),\n          time (Rep_run \\<rho> n ?K\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> {r. \\<forall>n.\n                 R (time (Rep_run r n c\\<^sub>1),\n                    time (Rep_run r n c\\<^sub>2))}", "by blast"], ["proof (state)\nthis:\n  sub\n  \\<in> {r. \\<forall>n.\n               R (time (Rep_run r n c\\<^sub>1),\n                  time (Rep_run r n c\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "hence 1:\\<open>\\<forall>n. R (time ((Rep_run sub) n c\\<^sub>1), time ((Rep_run sub) n c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> {r. \\<forall>n.\n               R (time (Rep_run r n c\\<^sub>1),\n                  time (Rep_run r n c\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "from 1"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))", "have \\<open>R (time ((Rep_run sub) 0 c\\<^sub>1), time ((Rep_run sub) 0 c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. R (time (Rep_run sub 0 c\\<^sub>1), time (Rep_run sub 0 c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  R (time (Rep_run sub 0 c\\<^sub>1), time (Rep_run sub 0 c\\<^sub>2))\n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "moreover"], ["proof (state)\nthis:\n  R (time (Rep_run sub 0 c\\<^sub>1), time (Rep_run sub 0 c\\<^sub>2))\n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "from *"], ["proof (chain)\npicking this:\n  dilating f sub r", "have \\<open>f 0 = 0\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. f 0 = 0", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "moreover"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "from *"], ["proof (chain)\npicking this:\n  dilating f sub r", "have \\<open>\\<forall>c. time ((Rep_run sub) 0 c) = time ((Rep_run r) (f 0) c)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<forall>c. time (Rep_run sub 0 c) = time (Rep_run r (f 0) c)", "by (simp add: dilating_def)"], ["proof (state)\nthis:\n  \\<forall>c. time (Rep_run sub 0 c) = time (Rep_run r (f 0) c)\n\ngoal (2 subgoals):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n 2. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "ultimately"], ["proof (chain)\npicking this:\n  R (time (Rep_run sub 0 c\\<^sub>1), time (Rep_run sub 0 c\\<^sub>2))\n  f 0 = 0\n  \\<forall>c. time (Rep_run sub 0 c) = time (Rep_run r (f 0) c)", "show ?case"], ["proof (prove)\nusing this:\n  R (time (Rep_run sub 0 c\\<^sub>1), time (Rep_run sub 0 c\\<^sub>2))\n  f 0 = 0\n  \\<forall>c. time (Rep_run sub 0 c) = time (Rep_run r (f 0) c)\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  R (time (Rep_run r 0 c\\<^sub>1), time (Rep_run r 0 c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "case (Suc n)"], ["proof (state)\nthis:\n  R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       R (time (Rep_run r n c\\<^sub>1),\n          time (Rep_run r n c\\<^sub>2)) \\<Longrightarrow>\n       R (time (Rep_run r (Suc n) c\\<^sub>1),\n          time (Rep_run r (Suc n) c\\<^sub>2))", "then"], ["proof (chain)\npicking this:\n  R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "show ?case"], ["proof (prove)\nusing this:\n  R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r (Suc n) c\\<^sub>1),\n       time (Rep_run r (Suc n) c\\<^sub>2))", "proof (cases \\<open>\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))\n 2. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "case True"], ["proof (state)\nthis:\n  \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))\n 2. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "with *"], ["proof (chain)\npicking this:\n  dilating f sub r\n  \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n", "have \\<open>\\<forall>c. time (Rep_run r (Suc n) c) = time (Rep_run r n c)\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<forall>c. time (Rep_run r (Suc n) c) = time (Rep_run r n c)", "by (simp add: dilating_def dilating_fun_def)"], ["proof (state)\nthis:\n  \\<forall>c. time (Rep_run r (Suc n) c) = time (Rep_run r n c)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))\n 2. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>c. time (Rep_run r (Suc n) c) = time (Rep_run r n c)\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r (Suc n) c\\<^sub>1),\n       time (Rep_run r (Suc n) c\\<^sub>2))", "using Suc.IH"], ["proof (prove)\nusing this:\n  \\<forall>c. time (Rep_run r (Suc n) c) = time (Rep_run r n c)\n  R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r (Suc n) c\\<^sub>1),\n       time (Rep_run r (Suc n) c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  R (time (Rep_run r (Suc n) c\\<^sub>1), time (Rep_run r (Suc n) c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "from this"], ["proof (chain)\npicking this:\n  \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)", "obtain n\\<^sub>0 where n\\<^sub>0prop:\\<open>f n\\<^sub>0 = Suc n\\<close>"], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        f n\\<^sub>0 = Suc n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f n\\<^sub>0 = Suc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "from 1"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))", "have \\<open>R (time ((Rep_run sub) n\\<^sub>0 c\\<^sub>1), time ((Rep_run sub) n\\<^sub>0 c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     R (time (Rep_run sub n c\\<^sub>1), time (Rep_run sub n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n       time (Rep_run sub n\\<^sub>0 c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n     time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "moreover"], ["proof (state)\nthis:\n  R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n     time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "from n\\<^sub>0prop *"], ["proof (chain)\npicking this:\n  f n\\<^sub>0 = Suc n\n  dilating f sub r", "have \\<open>time ((Rep_run sub) n\\<^sub>0 c\\<^sub>1) = time ((Rep_run r) (Suc n) c\\<^sub>1)\\<close>"], ["proof (prove)\nusing this:\n  f n\\<^sub>0 = Suc n\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. time (Rep_run sub n\\<^sub>0 c\\<^sub>1) =\n    time (Rep_run r (Suc n) c\\<^sub>1)", "by (simp add: dilating_def)"], ["proof (state)\nthis:\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>1) =\n  time (Rep_run r (Suc n) c\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "moreover"], ["proof (state)\nthis:\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>1) =\n  time (Rep_run r (Suc n) c\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "from n\\<^sub>0prop *"], ["proof (chain)\npicking this:\n  f n\\<^sub>0 = Suc n\n  dilating f sub r", "have \\<open>time ((Rep_run sub) n\\<^sub>0 c\\<^sub>2) = time ((Rep_run r) (Suc n) c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  f n\\<^sub>0 = Suc n\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. time (Rep_run sub n\\<^sub>0 c\\<^sub>2) =\n    time (Rep_run r (Suc n) c\\<^sub>2)", "by (simp add: dilating_def)"], ["proof (state)\nthis:\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>2) =\n  time (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2));\n     \\<not> (\\<nexists>n\\<^sub>0. f n\\<^sub>0 = Suc n)\\<rbrakk>\n    \\<Longrightarrow> R (time (Rep_run r (Suc n) c\\<^sub>1),\n                         time (Rep_run r (Suc n) c\\<^sub>2))", "ultimately"], ["proof (chain)\npicking this:\n  R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n     time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>1) =\n  time (Rep_run r (Suc n) c\\<^sub>1)\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>2) =\n  time (Rep_run r (Suc n) c\\<^sub>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n     time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>1) =\n  time (Rep_run r (Suc n) c\\<^sub>1)\n  time (Rep_run sub n\\<^sub>0 c\\<^sub>2) =\n  time (Rep_run r (Suc n) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. R (time (Rep_run r (Suc n) c\\<^sub>1),\n       time (Rep_run r (Suc n) c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  R (time (Rep_run r (Suc n) c\\<^sub>1), time (Rep_run r (Suc n) c\\<^sub>2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R (time (Rep_run r (Suc n) c\\<^sub>1), time (Rep_run r (Suc n) c\\<^sub>2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary tagrel_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1,c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1,c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "using tagrel_sub'[OF assms]"], ["proof (prove)\nusing this:\n  R (time (Rep_run r ?n c\\<^sub>1), time (Rep_run r ?n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "unfolding TESL_interpretation_atomic.simps(3)"], ["proof (prove)\nusing this:\n  R (time (Rep_run r ?n c\\<^sub>1), time (Rep_run r ?n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["", "text \\<open>Time relations are also preserved by contraction\\<close>"], ["", "lemma tagrel_sub_inv:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>sub \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where df:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2) TESL_interpretation_atomic.simps(2)"], ["proof (chain)\npicking this:\n  r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> time-relation \\<lfloor>?K\\<^sub>1, ?K\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      ?R (time (Rep_run \\<rho> n ?K\\<^sub>1),\n          time (Rep_run \\<rho> n ?K\\<^sub>2))}", "have\n    \\<open>r \\<in> {\\<rho>. \\<forall>n. R (time ((Rep_run \\<rho>) n c\\<^sub>1), time ((Rep_run \\<rho>) n c\\<^sub>2))}\\<close>"], ["proof (prove)\nusing this:\n  r \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> time-relation \\<lfloor>?K\\<^sub>1, ?K\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      ?R (time (Rep_run \\<rho> n ?K\\<^sub>1),\n          time (Rep_run \\<rho> n ?K\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. r \\<in> {\\<rho>.\n             \\<forall>n.\n                R (time (Rep_run \\<rho> n c\\<^sub>1),\n                   time (Rep_run \\<rho> n c\\<^sub>2))}", "by blast"], ["proof (state)\nthis:\n  r \\<in> {\\<rho>.\n           \\<forall>n.\n              R (time (Rep_run \\<rho> n c\\<^sub>1),\n                 time (Rep_run \\<rho> n c\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. R (time ((Rep_run r) n c\\<^sub>1), time ((Rep_run r) n c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  r \\<in> {\\<rho>.\n           \\<forall>n.\n              R (time (Rep_run \\<rho> n c\\<^sub>1),\n                 time (Rep_run \\<rho> n c\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. (\\<exists>n\\<^sub>0. f n\\<^sub>0 = n) \\<longrightarrow> R (time ((Rep_run r) n c\\<^sub>1), time ((Rep_run r) n c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n. R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       (\\<exists>n\\<^sub>0. f n\\<^sub>0 = n) \\<longrightarrow>\n       R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     (\\<exists>n\\<^sub>0. f n\\<^sub>0 = n) \\<longrightarrow>\n     R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n\\<^sub>0. R (time ((Rep_run r) (f n\\<^sub>0) c\\<^sub>1), time ((Rep_run r) (f n\\<^sub>0) c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     (\\<exists>n\\<^sub>0. f n\\<^sub>0 = n) \\<longrightarrow>\n     R (time (Rep_run r n c\\<^sub>1), time (Rep_run r n c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       R (time (Rep_run r (f n\\<^sub>0) c\\<^sub>1),\n          time (Rep_run r (f n\\<^sub>0) c\\<^sub>2))", "by blast"], ["proof (state)\nthis:\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run r (f n\\<^sub>0) c\\<^sub>1),\n        time (Rep_run r (f n\\<^sub>0) c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run r (f n\\<^sub>0) c\\<^sub>1),\n        time (Rep_run r (f n\\<^sub>0) c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from dilating_def df"], ["proof (chain)\npicking this:\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating f sub r", "have\n    \\<open>\\<forall>n c. time ((Rep_run sub) n c) = time ((Rep_run r) (f n) c)\\<close>"], ["proof (prove)\nusing this:\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. \\<forall>n c. time (Rep_run sub n c) = time (Rep_run r (f n) c)", "by blast"], ["proof (state)\nthis:\n  \\<forall>n c. time (Rep_run sub n c) = time (Rep_run r (f n) c)\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  dilating f sub r\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run r (f n\\<^sub>0) c\\<^sub>1),\n        time (Rep_run r (f n\\<^sub>0) c\\<^sub>2))\n  \\<forall>n c. time (Rep_run sub n c) = time (Rep_run r (f n) c)", "have \\<open>\\<forall>n\\<^sub>0. R (time ((Rep_run sub) n\\<^sub>0 c\\<^sub>1), time ((Rep_run sub) n\\<^sub>0 c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  dilating f sub r\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run r (f n\\<^sub>0) c\\<^sub>1),\n        time (Rep_run r (f n\\<^sub>0) c\\<^sub>2))\n  \\<forall>n c. time (Rep_run sub n c) = time (Rep_run r (f n) c)\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<^sub>0.\n       R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n          time (Rep_run sub n\\<^sub>0 c\\<^sub>2))", "by auto"], ["proof (state)\nthis:\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n        time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<^sub>0.\n     R (time (Rep_run sub n\\<^sub>0 c\\<^sub>1),\n        time (Rep_run sub n\\<^sub>0 c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  sub\n  \\<in> \\<lbrakk> time-relation \\<lfloor>c\\<^sub>1, c\\<^sub>2\\<rfloor> \\<in> R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Kill relations are preserved in a dilated run.\n\\<close>"], ["", "theorem kill_sub:\n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> c\\<^sub>1 kills c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> c\\<^sub>1 kills c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(1) is_subrun_def"], ["proof (chain)\npicking this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r", "obtain f where *:\\<open>dilating f sub r\\<close>"], ["proof (prove)\nusing this:\n  sub \\<lless> r\n  ?sub \\<lless> ?r \\<equiv> \\<exists>f. dilating f ?sub ?r\n\ngoal (1 subgoal):\n 1. (\\<And>f. dilating f sub r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  dilating f sub r\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from assms(2) TESL_interpretation_atomic.simps(8)"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 kills\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> ?K\\<^sub>1 kills\n            ?K\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      hamlet (Rep_run \\<rho> n ?K\\<^sub>1) \\<longrightarrow>\n      (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run \\<rho> m ?K\\<^sub>2))}", "have\n    \\<open>\\<forall>n. hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow> (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run sub m c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk> c\\<^sub>1 kills\n                  c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk> ?K\\<^sub>1 kills\n            ?K\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      hamlet (Rep_run \\<rho> n ?K\\<^sub>1) \\<longrightarrow>\n      (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run \\<rho> m ?K\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run sub m c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run sub m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence 1:\\<open>\\<forall>n. hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow> (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run sub m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))", "using ticks_sub[OF *]"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run sub n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run sub m c\\<^sub>2))\n  hamlet (Rep_run sub ?n ?a) = hamlet (Rep_run r (f ?n) ?a)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow> (\\<forall>m\\<ge> (f n). \\<not> hamlet (Rep_run r m c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "assume \\<open>hamlet (Rep_run r (f n) c\\<^sub>1)\\<close>"], ["proof (state)\nthis:\n  hamlet (Rep_run r (f n) c\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "with 1"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))\n  hamlet (Rep_run r (f n) c\\<^sub>1)", "have 2:\\<open>\\<forall> m \\<ge> n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2))\n  hamlet (Rep_run r (f n) c\\<^sub>1)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)", "by simp"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "have \\<open>\\<forall> m\\<ge> (f n). \\<not> hamlet (Rep_run r m c\\<^sub>2)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "fix m"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "assume h:\\<open>m \\<ge> f n\\<close>"], ["proof (state)\nthis:\n  f n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "have \\<open>\\<not> hamlet (Rep_run r m c\\<^sub>2)\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "proof (cases \\<open>\\<exists>m\\<^sub>0. f m\\<^sub>0 = m\\<close>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "case True"], ["proof (state)\nthis:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m", "obtain m\\<^sub>0 where fm0:\\<open>f m\\<^sub>0 = m\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. (\\<And>m\\<^sub>0.\n        f m\\<^sub>0 = m \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f m\\<^sub>0 = m\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "hence \\<open>m\\<^sub>0 \\<ge> n\\<close>"], ["proof (prove)\nusing this:\n  f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. n \\<le> m\\<^sub>0", "using * dilating_def dilating_fun_def h strict_mono_less_eq"], ["proof (prove)\nusing this:\n  f m\\<^sub>0 = m\n  dilating f sub r\n  dilating ?f ?sub ?r \\<equiv>\n  dilating_fun ?f ?r \\<and>\n  (\\<forall>n c.\n      time (Rep_run ?sub n c) = time (Rep_run ?r (?f n) c)) \\<and>\n  (\\<forall>n c. hamlet (Rep_run ?sub n c) = hamlet (Rep_run ?r (?f n) c))\n  dilating_fun ?f ?r \\<equiv>\n  strict_mono ?f \\<and>\n  ?f 0 = 0 \\<and>\n  (\\<forall>n.\n      n \\<le> ?f n \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = n) \\<longrightarrow>\n       (\\<forall>c. \\<not> hamlet (Rep_run ?r n c))) \\<and>\n      ((\\<nexists>n\\<^sub>0. ?f n\\<^sub>0 = Suc n) \\<longrightarrow>\n       (\\<forall>c. time (Rep_run ?r (Suc n) c) = time (Rep_run ?r n c))))\n  f n \\<le> m\n  strict_mono ?f \\<Longrightarrow> (?f ?x \\<le> ?f ?y) = (?x \\<le> ?y)\n\ngoal (1 subgoal):\n 1. n \\<le> m\\<^sub>0", "by fastforce"], ["proof (state)\nthis:\n  n \\<le> m\\<^sub>0\n\ngoal (2 subgoals):\n 1. \\<exists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)\n 2. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "with 2"], ["proof (chain)\npicking this:\n  \\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)\n  n \\<le> m\\<^sub>0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)\n  n \\<le> m\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "using fm0"], ["proof (prove)\nusing this:\n  \\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)\n  n \\<le> m\\<^sub>0\n  f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "by blast"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "case False"], ["proof (state)\nthis:\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m \\<Longrightarrow>\n    \\<not> hamlet (Rep_run r m c\\<^sub>2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "using ticks_image_sub'[OF *]"], ["proof (prove)\nusing this:\n  \\<nexists>m\\<^sub>0. f m\\<^sub>0 = m\n  \\<exists>c. hamlet (Rep_run r ?n c) \\<Longrightarrow>\n  \\<exists>n\\<^sub>0. f n\\<^sub>0 = ?n\n\ngoal (1 subgoal):\n 1. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "by blast"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "}"], ["proof (state)\nthis:\n  f n \\<le> ?m2 \\<Longrightarrow> \\<not> hamlet (Rep_run r ?m2 c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f n \\<le> ?m2 \\<Longrightarrow> \\<not> hamlet (Rep_run r ?m2 c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)", "by simp"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "}"], ["proof (state)\nthis:\n  hamlet (Rep_run r (f ?n2) c\\<^sub>1) \\<Longrightarrow>\n  \\<forall>m\\<ge>f ?n2. \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n.\n           \\<not> hamlet (Rep_run r (f m) c\\<^sub>2)) \\<Longrightarrow>\n    \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "thus ?thesis"], ["proof (prove)\nusing this:\n  hamlet (Rep_run r (f ?n2) c\\<^sub>1) \\<Longrightarrow>\n  \\<forall>m\\<ge>f ?n2. \\<not> hamlet (Rep_run r m c\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "hence \\<open>\\<forall>n. hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow> (\\<forall>m \\<ge> n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\\<close>"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "using ticks_imp_ticks_subk[OF *]"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r (f n) c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>f n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n  hamlet (Rep_run r ?k ?c) \\<Longrightarrow>\n  \\<exists>k\\<^sub>0.\n     f k\\<^sub>0 = ?k \\<and> hamlet (Rep_run sub k\\<^sub>0 ?c)\n\ngoal (1 subgoal):\n 1. \\<forall>n.\n       hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n       (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r m c\\<^sub>2))", "by blast"], ["proof (state)\nthis:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "using TESL_interpretation_atomic.simps(8)"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     hamlet (Rep_run r n c\\<^sub>1) \\<longrightarrow>\n     (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run r m c\\<^sub>2))\n  \\<lbrakk> ?K\\<^sub>1 kills\n            ?K\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  {\\<rho>.\n   \\<forall>n.\n      hamlet (Rep_run \\<rho> n ?K\\<^sub>1) \\<longrightarrow>\n      (\\<forall>m\\<ge>n. \\<not> hamlet (Rep_run \\<rho> m ?K\\<^sub>2))}\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                      c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by blast"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> c\\<^sub>1 kills\n                    c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas atomic_sub_lemmas = sporadic_sub tagrel_sub implies_sub implies_not_sub\n                           time_delayed_sub weakly_precedes_sub\n                           strictly_precedes_sub kill_sub"], ["", "text \\<open>\n  We can now prove that all atomic specification formulae are preserved\n  by the dilation of runs.\n\\<close>"], ["", "lemma atomic_sub: \n  assumes \\<open>sub \\<lless> r\\<close>\n      and \\<open>sub \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>\n    shows \\<open>r \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "using assms(2) atomic_sub_lemmas[OF assms(1)]"], ["proof (prove)\nusing this:\n  sub \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c sporadic ?\\<tau> on ?c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c sporadic ?\\<tau> on ?c' \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> time-relation \\<lfloor>?c\\<^sub>1, ?c\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> time-relation \\<lfloor>?c\\<^sub>1, ?c\\<^sub>2\\<rfloor> \\<in> ?R \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c\\<^sub>1 implies\n                  ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c\\<^sub>1 implies\n                    ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c\\<^sub>1 implies not\n                  ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c\\<^sub>1 implies not\n                    ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?a time-delayed by ?\\<delta>\\<tau> on ?ms implies ?b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?a time-delayed by ?\\<delta>\\<tau> on ?ms implies ?b \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c\\<^sub>1 weakly precedes\n                  ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c\\<^sub>1 weakly precedes\n                    ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c\\<^sub>1 strictly precedes\n                  ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c\\<^sub>1 strictly precedes\n                    ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk> ?c\\<^sub>1 kills\n                  ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk> ?c\\<^sub>1 kills\n                    ?c\\<^sub>2 \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> \\<phi> \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by (cases \\<phi>, simp_all)"], ["", "text \\<open>\n  Finally, any TESL specification is invariant by stuttering.\n\\<close>"], ["", "theorem TESL_stuttering_invariant:\n  assumes \\<open>sub \\<lless> r\\<close>\n    shows \\<open>sub \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. sub\n    \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n    r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "proof (induction S)"], ["proof (state)\ngoal (2 subgoals):\n 1. sub\n    \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n    r \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n 2. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "case Nil"], ["proof (state)\nthis:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (2 subgoals):\n 1. sub\n    \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n    r \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n 2. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "thus ?case"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk>\\<lbrakk> [] \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "case (Cons a s)"], ["proof (state)\nthis:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> a #\n                           s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from Cons.prems"], ["proof (chain)\npicking this:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> a #\n                           s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have sa:\\<open>sub \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close> and sb:\\<open>sub \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> a #\n                           s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. sub \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L &&&\n    sub\n    \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "using TESL_interpretation_image"], ["proof (prove)\nusing this:\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> a #\n                           s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk>\\<lbrakk> ?\\<Phi> \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  \\<Inter> (TESL_interpretation_atomic ` set ?\\<Phi>)\n\ngoal (1 subgoal):\n 1. sub \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L &&&\n    sub\n    \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp+"], ["proof (state)\nthis:\n  sub \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  sub\n  \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from Cons.IH[OF sb]"], ["proof (chain)\npicking this:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have \\<open>r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\nusing this:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "."], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "moreover"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "from atomic_sub[OF assms(1) sa]"], ["proof (chain)\npicking this:\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "have \\<open>r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<close>"], ["proof (prove)\nusing this:\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "."], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. \\<And>a S.\n       \\<lbrakk>sub\n                \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L \\<Longrightarrow>\n                r \\<in> \\<lbrakk>\\<lbrakk> S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L;\n        sub\n        \\<in> \\<lbrakk>\\<lbrakk> a #\n                                 S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\\<rbrakk>\n       \\<Longrightarrow> r \\<in> \\<lbrakk>\\<lbrakk> a #\n              S \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "ultimately"], ["proof (chain)\npicking this:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "show ?case"], ["proof (prove)\nusing this:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk>\\<lbrakk> a #\n                               s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "using  TESL_interpretation_image"], ["proof (prove)\nusing this:\n  r \\<in> \\<lbrakk>\\<lbrakk> s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  r \\<in> \\<lbrakk> a \\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n  \\<lbrakk>\\<lbrakk> ?\\<Phi> \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L =\n  \\<Inter> (TESL_interpretation_atomic ` set ?\\<Phi>)\n\ngoal (1 subgoal):\n 1. r \\<in> \\<lbrakk>\\<lbrakk> a #\n                               s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L", "by simp"], ["proof (state)\nthis:\n  r \\<in> \\<lbrakk>\\<lbrakk> a #\n                             s \\<rbrakk>\\<rbrakk>\\<^sub>T\\<^sub>E\\<^sub>S\\<^sub>L\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}