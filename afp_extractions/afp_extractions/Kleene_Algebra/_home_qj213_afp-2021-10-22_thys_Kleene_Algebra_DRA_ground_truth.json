{"file_name": "/home/qj213/afp-2021-10-22/thys/Kleene_Algebra/DRA.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Kleene_Algebra", "problem_names": ["lemma iteration_refl: \"1 \\<le> x\\<^sup>\\<infinity>\"", "lemma iteration_1l: \"x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity>\"", "lemma top_ref: \"x \\<le> \\<top>\"", "lemma it_ext: \"x \\<le> x\\<^sup>\\<infinity>\"", "lemma it_idem [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\"", "lemma top_mult_annil [simp]: \"\\<top> \\<cdot> x = \\<top>\"", "lemma top_add_annil [simp]: \"\\<top> + x = \\<top>\"", "lemma top_elim: \"x \\<cdot> y \\<le> x \\<cdot> \\<top>\"", "lemma iteration_unfoldl_distl [simp]: \" y + y \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> = y \\<cdot> x\\<^sup>\\<infinity>\"", "lemma iteration_unfoldl_distr [simp]: \" y + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y = x\\<^sup>\\<infinity> \\<cdot> y\"", "lemma iteration_unfoldl' [simp]: \"z \\<cdot> y + z \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y = z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y\"", "lemma iteration_idem [simp]: \"x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\"", "lemma iteration_induct: \"x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x\"", "lemma iteration_ref_star: \"x\\<^sup>\\<star> \\<le> x\\<^sup>\\<infinity>\"", "lemma iteration_subdist: \"x\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>\"", "lemma iteration_iso: \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<infinity> \\<le> y\\<^sup>\\<infinity>\"", "lemma iteration_unfoldr [simp]: \"1 + x\\<^sup>\\<infinity> \\<cdot> x = x\\<^sup>\\<infinity>\"", "lemma iteration_unfoldr_distl [simp]: \" y + y \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x = y \\<cdot> x\\<^sup>\\<infinity>\"", "lemma iteration_unfoldr_distr [simp]: \" y + x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y = x\\<^sup>\\<infinity> \\<cdot> y\"", "lemma iteration_unfold_eq: \"x\\<^sup>\\<infinity> \\<cdot> x = x \\<cdot> x\\<^sup>\\<infinity>\"", "lemma iteration_unfoldr' [simp]: \"z \\<cdot> y + z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y = z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y\"", "lemma iteration_double [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = \\<top>\"", "lemma star_iteration [simp]: \"(x\\<^sup>\\<star>)\\<^sup>\\<infinity> = \\<top>\"", "lemma iteration_star [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<star> = x\\<^sup>\\<infinity>\"", "lemma iteration_star2 [simp]: \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\"", "lemma iteration_zero [simp]: \"0\\<^sup>\\<infinity> = 1\"", "lemma iteration_annil [simp]: \"(x \\<cdot> 0)\\<^sup>\\<infinity> = 1 + x \\<cdot> 0\"", "lemma iteration_subdenest: \"x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>\"", "lemma sup_id_top: \"1 \\<le> y \\<Longrightarrow> y \\<cdot> \\<top> = \\<top>\"", "lemma iteration_top [simp]: \"x\\<^sup>\\<infinity> \\<cdot> \\<top> = \\<top>\"", "lemma iteration_sim: \"z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow> z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\"", "lemma \"y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<infinity> \\<cdot> z \\<le> z \\<cdot> x\\<^sup>\\<infinity>\"", "lemma iteration_slide_var: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity> \\<le> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\"", "lemma iteration_prod_unfold [simp]: \"1 + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x = (y \\<cdot> x)\\<^sup>\\<infinity>\"", "lemma iteration_slide: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity> = (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\"", "lemma star_iteration_slide [simp]: \" y\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity> = (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity>\"", "lemma iteration_sub_denest: \"(x + y)\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\"", "lemma iteration_denest: \"(x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\"", "lemma iteration_denest2 [simp]: \"y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity> = (x + y)\\<^sup>\\<infinity>\"", "lemma iteration_denest3: \"(y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> = (x + y)\\<^sup>\\<infinity>\"", "lemma iteration_sep: \"y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\"", "lemma iteration_sim2: \"y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow> y\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\"", "lemma iteration_sep2: \"y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\"", "lemma iteration_sep3: \"y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\"", "lemma iteration_sep4: \"y \\<cdot> 0 = 0 \\<Longrightarrow> z \\<cdot> x = 0 \\<Longrightarrow> y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\"", "lemma \"x \\<cdot> y = 0 \\<Longrightarrow> x\\<^sup>\\<infinity> \\<cdot> y = y\"", "lemma iteration_idep: \"x \\<cdot> y = 0 \\<Longrightarrow> x \\<cdot> y\\<^sup>\\<infinity> = x\"", "lemma \"y \\<cdot> w \\<le> x \\<cdot> y + z \\<Longrightarrow> y \\<cdot> w\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\"", "lemma data_refinement:\n  assumes \"s' \\<le> s \\<cdot> z\" and \"z \\<cdot> e' \\<le> e\" and \"z \\<cdot> a' \\<le> a \\<cdot> z\" and \"z \\<cdot> b \\<le> z\" and \"b\\<^sup>\\<infinity> = b\\<^sup>\\<star>\"\n  shows \"s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e' \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e\""], "translations": [["", "lemma iteration_refl: \"1 \\<le> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x\\<^sup>\\<infinity>", "using local.iteration_unfoldl local.order_prop"], ["proof (prove)\nusing this:\n  (1::'a) + ?x \\<cdot> ?x\\<^sup>\\<infinity> = ?x\\<^sup>\\<infinity>\n  (?x \\<le> ?y) = (\\<exists>z. ?x + z = ?y)\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x\\<^sup>\\<infinity>", "by blast"], ["", "lemma iteration_1l: \"x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity>", "by (metis local.iteration_unfoldl local.join.sup.cobounded2)"], ["", "lemma top_ref: \"x \\<le> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "have \"x \\<le> 1 + 1 \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (1::'a) + (1::'a) \\<cdot> x", "by simp"], ["proof (state)\nthis:\n  x \\<le> (1::'a) + (1::'a) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> (1::'a) + (1::'a) \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "using local.coinduction"], ["proof (prove)\nusing this:\n  x \\<le> (1::'a) + (1::'a) \\<cdot> x\n  ?y \\<le> ?z + ?x \\<cdot> ?y \\<longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<infinity> \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. x \\<le> \\<top>", "by fastforce"], ["proof (state)\nthis:\n  x \\<le> \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma it_ext: \"x \\<le> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>\\<infinity>", "have \"x \\<le> x \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> x \\<cdot> x\\<^sup>\\<infinity>", "using iteration_refl local.mult_isol"], ["proof (prove)\nusing this:\n  (1::'a) \\<le> ?x\\<^sup>\\<infinity>\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n\ngoal (1 subgoal):\n 1. x \\<le> x \\<cdot> x\\<^sup>\\<infinity>", "by fastforce"], ["proof (state)\nthis:\n  x \\<le> x \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> x \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x \\<le> x\\<^sup>\\<infinity>", "by (metis (full_types) local.isolation local.join.sup.coboundedI1 local.star_ext)"], ["proof (state)\nthis:\n  x \\<le> x\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma it_idem [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "oops"], ["", "lemma top_mult_annil [simp]: \"\\<top> \\<cdot> x = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<top> \\<cdot> x = \\<top>", "by (simp add: local.coinduction local.order.antisym top_ref)"], ["", "lemma top_add_annil [simp]: \"\\<top> + x = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<top> + x = \\<top>", "by (simp add: local.join.sup.absorb1 top_ref)"], ["", "lemma top_elim: \"x \\<cdot> y \\<le> x \\<cdot> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y \\<le> x \\<cdot> \\<top>", "by (simp add: local.mult_isol top_ref)"], ["", "lemma iteration_unfoldl_distl [simp]: \" y + y \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> = y \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y + y \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> =\n    y \\<cdot> x\\<^sup>\\<infinity>", "by (metis distrib_left mult.assoc mult_oner iteration_unfoldl)"], ["", "lemma iteration_unfoldl_distr [simp]: \" y + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y = x\\<^sup>\\<infinity> \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y =\n    x\\<^sup>\\<infinity> \\<cdot> y", "by (metis distrib_right' mult_1_left iteration_unfoldl)"], ["", "lemma iteration_unfoldl' [simp]: \"z \\<cdot> y + z \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y = z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y + z \\<cdot> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y =\n    z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y", "by (metis iteration_unfoldl_distl local.distrib_right)"], ["", "lemma iteration_idem [simp]: \"x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity>\n 2. x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "have \"x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> \\<le> 1 + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> (1::'a) +\n          x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "by (metis add_assoc iteration_unfoldl_distr local.eq_refl local.iteration_unfoldl local.subdistl_eq mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n  \\<le> (1::'a) + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity>\n 2. x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "thus \"x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n  \\<le> (1::'a) + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity>", "using local.coinduction mult_assoc"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n  \\<le> (1::'a) + x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n  ?y \\<le> ?z + ?x \\<cdot> ?y \\<longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<infinity> \\<cdot> ?z\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity>", "by fastforce"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "show \"x\\<^sup>\\<infinity> \\<le>  x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "using local.coinduction"], ["proof (prove)\nusing this:\n  ?y \\<le> ?z + ?x \\<cdot> ?y \\<longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<infinity> \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_induct: \"x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x", "have \"x + x \\<cdot> (x \\<cdot> x\\<^sup>\\<infinity>) = x \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x + x \\<cdot> (x \\<cdot> x\\<^sup>\\<infinity>) =\n    x \\<cdot> x\\<^sup>\\<infinity>", "by (metis (no_types) local.distrib_left local.iteration_unfoldl local.mult_oner)"], ["proof (state)\nthis:\n  x + x \\<cdot> (x \\<cdot> x\\<^sup>\\<infinity>) =\n  x \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x", "thus ?thesis"], ["proof (prove)\nusing this:\n  x + x \\<cdot> (x \\<cdot> x\\<^sup>\\<infinity>) =\n  x \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x", "by (simp add: local.coinduction)"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_ref_star: \"x\\<^sup>\\<star> \\<le> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<le> x\\<^sup>\\<infinity>", "by (simp add: local.star_inductl_one)"], ["", "lemma iteration_subdist: \"x\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>", "by (metis add_assoc' distrib_right' mult_oner coinduction join.sup_ge1 iteration_unfoldl)"], ["", "lemma iteration_iso: \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<infinity> \\<le> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    x\\<^sup>\\<infinity> \\<le> y\\<^sup>\\<infinity>", "using iteration_subdist local.order_prop"], ["proof (prove)\nusing this:\n  ?x\\<^sup>\\<infinity> \\<le> (?x + ?y)\\<^sup>\\<infinity>\n  (?x \\<le> ?y) = (\\<exists>z. ?x + z = ?y)\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>\n    x\\<^sup>\\<infinity> \\<le> y\\<^sup>\\<infinity>", "by auto"], ["", "lemma iteration_unfoldr [simp]: \"1 + x\\<^sup>\\<infinity> \\<cdot> x = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) + x\\<^sup>\\<infinity> \\<cdot> x = x\\<^sup>\\<infinity>", "by (metis add_0_left annil eq_refl isolation mult.assoc iteration_idem iteration_unfoldl iteration_unfoldl_distr star_denest star_one star_prod_unfold star_slide tc)"], ["", "lemma iteration_unfoldr_distl [simp]: \" y + y \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x = y \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y + y \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x =\n    y \\<cdot> x\\<^sup>\\<infinity>", "by (metis distrib_left mult.assoc mult_oner iteration_unfoldr)"], ["", "lemma iteration_unfoldr_distr [simp]: \" y + x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y = x\\<^sup>\\<infinity> \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y + x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y =\n    x\\<^sup>\\<infinity> \\<cdot> y", "by (metis iteration_unfoldl_distr iteration_unfoldr_distl)"], ["", "lemma iteration_unfold_eq: \"x\\<^sup>\\<infinity> \\<cdot> x = x \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> x = x \\<cdot> x\\<^sup>\\<infinity>", "by (metis iteration_unfoldl_distr iteration_unfoldr_distl)"], ["", "lemma iteration_unfoldr' [simp]: \"z \\<cdot> y + z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y = z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y + z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> x \\<cdot> y =\n    z \\<cdot> x\\<^sup>\\<infinity> \\<cdot> y", "by (metis distrib_left mult.assoc iteration_unfoldr_distr)"], ["", "lemma iteration_double [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> = \\<top>", "by (simp add: iteration_iso iteration_refl local.eq_iff top_ref)"], ["", "lemma star_iteration [simp]: \"(x\\<^sup>\\<star>)\\<^sup>\\<infinity> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<infinity> = \\<top>", "by (simp add: iteration_iso local.eq_iff top_ref)"], ["", "lemma iteration_star [simp]: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<star> = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<infinity>)\\<^sup>\\<star> = x\\<^sup>\\<infinity>", "by (metis (no_types) iteration_idem iteration_refl local.star_inductr_var_eq2 local.sup_id_star1)"], ["", "lemma iteration_star2 [simp]: \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "have f1: \"(x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> = x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> =\n    x\\<^sup>\\<infinity>", "by (metis (no_types) it_ext iteration_induct iteration_star local.bubble_sort local.join.sup.absorb1)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> =\n  x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "have \"x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "hence \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> =\n    x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot>\n    (x\\<^sup>\\<star> \\<cdot>\n     (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>", "using f1"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n  (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> =\n  x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> =\n    x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot>\n    (x\\<^sup>\\<star> \\<cdot>\n     (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>", "by (metis (no_types) iteration_star local.star_denest_var_4 mult_assoc)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> =\n  x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot>\n  (x\\<^sup>\\<star> \\<cdot>\n   (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> =\n  x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot>\n  (x\\<^sup>\\<star> \\<cdot>\n   (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "using f1"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> =\n  x\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot>\n  (x\\<^sup>\\<star> \\<cdot>\n   (x\\<^sup>\\<infinity>)\\<^sup>\\<star>)\\<^sup>\\<star>\n  (x\\<^sup>\\<infinity>)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> =\n  x\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>", "by (metis (no_types) iteration_star local.star_denest_var_4 local.star_denest_var_8)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<infinity> = x\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_zero [simp]: \"0\\<^sup>\\<infinity> = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\\<^sup>\\<infinity> = (1::'a)", "by (metis add_zeror annil iteration_unfoldl)"], ["", "lemma iteration_annil [simp]: \"(x \\<cdot> 0)\\<^sup>\\<infinity> = 1 + x \\<cdot> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> (0::'a))\\<^sup>\\<infinity> = (1::'a) + x \\<cdot> (0::'a)", "by (metis annil iteration_unfoldl mult.assoc)"], ["", "lemma iteration_subdenest: \"x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n    \\<le> (x + y)\\<^sup>\\<infinity>", "by (metis add_commute iteration_idem iteration_subdist local.mult_isol_var)"], ["", "lemma sup_id_top: \"1 \\<le> y \\<Longrightarrow> y \\<cdot> \\<top> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> y \\<Longrightarrow> y \\<cdot> \\<top> = \\<top>", "using local.eq_iff local.mult_isol_var top_ref"], ["proof (prove)\nusing this:\n  (?x = ?y) = (?x \\<le> ?y \\<and> ?y \\<le> ?x)\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> ?v \\<le> ?x \\<cdot> ?y\n  ?x \\<le> \\<top>\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> y \\<Longrightarrow> y \\<cdot> \\<top> = \\<top>", "by fastforce"], ["", "lemma iteration_top [simp]: \"x\\<^sup>\\<infinity> \\<cdot> \\<top> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> \\<top> = \\<top>", "by (simp add: iteration_refl sup_id_top)"], ["", "text \\<open>Next, we prove some simulation laws for data refinement.\\<close>"], ["", "lemma iteration_sim: \"z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow> z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "assume assms: \"z \\<cdot> y \\<le> x \\<cdot> z\""], ["proof (state)\nthis:\n  z \\<cdot> y \\<le> x \\<cdot> z\n\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "have \"z \\<cdot> y\\<^sup>\\<infinity> = z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> y\\<^sup>\\<infinity> =\n    z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  z \\<cdot> y\\<^sup>\\<infinity> =\n  z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "also"], ["proof (state)\nthis:\n  z \\<cdot> y\\<^sup>\\<infinity> =\n  z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "have \"... \\<le> z + x \\<cdot> z \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>\n    \\<le> z + x \\<cdot> z \\<cdot> y\\<^sup>\\<infinity>", "by (metis assms add.commute add_iso mult_isor)"], ["proof (state)\nthis:\n  z + z \\<cdot> y \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> z + x \\<cdot> z \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<cdot> y \\<le> x \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "finally"], ["proof (chain)\npicking this:\n  z \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> z + x \\<cdot> z \\<cdot> y\\<^sup>\\<infinity>", "show \"z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\""], ["proof (prove)\nusing this:\n  z \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> z + x \\<cdot> z \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "by (simp add: local.coinduction mult_assoc)"], ["proof (state)\nthis:\n  z \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Nitpick gives a counterexample to the dual simulation law.\\<close>"], ["", "lemma \"y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<infinity> \\<cdot> z \\<le> z \\<cdot> x\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<infinity> \\<cdot> z \\<le> z \\<cdot> x\\<^sup>\\<infinity>", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<infinity> \\<cdot> z \\<le> z \\<cdot> x\\<^sup>\\<infinity>", "oops"], ["", "text \\<open>Next, we prove some sliding laws.\\<close>"], ["", "lemma iteration_slide_var: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity> \\<le> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "by (simp add: iteration_sim mult_assoc)"], ["", "lemma iteration_prod_unfold [simp]: \"1 + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x = (y \\<cdot> x)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x =\n    (y \\<cdot> x)\\<^sup>\\<infinity>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n    \\<le> (y \\<cdot> x)\\<^sup>\\<infinity>\n 2. (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "have \"1 + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x \\<le> 1 + (y \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n    \\<le> (1::'a) + (y \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y \\<cdot> x", "using iteration_slide_var local.join.sup_mono local.mult_isor"], ["proof (prove)\nusing this:\n  ?x \\<cdot> (?y \\<cdot> ?x)\\<^sup>\\<infinity>\n  \\<le> (?x \\<cdot> ?y)\\<^sup>\\<infinity> \\<cdot> ?x\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?b \\<le> ?c + ?d\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n    \\<le> (1::'a) + (y \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y \\<cdot> x", "by blast"], ["proof (state)\nthis:\n  (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n  \\<le> (1::'a) + (y \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y \\<cdot> x\n\ngoal (2 subgoals):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n    \\<le> (y \\<cdot> x)\\<^sup>\\<infinity>\n 2. (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "thus \"1 + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x \\<le>  (y \\<cdot> x)\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n  \\<le> (1::'a) + (y \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y \\<cdot> x\n\ngoal (1 subgoal):\n 1. (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n    \\<le> (y \\<cdot> x)\\<^sup>\\<infinity>", "by (simp add: mult_assoc)"], ["proof (state)\nthis:\n  (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n  \\<le> (y \\<cdot> x)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "have \"(y \\<cdot> x)\\<^sup>\\<infinity> = 1 + y \\<cdot> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<cdot> x)\\<^sup>\\<infinity> =\n    (1::'a) + y \\<cdot> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  (y \\<cdot> x)\\<^sup>\\<infinity> =\n  (1::'a) + y \\<cdot> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "thus \"(y \\<cdot> x)\\<^sup>\\<infinity> \\<le> 1 + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\""], ["proof (prove)\nusing this:\n  (y \\<cdot> x)\\<^sup>\\<infinity> =\n  (1::'a) + y \\<cdot> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (y \\<cdot> x)\\<^sup>\\<infinity>\n    \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "by (metis iteration_sim local.eq_refl local.join.sup.mono local.mult_isol mult_assoc)"], ["proof (state)\nthis:\n  (y \\<cdot> x)\\<^sup>\\<infinity>\n  \\<le> (1::'a) + y \\<cdot> (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_slide: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity> = (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<infinity> =\n    (x \\<cdot> y)\\<^sup>\\<infinity> \\<cdot> x", "by (metis iteration_prod_unfold iteration_unfoldl_distr distrib_left mult_1_right mult.assoc)"], ["", "lemma star_iteration_slide [simp]: \" y\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity> = (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity> =\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<infinity>", "by (metis iteration_star2 local.conway.dagger_unfoldl_distr local.join.sup.orderE local.mult_isor local.star_invol local.star_subdist local.star_trans_eq)"], ["", "text \\<open>The following laws are called denesting laws.\\<close>"], ["", "lemma iteration_sub_denest: \"(x + y)\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "have \"(x + y)\\<^sup>\\<infinity> = x \\<cdot> (x + y)\\<^sup>\\<infinity> + y \\<cdot> (x + y)\\<^sup>\\<infinity> + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    (1::'a)", "by (metis add.commute distrib_right' iteration_unfoldl)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "hence \"(x + y)\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> (x + y)\\<^sup>\\<infinity> + 1)\""], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity> =\n  x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  (1::'a)\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))", "by (metis add_assoc' join.sup_least join.sup_ge1 join.sup_ge2 coinduction)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "hence \"x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> (x + y)\\<^sup>\\<infinity> + 1) \\<le> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "by (metis add_iso mult.assoc mult_isol add.commute coinduction mult_oner mult_isol)"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "using local.order_trans"], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> (x + y)\\<^sup>\\<infinity> + (1::'a))\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "by blast"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_denest: \"(x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "have \"x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> \\<le> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> + y \\<cdot> x\\<^sup>\\<infinity> \\<cdot> (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n    \\<le> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n          y \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n          (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n          (1::'a)", "by (metis add.commute iteration_unfoldl_distr add_assoc' add.commute iteration_unfoldl order_refl)"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n        y \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n        (1::'a)\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n        y \\<cdot> x\\<^sup>\\<infinity> \\<cdot>\n        (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity> +\n        (1::'a)\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>", "by (metis add.commute iteration_sub_denest order.antisym coinduction distrib_right' iteration_sub_denest mult.assoc mult_oner order.antisym)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y \\<cdot> x\\<^sup>\\<infinity>)\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*\nend\n\nsublocale dra \\<subseteq> conway_zerol strong_iteration \n  apply (unfold_locales)\n  apply (simp add: iteration_denest iteration_slide)\n  apply simp\n  by (simp add: iteration_sim)\n\n\ncontext dra\nbegin\n*)"], ["", "lemma iteration_denest2 [simp]: \"y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity> = (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "have \"(x + y)\\<^sup>\\<infinity> = y\\<^sup>\\<infinity> \\<cdot> x \\<cdot> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n    (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity>", "by (metis add.commute iteration_denest iteration_slide iteration_unfoldl_distr)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "also"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "have \"... = y\\<^sup>\\<star> \\<cdot> x \\<cdot> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> + y\\<^sup>\\<infinity> \\<cdot> 0 + y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n    (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n    (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> \\<cdot> (0::'a) +\n    y\\<^sup>\\<infinity>", "by (metis isolation mult.assoc distrib_right' annil mult.assoc)"], ["proof (state)\nthis:\n  y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> =\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> \\<cdot> (0::'a) +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "also"], ["proof (state)\nthis:\n  y\\<^sup>\\<infinity> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> =\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> \\<cdot> (0::'a) +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "have \"... = y\\<^sup>\\<star> \\<cdot> x \\<cdot> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n    (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> \\<cdot> (0::'a) +\n    y\\<^sup>\\<infinity> =\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n    (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity>", "by (metis add.assoc distrib_left mult_1_right add_0_left mult_1_right)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> \\<cdot> (0::'a) +\n  y\\<^sup>\\<infinity> =\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "finally"], ["proof (chain)\npicking this:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot>\n  (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "by (metis add.commute iteration_denest iteration_slide mult.assoc)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity> =\n  (x + y)\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_denest3: \"(y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> = (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> =\n    (x + y)\\<^sup>\\<infinity>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> (x + y)\\<^sup>\\<infinity>\n 2. (x + y)\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "have  \"(y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "by (simp add: iteration_iso iteration_ref_star local.mult_isor)"], ["proof (state)\nthis:\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> (x + y)\\<^sup>\\<infinity>\n 2. (x + y)\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "thus  \"(y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> (y\\<^sup>\\<infinity> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> (x + y)\\<^sup>\\<infinity>", "by (metis iteration_denest iteration_slide local.join.sup_commute)"], ["proof (state)\nthis:\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> (x + y)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "have \"(x + y)\\<^sup>\\<infinity> = y\\<^sup>\\<infinity> + y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    y\\<^sup>\\<infinity> +\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity>", "by (metis iteration_denest2 local.join.sup_commute)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "thus \"(x + y)\\<^sup>\\<infinity> \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity> =\n  y\\<^sup>\\<infinity> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "by (simp add: local.coinduction)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we prove separation laws for reasoning about distributed systems in the context of action systems.\\<close>"], ["", "lemma iteration_sep: \"y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "assume \"y \\<cdot> x \\<le> x \\<cdot> y\""], ["proof (state)\nthis:\n  y \\<cdot> x \\<le> x \\<cdot> y\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"y\\<^sup>\\<star> \\<cdot> x \\<le> x\\<cdot>(x + y)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  y \\<cdot> x \\<le> x \\<cdot> y\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>", "by (metis star_sim1 add.commute mult_isol order_trans star_subdist)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity> \\<le> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity>\n    \\<le> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>", "by (metis mult_isor mult.assoc iteration_star2 join.sup.mono eq_refl)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis iteration_denest2 add.commute coinduction add.commute less_eq_def iteration_subdenest)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_sim2: \"y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow> y\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y \\<Longrightarrow>\n    y\\<^sup>\\<infinity> \\<cdot> x\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis add.commute iteration_sep iteration_subdenest)"], ["", "lemma iteration_sep2: \"y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "assume \"y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"y\\<^sup>\\<star> \\<cdot> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot>\n    (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot>\n          y\\<^sup>\\<infinity>", "by (metis mult.assoc mult_isor iteration_sim star_denest_var_2 star_sim1 star_slide_var star_trans_eq tc_eq)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "have \"x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis eq_refl mult.assoc iteration_star2)"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "have \"(y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity> \\<le> y\\<^sup>\\<star> \\<cdot> (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>\n    \\<le> y\\<^sup>\\<star> \\<cdot>\n          (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n          y\\<^sup>\\<infinity>", "by (metis mult_isor mult_onel star_ref)"], ["proof (state)\nthis:\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> y\\<^sup>\\<star> \\<cdot>\n        (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  y\\<^sup>\\<star> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot>\n        y\\<^sup>\\<infinity>\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> y\\<^sup>\\<star> \\<cdot>\n        (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot>\n        y\\<^sup>\\<infinity>\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n  \\<le> y\\<^sup>\\<star> \\<cdot>\n        (y\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<infinity> \\<cdot>\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis antisym iteration_denest3 iteration_subdenest order_trans)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_sep3: \"y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow> (x + y)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "assume \"y \\<cdot> x \\<le> x \\<cdot> (x + y)\""], ["proof (state)\nthis:\n  y \\<cdot> x \\<le> x \\<cdot> (x + y)\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  y \\<cdot> x \\<le> x \\<cdot> (x + y)\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>", "by (metis star_sim1)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity> \\<le> x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<infinity> + y\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n    y\\<^sup>\\<infinity>\n    \\<le> x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot>\n          (x + y)\\<^sup>\\<infinity> +\n          y\\<^sup>\\<infinity>", "by (metis add_iso mult_isor)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<infinity> +\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "hence \"(x + y)\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<infinity> +\n  y\\<^sup>\\<infinity>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<infinity> +\n        y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis mult.assoc iteration_denest2 iteration_star2 add.commute coinduction)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. y \\<cdot> x \\<le> x \\<cdot> (x + y) \\<Longrightarrow>\n    (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>", "by (metis add.commute less_eq_def iteration_subdenest)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma iteration_sep4: \"y \\<cdot> 0 = 0 \\<Longrightarrow> z \\<cdot> x = 0 \\<Longrightarrow> y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> = x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "assume assms: \"y \\<cdot> 0 = 0\" \"z \\<cdot> x = 0\" \"y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  y \\<cdot> (0::'a) = (0::'a)\n  z \\<cdot> x = (0::'a)\n  y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"y \\<cdot> y\\<^sup>\\<star> \\<cdot> z \\<le> y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n    \\<le> y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>", "by (metis mult_isor star_1l mult_oner order_trans star_plus_one subdistl)"], ["proof (state)\nthis:\n  y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n  \\<le> y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"y\\<^sup>\\<star> \\<cdot> z \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> z \\<cdot> x\n    \\<le> x \\<cdot> y\\<^sup>\\<star> \\<cdot> z", "by (metis join.bot_least assms(1) assms(2) independence1 mult.assoc)"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> z \\<cdot> x\n  \\<le> x \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z) \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> + y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n    \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> +\n          y \\<cdot> y\\<^sup>\\<star> \\<cdot> z", "by (metis assms(3) distrib_left mult.assoc add_iso)"], ["proof (state)\nthis:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> +\n        y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "also"], ["proof (state)\nthis:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + z) \\<cdot> y\\<^sup>\\<star> +\n        y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"... \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> + y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + z) \\<cdot> y\\<^sup>\\<star> + y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n          y \\<cdot> y\\<^sup>\\<star> \\<cdot> z", "by (metis star_ref join.sup.mono eq_refl mult_1_left mult_isor)"], ["proof (state)\nthis:\n  (x + z) \\<cdot> y\\<^sup>\\<star> + y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n        y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "also"], ["proof (state)\nthis:\n  (x + z) \\<cdot> y\\<^sup>\\<star> + y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n        y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"... \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> + y\\<^sup>\\<star> \\<cdot> z  \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n    y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n          y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>", "using \\<open>y \\<cdot> y\\<^sup>\\<star> \\<cdot> z \\<le> y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\\<close>"], ["proof (prove)\nusing this:\n  y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n  \\<le> y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n    y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n          y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>", "by (metis add.commute add_iso)"], ["proof (state)\nthis:\n  (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n  y \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n        y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "finally"], ["proof (chain)\npicking this:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n        y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>", "have \"y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z) \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star> +\n        y\\<^sup>\\<star> \\<cdot> z \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n    \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>", "by (metis add.commute add_idem' add.left_commute distrib_right)"], ["proof (state)\nthis:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"(x + y + z)\\<^sup>\\<infinity> \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y + z)\\<^sup>\\<infinity>\n    \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>", "by (metis star_ref join.sup.mono eq_refl mult_1_left mult_isor iteration_iso)"], ["proof (state)\nthis:\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"... = (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> =\n    (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>", "by (metis add_commute calculation(1) iteration_sep2 local.add_left_comm)"], ["proof (state)\nthis:\n  (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> =\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "moreover"], ["proof (state)\nthis:\n  (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> =\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "have \"... = x\\<^sup>\\<infinity> \\<cdot> (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot> y\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>", "using \\<open>y\\<^sup>\\<star> \\<cdot> z \\<cdot> x \\<le> x \\<cdot> y\\<^sup>\\<star> \\<cdot> z\\<close>"], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> z \\<cdot> x\n  \\<le> x \\<cdot> y\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot>\n    (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n    y\\<^sup>\\<infinity>", "by (metis iteration_sep mult.assoc)"], ["proof (state)\nthis:\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "ultimately"], ["proof (chain)\npicking this:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>\n  (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> =\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>", "have \"(x + y + z)\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  y \\<cdot> (x + y\\<^sup>\\<star> \\<cdot> z)\n  \\<le> (x + y\\<^sup>\\<star> \\<cdot> z) \\<cdot> y\\<^sup>\\<star>\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity>\n  (x + y + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> =\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n  (x + y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot>\n  (y\\<^sup>\\<star> \\<cdot> z)\\<^sup>\\<infinity> \\<cdot>\n  y\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y + z)\\<^sup>\\<infinity>\n    \\<le> x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "by (metis add.commute mult.assoc iteration_denest3)"], ["proof (state)\nthis:\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>y \\<cdot> (0::'a) = (0::'a); z \\<cdot> x = (0::'a);\n     y \\<cdot> x \\<le> (x + z) \\<cdot> y\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> (x + y + z)\\<^sup>\\<infinity> =\n                      x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x + y + z)\\<^sup>\\<infinity>\n  \\<le> x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (x + y + z)\\<^sup>\\<infinity> =\n    x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>", "by (metis add.commute add.left_commute less_eq_def iteration_subdenest)"], ["proof (state)\nthis:\n  (x + y + z)\\<^sup>\\<infinity> =\n  x\\<^sup>\\<infinity> \\<cdot> (y + z)\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Finally, we prove some blocking laws.\\<close>"], ["", "text \\<open>Nitpick refutes the next lemma.\\<close>"], ["", "lemma \"x \\<cdot> y = 0 \\<Longrightarrow> x\\<^sup>\\<infinity> \\<cdot> y = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = (0::'a) \\<Longrightarrow>\n    x\\<^sup>\\<infinity> \\<cdot> y = y", "(*nitpick*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = (0::'a) \\<Longrightarrow>\n    x\\<^sup>\\<infinity> \\<cdot> y = y", "oops"], ["", "lemma iteration_idep: \"x \\<cdot> y = 0 \\<Longrightarrow> x \\<cdot> y\\<^sup>\\<infinity> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y = (0::'a) \\<Longrightarrow>\n    x \\<cdot> y\\<^sup>\\<infinity> = x", "by (metis add_zeror annil iteration_unfoldl_distl)"], ["", "text \\<open>Nitpick refutes the next lemma.\\<close>"], ["", "lemma \"y \\<cdot> w \\<le> x \\<cdot> y + z \\<Longrightarrow> y \\<cdot> w\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> w \\<le> x \\<cdot> y + z \\<Longrightarrow>\n    y \\<cdot> w\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> w \\<le> x \\<cdot> y + z \\<Longrightarrow>\n    y \\<cdot> w\\<^sup>\\<infinity> \\<le> x\\<^sup>\\<infinity> \\<cdot> z", "oops"], ["", "text \\<open>At the end of this file, we consider a data refinement example from von Wright~\\cite{Wright02}.\\<close>"], ["", "lemma data_refinement:\n  assumes \"s' \\<le> s \\<cdot> z\" and \"z \\<cdot> e' \\<le> e\" and \"z \\<cdot> a' \\<le> a \\<cdot> z\" and \"z \\<cdot> b \\<le> z\" and \"b\\<^sup>\\<infinity> = b\\<^sup>\\<star>\"\n  shows \"s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e' \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"z \\<cdot> b\\<^sup>\\<star> \\<le> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> b\\<^sup>\\<star> \\<le> z", "by (metis assms(4) star_inductr_var)"], ["proof (state)\nthis:\n  z \\<cdot> b\\<^sup>\\<star> \\<le> z\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"(z \\<cdot> a') \\<cdot> b\\<^sup>\\<star> \\<le> (a \\<cdot> z) \\<cdot> b\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> a' \\<cdot> b\\<^sup>\\<star>\n    \\<le> a \\<cdot> z \\<cdot> b\\<^sup>\\<star>", "by (metis assms(3) mult.assoc mult_isor)"], ["proof (state)\nthis:\n  z \\<cdot> a' \\<cdot> b\\<^sup>\\<star>\n  \\<le> a \\<cdot> z \\<cdot> b\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "hence \"z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<le>  a\\<^sup>\\<infinity> \\<cdot> z\""], ["proof (prove)\nusing this:\n  z \\<cdot> a' \\<cdot> b\\<^sup>\\<star>\n  \\<le> a \\<cdot> z \\<cdot> b\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity>\n    \\<le> a\\<^sup>\\<infinity> \\<cdot> z", "using \\<open>z \\<cdot> b\\<^sup>\\<star> \\<le> z\\<close>"], ["proof (prove)\nusing this:\n  z \\<cdot> a' \\<cdot> b\\<^sup>\\<star>\n  \\<le> a \\<cdot> z \\<cdot> b\\<^sup>\\<star>\n  z \\<cdot> b\\<^sup>\\<star> \\<le> z\n\ngoal (1 subgoal):\n 1. z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity>\n    \\<le> a\\<^sup>\\<infinity> \\<cdot> z", "by (metis mult.assoc mult_isol order_trans iteration_sim mult.assoc)"], ["proof (state)\nthis:\n  z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity>\n  \\<le> a\\<^sup>\\<infinity> \\<cdot> z\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e' \\<le> s' \\<cdot> b\\<^sup>\\<star> \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n          (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n          e'", "by (metis add.commute assms(5) eq_refl iteration_denest mult.assoc)"], ["proof (state)\nthis:\n  s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n  \\<le> s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "also"], ["proof (state)\nthis:\n  s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n  \\<le> s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"... \\<le> s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n    (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n    e'\n    \\<le> s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n          (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n          e'", "by (metis assms(1) mult_isor)"], ["proof (state)\nthis:\n  s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n  (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n  e'\n  \\<le> s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "also"], ["proof (state)\nthis:\n  s' \\<cdot> b\\<^sup>\\<star> \\<cdot>\n  (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n  e'\n  \\<le> s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"... \\<le> s \\<cdot> z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n    (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n    e'\n    \\<le> s \\<cdot> z \\<cdot>\n          (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n          e'", "using \\<open>z \\<cdot> b\\<^sup>\\<star> \\<le> z\\<close>"], ["proof (prove)\nusing this:\n  z \\<cdot> b\\<^sup>\\<star> \\<le> z\n\ngoal (1 subgoal):\n 1. s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n    (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n    e'\n    \\<le> s \\<cdot> z \\<cdot>\n          (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n          e'", "by (metis mult.assoc mult_isol mult_isor)"], ["proof (state)\nthis:\n  s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n  (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n  e'\n  \\<le> s \\<cdot> z \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "also"], ["proof (state)\nthis:\n  s \\<cdot> z \\<cdot> b\\<^sup>\\<star> \\<cdot>\n  (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n  e'\n  \\<le> s \\<cdot> z \\<cdot>\n        (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n        e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "have \"... \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<cdot> z \\<cdot>\n    (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n    e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'", "using \\<open>z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<le>  a\\<^sup>\\<infinity> \\<cdot> z\\<close>"], ["proof (prove)\nusing this:\n  z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity>\n  \\<le> a\\<^sup>\\<infinity> \\<cdot> z\n\ngoal (1 subgoal):\n 1. s \\<cdot> z \\<cdot>\n    (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n    e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'", "by (metis mult.assoc mult_isol mult_isor)"], ["proof (state)\nthis:\n  s \\<cdot> z \\<cdot> (a' \\<cdot> b\\<^sup>\\<star>)\\<^sup>\\<infinity> \\<cdot>\n  e'\n  \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "finally"], ["proof (chain)\npicking this:\n  s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n  \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'", "show ?thesis"], ["proof (prove)\nusing this:\n  s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n  \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> z \\<cdot> e'\n\ngoal (1 subgoal):\n 1. s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n    \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e", "by (metis assms(2) mult.assoc mult_isol mult.assoc mult_isol order_trans)"], ["proof (state)\nthis:\n  s' \\<cdot> (a' + b)\\<^sup>\\<infinity> \\<cdot> e'\n  \\<le> s \\<cdot> a\\<^sup>\\<infinity> \\<cdot> e\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}