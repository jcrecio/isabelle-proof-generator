{"file_name": "/home/qj213/afp-2021-10-22/thys/Kleene_Algebra/Omega_Algebra.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Kleene_Algebra", "problem_names": ["lemma omega_coinduct_var1: \"y \\<le> 1 + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>\"", "lemma  omega_coinduct_var2: \"y \\<le> x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\"", "lemma omega_coinduct_eq: \"y = z + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\"", "lemma omega_coinduct_eq_var1: \"y = 1 + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>\"", "lemma  omega_coinduct_eq_var2: \"y = x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\"", "lemma \"y = x \\<cdot> y + z \\<Longrightarrow> y = x\\<^sup>\\<star> \\<cdot> z + x\\<^sup>\\<omega>\"", "lemma \"y = 1 + x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega> + x\\<^sup>\\<star>\"", "lemma \"y = x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega>\"", "lemma omega_unfold_eq [simp]: \"x \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma omega_unfold_var: \"z + x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\"", "lemma \"z + x \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\"", "lemma omega_subdist: \"x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\"", "lemma omega_iso: \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\"", "lemma omega_subdist_var: \"x\\<^sup>\\<omega> + y\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\"", "lemma zero_omega [simp]: \"0\\<^sup>\\<omega> = 0\"", "lemma star_omega_1 [simp]: \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma max_element: \"x \\<le> 1\\<^sup>\\<omega>\"", "lemma star_omega_3 [simp]: \"(x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>\"", "lemma omega_1: \"x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>\"", "lemma \"x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>\"", "lemma omega_sup_id: \"1 \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>\"", "lemma omega_top [simp]: \"x\\<^sup>\\<omega> \\<cdot> \\<top> = x\\<^sup>\\<omega>\"", "lemma supid_omega: \"1 \\<le> x \\<Longrightarrow> x\\<^sup>\\<omega> = \\<top>\"", "lemma \"x\\<^sup>\\<omega> = \\<top> \\<Longrightarrow> 1 \\<le> x\"", "lemma omega_simulation: \"z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\"", "lemma \"z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega> \\<cdot> z\"", "lemma \"y \\<cdot> z  \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<omega> \\<le> z \\<cdot> x\\<^sup>\\<omega>\"", "lemma \"y \\<cdot> z  \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<omega> \\<cdot> z \\<le> x\\<^sup>\\<omega>\"", "lemma omega_omega: \"(x\\<^sup>\\<omega>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\"", "lemma wagner_1 [simp]: \"(x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma wagner_2_var: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\"", "lemma wagner_2 [simp]: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> = (x \\<cdot> y)\\<^sup>\\<omega>\"", "lemma wagner_3:\nassumes \"x \\<cdot> (x + y)\\<^sup>\\<omega> + z = (x + y)\\<^sup>\\<omega>\"\nshows \"(x + y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\"", "lemma wagner_1_var [simp]: \"(x\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"", "lemma star_omega_4 [simp]: \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> = 1 + x\\<^sup>\\<omega>\"", "lemma star_omega_5 [simp]: \"x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star> = x\\<^sup>\\<omega>\"", "lemma omega_sum_unfold: \"x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> = (x + y)\\<^sup>\\<omega>\"", "lemma omega_sum_unfold_coind: \"(x + y)\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\"", "lemma omega_sum_unfold_ind: \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\"", "lemma wagner_1_gen: \"(x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\"", "lemma wagner_1_var_gen: \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\"", "lemma omega_denest [simp]: \"(x + y)\\<^sup>\\<omega> = (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\"", "lemma omega_sum_refine:\n  assumes \"y \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\"\n  shows \"(x + y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\"", "lemma bachmair_dershowitz:\n  assumes \"y \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\"\n  shows \"(x + y)\\<^sup>\\<omega> = 0 \\<longleftrightarrow> x\\<^sup>\\<omega> + y\\<^sup>\\<omega> = 0\"", "lemma ewp_super_id1: \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<Longrightarrow> ewp x\"", "lemma \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<longleftrightarrow> ewp x\"", "lemma ewp_neg_and_omega: \"\\<not> ewp x \\<longleftrightarrow> x\\<^sup>\\<omega> = 0\"", "lemma ewp_alt1: \"(\\<forall>z. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> z) \\<longleftrightarrow> (\\<forall>y z. y \\<le> x \\<cdot> y + z \\<longrightarrow> y \\<le> x\\<^sup>\\<star> \\<cdot> z)\"", "lemma ewp_alt: \"x\\<^sup>\\<omega> = 0 \\<longleftrightarrow> (\\<forall>y z. y \\<le> x \\<cdot> y + z \\<longrightarrow> y \\<le> x\\<^sup>\\<star> \\<cdot> z)\"", "lemma omega_super_id1: \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<Longrightarrow> x\\<^sup>\\<omega> \\<noteq> 0\"", "lemma omega_super_id2: \"0 \\<noteq> 1 \\<Longrightarrow> x\\<^sup>\\<omega> = 0 \\<Longrightarrow> \\<not>(1 \\<le> x)\"", "lemma ardens_lemma_var:\n  assumes \"x\\<^sup>\\<omega> = 0\" \n  and \"z + x \\<cdot> y = y\"\n  shows \"x\\<^sup>\\<star> \\<cdot> z = y\"", "lemma ardens_lemma: \"\\<not> ewp x \\<Longrightarrow> z + x \\<cdot> y = y \\<Longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y\"", "lemma ardens_lemma_equiv:\n  assumes \"\\<not> ewp x\"\n  shows \"z + x \\<cdot> y = y \\<longleftrightarrow> x\\<^sup>\\<star> \\<cdot> z = y\"", "lemma ardens_lemma_var_equiv: \"x\\<^sup>\\<omega> = 0 \\<Longrightarrow> (z + x \\<cdot> y = y \\<longleftrightarrow> x\\<^sup>\\<star> \\<cdot> z = y)\"", "lemma arden_conv1: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<Longrightarrow> \\<not> ewp x\"", "lemma arden_conv2: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<Longrightarrow> x\\<^sup>\\<omega> = 0\"", "lemma arden_var3: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<longleftrightarrow> x\\<^sup>\\<omega> = 0\""], "translations": [["", "lemma omega_coinduct_var1: \"y \\<le> 1 + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> (1::'a) + x \\<cdot> y \\<Longrightarrow>\n    y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>", "using local.omega_coinduct"], ["proof (prove)\nusing this:\n  ?y \\<le> ?z + ?x \\<cdot> ?y \\<Longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<omega> + ?x\\<^sup>\\<star> \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. y \\<le> (1::'a) + x \\<cdot> y \\<Longrightarrow>\n    y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>", "by fastforce"], ["", "lemma  omega_coinduct_var2: \"y \\<le> x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>", "by (metis add.commute add_zero_l annir omega_coinduct)"], ["", "lemma omega_coinduct_eq: \"y = z + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = z + x \\<cdot> y \\<Longrightarrow>\n    y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "by (simp add: local.omega_coinduct)"], ["", "lemma omega_coinduct_eq_var1: \"y = 1 + x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = (1::'a) + x \\<cdot> y \\<Longrightarrow>\n    y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star>", "by (simp add: omega_coinduct_var1)"], ["", "lemma  omega_coinduct_eq_var2: \"y = x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = x \\<cdot> y \\<Longrightarrow> y \\<le> x\\<^sup>\\<omega>", "by (simp add: omega_coinduct_var2)"], ["", "lemma \"y = x \\<cdot> y + z \\<Longrightarrow> y = x\\<^sup>\\<star> \\<cdot> z + x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = x \\<cdot> y + z \\<Longrightarrow>\n    y = x\\<^sup>\\<star> \\<cdot> z + x\\<^sup>\\<omega>", "(* nitpick [expect=genuine] -- \"2-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y = x \\<cdot> y + z \\<Longrightarrow>\n    y = x\\<^sup>\\<star> \\<cdot> z + x\\<^sup>\\<omega>", "oops"], ["", "lemma \"y = 1 + x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega> + x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = (1::'a) + x \\<cdot> y \\<Longrightarrow>\n    y = x\\<^sup>\\<omega> + x\\<^sup>\\<star>", "(* nitpick [expect=genuine] -- \"3-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y = (1::'a) + x \\<cdot> y \\<Longrightarrow>\n    y = x\\<^sup>\\<omega> + x\\<^sup>\\<star>", "oops"], ["", "lemma \"y = x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega>", "(* nitpick [expect=genuine] -- \"2-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y = x \\<cdot> y \\<Longrightarrow> y = x\\<^sup>\\<omega>", "oops"], ["", "text \\<open>Next we strengthen the unfold law to an equation.\\<close>"], ["", "lemma omega_unfold_eq [simp]: \"x \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>", "have \"x \\<cdot> x\\<^sup>\\<omega> \\<le> x \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<omega> \\<le> x \\<cdot> x \\<cdot> x\\<^sup>\\<omega>", "by (simp add: local.mult_isol local.omega_unfold mult_assoc)"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<omega> \\<le> x \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>", "thus \"x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x \\<cdot> x\\<^sup>\\<omega> \\<le> x \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by (simp add: mult_assoc omega_coinduct_var2)"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>", "show  \"x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>", "by (fact omega_unfold)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<le> x \\<cdot> x\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_unfold_var: \"z + x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z + x \\<cdot> x\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "by (simp add: local.omega_coinduct)"], ["", "lemma \"z + x \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z + x \\<cdot> x\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "(* nitpick [expect=genuine] -- \"4-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. z + x \\<cdot> x\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "oops"], ["", "text \\<open>We now prove subdistributivity and isotonicity of omega.\\<close>"], ["", "lemma omega_subdist: \"x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "have \"x\\<^sup>\\<omega> \\<le> (x + y) \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x + y) \\<cdot> x\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<le> (x + y) \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<omega> \\<le> (x + y) \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "by (rule omega_coinduct_var2)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma omega_iso: \"x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "by (metis less_eq_def omega_subdist)"], ["", "lemma omega_subdist_var: \"x\\<^sup>\\<omega> + y\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + y\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "by (simp add: omega_iso)"], ["", "lemma zero_omega [simp]: \"0\\<^sup>\\<omega> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a)\\<^sup>\\<omega> = (0::'a)", "by (metis annil omega_unfold_eq)"], ["", "text \\<open>The next lemma is another variant of omega unfold\\<close>"], ["", "lemma star_omega_1 [simp]: \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "have \"x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "thus \"x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "show \"x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "using local.star_inductl_var_eq2"], ["proof (prove)\nusing this:\n  ?y = ?x \\<cdot> ?y \\<Longrightarrow> ?y = ?x\\<^sup>\\<star> \\<cdot> ?y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma says that~@{term \"1\\<^sup>\\<omega>\"} is the maximal element\nof omega algebra. We therefore baptise it~$\\top$.\\<close>"], ["", "lemma max_element: \"x \\<le> 1\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (1::'a)\\<^sup>\\<omega>", "by (simp add: omega_coinduct_eq_var2)"], ["", "definition top (\"\\<top>\")\n  where \"\\<top> = 1\\<^sup>\\<omega>\""], ["", "lemma star_omega_3 [simp]: \"(x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>", "have \"1 \\<le> x\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x\\<^sup>\\<star>", "by (fact star_ref)"], ["proof (state)\nthis:\n  (1::'a) \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>", "hence \"\\<top> \\<le> (x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (1::'a) \\<le> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<top> \\<le> (x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (simp add: omega_iso top_def)"], ["proof (state)\nthis:\n  \\<top> \\<le> (x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<top> \\<le> (x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>", "by (simp add: local.order.antisym max_element top_def)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star>)\\<^sup>\\<omega> = \\<top>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The following lemma is strange since it is counterintuitive\nthat one should be able to append something after an infinite\niteration.\\<close>"], ["", "lemma omega_1: \"x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>", "have \"x\\<^sup>\\<omega> \\<cdot> y \\<le> x \\<cdot> x\\<^sup>\\<omega> \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y \\<le> x \\<cdot> x\\<^sup>\\<omega> \\<cdot> y", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<cdot> y \\<le> x \\<cdot> x\\<^sup>\\<omega> \\<cdot> y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<omega> \\<cdot> y \\<le> x \\<cdot> x\\<^sup>\\<omega> \\<cdot> y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>", "by (metis mult.assoc omega_coinduct_var2)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<cdot> y \\<le> x\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \"x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>", "(*nitpick [expect=genuine] -- \"2-element counterexample\"*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>", "oops"], ["", "lemma omega_sup_id: \"1 \\<le> y \\<Longrightarrow> x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> y \\<Longrightarrow>\n    x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>", "using local.eq_iff local.mult_isol omega_1"], ["proof (prove)\nusing this:\n  (?x = ?y) = (?x \\<le> ?y \\<and> ?y \\<le> ?x)\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n  ?x\\<^sup>\\<omega> \\<cdot> ?y \\<le> ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (1::'a) \\<le> y \\<Longrightarrow>\n    x\\<^sup>\\<omega> \\<cdot> y = x\\<^sup>\\<omega>", "by fastforce"], ["", "lemma omega_top [simp]: \"x\\<^sup>\\<omega> \\<cdot> \\<top> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> \\<top> = x\\<^sup>\\<omega>", "by (simp add: max_element omega_sup_id top_def)"], ["", "lemma supid_omega: \"1 \\<le> x \\<Longrightarrow> x\\<^sup>\\<omega> = \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<le> x \\<Longrightarrow> x\\<^sup>\\<omega> = \\<top>", "by (simp add: local.order.antisym max_element omega_iso top_def)"], ["", "lemma \"x\\<^sup>\\<omega> = \\<top> \\<Longrightarrow> 1 \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = \\<top> \\<Longrightarrow> (1::'a) \\<le> x", "(* nitpick [expect=genuine] -- \"4-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = \\<top> \\<Longrightarrow> (1::'a) \\<le> x", "oops"], ["", "text \\<open>Next we prove a simulation law for the omega operation\\<close>"], ["", "lemma omega_simulation: \"z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "assume hyp: \"z \\<cdot> x \\<le> y \\<cdot> z\""], ["proof (state)\nthis:\n  z \\<cdot> x \\<le> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "have \"z \\<cdot> x\\<^sup>\\<omega> = z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x\\<^sup>\\<omega> = z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>", "by (simp add: mult_assoc)"], ["proof (state)\nthis:\n  z \\<cdot> x\\<^sup>\\<omega> = z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  z \\<cdot> x\\<^sup>\\<omega> = z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "have \"... \\<le> y \\<cdot> z \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n    \\<le> y \\<cdot> z \\<cdot> x\\<^sup>\\<omega>", "by (simp add: hyp local.mult_isor)"], ["proof (state)\nthis:\n  z \\<cdot> x \\<cdot> x\\<^sup>\\<omega>\n  \\<le> y \\<cdot> z \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "finally"], ["proof (chain)\npicking this:\n  z \\<cdot> x\\<^sup>\\<omega> \\<le> y \\<cdot> z \\<cdot> x\\<^sup>\\<omega>", "show \"z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  z \\<cdot> x\\<^sup>\\<omega> \\<le> y \\<cdot> z \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>", "by (simp add: mult_assoc omega_coinduct_var2)"], ["proof (state)\nthis:\n  z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \"z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow> z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega> \\<cdot> z", "(* nitpick [expect=genuine] -- \"4-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> y \\<cdot> z \\<Longrightarrow>\n    z \\<cdot> x\\<^sup>\\<omega> \\<le> y\\<^sup>\\<omega> \\<cdot> z", "oops"], ["", "lemma \"y \\<cdot> z  \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<omega> \\<le> z \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<omega> \\<le> z \\<cdot> x\\<^sup>\\<omega>", "(* nitpick [expect=genuine] -- \"2-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<omega> \\<le> z \\<cdot> x\\<^sup>\\<omega>", "oops"], ["", "lemma \"y \\<cdot> z  \\<le> z \\<cdot> x \\<Longrightarrow> y\\<^sup>\\<omega> \\<cdot> z \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<omega> \\<cdot> z \\<le> x\\<^sup>\\<omega>", "(* nitpick [expect=genuine] -- \"4-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> z \\<le> z \\<cdot> x \\<Longrightarrow>\n    y\\<^sup>\\<omega> \\<cdot> z \\<le> x\\<^sup>\\<omega>", "oops"], ["", "text \\<open>Next we prove transitivity of omega elements.\\<close>"], ["", "lemma omega_omega: \"(x\\<^sup>\\<omega>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by (metis omega_1 omega_unfold_eq)"], ["", "(*\nlemma \"x\\<^sup>\\<omega> \\<cdot> x\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"\nnitpick -- \"no proof, no counterexample\"\n\nlemma \"(x\\<^sup>\\<omega>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\"\nnitpick -- \"no proof, no counterexample\"\n*)"], ["", "text \\<open>The next lemmas are axioms of Wagner's complete axiomatisation\nfor omega-regular languages~\\cite{Wagner77omega}, but in a slightly\ndifferent setting.\\<close>"], ["", "lemma wagner_1 [simp]: \"(x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "have \"(x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> = x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n    x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (metis mult.assoc omega_unfold_eq)"], ["proof (state)\nthis:\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "have \"... = x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n    x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (simp add: local.star_slide_var mult_assoc)"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  x \\<cdot> x\\<^sup>\\<star> \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "have \"... = x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n    x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (simp add: mult_assoc)"], ["proof (state)\nthis:\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "have \"... = x \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n    (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n    x \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (simp add: mult_assoc)"], ["proof (state)\nthis:\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "thus \"(x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "using calculation omega_coinduct_eq_var2"], ["proof (prove)\nusing this:\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> =\n  x \\<cdot> x \\<cdot> x\\<^sup>\\<star> \\<cdot>\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n  ?y = ?x \\<cdot> ?y \\<Longrightarrow> ?y \\<le> ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>", "by auto"], ["proof (state)\nthis:\n  (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "show \"x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by (simp add: mult_assoc omega_coinduct_eq_var2)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<le> (x \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wagner_2_var: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>", "have \"x \\<cdot> y \\<cdot> x \\<le> x \\<cdot> y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> y \\<cdot> x \\<le> x \\<cdot> y \\<cdot> x", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> y \\<cdot> x \\<le> x \\<cdot> y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>", "thus \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x \\<cdot> y \\<cdot> x \\<le> x \\<cdot> y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>", "by (simp add: mult_assoc omega_simulation)"], ["proof (state)\nthis:\n  x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wagner_2 [simp]: \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> = (x \\<cdot> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> = (x \\<cdot> y)\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\n 2. (x \\<cdot> y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>", "show \"x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n    \\<le> (x \\<cdot> y)\\<^sup>\\<omega>", "by (rule wagner_2_var)"], ["proof (state)\nthis:\n  x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega> \\<le> (x \\<cdot> y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>", "have \"(x \\<cdot> y)\\<^sup>\\<omega> = x \\<cdot> y \\<cdot> (x \\<cdot> y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y)\\<^sup>\\<omega> =\n    x \\<cdot> y \\<cdot> (x \\<cdot> y)\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  (x \\<cdot> y)\\<^sup>\\<omega> =\n  x \\<cdot> y \\<cdot> (x \\<cdot> y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>", "thus \"(x \\<cdot> y)\\<^sup>\\<omega> \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (x \\<cdot> y)\\<^sup>\\<omega> =\n  x \\<cdot> y \\<cdot> (x \\<cdot> y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>", "by (metis mult.assoc mult_isol wagner_2_var)"], ["proof (state)\nthis:\n  (x \\<cdot> y)\\<^sup>\\<omega> \\<le> x \\<cdot> (y \\<cdot> x)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThis identity is called~(A8) in Wagner's paper.\n\\<close>"], ["", "lemma wagner_3:\nassumes \"x \\<cdot> (x + y)\\<^sup>\\<omega> + z = (x + y)\\<^sup>\\<omega>\"\nshows \"(x + y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y)\\<^sup>\\<omega>", "show  \"(x + y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "using assms local.join.sup_commute omega_coinduct_eq"], ["proof (prove)\nusing this:\n  x \\<cdot> (x + y)\\<^sup>\\<omega> + z = (x + y)\\<^sup>\\<omega>\n  ?x + ?y = ?y + ?x\n  ?y = ?z + ?x \\<cdot> ?y \\<Longrightarrow>\n  ?y \\<le> ?x\\<^sup>\\<omega> + ?x\\<^sup>\\<star> \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>", "using assms local.join.sup_commute local.star_inductl_eq"], ["proof (prove)\nusing this:\n  x \\<cdot> (x + y)\\<^sup>\\<omega> + z = (x + y)\\<^sup>\\<omega>\n  ?x + ?y = ?y + ?x\n  ?z + ?x \\<cdot> ?y = ?y \\<Longrightarrow>\n  ?x\\<^sup>\\<star> \\<cdot> ?z \\<le> ?y\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y)\\<^sup>\\<omega>", "thus \"x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n    \\<le> (x + y)\\<^sup>\\<omega>", "by (simp add: omega_subdist)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThis identity is called~(R4) in Wagner's paper.\n\\<close>"], ["", "lemma wagner_1_var [simp]: \"(x\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> x)\\<^sup>\\<omega> = x\\<^sup>\\<omega>", "by (simp add: local.star_slide_var)"], ["", "lemma star_omega_4 [simp]: \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> = 1 + x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> = (1::'a) + x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>\n 2. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "have \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> = 1 + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> =\n    (1::'a) + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega>)\\<^sup>\\<star> =\n  (1::'a) + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>\n 2. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega>)\\<^sup>\\<star> =\n  (1::'a) + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>\n 2. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "have \"... \\<le> 1 + x\\<^sup>\\<omega> \\<cdot> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n    \\<le> (1::'a) + x\\<^sup>\\<omega> \\<cdot> \\<top>", "by (simp add: omega_sup_id)"], ["proof (state)\nthis:\n  (1::'a) + x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n  \\<le> (1::'a) + x\\<^sup>\\<omega> \\<cdot> \\<top>\n\ngoal (2 subgoals):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>\n 2. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "finally"], ["proof (chain)\npicking this:\n  (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n  \\<le> (1::'a) + x\\<^sup>\\<omega> \\<cdot> \\<top>", "show \"(x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> 1 + x\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n  \\<le> (1::'a) + x\\<^sup>\\<omega> \\<cdot> \\<top>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> (1::'a) + x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "show \"1 + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  (1::'a) + x\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma star_omega_5 [simp]: \"x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star> = x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star> =\n    x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n    \\<le> x\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "show \"x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star> \\<le> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n    \\<le> x\\<^sup>\\<omega>", "by (rule omega_1)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n  \\<le> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "show \"x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>", "by (simp add: omega_sup_id)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega>\n  \\<le> x\\<^sup>\\<omega> \\<cdot> (x\\<^sup>\\<omega>)\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next law shows how omegas below a sum can be unfolded.\\<close>"], ["", "lemma omega_sum_unfold: \"x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> = (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> +\n    x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> =\n    (x + y)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> +\n    x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> =\n    (x + y)\\<^sup>\\<omega>", "have \"(x + y)\\<^sup>\\<omega> = x \\<cdot> (x + y)\\<^sup>\\<omega> + y \\<cdot> (x+y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega> =\n    x \\<cdot> (x + y)\\<^sup>\\<omega> + y \\<cdot> (x + y)\\<^sup>\\<omega>", "by (metis distrib_right omega_unfold_eq)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega> =\n  x \\<cdot> (x + y)\\<^sup>\\<omega> + y \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> +\n    x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> =\n    (x + y)\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<omega> =\n  x \\<cdot> (x + y)\\<^sup>\\<omega> + y \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> +\n    x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> =\n    (x + y)\\<^sup>\\<omega>", "by (metis mult.assoc wagner_3)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> +\n  x\\<^sup>\\<star> \\<cdot> y \\<cdot> (x + y)\\<^sup>\\<omega> =\n  (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\nThe next two lemmas apply induction and coinduction to this law.\n\\<close>"], ["", "lemma omega_sum_unfold_coind: \"(x + y)\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n          (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "by (simp add: omega_coinduct_eq omega_sum_unfold)"], ["", "lemma omega_sum_unfold_ind: \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "by (simp add: local.star_inductl_eq omega_sum_unfold)"], ["", "lemma wagner_1_gen: \"(x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "have \"(x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> ((x + y) \\<cdot> (x + y)\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega>\n    \\<le> ((x + y) \\<cdot> (x + y)\\<^sup>\\<star>)\\<^sup>\\<omega>", "using local.join.le_sup_iff local.join.sup.cobounded1 local.mult_isol_var local.star_subdist_var omega_iso"], ["proof (prove)\nusing this:\n  (?x + ?y \\<le> ?z) = (?x \\<le> ?z \\<and> ?y \\<le> ?z)\n  ?a \\<le> ?a + ?b\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> ?v \\<le> ?x \\<cdot> ?y\n  ?x\\<^sup>\\<star> + ?y\\<^sup>\\<star> \\<le> (?x + ?y)\\<^sup>\\<star>\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>\\<omega> \\<le> ?y\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega>\n    \\<le> ((x + y) \\<cdot> (x + y)\\<^sup>\\<star>)\\<^sup>\\<omega>", "by presburger"], ["proof (state)\nthis:\n  (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega>\n  \\<le> ((x + y) \\<cdot> (x + y)\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega>\n  \\<le> ((x + y) \\<cdot> (x + y)\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "by (metis wagner_1)"], ["proof (state)\nthis:\n  (x \\<cdot> y\\<^sup>\\<star>)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wagner_1_var_gen: \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "have \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> = x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> =\n    x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> =\n  x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> =\n  x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "have \"... \\<le> x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "by (metis add.commute mult_isol wagner_1_gen)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n  \\<le> x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> (y \\<cdot> x\\<^sup>\\<star>)\\<^sup>\\<omega>\n  \\<le> x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "have \"... \\<le> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "using local.mult_isor local.star_subdist"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n  ?x\\<^sup>\\<star> \\<le> (?x + ?y)\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "by auto"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "by (metis calculation order_trans star_omega_1)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma is a variant of the denest law for the star at\nthe level of omega.\\<close>"], ["", "lemma omega_denest [simp]: \"(x + y)\\<^sup>\\<omega> = (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega> =\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n          (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n 2. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "show \"(x + y)\\<^sup>\\<omega> \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n          (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>", "by (rule omega_sum_unfold_coind)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega>\n  \\<le> (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n        (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le>  (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>", "by (rule wagner_1_var_gen)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "hence \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "by (simp add: omega_sum_unfold_ind)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "thus \"(x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> + (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n    (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "by (simp add: wagner_1_var_gen)"], ["proof (state)\nthis:\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<omega> +\n  (x\\<^sup>\\<star> \\<cdot> y)\\<^sup>\\<star> \\<cdot> x\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemma yields a separation theorem for infinite\niteration in the presence of a quasicommutation property. A\nnondeterministic loop over~@{term x} and~@{term y} can be refined into\nseparate infinite loops over~@{term x} and~@{term y}.\\<close>"], ["", "lemma omega_sum_refine:\n  assumes \"y \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\"\n  shows \"(x + y)\\<^sup>\\<omega> = x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega> =\n    x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have a: \"y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>", "using assms local.quasicomm_var"], ["proof (prove)\nusing this:\n  y \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n  (?y \\<cdot> ?x \\<le> ?x \\<cdot> (?x + ?y)\\<^sup>\\<star>) =\n  (?y\\<^sup>\\<star> \\<cdot> ?x \\<le> ?x \\<cdot> (?x + ?y)\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"(x + y)\\<^sup>\\<omega> = y\\<^sup>\\<omega> + y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega> =\n    y\\<^sup>\\<omega> +\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>", "by (metis add.commute omega_sum_unfold)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega> =\n  y\\<^sup>\\<omega> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega> =\n  y\\<^sup>\\<omega> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"... \\<le> y\\<^sup>\\<omega> + x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> +\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> y\\<^sup>\\<omega> +\n          x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "using a local.join.sup_mono local.mult_isol_var"], ["proof (prove)\nusing this:\n  y\\<^sup>\\<star> \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\n  \\<lbrakk>?a \\<le> ?c; ?b \\<le> ?d\\<rbrakk>\n  \\<Longrightarrow> ?a + ?b \\<le> ?c + ?d\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> ?v \\<le> ?x \\<cdot> ?y\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> +\n    y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> y\\<^sup>\\<omega> +\n          x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "by blast"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n  \\<le> y\\<^sup>\\<omega> +\n        x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "also"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> +\n  y\\<^sup>\\<star> \\<cdot> x \\<cdot> (x + y)\\<^sup>\\<omega>\n  \\<le> y\\<^sup>\\<omega> +\n        x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"... \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> +\n    x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>", "using local.eq_refl local.join.sup_commute mult_assoc star_omega_1"], ["proof (prove)\nusing this:\n  ?x = ?y \\<Longrightarrow> ?x \\<le> ?y\n  ?x + ?y = ?y + ?x\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n  ?x\\<^sup>\\<star> \\<cdot> ?x\\<^sup>\\<omega> = ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. y\\<^sup>\\<omega> +\n    x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n    \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>", "by presburger"], ["proof (state)\nthis:\n  y\\<^sup>\\<omega> +\n  x \\<cdot> (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n 2. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "finally"], ["proof (chain)\npicking this:\n  (x + y)\\<^sup>\\<omega>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>", "show \"(x + y)\\<^sup>\\<omega> \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (x + y)\\<^sup>\\<omega>\n  \\<le> x \\<cdot> (x + y)\\<^sup>\\<omega> + y\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (x + y)\\<^sup>\\<omega>\n    \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>", "by (metis add_commute local.omega_coinduct)"], ["proof (state)\nthis:\n  (x + y)\\<^sup>\\<omega>\n  \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "have \"x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega> + (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega> +\n          (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "using local.join.sup.cobounded2 local.join.sup.mono local.mult_isol_var local.star_subdist omega_iso omega_subdist"], ["proof (prove)\nusing this:\n  ?b \\<le> ?a + ?b\n  \\<lbrakk>?c \\<le> ?a; ?d \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?c + ?d \\<le> ?a + ?b\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> ?v \\<le> ?x \\<cdot> ?y\n  ?x\\<^sup>\\<star> \\<le> (?x + ?y)\\<^sup>\\<star>\n  ?x \\<le> ?y \\<Longrightarrow> ?x\\<^sup>\\<omega> \\<le> ?y\\<^sup>\\<omega>\n  ?x\\<^sup>\\<omega> \\<le> (?x + ?y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega> +\n          (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>", "by presburger"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega> +\n        (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "thus \"x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega> \\<le> (x + y)\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega> +\n        (x + y)\\<^sup>\\<star> \\<cdot> (x + y)\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n    \\<le> (x + y)\\<^sup>\\<omega>", "by (metis local.join.sup_idem star_omega_1)"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> y\\<^sup>\\<omega>\n  \\<le> (x + y)\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The following theorem by Bachmair and\nDershowitz~\\cite{bachmair86commutation} is a corollary.\\<close>"], ["", "lemma bachmair_dershowitz:\n  assumes \"y \\<cdot> x \\<le> x \\<cdot> (x + y)\\<^sup>\\<star>\"\n  shows \"(x + y)\\<^sup>\\<omega> = 0 \\<longleftrightarrow> x\\<^sup>\\<omega> + y\\<^sup>\\<omega> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x + y)\\<^sup>\\<omega> = (0::'a)) =\n    (x\\<^sup>\\<omega> + y\\<^sup>\\<omega> = (0::'a))", "by (metis add_commute assms local.annir local.join.le_bot local.no_trivial_inverse omega_subdist omega_sum_refine)"], ["", "text \\<open>\nThe next lemmas consider an abstract variant of the empty word\nproperty from language theory and match it with the absence of\ninfinite iteration~\\cite{struth12regeq}.\n\\<close>"], ["", "definition (in dioid_one_zero) ewp\nwhere \"ewp x \\<equiv> \\<not>(\\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = 0)\""], ["", "lemma ewp_super_id1: \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<Longrightarrow> ewp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<noteq> (1::'a); (1::'a) \\<le> x\\<rbrakk>\n    \\<Longrightarrow> ewp x", "by (metis ewp_def mult_oner)"], ["", "lemma \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<longleftrightarrow> ewp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<noteq> (1::'a) \\<Longrightarrow> ((1::'a) \\<le> x) = ewp x", "(* nitpick [expect=genuine] -- \"3-element counterexample\" *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) \\<noteq> (1::'a) \\<Longrightarrow> ((1::'a) \\<le> x) = ewp x", "oops"], ["", "text \\<open>The next facts relate the absence of the empty word property\nwith the absence of infinite iteration.\\<close>"], ["", "lemma ewp_neg_and_omega: \"\\<not> ewp x \\<longleftrightarrow> x\\<^sup>\\<omega> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<not> ewp x) = (x\\<^sup>\\<omega> = (0::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<not> ewp x \\<Longrightarrow> x\\<^sup>\\<omega> = (0::'a)\n 2. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "assume \"\\<not> ewp x\""], ["proof (state)\nthis:\n  \\<not> ewp x\n\ngoal (2 subgoals):\n 1. \\<not> ewp x \\<Longrightarrow> x\\<^sup>\\<omega> = (0::'a)\n 2. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "hence \"\\<forall> y. y \\<le> x \\<cdot> y \\<longrightarrow> y = 0\""], ["proof (prove)\nusing this:\n  \\<not> ewp x\n\ngoal (1 subgoal):\n 1. \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)", "by (meson ewp_def)"], ["proof (state)\nthis:\n  \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)\n\ngoal (2 subgoals):\n 1. \\<not> ewp x \\<Longrightarrow> x\\<^sup>\\<omega> = (0::'a)\n 2. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "thus \"x\\<^sup>\\<omega> = 0\""], ["proof (prove)\nusing this:\n  \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a)", "by simp"], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> = (0::'a)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "assume \"x\\<^sup>\\<omega> = 0\""], ["proof (state)\nthis:\n  x\\<^sup>\\<omega> = (0::'a)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "hence \"\\<forall> y. y \\<le> x \\<cdot> y \\<longrightarrow> y = 0\""], ["proof (prove)\nusing this:\n  x\\<^sup>\\<omega> = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)", "using local.join.le_bot local.omega_coinduct_var2"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<omega> = (0::'a)\n  ?a \\<le> (0::'a) \\<Longrightarrow> ?a = (0::'a)\n  ?y \\<le> ?x \\<cdot> ?y \\<Longrightarrow> ?y \\<le> ?x\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)", "by blast"], ["proof (state)\nthis:\n  \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow> \\<not> ewp x", "thus \"\\<not> ewp x\""], ["proof (prove)\nusing this:\n  \\<forall>y. y \\<le> x \\<cdot> y \\<longrightarrow> y = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> ewp x", "by (meson ewp_def)"], ["proof (state)\nthis:\n  \\<not> ewp x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ewp_alt1: \"(\\<forall>z. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> z) \\<longleftrightarrow> (\\<forall>y z. y \\<le> x \\<cdot> y + z \\<longrightarrow> y \\<le> x\\<^sup>\\<star> \\<cdot> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>z. x\\<^sup>\\<omega> \\<le> x\\<^sup>\\<star> \\<cdot> z) =\n    (\\<forall>y z.\n        y \\<le> x \\<cdot> y + z \\<longrightarrow>\n        y \\<le> x\\<^sup>\\<star> \\<cdot> z)", "by (metis add_comm less_eq_def omega_coinduct omega_unfold_eq order_prop)"], ["", "lemma ewp_alt: \"x\\<^sup>\\<omega> = 0 \\<longleftrightarrow> (\\<forall>y z. y \\<le> x \\<cdot> y + z \\<longrightarrow> y \\<le> x\\<^sup>\\<star> \\<cdot> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x\\<^sup>\\<omega> = (0::'a)) =\n    (\\<forall>y z.\n        y \\<le> x \\<cdot> y + z \\<longrightarrow>\n        y \\<le> x\\<^sup>\\<star> \\<cdot> z)", "by (metis annir antisym ewp_alt1 join.bot_least)"], ["", "text \\<open>So we have obtained a condition for Arden's lemma in omega\nalgebra.\\<close>"], ["", "lemma omega_super_id1: \"0 \\<noteq> 1 \\<Longrightarrow> 1 \\<le> x \\<Longrightarrow> x\\<^sup>\\<omega> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<noteq> (1::'a); (1::'a) \\<le> x\\<rbrakk>\n    \\<Longrightarrow> x\\<^sup>\\<omega> \\<noteq> (0::'a)", "using ewp_neg_and_omega ewp_super_id1"], ["proof (prove)\nusing this:\n  (\\<not> ewp ?x) = (?x\\<^sup>\\<omega> = (0::'a))\n  \\<lbrakk>(0::'a) \\<noteq> (1::'a); (1::'a) \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ewp ?x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<noteq> (1::'a); (1::'a) \\<le> x\\<rbrakk>\n    \\<Longrightarrow> x\\<^sup>\\<omega> \\<noteq> (0::'a)", "by blast"], ["", "lemma omega_super_id2: \"0 \\<noteq> 1 \\<Longrightarrow> x\\<^sup>\\<omega> = 0 \\<Longrightarrow> \\<not>(1 \\<le> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<noteq> (1::'a); x\\<^sup>\\<omega> = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<not> (1::'a) \\<le> x", "using omega_super_id1"], ["proof (prove)\nusing this:\n  \\<lbrakk>(0::'a) \\<noteq> (1::'a); (1::'a) \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x\\<^sup>\\<omega> \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(0::'a) \\<noteq> (1::'a); x\\<^sup>\\<omega> = (0::'a)\\<rbrakk>\n    \\<Longrightarrow> \\<not> (1::'a) \\<le> x", "by blast"], ["", "text \\<open>The next lemmas are abstract versions of Arden's lemma from\nlanguage theory.\\<close>"], ["", "lemma ardens_lemma_var:\n  assumes \"x\\<^sup>\\<omega> = 0\" \n  and \"z + x \\<cdot> y = y\"\n  shows \"x\\<^sup>\\<star> \\<cdot> z = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z = y", "have \"y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z", "by (simp add: assms(2) local.omega_coinduct_eq)"], ["proof (state)\nthis:\n  y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z = y", "hence \"y \\<le> x\\<^sup>\\<star> \\<cdot> z\""], ["proof (prove)\nusing this:\n  y \\<le> x\\<^sup>\\<omega> + x\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. y \\<le> x\\<^sup>\\<star> \\<cdot> z", "by (simp add: assms(1))"], ["proof (state)\nthis:\n  y \\<le> x\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z = y", "thus \"x\\<^sup>\\<star> \\<cdot> z = y\""], ["proof (prove)\nusing this:\n  y \\<le> x\\<^sup>\\<star> \\<cdot> z\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> z = y", "by (simp add: assms(2) local.eq_iff local.star_inductl_eq)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> z = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ardens_lemma: \"\\<not> ewp x \\<Longrightarrow> z + x \\<cdot> y = y \\<Longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<not> ewp x; z + x \\<cdot> y = y\\<rbrakk>\n    \\<Longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y", "by (simp add: ardens_lemma_var ewp_neg_and_omega)"], ["", "lemma ardens_lemma_equiv:\n  assumes \"\\<not> ewp x\"\n  shows \"z + x \\<cdot> y = y \\<longleftrightarrow> x\\<^sup>\\<star> \\<cdot> z = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (z + x \\<cdot> y = y) = (x\\<^sup>\\<star> \\<cdot> z = y)", "by (metis ardens_lemma_var assms ewp_neg_and_omega local.conway.dagger_unfoldl_distr mult_assoc)"], ["", "lemma ardens_lemma_var_equiv: \"x\\<^sup>\\<omega> = 0 \\<Longrightarrow> (z + x \\<cdot> y = y \\<longleftrightarrow> x\\<^sup>\\<star> \\<cdot> z = y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>\\<omega> = (0::'a) \\<Longrightarrow>\n    (z + x \\<cdot> y = y) = (x\\<^sup>\\<star> \\<cdot> z = y)", "by (simp add: ardens_lemma_equiv ewp_neg_and_omega)"], ["", "lemma arden_conv1: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<Longrightarrow> \\<not> ewp x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       z + x \\<cdot> y = y \\<longrightarrow>\n       x\\<^sup>\\<star> \\<cdot> z = y \\<Longrightarrow>\n    \\<not> ewp x", "by (metis add_zero_l annir ewp_neg_and_omega omega_unfold_eq)"], ["", "lemma arden_conv2: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<Longrightarrow> x\\<^sup>\\<omega> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       z + x \\<cdot> y = y \\<longrightarrow>\n       x\\<^sup>\\<star> \\<cdot> z = y \\<Longrightarrow>\n    x\\<^sup>\\<omega> = (0::'a)", "using arden_conv1 ewp_neg_and_omega"], ["proof (prove)\nusing this:\n  \\<forall>y z.\n     z + ?x \\<cdot> y = y \\<longrightarrow>\n     ?x\\<^sup>\\<star> \\<cdot> z = y \\<Longrightarrow>\n  \\<not> ewp ?x\n  (\\<not> ewp ?x) = (?x\\<^sup>\\<omega> = (0::'a))\n\ngoal (1 subgoal):\n 1. \\<forall>y z.\n       z + x \\<cdot> y = y \\<longrightarrow>\n       x\\<^sup>\\<star> \\<cdot> z = y \\<Longrightarrow>\n    x\\<^sup>\\<omega> = (0::'a)", "by blast"], ["", "lemma arden_var3: \"(\\<forall>y z. z + x \\<cdot> y = y \\<longrightarrow> x\\<^sup>\\<star> \\<cdot> z = y) \\<longleftrightarrow> x\\<^sup>\\<omega> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>y z.\n        z + x \\<cdot> y = y \\<longrightarrow>\n        x\\<^sup>\\<star> \\<cdot> z = y) =\n    (x\\<^sup>\\<omega> = (0::'a))", "using arden_conv2 ardens_lemma_var"], ["proof (prove)\nusing this:\n  \\<forall>y z.\n     z + ?x \\<cdot> y = y \\<longrightarrow>\n     ?x\\<^sup>\\<star> \\<cdot> z = y \\<Longrightarrow>\n  ?x\\<^sup>\\<omega> = (0::'a)\n  \\<lbrakk>?x\\<^sup>\\<omega> = (0::'a); ?z + ?x \\<cdot> ?y = ?y\\<rbrakk>\n  \\<Longrightarrow> ?x\\<^sup>\\<star> \\<cdot> ?z = ?y\n\ngoal (1 subgoal):\n 1. (\\<forall>y z.\n        z + x \\<cdot> y = y \\<longrightarrow>\n        x\\<^sup>\\<star> \\<cdot> z = y) =\n    (x\\<^sup>\\<omega> = (0::'a))", "by blast"], ["", "end"], ["", "subsection \\<open>Omega Algebras\\<close>"], ["", "class omega_algebra = kleene_algebra + left_omega_algebra"], ["", "end"]]}