{"file_name": "/home/qj213/afp-2021-10-22/thys/LocalLexing/Validity.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LocalLexing", "problem_names": ["lemma is_word_terminals: \"wellformed_tokens p \\<Longrightarrow> is_word (terminals p)\"", "lemma is_word_subset: \"is_word x \\<Longrightarrow> set y \\<subseteq> set x \\<Longrightarrow> is_word y\"", "lemma is_word_terminals_take: \"wellformed_tokens p \\<Longrightarrow> is_word(terminals (take n p))\"", "lemma is_word_terminals_drop: \"wellformed_tokens p \\<Longrightarrow> is_word(terminals (drop n p))\"", "lemma \"wellformed_items (Gen P)\"", "lemma \"wellformed_items (Init)\"", "lemma pvalid_left: \"pvalid p x = pvalid_left p x\"", "lemma \\<L>\\<^sub>P_wellformed_tokens: \"terminals p \\<in> \\<L>\\<^sub>P \\<Longrightarrow> wellformed_tokens p\""], "translations": [["", "lemma is_word_terminals: \"wellformed_tokens p \\<Longrightarrow> is_word (terminals p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed_tokens p \\<Longrightarrow> is_word (terminals p)", "by (simp add: is_word_def list_all_length terminals_def wellformed_token_def wellformed_tokens_def)"], ["", "lemma is_word_subset: \"is_word x \\<Longrightarrow> set y \\<subseteq> set x \\<Longrightarrow> is_word y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_word x; set y \\<subseteq> set x\\<rbrakk>\n    \\<Longrightarrow> is_word y", "by (metis (mono_tags, hide_lams) in_set_conv_nth is_word_def list_all_length subsetCE)"], ["", "lemma is_word_terminals_take: \"wellformed_tokens p \\<Longrightarrow> is_word(terminals (take n p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed_tokens p \\<Longrightarrow> is_word (terminals (take n p))", "by (metis append_take_drop_id is_word_terminals list_all_append wellformed_tokens_def)"], ["", "lemma is_word_terminals_drop: \"wellformed_tokens p \\<Longrightarrow> is_word(terminals (drop n p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed_tokens p \\<Longrightarrow> is_word (terminals (drop n p))", "by (metis append_take_drop_id is_word_terminals list_all_append wellformed_tokens_def)"], ["", "definition pvalid :: \"tokens \\<Rightarrow> item \\<Rightarrow> bool\"\nwhere\n  \"pvalid p x = (\\<exists> u \\<gamma>.\n     wellformed_tokens p \\<and>\n     wellformed_item x \\<and>\n     u \\<le> length p \\<and>\n     charslength p = item_end x \\<and>\n     charslength (take u p) = item_origin x \\<and>\n     is_derivation (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n     derives (item_\\<alpha> x) (terminals (drop u p)))\""], ["", "definition Gen :: \"tokens set \\<Rightarrow> items\"\nwhere\n  \"Gen P = { x | x p. p \\<in> P \\<and> pvalid p x }\""], ["", "lemma \"wellformed_items (Gen P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed_items (Gen P)", "by (auto simp add: Gen_def pvalid_def wellformed_items_def)"], ["", "lemma \"wellformed_items (Init)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wellformed_items Init", "by (auto simp add: wellformed_items_def Init_def init_item_def wellformed_item_def)"], ["", "definition pvalid_left :: \"tokens \\<Rightarrow> item \\<Rightarrow> bool\"\nwhere\n  \"pvalid_left p x = (\\<exists> u \\<gamma>.\n     wellformed_tokens p \\<and>\n     wellformed_item x \\<and>\n     u \\<le> length p \\<and>\n     charslength p = item_end x \\<and>\n     charslength (take u p) = item_origin x \\<and>\n     is_leftderivation (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n     leftderives (item_\\<alpha> x) (terminals (drop u p)))\""], ["", "lemma pvalid_left: \"pvalid p x = pvalid_left p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pvalid p x = pvalid_left p x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pvalid p x = pvalid_left p x", "have right_imp_left: \"pvalid_left p x \\<Longrightarrow> pvalid p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pvalid_left p x \\<Longrightarrow> pvalid p x", "by (meson CFG.leftderives_implies_derives CFG_axioms LocalLexing.pvalid_def \n        LocalLexing.pvalid_left_def LocalLexing_axioms leftderivation_implies_derivation)"], ["proof (state)\nthis:\n  pvalid_left p x \\<Longrightarrow> pvalid p x\n\ngoal (1 subgoal):\n 1. pvalid p x = pvalid_left p x", "have left_imp_right: \"pvalid p x \\<Longrightarrow> pvalid_left p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pvalid p x \\<Longrightarrow> pvalid_left p x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pvalid p x \\<Longrightarrow> pvalid_left p x", "assume \"pvalid p x\""], ["proof (state)\nthis:\n  pvalid p x\n\ngoal (1 subgoal):\n 1. pvalid p x \\<Longrightarrow> pvalid_left p x", "then"], ["proof (chain)\npicking this:\n  pvalid p x", "obtain u \\<gamma> where \n      \"wellformed_tokens p \\<and>\n       wellformed_item x \\<and>\n       u \\<le> length p \\<and>\n       charslength p = item_end x \\<and>\n       charslength (take u p) = item_origin x \\<and>\n       is_derivation (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n       derives (item_\\<alpha> x) (terminals (drop u p))\""], ["proof (prove)\nusing this:\n  pvalid p x\n\ngoal (1 subgoal):\n 1. (\\<And>u \\<gamma>.\n        wellformed_tokens p \\<and>\n        wellformed_item x \\<and>\n        u \\<le> length p \\<and>\n        charslength p = item_end x \\<and>\n        charslength (take u p) = item_origin x \\<and>\n        is_derivation\n         (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n        derives (item_\\<alpha> x) (terminals (drop u p)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (simp add: pvalid_def, blast)"], ["proof (state)\nthis:\n  wellformed_tokens p \\<and>\n  wellformed_item x \\<and>\n  u \\<le> length p \\<and>\n  charslength p = item_end x \\<and>\n  charslength (take u p) = item_origin x \\<and>\n  is_derivation\n   (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n  derives (item_\\<alpha> x) (terminals (drop u p))\n\ngoal (1 subgoal):\n 1. pvalid p x \\<Longrightarrow> pvalid_left p x", "thus ?thesis"], ["proof (prove)\nusing this:\n  wellformed_tokens p \\<and>\n  wellformed_item x \\<and>\n  u \\<le> length p \\<and>\n  charslength p = item_end x \\<and>\n  charslength (take u p) = item_origin x \\<and>\n  is_derivation\n   (terminals (take u p) @ [item_nonterminal x] @ \\<gamma>) \\<and>\n  derives (item_\\<alpha> x) (terminals (drop u p))\n\ngoal (1 subgoal):\n 1. pvalid_left p x", "apply (auto simp add: pvalid_left_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u\\<le>length p.\n                         length (chars (take u p)) = item_origin x \\<and>\n                         (\\<exists>\\<gamma>.\n                             is_leftderivation\n                              (terminals (take u p) @\n                               item_nonterminal x # \\<gamma>)) \\<and>\n                         leftderives (item_\\<alpha> x)\n                          (terminals (drop u p))", "apply (rule_tac x=u in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> u \\<le> length p \\<and>\n                      length (chars (take u p)) = item_origin x \\<and>\n                      (\\<exists>\\<gamma>.\n                          is_leftderivation\n                           (terminals (take u p) @\n                            item_nonterminal x # \\<gamma>)) \\<and>\n                      leftderives (item_\\<alpha> x) (terminals (drop u p))", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<gamma>.\n                         is_leftderivation\n                          (terminals (take u p) @\n                           item_nonterminal x # \\<gamma>)\n 2. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> leftderives (item_\\<alpha> x) (terminals (drop u p))", "apply (simp add: is_leftderivation_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> \\<exists>\\<gamma>.\n                         leftderives [\\<SS>]\n                          (terminals (take u p) @\n                           item_nonterminal x # \\<gamma>)\n 2. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> leftderives (item_\\<alpha> x) (terminals (drop u p))", "apply (rule_tac derives_implies_leftderives_cons[where b=\\<gamma>])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> is_word (terminals (take u p))\n 2. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> derives [\\<SS>]\n                       (terminals (take u p) @\n                        item_nonterminal x # \\<gamma>)\n 3. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> leftderives (item_\\<alpha> x) (terminals (drop u p))", "apply (erule is_word_terminals_take)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> derives [\\<SS>]\n                       (terminals (take u p) @\n                        item_nonterminal x # \\<gamma>)\n 2. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> leftderives (item_\\<alpha> x) (terminals (drop u p))", "apply (simp add: is_derivation_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wellformed_tokens p; wellformed_item x; u \\<le> length p;\n     length (chars p) = item_end x;\n     length (chars (take u p)) = item_origin x;\n     is_derivation (terminals (take u p) @ item_nonterminal x # \\<gamma>);\n     derives (item_\\<alpha> x) (terminals (drop u p))\\<rbrakk>\n    \\<Longrightarrow> leftderives (item_\\<alpha> x) (terminals (drop u p))", "by (metis derives_implies_leftderives is_word_terminals_drop)"], ["proof (state)\nthis:\n  pvalid_left p x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pvalid p x \\<Longrightarrow> pvalid_left p x\n\ngoal (1 subgoal):\n 1. pvalid p x = pvalid_left p x", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. pvalid p x = pvalid_left p x", "by (metis left_imp_right right_imp_left)"], ["proof (state)\nthis:\n  pvalid p x = pvalid_left p x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<L>\\<^sub>P_wellformed_tokens: \"terminals p \\<in> \\<L>\\<^sub>P \\<Longrightarrow> wellformed_tokens p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. terminals p \\<in> \\<L>\\<^sub>P \\<Longrightarrow> wellformed_tokens p", "by (metis (mono_tags, lifting) \\<L>\\<^sub>P_is_word is_word_def length_map list_all_length \n    nth_map terminals_def wellformed_token_def wellformed_tokens_def)"], ["", "end"], ["", "end"]]}