{"file_name": "/home/qj213/afp-2021-10-22/thys/LocalLexing/PathLemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LocalLexing", "problem_names": ["lemma characterize_\\<P>:\n  \"(\\<forall> i < length p. \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u) \\<Longrightarrow> admissible p \\<Longrightarrow>\n  \\<exists> u. p \\<in> \\<P> (charslength p) u\"", "lemma drop_empty_tokens: \n  assumes p: \"p \\<in> \\<PP>\"\n  assumes r: \"r \\<le> length p\"\n  assumes empty: \"charslength (take r p) = 0\"\n  assumes admissible: \"admissible (drop r p)\"\n  shows \"drop r p \\<in> \\<PP>\""], "translations": [["", "lemma characterize_\\<P>:\n  \"(\\<forall> i < length p. \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u) \\<Longrightarrow> admissible p \\<Longrightarrow>\n  \\<exists> u. p \\<in> \\<P> (charslength p) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>i<length p.\n                \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n     admissible p\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u", "proof (induct p rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i<length [].\n                \\<exists>u. [] ! i \\<in> \\<Z> (charslength (take i [])) u;\n     admissible []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u. [] \\<in> \\<P> (charslength []) u\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "case Nil"], ["proof (state)\nthis:\n  \\<forall>i<length [].\n     \\<exists>u. [] ! i \\<in> \\<Z> (charslength (take i [])) u\n  admissible []\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i<length [].\n                \\<exists>u. [] ! i \\<in> \\<Z> (charslength (take i [])) u;\n     admissible []\\<rbrakk>\n    \\<Longrightarrow> \\<exists>u. [] \\<in> \\<P> (charslength []) u\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. [] \\<in> \\<P> (charslength []) u", "by simp"], ["proof (state)\nthis:\n  \\<exists>u. [] \\<in> \\<P> (charslength []) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "case (snoc a p)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from snoc.prems"], ["proof (chain)\npicking this:\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])", "have admissible_p: \"admissible p\""], ["proof (prove)\nusing this:\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])\n\ngoal (1 subgoal):\n 1. admissible p", "by (metis append_Nil2 is_prefix_admissible is_prefix_cancel is_prefix_empty)"], ["proof (state)\nthis:\n  admissible p\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "{"], ["proof (state)\nthis:\n  admissible p\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "fix i :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "assume ilen: \"i < length p\""], ["proof (state)\nthis:\n  i < length p\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  i < length p", "have \"i < length (p@[a])\""], ["proof (prove)\nusing this:\n  i < length p\n\ngoal (1 subgoal):\n 1. i < length (p @ [a])", "by (simp add: Suc_leI Suc_le_lessD trans_le_add1)"], ["proof (state)\nthis:\n  i < length (p @ [a])\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "with snoc"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])\n  i < length (p @ [a])", "have \"\\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])\n  i < length (p @ [a])\n\ngoal (1 subgoal):\n 1. \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u", "obtain u where u: \"(p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\""], ["proof (prove)\nusing this:\n  \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        (p @ [a]) ! i\n        \\<in> \\<Z> (charslength (take i (p @ [a]))) u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from ilen"], ["proof (chain)\npicking this:\n  i < length p", "have p_at: \"(p @ [a]) ! i = p ! i\""], ["proof (prove)\nusing this:\n  i < length p\n\ngoal (1 subgoal):\n 1. (p @ [a]) ! i = p ! i", "by (simp add: nth_append)"], ["proof (state)\nthis:\n  (p @ [a]) ! i = p ! i\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from ilen"], ["proof (chain)\npicking this:\n  i < length p", "have p_take: \"take i (p @ [a]) = take i p\""], ["proof (prove)\nusing this:\n  i < length p\n\ngoal (1 subgoal):\n 1. take i (p @ [a]) = take i p", "by (simp add: less_or_eq_imp_le)"], ["proof (state)\nthis:\n  take i (p @ [a]) = take i p\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from u p_at p_take"], ["proof (chain)\npicking this:\n  (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  (p @ [a]) ! i = p ! i\n  take i (p @ [a]) = take i p", "have p_i: \"p ! i \\<in> \\<Z> (charslength (take i p)) u\""], ["proof (prove)\nusing this:\n  (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  (p @ [a]) ! i = p ! i\n  take i (p @ [a]) = take i p\n\ngoal (1 subgoal):\n 1. p ! i \\<in> \\<Z> (charslength (take i p)) u", "by simp"], ["proof (state)\nthis:\n  p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  p ! i \\<in> \\<Z> (charslength (take i p)) u", "have \"\\<exists> u. p ! i \\<in> \\<Z> (charslength (take i p)) u\""], ["proof (prove)\nusing this:\n  p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "}"], ["proof (state)\nthis:\n  ?i2 < length p \\<Longrightarrow>\n  \\<exists>u. p ! ?i2 \\<in> \\<Z> (charslength (take ?i2 p)) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  ?i2 < length p \\<Longrightarrow>\n  \\<exists>u. p ! ?i2 \\<in> \\<Z> (charslength (take ?i2 p)) u", "have \"\\<forall> i < length p. \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\""], ["proof (prove)\nusing this:\n  ?i2 < length p \\<Longrightarrow>\n  \\<exists>u. p ! ?i2 \\<in> \\<Z> (charslength (take ?i2 p)) u\n\ngoal (1 subgoal):\n 1. \\<forall>i<length p.\n       \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "by auto"], ["proof (state)\nthis:\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "with admissible_p snoc.hyps"], ["proof (chain)\npicking this:\n  admissible p\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "obtain u where u: \"p \\<in> \\<P> (charslength p) u\""], ["proof (prove)\nusing this:\n  admissible p\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        p \\<in> \\<P> (charslength p) u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p \\<in> \\<P> (charslength p) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "have \"\\<exists>u. (p @ [a]) ! (length p) \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       (p @ [a]) ! length p\n       \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u", "using snoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>i<length p.\n              \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u;\n   admissible p\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. p \\<in> \\<P> (charslength p) u\n  \\<forall>i<length (p @ [a]).\n     \\<exists>u. (p @ [a]) ! i \\<in> \\<Z> (charslength (take i (p @ [a]))) u\n  admissible (p @ [a])\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       (p @ [a]) ! length p\n       \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u", "by (metis (no_types, hide_lams) add_Suc_right append_Nil2 length_Cons length_append \n        less_Suc_eq_le less_or_eq_imp_le)"], ["proof (state)\nthis:\n  \\<exists>u.\n     (p @ [a]) ! length p\n     \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  \\<exists>u.\n     (p @ [a]) ! length p\n     \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u", "obtain v where \"(p @ [a]) ! (length p) \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) v\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     (p @ [a]) ! length p\n     \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) u\n\ngoal (1 subgoal):\n 1. (\\<And>v.\n        (p @ [a]) ! length p\n        \\<in> \\<Z> (charslength (take (length p) (p @ [a])))\n               v \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (p @ [a]) ! length p\n  \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) v\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  (p @ [a]) ! length p\n  \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) v", "have v: \"a \\<in> \\<Z> (charslength p) v\""], ["proof (prove)\nusing this:\n  (p @ [a]) ! length p\n  \\<in> \\<Z> (charslength (take (length p) (p @ [a]))) v\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Z> (charslength p) v", "by simp"], ["proof (state)\nthis:\n  a \\<in> \\<Z> (charslength p) v\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "{"], ["proof (state)\nthis:\n  a \\<in> \\<Z> (charslength p) v\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "assume v_leq_u: \"v \\<le> u\""], ["proof (state)\nthis:\n  v \\<le> u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  v \\<le> u", "have \"a \\<in> \\<Z> (charslength p) (Suc u)\""], ["proof (prove)\nusing this:\n  v \\<le> u\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Z> (charslength p) (Suc u)", "using v"], ["proof (prove)\nusing this:\n  v \\<le> u\n  a \\<in> \\<Z> (charslength p) v\n\ngoal (1 subgoal):\n 1. a \\<in> \\<Z> (charslength p) (Suc u)", "by (meson LocalLexing.subset_fSuc LocalLexing_axioms \\<Z>_subset_Suc subsetCE)"], ["proof (state)\nthis:\n  a \\<in> \\<Z> (charslength p) (Suc u)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from path_append_token[OF u this snoc.prems(2)]"], ["proof (chain)\npicking this:\n  charslength p = charslength p \\<Longrightarrow>\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)", "have \"p @ [a] \\<in> \\<P> (charslength p) (Suc u)\""], ["proof (prove)\nusing this:\n  charslength p = charslength p \\<Longrightarrow>\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)\n\ngoal (1 subgoal):\n 1. p @ [a] \\<in> \\<P> (charslength p) (Suc u)", "by blast"], ["proof (state)\nthis:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)", "have ?case"], ["proof (prove)\nusing this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)\n\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "using in_\\<P>_charslength"], ["proof (prove)\nusing this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc u)\n  ?p \\<in> \\<P> ?k ?u \\<Longrightarrow>\n  \\<exists>v. ?p \\<in> \\<P> (charslength ?p) v\n\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "}"], ["proof (state)\nthis:\n  v \\<le> u \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "note case_v_leq_u = this"], ["proof (state)\nthis:\n  v \\<le> u \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "{"], ["proof (state)\nthis:\n  v \\<le> u \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "assume u_less_v: \"u < v\""], ["proof (state)\nthis:\n  u < v\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  u < v", "obtain w where w: \"v = Suc w\""], ["proof (prove)\nusing this:\n  u < v\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = Suc w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using less_imp_Suc_add"], ["proof (prove)\nusing this:\n  u < v\n  ?m < ?n \\<Longrightarrow> \\<exists>k. ?n = Suc (?m + k)\n\ngoal (1 subgoal):\n 1. (\\<And>w. v = Suc w \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  v = Suc w\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "with u_less_v"], ["proof (chain)\npicking this:\n  u < v\n  v = Suc w", "have \"u \\<le> w\""], ["proof (prove)\nusing this:\n  u < v\n  v = Suc w\n\ngoal (1 subgoal):\n 1. u \\<le> w", "by arith"], ["proof (state)\nthis:\n  u \\<le> w\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "with u"], ["proof (chain)\npicking this:\n  p \\<in> \\<P> (charslength p) u\n  u \\<le> w", "have \"p \\<in> \\<P> (charslength p) w\""], ["proof (prove)\nusing this:\n  p \\<in> \\<P> (charslength p) u\n  u \\<le> w\n\ngoal (1 subgoal):\n 1. p \\<in> \\<P> (charslength p) w", "by (meson subsetCE subset_\\<P>k)"], ["proof (state)\nthis:\n  p \\<in> \\<P> (charslength p) w\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "from v w path_append_token[OF this _ snoc.prems(2)]"], ["proof (chain)\npicking this:\n  a \\<in> \\<Z> (charslength p) v\n  v = Suc w\n  \\<lbrakk>a \\<in> \\<Z> (charslength p) (Suc w);\n   charslength p = charslength p\\<rbrakk>\n  \\<Longrightarrow> p @ [a] \\<in> \\<P> (charslength p) (Suc w)", "have \"p @ [a] \\<in> \\<P> (charslength p) (Suc w)\""], ["proof (prove)\nusing this:\n  a \\<in> \\<Z> (charslength p) v\n  v = Suc w\n  \\<lbrakk>a \\<in> \\<Z> (charslength p) (Suc w);\n   charslength p = charslength p\\<rbrakk>\n  \\<Longrightarrow> p @ [a] \\<in> \\<P> (charslength p) (Suc w)\n\ngoal (1 subgoal):\n 1. p @ [a] \\<in> \\<P> (charslength p) (Suc w)", "by blast"], ["proof (state)\nthis:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc w)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "then"], ["proof (chain)\npicking this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc w)", "have ?case"], ["proof (prove)\nusing this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc w)\n\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "using in_\\<P>_charslength"], ["proof (prove)\nusing this:\n  p @ [a] \\<in> \\<P> (charslength p) (Suc w)\n  ?p \\<in> \\<P> ?k ?u \\<Longrightarrow>\n  \\<exists>v. ?p \\<in> \\<P> (charslength ?p) v\n\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "}"], ["proof (state)\nthis:\n  u < v \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "note case_u_less_v = this"], ["proof (state)\nthis:\n  u < v \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>\\<forall>i<length xs.\n                            \\<exists>u.\n                               xs ! i\n                               \\<in> \\<Z> (charslength (take i xs)) u;\n                 admissible xs\\<rbrakk>\n                \\<Longrightarrow> \\<exists>u.\n                                     xs \\<in> \\<P> (charslength xs) u;\n        \\<forall>i<length (xs @ [x]).\n           \\<exists>u.\n              (xs @ [x]) ! i \\<in> \\<Z> (charslength (take i (xs @ [x]))) u;\n        admissible (xs @ [x])\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u.\n                            xs @ [x] \\<in> \\<P> (charslength (xs @ [x])) u", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "using case_v_leq_u case_u_less_v not_le"], ["proof (prove)\nusing this:\n  v \\<le> u \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n  u < v \\<Longrightarrow>\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p @ [a] \\<in> \\<P> (charslength (p @ [a])) u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma drop_empty_tokens: \n  assumes p: \"p \\<in> \\<PP>\"\n  assumes r: \"r \\<le> length p\"\n  assumes empty: \"charslength (take r p) = 0\"\n  assumes admissible: \"admissible (drop r p)\"\n  shows \"drop r p \\<in> \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "have p_\\<Z>: \"\\<forall>i<length p. \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i<length p.\n       \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "using p"], ["proof (prove)\nusing this:\n  p \\<in> \\<PP>\n\ngoal (1 subgoal):\n 1. \\<forall>i<length p.\n       \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "using tokens_nth_in_\\<Z>"], ["proof (prove)\nusing this:\n  p \\<in> \\<PP>\n  ?p \\<in> \\<PP> \\<Longrightarrow>\n  \\<forall>i<length ?p.\n     \\<exists>u. ?p ! i \\<in> \\<Z> (charslength (take i ?p)) u\n\ngoal (1 subgoal):\n 1. \\<forall>i<length p.\n       \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u", "by blast"], ["proof (state)\nthis:\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "obtain q where q: \"q = drop r p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q. q = drop r p \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q = drop r p\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "{"], ["proof (state)\nthis:\n  q = drop r p\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "fix j :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "assume j : \"j < length q\""], ["proof (state)\nthis:\n  j < length q\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "have length_p_q_r: \"length p = length q + r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length p = length q + r", "using r q add.commute diff_add_inverse le_Suc_ex length_drop"], ["proof (prove)\nusing this:\n  r \\<le> length p\n  q = drop r p\n  ?a + ?b = ?b + ?a\n  ?n + ?m - ?n = ?m\n  ?k \\<le> ?l \\<Longrightarrow> \\<exists>n. ?l = ?k + n\n  length (drop ?n ?xs) = length ?xs - ?n\n\ngoal (1 subgoal):\n 1. length p = length q + r", "by simp"], ["proof (state)\nthis:\n  length p = length q + r\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "have j_plus_r_bound: \"j + r < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j + r < length p", "by (simp add: j length_p_q_r)"], ["proof (state)\nthis:\n  j + r < length p\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "with p_\\<Z>"], ["proof (chain)\npicking this:\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n  j + r < length p", "have \"\\<exists>u. p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\""], ["proof (prove)\nusing this:\n  \\<forall>i<length p.\n     \\<exists>u. p ! i \\<in> \\<Z> (charslength (take i p)) u\n  j + r < length p\n\ngoal (1 subgoal):\n 1. \\<exists>u. p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u", "obtain u where u: \"p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\""], ["proof (prove)\nusing this:\n  \\<exists>u. p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        p ! (j + r)\n        \\<in> \\<Z> (charslength (take (j + r) p)) u \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "have p_at_is_q_at: \"p ! (j + r) = q ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p ! (j + r) = q ! j", "by (simp add: add.commute q r)"], ["proof (state)\nthis:\n  p ! (j + r) = q ! j\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "have \"take (j + r) p = (take r p) @ (take j q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (j + r) p = take r p @ take j q", "by (metis add.commute q take_add)"], ["proof (state)\nthis:\n  take (j + r) p = take r p @ take j q\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "with empty"], ["proof (chain)\npicking this:\n  charslength (take r p) = 0\n  take (j + r) p = take r p @ take j q", "have \"charslength (take (j + r) p) = charslength (take j q)\""], ["proof (prove)\nusing this:\n  charslength (take r p) = 0\n  take (j + r) p = take r p @ take j q\n\ngoal (1 subgoal):\n 1. charslength (take (j + r) p) = charslength (take j q)", "by auto"], ["proof (state)\nthis:\n  charslength (take (j + r) p) = charslength (take j q)\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "with u p_at_is_q_at"], ["proof (chain)\npicking this:\n  p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\n  p ! (j + r) = q ! j\n  charslength (take (j + r) p) = charslength (take j q)", "have \"q ! j \\<in> \\<Z> (charslength (take j q)) u\""], ["proof (prove)\nusing this:\n  p ! (j + r) \\<in> \\<Z> (charslength (take (j + r) p)) u\n  p ! (j + r) = q ! j\n  charslength (take (j + r) p) = charslength (take j q)\n\ngoal (1 subgoal):\n 1. q ! j \\<in> \\<Z> (charslength (take j q)) u", "by simp"], ["proof (state)\nthis:\n  q ! j \\<in> \\<Z> (charslength (take j q)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "then"], ["proof (chain)\npicking this:\n  q ! j \\<in> \\<Z> (charslength (take j q)) u", "have \"\\<exists> u. q ! j \\<in> \\<Z> (charslength (take j q)) u\""], ["proof (prove)\nusing this:\n  q ! j \\<in> \\<Z> (charslength (take j q)) u\n\ngoal (1 subgoal):\n 1. \\<exists>u. q ! j \\<in> \\<Z> (charslength (take j q)) u", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. q ! j \\<in> \\<Z> (charslength (take j q)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "}"], ["proof (state)\nthis:\n  ?j2 < length q \\<Longrightarrow>\n  \\<exists>u. q ! ?j2 \\<in> \\<Z> (charslength (take ?j2 q)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "then"], ["proof (chain)\npicking this:\n  ?j2 < length q \\<Longrightarrow>\n  \\<exists>u. q ! ?j2 \\<in> \\<Z> (charslength (take ?j2 q)) u", "have \"\\<forall>i<length q. \\<exists>u. q ! i \\<in> \\<Z> (charslength (take i q)) u\""], ["proof (prove)\nusing this:\n  ?j2 < length q \\<Longrightarrow>\n  \\<exists>u. q ! ?j2 \\<in> \\<Z> (charslength (take ?j2 q)) u\n\ngoal (1 subgoal):\n 1. \\<forall>i<length q.\n       \\<exists>u. q ! i \\<in> \\<Z> (charslength (take i q)) u", "by blast"], ["proof (state)\nthis:\n  \\<forall>i<length q.\n     \\<exists>u. q ! i \\<in> \\<Z> (charslength (take i q)) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "from characterize_\\<P>[OF this]"], ["proof (chain)\npicking this:\n  admissible q \\<Longrightarrow> \\<exists>u. q \\<in> \\<P> (charslength q) u", "have \"\\<exists>u. q \\<in> \\<P> (charslength q) u\""], ["proof (prove)\nusing this:\n  admissible q \\<Longrightarrow> \\<exists>u. q \\<in> \\<P> (charslength q) u\n\ngoal (1 subgoal):\n 1. \\<exists>u. q \\<in> \\<P> (charslength q) u", "using admissible q"], ["proof (prove)\nusing this:\n  admissible q \\<Longrightarrow> \\<exists>u. q \\<in> \\<P> (charslength q) u\n  admissible (drop r p)\n  q = drop r p\n\ngoal (1 subgoal):\n 1. \\<exists>u. q \\<in> \\<P> (charslength q) u", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. q \\<in> \\<P> (charslength q) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u. q \\<in> \\<P> (charslength q) u", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>u. q \\<in> \\<P> (charslength q) u\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "using \\<PP>_covers_\\<P> q"], ["proof (prove)\nusing this:\n  \\<exists>u. q \\<in> \\<P> (charslength q) u\n  \\<P> ?k ?u \\<subseteq> \\<PP>\n  q = drop r p\n\ngoal (1 subgoal):\n 1. drop r p \\<in> \\<PP>", "by blast"], ["proof (state)\nthis:\n  drop r p \\<in> \\<PP>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}