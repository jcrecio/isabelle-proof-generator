{"file_name": "/home/qj213/afp-2021-10-22/thys/LocalLexing/LocalLexingLemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LocalLexing", "problem_names": ["lemma[simp]: \"setmonotone (Append Z k)\"", "lemma subset_\\<P>Suc: \"\\<P> k u \\<subseteq> \\<P> k (Suc u)\"", "lemma subset_fSuc_strict:\n  assumes f: \"\\<And> u. f u \\<subseteq> f (Suc u)\"\n  shows \"u < v \\<Longrightarrow> f u \\<subseteq> f v\"", "lemma subset_fSuc:\n  assumes f: \"\\<And> u. f u \\<subseteq> f (Suc u)\"\n  shows \"u \\<le> v \\<Longrightarrow> f u \\<subseteq> f v\"", "lemma subset_\\<P>k: \"u \\<le> v \\<Longrightarrow> \\<P> k u \\<subseteq> \\<P> k v\"", "lemma subset_\\<P>\\<Q>k: \"\\<P> k u \\<subseteq> \\<Q> k\"", "lemma subset_\\<Q>\\<P>Suc: \"\\<Q> k \\<subseteq> \\<P> (Suc k) u\"", "lemma subset_\\<Q>Suc: \"\\<Q> k \\<subseteq> \\<Q> (Suc k)\"", "lemma subset_\\<Q>: \"i \\<le> j \\<Longrightarrow> \\<Q> i \\<subseteq> \\<Q> j\"", "lemma empty_\\<X>[simp]: \"k > length Doc \\<Longrightarrow> \\<X> k = {}\"", "lemma Sel_empty[simp]: \"Sel {} {} = {}\"", "lemma empty_\\<Z>[simp]: \"k > length Doc \\<Longrightarrow> \\<Z> k u = {}\"", "lemma[simp]: \"Append {} k = id\"", "lemma[simp]: \"k > length Doc \\<Longrightarrow> \\<P> k v = \\<P> k 0\"", "lemma \\<Q>SucEq: \"k \\<ge> length Doc \\<Longrightarrow> \\<Q> (Suc k) = \\<Q> k\"", "lemma \\<Q>_converges:\n  assumes k: \"k \\<ge> length Doc\"\n  shows \"\\<Q> k = \\<PP>\"", "lemma \\<PP>_covers_\\<Q>: \"\\<Q> k \\<subseteq> \\<PP>\"", "lemma Sel_upper_bound: \"A \\<subseteq> B \\<Longrightarrow> Sel A B \\<subseteq> B\"", "lemma Sel_lower_bound: \"A \\<subseteq> B \\<Longrightarrow> A \\<subseteq> Sel A B\"", "lemma \\<PP>_covers_\\<P>: \"\\<P> k u \\<subseteq> \\<PP>\"", "lemma \\<W>_montone: \"P \\<subseteq> Q \\<Longrightarrow> \\<W> P k \\<subseteq> \\<W> Q k\"", "lemma Sel_precondition: \n  \"\\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k\"", "lemma \\<W>_bounded_by_\\<X>: \"\\<W> P k \\<subseteq> \\<X> k\"", "lemma \\<Z>_subset_\\<X>: \"\\<Z> k n \\<subseteq> \\<X> k\"", "lemma \\<Z>_subset_Suc: \"\\<Z> k n \\<subseteq> \\<Z> k (Suc n)\"", "lemma \\<Y>_upper_bound: \"\\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W>  (\\<P> k u) k\"", "lemma \\<PP>_induct[consumes 1, case_names Base Induct]:\n  assumes p: \"p \\<in> \\<PP>\"\n  assumes base: \"P []\"\n  assumes induct: \"\\<And> p k u. (\\<And> q. q \\<in> \\<P> k u \\<Longrightarrow> P q) \\<Longrightarrow> p \\<in> \\<P> k (Suc u) \\<Longrightarrow> P p\"\n  shows \"P p\"", "lemma Append_mono: \"U \\<subseteq> V \\<Longrightarrow> P \\<subseteq> Q \\<Longrightarrow> Append U k P \\<subseteq> Append V k Q\"", "lemma pointwise_Append: \"pointwise (Append T k)\"", "lemma regular_Append: \"regular (Append T k)\""], "translations": [["", "lemma[simp]: \"setmonotone (Append Z k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setmonotone (Append Z k)", "by (auto simp add: Append_def setmonotone_def)"], ["", "lemma subset_\\<P>Suc: \"\\<P> k u \\<subseteq> \\<P> k (Suc u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<P> k u \\<subseteq> \\<P> k (Suc u)", "by (simp add: subset_setmonotone[OF setmonotone_limit])"], ["", "lemma subset_fSuc_strict:\n  assumes f: \"\\<And> u. f u \\<subseteq> f (Suc u)\"\n  shows \"u < v \\<Longrightarrow> f u \\<subseteq> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < v \\<Longrightarrow> f u \\<subseteq> f v", "proof (induct v)"], ["proof (state)\ngoal (2 subgoals):\n 1. u < 0 \\<Longrightarrow> f u \\<subseteq> f 0\n 2. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "show \"u < 0 \\<Longrightarrow> f u \\<subseteq> f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u < 0 \\<Longrightarrow> f u \\<subseteq> f 0", "by auto"], ["proof (state)\nthis:\n  u < 0 \\<Longrightarrow> f u \\<subseteq> f 0\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "fix v"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "assume a:\"(u < v \\<Longrightarrow> f u \\<subseteq> f v)\""], ["proof (state)\nthis:\n  u < v \\<Longrightarrow> f u \\<subseteq> f v\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "assume b:\"u < Suc v\""], ["proof (state)\nthis:\n  u < Suc v\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "from b"], ["proof (chain)\npicking this:\n  u < Suc v", "have c: \"f u \\<subseteq> f v\""], ["proof (prove)\nusing this:\n  u < Suc v\n\ngoal (1 subgoal):\n 1. f u \\<subseteq> f v", "apply (case_tac \"u < v\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u < Suc v; u < v\\<rbrakk> \\<Longrightarrow> f u \\<subseteq> f v\n 2. \\<lbrakk>u < Suc v; \\<not> u < v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "apply (simp add: a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u < Suc v; \\<not> u < v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "apply (case_tac \"u = v\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u < Suc v; \\<not> u < v; u = v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v\n 2. \\<lbrakk>u < Suc v; \\<not> u < v; u \\<noteq> v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u < Suc v; \\<not> u < v; u \\<noteq> v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "by auto"], ["proof (state)\nthis:\n  f u \\<subseteq> f v\n\ngoal (1 subgoal):\n 1. \\<And>v.\n       \\<lbrakk>u < v \\<Longrightarrow> f u \\<subseteq> f v;\n        u < Suc v\\<rbrakk>\n       \\<Longrightarrow> f u \\<subseteq> f (Suc v)", "show \"f u \\<subseteq> f (Suc v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f u \\<subseteq> f (Suc v)", "apply (rule subset_trans[OF c])"], ["proof (prove)\ngoal (1 subgoal):\n 1. f v \\<subseteq> f (Suc v)", "by (rule f)"], ["proof (state)\nthis:\n  f u \\<subseteq> f (Suc v)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_fSuc:\n  assumes f: \"\\<And> u. f u \\<subseteq> f (Suc u)\"\n  shows \"u \\<le> v \\<Longrightarrow> f u \\<subseteq> f v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> v \\<Longrightarrow> f u \\<subseteq> f v", "apply (case_tac \"u < v\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<le> v; u < v\\<rbrakk> \\<Longrightarrow> f u \\<subseteq> f v\n 2. \\<lbrakk>u \\<le> v; \\<not> u < v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "apply (rule subset_fSuc_strict[where f=f, OF f])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<le> v; u < v\\<rbrakk> \\<Longrightarrow> u < v\n 2. \\<lbrakk>u \\<le> v; \\<not> u < v\\<rbrakk>\n    \\<Longrightarrow> f u \\<subseteq> f v", "by auto"], ["", "lemma subset_\\<P>k: \"u \\<le> v \\<Longrightarrow> \\<P> k u \\<subseteq> \\<P> k v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<le> v \\<Longrightarrow> \\<P> k u \\<subseteq> \\<P> k v", "by (rule subset_fSuc, rule subset_\\<P>Suc)"], ["", "lemma subset_\\<P>\\<Q>k: \"\\<P> k u \\<subseteq> \\<Q> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<P> k u \\<subseteq> \\<Q> k", "by (auto simp add: natUnion_def)"], ["", "lemma subset_\\<Q>\\<P>Suc: \"\\<Q> k \\<subseteq> \\<P> (Suc k) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<P> (Suc k) u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<P> (Suc k) u", "have a: \"\\<Q> k \\<subseteq> \\<P> (Suc k) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<P> (Suc k) 0", "by simp"], ["proof (state)\nthis:\n  \\<Q> k \\<subseteq> \\<P> (Suc k) 0\n\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<P> (Suc k) u", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<P> (Suc k) u", "apply (case_tac \"u = 0\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. u = 0 \\<Longrightarrow> \\<Q> k \\<subseteq> \\<P> (Suc k) u\n 2. u \\<noteq> 0 \\<Longrightarrow> \\<Q> k \\<subseteq> \\<P> (Suc k) u", "apply (simp add: a)"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> 0 \\<Longrightarrow> \\<Q> k \\<subseteq> \\<P> (Suc k) u", "apply (rule subset_trans[OF a subset_\\<P>k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> 0 \\<Longrightarrow> 0 \\<le> u", "by auto"], ["proof (state)\nthis:\n  \\<Q> k \\<subseteq> \\<P> (Suc k) u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma subset_\\<Q>Suc: \"\\<Q> k \\<subseteq> \\<Q> (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<Q> (Suc k)", "by (rule subset_trans[OF subset_\\<Q>\\<P>Suc subset_\\<P>\\<Q>k])"], ["", "lemma subset_\\<Q>: \"i \\<le> j \\<Longrightarrow> \\<Q> i \\<subseteq> \\<Q> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> j \\<Longrightarrow> \\<Q> i \\<subseteq> \\<Q> j", "by (rule subset_fSuc[where u=i and v=j and f = \\<Q>, OF subset_\\<Q>Suc])"], ["", "lemma empty_\\<X>[simp]: \"k > length Doc \\<Longrightarrow> \\<X> k = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc < k \\<Longrightarrow> \\<X> k = {}", "apply (simp add: \\<X>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc < k \\<Longrightarrow>\n    \\<forall>a. a \\<in> \\<TT> \\<longrightarrow> Lex a Doc k = {}", "apply (insert Lex_is_lexer)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length Doc < k; \\<forall>t\\<in>\\<TT>. is_lexer (Lex t)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>a.\n                         a \\<in> \\<TT> \\<longrightarrow> Lex a Doc k = {}", "by (simp add: is_lexer_def)"], ["", "lemma Sel_empty[simp]: \"Sel {} {} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sel {} {} = {}", "apply (insert Sel_is_selector)"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_selector Sel \\<Longrightarrow> Sel {} {} = {}", "by (auto simp add: is_selector_def)"], ["", "lemma empty_\\<Z>[simp]: \"k > length Doc \\<Longrightarrow> \\<Z> k u = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc < k \\<Longrightarrow> \\<Z> k u = {}", "apply (induct u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. length Doc < k \\<Longrightarrow> \\<Z> k 0 = {}\n 2. \\<And>u.\n       \\<lbrakk>length Doc < k \\<Longrightarrow> \\<Z> k u = {};\n        length Doc < k\\<rbrakk>\n       \\<Longrightarrow> \\<Z> k (Suc u) = {}", "by (simp_all add: \\<Y>_def \\<W>_def)"], ["", "lemma[simp]: \"Append {} k = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Append {} k = id", "by (auto simp add: Append_def)"], ["", "lemma[simp]: \"k > length Doc \\<Longrightarrow> \\<P> k v = \\<P> k 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc < k \\<Longrightarrow> \\<P> k v = \\<P> k 0", "by (induct v, simp_all add: \\<Y>_def \\<W>_def)"], ["", "lemma \\<Q>SucEq: \"k \\<ge> length Doc \\<Longrightarrow> \\<Q> (Suc k) = \\<Q> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc \\<le> k \\<Longrightarrow> \\<Q> (Suc k) = \\<Q> k", "by (simp add: natUnion_def)"], ["", "lemma \\<Q>_converges:\n  assumes k: \"k \\<ge> length Doc\"\n  shows \"\\<Q> k = \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "have \"\\<Q> (length Doc + n) = \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> (length Doc + n) = \\<PP>", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Q> (length Doc + 0) = \\<PP>\n 2. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "show \"\\<Q> (length Doc + 0) = \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> (length Doc + 0) = \\<PP>", "by (simp add: \\<PP>_def)"], ["proof (state)\nthis:\n  \\<Q> (length Doc + 0) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "assume hyp: \"\\<Q> (length Doc + n) = \\<PP>\""], ["proof (state)\nthis:\n  \\<Q> (length Doc + n) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "have \"\\<Q> (Suc (length Doc + n)) = \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> (Suc (length Doc + n)) = \\<PP>", "by (rule trans[OF \\<Q>SucEq hyp], auto)"], ["proof (state)\nthis:\n  \\<Q> (Suc (length Doc + n)) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Q> (length Doc + n) = \\<PP> \\<Longrightarrow>\n       \\<Q> (length Doc + Suc n) = \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<Q> (Suc (length Doc + n)) = \\<PP>", "show \"\\<Q> (length Doc + Suc n) = \\<PP>\""], ["proof (prove)\nusing this:\n  \\<Q> (Suc (length Doc + n)) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<Q> (length Doc + Suc n) = \\<PP>", "by auto"], ["proof (state)\nthis:\n  \\<Q> (length Doc + Suc n) = \\<PP>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Q> (length Doc + n) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "}"], ["proof (state)\nthis:\n  \\<Q> (length Doc + ?n2) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "note helper = this"], ["proof (state)\nthis:\n  \\<Q> (length Doc + ?n2) = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "from k"], ["proof (chain)\npicking this:\n  length Doc \\<le> k", "have \"\\<exists> n. k = length Doc + n\""], ["proof (prove)\nusing this:\n  length Doc \\<le> k\n\ngoal (1 subgoal):\n 1. \\<exists>n. k = length Doc + n", "by presburger"], ["proof (state)\nthis:\n  \\<exists>n. k = length Doc + n\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. k = length Doc + n", "obtain \"n\" where n: \"k = length Doc + n\""], ["proof (prove)\nusing this:\n  \\<exists>n. k = length Doc + n\n\ngoal (1 subgoal):\n 1. (\\<And>n. k = length Doc + n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k = length Doc + n\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "then"], ["proof (chain)\npicking this:\n  k = length Doc + n", "show ?thesis"], ["proof (prove)\nusing this:\n  k = length Doc + n\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "apply (simp only: n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. length Doc + n = length Doc + n \\<Longrightarrow>\n    \\<Q> (length Doc + n) = \\<PP>", "by (rule helper)"], ["proof (state)\nthis:\n  \\<Q> k = \\<PP>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<PP>_covers_\\<Q>: \"\\<Q> k \\<subseteq> \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<PP>", "proof (case_tac \"k \\<ge> length Doc\")"], ["proof (state)\ngoal (2 subgoals):\n 1. length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>\n 2. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "assume \"k \\<ge> length Doc\""], ["proof (state)\nthis:\n  length Doc \\<le> k\n\ngoal (2 subgoals):\n 1. length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>\n 2. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "then"], ["proof (chain)\npicking this:\n  length Doc \\<le> k", "have \\<Q>: \"\\<Q> k = \\<PP>\""], ["proof (prove)\nusing this:\n  length Doc \\<le> k\n\ngoal (1 subgoal):\n 1. \\<Q> k = \\<PP>", "by (rule \\<Q>_converges)"], ["proof (state)\nthis:\n  \\<Q> k = \\<PP>\n\ngoal (2 subgoals):\n 1. length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>\n 2. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<Q> k = \\<PP>", "show \"\\<Q> k \\<subseteq> \\<PP>\""], ["proof (prove)\nusing this:\n  \\<Q> k = \\<PP>\n\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<PP>", "by (simp only: \\<Q>)"], ["proof (state)\nthis:\n  \\<Q> k \\<subseteq> \\<PP>\n\ngoal (1 subgoal):\n 1. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "assume \"\\<not> length Doc \\<le> k\""], ["proof (state)\nthis:\n  \\<not> length Doc \\<le> k\n\ngoal (1 subgoal):\n 1. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "then"], ["proof (chain)\npicking this:\n  \\<not> length Doc \\<le> k", "have \"k < length Doc\""], ["proof (prove)\nusing this:\n  \\<not> length Doc \\<le> k\n\ngoal (1 subgoal):\n 1. k < length Doc", "by auto"], ["proof (state)\nthis:\n  k < length Doc\n\ngoal (1 subgoal):\n 1. \\<not> length Doc \\<le> k \\<Longrightarrow> \\<Q> k \\<subseteq> \\<PP>", "then"], ["proof (chain)\npicking this:\n  k < length Doc", "show ?thesis"], ["proof (prove)\nusing this:\n  k < length Doc\n\ngoal (1 subgoal):\n 1. \\<Q> k \\<subseteq> \\<PP>", "apply (simp only: \\<PP>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length Doc \\<Longrightarrow> \\<Q> k \\<subseteq> \\<Q> (length Doc)", "apply (rule subset_\\<Q>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. k < length Doc \\<Longrightarrow> k \\<le> length Doc", "by auto"], ["proof (state)\nthis:\n  \\<Q> k \\<subseteq> \\<PP>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Sel_upper_bound: \"A \\<subseteq> B \\<Longrightarrow> Sel A B \\<subseteq> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> Sel A B \\<subseteq> B", "by (metis Sel_is_selector is_selector_def)"], ["", "lemma Sel_lower_bound: \"A \\<subseteq> B \\<Longrightarrow> A \\<subseteq> Sel A B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow> A \\<subseteq> Sel A B", "by (metis Sel_is_selector is_selector_def)"], ["", "lemma \\<PP>_covers_\\<P>: \"\\<P> k u \\<subseteq> \\<PP>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<P> k u \\<subseteq> \\<PP>", "by (rule subset_trans[OF subset_\\<P>\\<Q>k \\<PP>_covers_\\<Q>])"], ["", "lemma \\<W>_montone: \"P \\<subseteq> Q \\<Longrightarrow> \\<W> P k \\<subseteq> \\<W> Q k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<subseteq> Q \\<Longrightarrow> \\<W> P k \\<subseteq> \\<W> Q k", "by (auto simp add: \\<W>_def)"], ["", "lemma Sel_precondition: \n  \"\\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k", "proof (induct u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Z> k 0 \\<subseteq> \\<W> (\\<P> k 0) k\n 2. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<Z> k 0 \\<subseteq> \\<W> (\\<P> k 0) k\n 2. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k 0 \\<subseteq> \\<W> (\\<P> k 0) k", "by simp"], ["proof (state)\nthis:\n  \\<Z> k 0 \\<subseteq> \\<W> (\\<P> k 0) k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "case (Suc u)"], ["proof (state)\nthis:\n  \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "have 1: \"\\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k u) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k u) k", "apply (simp add: \\<Y>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sel (\\<Z> k u) (\\<W> (\\<P> k u) k) \\<subseteq> \\<W> (\\<P> k u) k", "apply (rule_tac Sel_upper_bound)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k", "using Suc"], ["proof (prove)\nusing this:\n  \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k\n\ngoal (1 subgoal):\n 1. \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k", "by simp"], ["proof (state)\nthis:\n  \\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k u) k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "have 2: \"\\<W> (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k (Suc u)) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<W> (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "by (metis \\<W>_montone subset_\\<P>Suc)"], ["proof (state)\nthis:\n  \\<W> (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k (Suc u)) k\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       \\<Z> k u \\<subseteq> \\<W> (\\<P> k u) k \\<Longrightarrow>\n       \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "apply (rule_tac subset_trans[where B=\"\\<W> (\\<P> k u) k\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k u) k\n 2. \\<W> (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "apply (simp add: 1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<W> (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k (Suc u)) k", "apply (simp only: 2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<Z> k (Suc u) \\<subseteq> \\<W> (\\<P> k (Suc u)) k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma \\<W>_bounded_by_\\<X>: \"\\<W> P k \\<subseteq> \\<X> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<W> P k \\<subseteq> \\<X> k", "by (metis (no_types, lifting) \\<W>_def mem_Collect_eq subsetI)"], ["", "lemma \\<Z>_subset_\\<X>: \"\\<Z> k n \\<subseteq> \\<X> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k n \\<subseteq> \\<X> k", "by (metis Sel_precondition \\<W>_bounded_by_\\<X> rev_subsetD subsetI)"], ["", "lemma \\<Z>_subset_Suc: \"\\<Z> k n \\<subseteq> \\<Z> k (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Z> k n \\<subseteq> \\<Z> k (Suc n)", "apply (induct n)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<Z> k 0 \\<subseteq> \\<Z> k (Suc 0)\n 2. \\<And>n.\n       \\<Z> k n \\<subseteq> \\<Z> k (Suc n) \\<Longrightarrow>\n       \\<Z> k (Suc n) \\<subseteq> \\<Z> k (Suc (Suc n))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<Z> k n \\<subseteq> \\<Z> k (Suc n) \\<Longrightarrow>\n       \\<Z> k (Suc n) \\<subseteq> \\<Z> k (Suc (Suc n))", "by (metis Sel_lower_bound Sel_precondition \\<Y>_def \\<Z>.simps(2))"], ["", "lemma \\<Y>_upper_bound: \"\\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W>  (\\<P> k u) k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Y> (\\<Z> k u) (\\<P> k u) k \\<subseteq> \\<W> (\\<P> k u) k", "apply (simp add: \\<Y>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sel (\\<Z> k u) (\\<W> (\\<P> k u) k) \\<subseteq> \\<W> (\\<P> k u) k", "by (metis Sel_precondition Sel_upper_bound)"], ["", "lemma \\<PP>_induct[consumes 1, case_names Base Induct]:\n  assumes p: \"p \\<in> \\<PP>\"\n  assumes base: \"P []\"\n  assumes induct: \"\\<And> p k u. (\\<And> q. q \\<in> \\<P> k u \\<Longrightarrow> P q) \\<Longrightarrow> p \\<in> \\<P> k (Suc u) \\<Longrightarrow> P p\"\n  shows \"P p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P p", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. P p", "fix p :: \"tokens\""], ["proof (state)\ngoal (1 subgoal):\n 1. P p", "fix k :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. P p", "fix u :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. P p", "have \"p \\<in> \\<P> k u \\<Longrightarrow> P p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<P> k u \\<Longrightarrow> P p", "proof (induct k arbitrary: p u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p u. p \\<in> \\<P> 0 u \\<Longrightarrow> P p\n 2. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "case 0"], ["proof (state)\nthis:\n  p \\<in> \\<P> 0 u\n\ngoal (2 subgoals):\n 1. \\<And>p u. p \\<in> \\<P> 0 u \\<Longrightarrow> P p\n 2. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "have \"p \\<in> \\<P> 0 u \\<Longrightarrow> P p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<P> 0 u \\<Longrightarrow> P p", "proof (induct u arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<P> 0 0 \\<Longrightarrow> P p\n 2. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> 0 u \\<Longrightarrow> P p;\n        p \\<in> \\<P> 0 (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "case 0"], ["proof (state)\nthis:\n  p \\<in> \\<P> 0 0\n\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<P> 0 0 \\<Longrightarrow> P p\n 2. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> 0 u \\<Longrightarrow> P p;\n        p \\<in> \\<P> 0 (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "thus ?case"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> 0 0\n\ngoal (1 subgoal):\n 1. P p", "using base"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> 0 0\n  P []\n\ngoal (1 subgoal):\n 1. P p", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> 0 u \\<Longrightarrow> P p;\n        p \\<in> \\<P> 0 (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> 0 u \\<Longrightarrow> P p;\n        p \\<in> \\<P> 0 (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "case (Suc u)"], ["proof (state)\nthis:\n  ?p \\<in> \\<P> 0 u \\<Longrightarrow> P ?p\n  p \\<in> \\<P> 0 (Suc u)\n\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> 0 u \\<Longrightarrow> P p;\n        p \\<in> \\<P> 0 (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P p", "apply (rule induct[OF _ Suc(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q. q \\<in> \\<P> 0 u \\<Longrightarrow> P q", "apply (rule Suc(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q. q \\<in> \\<P> 0 u \\<Longrightarrow> q \\<in> \\<P> 0 u", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> \\<P> 0 u \\<Longrightarrow> P p\n\ngoal (2 subgoals):\n 1. \\<And>p u. p \\<in> \\<P> 0 u \\<Longrightarrow> P p\n 2. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "with 0"], ["proof (chain)\npicking this:\n  p \\<in> \\<P> 0 u\n  p \\<in> \\<P> 0 u \\<Longrightarrow> P p", "show ?case"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> 0 u\n  p \\<in> \\<P> 0 u \\<Longrightarrow> P p\n\ngoal (1 subgoal):\n 1. P p", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal (1 subgoal):\n 1. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "case (Suc k)"], ["proof (state)\nthis:\n  ?p \\<in> \\<P> k ?u \\<Longrightarrow> P ?p\n  p \\<in> \\<P> (Suc k) u\n\ngoal (1 subgoal):\n 1. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "have \"p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p", "proof (induct u arbitrary: p)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<P> (Suc k) 0 \\<Longrightarrow> P p\n 2. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "case 0"], ["proof (state)\nthis:\n  p \\<in> \\<P> (Suc k) 0\n\ngoal (2 subgoals):\n 1. \\<And>p. p \\<in> \\<P> (Suc k) 0 \\<Longrightarrow> P p\n 2. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "thus ?case"], ["proof (prove)\nusing this:\n  p \\<in> \\<P> (Suc k) 0\n\ngoal (1 subgoal):\n 1. P p", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> natUnion (\\<P> k) \\<Longrightarrow> P p", "apply (induct rule: natUnion_decompose)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n p. p \\<in> \\<P> k n \\<Longrightarrow> P p", "using Suc"], ["proof (prove)\nusing this:\n  ?p \\<in> \\<P> k ?u \\<Longrightarrow> P ?p\n  pb__ \\<in> \\<P> (Suc k) u\n\ngoal (1 subgoal):\n 1. \\<And>n p. p \\<in> \\<P> k n \\<Longrightarrow> P p", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "case (Suc u)"], ["proof (state)\nthis:\n  ?p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P ?p\n  p \\<in> \\<P> (Suc k) (Suc u)\n\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>\\<And>p. p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) (Suc u)\\<rbrakk>\n       \\<Longrightarrow> P p", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P p", "apply (rule induct[OF _ Suc(2)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q. q \\<in> \\<P> (Suc k) u \\<Longrightarrow> P q", "apply (rule Suc(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q. q \\<in> \\<P> (Suc k) u \\<Longrightarrow> q \\<in> \\<P> (Suc k) u", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p\n\ngoal (1 subgoal):\n 1. \\<And>k p u.\n       \\<lbrakk>\\<And>p u. p \\<in> \\<P> k u \\<Longrightarrow> P p;\n        p \\<in> \\<P> (Suc k) u\\<rbrakk>\n       \\<Longrightarrow> P p", "with Suc"], ["proof (chain)\npicking this:\n  ?p \\<in> \\<P> k ?u \\<Longrightarrow> P ?p\n  p \\<in> \\<P> (Suc k) u\n  p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p", "show ?case"], ["proof (prove)\nusing this:\n  ?p \\<in> \\<P> k ?u \\<Longrightarrow> P ?p\n  p \\<in> \\<P> (Suc k) u\n  p \\<in> \\<P> (Suc k) u \\<Longrightarrow> P p\n\ngoal (1 subgoal):\n 1. P p", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<in> \\<P> k u \\<Longrightarrow> P p\n\ngoal (1 subgoal):\n 1. P p", "}"], ["proof (state)\nthis:\n  ?pa2 \\<in> \\<P> ?k2 ?u2 \\<Longrightarrow> P ?pa2\n\ngoal (1 subgoal):\n 1. P p", "note all = this"], ["proof (state)\nthis:\n  ?pa2 \\<in> \\<P> ?k2 ?u2 \\<Longrightarrow> P ?pa2\n\ngoal (1 subgoal):\n 1. P p", "from p"], ["proof (chain)\npicking this:\n  p \\<in> \\<PP>", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<in> \\<PP>\n\ngoal (1 subgoal):\n 1. P p", "apply (simp add: \\<PP>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<in> natUnion (\\<P> (length Doc)) \\<Longrightarrow> P p", "apply (induct rule: natUnion_decompose)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>n p. p \\<in> \\<P> (length Doc) n \\<Longrightarrow> P p", "using all"], ["proof (prove)\nusing this:\n  ?pa2 \\<in> \\<P> ?k2 ?u2 \\<Longrightarrow> P ?pa2\n\ngoal (1 subgoal):\n 1. \\<And>n p. p \\<in> \\<P> (length Doc) n \\<Longrightarrow> P p", "by simp"], ["proof (state)\nthis:\n  P p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Append_mono: \"U \\<subseteq> V \\<Longrightarrow> P \\<subseteq> Q \\<Longrightarrow> Append U k P \\<subseteq> Append V k Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>U \\<subseteq> V; P \\<subseteq> Q\\<rbrakk>\n    \\<Longrightarrow> Append U k P \\<subseteq> Append V k Q", "by (auto simp add: Append_def)"], ["", "lemma pointwise_Append: \"pointwise (Append T k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pointwise (Append T k)", "by (auto simp add: pointwise_def Append_def)"], ["", "lemma regular_Append: \"regular (Append T k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. regular (Append T k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. regular (Append T k)", "have \"pointwise (Append T k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pointwise (Append T k)", "using pointwise_Append"], ["proof (prove)\nusing this:\n  pointwise (Append ?T ?k)\n\ngoal (1 subgoal):\n 1. pointwise (Append T k)", "by blast"], ["proof (state)\nthis:\n  pointwise (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "then"], ["proof (chain)\npicking this:\n  pointwise (Append T k)", "have \"pointbased (Append T k)\""], ["proof (prove)\nusing this:\n  pointwise (Append T k)\n\ngoal (1 subgoal):\n 1. pointbased (Append T k)", "using pointwise_implies_pointbased"], ["proof (prove)\nusing this:\n  pointwise (Append T k)\n  pointwise ?f \\<Longrightarrow> pointbased ?f\n\ngoal (1 subgoal):\n 1. pointbased (Append T k)", "by blast"], ["proof (state)\nthis:\n  pointbased (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "then"], ["proof (chain)\npicking this:\n  pointbased (Append T k)", "have \"continuous (Append T k)\""], ["proof (prove)\nusing this:\n  pointbased (Append T k)\n\ngoal (1 subgoal):\n 1. continuous (Append T k)", "using pointbased_implies_continuous"], ["proof (prove)\nusing this:\n  pointbased (Append T k)\n  pointbased ?f \\<Longrightarrow> continuous ?f\n\ngoal (1 subgoal):\n 1. continuous (Append T k)", "by blast"], ["proof (state)\nthis:\n  continuous (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "moreover"], ["proof (state)\nthis:\n  continuous (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "have \"setmonotone (Append T k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. setmonotone (Append T k)", "by (simp add: setmonotone_def Append_def)"], ["proof (state)\nthis:\n  setmonotone (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "ultimately"], ["proof (chain)\npicking this:\n  continuous (Append T k)\n  setmonotone (Append T k)", "show ?thesis"], ["proof (prove)\nusing this:\n  continuous (Append T k)\n  setmonotone (Append T k)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "using regular_def"], ["proof (prove)\nusing this:\n  continuous (Append T k)\n  setmonotone (Append T k)\n  regular ?f = (setmonotone ?f \\<and> continuous ?f)\n\ngoal (1 subgoal):\n 1. regular (Append T k)", "by blast"], ["proof (state)\nthis:\n  regular (Append T k)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}