{"file_name": "/home/qj213/afp-2021-10-22/thys/LocalLexing/TheoremD13.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LocalLexing", "problem_names": ["lemma pointwise_natUnion_swap:\n  assumes pointwise_f: \"pointwise f\"\n  shows \"f (natUnion G) = natUnion (\\<lambda> u. f (G u))\"", "lemma pointwise_Gen: \"pointwise Gen\"", "lemma thmD13_part1:\n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and> \\<T> k u = \\<Z> k u\"", "lemma thmD13_part2:      \n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\"", "theorem thmD13:      \n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and> \\<T> k u = \\<Z> k u \n    \\<and> items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\""], "translations": [["", "lemma pointwise_natUnion_swap:\n  assumes pointwise_f: \"pointwise f\"\n  shows \"f (natUnion G) = natUnion (\\<lambda> u. f (G u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "note f_simp = pointwise_simp[OF pointwise_f]"], ["proof (state)\nthis:\n  f ?X = \\<Union> {f {x} |x. x \\<in> ?X}\n\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "have h1: \"f (natUnion G) = \\<Union> {f {x} |x. x \\<in> (natUnion G)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (natUnion G) = \\<Union> {f {x} |x. x \\<in> natUnion G}", "using f_simp"], ["proof (prove)\nusing this:\n  f ?X = \\<Union> {f {x} |x. x \\<in> ?X}\n\ngoal (1 subgoal):\n 1. f (natUnion G) = \\<Union> {f {x} |x. x \\<in> natUnion G}", "by blast"], ["proof (state)\nthis:\n  f (natUnion G) = \\<Union> {f {x} |x. x \\<in> natUnion G}\n\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "have h2: \"\\<And> x. f (G x) =  \\<Union> {f {y} |y. y \\<in> G x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. f (G x) = \\<Union> {f {y} |y. y \\<in> G x}", "using f_simp"], ["proof (prove)\nusing this:\n  f ?X = \\<Union> {f {x} |x. x \\<in> ?X}\n\ngoal (1 subgoal):\n 1. \\<And>x. f (G x) = \\<Union> {f {y} |y. y \\<in> G x}", "by metis"], ["proof (state)\nthis:\n  f (G ?x) = \\<Union> {f {y} |y. y \\<in> G ?x}\n\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (natUnion G) = natUnion (\\<lambda>u. f (G u))", "apply (subst h1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {f {x} |x. x \\<in> natUnion G} = natUnion (\\<lambda>u. f (G u))", "apply (subst h2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> {f {x} |x. x \\<in> natUnion G} =\n    natUnion (\\<lambda>u. \\<Union> {f {y} |y. y \\<in> G u})", "apply (simp add: natUnion_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union>\n     {f {x} |x. \\<exists>xa. (\\<exists>n. xa = G n) \\<and> x \\<in> xa} =\n    \\<Union> {uu_. \\<exists>n. uu_ = \\<Union> {f {y} |y. y \\<in> G n}}", "by blast"], ["proof (state)\nthis:\n  f (natUnion G) = natUnion (\\<lambda>u. f (G u))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pointwise_Gen: \"pointwise Gen\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pointwise Gen", "by (simp add: pointwise_def Gen_def, blast)"], ["", "lemma thmD13_part1:\n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and> \\<T> k u = \\<Z> k u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n    \\<T> k u = \\<Z> k u", "proof (induct u)"], ["proof (state)\ngoal (2 subgoals):\n 1. items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0)) \\<and>\n    \\<T> k 0 = \\<Z> k 0\n 2. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0)) \\<and>\n    \\<T> k 0 = \\<Z> k 0\n 2. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0)) \\<and>\n    \\<T> k 0 = \\<Z> k 0", "using start"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\n\ngoal (1 subgoal):\n 1. items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0)) \\<and>\n    \\<T> k 0 = \\<Z> k 0", "by auto"], ["proof (state)\nthis:\n  items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0)) \\<and>\n  \\<T> k 0 = \\<Z> k 0\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "case (Suc u)"], ["proof (state)\nthis:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "from Suc"], ["proof (chain)\npicking this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u", "have sub: \"items_le k (\\<J> k (Suc u)) \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))\""], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n\ngoal (1 subgoal):\n 1. items_le k (\\<J> k (Suc u))\n    \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))", "using thmD9 valid_k"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n  \\<lbrakk>items_le ?k (\\<J> ?k ?u) = Gen (paths_le ?k (\\<P> ?k ?u));\n   \\<T> ?k ?u = \\<Z> ?k ?u; ?k \\<le> length Doc\\<rbrakk>\n  \\<Longrightarrow> items_le ?k (\\<J> ?k (Suc ?u))\n                    \\<subseteq> Gen (paths_le ?k (\\<P> ?k (Suc ?u)))\n  k \\<le> length Doc\n\ngoal (1 subgoal):\n 1. items_le k (\\<J> k (Suc u))\n    \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))", "by blast"], ["proof (state)\nthis:\n  items_le k (\\<J> k (Suc u)) \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "from Suc"], ["proof (chain)\npicking this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u", "have sup: \"items_le k (\\<J> k (Suc u)) \\<supseteq> Gen (paths_le k (\\<P> k (Suc u)))\""], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n\ngoal (1 subgoal):\n 1. Gen (paths_le k (\\<P> k (Suc u)))\n    \\<subseteq> items_le k (\\<J> k (Suc u))", "using thmD12"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n  \\<lbrakk>items_le ?k (\\<J> ?k ?u) = Gen (paths_le ?k (\\<P> ?k ?u));\n   \\<T> ?k ?u = \\<Z> ?k ?u\\<rbrakk>\n  \\<Longrightarrow> Gen (paths_le ?k (\\<P> ?k (Suc ?u)))\n                    \\<subseteq> items_le ?k (\\<J> ?k (Suc ?u))\n\ngoal (1 subgoal):\n 1. Gen (paths_le k (\\<P> k (Suc u)))\n    \\<subseteq> items_le k (\\<J> k (Suc u))", "by blast"], ["proof (state)\nthis:\n  Gen (paths_le k (\\<P> k (Suc u))) \\<subseteq> items_le k (\\<J> k (Suc u))\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "from Suc"], ["proof (chain)\npicking this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u", "have tokens: \"\\<T> k (Suc u) = \\<Z> k (Suc u)\""], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n\ngoal (1 subgoal):\n 1. \\<T> k (Suc u) = \\<Z> k (Suc u)", "using \\<T>_equals_\\<Z>_induct_step"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n  \\<T> k u = \\<Z> k u\n  \\<lbrakk>items_le ?k (\\<J> ?k ?u) = Gen (paths_le ?k (\\<P> ?k ?u));\n   \\<T> ?k ?u = \\<Z> ?k ?u\\<rbrakk>\n  \\<Longrightarrow> \\<T> ?k (Suc ?u) = \\<Z> ?k (Suc ?u)\n\ngoal (1 subgoal):\n 1. \\<T> k (Suc u) = \\<Z> k (Suc u)", "by blast"], ["proof (state)\nthis:\n  \\<T> k (Suc u) = \\<Z> k (Suc u)\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n       \\<T> k u = \\<Z> k u \\<Longrightarrow>\n       items_le k (\\<J> k (Suc u)) =\n       Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n       \\<T> k (Suc u) = \\<Z> k (Suc u)", "from sub sup tokens"], ["proof (chain)\npicking this:\n  items_le k (\\<J> k (Suc u)) \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))\n  Gen (paths_le k (\\<P> k (Suc u))) \\<subseteq> items_le k (\\<J> k (Suc u))\n  \\<T> k (Suc u) = \\<Z> k (Suc u)", "show ?case"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k (Suc u)) \\<subseteq> Gen (paths_le k (\\<P> k (Suc u)))\n  Gen (paths_le k (\\<P> k (Suc u))) \\<subseteq> items_le k (\\<J> k (Suc u))\n  \\<T> k (Suc u) = \\<Z> k (Suc u)\n\ngoal (1 subgoal):\n 1. items_le k (\\<J> k (Suc u)) = Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n    \\<T> k (Suc u) = \\<Z> k (Suc u)", "by blast"], ["proof (state)\nthis:\n  items_le k (\\<J> k (Suc u)) = Gen (paths_le k (\\<P> k (Suc u))) \\<and>\n  \\<T> k (Suc u) = \\<Z> k (Suc u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma thmD13_part2:      \n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "note part1 = thmD13_part1[OF start valid_k]"], ["proof (state)\nthis:\n  items_le k (\\<J> k ?u) = Gen (paths_le k (\\<P> k ?u)) \\<and>\n  \\<T> k ?u = \\<Z> k ?u\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "have e1: \"items_le k (\\<I> k) = natUnion (\\<lambda> u. items_le k (\\<J> k u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = natUnion (\\<lambda>u. items_le k (\\<J> k u))", "using items_le_pointwise pointwise_natUnion_swap"], ["proof (prove)\nusing this:\n  pointwise (items_le ?k)\n  pointwise ?f \\<Longrightarrow>\n  ?f (natUnion ?G) = natUnion (\\<lambda>u. ?f (?G u))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = natUnion (\\<lambda>u. items_le k (\\<J> k u))", "by auto"], ["proof (state)\nthis:\n  items_le k (\\<I> k) = natUnion (\\<lambda>u. items_le k (\\<J> k u))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "have e2: \"natUnion (\\<lambda> u. items_le k (\\<J> k u)) = natUnion  (\\<lambda> u. Gen (paths_le k (\\<P> k u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. items_le k (\\<J> k u)) =\n    natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u)))", "using part1"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k ?u) = Gen (paths_le k (\\<P> k ?u)) \\<and>\n  \\<T> k ?u = \\<Z> k ?u\n\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. items_le k (\\<J> k u)) =\n    natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u)))", "by auto"], ["proof (state)\nthis:\n  natUnion (\\<lambda>u. items_le k (\\<J> k u)) =\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u)))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "have e3: \"natUnion (\\<lambda> u. Gen (paths_le k (\\<P> k u))) = Gen (natUnion (\\<lambda> u. paths_le k (\\<P> k u)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u))) =\n    Gen (natUnion (\\<lambda>u. paths_le k (\\<P> k u)))", "using pointwise_Gen pointwise_natUnion_swap"], ["proof (prove)\nusing this:\n  pointwise Gen\n  pointwise ?f \\<Longrightarrow>\n  ?f (natUnion ?G) = natUnion (\\<lambda>u. ?f (?G u))\n\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u))) =\n    Gen (natUnion (\\<lambda>u. paths_le k (\\<P> k u)))", "by fastforce"], ["proof (state)\nthis:\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u))) =\n  Gen (natUnion (\\<lambda>u. paths_le k (\\<P> k u)))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "have e4: \"natUnion (\\<lambda> u. paths_le k (\\<P> k u)) = paths_le k (natUnion (\\<lambda> u. \\<P> k u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. paths_le k (\\<P> k u)) =\n    paths_le k (natUnion (\\<P> k))", "using paths_le_pointwise pointwise_natUnion_swap"], ["proof (prove)\nusing this:\n  pointwise (paths_le ?k)\n  pointwise ?f \\<Longrightarrow>\n  ?f (natUnion ?G) = natUnion (\\<lambda>u. ?f (?G u))\n\ngoal (1 subgoal):\n 1. natUnion (\\<lambda>u. paths_le k (\\<P> k u)) =\n    paths_le k (natUnion (\\<P> k))", "by fastforce"], ["proof (state)\nthis:\n  natUnion (\\<lambda>u. paths_le k (\\<P> k u)) =\n  paths_le k (natUnion (\\<P> k))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "from e1 e2 e3 e4"], ["proof (chain)\npicking this:\n  items_le k (\\<I> k) = natUnion (\\<lambda>u. items_le k (\\<J> k u))\n  natUnion (\\<lambda>u. items_le k (\\<J> k u)) =\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u)))\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u))) =\n  Gen (natUnion (\\<lambda>u. paths_le k (\\<P> k u)))\n  natUnion (\\<lambda>u. paths_le k (\\<P> k u)) =\n  paths_le k (natUnion (\\<P> k))", "show ?thesis"], ["proof (prove)\nusing this:\n  items_le k (\\<I> k) = natUnion (\\<lambda>u. items_le k (\\<J> k u))\n  natUnion (\\<lambda>u. items_le k (\\<J> k u)) =\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u)))\n  natUnion (\\<lambda>u. Gen (paths_le k (\\<P> k u))) =\n  Gen (natUnion (\\<lambda>u. paths_le k (\\<P> k u)))\n  natUnion (\\<lambda>u. paths_le k (\\<P> k u)) =\n  paths_le k (natUnion (\\<P> k))\n\ngoal (1 subgoal):\n 1. items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "by simp"], ["proof (state)\nthis:\n  items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem thmD13:      \n  assumes start: \"items_le k (\\<J> k 0) = Gen (paths_le k (\\<P> k 0))\"\n  assumes valid_k: \"k \\<le> length Doc\"\n  shows \"items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and> \\<T> k u = \\<Z> k u \n    \\<and> items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n    \\<T> k u = \\<Z> k u \\<and>\n    items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "using thmD13_part1[OF start valid_k] thmD13_part2[OF start valid_k]"], ["proof (prove)\nusing this:\n  items_le k (\\<J> k ?u) = Gen (paths_le k (\\<P> k ?u)) \\<and>\n  \\<T> k ?u = \\<Z> k ?u\n  items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))\n\ngoal (1 subgoal):\n 1. items_le k (\\<J> k u) = Gen (paths_le k (\\<P> k u)) \\<and>\n    \\<T> k u = \\<Z> k u \\<and>\n    items_le k (\\<I> k) = Gen (paths_le k (\\<Q> k))", "by blast"], ["", "end"], ["", "end"]]}