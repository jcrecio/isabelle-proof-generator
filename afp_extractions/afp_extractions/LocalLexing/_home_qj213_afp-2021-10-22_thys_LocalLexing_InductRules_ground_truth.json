{"file_name": "/home/qj213/afp-2021-10-22/thys/LocalLexing/InductRules.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LocalLexing", "problem_names": ["lemma disjCases2[consumes 1, case_names 1 2]:\n  assumes AB: \"A \\<or> B\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  shows \"P\"", "lemma disjCases3[consumes 1, case_names 1 2 3]:\n  assumes AB: \"A \\<or> B \\<or> C\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  shows \"P\"", "lemma disjCases4[consumes 1, case_names 1 2 3 4]:\n  assumes AB: \"A \\<or> B \\<or> C \\<or> D\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  and DP: \"D \\<Longrightarrow> P\"\n  shows \"P\"", "lemma disjCases5[consumes 1, case_names 1 2 3 4 5]:\n  assumes AB: \"A \\<or> B \\<or> C \\<or> D \\<or> E\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  and DP: \"D \\<Longrightarrow> P\"\n  and EP: \"E \\<Longrightarrow> P\"\n  shows \"P\"", "lemma minimal_witness_ex:\n  assumes k: \"P (k::nat)\"\n  shows \"\\<exists> k0. k0 \\<le> k \\<and> P k0 \\<and> (\\<forall> k. k < k0 \\<longrightarrow> \\<not> (P k))\"", "lemma minimal_witness[consumes 1, case_names Minimal]:\n  assumes \"P (k::nat)\"\n  and \"\\<And> K. K \\<le> k \\<Longrightarrow> P K \\<Longrightarrow> (\\<And> k. k < K \\<Longrightarrow> \\<not> (P k)) \\<Longrightarrow> Q\"\n  shows \"Q\"", "lemma ex_minimal_witness[consumes 1, case_names Minimal]:\n  assumes \"\\<exists> k. P (k::nat)\"\n  and \"\\<And> K. P K \\<Longrightarrow> (\\<And> k. k < K \\<Longrightarrow> \\<not> (P k)) \\<Longrightarrow> Q\"\n  shows \"Q\""], "translations": [["", "lemma disjCases2[consumes 1, case_names 1 2]:\n  assumes AB: \"A \\<or> B\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "from AB AP BP"], ["proof (chain)\npicking this:\n  A \\<or> B\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<or> B\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by blast"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma disjCases3[consumes 1, case_names 1 2 3]:\n  assumes AB: \"A \\<or> B \\<or> C\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "from AB AP BP CP"], ["proof (chain)\npicking this:\n  A \\<or> B \\<or> C\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<or> B \\<or> C\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by blast"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma disjCases4[consumes 1, case_names 1 2 3 4]:\n  assumes AB: \"A \\<or> B \\<or> C \\<or> D\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  and DP: \"D \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "from AB AP BP CP DP"], ["proof (chain)\npicking this:\n  A \\<or> B \\<or> C \\<or> D\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P\n  D \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<or> B \\<or> C \\<or> D\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P\n  D \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by blast"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma disjCases5[consumes 1, case_names 1 2 3 4 5]:\n  assumes AB: \"A \\<or> B \\<or> C \\<or> D \\<or> E\"\n  and AP: \"A \\<Longrightarrow> P\"\n  and BP: \"B \\<Longrightarrow> P\"\n  and CP: \"C \\<Longrightarrow> P\"\n  and DP: \"D \\<Longrightarrow> P\"\n  and EP: \"E \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P", "from AB AP BP CP DP EP"], ["proof (chain)\npicking this:\n  A \\<or> B \\<or> C \\<or> D \\<or> E\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P\n  D \\<Longrightarrow> P\n  E \\<Longrightarrow> P", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<or> B \\<or> C \\<or> D \\<or> E\n  A \\<Longrightarrow> P\n  B \\<Longrightarrow> P\n  C \\<Longrightarrow> P\n  D \\<Longrightarrow> P\n  E \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by blast"], ["proof (state)\nthis:\n  P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma minimal_witness_ex:\n  assumes k: \"P (k::nat)\"\n  shows \"\\<exists> k0. k0 \\<le> k \\<and> P k0 \\<and> (\\<forall> k. k < k0 \\<longrightarrow> \\<not> (P k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "let ?K = \"{ h. h \\<le> k \\<and> P h }\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "have finite_K: \"finite ?K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {h. h \\<le> k \\<and> P h}", "by auto"], ["proof (state)\nthis:\n  finite {h. h \\<le> k \\<and> P h}\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "have \"k \\<in> ?K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> {h. h \\<le> k \\<and> P h}", "by (simp add: k)"], ["proof (state)\nthis:\n  k \\<in> {h. h \\<le> k \\<and> P h}\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "then"], ["proof (chain)\npicking this:\n  k \\<in> {h. h \\<le> k \\<and> P h}", "have nonempty_K: \"?K \\<noteq> {}\""], ["proof (prove)\nusing this:\n  k \\<in> {h. h \\<le> k \\<and> P h}\n\ngoal (1 subgoal):\n 1. {h. h \\<le> k \\<and> P h} \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  {h. h \\<le> k \\<and> P h} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "let ?k = \"Min ?K\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "have witness: \"?k \\<le> k \\<and> P ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Min {h. h \\<le> k \\<and> P h} \\<le> k \\<and>\n    P (Min {h. h \\<le> k \\<and> P h})", "by (metis (mono_tags, lifting) Min_in finite_K mem_Collect_eq nonempty_K)"], ["proof (state)\nthis:\n  Min {h. h \\<le> k \\<and> P h} \\<le> k \\<and>\n  P (Min {h. h \\<le> k \\<and> P h})\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "have minimal: \"\\<forall> h. h < ?k \\<longrightarrow> \\<not> (P h)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>h<Min {h. h \\<le> k \\<and> P h}. \\<not> P h", "by (metis Min_le witness dual_order.strict_implies_order \n        dual_order.trans finite_K leD mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<forall>h<Min {h. h \\<le> k \\<and> P h}. \\<not> P h\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "from witness minimal"], ["proof (chain)\npicking this:\n  Min {h. h \\<le> k \\<and> P h} \\<le> k \\<and>\n  P (Min {h. h \\<le> k \\<and> P h})\n  \\<forall>h<Min {h. h \\<le> k \\<and> P h}. \\<not> P h", "show ?thesis"], ["proof (prove)\nusing this:\n  Min {h. h \\<le> k \\<and> P h} \\<le> k \\<and>\n  P (Min {h. h \\<le> k \\<and> P h})\n  \\<forall>h<Min {h. h \\<le> k \\<and> P h}. \\<not> P h\n\ngoal (1 subgoal):\n 1. \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)", "by metis"], ["proof (state)\nthis:\n  \\<exists>k0\\<le>k. P k0 \\<and> (\\<forall>k<k0. \\<not> P k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma minimal_witness[consumes 1, case_names Minimal]:\n  assumes \"P (k::nat)\"\n  and \"\\<And> K. K \\<le> k \\<Longrightarrow> P K \\<Longrightarrow> (\\<And> k. k < K \\<Longrightarrow> \\<not> (P k)) \\<Longrightarrow> Q\"\n  shows \"Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q", "from assms minimal_witness_ex"], ["proof (chain)\npicking this:\n  P k\n  \\<lbrakk>?K \\<le> k; P ?K;\n   \\<And>k. k < ?K \\<Longrightarrow> \\<not> P k\\<rbrakk>\n  \\<Longrightarrow> Q\n  ?P ?k \\<Longrightarrow>\n  \\<exists>k0\\<le>?k. ?P k0 \\<and> (\\<forall>k<k0. \\<not> ?P k)", "show ?thesis"], ["proof (prove)\nusing this:\n  P k\n  \\<lbrakk>?K \\<le> k; P ?K;\n   \\<And>k. k < ?K \\<Longrightarrow> \\<not> P k\\<rbrakk>\n  \\<Longrightarrow> Q\n  ?P ?k \\<Longrightarrow>\n  \\<exists>k0\\<le>?k. ?P k0 \\<and> (\\<forall>k<k0. \\<not> ?P k)\n\ngoal (1 subgoal):\n 1. Q", "by metis"], ["proof (state)\nthis:\n  Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ex_minimal_witness[consumes 1, case_names Minimal]:\n  assumes \"\\<exists> k. P (k::nat)\"\n  and \"\\<And> K. P K \\<Longrightarrow> (\\<And> k. k < K \\<Longrightarrow> \\<not> (P k)) \\<Longrightarrow> Q\"\n  shows \"Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q", "from assms minimal_witness_ex"], ["proof (chain)\npicking this:\n  \\<exists>k. P k\n  \\<lbrakk>P ?K; \\<And>k. k < ?K \\<Longrightarrow> \\<not> P k\\<rbrakk>\n  \\<Longrightarrow> Q\n  ?P ?k \\<Longrightarrow>\n  \\<exists>k0\\<le>?k. ?P k0 \\<and> (\\<forall>k<k0. \\<not> ?P k)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>k. P k\n  \\<lbrakk>P ?K; \\<And>k. k < ?K \\<Longrightarrow> \\<not> P k\\<rbrakk>\n  \\<Longrightarrow> Q\n  ?P ?k \\<Longrightarrow>\n  \\<exists>k0\\<le>?k. ?P k0 \\<and> (\\<forall>k<k0. \\<not> ?P k)\n\ngoal (1 subgoal):\n 1. Q", "by metis"], ["proof (state)\nthis:\n  Q\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}