{"file_name": "/home/qj213/afp-2021-10-22/thys/Ptolemys_Theorem/Ptolemys_Theorem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ptolemys_Theorem", "problem_names": ["lemma sin_arcsin_abs: \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> sin (arcsin y) = y\"", "lemma arccos_lbound_abs [simp]:\n  \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> 0 \\<le> arccos y\"", "lemma arccos_ubound_abs [simp]:\n  \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> arccos y \\<le> pi\"", "lemma sin_ge_zero_iff:\n  assumes \"0 \\<le> x\" \"x < 2 * pi\"\n  shows \"0 \\<le> sin x \\<longleftrightarrow> x \\<le> pi\"", "lemma sin_less_zero_iff:\n  assumes \"0 \\<le> x\" \"x < 2 * pi\"\n  shows \"sin x < 0 \\<longleftrightarrow> pi < x\"", "lemma axis_nth_eq_0 [simp]:\n  assumes \"i \\<noteq> j\"\n  shows \"axis i x $ j = 0\"", "lemma norm_axis:\n  fixes x :: real\n  shows \"norm (axis i x) = abs x\"", "lemma norm_eq_on_real_2_vec:\n  fixes x :: \"real ^ 2\"\n  shows \"norm x = sqrt ((x $ 1) ^ 2 + (x $ 2) ^ 2)\"", "lemma dist_eq_on_real_2_vec:\n  fixes a b :: \"real ^ 2\"\n  shows \"dist a b = sqrt ((a $ 1 - b $ 1) ^ 2 + (a $ 2 - b $ 2) ^ 2)\"", "lemma nth_of_radiant_1 [simp]:\n  \"of_radiant \\<omega> $ 1 = cos \\<omega>\"", "lemma nth_of_radiant_2 [simp]:\n  \"of_radiant \\<omega> $ 2 = sin \\<omega>\"", "lemma norm_of_radiant:\n  \"norm (of_radiant \\<omega>) = 1\"", "lemma of_radiant_plus_2pi:\n  \"of_radiant (\\<omega> + 2 * pi) = of_radiant \\<omega>\"", "lemma of_radiant_minus_2pi:\n  \"of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>\"", "lemma normalize_eq:\n  \"norm p *\\<^sub>R normalize p = p\"", "lemma norm_normalize:\n  \"norm (normalize p) = 1\"", "lemma nth_normalize [simp]:\n  \"\\<bar>normalize p $ i\\<bar> \\<le> 1\"", "lemma normalize_square:\n  \"(normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1\"", "lemma nth_normalize_ge_zero_iff:\n  \"0 \\<le> normalize p $ i \\<longleftrightarrow> 0 \\<le> p $ i\"", "lemma nth_normalize_less_zero_iff:\n  \"normalize p $ i < 0 \\<longleftrightarrow> p $ i < 0\"", "lemma normalize_boundary_iff:\n  \"\\<bar>normalize p $ 1\\<bar> = 1 \\<longleftrightarrow> p $ 2 = 0\"", "lemma between_normalize_if_distant_from_0:\n  assumes \"norm p \\<ge> 1\"\n  shows \"between (0, p) (normalize p)\"", "lemma between_normalize_if_near_0:\n  assumes \"norm p \\<le> 1\"\n  shows \"between (0, normalize p) p\"", "lemma radiant_of:\n  \"0 \\<le> radiant_of p \\<and> radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p\"", "lemma radiant_of_bounds [simp]:\n  \"0 \\<le> radiant_of p\" \"radiant_of p < 2 * pi\"", "lemma radiant_of_weak_ubound [simp]:\n  \"radiant_of p \\<le> 2 * pi\"", "lemma polar_form_eq:\n  \"norm p *\\<^sub>R of_radiant (radiant_of p) = p\"", "lemma relative_polar_form_eq:\n  \"Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P\"", "lemma dist_circle_segment:\n  assumes \"0 \\<le> radius\" \"0 \\<le> \\<alpha>\" \"\\<alpha> \\<le> \\<beta>\" \"\\<beta> \\<le> 2 * pi\"\n  shows \"dist (center + radius *\\<^sub>R of_radiant \\<alpha>) (center + radius *\\<^sub>R of_radiant \\<beta>) = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\"\n    (is \"?lhs = ?rhs\")", "theorem ptolemy_trigonometric:\n  fixes \\<omega>\\<^sub>1 \\<omega>\\<^sub>2 \\<omega>\\<^sub>3 :: real\n  shows \"sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) * sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) = sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 + sin \\<omega>\\<^sub>2 * sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\"", "theorem ptolemy:\n  fixes A B C D center :: \"real ^ 2\"\n  assumes \"dist center A = radius\" and \"dist center B = radius\"\n  assumes \"dist center C = radius\" and \"dist center D = radius\"\n  assumes ordering_of_points:\n    \"radiant_of (A - center) \\<le> radiant_of (B - center)\"\n    \"radiant_of (B - center) \\<le> radiant_of (C - center)\"\n    \"radiant_of (C - center) \\<le> radiant_of (D - center)\"\n  shows \"dist A C * dist B D = dist A B * dist C D + dist A D * dist B C\""], "translations": [["", "lemma sin_arcsin_abs: \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> sin (arcsin y) = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> sin (arcsin y) = y", "by (simp add: abs_le_iff)"], ["", "text \\<open>\nThe further lemmas are the required variants from existing lemmas @{thm [source] arccos_lbound}\nand @{thm [source] arccos_ubound}.\n\\<close>"], ["", "lemma arccos_lbound_abs [simp]:\n  \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> 0 \\<le> arccos y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> 0 \\<le> arccos y", "by (simp add: arccos_lbound)"], ["", "lemma arccos_ubound_abs [simp]:\n  \"\\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> arccos y \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>y\\<bar> \\<le> 1 \\<Longrightarrow> arccos y \\<le> pi", "by (simp add: arccos_ubound)"], ["", "text \\<open>\nAs we choose angles to be between @{term \"0::real\"} between @{term \"2 * pi\"},\nwe need some lemmas to reason about the sign of @{term \"sin x\"}\nfor angles @{term \"x\"}.\n\\<close>"], ["", "lemma sin_ge_zero_iff:\n  assumes \"0 \\<le> x\" \"x < 2 * pi\"\n  shows \"0 \\<le> sin x \\<longleftrightarrow> x \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> sin x) = (x \\<le> pi)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> sin x \\<Longrightarrow> x \\<le> pi\n 2. x \\<le> pi \\<Longrightarrow> 0 \\<le> sin x", "assume \"0 \\<le> sin x\""], ["proof (state)\nthis:\n  0 \\<le> sin x\n\ngoal (2 subgoals):\n 1. 0 \\<le> sin x \\<Longrightarrow> x \\<le> pi\n 2. x \\<le> pi \\<Longrightarrow> 0 \\<le> sin x", "show \"x \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> pi", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<le> pi \\<Longrightarrow> False", "assume \"\\<not> x \\<le> pi\""], ["proof (state)\nthis:\n  \\<not> x \\<le> pi\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> pi \\<Longrightarrow> False", "from this \\<open>x < 2 * pi\\<close>"], ["proof (chain)\npicking this:\n  \\<not> x \\<le> pi\n  x < 2 * pi", "have \"sin x < 0\""], ["proof (prove)\nusing this:\n  \\<not> x \\<le> pi\n  x < 2 * pi\n\ngoal (1 subgoal):\n 1. sin x < 0", "using sin_lt_zero"], ["proof (prove)\nusing this:\n  \\<not> x \\<le> pi\n  x < 2 * pi\n  \\<lbrakk>pi < ?x; ?x < 2 * pi\\<rbrakk> \\<Longrightarrow> sin ?x < 0\n\ngoal (1 subgoal):\n 1. sin x < 0", "by auto"], ["proof (state)\nthis:\n  sin x < 0\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> pi \\<Longrightarrow> False", "from this \\<open>0 \\<le> sin x\\<close>"], ["proof (chain)\npicking this:\n  sin x < 0\n  0 \\<le> sin x", "show False"], ["proof (prove)\nusing this:\n  sin x < 0\n  0 \\<le> sin x\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<le> pi\n\ngoal (1 subgoal):\n 1. x \\<le> pi \\<Longrightarrow> 0 \\<le> sin x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> pi \\<Longrightarrow> 0 \\<le> sin x", "assume \"x \\<le> pi\""], ["proof (state)\nthis:\n  x \\<le> pi\n\ngoal (1 subgoal):\n 1. x \\<le> pi \\<Longrightarrow> 0 \\<le> sin x", "from this \\<open>0 \\<le> x\\<close>"], ["proof (chain)\npicking this:\n  x \\<le> pi\n  0 \\<le> x", "show \"0 \\<le> sin x\""], ["proof (prove)\nusing this:\n  x \\<le> pi\n  0 \\<le> x\n\ngoal (1 subgoal):\n 1. 0 \\<le> sin x", "by (simp add: sin_ge_zero)"], ["proof (state)\nthis:\n  0 \\<le> sin x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sin_less_zero_iff:\n  assumes \"0 \\<le> x\" \"x < 2 * pi\"\n  shows \"sin x < 0 \\<longleftrightarrow> pi < x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (sin x < 0) = (pi < x)", "using assms sin_ge_zero_iff"], ["proof (prove)\nusing this:\n  0 \\<le> x\n  x < 2 * pi\n  \\<lbrakk>0 \\<le> ?x; ?x < 2 * pi\\<rbrakk>\n  \\<Longrightarrow> (0 \\<le> sin ?x) = (?x \\<le> pi)\n\ngoal (1 subgoal):\n 1. (sin x < 0) = (pi < x)", "by fastforce"], ["", "subsubsection \\<open>Addition to Finite-Cartesian-Product theory\\<close>"], ["", "text \\<open>\nHere follow generally useful additions and specialised equations\nfor two-dimensional real-valued vectors.\n\\<close>"], ["", "lemma axis_nth_eq_0 [simp]:\n  assumes \"i \\<noteq> j\"\n  shows \"axis i x $ j = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. axis i x $ j = (0::'b)", "using assms"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. axis i x $ j = (0::'b)", "unfolding axis_def"], ["proof (prove)\nusing this:\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. (\\<chi>ia. if ia = i then x else (0::'b)) $ j = (0::'b)", "by simp"], ["", "lemma norm_axis:\n  fixes x :: real\n  shows \"norm (axis i x) = abs x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (axis i x) = \\<bar>x\\<bar>", "by (simp add: norm_eq_sqrt_inner inner_axis_axis)"], ["", "lemma norm_eq_on_real_2_vec:\n  fixes x :: \"real ^ 2\"\n  shows \"norm x = sqrt ((x $ 1) ^ 2 + (x $ 2) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm x = sqrt ((x $ 1)\\<^sup>2 + (x $ 2)\\<^sup>2)", "by (simp add: norm_eq_sqrt_inner inner_vec_def UNIV_2 power2_eq_square)"], ["", "lemma dist_eq_on_real_2_vec:\n  fixes a b :: \"real ^ 2\"\n  shows \"dist a b = sqrt ((a $ 1 - b $ 1) ^ 2 + (a $ 2 - b $ 2) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a b = sqrt ((a $ 1 - b $ 1)\\<^sup>2 + (a $ 2 - b $ 2)\\<^sup>2)", "unfolding dist_norm norm_eq_on_real_2_vec"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (((a - b) $ 1)\\<^sup>2 + ((a - b) $ 2)\\<^sup>2) =\n    sqrt ((a $ 1 - b $ 1)\\<^sup>2 + (a $ 2 - b $ 2)\\<^sup>2)", "by simp"], ["", "subsection \\<open>Polar Form of Two-Dimensional Real-Valued Vectors\\<close>"], ["", "subsubsection \\<open>Definitions to Transfer to Polar Form and Back\\<close>"], ["", "definition of_radiant :: \"real \\<Rightarrow> real ^ 2\"\nwhere\n  \"of_radiant \\<omega> = axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)\""], ["", "definition normalize :: \"real ^ 2 \\<Rightarrow> real ^ 2\"\nwhere\n  \"normalize p = (if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p)\""], ["", "definition radiant_of :: \"real ^ 2 \\<Rightarrow> real\"\nwhere\n  \"radiant_of p = (THE \\<omega>. 0 \\<le> \\<omega> \\<and> \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p)\""], ["", "text \\<open>\nThe vector @{term \"of_radiant \\<omega>\"} is the vector with length @{term \"1::real\"} and angle @{term \"\\<omega>\"}\nto the first axis.\nWe normalize vectors to length @{term \"1::real\"} keeping their orientation with the normalize function.\nConversely, @{term \"radiant_of p\"} is the angle of vector @{term p} to the first axis, where we\nchoose @{term \"radiant_of\"} to return angles between @{term \"0::real\"} and @{term \"2 * pi\"},\nfollowing the usual high-school convention.\nWith these definitions, we can express the main result\n@{term \"norm p *\\<^sub>R of_radiant (radiant_of p) = p\"}.\nNote that the main result holds for any definition of @{term \"radiant_of 0\"}.\nSo, we choose to define @{term \"normalize 0\"} and @{term \"radiant_of 0\"}, such that\n@{term \"radiant_of 0 = 0\"}.\n\\<close>"], ["", "subsubsection \\<open>Lemmas on @{const of_radiant}\\<close>"], ["", "lemma nth_of_radiant_1 [simp]:\n  \"of_radiant \\<omega> $ 1 = cos \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant \\<omega> $ 1 = cos \\<omega>", "unfolding of_radiant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)) $ 1 = cos \\<omega>", "by simp"], ["", "lemma nth_of_radiant_2 [simp]:\n  \"of_radiant \\<omega> $ 2 = sin \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant \\<omega> $ 2 = sin \\<omega>", "unfolding of_radiant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)) $ 2 = sin \\<omega>", "by simp"], ["", "lemma norm_of_radiant:\n  \"norm (of_radiant \\<omega>) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (of_radiant \\<omega>) = 1", "unfolding of_radiant_def norm_eq_on_real_2_vec"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     (((axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)) $ 1)\\<^sup>2 +\n      ((axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)) $ 2)\\<^sup>2) =\n    1", "by simp"], ["", "lemma of_radiant_plus_2pi:\n  \"of_radiant (\\<omega> + 2 * pi) = of_radiant \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> + 2 * pi) = of_radiant \\<omega>", "unfolding of_radiant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. axis 1 (cos (\\<omega> + 2 * pi)) + axis 2 (sin (\\<omega> + 2 * pi)) =\n    axis 1 (cos \\<omega>) + axis 2 (sin \\<omega>)", "by simp"], ["", "lemma of_radiant_minus_2pi:\n  \"of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "have \"of_radiant (\\<omega> - 2 * pi) = of_radiant (\\<omega> - 2 * pi + 2 * pi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant (\\<omega> - 2 * pi + 2 * pi)", "by (simp only: of_radiant_plus_2pi)"], ["proof (state)\nthis:\n  of_radiant (\\<omega> - 2 * pi) = of_radiant (\\<omega> - 2 * pi + 2 * pi)\n\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "also"], ["proof (state)\nthis:\n  of_radiant (\\<omega> - 2 * pi) = of_radiant (\\<omega> - 2 * pi + 2 * pi)\n\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "have \"\\<dots> = of_radiant \\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi + 2 * pi) = of_radiant \\<omega>", "by simp"], ["proof (state)\nthis:\n  of_radiant (\\<omega> - 2 * pi + 2 * pi) = of_radiant \\<omega>\n\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "finally"], ["proof (chain)\npicking this:\n  of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>\n\ngoal (1 subgoal):\n 1. of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>", "."], ["proof (state)\nthis:\n  of_radiant (\\<omega> - 2 * pi) = of_radiant \\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Lemmas on @{const normalize}\\<close>"], ["", "lemma normalize_eq:\n  \"norm p *\\<^sub>R normalize p = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm p *\\<^sub>R normalize p = p", "unfolding normalize_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm p *\\<^sub>R\n    (if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) =\n    p", "by simp"], ["", "lemma norm_normalize:\n  \"norm (normalize p) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (normalize p) = 1", "unfolding normalize_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) = 1", "by (auto simp add: norm_axis)"], ["", "lemma nth_normalize [simp]:\n  \"\\<bar>normalize p $ i\\<bar> \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>normalize p $ i\\<bar> \\<le> 1", "using norm_normalize component_le_norm_cart"], ["proof (prove)\nusing this:\n  norm (normalize ?p) = 1\n  \\<bar>?x $ ?i\\<bar> \\<le> norm ?x\n\ngoal (1 subgoal):\n 1. \\<bar>normalize p $ i\\<bar> \\<le> 1", "by metis"], ["", "lemma normalize_square:\n  \"(normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1", "using dot_square_norm[of \"normalize p\"]"], ["proof (prove)\nusing this:\n  normalize p \\<bullet> normalize p = (norm (normalize p))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1", "by (simp add: inner_vec_def UNIV_2 power2_eq_square norm_normalize)"], ["", "lemma nth_normalize_ge_zero_iff:\n  \"0 \\<le> normalize p $ i \\<longleftrightarrow> 0 \\<le> p $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0 \\<le> normalize p $ i) = (0 \\<le> p $ i)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 \\<le> normalize p $ i \\<Longrightarrow> 0 \\<le> p $ i\n 2. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "assume \"0 \\<le> normalize p $ i\""], ["proof (state)\nthis:\n  0 \\<le> normalize p $ i\n\ngoal (2 subgoals):\n 1. 0 \\<le> normalize p $ i \\<Longrightarrow> 0 \\<le> p $ i\n 2. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> normalize p $ i", "show \"0 \\<le> p $ i\""], ["proof (prove)\nusing this:\n  0 \\<le> normalize p $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i", "unfolding normalize_def"], ["proof (prove)\nusing this:\n  0 \\<le> (if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i", "by (auto split: if_split_asm simp add: zero_le_divide_iff)"], ["proof (state)\nthis:\n  0 \\<le> p $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "assume \"0 \\<le> p $ i\""], ["proof (state)\nthis:\n  0 \\<le> p $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "have \"0 \\<le> axis 1 (1 :: real) $ i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> axis 1 1 $ i", "using exhaust_2[of i]"], ["proof (prove)\nusing this:\n  i = 1 \\<or> i = 2\n\ngoal (1 subgoal):\n 1. 0 \\<le> axis 1 1 $ i", "by auto"], ["proof (state)\nthis:\n  0 \\<le> axis 1 1 $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> p $ i \\<Longrightarrow> 0 \\<le> normalize p $ i", "from this \\<open>0 \\<le> p $ i\\<close>"], ["proof (chain)\npicking this:\n  0 \\<le> axis 1 1 $ i\n  0 \\<le> p $ i", "show \"0 \\<le> normalize p $ i\""], ["proof (prove)\nusing this:\n  0 \\<le> axis 1 1 $ i\n  0 \\<le> p $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> normalize p $ i", "unfolding normalize_def"], ["proof (prove)\nusing this:\n  0 \\<le> axis 1 1 $ i\n  0 \\<le> p $ i\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) $ i", "by auto"], ["proof (state)\nthis:\n  0 \\<le> normalize p $ i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_normalize_less_zero_iff:\n  \"normalize p $ i < 0 \\<longleftrightarrow> p $ i < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (normalize p $ i < 0) = (p $ i < 0)", "using nth_normalize_ge_zero_iff leD leI"], ["proof (prove)\nusing this:\n  (0 \\<le> normalize ?p $ ?i) = (0 \\<le> ?p $ ?i)\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n\ngoal (1 subgoal):\n 1. (normalize p $ i < 0) = (p $ i < 0)", "by metis"], ["", "lemma normalize_boundary_iff:\n  \"\\<bar>normalize p $ 1\\<bar> = 1 \\<longleftrightarrow> p $ 2 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<bar>normalize p $ 1\\<bar> = 1) = (p $ 2 = 0)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<bar>normalize p $ 1\\<bar> = 1 \\<Longrightarrow> p $ 2 = 0\n 2. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "assume \"\\<bar>normalize p $ 1\\<bar> = 1\""], ["proof (state)\nthis:\n  \\<bar>normalize p $ 1\\<bar> = 1\n\ngoal (2 subgoals):\n 1. \\<bar>normalize p $ 1\\<bar> = 1 \\<Longrightarrow> p $ 2 = 0\n 2. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "from this"], ["proof (chain)\npicking this:\n  \\<bar>normalize p $ 1\\<bar> = 1", "have 1: \"(p $ 1) ^ 2 = norm p ^ 2\""], ["proof (prove)\nusing this:\n  \\<bar>normalize p $ 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2", "unfolding normalize_def"], ["proof (prove)\nusing this:\n  \\<bar>(if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) $ 1\\<bar> = 1\n\ngoal (1 subgoal):\n 1. (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2", "by (auto split: if_split_asm simp add: power2_eq_iff)"], ["proof (state)\nthis:\n  (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<bar>normalize p $ 1\\<bar> = 1 \\<Longrightarrow> p $ 2 = 0\n 2. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "moreover"], ["proof (state)\nthis:\n  (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<bar>normalize p $ 1\\<bar> = 1 \\<Longrightarrow> p $ 2 = 0\n 2. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "have \"(p $ 1) ^ 2 + (p $ 2) ^ 2 = norm p ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (p $ 1)\\<^sup>2 + (p $ 2)\\<^sup>2 = (norm p)\\<^sup>2", "using norm_eq_on_real_2_vec"], ["proof (prove)\nusing this:\n  norm ?x = sqrt ((?x $ 1)\\<^sup>2 + (?x $ 2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (p $ 1)\\<^sup>2 + (p $ 2)\\<^sup>2 = (norm p)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (p $ 1)\\<^sup>2 + (p $ 2)\\<^sup>2 = (norm p)\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<bar>normalize p $ 1\\<bar> = 1 \\<Longrightarrow> p $ 2 = 0\n 2. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "ultimately"], ["proof (chain)\npicking this:\n  (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2\n  (p $ 1)\\<^sup>2 + (p $ 2)\\<^sup>2 = (norm p)\\<^sup>2", "show \"p $ 2 = 0\""], ["proof (prove)\nusing this:\n  (p $ 1)\\<^sup>2 = (norm p)\\<^sup>2\n  (p $ 1)\\<^sup>2 + (p $ 2)\\<^sup>2 = (norm p)\\<^sup>2\n\ngoal (1 subgoal):\n 1. p $ 2 = 0", "by simp"], ["proof (state)\nthis:\n  p $ 2 = 0\n\ngoal (1 subgoal):\n 1. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "assume \"p $ 2 = 0\""], ["proof (state)\nthis:\n  p $ 2 = 0\n\ngoal (1 subgoal):\n 1. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "from this"], ["proof (chain)\npicking this:\n  p $ 2 = 0", "have \"\\<bar>p $ 1\\<bar> = norm p\""], ["proof (prove)\nusing this:\n  p $ 2 = 0\n\ngoal (1 subgoal):\n 1. \\<bar>p $ 1\\<bar> = norm p", "by (auto simp add: norm_eq_on_real_2_vec)"], ["proof (state)\nthis:\n  \\<bar>p $ 1\\<bar> = norm p\n\ngoal (1 subgoal):\n 1. p $ 2 = 0 \\<Longrightarrow> \\<bar>normalize p $ 1\\<bar> = 1", "from this"], ["proof (chain)\npicking this:\n  \\<bar>p $ 1\\<bar> = norm p", "show \"\\<bar>normalize p $ 1\\<bar> = 1\""], ["proof (prove)\nusing this:\n  \\<bar>p $ 1\\<bar> = norm p\n\ngoal (1 subgoal):\n 1. \\<bar>normalize p $ 1\\<bar> = 1", "unfolding normalize_def"], ["proof (prove)\nusing this:\n  \\<bar>p $ 1\\<bar> = norm p\n\ngoal (1 subgoal):\n 1. \\<bar>(if p = 0 then axis 1 1 else (1 / norm p) *\\<^sub>R p) $ 1\\<bar> =\n    1", "by simp"], ["proof (state)\nthis:\n  \\<bar>normalize p $ 1\\<bar> = 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma between_normalize_if_distant_from_0:\n  assumes \"norm p \\<ge> 1\"\n  shows \"between (0, p) (normalize p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. between (0, p) (normalize p)", "using assms"], ["proof (prove)\nusing this:\n  1 \\<le> norm p\n\ngoal (1 subgoal):\n 1. between (0, p) (normalize p)", "by (auto simp add: between_mem_segment closed_segment_def normalize_def)"], ["", "lemma between_normalize_if_near_0:\n  assumes \"norm p \\<le> 1\"\n  shows \"between (0, normalize p) p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "have \"0 \\<le> norm p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> norm p", "by simp"], ["proof (state)\nthis:\n  0 \\<le> norm p\n\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "from assms"], ["proof (chain)\npicking this:\n  norm p \\<le> 1", "have \"p = (norm p / norm p) *\\<^sub>R p \\<and> 0 \\<le> norm p \\<and> norm p \\<le> 1\""], ["proof (prove)\nusing this:\n  norm p \\<le> 1\n\ngoal (1 subgoal):\n 1. p = (norm p / norm p) *\\<^sub>R p \\<and>\n    0 \\<le> norm p \\<and> norm p \\<le> 1", "by auto"], ["proof (state)\nthis:\n  p = (norm p / norm p) *\\<^sub>R p \\<and>\n  0 \\<le> norm p \\<and> norm p \\<le> 1\n\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "from this"], ["proof (chain)\npicking this:\n  p = (norm p / norm p) *\\<^sub>R p \\<and>\n  0 \\<le> norm p \\<and> norm p \\<le> 1", "have \"\\<exists>u. p = (u / norm p) *\\<^sub>R p \\<and> 0 \\<le> u \\<and> u \\<le> 1\""], ["proof (prove)\nusing this:\n  p = (norm p / norm p) *\\<^sub>R p \\<and>\n  0 \\<le> norm p \\<and> norm p \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       p = (u / norm p) *\\<^sub>R p \\<and> 0 \\<le> u \\<and> u \\<le> 1", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. p = (u / norm p) *\\<^sub>R p \\<and> 0 \\<le> u \\<and> u \\<le> 1\n\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "from this"], ["proof (chain)\npicking this:\n  \\<exists>u. p = (u / norm p) *\\<^sub>R p \\<and> 0 \\<le> u \\<and> u \\<le> 1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>u. p = (u / norm p) *\\<^sub>R p \\<and> 0 \\<le> u \\<and> u \\<le> 1\n\ngoal (1 subgoal):\n 1. between (0, normalize p) p", "by (auto simp add: between_mem_segment closed_segment_def normalize_def)"], ["proof (state)\nthis:\n  between (0, normalize p) p\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection \\<open>Lemmas on @{const radiant_of}\\<close>"], ["", "lemma radiant_of:\n  \"0 \\<le> radiant_of p \\<and> radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "let ?a = \"if 0 \\<le> p $ 2 then arccos (normalize p $ 1) else pi + arccos (- (normalize p $ 1))\""], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "have \"0 \\<le> ?a \\<and> ?a < 2 * pi \\<and> of_radiant ?a = normalize p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "have \"0 \\<le> ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "have \"?a < 2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi\n 2. \\<not> ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "assume \"0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  0 \\<le> p $ 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi\n 2. \\<not> ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> p $ 2", "have \"?a \\<le> pi\""], ["proof (prove)\nusing this:\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    \\<le> pi", "by simp"], ["proof (state)\nthis:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  \\<le> pi\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi\n 2. \\<not> ?P \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "from this"], ["proof (chain)\npicking this:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  \\<le> pi", "show ?thesis"], ["proof (prove)\nusing this:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  \\<le> pi\n\ngoal (1 subgoal):\n 1. (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "using pi_gt_zero"], ["proof (prove)\nusing this:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  \\<le> pi\n  0 < pi\n\ngoal (1 subgoal):\n 1. (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "by linarith"], ["proof (state)\nthis:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "assume \"\\<not> 0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "have \"arccos (- normalize p $ 1) < pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "have \"\\<bar>normalize p $ 1\\<bar> \\<noteq> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bar>normalize p $ 1\\<bar> \\<noteq> 1", "using \\<open>\\<not> 0 \\<le> p $ 2\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<bar>normalize p $ 1\\<bar> \\<noteq> 1", "by (simp only: normalize_boundary_iff)"], ["proof (state)\nthis:\n  \\<bar>normalize p $ 1\\<bar> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "from this"], ["proof (chain)\npicking this:\n  \\<bar>normalize p $ 1\\<bar> \\<noteq> 1", "have \"arccos (- normalize p $ 1) \\<noteq> pi\""], ["proof (prove)\nusing this:\n  \\<bar>normalize p $ 1\\<bar> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) \\<noteq> pi", "unfolding arccos_minus_1[symmetric]"], ["proof (prove)\nusing this:\n  \\<bar>normalize p $ 1\\<bar> \\<noteq> 1\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) \\<noteq> arccos (- 1)", "by (subst arccos_eq_iff) auto"], ["proof (state)\nthis:\n  arccos (- normalize p $ 1) \\<noteq> pi\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "moreover"], ["proof (state)\nthis:\n  arccos (- normalize p $ 1) \\<noteq> pi\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "have \"arccos (- normalize p $ 1) \\<le> pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) \\<le> pi", "by simp"], ["proof (state)\nthis:\n  arccos (- normalize p $ 1) \\<le> pi\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "ultimately"], ["proof (chain)\npicking this:\n  arccos (- normalize p $ 1) \\<noteq> pi\n  arccos (- normalize p $ 1) \\<le> pi", "show \"arccos (- normalize p $ 1) < pi\""], ["proof (prove)\nusing this:\n  arccos (- normalize p $ 1) \\<noteq> pi\n  arccos (- normalize p $ 1) \\<le> pi\n\ngoal (1 subgoal):\n 1. arccos (- normalize p $ 1) < pi", "by linarith"], ["proof (state)\nthis:\n  arccos (- normalize p $ 1) < pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  arccos (- normalize p $ 1) < pi\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "from this \\<open>\\<not> 0 \\<le> p $ 2\\<close>"], ["proof (chain)\npicking this:\n  arccos (- normalize p $ 1) < pi\n  \\<not> 0 \\<le> p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  arccos (- normalize p $ 1) < pi\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi", "by simp"], ["proof (state)\nthis:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "moreover"], ["proof (state)\nthis:\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "have \"of_radiant ?a = normalize p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "have \"of_radiant ?a $ i = normalize p $ i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "have \"of_radiant ?a $ 1 = normalize p $ 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    1 =\n    normalize p $ 1", "unfolding of_radiant_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (axis 1\n      (cos (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1))) +\n     axis 2\n      (sin (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1)))) $\n    1 =\n    normalize p $ 1", "by (simp add: cos_arccos_abs)"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  1 =\n  normalize p $ 1\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "moreover"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  1 =\n  normalize p $ 1\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "have \"of_radiant ?a $ 2 = normalize p $ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2\n 2. \\<not> ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "assume \"0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  0 \\<le> p $ 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2\n 2. \\<not> ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "have \"sin (arccos (normalize p $ 1)) = sqrt (1 - (normalize p $ 1) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (arccos (normalize p $ 1)) = sqrt (1 - (normalize p $ 1)\\<^sup>2)", "by (simp add: sin_arccos_abs)"], ["proof (state)\nthis:\n  sin (arccos (normalize p $ 1)) = sqrt (1 - (normalize p $ 1)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2\n 2. \\<not> ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "also"], ["proof (state)\nthis:\n  sin (arccos (normalize p $ 1)) = sqrt (1 - (normalize p $ 1)\\<^sup>2)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2\n 2. \\<not> ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "have \"\\<dots> = normalize p $ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "have \"1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2", "using normalize_square[of p]"], ["proof (prove)\nusing this:\n  (normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. 1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "from this \\<open>0 \\<le> p $ 2\\<close>"], ["proof (chain)\npicking this:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n  0 \\<le> p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "by (simp add: nth_normalize_ge_zero_iff)"], ["proof (state)\nthis:\n  sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2\n 2. \\<not> ?P \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "finally"], ["proof (chain)\npicking this:\n  sin (arccos (normalize p $ 1)) = normalize p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  sin (arccos (normalize p $ 1)) = normalize p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "using \\<open>0 \\<le> p $ 2\\<close>"], ["proof (prove)\nusing this:\n  sin (arccos (normalize p $ 1)) = normalize p $ 2\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "unfolding of_radiant_def"], ["proof (prove)\nusing this:\n  sin (arccos (normalize p $ 1)) = normalize p $ 2\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. (axis 1\n      (cos (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1))) +\n     axis 2\n      (sin (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1)))) $\n    2 =\n    normalize p $ 2", "by auto"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  2 =\n  normalize p $ 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "assume \"\\<not> 0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "have \"- sin (arccos (- normalize p $ 1)) = - sqrt (1 - (normalize p $ 1)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - sin (arccos (- normalize p $ 1)) =\n    - sqrt (1 - (normalize p $ 1)\\<^sup>2)", "by (simp add: sin_arccos_abs)"], ["proof (state)\nthis:\n  - sin (arccos (- normalize p $ 1)) =\n  - sqrt (1 - (normalize p $ 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "also"], ["proof (state)\nthis:\n  - sin (arccos (- normalize p $ 1)) =\n  - sqrt (1 - (normalize p $ 1)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "have \"\\<dots> = normalize p $ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "have \"1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2", "using normalize_square[of p]"], ["proof (prove)\nusing this:\n  (normalize p $ 1)\\<^sup>2 + (normalize p $ 2)\\<^sup>2 = 1\n\ngoal (1 subgoal):\n 1. 1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "from this \\<open>\\<not> 0 \\<le> p $ 2\\<close>"], ["proof (chain)\npicking this:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n  \\<not> 0 \\<le> p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "using nth_normalize_ge_zero_iff"], ["proof (prove)\nusing this:\n  1 - (normalize p $ 1)\\<^sup>2 = (normalize p $ 2)\\<^sup>2\n  \\<not> 0 \\<le> p $ 2\n  (0 \\<le> normalize ?p $ ?i) = (0 \\<le> ?p $ ?i)\n\ngoal (1 subgoal):\n 1. - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2", "by fastforce"], ["proof (state)\nthis:\n  - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  - sqrt (1 - (normalize p $ 1)\\<^sup>2) = normalize p $ 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "finally"], ["proof (chain)\npicking this:\n  - sin (arccos (- normalize p $ 1)) = normalize p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  - sin (arccos (- normalize p $ 1)) = normalize p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "using \\<open>\\<not> 0 \\<le> p $ 2\\<close>"], ["proof (prove)\nusing this:\n  - sin (arccos (- normalize p $ 1)) = normalize p $ 2\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    2 =\n    normalize p $ 2", "unfolding of_radiant_def"], ["proof (prove)\nusing this:\n  - sin (arccos (- normalize p $ 1)) = normalize p $ 2\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. (axis 1\n      (cos (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1))) +\n     axis 2\n      (sin (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n            else pi + arccos (- normalize p $ 1)))) $\n    2 =\n    normalize p $ 2", "by auto"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  2 =\n  normalize p $ 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  2 =\n  normalize p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "ultimately"], ["proof (chain)\npicking this:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  1 =\n  normalize p $ 1\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  2 =\n  normalize p $ 2", "show ?thesis"], ["proof (prove)\nusing this:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  1 =\n  normalize p $ 1\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  2 =\n  normalize p $ 2\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) $\n    i =\n    normalize p $ i", "by (metis exhaust_2[of i])"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  i =\n  normalize p $ i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  ?i =\n  normalize p $ ?i\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "from this"], ["proof (chain)\npicking this:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  ?i =\n  normalize p $ ?i", "show ?thesis"], ["proof (prove)\nusing this:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) $\n  ?i =\n  normalize p $ ?i\n\ngoal (1 subgoal):\n 1. of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "by (simp add: vec_eq_iff)"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1))\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1))\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n             else pi + arccos (- normalize p $ 1)) \\<and>\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n    < 2 * pi \\<and>\n    of_radiant\n     (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n      else pi + arccos (- normalize p $ 1)) =\n    normalize p", "by blast"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "moreover"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "{"], ["proof (state)\nthis:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "fix \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "assume \"0 \\<le> \\<omega> \\<and> \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p\""], ["proof (state)\nthis:\n  0 \\<le> \\<omega> \\<and>\n  \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> \\<omega> \\<and>\n  \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p", "have \"0 \\<le> \\<omega>\" \"\\<omega> < 2 * pi\" \"normalize p = of_radiant \\<omega>\""], ["proof (prove)\nusing this:\n  0 \\<le> \\<omega> \\<and>\n  \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<omega> &&&\n    \\<omega> < 2 * pi &&& normalize p = of_radiant \\<omega>", "by auto"], ["proof (state)\nthis:\n  0 \\<le> \\<omega>\n  \\<omega> < 2 * pi\n  normalize p = of_radiant \\<omega>\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> \\<omega>\n  \\<omega> < 2 * pi\n  normalize p = of_radiant \\<omega>", "have \"cos \\<omega> = normalize p $ 1\" \"sin \\<omega> = normalize p $ 2\""], ["proof (prove)\nusing this:\n  0 \\<le> \\<omega>\n  \\<omega> < 2 * pi\n  normalize p = of_radiant \\<omega>\n\ngoal (1 subgoal):\n 1. cos \\<omega> = normalize p $ 1 &&& sin \\<omega> = normalize p $ 2", "by auto"], ["proof (state)\nthis:\n  cos \\<omega> = normalize p $ 1\n  sin \\<omega> = normalize p $ 2\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "have \"\\<omega> = ?a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "assume \"0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  0 \\<le> p $ 2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this"], ["proof (chain)\npicking this:\n  0 \\<le> p $ 2", "have \"\\<omega> \\<le> pi\""], ["proof (prove)\nusing this:\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<omega> \\<le> pi", "using \\<open>0 \\<le> \\<omega>\\<close> \\<open>\\<omega> < 2 * pi\\<close> \\<open>sin \\<omega> = normalize p $ 2\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> p $ 2\n  0 \\<le> \\<omega>\n  \\<omega> < 2 * pi\n  sin \\<omega> = normalize p $ 2\n\ngoal (1 subgoal):\n 1. \\<omega> \\<le> pi", "by (simp add: sin_ge_zero_iff[symmetric] nth_normalize_ge_zero_iff)"], ["proof (state)\nthis:\n  \\<omega> \\<le> pi\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from \\<open>0 \\<le> \\<omega>\\<close> this"], ["proof (chain)\npicking this:\n  0 \\<le> \\<omega>\n  \\<omega> \\<le> pi", "have \"\\<omega> = arccos (cos \\<omega>)\""], ["proof (prove)\nusing this:\n  0 \\<le> \\<omega>\n  \\<omega> \\<le> pi\n\ngoal (1 subgoal):\n 1. \\<omega> = arccos (cos \\<omega>)", "by (simp add: arccos_cos)"], ["proof (state)\nthis:\n  \\<omega> = arccos (cos \\<omega>)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from \\<open>cos \\<omega> = normalize p $ 1\\<close> this"], ["proof (chain)\npicking this:\n  cos \\<omega> = normalize p $ 1\n  \\<omega> = arccos (cos \\<omega>)", "have \"\\<omega> = arccos (normalize p $ 1)\""], ["proof (prove)\nusing this:\n  cos \\<omega> = normalize p $ 1\n  \\<omega> = arccos (cos \\<omega>)\n\ngoal (1 subgoal):\n 1. \\<omega> = arccos (normalize p $ 1)", "by (simp add: arccos_eq_iff)"], ["proof (state)\nthis:\n  \\<omega> = arccos (normalize p $ 1)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this"], ["proof (chain)\npicking this:\n  \\<omega> = arccos (normalize p $ 1)", "show \"\\<omega> = ?a\""], ["proof (prove)\nusing this:\n  \\<omega> = arccos (normalize p $ 1)\n\ngoal (1 subgoal):\n 1. \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "using \\<open>0 \\<le> p $ 2\\<close>"], ["proof (prove)\nusing this:\n  \\<omega> = arccos (normalize p $ 1)\n  0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "by auto"], ["proof (state)\nthis:\n  \\<omega> =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "assume \"\\<not> 0 \\<le> p $ 2\""], ["proof (state)\nthis:\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this"], ["proof (chain)\npicking this:\n  \\<not> 0 \\<le> p $ 2", "have \"\\<omega> > pi\""], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. pi < \\<omega>", "using \\<open>0 \\<le> \\<omega>\\<close> \\<open>\\<omega> < 2 * pi\\<close> \\<open>sin \\<omega> = normalize p $ 2\\<close>"], ["proof (prove)\nusing this:\n  \\<not> 0 \\<le> p $ 2\n  0 \\<le> \\<omega>\n  \\<omega> < 2 * pi\n  sin \\<omega> = normalize p $ 2\n\ngoal (1 subgoal):\n 1. pi < \\<omega>", "by (simp add: sin_less_zero_iff[symmetric] nth_normalize_less_zero_iff)"], ["proof (state)\nthis:\n  pi < \\<omega>\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this \\<open>\\<omega> < 2 * pi\\<close>"], ["proof (chain)\npicking this:\n  pi < \\<omega>\n  \\<omega> < 2 * pi", "have \"\\<omega> - pi = arccos (cos (\\<omega> - pi))\""], ["proof (prove)\nusing this:\n  pi < \\<omega>\n  \\<omega> < 2 * pi\n\ngoal (1 subgoal):\n 1. \\<omega> - pi = arccos (cos (\\<omega> - pi))", "by (auto simp only: arccos_cos)"], ["proof (state)\nthis:\n  \\<omega> - pi = arccos (cos (\\<omega> - pi))\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this \\<open>cos \\<omega> = normalize p $ 1\\<close>"], ["proof (chain)\npicking this:\n  \\<omega> - pi = arccos (cos (\\<omega> - pi))\n  cos \\<omega> = normalize p $ 1", "have \"\\<omega> - pi = arccos (- normalize p $ 1)\""], ["proof (prove)\nusing this:\n  \\<omega> - pi = arccos (cos (\\<omega> - pi))\n  cos \\<omega> = normalize p $ 1\n\ngoal (1 subgoal):\n 1. \\<omega> - pi = arccos (- normalize p $ 1)", "by simp"], ["proof (state)\nthis:\n  \\<omega> - pi = arccos (- normalize p $ 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this"], ["proof (chain)\npicking this:\n  \\<omega> - pi = arccos (- normalize p $ 1)", "have \"\\<omega> = pi + arccos (- normalize p $ 1)\""], ["proof (prove)\nusing this:\n  \\<omega> - pi = arccos (- normalize p $ 1)\n\ngoal (1 subgoal):\n 1. \\<omega> = pi + arccos (- normalize p $ 1)", "by simp"], ["proof (state)\nthis:\n  \\<omega> = pi + arccos (- normalize p $ 1)\n\ngoal (1 subgoal):\n 1. \\<not> 0 \\<le> p $ 2 \\<Longrightarrow>\n    \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "from this"], ["proof (chain)\npicking this:\n  \\<omega> = pi + arccos (- normalize p $ 1)", "show \"\\<omega> = ?a\""], ["proof (prove)\nusing this:\n  \\<omega> = pi + arccos (- normalize p $ 1)\n\ngoal (1 subgoal):\n 1. \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "using \\<open>\\<not> 0 \\<le> p $ 2\\<close>"], ["proof (prove)\nusing this:\n  \\<omega> = pi + arccos (- normalize p $ 1)\n  \\<not> 0 \\<le> p $ 2\n\ngoal (1 subgoal):\n 1. \\<omega> =\n    (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n     else pi + arccos (- normalize p $ 1))", "by auto"], ["proof (state)\nthis:\n  \\<omega> =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<omega> =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "}"], ["proof (state)\nthis:\n  0 \\<le> ?\\<omega>2 \\<and>\n  ?\\<omega>2 < 2 * pi \\<and>\n  of_radiant ?\\<omega>2 = normalize p \\<Longrightarrow>\n  ?\\<omega>2 =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n  0 \\<le> ?\\<omega>2 \\<and>\n  ?\\<omega>2 < 2 * pi \\<and>\n  of_radiant ?\\<omega>2 = normalize p \\<Longrightarrow>\n  ?\\<omega>2 =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n  0 \\<le> ?\\<omega>2 \\<and>\n  ?\\<omega>2 < 2 * pi \\<and>\n  of_radiant ?\\<omega>2 = normalize p \\<Longrightarrow>\n  ?\\<omega>2 =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p \\<and>\n    radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p", "unfolding radiant_of_def"], ["proof (prove)\nusing this:\n  0 \\<le> (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n           else pi + arccos (- normalize p $ 1)) \\<and>\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n  < 2 * pi \\<and>\n  of_radiant\n   (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n    else pi + arccos (- normalize p $ 1)) =\n  normalize p\n  0 \\<le> ?\\<omega>2 \\<and>\n  ?\\<omega>2 < 2 * pi \\<and>\n  of_radiant ?\\<omega>2 = normalize p \\<Longrightarrow>\n  ?\\<omega>2 =\n  (if 0 \\<le> p $ 2 then arccos (normalize p $ 1)\n   else pi + arccos (- normalize p $ 1))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (THE \\<omega>.\n                0 \\<le> \\<omega> \\<and>\n                \\<omega> < 2 * pi \\<and>\n                of_radiant \\<omega> = normalize p) \\<and>\n    (THE \\<omega>.\n        0 \\<le> \\<omega> \\<and>\n        \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p)\n    < 2 * pi \\<and>\n    of_radiant\n     (THE \\<omega>.\n         0 \\<le> \\<omega> \\<and>\n         \\<omega> < 2 * pi \\<and> of_radiant \\<omega> = normalize p) =\n    normalize p", "by (rule theI)"], ["proof (state)\nthis:\n  0 \\<le> radiant_of p \\<and>\n  radiant_of p < 2 * pi \\<and> of_radiant (radiant_of p) = normalize p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma radiant_of_bounds [simp]:\n  \"0 \\<le> radiant_of p\" \"radiant_of p < 2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p &&& radiant_of p < 2 * pi", "using radiant_of"], ["proof (prove)\nusing this:\n  0 \\<le> radiant_of ?p \\<and>\n  radiant_of ?p < 2 * pi \\<and> of_radiant (radiant_of ?p) = normalize ?p\n\ngoal (1 subgoal):\n 1. 0 \\<le> radiant_of p &&& radiant_of p < 2 * pi", "by auto"], ["", "lemma radiant_of_weak_ubound [simp]:\n  \"radiant_of p \\<le> 2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. radiant_of p \\<le> 2 * pi", "using radiant_of_bounds(2)[of p]"], ["proof (prove)\nusing this:\n  radiant_of p < 2 * pi\n\ngoal (1 subgoal):\n 1. radiant_of p \\<le> 2 * pi", "by linarith"], ["", "subsubsection \\<open>Main Equations for Transforming to Polar Form\\<close>"], ["", "lemma polar_form_eq:\n  \"norm p *\\<^sub>R of_radiant (radiant_of p) = p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm p *\\<^sub>R of_radiant (radiant_of p) = p", "using radiant_of normalize_eq"], ["proof (prove)\nusing this:\n  0 \\<le> radiant_of ?p \\<and>\n  radiant_of ?p < 2 * pi \\<and> of_radiant (radiant_of ?p) = normalize ?p\n  norm ?p *\\<^sub>R normalize ?p = ?p\n\ngoal (1 subgoal):\n 1. norm p *\\<^sub>R of_radiant (radiant_of p) = p", "by simp"], ["", "lemma relative_polar_form_eq:\n  \"Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "have \"norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q", "unfolding polar_form_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. P - Q = P - Q", ".."], ["proof (state)\nthis:\n  norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q\n\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "moreover"], ["proof (state)\nthis:\n  norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q\n\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "have \"dist P Q = norm (P - Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist P Q = norm (P - Q)", "by (simp add: dist_norm)"], ["proof (state)\nthis:\n  dist P Q = norm (P - Q)\n\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "ultimately"], ["proof (chain)\npicking this:\n  norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q\n  dist P Q = norm (P - Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  norm (P - Q) *\\<^sub>R of_radiant (radiant_of (P - Q)) = P - Q\n  dist P Q = norm (P - Q)\n\ngoal (1 subgoal):\n 1. Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P", "by (metis add.commute diff_add_cancel)"], ["proof (state)\nthis:\n  Q + dist P Q *\\<^sub>R of_radiant (radiant_of (P - Q)) = P\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Ptolemy's Theorem\\<close>"], ["", "lemma dist_circle_segment:\n  assumes \"0 \\<le> radius\" \"0 \\<le> \\<alpha>\" \"\\<alpha> \\<le> \\<beta>\" \"\\<beta> \\<le> 2 * pi\"\n  shows \"dist (center + radius *\\<^sub>R of_radiant \\<alpha>) (center + radius *\\<^sub>R of_radiant \\<beta>) = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\"\n    (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "have trigonometry: \"(cos \\<alpha> - cos \\<beta>)\\<^sup>2 + (sin \\<alpha> - sin \\<beta>)\\<^sup>2 = (2 *  sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "have sin_diff_minus: \"sin ((\\<alpha> - \\<beta>) / 2) = - sin ((\\<beta> - \\<alpha>) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin ((\\<alpha> - \\<beta>) / 2) = - sin ((\\<beta> - \\<alpha>) / 2)", "by (simp only: sin_minus[symmetric] minus_divide_left minus_diff_eq)"], ["proof (state)\nthis:\n  sin ((\\<alpha> - \\<beta>) / 2) = - sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "have \"(cos \\<alpha> - cos \\<beta>)\\<^sup>2 + (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n      (2 * sin ((\\<alpha> + \\<beta>) / 2) * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 + (2 * sin ((\\<alpha> - \\<beta>) / 2) * cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n     sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n    (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n     cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2", "by (simp only: cos_diff_cos sin_diff_sin)"], ["proof (state)\nthis:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n   sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n  (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n   cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "also"], ["proof (state)\nthis:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n   sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n  (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n   cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "have \"\\<dots> = (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 * ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 + (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n     sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n    (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n     cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n    ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n     (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2)", "unfolding sin_diff_minus"], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n     sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n    (2 * - sin ((\\<beta> - \\<alpha>) / 2) *\n     cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n    ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n     (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2)", "by algebra"], ["proof (state)\nthis:\n  (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n   sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n  (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n   cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n  ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n   (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "also"], ["proof (state)\nthis:\n  (2 * sin ((\\<alpha> + \\<beta>) / 2) *\n   sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 +\n  (2 * sin ((\\<alpha> - \\<beta>) / 2) *\n   cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n  ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n   (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "have \"\\<dots> = (2 *  sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n    ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n     (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2) =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2 *\n  ((sin ((\\<alpha> + \\<beta>) / 2))\\<^sup>2 +\n   (cos ((\\<alpha> + \\<beta>) / 2))\\<^sup>2) =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n    (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n    (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2", "."], ["proof (state)\nthis:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n  (sin \\<alpha> - sin \\<beta>)\\<^sup>2 =\n  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "from assms"], ["proof (chain)\npicking this:\n  0 \\<le> radius\n  0 \\<le> \\<alpha>\n  \\<alpha> \\<le> \\<beta>\n  \\<beta> \\<le> 2 * pi", "have \"0 \\<le> sin ((\\<beta> - \\<alpha>) / 2)\""], ["proof (prove)\nusing this:\n  0 \\<le> radius\n  0 \\<le> \\<alpha>\n  \\<alpha> \\<le> \\<beta>\n  \\<beta> \\<le> 2 * pi\n\ngoal (1 subgoal):\n 1. 0 \\<le> sin ((\\<beta> - \\<alpha>) / 2)", "by (simp add: sin_ge_zero)"], ["proof (state)\nthis:\n  0 \\<le> sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "have \"?lhs = sqrt (radius\\<^sup>2 * ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 + (sin \\<alpha> - sin \\<beta>)\\<^sup>2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    sqrt\n     (radius\\<^sup>2 *\n      ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n       (sin \\<alpha> - sin \\<beta>)\\<^sup>2))", "unfolding dist_eq_on_real_2_vec"], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     (((center + radius *\\<^sub>R of_radiant \\<alpha>) $ 1 -\n       (center + radius *\\<^sub>R of_radiant \\<beta>) $ 1)\\<^sup>2 +\n      ((center + radius *\\<^sub>R of_radiant \\<alpha>) $ 2 -\n       (center + radius *\\<^sub>R of_radiant \\<beta>) $ 2)\\<^sup>2) =\n    sqrt\n     (radius\\<^sup>2 *\n      ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n       (sin \\<alpha> - sin \\<beta>)\\<^sup>2))", "by simp algebra"], ["proof (state)\nthis:\n  dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n   (center + radius *\\<^sub>R of_radiant \\<beta>) =\n  sqrt\n   (radius\\<^sup>2 *\n    ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n     (sin \\<alpha> - sin \\<beta>)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "also"], ["proof (state)\nthis:\n  dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n   (center + radius *\\<^sub>R of_radiant \\<beta>) =\n  sqrt\n   (radius\\<^sup>2 *\n    ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n     (sin \\<alpha> - sin \\<beta>)\\<^sup>2))\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "have \"\\<dots> = sqrt (radius\\<^sup>2 *  (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt\n     (radius\\<^sup>2 *\n      ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n       (sin \\<alpha> - sin \\<beta>)\\<^sup>2)) =\n    sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2)", "by (simp add: trigonometry)"], ["proof (state)\nthis:\n  sqrt\n   (radius\\<^sup>2 *\n    ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n     (sin \\<alpha> - sin \\<beta>)\\<^sup>2)) =\n  sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "also"], ["proof (state)\nthis:\n  sqrt\n   (radius\\<^sup>2 *\n    ((cos \\<alpha> - cos \\<beta>)\\<^sup>2 +\n     (sin \\<alpha> - sin \\<beta>)\\<^sup>2)) =\n  sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2)\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "have \"\\<dots> = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "using \\<open>0 \\<le> radius\\<close> \\<open>0 \\<le> sin ((\\<beta> - \\<alpha>) / 2)\\<close>"], ["proof (prove)\nusing this:\n  0 \\<le> radius\n  0 \\<le> sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "by (simp add: real_sqrt_mult)"], ["proof (state)\nthis:\n  sqrt (radius\\<^sup>2 * (2 * sin ((\\<beta> - \\<alpha>) / 2))\\<^sup>2) =\n  2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "finally"], ["proof (chain)\npicking this:\n  dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n   (center + radius *\\<^sub>R of_radiant \\<beta>) =\n  2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n   (center + radius *\\<^sub>R of_radiant \\<beta>) =\n  2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n     (center + radius *\\<^sub>R of_radiant \\<beta>) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2)", "."], ["proof (state)\nthis:\n  dist (center + radius *\\<^sub>R of_radiant \\<alpha>)\n   (center + radius *\\<^sub>R of_radiant \\<beta>) =\n  2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ptolemy_trigonometric:\n  fixes \\<omega>\\<^sub>1 \\<omega>\\<^sub>2 \\<omega>\\<^sub>3 :: real\n  shows \"sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) * sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) = sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 + sin \\<omega>\\<^sub>2 * sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "have \"sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) * sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) = ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) * sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 + sin \\<omega>\\<^sub>2 * sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) *\n    sin \\<omega>\\<^sub>1 *\n    sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "by (simp only: sin_add cos_add) algebra"], ["proof (state)\nthis:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) *\n  sin \\<omega>\\<^sub>1 *\n  sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "also"], ["proof (state)\nthis:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) *\n  sin \\<omega>\\<^sub>1 *\n  sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "have \"\\<dots> = sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 + sin \\<omega>\\<^sub>2 * sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) *\n    sin \\<omega>\\<^sub>1 *\n    sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "by simp"], ["proof (state)\nthis:\n  ((sin \\<omega>\\<^sub>2)\\<^sup>2 + (cos \\<omega>\\<^sub>2)\\<^sup>2) *\n  sin \\<omega>\\<^sub>1 *\n  sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "finally"], ["proof (chain)\npicking this:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "show ?thesis"], ["proof (prove)\nusing this:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "."], ["proof (state)\nthis:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ptolemy:\n  fixes A B C D center :: \"real ^ 2\"\n  assumes \"dist center A = radius\" and \"dist center B = radius\"\n  assumes \"dist center C = radius\" and \"dist center D = radius\"\n  assumes ordering_of_points:\n    \"radiant_of (A - center) \\<le> radiant_of (B - center)\"\n    \"radiant_of (B - center) \\<le> radiant_of (C - center)\"\n    \"radiant_of (C - center) \\<le> radiant_of (D - center)\"\n  shows \"dist A C * dist B D = dist A B * dist C D + dist A D * dist B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "from \\<open>dist center A = radius\\<close>"], ["proof (chain)\npicking this:\n  dist center A = radius", "have \"0 \\<le> radius\""], ["proof (prove)\nusing this:\n  dist center A = radius\n\ngoal (1 subgoal):\n 1. 0 \\<le> radius", "by auto"], ["proof (state)\nthis:\n  0 \\<le> radius\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "define \\<alpha> \\<beta> \\<gamma> \\<delta>\n    where \"\\<alpha> = radiant_of (A - center)\" and \"\\<beta> = radiant_of (B - center)\"\n    and \"\\<gamma> = radiant_of (C - center)\" and \"\\<delta> = radiant_of (D - center)\""], ["proof (state)\nthis:\n  \\<alpha> = radiant_of (A - center)\n  \\<beta> = radiant_of (B - center)\n  \\<gamma> = radiant_of (C - center)\n  \\<delta> = radiant_of (D - center)\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "from ordering_of_points"], ["proof (chain)\npicking this:\n  radiant_of (A - center) \\<le> radiant_of (B - center)\n  radiant_of (B - center) \\<le> radiant_of (C - center)\n  radiant_of (C - center) \\<le> radiant_of (D - center)", "have angle_basics:\n    \"\\<alpha> \\<le> \\<beta>\" \"\\<beta> \\<le> \\<gamma>\" \"\\<gamma> \\<le> \\<delta>\"\n    \"0 \\<le> \\<alpha>\" \"\\<alpha> \\<le> 2 * pi\" \"0 \\<le> \\<beta>\" \"\\<beta> \\<le> 2 * pi\"\n    \"0 \\<le> \\<gamma>\" \"\\<gamma> \\<le> 2 * pi\" \"0 \\<le> \\<delta>\" \"\\<delta> \\<le> 2 * pi\""], ["proof (prove)\nusing this:\n  radiant_of (A - center) \\<le> radiant_of (B - center)\n  radiant_of (B - center) \\<le> radiant_of (C - center)\n  radiant_of (C - center) \\<le> radiant_of (D - center)\n\ngoal (1 subgoal):\n 1. ((\\<alpha> \\<le> \\<beta> &&& \\<beta> \\<le> \\<gamma>) &&&\n     \\<gamma> \\<le> \\<delta> &&&\n     0 \\<le> \\<alpha> &&& \\<alpha> \\<le> 2 * pi) &&&\n    (0 \\<le> \\<beta> &&& \\<beta> \\<le> 2 * pi &&& 0 \\<le> \\<gamma>) &&&\n    \\<gamma> \\<le> 2 * pi &&& 0 \\<le> \\<delta> &&& \\<delta> \\<le> 2 * pi", "unfolding \\<alpha>_def \\<beta>_def \\<gamma>_def \\<delta>_def"], ["proof (prove)\nusing this:\n  radiant_of (A - center) \\<le> radiant_of (B - center)\n  radiant_of (B - center) \\<le> radiant_of (C - center)\n  radiant_of (C - center) \\<le> radiant_of (D - center)\n\ngoal (1 subgoal):\n 1. ((radiant_of (A - center) \\<le> radiant_of (B - center) &&&\n      radiant_of (B - center) \\<le> radiant_of (C - center)) &&&\n     radiant_of (C - center) \\<le> radiant_of (D - center) &&&\n     0 \\<le> radiant_of (A - center) &&&\n     radiant_of (A - center) \\<le> 2 * pi) &&&\n    (0 \\<le> radiant_of (B - center) &&&\n     radiant_of (B - center) \\<le> 2 * pi &&&\n     0 \\<le> radiant_of (C - center)) &&&\n    radiant_of (C - center) \\<le> 2 * pi &&&\n    0 \\<le> radiant_of (D - center) &&& radiant_of (D - center) \\<le> 2 * pi", "by auto"], ["proof (state)\nthis:\n  \\<alpha> \\<le> \\<beta>\n  \\<beta> \\<le> \\<gamma>\n  \\<gamma> \\<le> \\<delta>\n  0 \\<le> \\<alpha>\n  \\<alpha> \\<le> 2 * pi\n  0 \\<le> \\<beta>\n  \\<beta> \\<le> 2 * pi\n  0 \\<le> \\<gamma>\n  \\<gamma> \\<le> 2 * pi\n  0 \\<le> \\<delta>\n  \\<delta> \\<le> 2 * pi\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "from assms(1-4)"], ["proof (chain)\npicking this:\n  dist center A = radius\n  dist center B = radius\n  dist center C = radius\n  dist center D = radius", "have\n    \"A = center + radius *\\<^sub>R of_radiant \\<alpha>\" \"B = center + radius *\\<^sub>R of_radiant \\<beta>\"\n    \"C = center + radius *\\<^sub>R of_radiant \\<gamma>\" \"D = center + radius *\\<^sub>R of_radiant \\<delta>\""], ["proof (prove)\nusing this:\n  dist center A = radius\n  dist center B = radius\n  dist center C = radius\n  dist center D = radius\n\ngoal (1 subgoal):\n 1. (A = center + radius *\\<^sub>R of_radiant \\<alpha> &&&\n     B = center + radius *\\<^sub>R of_radiant \\<beta>) &&&\n    C = center + radius *\\<^sub>R of_radiant \\<gamma> &&&\n    D = center + radius *\\<^sub>R of_radiant \\<delta>", "unfolding \\<alpha>_def \\<beta>_def \\<gamma>_def \\<delta>_def"], ["proof (prove)\nusing this:\n  dist center A = radius\n  dist center B = radius\n  dist center C = radius\n  dist center D = radius\n\ngoal (1 subgoal):\n 1. (A = center + radius *\\<^sub>R of_radiant (radiant_of (A - center)) &&&\n     B = center + radius *\\<^sub>R of_radiant (radiant_of (B - center))) &&&\n    C = center + radius *\\<^sub>R of_radiant (radiant_of (C - center)) &&&\n    D = center + radius *\\<^sub>R of_radiant (radiant_of (D - center))", "using relative_polar_form_eq dist_commute"], ["proof (prove)\nusing this:\n  dist center A = radius\n  dist center B = radius\n  dist center C = radius\n  dist center D = radius\n  ?Q + dist ?P ?Q *\\<^sub>R of_radiant (radiant_of (?P - ?Q)) = ?P\n  dist ?x ?y = dist ?y ?x\n\ngoal (1 subgoal):\n 1. (A = center + radius *\\<^sub>R of_radiant (radiant_of (A - center)) &&&\n     B = center + radius *\\<^sub>R of_radiant (radiant_of (B - center))) &&&\n    C = center + radius *\\<^sub>R of_radiant (radiant_of (C - center)) &&&\n    D = center + radius *\\<^sub>R of_radiant (radiant_of (D - center))", "by metis+"], ["proof (state)\nthis:\n  A = center + radius *\\<^sub>R of_radiant \\<alpha>\n  B = center + radius *\\<^sub>R of_radiant \\<beta>\n  C = center + radius *\\<^sub>R of_radiant \\<gamma>\n  D = center + radius *\\<^sub>R of_radiant \\<delta>\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "from this"], ["proof (chain)\npicking this:\n  A = center + radius *\\<^sub>R of_radiant \\<alpha>\n  B = center + radius *\\<^sub>R of_radiant \\<beta>\n  C = center + radius *\\<^sub>R of_radiant \\<gamma>\n  D = center + radius *\\<^sub>R of_radiant \\<delta>", "have dist_eqs:\n    \"dist A C = 2 * radius * sin ((\\<gamma> - \\<alpha>) / 2)\"\n    \"dist B D = 2 * radius * sin ((\\<delta> - \\<beta>) / 2)\"\n    \"dist A B = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\"\n    \"dist C D = 2 * radius * sin ((\\<delta> - \\<gamma>) / 2)\"\n    \"dist A D = 2 * radius * sin ((\\<delta> - \\<alpha>) / 2)\"\n    \"dist B C = 2 * radius * sin ((\\<gamma> - \\<beta>) / 2)\""], ["proof (prove)\nusing this:\n  A = center + radius *\\<^sub>R of_radiant \\<alpha>\n  B = center + radius *\\<^sub>R of_radiant \\<beta>\n  C = center + radius *\\<^sub>R of_radiant \\<gamma>\n  D = center + radius *\\<^sub>R of_radiant \\<delta>\n\ngoal (1 subgoal):\n 1. (dist A C = 2 * radius * sin ((\\<gamma> - \\<alpha>) / 2) &&&\n     dist B D = 2 * radius * sin ((\\<delta> - \\<beta>) / 2) &&&\n     dist A B = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)) &&&\n    dist C D = 2 * radius * sin ((\\<delta> - \\<gamma>) / 2) &&&\n    dist A D = 2 * radius * sin ((\\<delta> - \\<alpha>) / 2) &&&\n    dist B C = 2 * radius * sin ((\\<gamma> - \\<beta>) / 2)", "using angle_basics \\<open>radius \\<ge> 0\\<close> dist_circle_segment"], ["proof (prove)\nusing this:\n  A = center + radius *\\<^sub>R of_radiant \\<alpha>\n  B = center + radius *\\<^sub>R of_radiant \\<beta>\n  C = center + radius *\\<^sub>R of_radiant \\<gamma>\n  D = center + radius *\\<^sub>R of_radiant \\<delta>\n  \\<alpha> \\<le> \\<beta>\n  \\<beta> \\<le> \\<gamma>\n  \\<gamma> \\<le> \\<delta>\n  0 \\<le> \\<alpha>\n  \\<alpha> \\<le> 2 * pi\n  0 \\<le> \\<beta>\n  \\<beta> \\<le> 2 * pi\n  0 \\<le> \\<gamma>\n  \\<gamma> \\<le> 2 * pi\n  0 \\<le> \\<delta>\n  \\<delta> \\<le> 2 * pi\n  0 \\<le> radius\n  \\<lbrakk>0 \\<le> ?radius; 0 \\<le> ?\\<alpha>; ?\\<alpha> \\<le> ?\\<beta>;\n   ?\\<beta> \\<le> 2 * pi\\<rbrakk>\n  \\<Longrightarrow> dist (?center + ?radius *\\<^sub>R of_radiant ?\\<alpha>)\n                     (?center + ?radius *\\<^sub>R of_radiant ?\\<beta>) =\n                    2 * ?radius * sin ((?\\<beta> - ?\\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. (dist A C = 2 * radius * sin ((\\<gamma> - \\<alpha>) / 2) &&&\n     dist B D = 2 * radius * sin ((\\<delta> - \\<beta>) / 2) &&&\n     dist A B = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)) &&&\n    dist C D = 2 * radius * sin ((\\<delta> - \\<gamma>) / 2) &&&\n    dist A D = 2 * radius * sin ((\\<delta> - \\<alpha>) / 2) &&&\n    dist B C = 2 * radius * sin ((\\<gamma> - \\<beta>) / 2)", "by (auto)"], ["proof (state)\nthis:\n  dist A C = 2 * radius * sin ((\\<gamma> - \\<alpha>) / 2)\n  dist B D = 2 * radius * sin ((\\<delta> - \\<beta>) / 2)\n  dist A B = 2 * radius * sin ((\\<beta> - \\<alpha>) / 2)\n  dist C D = 2 * radius * sin ((\\<delta> - \\<gamma>) / 2)\n  dist A D = 2 * radius * sin ((\\<delta> - \\<alpha>) / 2)\n  dist B C = 2 * radius * sin ((\\<gamma> - \\<beta>) / 2)\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "have \"dist A C * dist B D = 4 * radius ^ 2 * sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist A C * dist B D =\n    4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2)", "unfolding dist_eqs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * radius * sin ((\\<gamma> - \\<alpha>) / 2) *\n    (2 * radius * sin ((\\<delta> - \\<beta>) / 2)) =\n    4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2)", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  dist A C * dist B D =\n  4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n  sin ((\\<delta> - \\<beta>) / 2)\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "also"], ["proof (state)\nthis:\n  dist A C * dist B D =\n  4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n  sin ((\\<delta> - \\<beta>) / 2)\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "have \"\\<dots> = 4 * radius ^ 2 * (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) + sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "define \\<omega>\\<^sub>1 \\<omega>\\<^sub>2 \\<omega>\\<^sub>3 where \"\\<omega>\\<^sub>1 = (\\<beta> - \\<alpha>) / 2\" and \"\\<omega>\\<^sub>2 = (\\<gamma> - \\<beta>) / 2\" and \"\\<omega>\\<^sub>3 = (\\<delta> - \\<gamma>) / 2\""], ["proof (state)\nthis:\n  \\<omega>\\<^sub>1 = (\\<beta> - \\<alpha>) / 2\n  \\<omega>\\<^sub>2 = (\\<gamma> - \\<beta>) / 2\n  \\<omega>\\<^sub>3 = (\\<delta> - \\<gamma>) / 2\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "have \"(\\<gamma> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2\" and \"(\\<delta> - \\<beta>) / 2 = \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\" and \"(\\<delta> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 &&&\n    (\\<delta> - \\<beta>) / 2 = \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3 &&&\n    (\\<delta> - \\<alpha>) / 2 =\n    \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3", "unfolding \\<omega>\\<^sub>1_def \\<omega>\\<^sub>2_def \\<omega>\\<^sub>3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<gamma> - \\<alpha>) / 2 =\n    (\\<beta> - \\<alpha>) / 2 + (\\<gamma> - \\<beta>) / 2 &&&\n    (\\<delta> - \\<beta>) / 2 =\n    (\\<gamma> - \\<beta>) / 2 + (\\<delta> - \\<gamma>) / 2 &&&\n    (\\<delta> - \\<alpha>) / 2 =\n    (\\<beta> - \\<alpha>) / 2 + (\\<gamma> - \\<beta>) / 2 +\n    (\\<delta> - \\<gamma>) / 2", "by (auto simp add: field_simps)"], ["proof (state)\nthis:\n  (\\<gamma> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2\n  (\\<delta> - \\<beta>) / 2 = \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\n  (\\<delta> - \\<alpha>) / 2 =\n  \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "have \"sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) = sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) * sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "using \\<open>(\\<gamma> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2\\<close> \\<open>(\\<delta> - \\<beta>) / 2 = \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\\<close>"], ["proof (prove)\nusing this:\n  (\\<gamma> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2\n  (\\<delta> - \\<beta>) / 2 = \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\n\ngoal (1 subgoal):\n 1. sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "by (simp only:)"], ["proof (state)\nthis:\n  sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "also"], ["proof (state)\nthis:\n  sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "have \"\\<dots> = sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 + sin \\<omega>\\<^sub>2 * sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n    sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)", "by (rule ptolemy_trigonometric)"], ["proof (state)\nthis:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "also"], ["proof (state)\nthis:\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2) *\n  sin (\\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "have \"\\<dots> = (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) + sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n    sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)", "using \\<omega>\\<^sub>1_def \\<omega>\\<^sub>2_def \\<omega>\\<^sub>3_def \\<open>(\\<delta> - \\<alpha>) / 2 = \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\\<close>"], ["proof (prove)\nusing this:\n  \\<omega>\\<^sub>1 = (\\<beta> - \\<alpha>) / 2\n  \\<omega>\\<^sub>2 = (\\<gamma> - \\<beta>) / 2\n  \\<omega>\\<^sub>3 = (\\<delta> - \\<gamma>) / 2\n  (\\<delta> - \\<alpha>) / 2 =\n  \\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3\n\ngoal (1 subgoal):\n 1. sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n    sin \\<omega>\\<^sub>2 *\n    sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n    sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n    sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)", "by (simp only:)"], ["proof (state)\nthis:\n  sin \\<omega>\\<^sub>1 * sin \\<omega>\\<^sub>3 +\n  sin \\<omega>\\<^sub>2 *\n  sin (\\<omega>\\<^sub>1 + \\<omega>\\<^sub>2 + \\<omega>\\<^sub>3) =\n  sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n  sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "finally"], ["proof (chain)\npicking this:\n  sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n  sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n  sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)", "show ?thesis"], ["proof (prove)\nusing this:\n  sin ((\\<gamma> - \\<alpha>) / 2) * sin ((\\<delta> - \\<beta>) / 2) =\n  sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n  sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)\n\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n    sin ((\\<delta> - \\<beta>) / 2) =\n    4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))", "by simp"], ["proof (state)\nthis:\n  4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n  sin ((\\<delta> - \\<beta>) / 2) =\n  4 * radius\\<^sup>2 *\n  (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n   sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n  sin ((\\<delta> - \\<beta>) / 2) =\n  4 * radius\\<^sup>2 *\n  (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n   sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "also"], ["proof (state)\nthis:\n  4 * radius\\<^sup>2 * sin ((\\<gamma> - \\<alpha>) / 2) *\n  sin ((\\<delta> - \\<beta>) / 2) =\n  4 * radius\\<^sup>2 *\n  (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n   sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2))\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "have \"\\<dots> = dist A B * dist C D + dist A D * dist B C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)) =\n    dist A B * dist C D + dist A D * dist B C", "unfolding dist_eqs"], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * radius\\<^sup>2 *\n    (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n     sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)) =\n    2 * radius * sin ((\\<beta> - \\<alpha>) / 2) *\n    (2 * radius * sin ((\\<delta> - \\<gamma>) / 2)) +\n    2 * radius * sin ((\\<delta> - \\<alpha>) / 2) *\n    (2 * radius * sin ((\\<gamma> - \\<beta>) / 2))", "by (simp add: distrib_left power2_eq_square)"], ["proof (state)\nthis:\n  4 * radius\\<^sup>2 *\n  (sin ((\\<beta> - \\<alpha>) / 2) * sin ((\\<delta> - \\<gamma>) / 2) +\n   sin ((\\<gamma> - \\<beta>) / 2) * sin ((\\<delta> - \\<alpha>) / 2)) =\n  dist A B * dist C D + dist A D * dist B C\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "finally"], ["proof (chain)\npicking this:\n  dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "show ?thesis"], ["proof (prove)\nusing this:\n  dist A C * dist B D = dist A B * dist C D + dist A D * dist B C\n\ngoal (1 subgoal):\n 1. dist A C * dist B D = dist A B * dist C D + dist A D * dist B C", "."], ["proof (state)\nthis:\n  dist A C * dist B D = dist A B * dist C D + dist A D * dist B C\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}