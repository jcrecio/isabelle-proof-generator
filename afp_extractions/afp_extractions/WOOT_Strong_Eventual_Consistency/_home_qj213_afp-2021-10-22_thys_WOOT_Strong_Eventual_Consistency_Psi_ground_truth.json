{"file_name": "/home/qj213/afp-2021-10-22/thys/WOOT_Strong_Eventual_Consistency/Psi.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/WOOT_Strong_Eventual_Consistency", "problem_names": ["lemma extended_simps [simp]:\n  \"(\\<turnstile> < x) = (x \\<noteq> \\<turnstile>)\"\n  \"(\\<lbrakk>x'\\<rbrakk> < \\<lbrakk>y'\\<rbrakk>) = (x' < y')\"\n  \"\\<lbrakk>x'\\<rbrakk> < \\<stileturn>\"\n  \"\\<not>(\\<lbrakk>x'\\<rbrakk> < \\<turnstile>)\"\n  \"\\<not>(\\<stileturn> < x)\"\n  \"\\<turnstile> \\<le> x\"\n  \"(\\<lbrakk>x'\\<rbrakk> \\<le> \\<lbrakk>y'\\<rbrakk>) = ((x' :: 'a :: linorder) \\<le> y')\"\n  \"x \\<le> \\<stileturn>\"\n  \"\\<not>(\\<lbrakk>x'\\<rbrakk> \\<le> \\<turnstile>)\"\n  \"(\\<stileturn> \\<le> x) = (x = \\<stileturn>)\"", "lemma position_cases:\n  assumes \"\\<And> y z. x = \\<lbrakk>NonFinal (y,Left) z\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"\\<And> y z. x = \\<lbrakk>NonFinal (y,Right) z\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"\\<And> y. x = \\<lbrakk>Final y\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"x = \\<turnstile> \\<Longrightarrow> p\"\n  assumes \"x = \\<stileturn> \\<Longrightarrow> p\"\n  shows \"p\"", "lemma derive_pos_mono: \"x \\<le> y \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\"", "lemma derive_size:\n  \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<and> is_interval x \\<Longrightarrow> int_size (derive_left x) < int_size x\" \n  \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> is_interval x \\<Longrightarrow> int_size (derive_right x) < int_size x\"", "lemma derive_interval:\n  \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> is_interval x \\<Longrightarrow> is_interval (derive_left x)\"\n  \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> is_interval x \\<Longrightarrow> is_interval (derive_right x)\""], "translations": [["", "lemma extended_simps [simp]:\n  \"(\\<turnstile> < x) = (x \\<noteq> \\<turnstile>)\"\n  \"(\\<lbrakk>x'\\<rbrakk> < \\<lbrakk>y'\\<rbrakk>) = (x' < y')\"\n  \"\\<lbrakk>x'\\<rbrakk> < \\<stileturn>\"\n  \"\\<not>(\\<lbrakk>x'\\<rbrakk> < \\<turnstile>)\"\n  \"\\<not>(\\<stileturn> < x)\"\n  \"\\<turnstile> \\<le> x\"\n  \"(\\<lbrakk>x'\\<rbrakk> \\<le> \\<lbrakk>y'\\<rbrakk>) = ((x' :: 'a :: linorder) \\<le> y')\"\n  \"x \\<le> \\<stileturn>\"\n  \"\\<not>(\\<lbrakk>x'\\<rbrakk> \\<le> \\<turnstile>)\"\n  \"(\\<stileturn> \\<le> x) = (x = \\<stileturn>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (((\\<turnstile> < x) = (x \\<noteq> \\<turnstile>) &&&\n      (\\<lbrakk>x'\\<rbrakk> < \\<lbrakk>y'\\<rbrakk>) = (x' < y')) &&&\n     \\<lbrakk>x'\\<rbrakk> < \\<stileturn> &&&\n     \\<not> \\<lbrakk>x'\\<rbrakk> < \\<turnstile> &&&\n     \\<not> \\<stileturn> < x) &&&\n    (\\<turnstile> \\<le> x &&&\n     (\\<lbrakk>x'\\<rbrakk> \\<le> \\<lbrakk>y'\\<rbrakk>) = (x' \\<le> y')) &&&\n    x \\<le> \\<stileturn> &&&\n    \\<not> \\<lbrakk>x'\\<rbrakk> \\<le> \\<turnstile> &&&\n    (\\<stileturn> \\<le> x) = (x = \\<stileturn>)", "by (case_tac [!] x, simp_all add:less_extended_def less_eq_extended_def le_less)"], ["", "fun int_size where \"int_size (l,u) = max (extended_size l) (extended_size u)\""], ["", "lemma position_cases:\n  assumes \"\\<And> y z. x = \\<lbrakk>NonFinal (y,Left) z\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"\\<And> y z. x = \\<lbrakk>NonFinal (y,Right) z\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"\\<And> y. x = \\<lbrakk>Final y\\<rbrakk> \\<Longrightarrow> p\"\n  assumes \"x = \\<turnstile> \\<Longrightarrow> p\"\n  assumes \"x = \\<stileturn> \\<Longrightarrow> p\"\n  shows \"p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p", "by (metis assms embed_dir.cases extended_size.cases sort_key_embedding.cases)"], ["", "fun derive_pos ::\n  \"('a :: linorder) \\<times> sort_dir \\<Rightarrow> 'a sort_key extended \\<Rightarrow> 'a sort_key extended\"\n  where\n    \"derive_pos h \\<lbrakk>NonFinal x y\\<rbrakk> = \n      (if h < x then \\<stileturn> else (if x < h then \\<turnstile> else \\<lbrakk>y\\<rbrakk>))\" |\n    \"derive_pos h \\<lbrakk>Final x\\<rbrakk> = \n      (if fst h < x \\<or> fst h = x \\<and> snd h = Left then \\<stileturn> else \\<turnstile>)\" |\n    \"derive_pos _ \\<turnstile> = \\<turnstile>\" |\n    \"derive_pos _ \\<stileturn> = \\<stileturn>\""], ["", "lemma derive_pos_mono: \"x \\<le> y \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y", "apply (cases h, cases \"snd h\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 2. \\<And>a b.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y", "apply (rule_tac [!] position_cases [where x=x])"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 2. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 3. \\<And>a b ya.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 4. \\<And>a b.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 5. \\<And>a b.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 6. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 7. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 8. \\<And>a b ya.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right;\n        x = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 9. \\<And>a b.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right;\n        x = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 10. \\<And>a b.\n        \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Right;\n         x = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y", "apply (rule_tac [!] position_cases [where x=y])"], ["proof (prove)\ngoal (50 subgoals):\n 1. \\<And>a b ya z yaa za.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>;\n        y = \\<lbrakk>NonFinal (yaa, sort_dir.Left) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 2. \\<And>a b ya z yaa za.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>;\n        y = \\<lbrakk>NonFinal (yaa, sort_dir.Right) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 3. \\<And>a b ya z yaa.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>;\n        y = \\<lbrakk>Final yaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 4. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>;\n        y = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 5. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Left) z\\<rbrakk>;\n        y = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 6. \\<And>a b ya z yaa za.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>;\n        y = \\<lbrakk>NonFinal (yaa, sort_dir.Left) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 7. \\<And>a b ya z yaa za.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>;\n        y = \\<lbrakk>NonFinal (yaa, sort_dir.Right) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 8. \\<And>a b ya z yaa.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>;\n        y = \\<lbrakk>Final yaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 9. \\<And>a b ya z.\n       \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n        x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>;\n        y = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\n 10. \\<And>a b ya z.\n        \\<lbrakk>x \\<le> y; h = (a, b); snd h = sort_dir.Left;\n         x = \\<lbrakk>NonFinal (ya, sort_dir.Right) z\\<rbrakk>;\n         y = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> derive_pos h x \\<le> derive_pos h y\nA total of 50 subgoals...", "by (simp_all, auto)"], ["", "fun \\<gamma> :: \"('a :: linorder) position \\<Rightarrow> sort_dir \\<Rightarrow> 'a \\<times> sort_dir\"\n  where\n    \"\\<gamma> \\<lbrakk>NonFinal x y\\<rbrakk> _ = x\" |\n    \"\\<gamma> \\<lbrakk>Final x\\<rbrakk> d = (x,d)\" |\n    \"\\<gamma> \\<turnstile> _ = undefined\" |\n    \"\\<gamma> \\<stileturn> _ = undefined\""], ["", "fun derive_left  where\n  \"derive_left (l, u) = (derive_pos (\\<gamma> l Right) l, derive_pos (\\<gamma> l Right) u)\""], ["", "fun derive_right where\n  \"derive_right (l, u) = (derive_pos (\\<gamma> u Left) l, derive_pos (\\<gamma> u Left) u)\""], ["", "fun is_interval where \"is_interval (l,u) = (l < u)\""], ["", "fun elem where \"elem x (l,u) = (l < x \\<and> x < u)\""], ["", "fun subset where \"subset (l,u) (l',u') = (l' \\<le> l \\<and> u \\<le> u')\""], ["", "method interval_split for x :: \"('a :: linorder) position \\<times> 'a position\" = \n  (case_tac [!] x, \n   rule_tac [!] position_cases [where x=\"fst x\"], \n   rule_tac [!] position_cases [where x=\"snd x\"])"], ["", "lemma derive_size:\n  \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<and> is_interval x \\<Longrightarrow> int_size (derive_left x) < int_size x\" \n  \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> is_interval x \\<Longrightarrow> int_size (derive_right x) < int_size x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<and>\n     is_interval x \\<Longrightarrow>\n     int_size (derive_left x) < int_size x) &&&\n    (snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and>\n     is_interval x \\<Longrightarrow>\n     int_size (derive_right x) < int_size x)", "by (interval_split x, simp_all add:less_SucI)"], ["", "lemma derive_interval:\n  \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> is_interval x \\<Longrightarrow> is_interval (derive_left x)\"\n  \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> is_interval x \\<Longrightarrow> is_interval (derive_right x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x; is_interval x\\<rbrakk>\n     \\<Longrightarrow> is_interval (derive_left x)) &&&\n    (\\<lbrakk>snd x \\<le> \\<lbrakk>Final i\\<rbrakk>; is_interval x\\<rbrakk>\n     \\<Longrightarrow> is_interval (derive_right x))", "by (interval_split x, simp_all, auto)"], ["", "function \\<Psi> :: \"('a :: linorder) position \\<times> 'a position \\<Rightarrow> 'a \\<Rightarrow> 'a sort_key\"\n  where\n    \"\\<Psi> (l,u) i = Final i\"\n      if \"l < \\<lbrakk>Final i\\<rbrakk> \\<and> \\<lbrakk>Final i\\<rbrakk> < u\" |\n    \"\\<Psi> (l,u) i = NonFinal (\\<gamma> l Right) (\\<Psi> (derive_left (l,u)) i)\" \n      if \"\\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u\" |\n    \"\\<Psi> (l,u) i = NonFinal (\\<gamma> u Left) (\\<Psi> (derive_right (l,u)) i)\" \n      if \"u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u\" |\n    \"\\<Psi> (l,u) i = undefined\" if \"u \\<le> l\""], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>l i u.\n                   \\<lbrakk>l < \\<lbrakk>Final i\\<rbrakk> \\<and>\n                            \\<lbrakk>Final i\\<rbrakk> < u;\n                    x = ((l, u), i)\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>i l u.\n           \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u;\n            x = ((l, u), i)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>u i l.\n           \\<lbrakk>u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u;\n            x = ((l, u), i)\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>u l i.\n           \\<lbrakk>u \\<le> l; x = ((l, u), i)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>l i u la ia ua.\n       \\<lbrakk>l < \\<lbrakk>Final i\\<rbrakk> \\<and>\n                \\<lbrakk>Final i\\<rbrakk> < u;\n        la < \\<lbrakk>Final ia\\<rbrakk> \\<and>\n        \\<lbrakk>Final ia\\<rbrakk> < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> Final i = Final ia\n 3. \\<And>l i u ia la ua.\n       \\<lbrakk>l < \\<lbrakk>Final i\\<rbrakk> \\<and>\n                \\<lbrakk>Final i\\<rbrakk> < u;\n        \\<lbrakk>Final ia\\<rbrakk> \\<le> la \\<and> la < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> Final i =\n                         NonFinal (\\<gamma> la sort_dir.Right)\n                          (\\<Psi>_sumC (derive_left (la, ua), ia))\n 4. \\<And>l i u ua ia la.\n       \\<lbrakk>l < \\<lbrakk>Final i\\<rbrakk> \\<and>\n                \\<lbrakk>Final i\\<rbrakk> < u;\n        ua \\<le> \\<lbrakk>Final ia\\<rbrakk> \\<and> la < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> Final i =\n                         NonFinal (\\<gamma> ua sort_dir.Left)\n                          (\\<Psi>_sumC (derive_right (la, ua), ia))\n 5. \\<And>l i u ua la ia.\n       \\<lbrakk>l < \\<lbrakk>Final i\\<rbrakk> \\<and>\n                \\<lbrakk>Final i\\<rbrakk> < u;\n        ua \\<le> la; ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> Final i = undefined\n 6. \\<And>i l u ia la ua.\n       \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u;\n        \\<lbrakk>Final ia\\<rbrakk> \\<le> la \\<and> la < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> NonFinal (\\<gamma> l sort_dir.Right)\n                          (\\<Psi>_sumC (derive_left (l, u), i)) =\n                         NonFinal (\\<gamma> la sort_dir.Right)\n                          (\\<Psi>_sumC (derive_left (la, ua), ia))\n 7. \\<And>i l u ua ia la.\n       \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u;\n        ua \\<le> \\<lbrakk>Final ia\\<rbrakk> \\<and> la < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> NonFinal (\\<gamma> l sort_dir.Right)\n                          (\\<Psi>_sumC (derive_left (l, u), i)) =\n                         NonFinal (\\<gamma> ua sort_dir.Left)\n                          (\\<Psi>_sumC (derive_right (la, ua), ia))\n 8. \\<And>i l u ua la ia.\n       \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u; ua \\<le> la;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> NonFinal (\\<gamma> l sort_dir.Right)\n                          (\\<Psi>_sumC (derive_left (l, u), i)) =\n                         undefined\n 9. \\<And>u i l ua ia la.\n       \\<lbrakk>u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u;\n        ua \\<le> \\<lbrakk>Final ia\\<rbrakk> \\<and> la < ua;\n        ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n       \\<Longrightarrow> NonFinal (\\<gamma> u sort_dir.Left)\n                          (\\<Psi>_sumC (derive_right (l, u), i)) =\n                         NonFinal (\\<gamma> ua sort_dir.Left)\n                          (\\<Psi>_sumC (derive_right (la, ua), ia))\n 10. \\<And>u i l ua la ia.\n        \\<lbrakk>u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u;\n         ua \\<le> la; ((l, u), i) = ((la, ua), ia)\\<rbrakk>\n        \\<Longrightarrow> NonFinal (\\<gamma> u sort_dir.Left)\n                           (\\<Psi>_sumC (derive_right (l, u), i)) =\n                          undefined\nA total of 11 subgoals...", "by (metis leI old.prod.exhaust, auto)"], ["", "termination"], ["proof (prove)\ngoal (1 subgoal):\n 1. All \\<Psi>_dom", "apply (relation \"measure (\\<lambda>(p,i). int_size p)\", simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i l u.\n       \\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u \\<Longrightarrow>\n       ((derive_left (l, u), i), (l, u), i)\n       \\<in> measure (\\<lambda>(p, i). int_size p)\n 2. \\<And>u i l.\n       u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u \\<Longrightarrow>\n       ((derive_right (l, u), i), (l, u), i)\n       \\<in> measure (\\<lambda>(p, i). int_size p)", "using derive_size"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final ?i\\<rbrakk> \\<le> fst ?x \\<and>\n  is_interval ?x \\<Longrightarrow>\n  int_size (derive_left ?x) < int_size ?x\n  snd ?x \\<le> \\<lbrakk>Final ?i\\<rbrakk> \\<and>\n  is_interval ?x \\<Longrightarrow>\n  int_size (derive_right ?x) < int_size ?x\n\ngoal (2 subgoals):\n 1. \\<And>i l u.\n       \\<lbrakk>Final i\\<rbrakk> \\<le> l \\<and> l < u \\<Longrightarrow>\n       ((derive_left (l, u), i), (l, u), i)\n       \\<in> measure (\\<lambda>(p, i). int_size p)\n 2. \\<And>u i l.\n       u \\<le> \\<lbrakk>Final i\\<rbrakk> \\<and> l < u \\<Longrightarrow>\n       ((derive_right (l, u), i), (l, u), i)\n       \\<in> measure (\\<lambda>(p, i). int_size p)", "by fastforce+"], ["", "proposition psi_elem: \"is_interval x \\<Longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval x \\<Longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "proof (induct \"int_size x\" arbitrary:x rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<int_size x.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        is_interval x \\<longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "consider (a) \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x\" | (b) \"elem \\<lbrakk>Final i\\<rbrakk> x\" | (c) \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> thesis;\n     elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow> thesis;\n     snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using not_le"], ["proof (prove)\nusing this:\n  (\\<not> ?x \\<le> ?y) = (?y < ?x)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> thesis;\n     elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow> thesis;\n     snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis elem.simps prod.collapse)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow> ?thesis;\n   snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow> ?thesis;\n   snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow> ?thesis;\n   snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 3. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "case a"], ["proof (state)\nthis:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 3. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "hence \"elem  \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)", "by (metis 1 derive_size(1) derive_interval(1))"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 3. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "then"], ["proof (chain)\npicking this:\n  elem \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)", "show ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "using a \"1\"(2)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (derive_left x) i\\<rbrakk> (derive_left x)\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n  is_interval x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "by (interval_split x, simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "case b"], ["proof (state)\nthis:\n  elem \\<lbrakk>Final i\\<rbrakk> x\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n 2. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "then"], ["proof (chain)\npicking this:\n  elem \\<lbrakk>Final i\\<rbrakk> x", "show ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "by (cases x, simp)"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "case c"], ["proof (state)\nthis:\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "hence \"elem  \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)\""], ["proof (prove)\nusing this:\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)", "by (metis 1 derive_size(2) derive_interval(2))"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "then"], ["proof (chain)\npicking this:\n  elem \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)", "show ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "using c \"1\"(2)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (derive_right x) i\\<rbrakk> (derive_right x)\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n  is_interval x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x", "by (interval_split x, simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> x\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition psi_mono:\n  assumes \"i1 < i2\"\n  shows \"is_interval x \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval x \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2", "proof (induct \"int_size x\" arbitrary:x rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      \\<Psi> x i1 < \\<Psi> x i2;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<int_size x.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        is_interval x \\<longrightarrow> \\<Psi> x i1 < \\<Psi> x i2\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      \\<Psi> x i1 < \\<Psi> x i2;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2", "have a:\"\\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>", "using assms"], ["proof (prove)\nusing this:\n  i1 < i2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      \\<Psi> x i1 < \\<Psi> x i2;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>", "consider \n    (a) \"\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and> \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x\" | \n    (b) \"\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and> elem \\<lbrakk>Final i2\\<rbrakk> x\" | \n    (c) \"\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and> snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\" |\n    (d) \"elem \\<lbrakk>Final i1\\<rbrakk> x  \\<and> elem \\<lbrakk>Final i2\\<rbrakk> x\" |\n    (e) \"elem \\<lbrakk>Final i1\\<rbrakk> x \\<and> snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\" |\n    (f) \"snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and> snd x \\<le> \\<lbrakk>Final i1\\<rbrakk>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n             \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n             thesis;\n     \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n     elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n     thesis;\n     \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n     thesis;\n     elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n     elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n     thesis;\n     elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n     thesis;\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n     snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms \"1\"(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>\n  i1 < i2\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n             \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n             thesis;\n     \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n     elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n     thesis;\n     \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n     thesis;\n     elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n     elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n     thesis;\n     elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n     thesis;\n     snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n     snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply (cases x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n                \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n                thesis;\n        \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n        elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n        thesis;\n        \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n        snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n        thesis;\n        elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n        elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n        thesis;\n        elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n        snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n        thesis;\n        snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n        snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n        thesis;\n        \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>; i1 < i2;\n        is_interval x; x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> thesis", "by (metis (mono_tags, hide_lams) dual_order.strict_trans elem.simps\n        fst_conv leI snd_conv)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n           \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n           ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n   snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>m<int_size x.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      is_interval x \\<longrightarrow>\n                      \\<Psi> x i1 < \\<Psi> x i2;\n        is_interval x\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x i1 < \\<Psi> x i2", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n           \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n           ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n   snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n           \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n           ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n   ?thesis;\n   elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n   ?thesis;\n   snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n   snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n   ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "proof (cases)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 6. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case a"], ["proof (state)\nthis:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 6. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "hence \"\\<Psi> (derive_left x) i1  < \\<Psi> (derive_left x) i2\""], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_left x) i1 < \\<Psi> (derive_left x) i2", "by (metis 1 derive_size(1) derive_interval(1))"], ["proof (state)\nthis:\n  \\<Psi> (derive_left x) i1 < \\<Psi> (derive_left x) i2\n\ngoal (6 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 6. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_left x) i1 < \\<Psi> (derive_left x) i2\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using a \"1\"(2)"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_left x) i1 < \\<Psi> (derive_left x) i2\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  \\<lbrakk>Final i2\\<rbrakk> \\<le> fst x\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "by (cases x, simp)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (5 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case b"], ["proof (state)\nthis:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  elem \\<lbrakk>Final i2\\<rbrakk> x\n\ngoal (5 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 5. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  elem \\<lbrakk>Final i2\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using \"1\"(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  elem \\<lbrakk>Final i2\\<rbrakk> x\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "apply (cases x, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>Final i1\\<rbrakk> \\<le> a \\<and>\n                a < \\<lbrakk>Final i2\\<rbrakk> \\<and>\n                \\<lbrakk>Final i2\\<rbrakk> < b;\n        a < b; x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> embed_dir (\\<gamma> a sort_dir.Right) < (i2, Suc 0)", "by (rule_tac [!] position_cases [where x=\"fst x\"], simp_all)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (4 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case c"], ["proof (state)\nthis:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 4. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "proof (cases \"\\<gamma> (fst x) Right = \\<gamma> (snd x) Left\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<gamma> (fst x) sort_dir.Right =\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case True"], ["proof (state)\nthis:\n  \\<gamma> (fst x) sort_dir.Right = \\<gamma> (snd x) sort_dir.Left\n\ngoal (2 subgoals):\n 1. \\<gamma> (fst x) sort_dir.Right =\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "have e:\"is_interval (derive_left x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval (derive_left x)", "using c \"1\"(2) derive_interval(1)"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n  is_interval x\n  \\<lbrakk>\\<lbrakk>Final ?i\\<rbrakk> \\<le> fst ?x; is_interval ?x\\<rbrakk>\n  \\<Longrightarrow> is_interval (derive_left ?x)\n\ngoal (1 subgoal):\n 1. is_interval (derive_left x)", "by blast"], ["proof (state)\nthis:\n  is_interval (derive_left x)\n\ngoal (2 subgoals):\n 1. \\<gamma> (fst x) sort_dir.Right =\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "have f:\"derive_left x = derive_right x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. derive_left x = derive_right x", "using True"], ["proof (prove)\nusing this:\n  \\<gamma> (fst x) sort_dir.Right = \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. derive_left x = derive_right x", "by (cases x, simp)"], ["proof (state)\nthis:\n  derive_left x = derive_right x\n\ngoal (2 subgoals):\n 1. \\<gamma> (fst x) sort_dir.Right =\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "have h:\"\\<Psi> (derive_left x) i1 < \\<Psi> (derive_right x) i2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> (derive_left x) i1 < \\<Psi> (derive_right x) i2", "apply (cases x, simp only: f)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       x = (a, b) \\<Longrightarrow>\n       \\<Psi> (derive_left (a, b)) i1 < \\<Psi> (derive_right (a, b)) i2", "by (metis \"1.hyps\" \"1.prems\" c derive_size(2) e f)"], ["proof (state)\nthis:\n  \\<Psi> (derive_left x) i1 < \\<Psi> (derive_right x) i2\n\ngoal (2 subgoals):\n 1. \\<gamma> (fst x) sort_dir.Right =\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using c \"1\"(2) h True"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n  is_interval x\n  \\<Psi> (derive_left x) i1 < \\<Psi> (derive_right x) i2\n  \\<gamma> (fst x) sort_dir.Right = \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "by (cases x, simp)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case False"], ["proof (state)\nthis:\n  \\<gamma> (fst x) sort_dir.Right \\<noteq> \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "hence \"\\<gamma> (fst x) Right < \\<gamma> (snd x) Left\""], ["proof (prove)\nusing this:\n  \\<gamma> (fst x) sort_dir.Right \\<noteq> \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left", "using \"1\"(2) c"], ["proof (prove)\nusing this:\n  \\<gamma> (fst x) sort_dir.Right \\<noteq> \\<gamma> (snd x) sort_dir.Left\n  is_interval x\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left", "by (interval_split x, simp_all, auto)"], ["proof (state)\nthis:\n  \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x) sort_dir.Right \\<noteq>\n    \\<gamma> (snd x) sort_dir.Left \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "then"], ["proof (chain)\npicking this:\n  \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using c \"1\"(2)"], ["proof (prove)\nusing this:\n  \\<gamma> (fst x) sort_dir.Right < \\<gamma> (snd x) sort_dir.Left\n  \\<lbrakk>Final i1\\<rbrakk> \\<le> fst x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "by (cases x, simp)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (3 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case d"], ["proof (state)\nthis:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and> elem \\<lbrakk>Final i2\\<rbrakk> x\n\ngoal (3 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    elem \\<lbrakk>Final i2\\<rbrakk> x \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 3. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "thus ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and> elem \\<lbrakk>Final i2\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using \"1\"(2) a"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and> elem \\<lbrakk>Final i2\\<rbrakk> x\n  is_interval x\n  \\<lbrakk>Final i1\\<rbrakk> < \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "by (cases x, simp)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case e"], ["proof (state)\nthis:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n    snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2\n 2. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "thus ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using \"1\"(2)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i1\\<rbrakk> x \\<and>\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk>\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "apply (cases x, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a < \\<lbrakk>Final i1\\<rbrakk> \\<and>\n                \\<lbrakk>Final i1\\<rbrakk> < b \\<and>\n                b \\<le> \\<lbrakk>Final i2\\<rbrakk>;\n        a < b; x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> (i1, Suc 0)\n                         < embed_dir (\\<gamma> b sort_dir.Left) \\<or>\n                         (i1, Suc 0) =\n                         embed_dir (\\<gamma> b sort_dir.Left) \\<and>\n                         [] < sort_key_embedding\n                               (\\<Psi>\n                                 (derive_pos (\\<gamma> b sort_dir.Left) a,\n                                  derive_pos (\\<gamma> b sort_dir.Left) b)\n                                 i2)", "by (rule_tac [!] position_cases [where x=\"snd x\"], simp_all del:\\<Psi>.simps)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "case f"], ["proof (state)\nthis:\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n  snd x \\<le> \\<lbrakk>Final i1\\<rbrakk>\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "hence b:\"\\<Psi> (derive_right x) i1  < \\<Psi> (derive_right x) i2\""], ["proof (prove)\nusing this:\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n  snd x \\<le> \\<lbrakk>Final i1\\<rbrakk>\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_right x) i1 < \\<Psi> (derive_right x) i2", "by (metis 1 derive_size(2) derive_interval(2))"], ["proof (state)\nthis:\n  \\<Psi> (derive_right x) i1 < \\<Psi> (derive_right x) i2\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n    snd x \\<le> \\<lbrakk>Final i1\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x i1 < \\<Psi> x i2", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_right x) i1 < \\<Psi> (derive_right x) i2\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "using f \"1\"(2)"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_right x) i1 < \\<Psi> (derive_right x) i2\n  snd x \\<le> \\<lbrakk>Final i2\\<rbrakk> \\<and>\n  snd x \\<le> \\<lbrakk>Final i1\\<rbrakk>\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<Psi> x i1 < \\<Psi> x i2", "by (cases x, simp)"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> x i1 < \\<Psi> x i2\n\ngoal:\nNo subgoals!", "qed"], ["", "proposition psi_narrow:\n  \"elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x \\<Longrightarrow> subset x x' \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "proof (induct \"int_size x'\" arbitrary: x x' rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x' x.\n       \\<lbrakk>\\<forall>m<int_size x'.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      (\\<forall>xa.\n                          elem \\<lbrakk>\\<Psi> x i\\<rbrakk>\n                           xa \\<longrightarrow>\n                          Psi.subset xa x \\<longrightarrow>\n                          \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. \\<And>x' x.\n       \\<lbrakk>\\<forall>m<int_size x'.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      (\\<forall>xa.\n                          elem \\<lbrakk>\\<Psi> x i\\<rbrakk>\n                           xa \\<longrightarrow>\n                          Psi.subset xa x \\<longrightarrow>\n                          \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "have a: \"is_interval x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval x", "using \"1\"(2)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. is_interval x", "by (metis dual_order.strict_trans elem.elims(2) is_interval.simps)"], ["proof (state)\nthis:\n  is_interval x\n\ngoal (1 subgoal):\n 1. \\<And>x' x.\n       \\<lbrakk>\\<forall>m<int_size x'.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      (\\<forall>xa.\n                          elem \\<lbrakk>\\<Psi> x i\\<rbrakk>\n                           xa \\<longrightarrow>\n                          Psi.subset xa x \\<longrightarrow>\n                          \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "have d: \"is_interval x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_interval x'", "using a \"1\"(3)"], ["proof (prove)\nusing this:\n  is_interval x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. is_interval x'", "apply (cases x', cases x, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa < ba; a \\<le> aa \\<and> ba \\<le> b; x' = (a, b);\n        x = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> a < b", "by auto"], ["proof (state)\nthis:\n  is_interval x'\n\ngoal (1 subgoal):\n 1. \\<And>x' x.\n       \\<lbrakk>\\<forall>m<int_size x'.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      (\\<forall>xa.\n                          elem \\<lbrakk>\\<Psi> x i\\<rbrakk>\n                           xa \\<longrightarrow>\n                          Psi.subset xa x \\<longrightarrow>\n                          \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "consider\n    (before) \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\" |\n    (between) \"elem \\<lbrakk>Final i\\<rbrakk> x'\" | \n    (after) \"snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n             thesis;\n     elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> thesis;\n     snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using 1"], ["proof (prove)\nusing this:\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n             thesis;\n     elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> thesis;\n     snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n     thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n             thesis;\n     elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> thesis;\n     snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> thesis;\n     \\<forall>m<int_size x'.\n        \\<forall>a b.\n           m = max (extended_size a) (extended_size b) \\<longrightarrow>\n           (\\<forall>aa ba.\n               aa < \\<lbrakk>\\<Psi> (a, b) i\\<rbrakk> \\<and>\n               \\<lbrakk>\\<Psi> (a, b) i\\<rbrakk> < ba \\<longrightarrow>\n               a \\<le> aa \\<and> ba \\<le> b \\<longrightarrow>\n               \\<Psi> (a, b) i = \\<Psi> (aa, ba) i);\n     elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (metis elem.simps leI prod.collapse)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> ?thesis;\n   snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x' x.\n       \\<lbrakk>\\<forall>m<int_size x'.\n                   \\<forall>x.\n                      m = int_size x \\<longrightarrow>\n                      (\\<forall>xa.\n                          elem \\<lbrakk>\\<Psi> x i\\<rbrakk>\n                           xa \\<longrightarrow>\n                          Psi.subset xa x \\<longrightarrow>\n                          \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x'\\<rbrakk>\n       \\<Longrightarrow> \\<Psi> x' i = \\<Psi> x i", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> ?thesis;\n   snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow> ?thesis;\n   elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow> ?thesis;\n   snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "case before"], ["proof (state)\nthis:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have b: \"\\<lbrakk>Final i\\<rbrakk> \\<le> fst x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x", "using before 1"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x", "apply (cases x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<lbrakk>Final i\\<rbrakk> \\<le> fst x';\n        \\<forall>m<int_size x'.\n           \\<forall>x.\n              m = int_size x \\<longrightarrow>\n              (\\<forall>xa.\n                  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n                  Psi.subset xa x \\<longrightarrow>\n                  \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x';\n        x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> \\<lbrakk>Final i\\<rbrakk> \\<le> fst x", "by (metis dual_order.trans fst_conv subset.elims(2))"], ["proof (state)\nthis:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "obtain z where z_def: \"\\<Psi> x' i = NonFinal (\\<gamma> (fst x') Right) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<Psi> x' i =\n        NonFinal (\\<gamma> (fst x') sort_dir.Right) z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using before d"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  is_interval x'\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<Psi> x' i =\n        NonFinal (\\<gamma> (fst x') sort_dir.Right) z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "apply (cases x')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>z.\n                   \\<Psi> x' i =\n                   NonFinal (\\<gamma> (fst x') sort_dir.Right)\n                    z \\<Longrightarrow>\n                   thesis;\n        \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'; is_interval x';\n        x' = (a, b)\\<rbrakk>\n       \\<Longrightarrow> thesis", "by simp"], ["proof (state)\nthis:\n  \\<Psi> x' i = NonFinal (\\<gamma> (fst x') sort_dir.Right) z\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have c:\"\\<gamma> (fst x') Right = \\<gamma> (fst x) Right\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> (fst x') sort_dir.Right = \\<gamma> (fst x) sort_dir.Right", "using \"1\"(3) z_def \"1\"(2)"], ["proof (prove)\nusing this:\n  Psi.subset x x'\n  \\<Psi> x' i = NonFinal (\\<gamma> (fst x') sort_dir.Right) z\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. \\<gamma> (fst x') sort_dir.Right = \\<gamma> (fst x) sort_dir.Right", "apply (cases x, cases x', simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right", "apply (rule_tac [!] position_cases [where x=\"fst x\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 2. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 3. \\<And>a b aa ba y.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>Final y\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 4. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba); fst x = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 5. \\<And>a b aa ba.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba); fst x = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right", "apply (rule_tac [!] position_cases [where x=\"fst x'\"])"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 2. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 3. \\<And>a b aa ba y za ya.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 4. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 5. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 6. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 7. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 8. \\<And>a b aa ba y za ya.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 9. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 10. \\<And>a b aa ba y za.\n        \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n         \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n         a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right)\n                       z\\<rbrakk> \\<and>\n         \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n         x = (a, b); x' = (aa, ba);\n         fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n         fst x' = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                          \\<gamma> a sort_dir.Right\nA total of 25 subgoals...", "using before"], ["proof (prove)\nusing this:\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n\ngoal (25 subgoals):\n 1. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 2. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 3. \\<And>a b aa ba y za ya.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 4. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 5. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        fst x' = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 6. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 7. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 8. \\<And>a b aa ba y za ya.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 9. \\<And>a b aa ba y za.\n       \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n        \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n        a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> \\<and>\n        \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n        x = (a, b); x' = (aa, ba);\n        fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        fst x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                         \\<gamma> a sort_dir.Right\n 10. \\<And>a b aa ba y za.\n        \\<lbrakk>aa \\<le> a \\<and> b \\<le> ba;\n         \\<Psi> (aa, ba) i = NonFinal (\\<gamma> aa sort_dir.Right) z;\n         a < \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right)\n                       z\\<rbrakk> \\<and>\n         \\<lbrakk>NonFinal (\\<gamma> aa sort_dir.Right) z\\<rbrakk> < b;\n         x = (a, b); x' = (aa, ba);\n         fst x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n         fst x' = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> \\<gamma> aa sort_dir.Right =\n                          \\<gamma> a sort_dir.Right\nA total of 25 subgoals...", "by (simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  \\<gamma> (fst x') sort_dir.Right = \\<gamma> (fst x) sort_dir.Right\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have c1:\"subset (derive_left x) (derive_left x')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Psi.subset (derive_left x) (derive_left x')", "using c \"1\"(3)"], ["proof (prove)\nusing this:\n  \\<gamma> (fst x') sort_dir.Right = \\<gamma> (fst x) sort_dir.Right\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. Psi.subset (derive_left x) (derive_left x')", "by (cases x, cases x', simp add:derive_pos_mono)"], ["proof (state)\nthis:\n  Psi.subset (derive_left x) (derive_left x')\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have g:\"z = \\<Psi> (derive_left x') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<Psi> (derive_left x') i", "using z_def before d"], ["proof (prove)\nusing this:\n  \\<Psi> x' i = NonFinal (\\<gamma> (fst x') sort_dir.Right) z\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  is_interval x'\n\ngoal (1 subgoal):\n 1. z = \\<Psi> (derive_left x') i", "by (cases x', simp)"], ["proof (state)\nthis:\n  z = \\<Psi> (derive_left x') i\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have \"elem \\<lbrakk>NonFinal (\\<gamma> (fst x) Right) z\\<rbrakk> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elem \\<lbrakk>NonFinal (\\<gamma> (fst x) sort_dir.Right) z\\<rbrakk> x", "using \"1\"(2) z_def"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  \\<Psi> x' i = NonFinal (\\<gamma> (fst x') sort_dir.Right) z\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>NonFinal (\\<gamma> (fst x) sort_dir.Right) z\\<rbrakk> x", "by (simp add: c)"], ["proof (state)\nthis:\n  elem \\<lbrakk>NonFinal (\\<gamma> (fst x) sort_dir.Right) z\\<rbrakk> x\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "hence \"elem \\<lbrakk>z\\<rbrakk> (derive_left x)\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>NonFinal (\\<gamma> (fst x) sort_dir.Right) z\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>z\\<rbrakk> (derive_left x)", "using before b"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>NonFinal (\\<gamma> (fst x) sort_dir.Right) z\\<rbrakk> x\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>z\\<rbrakk> (derive_left x)", "by (interval_split x, simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  elem \\<lbrakk>z\\<rbrakk> (derive_left x)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "hence \"\\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>z\\<rbrakk> (derive_left x)\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i", "using \"1\"(1) before d c1"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>z\\<rbrakk> (derive_left x)\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  is_interval x'\n  Psi.subset (derive_left x) (derive_left x')\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i", "apply (simp only:g)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>elem \\<lbrakk>\\<Psi> (derive_left x') i\\<rbrakk>\n              (derive_left x);\n     \\<forall>m<int_size x'.\n        \\<forall>x.\n           m = int_size x \\<longrightarrow>\n           (\\<forall>xa.\n               elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n               Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i);\n     \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'; is_interval x';\n     Psi.subset (derive_left x) (derive_left x')\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i", "by (metis (no_types) derive_size(1))"], ["proof (state)\nthis:\n  \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i\n\ngoal (3 subgoals):\n 1. \\<lbrakk>Final i\\<rbrakk> \\<le> fst x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 3. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "using before b a d c"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_left x') i = \\<Psi> (derive_left x) i\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x'\n  \\<lbrakk>Final i\\<rbrakk> \\<le> fst x\n  is_interval x\n  is_interval x'\n  \\<gamma> (fst x') sort_dir.Right = \\<gamma> (fst x) sort_dir.Right\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "by (cases x, cases x', simp)"], ["proof (state)\nthis:\n  \\<Psi> x' i = \\<Psi> x i\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "case between"], ["proof (state)\nthis:\n  elem \\<lbrakk>Final i\\<rbrakk> x'\n\ngoal (2 subgoals):\n 1. elem \\<lbrakk>Final i\\<rbrakk> x' \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i\n 2. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "thus ?thesis"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i\\<rbrakk> x'\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "using 1"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>Final i\\<rbrakk> x'\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "by (cases x, cases x', auto)"], ["proof (state)\nthis:\n  \\<Psi> x' i = \\<Psi> x i\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "case after"], ["proof (state)\nthis:\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have b: \"snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk>", "using after 1"], ["proof (prove)\nusing this:\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. snd x \\<le> \\<lbrakk>Final i\\<rbrakk>", "apply (cases x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>;\n        \\<forall>m<int_size x'.\n           \\<forall>x.\n              m = int_size x \\<longrightarrow>\n              (\\<forall>xa.\n                  elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n                  Psi.subset xa x \\<longrightarrow>\n                  \\<Psi> x i = \\<Psi> xa i);\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; Psi.subset x x';\n        x = (a, b)\\<rbrakk>\n       \\<Longrightarrow> snd x \\<le> \\<lbrakk>Final i\\<rbrakk>", "by (metis (mono_tags, hide_lams) dual_order.trans prod.exhaust_sel\n          subset.simps)"], ["proof (state)\nthis:\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "obtain z where z_def:\"\\<Psi> x' i = NonFinal (\\<gamma> (snd x') Left) z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<Psi> x' i =\n        NonFinal (\\<gamma> (snd x') sort_dir.Left) z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using after d"], ["proof (prove)\nusing this:\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  is_interval x'\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<Psi> x' i =\n        NonFinal (\\<gamma> (snd x') sort_dir.Left) z \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases x', simp)"], ["proof (state)\nthis:\n  \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have c:\"\\<gamma> (snd x') Left = \\<gamma> (snd x) Left\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<gamma> (snd x') sort_dir.Left = \\<gamma> (snd x) sort_dir.Left", "using \"1\"(3) z_def \"1\"(2)"], ["proof (prove)\nusing this:\n  Psi.subset x x'\n  \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. \\<gamma> (snd x') sort_dir.Left = \\<gamma> (snd x) sort_dir.Left", "apply (simp, cases x, cases x')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b aa ba.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left", "apply (rule_tac [!] position_cases [where x=\"snd x\"])"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 2. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 3. \\<And>a b aa ba y.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>Final y\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 4. \\<And>a b aa ba.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 5. \\<And>a b aa ba.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left", "apply (rule_tac [!] position_cases [where x=\"snd x'\"])"], ["proof (prove)\ngoal (25 subgoals):\n 1. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 2. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 3. \\<And>a b aa ba y za ya.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 4. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 5. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 6. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 7. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 8. \\<And>a b aa ba y za ya.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 9. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 10. \\<And>a b aa ba y za.\n        \\<lbrakk>Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n          x;\n         Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n         snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n         snd x' = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                          \\<gamma> (snd x) sort_dir.Left\nA total of 25 subgoals...", "using after"], ["proof (prove)\nusing this:\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (25 subgoals):\n 1. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 2. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 3. \\<And>a b aa ba y za ya.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 4. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 5. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Left) za\\<rbrakk>;\n        snd x' = \\<stileturn>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 6. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<lbrakk>NonFinal (ya, sort_dir.Left) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 7. \\<And>a b aa ba y za ya zaa.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' =\n        \\<lbrakk>NonFinal (ya, sort_dir.Right) zaa\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 8. \\<And>a b aa ba y za ya.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<lbrakk>Final ya\\<rbrakk>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 9. \\<And>a b aa ba y za.\n       \\<lbrakk>Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n         x;\n        Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n        \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n        elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n        snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n        snd x' = \\<turnstile>\\<rbrakk>\n       \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                         \\<gamma> (snd x) sort_dir.Left\n 10. \\<And>a b aa ba y za.\n        \\<lbrakk>Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>NonFinal (\\<gamma> (snd x') sort_dir.Left) z\\<rbrakk>\n          x;\n         Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x = (a, b); Psi.subset x x';\n         \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z;\n         elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x; x' = (aa, ba);\n         snd x = \\<lbrakk>NonFinal (y, sort_dir.Right) za\\<rbrakk>;\n         snd x' = \\<stileturn>\\<rbrakk>\n        \\<Longrightarrow> \\<gamma> (snd x') sort_dir.Left =\n                          \\<gamma> (snd x) sort_dir.Left\nA total of 25 subgoals...", "by (simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  \\<gamma> (snd x') sort_dir.Left = \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have c1:\"subset (derive_right x) (derive_right x')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Psi.subset (derive_right x) (derive_right x')", "using c \"1\"(3)"], ["proof (prove)\nusing this:\n  \\<gamma> (snd x') sort_dir.Left = \\<gamma> (snd x) sort_dir.Left\n  Psi.subset x x'\n\ngoal (1 subgoal):\n 1. Psi.subset (derive_right x) (derive_right x')", "by (cases x, cases x', simp add:derive_pos_mono)"], ["proof (state)\nthis:\n  Psi.subset (derive_right x) (derive_right x')\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have g:\"z = \\<Psi> (derive_right x') i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = \\<Psi> (derive_right x') i", "using z_def after d"], ["proof (prove)\nusing this:\n  \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  is_interval x'\n\ngoal (1 subgoal):\n 1. z = \\<Psi> (derive_right x') i", "by (cases x', simp)"], ["proof (state)\nthis:\n  z = \\<Psi> (derive_right x') i\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "have \"elem \\<lbrakk>NonFinal (\\<gamma> (snd x) Left) z\\<rbrakk> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. elem \\<lbrakk>NonFinal (\\<gamma> (snd x) sort_dir.Left) z\\<rbrakk> x", "using \"1\"(2) z_def"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> x' i\\<rbrakk> x\n  \\<Psi> x' i = NonFinal (\\<gamma> (snd x') sort_dir.Left) z\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>NonFinal (\\<gamma> (snd x) sort_dir.Left) z\\<rbrakk> x", "by (simp add: c)"], ["proof (state)\nthis:\n  elem \\<lbrakk>NonFinal (\\<gamma> (snd x) sort_dir.Left) z\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "hence \"elem \\<lbrakk>z\\<rbrakk> (derive_right x)\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>NonFinal (\\<gamma> (snd x) sort_dir.Left) z\\<rbrakk> x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>z\\<rbrakk> (derive_right x)", "using after b"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>NonFinal (\\<gamma> (snd x) sort_dir.Left) z\\<rbrakk> x\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>z\\<rbrakk> (derive_right x)", "by (interval_split x, simp_all del:\\<Psi>.simps, auto)"], ["proof (state)\nthis:\n  elem \\<lbrakk>z\\<rbrakk> (derive_right x)\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "hence \"\\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>z\\<rbrakk> (derive_right x)\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i", "using \"1\"(1) after d c1"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>z\\<rbrakk> (derive_right x)\n  \\<forall>m<int_size x'.\n     \\<forall>x.\n        m = int_size x \\<longrightarrow>\n        (\\<forall>xa.\n            elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n            Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i)\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  is_interval x'\n  Psi.subset (derive_right x) (derive_right x')\n\ngoal (1 subgoal):\n 1. \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i", "apply (simp only:g)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>elem \\<lbrakk>\\<Psi> (derive_right x') i\\<rbrakk>\n              (derive_right x);\n     \\<forall>m<int_size x'.\n        \\<forall>x.\n           m = int_size x \\<longrightarrow>\n           (\\<forall>xa.\n               elem \\<lbrakk>\\<Psi> x i\\<rbrakk> xa \\<longrightarrow>\n               Psi.subset xa x \\<longrightarrow> \\<Psi> x i = \\<Psi> xa i);\n     snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>; is_interval x';\n     Psi.subset (derive_right x) (derive_right x')\\<rbrakk>\n    \\<Longrightarrow> \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i", "by (metis (no_types) derive_size(2))"], ["proof (state)\nthis:\n  \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i\n\ngoal (1 subgoal):\n 1. snd x' \\<le> \\<lbrakk>Final i\\<rbrakk> \\<Longrightarrow>\n    \\<Psi> x' i = \\<Psi> x i", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "using after b a d c"], ["proof (prove)\nusing this:\n  \\<Psi> (derive_right x') i = \\<Psi> (derive_right x) i\n  snd x' \\<le> \\<lbrakk>Final i\\<rbrakk>\n  snd x \\<le> \\<lbrakk>Final i\\<rbrakk>\n  is_interval x\n  is_interval x'\n  \\<gamma> (snd x') sort_dir.Left = \\<gamma> (snd x) sort_dir.Left\n\ngoal (1 subgoal):\n 1. \\<Psi> x' i = \\<Psi> x i", "by (cases x, cases x', simp)"], ["proof (state)\nthis:\n  \\<Psi> x' i = \\<Psi> x i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Psi> x' i = \\<Psi> x i\n\ngoal:\nNo subgoals!", "qed"], ["", "definition preserve_order :: \"'a :: linorder \\<Rightarrow> 'a \\<Rightarrow> 'b :: linorder \\<Rightarrow> 'b \\<Rightarrow> bool\"\n  where \"preserve_order x y u v \\<equiv> (x < y \\<longrightarrow> u < v) \\<and> (x > y \\<longrightarrow> u > v)\""], ["", "proposition psi_preserve_order:\n  fixes l l' u u' i i'\n  assumes \"elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (l',u')\"\n  assumes \"elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (l, u)\"\n  shows \"preserve_order i i' \\<lbrakk>\\<Psi> (l,u) i\\<rbrakk> \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "have \"l < u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l < u", "using assms(2)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (l, u)\n\ngoal (1 subgoal):\n 1. l < u", "by auto"], ["proof (state)\nthis:\n  l < u\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "hence a:\"elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')\""], ["proof (prove)\nusing this:\n  l < u\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')", "using assms(1) psi_elem"], ["proof (prove)\nusing this:\n  l < u\n  elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (l', u')\n  is_interval ?x \\<Longrightarrow> elem \\<lbrakk>\\<Psi> ?x ?i\\<rbrakk> ?x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')", "by fastforce"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "hence b:\"\\<Psi> (l,u) i = \\<Psi> (max l l', min u u') i\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')\n\ngoal (1 subgoal):\n 1. \\<Psi> (l, u) i = \\<Psi> (max l l', min u u') i", "by (simp add: psi_narrow)"], ["proof (state)\nthis:\n  \\<Psi> (l, u) i = \\<Psi> (max l l', min u u') i\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "have \"l' < u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' < u'", "using assms(1)"], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (l', u')\n\ngoal (1 subgoal):\n 1. l' < u'", "by auto"], ["proof (state)\nthis:\n  l' < u'\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "hence \"elem \\<lbrakk>\\<Psi> (l',u') i'\\<rbrakk> (max l l', min u u')\""], ["proof (prove)\nusing this:\n  l' < u'\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (max l l', min u u')", "using assms(2) psi_elem"], ["proof (prove)\nusing this:\n  l' < u'\n  elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (l, u)\n  is_interval ?x \\<Longrightarrow> elem \\<lbrakk>\\<Psi> ?x ?i\\<rbrakk> ?x\n\ngoal (1 subgoal):\n 1. elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (max l l', min u u')", "by fastforce"], ["proof (state)\nthis:\n  elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (max l l', min u u')\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "hence c:\"\\<Psi> (l',u') i' = \\<Psi> (max l l', min u u') i'\""], ["proof (prove)\nusing this:\n  elem \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk> (max l l', min u u')\n\ngoal (1 subgoal):\n 1. \\<Psi> (l', u') i' = \\<Psi> (max l l', min u u') i'", "by (simp add: psi_narrow)"], ["proof (state)\nthis:\n  \\<Psi> (l', u') i' = \\<Psi> (max l l', min u u') i'\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "hence \"max l l' < min u u'\""], ["proof (prove)\nusing this:\n  \\<Psi> (l', u') i' = \\<Psi> (max l l', min u u') i'\n\ngoal (1 subgoal):\n 1. max l l' < min u u'", "using a min_def"], ["proof (prove)\nusing this:\n  \\<Psi> (l', u') i' = \\<Psi> (max l l', min u u') i'\n  elem \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk> (max l l', min u u')\n  min ?a ?b = (if ?a \\<le> ?b then ?a else ?b)\n\ngoal (1 subgoal):\n 1. max l l' < min u u'", "by auto"], ["proof (state)\nthis:\n  max l l' < min u u'\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "then"], ["proof (chain)\npicking this:\n  max l l' < min u u'", "show ?thesis"], ["proof (prove)\nusing this:\n  max l l' < min u u'\n\ngoal (1 subgoal):\n 1. preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n     \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>", "apply (simp only: preserve_order_def b c)"], ["proof (prove)\ngoal (1 subgoal):\n 1. max l l' < min u u' \\<Longrightarrow>\n    (i < i' \\<longrightarrow>\n     \\<lbrakk>\\<Psi> (max l l', min u u') i\\<rbrakk>\n     < \\<lbrakk>\\<Psi> (max l l', min u u') i'\\<rbrakk>) \\<and>\n    (i' < i \\<longrightarrow>\n     \\<lbrakk>\\<Psi> (max l l', min u u') i'\\<rbrakk>\n     < \\<lbrakk>\\<Psi> (max l l', min u u') i\\<rbrakk>)", "using psi_mono extended_simps(2) is_interval.simps"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i1.0 < ?i2.0; is_interval ?x\\<rbrakk>\n  \\<Longrightarrow> \\<Psi> ?x ?i1.0 < \\<Psi> ?x ?i2.0\n  (\\<lbrakk>?x'\\<rbrakk> < \\<lbrakk>?y'\\<rbrakk>) = (?x' < ?y')\n  is_interval (?l, ?u) = (?l < ?u)\n\ngoal (1 subgoal):\n 1. max l l' < min u u' \\<Longrightarrow>\n    (i < i' \\<longrightarrow>\n     \\<lbrakk>\\<Psi> (max l l', min u u') i\\<rbrakk>\n     < \\<lbrakk>\\<Psi> (max l l', min u u') i'\\<rbrakk>) \\<and>\n    (i' < i \\<longrightarrow>\n     \\<lbrakk>\\<Psi> (max l l', min u u') i'\\<rbrakk>\n     < \\<lbrakk>\\<Psi> (max l l', min u u') i\\<rbrakk>)", "by blast"], ["proof (state)\nthis:\n  preserve_order i i' \\<lbrakk>\\<Psi> (l, u) i\\<rbrakk>\n   \\<lbrakk>\\<Psi> (l', u') i'\\<rbrakk>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}