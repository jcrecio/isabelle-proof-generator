{"file_name": "/home/qj213/afp-2021-10-22/thys/First_Welfare_Theorem/Microeconomics/Exchange_Economy.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/First_Welfare_Theorem", "problem_names": ["lemma base_pref_is_ord_eucl_rpr: \"i \\<in> agents \\<Longrightarrow> rational_preference consumption_set Pr[i]\"", "lemma utility_function_def[iff]:\n  assumes \"i \\<in> agents\"\n  shows \"U[i] x \\<ge> U[i] y \\<longleftrightarrow> x \\<succeq>[Pr[i]] y\"", "lemma budget_constraint_is_feasible:\n  assumes \"i \\<in> agents\"\n  assumes \"X \\<in> (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]\"", "lemma arg_max_set_therefore_no_better :\n  assumes \"i \\<in> agents\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"U[i] y > U[i] x \\<longrightarrow> y \\<notin> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\"", "lemma consumption_set_member: \"\\<forall>x. x \\<in> consumption_set\"", "lemma argmax_entire_budget :\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"X \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> X = P \\<bullet> \\<E>[i]\"", "lemma pref_more_expensive:\n  assumes \"i \\<in> agents\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  assumes \"U[i] y > U[i] x\"\n  shows \"y \\<bullet> P > P \\<bullet> \\<E>[i]\"", "lemma same_util_is_equal_or_more_expensive:\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  assumes \"U[i] y \\<ge> U[i] x\"\n  shows \"y \\<bullet> P \\<ge> P \\<bullet> \\<E>[i]\"", "lemma all_in_argmax_same_price:\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n    and  \"y \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> x = P \\<bullet> y\"", "lemma individual_rationalism :\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"\\<forall>i \\<in> agents. X i \\<succeq>[Pref i] \\<E>[i]\"", "lemma walras_law_per_agent :\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"\\<forall>i \\<in> agents. P \\<bullet> X i = P \\<bullet> \\<E>[i]\"", "lemma walras_law:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"(\\<Sum>i\\<in>agents. P \\<bullet> (X i)) - (\\<Sum>i\\<in>agents. P \\<bullet> \\<E>[i]) = 0\"", "lemma inner_with_ge_0: \"(P::(real, 'n::finite) vec) > 0 \\<Longrightarrow> A \\<ge> B \\<Longrightarrow>  P \\<bullet> A \\<ge> P \\<bullet> B\"", "theorem first_welfare_theorem_exchange:\n  assumes lns : \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and price_cond: \"Price > 0\"\n  assumes equilibrium : \"comp_equilib_endow Price \\<X> \\<E>\"\n  shows \"pareto_optimal_endow \\<X> \\<E>\""], "translations": [["", "lemma base_pref_is_ord_eucl_rpr: \"i \\<in> agents \\<Longrightarrow> rational_preference consumption_set Pr[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    rational_preference consumption_set Pr[i]", "by (meson exchange_economy.agent_props exchange_economy_axioms\n      ord_eucl_utility_imp_rpr real_vector_rpr.have_rpr)"], ["", "private"], ["", "abbreviation calculate_value \n  where\n    \"calculate_value P x \\<equiv> P \\<bullet> x\""], ["", "subsection \\<open> Feasibility \\<close>"], ["", "definition feasible_allocation\n  where\n    \"feasible_allocation A E \\<longleftrightarrow>\n      (\\<Sum>i\\<in>agents. A i) \\<le> (\\<Sum>i\\<in>agents. E i)\""], ["", "subsection \\<open> Pareto optimality \\<close>"], ["", "definition pareto_optimal_endow\n  where\n    \"pareto_optimal_endow X E \\<longleftrightarrow>\n              (feasible_allocation X E \\<and>\n              (\\<nexists>X'. feasible_allocation X' E \\<and> X' \\<succ>Pareto X))\""], ["", "subsection \\<open>Competitive Equilibrium in Exchange Economy \\<close>"], ["", "text \\<open> Competitive Equilibirum or Walrasian Equilibrium definition. \\<close>"], ["", "definition comp_equilib_endow\n  where\n    \"comp_equilib_endow P X E \\<equiv>\n      feasible_allocation X E \\<and>\n      (\\<forall>i \\<in> agents. X i \\<in> arg_max_set U[i]\n        (budget_constraint (calculate_value P) consumption_set (P \\<bullet> E i)))\""], ["", "subsection \\<open> Lemmas for final result \\<close>"], ["", "lemma utility_function_def[iff]:\n  assumes \"i \\<in> agents\"\n  shows \"U[i] x \\<ge> U[i] y \\<longleftrightarrow> x \\<succeq>[Pr[i]] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (U[i] y \\<le> U[i] x) = x \\<succeq>[Pr[i]] y", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. U[i] y \\<le> U[i] x \\<Longrightarrow> x \\<succeq>[Pr[i]] y\n 2. x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x", "have \"ordinal_utility consumption_set (Pref i) (U[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ordinal_utility consumption_set Pr[i] U[i]", "using agent_props assms eucl_ordinal_utility_def"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  eucl_ordinal_utility consumption_set Pr[?i] U[?i]\n  i \\<in> agents\n  eucl_ordinal_utility ?carrier ?relation ?u \\<equiv>\n  ordinal_utility ?carrier ?relation ?u\n\ngoal (1 subgoal):\n 1. ordinal_utility consumption_set Pr[i] U[i]", "by auto"], ["proof (state)\nthis:\n  ordinal_utility consumption_set Pr[i] U[i]\n\ngoal (2 subgoals):\n 1. U[i] y \\<le> U[i] x \\<Longrightarrow> x \\<succeq>[Pr[i]] y\n 2. x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x", "then"], ["proof (chain)\npicking this:\n  ordinal_utility consumption_set Pr[i] U[i]", "show \" U[i] y \\<le>  U[i] x \\<Longrightarrow> x \\<succeq>[Pref i] y\""], ["proof (prove)\nusing this:\n  ordinal_utility consumption_set Pr[i] U[i]\n\ngoal (1 subgoal):\n 1. U[i] y \\<le> U[i] x \\<Longrightarrow> x \\<succeq>[Pr[i]] y", "by (meson UNIV_I cons_set_props ordinal_utility.util_def_conf\n        pre_arrow_debreu_consumption_set_def)"], ["proof (state)\nthis:\n  U[i] y \\<le> U[i] x \\<Longrightarrow> x \\<succeq>[Pr[i]] y\n\ngoal (1 subgoal):\n 1. x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x", "show \"x \\<succeq>[Pref i] y \\<Longrightarrow> U[i] y \\<le> U[i] x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x", "by (meson agent_props assms ordinal_utility_def eucl_ordinal_utility_def)"], ["proof (state)\nthis:\n  x \\<succeq>[Pr[i]] y \\<Longrightarrow> U[i] y \\<le> U[i] x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma budget_constraint_is_feasible:\n  assumes \"i \\<in> agents\"\n  assumes \"X \\<in> (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "using budget_constraint_def assms"], ["proof (prove)\nusing this:\n  budget_constraint ?f ?S ?W = {x \\<in> ?S. ?f x \\<le> ?W}\n  i \\<in> agents\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "by (simp add: budget_constraint_def)"], ["", "lemma arg_max_set_therefore_no_better :\n  assumes \"i \\<in> agents\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"U[i] y > U[i] x \\<longrightarrow> y \\<notin> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U[i] x < U[i] y \\<longrightarrow>\n    y \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i])", "by (meson no_better_in_s assms)"], ["", "text \\<open> Since we need no restriction on the consumption set for the First Welfare Theorem \\<close>"], ["", "lemma consumption_set_member: \"\\<forall>x. x \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "have \"\\<And>(x::'a). x \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> consumption_set", "using cons_set_props pre_arrow_debreu_consumption_set_def"], ["proof (prove)\nusing this:\n  pre_arrow_debreu_consumption_set consumption_set\n  pre_arrow_debreu_consumption_set ?consumption_set \\<equiv>\n  \\<forall>x. x \\<in> UNIV \\<longrightarrow> x \\<in> ?consumption_set\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> consumption_set", "by (simp add: pre_arrow_debreu_consumption_set_def)"], ["proof (state)\nthis:\n  ?x1 \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x1 \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "by blast"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> consumption_set\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Under the assumption of Local non-satiation, agents will utilise their entire budget. \\<close>"], ["", "lemma argmax_entire_budget :\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"X \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> X = P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "have leq : \"(P \\<bullet> X) \\<le> (P \\<bullet> \\<E>[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "have \"X \\<in> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "using argmax_sol_in_s[of X \"U[i]\" \"budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\"]\n        assms"], ["proof (prove)\nusing this:\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "by auto"], ["proof (state)\nthis:\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "thus ?thesis"], ["proof (prove)\nusing this:\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "using assms(1) budget_constraint_is_feasible"], ["proof (prove)\nusing this:\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n  i \\<in> agents\n  \\<lbrakk>?i \\<in> agents;\n   ?X \\<in> budget_constraint ((\\<bullet>) ?P) consumption_set\n             (?P \\<bullet> \\<E>[?i])\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X \\<le> ?P \\<bullet> \\<E>[?i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]", "by blast"], ["proof (state)\nthis:\n  P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "have not_less: \"\\<not>(P \\<bullet> X < P \\<bullet> \\<E>[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> X < P \\<bullet> \\<E>[i]", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "assume cpos: \"(P \\<bullet> X) < (P \\<bullet> \\<E>[i])\""], ["proof (state)\nthis:\n  P \\<bullet> X < P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "define lesS where \"lesS = {x. P \\<bullet> x < P \\<bullet> \\<E>[i]}\""], ["proof (state)\nthis:\n  lesS = {x. P \\<bullet> x < P \\<bullet> \\<E>[i]}\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "obtain e where\n      e: \"0 < e\" \"ball X e \\<subseteq> lesS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; ball X e \\<subseteq> lesS\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis cpos lesS_def mem_Collect_eq\n          open_contains_ball_eq open_halfspace_lt)"], ["proof (state)\nthis:\n  0 < e\n  ball X e \\<subseteq> lesS\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "obtain Y where\n      Y: \"Y \\<succ>[Pref i] X \" \"Y \\<in> ball X e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>Y \\<succeq>[Pr[i]] X \\<and> (X, Y) \\<notin> Pr[i];\n         Y \\<in> ball X e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using e consumption_set_member assms"], ["proof (prove)\nusing this:\n  0 < e\n  ball X e \\<subseteq> lesS\n  \\<forall>x. x \\<in> consumption_set\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        \\<lbrakk>Y \\<succeq>[Pr[i]] X \\<and> (X, Y) \\<notin> Pr[i];\n         Y \\<in> ball X e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Y \\<succeq>[Pr[i]] X \\<and> (X, Y) \\<notin> Pr[i]\n  Y \\<in> ball X e\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "have \"Y \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<in> consumption_set", "using consumption_set_member"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. Y \\<in> consumption_set", "by blast"], ["proof (state)\nthis:\n  Y \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "hence \"Y \\<in> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\nusing this:\n  Y \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. Y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "using budget_constraint_def e lesS_def\n        less_eq_real_def Y"], ["proof (prove)\nusing this:\n  Y \\<in> consumption_set\n  budget_constraint ?f ?S ?W = {x \\<in> ?S. ?f x \\<le> ?W}\n  0 < e\n  ball X e \\<subseteq> lesS\n  lesS = {x. P \\<bullet> x < P \\<bullet> \\<E>[i]}\n  (?x \\<le> ?y) = (?x < ?y \\<or> ?x = ?y)\n  Y \\<succeq>[Pr[i]] X \\<and> (X, Y) \\<notin> Pr[i]\n  Y \\<in> ball X e\n\ngoal (1 subgoal):\n 1. Y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "by fastforce"], ["proof (state)\nthis:\n  Y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. P \\<bullet> X < P \\<bullet> \\<E>[i] \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  Y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. False", "by (meson assms Y all_leq utility_function_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> P \\<bullet> X < P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "using leq not_less"], ["proof (prove)\nusing this:\n  P \\<bullet> X \\<le> P \\<bullet> \\<E>[i]\n  \\<not> P \\<bullet> X < P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = P \\<bullet> \\<E>[i]", "by auto"], ["proof (state)\nthis:\n  P \\<bullet> X = P \\<bullet> \\<E>[i]\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> All bundles that would be strictly preferred to any argmax result, are more expensive. \\<close>"], ["", "lemma pref_more_expensive:\n  assumes \"i \\<in> agents\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  assumes \"U[i] y > U[i] x\"\n  shows \"y \\<bullet> P > P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] < y \\<bullet> P", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "assume cpos :  \"\\<not>(y \\<bullet> P > P \\<bullet> \\<E>[i])\""], ["proof (state)\nthis:\n  \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P", "have xp_leq : \"y \\<bullet> P \\<le> P \\<bullet>  \\<E>[i]\""], ["proof (prove)\nusing this:\n  \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P\n\ngoal (1 subgoal):\n 1. y \\<bullet> P \\<le> P \\<bullet> \\<E>[i]", "by auto"], ["proof (state)\nthis:\n  y \\<bullet> P \\<le> P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "hence \"x \\<in> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\nusing this:\n  y \\<bullet> P \\<le> P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "using argmax_sol_in_s[of x \" U[i]\" \"budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\"]\n      assms"], ["proof (prove)\nusing this:\n  y \\<bullet> P \\<le> P \\<bullet> \\<E>[i]\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n  x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n  i \\<in> agents\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n  U[i] x < U[i] y\n\ngoal (1 subgoal):\n 1. x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "by auto"], ["proof (state)\nthis:\n  x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "hence xp_in: \"y \\<in> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\nusing this:\n  x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]) \\<Longrightarrow>\n    y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "have \"P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]", "by (metis xp_leq inner_commute)"], ["proof (state)\nthis:\n  P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. x \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]) \\<Longrightarrow>\n    y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "then"], ["proof (chain)\npicking this:\n  P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "using consumption_set_member"], ["proof (prove)\nusing this:\n  P \\<bullet> y \\<le> P \\<bullet> \\<E>[i]\n  \\<forall>x. x \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "by (simp add: budget_constraint_def)"], ["proof (state)\nthis:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "hence \"y \\<succ>[Pref i] x\""], ["proof (prove)\nusing this:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]", "using arg_max_set_therefore_no_better assms"], ["proof (prove)\nusing this:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n  \\<lbrakk>?i \\<in> agents;\n   ?x \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (?P \\<bullet> \\<E>[?i]))\\<rbrakk>\n  \\<Longrightarrow> U[?i] ?x < U[?i] ?y \\<longrightarrow>\n                    ?y \\<notin> budget_constraint ((\\<bullet>) ?P)\n                                 consumption_set (?P \\<bullet> \\<E>[?i])\n  i \\<in> agents\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n  U[i] x < U[i] y\n\ngoal (1 subgoal):\n 1. y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]", "by blast"], ["proof (state)\nthis:\n  y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "hence \"y \\<succ>[Pref i] x \\<and> y \\<in> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\nusing this:\n  y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]\n\ngoal (1 subgoal):\n 1. (y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]) \\<and>\n    y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "using xp_in"], ["proof (prove)\nusing this:\n  y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. (y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]) \\<and>\n    y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i])", "by blast"], ["proof (state)\nthis:\n  (y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]) \\<and>\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "hence \"x \\<notin> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\""], ["proof (prove)\nusing this:\n  (y \\<succeq>[Pr[i]] x \\<and> (x, y) \\<notin> Pr[i]) \\<and>\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. x \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (P \\<bullet> \\<E>[i]))", "by (meson assms exchange_economy.arg_max_set_therefore_no_better\n        exchange_economy_axioms)"], ["proof (state)\nthis:\n  x \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<E>[i] < y \\<bullet> P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  x \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))", "show False"], ["proof (prove)\nusing this:\n  x \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. False", "using assms(2)"], ["proof (prove)\nusing this:\n  x \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Greater or equal utility implies greater or equal price. \\<close>"], ["", "lemma same_util_is_equal_or_more_expensive:\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  assumes \"U[i] y \\<ge> U[i] x\"\n  shows \"y \\<bullet> P \\<ge> P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] \\<le> y \\<bullet> P", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] \\<le> y \\<bullet> P", "have not_in: \"y \\<notin> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\n    \\<Longrightarrow> y \\<bullet> P > P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n    P \\<bullet> \\<E>[i] < y \\<bullet> P", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n    P \\<bullet> \\<E>[i] < y \\<bullet> P", "assume \"y \\<notin> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\""], ["proof (state)\nthis:\n  y \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. y \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n    P \\<bullet> \\<E>[i] < y \\<bullet> P", "then"], ["proof (chain)\npicking this:\n  y \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))", "have \"y \\<notin> budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i])\""], ["proof (prove)\nusing this:\n  y \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. y \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i])", "by (meson assms leq_all_in_sol assms)"], ["proof (state)\nthis:\n  y \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. y \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n    P \\<bullet> \\<E>[i] < y \\<bullet> P", "then"], ["proof (chain)\npicking this:\n  y \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (P \\<bullet> \\<E>[i])", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (P \\<bullet> \\<E>[i])\n\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] < y \\<bullet> P", "by (simp add: budget_constraint_def inner_commute\n          consumption_set_member)"], ["proof (state)\nthis:\n  P \\<bullet> \\<E>[i] < y \\<bullet> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (P \\<bullet> \\<E>[i])) \\<Longrightarrow>\n  P \\<bullet> \\<E>[i] < y \\<bullet> P\n\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] \\<le> y \\<bullet> P", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> \\<E>[i] \\<le> y \\<bullet> P", "by (metis argmax_entire_budget not_in assms(1,2,3)\n        dual_order.order_iff_strict inner_commute)"], ["proof (state)\nthis:\n  P \\<bullet> \\<E>[i] \\<le> y \\<bullet> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma all_in_argmax_same_price:\n  assumes \"i \\<in> agents\"\n  assumes \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n    and  \"y \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (P \\<bullet> \\<E>[i]))\"\n  shows \"P \\<bullet> x = P \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> x = P \\<bullet> y", "using argmax_entire_budget assms(1) assms(2) assms(3) assms(4)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (?P \\<bullet> \\<E>[?i]))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = ?P \\<bullet> \\<E>[?i]\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n  y \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (P \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. P \\<bullet> x = P \\<bullet> y", "by presburger"], ["", "text \\<open> All rationally acting agents (which is every agent by assumption)\n        will not decrease his utility \\<close>"], ["", "lemma individual_rationalism :\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"\\<forall>i \\<in> agents. X i \\<succeq>[Pref i] \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. X i \\<succeq>[Pr[i]] \\<E>[i]", "by (metis pref_more_expensive comp_equilib_endow_def assms\n      inner_commute less_irrefl not_le utility_function_def)"], ["", "lemma walras_law_per_agent :\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"\\<forall>i \\<in> agents. P \\<bullet> X i = P \\<bullet> \\<E>[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. P \\<bullet> X i = P \\<bullet> \\<E>[i]", "by (meson argmax_entire_budget comp_equilib_endow_def assms)"], ["", "text \\<open> Walras Law holds in our Exchange Economy model. It states that in an equilibrium,\n       demand equals supply \\<close>"], ["", "lemma walras_law:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"comp_equilib_endow P X \\<E>\"\n  shows \"(\\<Sum>i\\<in>agents. P \\<bullet> (X i)) - (\\<Sum>i\\<in>agents. P \\<bullet> \\<E>[i]) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. P \\<bullet> X i) -\n    (\\<Sum>i\\<in>agents. P \\<bullet> \\<E>[i]) =\n    0", "using assms walras_law_per_agent"], ["proof (prove)\nusing this:\n  ?i1 \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i1]\n  comp_equilib_endow P X \\<E>\n  \\<lbrakk>\\<And>i.\n              i \\<in> agents \\<Longrightarrow>\n              local_nonsatiation consumption_set Pr[i];\n   comp_equilib_endow ?P ?X \\<E>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i\\<in>agents.\n                       ?P \\<bullet> ?X i = ?P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. P \\<bullet> X i) -\n    (\\<Sum>i\\<in>agents. P \\<bullet> \\<E>[i]) =\n    0", "by auto"], ["", "lemma inner_with_ge_0: \"(P::(real, 'n::finite) vec) > 0 \\<Longrightarrow> A \\<ge> B \\<Longrightarrow>  P \\<bullet> A \\<ge> P \\<bullet> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < P; B \\<le> A\\<rbrakk>\n    \\<Longrightarrow> P \\<bullet> B \\<le> P \\<bullet> A", "by (metis dual_order.order_iff_strict inner_commute\n      interval_inner_leI(2) ord_class.atLeastAtMost_iff)"], ["", "subsection \\<open> First Welfare Theorem in Exchange Economy \\<close>"], ["", "text \\<open> We prove the first welfare theorem in our Exchange Economy model. \\<close>"], ["", "theorem first_welfare_theorem_exchange:\n  assumes lns : \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and price_cond: \"Price > 0\"\n  assumes equilibrium : \"comp_equilib_endow Price \\<X> \\<E>\"\n  shows \"pareto_optimal_endow \\<X> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal_endow \\<X> \\<E>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "assume neg_ass : \"\\<not> pareto_optimal_endow \\<X> \\<E>\""], ["proof (state)\nthis:\n  \\<not> pareto_optimal_endow \\<X> \\<E>\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have equili_feasible : \"feasible_allocation \\<X> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible_allocation \\<X> \\<E>", "using comp_equilib_endow_def equilibrium"], ["proof (prove)\nusing this:\n  comp_equilib_endow ?P ?X ?E \\<equiv>\n  feasible_allocation ?X ?E \\<and>\n  (\\<forall>i\\<in>agents.\n      ?X i\n      \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (?P \\<bullet> ?E i)))\n  comp_equilib_endow Price \\<X> \\<E>\n\ngoal (1 subgoal):\n 1. feasible_allocation \\<X> \\<E>", "by (simp add: comp_equilib_endow_def)"], ["proof (state)\nthis:\n  feasible_allocation \\<X> \\<E>\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have price_g_zero : \"Price > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) < Price", "by (simp add: price_cond)"], ["proof (state)\nthis:\n  (0::'a) < Price\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "obtain Y where\n    xprime_pareto: \"feasible_allocation Y \\<E> \\<and>\n            (\\<forall>i \\<in> agents. U[i] (Y i) \\<ge> U[i] (\\<X> i)) \\<and>\n            (\\<exists>i \\<in> agents. U[i] (Y i) > U[i] (\\<X> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        feasible_allocation Y \\<E> \\<and>\n        (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n        (\\<exists>i\\<in>agents.\n            U[i] (\\<X> i) < U[i] (Y i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using equili_feasible neg_ass pareto_dominating_def\n      pareto_optimal_endow_def"], ["proof (prove)\nusing this:\n  feasible_allocation \\<X> \\<E>\n  \\<not> pareto_optimal_endow \\<X> \\<E>\n  ?X \\<succ>Pareto ?Y =\n  ((\\<forall>i\\<in>agents. U[i] (?Y i) \\<le> U[i] (?X i)) \\<and>\n   (\\<exists>i\\<in>agents. U[i] (?Y i) < U[i] (?X i)))\n  pareto_optimal_endow ?X ?E =\n  (feasible_allocation ?X ?E \\<and>\n   (\\<nexists>X'. feasible_allocation X' ?E \\<and> X' \\<succ>Pareto ?X))\n\ngoal (1 subgoal):\n 1. (\\<And>Y.\n        feasible_allocation Y \\<E> \\<and>\n        (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n        (\\<exists>i\\<in>agents.\n            U[i] (\\<X> i) < U[i] (Y i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  feasible_allocation Y \\<E> \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (Y i))\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have is_feasible : \"feasible_allocation Y \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible_allocation Y \\<E>", "using xprime_pareto"], ["proof (prove)\nusing this:\n  feasible_allocation Y \\<E> \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (Y i))\n\ngoal (1 subgoal):\n 1. feasible_allocation Y \\<E>", "by blast"], ["proof (state)\nthis:\n  feasible_allocation Y \\<E>\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have all_great_eq_value : \"\\<forall>i \\<in> agents. Price \\<bullet> (Y i) \\<ge> Price \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "assume \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "show \"Price \\<bullet> (Y i) \\<ge> Price \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "have x_in_agmx : \"(\\<X> i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value Price) consumption_set (Price \\<bullet> \\<E>[i]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) Price) consumption_set\n             (Price \\<bullet> \\<E>[i]))", "by (meson \\<open>i \\<in> agents\\<close> comp_equilib_endow_def equilibrium)"], ["proof (state)\nthis:\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) Price) consumption_set\n           (Price \\<bullet> \\<E>[i]))\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "have \"( U[i]) (\\<X> i) - U[i] (Y i) \\<le> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U[i] (\\<X> i) - U[i] (Y i) \\<le> 0", "using \\<open>i \\<in> agents\\<close> xprime_pareto"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  feasible_allocation Y \\<E> \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (Y i))\n\ngoal (1 subgoal):\n 1. U[i] (\\<X> i) - U[i] (Y i) \\<le> 0", "by auto"], ["proof (state)\nthis:\n  U[i] (\\<X> i) - U[i] (Y i) \\<le> 0\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "hence \"Price \\<bullet> (\\<X> i) - Price \\<bullet> (Y i) \\<le> 0\""], ["proof (prove)\nusing this:\n  U[i] (\\<X> i) - U[i] (Y i) \\<le> 0\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i - Price \\<bullet> Y i \\<le> 0", "by (metis \\<open>i \\<in> agents\\<close> argmax_entire_budget diff_le_0_iff_le x_in_agmx\n            inner_commute lns same_util_is_equal_or_more_expensive)"], ["proof (state)\nthis:\n  Price \\<bullet> \\<X> i - Price \\<bullet> Y i \\<le> 0\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> \\<X> i - Price \\<bullet> Y i \\<le> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  Price \\<bullet> \\<X> i - Price \\<bullet> Y i \\<le> 0\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i", "by auto"], ["proof (state)\nthis:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have ex_greater_value : \"\\<exists>i \\<in> agents. Price \\<bullet> (Y i) > Price \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>agents. Price \\<bullet> \\<X> i < Price \\<bullet> Y i", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> Y i) \\<Longrightarrow>\n    False", "assume a1 : \"\\<not>(\\<exists>i \\<in> agents. Price \\<bullet> (Y i) > Price \\<bullet> (\\<X> i))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<in>agents.\n             Price \\<bullet> \\<X> i < Price \\<bullet> Y i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> Y i) \\<Longrightarrow>\n    False", "obtain i where\n      obt_witness : \"i \\<in> agents\" \"U[i] (Y i) > ( U[i]) (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> agents; U[i] (\\<X> i) < U[i] (Y i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using xprime_pareto"], ["proof (prove)\nusing this:\n  feasible_allocation Y \\<E> \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (Y i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (Y i))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> agents; U[i] (\\<X> i) < U[i] (Y i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> agents\n  U[i] (\\<X> i) < U[i] (Y i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> Y i) \\<Longrightarrow>\n    False", "have \"Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "have \"Price \\<bullet> Y i > Price \\<bullet> \\<E> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<E>[i] < Price \\<bullet> Y i", "by (metis pref_more_expensive comp_equilib_endow_def\n            equilibrium inner_commute obt_witness(1) obt_witness(2))"], ["proof (state)\nthis:\n  Price \\<bullet> \\<E>[i] < Price \\<bullet> Y i\n\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "have \"Price \\<bullet> \\<E> i = Price \\<bullet> \\<X> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i", "using equilibrium lns obt_witness(1) walras_law_per_agent"], ["proof (prove)\nusing this:\n  comp_equilib_endow Price \\<X> \\<E>\n  ?i1 \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i1]\n  i \\<in> agents\n  \\<lbrakk>\\<And>i.\n              i \\<in> agents \\<Longrightarrow>\n              local_nonsatiation consumption_set Pr[i];\n   comp_equilib_endow ?P ?X \\<E>\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i\\<in>agents.\n                       ?P \\<bullet> ?X i = ?P \\<bullet> \\<E>[i]\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i", "by auto"], ["proof (state)\nthis:\n  Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i", "show ?thesis"], ["proof (prove)\nusing this:\n  Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "using \\<open>Price \\<bullet> \\<E> i < Price \\<bullet> Y i\\<close>"], ["proof (prove)\nusing this:\n  Price \\<bullet> \\<E>[i] = Price \\<bullet> \\<X> i\n  Price \\<bullet> \\<E>[i] < Price \\<bullet> Y i\n\ngoal (1 subgoal):\n 1. Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "by linarith"], ["proof (state)\nthis:\n  Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> Y i) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i", "show False"], ["proof (prove)\nusing this:\n  Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. False", "using a1 all_great_eq_value obt_witness(1)"], ["proof (prove)\nusing this:\n  Price \\<bullet> Y i \\<noteq> Price \\<bullet> \\<X> i\n  \\<not> (\\<exists>i\\<in>agents.\n             Price \\<bullet> \\<X> i < Price \\<bullet> Y i)\n  \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> Y i\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>agents. Price \\<bullet> \\<X> i < Price \\<bullet> Y i\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have dominating_more_exp : \"Price \\<bullet> (\\<Sum>i\\<in>agents. Y i) > Price \\<bullet> (\\<Sum>i\\<in>agents. \\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "have mp_rule : \"(\\<Sum>i\\<in>agents. Price \\<bullet> Y i) > (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i) \\<Longrightarrow> ?thesis\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n    < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i) \\<Longrightarrow>\n    Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "by (simp add: inner_sum_right)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i) \\<Longrightarrow>\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "have \"(\\<Sum>i\\<in>agents. Price \\<bullet> Y i) > (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n    < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i)", "by (simp add: all_great_eq_value finite_agents ex_greater_value sum_strict_mono_ex1)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i)\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "thus \"Price \\<bullet> (\\<Sum>i\\<in>agents. Y i) > Price \\<bullet> (\\<Sum>i\\<in>agents. \\<X> i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i)\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "using mp_rule"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i)\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> Y i) \\<Longrightarrow>\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents", "by blast"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have equili_walras_law : \"Price \\<bullet> (\\<Sum>i\\<in>agents. \\<X> i) = Price \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents = Price \\<bullet> sum \\<E> agents", "by (metis (mono_tags) eq_iff_diff_eq_0 equilibrium\n        inner_sum_right lns walras_law)"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents = Price \\<bullet> sum \\<E> agents\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "have dominating_feasible : \"Price \\<bullet> (\\<Sum>i\\<in>agents. \\<X> i) \\<ge> Price \\<bullet> (\\<Sum>i\\<in>agents. Y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum Y agents \\<le> Price \\<bullet> sum \\<X> agents", "by (metis atLeastAtMost_iff dual_order.order_iff_strict equili_walras_law\n        feasible_allocation_def inner_commute interval_inner_leI(1) is_feasible price_g_zero)"], ["proof (state)\nthis:\n  Price \\<bullet> sum Y agents \\<le> Price \\<bullet> sum \\<X> agents\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal_endow \\<X> \\<E> \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using dominating_more_exp equili_walras_law dominating_feasible"], ["proof (prove)\nusing this:\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum Y agents\n  Price \\<bullet> sum \\<X> agents = Price \\<bullet> sum \\<E> agents\n  Price \\<bullet> sum Y agents \\<le> Price \\<bullet> sum \\<X> agents\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Monotone preferences can be used instead of local non-satiation.\n       Many textbooks etc. do not introduce the concept of\n       local non-satiation and use monotonicity instead. \\<close>"], ["", "corollary first_welfare_exch_thm_monot:\n  assumes \"\\<forall>M \\<in> carrier. (\\<forall>x > M. x \\<in> carrier)\"\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> monotone_preference consumption_set Pr[i]\"\n  and price_cond: \"Price > 0\"\n  assumes \"comp_equilib_endow Price \\<X> \\<E>\"\n  shows \"pareto_optimal_endow \\<X> \\<E>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal_endow \\<X> \\<E>", "by (meson assms exchange_economy.consumption_set_member\n      first_welfare_theorem_exchange exchange_economy_axioms unbounded_above_mono_imp_lns)"], ["", "end"], ["", "end"], ["", "end"]]}