{"file_name": "/home/qj213/afp-2021-10-22/thys/First_Welfare_Theorem/Microeconomics/Private_Ownership_Economy.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/First_Welfare_Theorem", "problem_names": ["lemma all_larger_zero_in_csset: \"\\<forall>x. x \\<in> consumption_set\"", "lemma competitive_equilibriumD [dest]:\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"feasible X Y \\<and>\n         (\\<forall>j \\<in> firms. (Y j) \\<in> profit_maximisation P (production_sets j)) \\<and>\n         (\\<forall>i \\<in> agents. (X i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)))\"", "lemma compet_max_profit:\n  assumes \"j \\<in> firms\"\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"Y j \\<in> profit_maximisation P (production_sets j)\"", "lemma pareto_optimalI[intro]:\n  assumes \"feasible X Y\"\n    and \"\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X\"\n  shows \"pareto_optimal X Y\"", "lemma pareto_optimalD[dest]:\n  assumes \"pareto_optimal X Y\"\n  shows \"feasible X Y\" and \"\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X\"", "lemma util_fun_def_holds: \"i \\<in> agents \\<Longrightarrow> x \\<succeq>[Pr[i]] y \\<longleftrightarrow> U[i] x \\<ge> U[i] y\"", "lemma base_pref_is_ord_eucl_rpr: \"i \\<in> agents \\<Longrightarrow> rational_preference consumption_set Pr[i]\"", "lemma prof_max_ge_all_in_pset:\n  assumes \"j \\<in> firms\"\n  assumes \"Y j \\<in> profit_maximisation P (production_sets j)\"\n  shows \"\\<forall>y \\<in> production_sets j. P \\<bullet> Y j \\<ge> P \\<bullet> y\"", "lemma all_prefered_are_more_expensive:\n  assumes i_agt: \"i \\<in> agents\"\n  assumes equil: \"competitive_equilibrium P \\<X> \\<Y>\"\n  assumes \"z \\<in> consumption_set\"\n  assumes \"(U i) z > (U i) (\\<X> i)\"\n  shows \"z \\<bullet> P > P \\<bullet> (\\<X> i)\"", "lemma am_utilises_entire_bgt:\n  assumes i_agts: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes argmax_sol : \"X \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  shows \"P \\<bullet> X = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\"", "lemma same_price_in_argmax :\n  assumes i_agt: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set (U[i]) (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  assumes \"y \\<in> arg_max_set (U[i]) (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  shows \"(P \\<bullet> x) = (P \\<bullet> y)\"", "lemma utility_ge_price_ge :\n  assumes agts: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes equil: \"competitive_equilibrium P X Y\"\n  assumes geq: \"U[i] z \\<ge> U[i] (X i)\"\n    and \"z \\<in> consumption_set\"\n  shows \"P \\<bullet> z \\<ge> P \\<bullet> (X i)\"", "lemma commutativity_sums_over_funs:\n  fixes X :: \"'x set\"\n  fixes Y :: \"'y set\"\n  shows \"(\\<Sum>i\\<in>X. \\<Sum>j\\<in>Y. (f i j *\\<^sub>R C \\<bullet> g j)) = (\\<Sum>j\\<in>Y.\\<Sum>i\\<in>X. (f i j *\\<^sub>R C \\<bullet> g j))\"", "lemma assoc_fun_over_sum:\n  fixes X :: \"'x set\"\n  fixes Y :: \"'y set\"\n  shows \"(\\<Sum>j\\<in>Y. \\<Sum>i\\<in>X. f i j *\\<^sub>R C \\<bullet> g j) = (\\<Sum>j\\<in>Y. (\\<Sum>i\\<in>X. f i j) *\\<^sub>R C \\<bullet> g j)\"", "lemma walras_law:\n  assumes \"\\<And>i. i\\<in>agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"(\\<forall>i \\<in> agents. (X i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)))\"\n  shows \"P \\<bullet> (\\<Sum>i\\<in>agents. (X i)) = P \\<bullet> ((\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. Y j))\"", "lemma walras_law_in_compeq:\n  assumes \"\\<And>i. i\\<in>agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"P \\<bullet> ((\\<Sum>i\\<in>agents. (X i)) - (\\<Sum>i\\<in>agents. \\<E>[i]) - (\\<Sum>j\\<in>firms. Y j)) = 0\"", "theorem first_welfare_theorem_priv_own:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and \"Price > 0\"\n  assumes \"competitive_equilibrium Price \\<X> \\<Y>\"\n  shows \"pareto_optimal \\<X> \\<Y>\"", "lemma equilibria_dom_eachother:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and \"Price > 0\"\n  assumes equil: \"competitive_equilibrium Price \\<X> \\<Y>\"\n  shows \"\\<nexists>X' Y'. competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>\""], "translations": [["", "lemma all_larger_zero_in_csset: \"\\<forall>x. x \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "using cons_set_props pre_arrow_debreu_consumption_set_def"], ["proof (prove)\nusing this:\n  pre_arrow_debreu_consumption_set consumption_set\n  pre_arrow_debreu_consumption_set ?consumption_set \\<equiv>\n  \\<forall>x. x \\<in> UNIV \\<longrightarrow> x \\<in> ?consumption_set\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> consumption_set", "by blast"], ["", "context \nbegin"], ["", "text \\<open> Calculate wealth of individual i in context of Private Ownership economy. \\<close>"], ["", "private"], ["", "abbreviation poe_wealth\n  where\n    \"poe_wealth P i Y \\<equiv> P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["", "subsection \\<open> Feasiblity \\<close>"], ["", "private"], ["", "abbreviation feasible\n  where\n    \"feasible X Y \\<equiv> feasible_private_ownership agents firms \\<E> consumption_set production_sets X Y\""], ["", "private"], ["", "abbreviation calculate_value \n  where\n    \"calculate_value P x \\<equiv> P \\<bullet> x\""], ["", "subsection \\<open> Profit maximisation \\<close>"], ["", "text \\<open> In a production economy we need to specify profit maximisation. \\<close>"], ["", "definition profit_maximisation\n  where\n    \"profit_maximisation P S = arg_max_set (\\<lambda>x. P \\<bullet> x) S\""], ["", "subsection \\<open> Competitive Equilibirium \\<close>"], ["", "text \\<open> Competitive equilibrium in context of production economy with private ownership.\n             This includes the profit maximisation condition. \\<close>"], ["", "definition competitive_equilibrium\n  where\n    \"competitive_equilibrium P X Y \\<longleftrightarrow> feasible X Y \\<and>\n    (\\<forall>j \\<in> firms. (Y j) \\<in> profit_maximisation P (production_sets j)) \\<and>\n    (\\<forall>i \\<in> agents. (X i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)))\""], ["", "lemma competitive_equilibriumD [dest]:\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"feasible X Y \\<and>\n         (\\<forall>j \\<in> firms. (Y j) \\<in> profit_maximisation P (production_sets j)) \\<and>\n         (\\<forall>i \\<in> agents. (X i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible X Y \\<and>\n    (\\<forall>j\\<in>firms.\n        Y j \\<in> profit_maximisation P (production_sets j)) \\<and>\n    (\\<forall>i\\<in>agents.\n        X i\n        \\<in> arg_max_set U[i]\n               (budget_constraint ((\\<bullet>) P) consumption_set\n                 (poe_wealth P i Y)))", "using assms"], ["proof (prove)\nusing this:\n  competitive_equilibrium P X Y\n\ngoal (1 subgoal):\n 1. feasible X Y \\<and>\n    (\\<forall>j\\<in>firms.\n        Y j \\<in> profit_maximisation P (production_sets j)) \\<and>\n    (\\<forall>i\\<in>agents.\n        X i\n        \\<in> arg_max_set U[i]\n               (budget_constraint ((\\<bullet>) P) consumption_set\n                 (poe_wealth P i Y)))", "by (simp add: competitive_equilibrium_def)"], ["", "lemma compet_max_profit:\n  assumes \"j \\<in> firms\"\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"Y j \\<in> profit_maximisation P (production_sets j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y j \\<in> profit_maximisation P (production_sets j)", "using assms(1) assms(2)"], ["proof (prove)\nusing this:\n  j \\<in> firms\n  competitive_equilibrium P X Y\n\ngoal (1 subgoal):\n 1. Y j \\<in> profit_maximisation P (production_sets j)", "by blast"], ["", "subsection \\<open> Pareto Optimality \\<close>"], ["", "definition pareto_optimal\n  where\n    \"pareto_optimal X Y \\<longleftrightarrow>\n              (feasible X Y \\<and>\n              (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X))\""], ["", "lemma pareto_optimalI[intro]:\n  assumes \"feasible X Y\"\n    and \"\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X\"\n  shows \"pareto_optimal X Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal X Y", "using pareto_optimal_def assms(1) assms(2)"], ["proof (prove)\nusing this:\n  pareto_optimal ?X ?Y =\n  (feasible ?X ?Y \\<and>\n   (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto ?X))\n  feasible X Y\n  \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X\n\ngoal (1 subgoal):\n 1. pareto_optimal X Y", "by blast"], ["", "lemma pareto_optimalD[dest]:\n  assumes \"pareto_optimal X Y\"\n  shows \"feasible X Y\" and \"\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible X Y &&&\n    \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X", "using pareto_optimal_def assms"], ["proof (prove)\nusing this:\n  pareto_optimal ?X ?Y =\n  (feasible ?X ?Y \\<and>\n   (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto ?X))\n  pareto_optimal X Y\n\ngoal (1 subgoal):\n 1. feasible X Y &&&\n    \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto X", "by auto"], ["", "lemma util_fun_def_holds: \"i \\<in> agents \\<Longrightarrow> x \\<succeq>[Pr[i]] y \\<longleftrightarrow> U[i] x \\<ge> U[i] y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    x \\<succeq>[Pr[i]] y = (U[i] y \\<le> U[i] x)", "by (meson agent_props all_larger_zero_in_csset eucl_ordinal_utility_def ordinal_utility_def)"], ["", "lemma base_pref_is_ord_eucl_rpr: \"i \\<in> agents \\<Longrightarrow> rational_preference consumption_set Pr[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    rational_preference consumption_set Pr[i]", "using agent_props ord_eucl_utility_imp_rpr real_vector_rpr.have_rpr"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  eucl_ordinal_utility consumption_set Pr[?i] U[?i]\n  eucl_ordinal_utility ?s ?rel ?u \\<longrightarrow> real_vector_rpr ?s ?rel\n  real_vector_rpr ?carrier ?relation \\<Longrightarrow>\n  rational_preference ?carrier ?relation\n\ngoal (1 subgoal):\n 1. i \\<in> agents \\<Longrightarrow>\n    rational_preference consumption_set Pr[i]", "by blast"], ["", "lemma prof_max_ge_all_in_pset:\n  assumes \"j \\<in> firms\"\n  assumes \"Y j \\<in> profit_maximisation P (production_sets j)\"\n  shows \"\\<forall>y \\<in> production_sets j. P \\<bullet> Y j \\<ge> P \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>production_sets j. P \\<bullet> y \\<le> P \\<bullet> Y j", "using all_leq assms(2) profit_maximisation_def"], ["proof (prove)\nusing this:\n  ?x \\<in> arg_max_set ?f ?S \\<Longrightarrow>\n  \\<forall>y\\<in>?S. ?f y \\<le> ?f ?x\n  Y j \\<in> profit_maximisation P (production_sets j)\n  profit_maximisation ?P ?S = arg_max_set ((\\<bullet>) ?P) ?S\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>production_sets j. P \\<bullet> y \\<le> P \\<bullet> Y j", "by fastforce"], ["", "subsection \\<open> Lemmas for final result \\<close>"], ["", "text \\<open> Strictly preferred bundles are strictly more expensive. \\<close>"], ["", "lemma all_prefered_are_more_expensive:\n  assumes i_agt: \"i \\<in> agents\"\n  assumes equil: \"competitive_equilibrium P \\<X> \\<Y>\"\n  assumes \"z \\<in> consumption_set\"\n  assumes \"(U i) z > (U i) (\\<X> i)\"\n  shows \"z \\<bullet> P > P \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> \\<X> i < z \\<bullet> P", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "assume neg_as :  \"\\<not>(z \\<bullet> P > P \\<bullet> (\\<X> i))\""], ["proof (state)\nthis:\n  \\<not> P \\<bullet> \\<X> i < z \\<bullet> P\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "have xp_leq : \"z \\<bullet> P \\<le> P \\<bullet>  (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<bullet> P \\<le> P \\<bullet> \\<X> i", "using \\<open>\\<not>z \\<bullet> P > P \\<bullet> (\\<X> i)\\<close>"], ["proof (prove)\nusing this:\n  \\<not> P \\<bullet> \\<X> i < z \\<bullet> P\n\ngoal (1 subgoal):\n 1. z \\<bullet> P \\<le> P \\<bullet> \\<X> i", "by auto"], ["proof (state)\nthis:\n  z \\<bullet> P \\<le> P \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "have x_in_argmax: \"(\\<X> i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>))", "using equil i_agt"], ["proof (prove)\nusing this:\n  competitive_equilibrium P \\<X> \\<Y>\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>))", "by blast"], ["proof (state)\nthis:\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>))\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "hence x_in: \"\\<X> i \\<in> (budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>))\""], ["proof (prove)\nusing this:\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>))\n\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)", "using argmax_sol_in_s [of \"(\\<X> i)\" \"U[i]\" \"budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>)\"]"], ["proof (prove)\nusing this:\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>))\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)) \\<Longrightarrow>\n  \\<X> i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n         (poe_wealth P i \\<Y>)\n\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)", "by blast"], ["proof (state)\nthis:\n  \\<X> i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n         (poe_wealth P i \\<Y>)\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "hence z_in_budget: \"z \\<in> (budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>))\""], ["proof (prove)\nusing this:\n  \\<X> i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n         (poe_wealth P i \\<Y>)\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<Longrightarrow>\n    z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "have z_leq_endow: \"P \\<bullet> z \\<le> P \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> z \\<le> P \\<bullet> \\<X> i", "by (metis xp_leq inner_commute)"], ["proof (state)\nthis:\n  P \\<bullet> z \\<le> P \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<Longrightarrow>\n    z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "have z_in_cons: \"z \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> consumption_set", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  competitive_equilibrium P \\<X> \\<Y>\n  z \\<in> consumption_set\n  U[i] (\\<X> i) < U[i] z\n\ngoal (1 subgoal):\n 1. z \\<in> consumption_set", "by auto"], ["proof (state)\nthis:\n  z \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. \\<X> i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<Longrightarrow>\n    z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "then"], ["proof (chain)\npicking this:\n  z \\<in> consumption_set", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "using x_in budget_constraint_def z_leq_endow"], ["proof (prove)\nusing this:\n  z \\<in> consumption_set\n  \\<X> i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n         (poe_wealth P i \\<Y>)\n  budget_constraint ?f ?S ?W = {x \\<in> ?S. ?f x \\<le> ?W}\n  P \\<bullet> z \\<le> P \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>z \\<in> consumption_set;\n     \\<X> i\n     \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n            (poe_wealth P i \\<Y>);\n     \\<And>f S W. budget_constraint f S W = {x \\<in> S. f x \\<le> W};\n     P \\<bullet> z \\<le> P \\<bullet> \\<X> i\\<rbrakk>\n    \\<Longrightarrow> z \\<in> budget_constraint ((\\<bullet>) P)\n                               consumption_set (poe_wealth P i \\<Y>)", "have \"\\<forall>r.  P \\<bullet> \\<X> i \\<le> r \\<longrightarrow> P \\<bullet> z \\<le> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r", "using z_leq_endow"], ["proof (prove)\nusing this:\n  P \\<bullet> z \\<le> P \\<bullet> \\<X> i\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r", "by linarith"], ["proof (state)\nthis:\n  \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>z \\<in> consumption_set;\n     \\<X> i\n     \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n            (poe_wealth P i \\<Y>);\n     \\<And>f S W. budget_constraint f S W = {x \\<in> S. f x \\<le> W};\n     P \\<bullet> z \\<le> P \\<bullet> \\<X> i\\<rbrakk>\n    \\<Longrightarrow> z \\<in> budget_constraint ((\\<bullet>) P)\n                               consumption_set (poe_wealth P i \\<Y>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "using budget_constraint_def x_in z_in_cons"], ["proof (prove)\nusing this:\n  \\<forall>r\\<ge>P \\<bullet> \\<X> i. P \\<bullet> z \\<le> r\n  budget_constraint ?f ?S ?W = {x \\<in> ?S. ?f x \\<le> ?W}\n  \\<X> i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n         (poe_wealth P i \\<Y>)\n  z \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>)", "by (simp add: budget_constraint_def)"], ["proof (state)\nthis:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "have nex_prop: \"\\<nexists>e. e \\<in>  (budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>)) \\<and>\n        U[i] e > U[i] (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>e.\n       e \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i \\<Y>) \\<and>\n       U[i] (\\<X> i) < U[i] e", "using no_better_in_s[of \"\\<X> i\" \"U[i]\"\n        \"budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>)\"] x_in_argmax"], ["proof (prove)\nusing this:\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)) \\<Longrightarrow>\n  \\<nexists>y.\n     y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i \\<Y>) \\<and>\n     U[i] (\\<X> i) < U[i] y\n  \\<X> i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>))\n\ngoal (1 subgoal):\n 1. \\<nexists>e.\n       e \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i \\<Y>) \\<and>\n       U[i] (\\<X> i) < U[i] e", "by blast"], ["proof (state)\nthis:\n  \\<nexists>e.\n     e \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i \\<Y>) \\<and>\n     U[i] (\\<X> i) < U[i] e\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "have \"z \\<in> budget_constraint (calculate_value P) consumption_set (poe_wealth P i \\<Y>) \\<and> U[i] z > U[i] (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>) \\<and>\n    U[i] (\\<X> i) < U[i] z", "using assms z_in_budget"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  competitive_equilibrium P \\<X> \\<Y>\n  z \\<in> consumption_set\n  U[i] (\\<X> i) < U[i] z\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>)\n\ngoal (1 subgoal):\n 1. z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i \\<Y>) \\<and>\n    U[i] (\\<X> i) < U[i] z", "by blast"], ["proof (state)\nthis:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<and>\n  U[i] (\\<X> i) < U[i] z\n\ngoal (1 subgoal):\n 1. \\<not> P \\<bullet> \\<X> i < z \\<bullet> P \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<and>\n  U[i] (\\<X> i) < U[i] z\n\ngoal (1 subgoal):\n 1. False", "using nex_prop"], ["proof (prove)\nusing this:\n  z \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i \\<Y>) \\<and>\n  U[i] (\\<X> i) < U[i] z\n  \\<nexists>e.\n     e \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i \\<Y>) \\<and>\n     U[i] (\\<X> i) < U[i] e\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Given local non-satiation, argmax will use the entire budget. \\<close>"], ["", "lemma am_utilises_entire_bgt:\n  assumes i_agts: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes argmax_sol : \"X \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  shows \"P \\<bullet> X = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "let ?wlt = \"P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "let ?bc = \"budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "have \"X \\<in> budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "using argmax_sol_in_s [of \"X\" \"U[i]\" ?bc] argmax_sol"], ["proof (prove)\nusing this:\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)) \\<Longrightarrow>\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "by blast"], ["proof (state)\nthis:\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "hence is_leq: \"X \\<bullet> P \\<le> (poe_wealth P i Y)\""], ["proof (prove)\nusing this:\n  X \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. X \\<bullet> P \\<le> poe_wealth P i Y", "by (metis (mono_tags, lifting) budget_constraint_def\n        inner_commute mem_Collect_eq)"], ["proof (state)\nthis:\n  X \\<bullet> P \\<le> poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "have not_less: \"\\<not>X \\<bullet> P < (poe_wealth P i Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> X \\<bullet> P < poe_wealth P i Y", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "assume neg: \"X \\<bullet> P < (poe_wealth P i Y)\""], ["proof (state)\nthis:\n  X \\<bullet> P < poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "have bgt_leq: \"\\<forall>x\\<in> ?bc. U[i] X \\<ge> U[i] x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                    (poe_wealth P i Y).\n       U[i] x \\<le> U[i] X", "using leq_all_in_sol [of \"X\" \"U[i]\" \"?bc\"]\n        all_leq [of \"X\" \"U[i]\" \"?bc\"]\n        argmax_sol"], ["proof (prove)\nusing this:\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)) \\<Longrightarrow>\n  \\<forall>y\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y).\n     U[i] X \\<le> U[i] y \\<longrightarrow>\n     y \\<in> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y))\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)) \\<Longrightarrow>\n  \\<forall>y\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y).\n     U[i] y \\<le> U[i] X\n  X \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                    (poe_wealth P i Y).\n       U[i] x \\<le> U[i] X", "by blast"], ["proof (state)\nthis:\n  \\<forall>x\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y).\n     U[i] x \\<le> U[i] X\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "define s_low where\n      \"s_low = {x . P \\<bullet> x < ?wlt}\""], ["proof (state)\nthis:\n  s_low = {x. P \\<bullet> x < poe_wealth P i Y}\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "have \"\\<exists>e > 0. ball X e \\<subseteq> s_low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "have x_in_budget: \"P \\<bullet> X < ?wlt\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X < poe_wealth P i Y", "by (metis inner_commute neg)"], ["proof (state)\nthis:\n  P \\<bullet> X < poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "have s_low_open: \"open s_low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. open s_low", "using open_halfspace_lt s_low_def"], ["proof (prove)\nusing this:\n  open {x. ?a \\<bullet> x < ?b}\n  s_low = {x. P \\<bullet> x < poe_wealth P i Y}\n\ngoal (1 subgoal):\n 1. open s_low", "by blast"], ["proof (state)\nthis:\n  open s_low\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "then"], ["proof (chain)\npicking this:\n  open s_low", "show ?thesis"], ["proof (prove)\nusing this:\n  open s_low\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "using s_low_open open_contains_ball_eq\n          s_low_def x_in_budget"], ["proof (prove)\nusing this:\n  open s_low\n  open s_low\n  open ?S \\<Longrightarrow>\n  (?x \\<in> ?S) = (\\<exists>e>0. ball ?x e \\<subseteq> ?S)\n  s_low = {x. P \\<bullet> x < poe_wealth P i Y}\n  P \\<bullet> X < poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. \\<exists>e>0. ball X e \\<subseteq> s_low", "by blast"], ["proof (state)\nthis:\n  \\<exists>e>0. ball X e \\<subseteq> s_low\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>e>0. ball X e \\<subseteq> s_low\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "obtain e where\n      \"e > 0\" and e: \"ball X e \\<subseteq> s_low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; ball X e \\<subseteq> s_low\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>\\<exists>e>0. ball X e \\<subseteq> s_low\\<close>"], ["proof (prove)\nusing this:\n  \\<exists>e>0. ball X e \\<subseteq> s_low\n\ngoal (1 subgoal):\n 1. (\\<And>e.\n        \\<lbrakk>0 < e; ball X e \\<subseteq> s_low\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < e\n  ball X e \\<subseteq> s_low\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "obtain y where\n      y_props: \"y \\<in> ball X e\" \"y \\<succ>[Pref i] X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> ball X e;\n         y \\<succeq>[Pr[i]] X \\<and> (X, y) \\<notin> Pr[i]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>0 < e\\<close> all_larger_zero_in_csset lns"], ["proof (prove)\nusing this:\n  0 < e\n  \\<forall>x. x \\<in> consumption_set\n  local_nonsatiation consumption_set Pr[i]\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> ball X e;\n         y \\<succeq>[Pr[i]] X \\<and> (X, y) \\<notin> Pr[i]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  y \\<in> ball X e\n  y \\<succeq>[Pr[i]] X \\<and> (X, y) \\<notin> Pr[i]\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "have \"y \\<in> budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "have \"y \\<in> s_low\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> s_low", "using \\<open>y \\<in> ball X e\\<close> e"], ["proof (prove)\nusing this:\n  y \\<in> ball X e\n  ball X e \\<subseteq> s_low\n\ngoal (1 subgoal):\n 1. y \\<in> s_low", "by blast"], ["proof (state)\nthis:\n  y \\<in> s_low\n\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "then"], ["proof (chain)\npicking this:\n  y \\<in> s_low", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> s_low\n\ngoal (1 subgoal):\n 1. y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y)", "by (simp add: s_low_def all_larger_zero_in_csset\n            budget_constraint_def)"], ["proof (state)\nthis:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. X \\<bullet> P < poe_wealth P i Y \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)", "show False"], ["proof (prove)\nusing this:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. False", "using bgt_leq i_agts y_props(2) util_fun_def_holds"], ["proof (prove)\nusing this:\n  y \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)\n  \\<forall>x\\<in>budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y).\n     U[i] x \\<le> U[i] X\n  i \\<in> agents\n  y \\<succeq>[Pr[i]] X \\<and> (X, y) \\<notin> Pr[i]\n  ?i \\<in> agents \\<Longrightarrow>\n  ?x \\<succeq>[Pr[?i]] ?y = (U[?i] ?y \\<le> U[?i] ?x)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> X \\<bullet> P < poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "then"], ["proof (chain)\npicking this:\n  \\<not> X \\<bullet> P < poe_wealth P i Y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> X \\<bullet> P < poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> X = poe_wealth P i Y", "by (metis inner_commute is_leq\n        less_eq_real_def)"], ["proof (state)\nthis:\n  P \\<bullet> X = poe_wealth P i Y\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary x_equil_x_ext_budget:\n  assumes i_agt: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes equilibrium : \"competitive_equilibrium P X Y\"\n  shows \"P \\<bullet> X i = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "have \"X i \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "using equilibrium i_agt"], ["proof (prove)\nusing this:\n  competitive_equilibrium P X Y\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "by blast"], ["proof (state)\nthis:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "then"], ["proof (chain)\npicking this:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))", "show ?thesis"], ["proof (prove)\nusing this:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "using am_utilises_entire_bgt i_agt lns"], ["proof (prove)\nusing this:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P ?i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = poe_wealth ?P ?i ?Y\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "by blast"], ["proof (state)\nthis:\n  P \\<bullet> X i = poe_wealth P i Y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma same_price_in_argmax :\n  assumes i_agt: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes \"x \\<in> arg_max_set (U[i]) (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  assumes \"y \\<in> arg_max_set (U[i]) (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\"\n  shows \"(P \\<bullet> x) = (P \\<bullet> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> x = P \\<bullet> y", "using am_utilises_entire_bgt assms lns"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P ?i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = poe_wealth ?P ?i ?Y\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  x \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n  y \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n  local_nonsatiation consumption_set Pr[i]\n\ngoal (1 subgoal):\n 1. P \\<bullet> x = P \\<bullet> y", "by (metis (no_types) am_utilises_entire_bgt assms(3) assms(4) i_agt lns)"], ["", "text \\<open> Greater or equal utility implies greater or equal value. \\<close>"], ["", "lemma utility_ge_price_ge :\n  assumes agts: \"i \\<in> agents\"\n  assumes lns : \"local_nonsatiation consumption_set Pr[i]\"\n  assumes equil: \"competitive_equilibrium P X Y\"\n  assumes geq: \"U[i] z \\<ge> U[i] (X i)\"\n    and \"z \\<in> consumption_set\"\n  shows \"P \\<bullet> z \\<ge> P \\<bullet> (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "let ?bc = \"(budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y))\""], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "have not_in : \"z \\<notin> arg_max_set (U[i]) ?bc \\<Longrightarrow>\n    P \\<bullet> z > (P \\<bullet> \\<E>[i]) + (\\<Sum>j\\<in>(firms). (\\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "assume \"z \\<notin> arg_max_set (U[i]) ?bc\""], ["proof (state)\nthis:\n  z \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "moreover"], ["proof (state)\nthis:\n  z \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "have \"X i \\<in> arg_max_set (U[i]) ?bc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "using competitive_equilibriumD assms pareto_optimal_def"], ["proof (prove)\nusing this:\n  competitive_equilibrium ?P ?X ?Y \\<Longrightarrow>\n  feasible ?X ?Y \\<and>\n  (\\<forall>j\\<in>firms.\n      ?Y j \\<in> profit_maximisation ?P (production_sets j)) \\<and>\n  (\\<forall>i\\<in>agents.\n      ?X i\n      \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P i ?Y)))\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  competitive_equilibrium P X Y\n  U[i] (X i) \\<le> U[i] z\n  z \\<in> consumption_set\n  pareto_optimal ?X ?Y =\n  (feasible ?X ?Y \\<and>\n   (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto ?X))\n\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "by auto"], ["proof (state)\nthis:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "ultimately"], ["proof (chain)\npicking this:\n  z \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y))\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))", "have \"z \\<notin> budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)\""], ["proof (prove)\nusing this:\n  z \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y))\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. z \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y)", "by (meson  geq leq_all_in_sol)"], ["proof (state)\nthis:\n  z \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. z \\<notin> arg_max_set U[i]\n                (budget_constraint ((\\<bullet>) P) consumption_set\n                  (poe_wealth P i Y)) \\<Longrightarrow>\n    poe_wealth P i Y < P \\<bullet> z", "then"], ["proof (chain)\npicking this:\n  z \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i Y)", "show ?thesis"], ["proof (prove)\nusing this:\n  z \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. poe_wealth P i Y < P \\<bullet> z", "using budget_constraint_def assms"], ["proof (prove)\nusing this:\n  z \\<notin> budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i Y)\n  budget_constraint ?f ?S ?W = {x \\<in> ?S. ?f x \\<le> ?W}\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  competitive_equilibrium P X Y\n  U[i] (X i) \\<le> U[i] z\n  z \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. poe_wealth P i Y < P \\<bullet> z", "by (simp add: budget_constraint_def)"], ["proof (state)\nthis:\n  poe_wealth P i Y < P \\<bullet> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<notin> arg_max_set U[i]\n              (budget_constraint ((\\<bullet>) P) consumption_set\n                (poe_wealth P i Y)) \\<Longrightarrow>\n  poe_wealth P i Y < P \\<bullet> z\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "have x_in_argmax: \"(X i) \\<in> arg_max_set U[i] ?bc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "using agts equil"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  competitive_equilibrium P X Y\n\ngoal (1 subgoal):\n 1. X i\n    \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))", "by blast"], ["proof (state)\nthis:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "hence x_in_budget: \"(X i) \\<in> ?bc\""], ["proof (prove)\nusing this:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. X i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)", "using argmax_sol_in_s [of \"(X i)\" \"U[i]\" \"?bc\"]"], ["proof (prove)\nusing this:\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)) \\<Longrightarrow>\n  X i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. X i\n    \\<in> budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y)", "by blast"], ["proof (state)\nthis:\n  X i\n  \\<in> budget_constraint ((\\<bullet>) P) consumption_set (poe_wealth P i Y)\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "have \"U[i] z = U[i] (X i) \\<Longrightarrow> P \\<bullet> z \\<ge> P \\<bullet> (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow>\n    P \\<bullet> X i \\<le> P \\<bullet> z", "proof(rule contrapos_pp)"], ["proof (state)\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "assume con_neg: \"\\<not> P \\<bullet> z \\<ge> P \\<bullet> (X i)\""], ["proof (state)\nthis:\n  \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  \\<not> P \\<bullet> X i \\<le> P \\<bullet> z", "have \"P \\<bullet> z < P \\<bullet> (X i)\""], ["proof (prove)\nusing this:\n  \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal (1 subgoal):\n 1. P \\<bullet> z < P \\<bullet> X i", "by linarith"], ["proof (state)\nthis:\n  P \\<bullet> z < P \\<bullet> X i\n\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "then"], ["proof (chain)\npicking this:\n  P \\<bullet> z < P \\<bullet> X i", "have z_in_argmax: \"z \\<in> arg_max_set U[i] ?bc\""], ["proof (prove)\nusing this:\n  P \\<bullet> z < P \\<bullet> X i\n\ngoal (1 subgoal):\n 1. z \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) P) consumption_set\n               (poe_wealth P i Y))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> z < P \\<bullet> X i \\<Longrightarrow>\n    z \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) P) consumption_set\n               (poe_wealth P i Y))", "have \"P \\<bullet>(X i) = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "using agts am_utilises_entire_bgt lns x_in_argmax"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P ?i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = poe_wealth ?P ?i ?Y\n  local_nonsatiation consumption_set Pr[i]\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "by blast"], ["proof (state)\nthis:\n  P \\<bullet> X i = poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> z < P \\<bullet> X i \\<Longrightarrow>\n    z \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) P) consumption_set\n               (poe_wealth P i Y))", "then"], ["proof (chain)\npicking this:\n  P \\<bullet> X i = poe_wealth P i Y", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<bullet> X i = poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. z \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) P) consumption_set\n               (poe_wealth P i Y))", "by (metis (no_types) con_neg less_eq_real_def not_in)"], ["proof (state)\nthis:\n  z \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z \\<in> arg_max_set U[i]\n           (budget_constraint ((\\<bullet>) P) consumption_set\n             (poe_wealth P i Y))\n\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "have z_budget_utilisation: \"P \\<bullet> z = P \\<bullet> (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> z = P \\<bullet> X i", "by (metis (no_types) agts am_utilises_entire_bgt lns x_in_argmax z_in_argmax)"], ["proof (state)\nthis:\n  P \\<bullet> z = P \\<bullet> X i\n\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "have \"P \\<bullet> (X i) = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "using agts am_utilises_entire_bgt lns x_in_argmax"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P ?i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = poe_wealth ?P ?i ?Y\n  local_nonsatiation consumption_set Pr[i]\n  X i\n  \\<in> arg_max_set U[i]\n         (budget_constraint ((\\<bullet>) P) consumption_set\n           (poe_wealth P i Y))\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i = poe_wealth P i Y", "by blast"], ["proof (state)\nthis:\n  P \\<bullet> X i = poe_wealth P i Y\n\ngoal (2 subgoals):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> ?Q\n 2. \\<lbrakk>U[i] z = U[i] (X i);\n     \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\\<rbrakk>\n    \\<Longrightarrow> \\<not> ?Q", "show \"\\<not> U[i] z = U[i] (X i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U[i] z \\<noteq> U[i] (X i)", "using z_budget_utilisation con_neg"], ["proof (prove)\nusing this:\n  P \\<bullet> z = P \\<bullet> X i\n  \\<not> P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal (1 subgoal):\n 1. U[i] z \\<noteq> U[i] (X i)", "by linarith"], ["proof (state)\nthis:\n  U[i] z \\<noteq> U[i] (X i)\n\ngoal (1 subgoal):\n 1. U[i] z = U[i] (X i) \\<Longrightarrow> U[i] z = U[i] (X i)", "qed"], ["proof (state)\nthis:\n  U[i] z = U[i] (X i) \\<Longrightarrow> P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "thus ?thesis"], ["proof (prove)\nusing this:\n  U[i] z = U[i] (X i) \\<Longrightarrow> P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal (1 subgoal):\n 1. P \\<bullet> X i \\<le> P \\<bullet> z", "by (metis (no_types) agts am_utilises_entire_bgt eq_iff eucl_less_le_not_le lns not_in x_in_argmax)"], ["proof (state)\nthis:\n  P \\<bullet> X i \\<le> P \\<bullet> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma commutativity_sums_over_funs:\n  fixes X :: \"'x set\"\n  fixes Y :: \"'y set\"\n  shows \"(\\<Sum>i\\<in>X. \\<Sum>j\\<in>Y. (f i j *\\<^sub>R C \\<bullet> g j)) = (\\<Sum>j\\<in>Y.\\<Sum>i\\<in>X. (f i j *\\<^sub>R C \\<bullet> g j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>X. \\<Sum>j\\<in>Y. f i j *\\<^sub>R C \\<bullet> g j) =\n    (\\<Sum>j\\<in>Y. \\<Sum>i\\<in>X. f i j *\\<^sub>R C \\<bullet> g j)", "using Groups_Big.comm_monoid_add_class.sum.swap"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>?A. sum (?g i) ?B) = (\\<Sum>j\\<in>?B. \\<Sum>i\\<in>?A. ?g i j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>X. \\<Sum>j\\<in>Y. f i j *\\<^sub>R C \\<bullet> g j) =\n    (\\<Sum>j\\<in>Y. \\<Sum>i\\<in>X. f i j *\\<^sub>R C \\<bullet> g j)", "by auto"], ["", "lemma assoc_fun_over_sum:\n  fixes X :: \"'x set\"\n  fixes Y :: \"'y set\"\n  shows \"(\\<Sum>j\\<in>Y. \\<Sum>i\\<in>X. f i j *\\<^sub>R C \\<bullet> g j) = (\\<Sum>j\\<in>Y. (\\<Sum>i\\<in>X. f i j) *\\<^sub>R C \\<bullet> g j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>j\\<in>Y. \\<Sum>i\\<in>X. f i j *\\<^sub>R C \\<bullet> g j) =\n    (\\<Sum>j\\<in>Y. (\\<Sum>i\\<in>X. f i j) *\\<^sub>R C \\<bullet> g j)", "by (simp add: inner_sum_left scaleR_left.sum)"], ["", "text \\<open> Walras' law in context of production economy with private ownership.\n       That is, in an equilibrium demand equals supply. \\<close>"], ["", "lemma walras_law:\n  assumes \"\\<And>i. i\\<in>agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"(\\<forall>i \\<in> agents. (X i) \\<in> arg_max_set U[i] (budget_constraint (calculate_value P) consumption_set (poe_wealth P i Y)))\"\n  shows \"P \\<bullet> (\\<Sum>i\\<in>agents. (X i)) = P \\<bullet> ((\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "have value_equal: \"P \\<bullet> (\\<Sum>i\\<in>agents. (X i)) = P \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>i\\<in>agents. \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>i\\<in>agents.\n       \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>i\\<in>agents.\n       \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))", "have all_exhaust_bgt: \"\\<forall>i\\<in>agents. P \\<bullet> (X i) = P \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (P \\<bullet> (Y j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. P \\<bullet> X i = poe_wealth P i Y", "using assms am_utilises_entire_bgt"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  \\<forall>i\\<in>agents.\n     X i\n     \\<in> arg_max_set U[i]\n            (budget_constraint ((\\<bullet>) P) consumption_set\n              (poe_wealth P i Y))\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   ?X \\<in> arg_max_set U[?i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P ?i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X = poe_wealth ?P ?i ?Y\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. P \\<bullet> X i = poe_wealth P i Y", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>agents. P \\<bullet> X i = poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>i\\<in>agents.\n       \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>agents. P \\<bullet> X i = poe_wealth P i Y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>agents. P \\<bullet> X i = poe_wealth P i Y\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>i\\<in>agents.\n       \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))", "by (simp add:all_exhaust_bgt inner_sum_right sum.distrib)"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "have eq_1: \"(\\<Sum>i\\<in>agents. \\<Sum>j\\<in>firms. (\\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)) = (\\<Sum>j\\<in>firms. \\<Sum>i\\<in>agents. (\\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents.\n       \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)", "using commutativity_sums_over_funs [of \\<Theta> P Y firms agents]"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents.\n       \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "hence eq_2: \"P \\<bullet> (\\<Sum>i\\<in>agents. X i) = P \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)", "using value_equal"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>f\\<in>firms. \\<Theta>[i,f] *\\<^sub>R (P \\<bullet> Y f))\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)", "by auto"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "also"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "have eq_3: \"...= P \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet>  Y j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)", "using assoc_fun_over_sum[of \"\\<Theta>\" P Y agents firms]"], ["proof (prove)\nusing this:\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n    P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)", "by auto"], ["proof (state)\nthis:\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "also"], ["proof (state)\nthis:\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "have eq_4: \"... = P \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>f\\<in>firms. P \\<bullet>  Y f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j) =\n    P \\<bullet> sum \\<E> agents + (\\<Sum>f\\<in>firms. P \\<bullet> Y f)", "using firms_comp_owned"], ["proof (prove)\nusing this:\n  ?j \\<in> firms \\<Longrightarrow> (\\<Sum>i\\<in>agents. \\<Theta>[i,?j]) = 1\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum \\<E> agents +\n    (\\<Sum>j\\<in>firms.\n       (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j) =\n    P \\<bullet> sum \\<E> agents + (\\<Sum>f\\<in>firms. P \\<bullet> Y f)", "by auto"], ["proof (state)\nthis:\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j) =\n  P \\<bullet> sum \\<E> agents + (\\<Sum>f\\<in>firms. P \\<bullet> Y f)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "have comp_wise_inner: \"P \\<bullet>  (\\<Sum>i\\<in>agents. X i) - (P \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i])) - (\\<Sum>f\\<in>firms. P \\<bullet> Y f) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents - P \\<bullet> sum \\<E> agents -\n    (\\<Sum>f\\<in>firms. P \\<bullet> Y f) =\n    0", "using eq_1 eq_2 eq_3 eq_4"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents.\n     \\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n  P \\<bullet> sum X agents =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j)\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     \\<Sum>i\\<in>agents. \\<Theta>[i,j] *\\<^sub>R P \\<bullet> Y j) =\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j)\n  P \\<bullet> sum \\<E> agents +\n  (\\<Sum>j\\<in>firms.\n     (\\<Sum>i\\<in>agents. \\<Theta>[i,j]) *\\<^sub>R P \\<bullet> Y j) =\n  P \\<bullet> sum \\<E> agents + (\\<Sum>f\\<in>firms. P \\<bullet> Y f)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents - P \\<bullet> sum \\<E> agents -\n    (\\<Sum>f\\<in>firms. P \\<bullet> Y f) =\n    0", "by linarith"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents - P \\<bullet> sum \\<E> agents -\n  (\\<Sum>f\\<in>firms. P \\<bullet> Y f) =\n  0\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "then"], ["proof (chain)\npicking this:\n  P \\<bullet> sum X agents - P \\<bullet> sum \\<E> agents -\n  (\\<Sum>f\\<in>firms. P \\<bullet> Y f) =\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<bullet> sum X agents - P \\<bullet> sum \\<E> agents -\n  (\\<Sum>f\\<in>firms. P \\<bullet> Y f) =\n  0\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "by (simp add: inner_right_distrib inner_sum_right)"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma walras_law_in_compeq:\n  assumes \"\\<And>i. i\\<in>agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n  assumes \"competitive_equilibrium P X Y\"\n  shows \"P \\<bullet> ((\\<Sum>i\\<in>agents. (X i)) - (\\<Sum>i\\<in>agents. \\<E>[i]) - (\\<Sum>j\\<in>firms. Y j)) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> (sum X agents - sum \\<E> agents - sum Y firms) = 0", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P \\<bullet> (sum X agents - sum \\<E> agents - sum Y firms) = 0", "have \"P \\<bullet> (\\<Sum>i\\<in>agents. (X i)) = P \\<bullet> ((\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. Y j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "using assms(1) assms(2) walras_law"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  competitive_equilibrium P X Y\n  \\<lbrakk>\\<And>i.\n              i \\<in> agents \\<Longrightarrow>\n              local_nonsatiation consumption_set Pr[i];\n   \\<forall>i\\<in>agents.\n      ?X i\n      \\<in> arg_max_set U[i]\n             (budget_constraint ((\\<bullet>) ?P) consumption_set\n               (poe_wealth ?P i ?Y))\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> sum ?X agents =\n                    ?P \\<bullet> (sum \\<E> agents + sum ?Y firms)\n\ngoal (1 subgoal):\n 1. P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "by auto"], ["proof (state)\nthis:\n  P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)\n\ngoal (1 subgoal):\n 1. P \\<bullet> (sum X agents - sum \\<E> agents - sum Y firms) = 0", "then"], ["proof (chain)\npicking this:\n  P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<bullet> sum X agents = P \\<bullet> (sum \\<E> agents + sum Y firms)\n\ngoal (1 subgoal):\n 1. P \\<bullet> (sum X agents - sum \\<E> agents - sum Y firms) = 0", "by (simp add: inner_diff_right inner_right_distrib)"], ["proof (state)\nthis:\n  P \\<bullet> (sum X agents - sum \\<E> agents - sum Y firms) = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> First Welfare Theorem \\<close>"], ["", "text \\<open> Proof of First Welfare Theorem in context of production economy with private ownership. \\<close>"], ["", "theorem first_welfare_theorem_priv_own:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and \"Price > 0\"\n  assumes \"competitive_equilibrium Price \\<X> \\<Y>\"\n  shows \"pareto_optimal \\<X> \\<Y>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal \\<X> \\<Y>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "assume neg_as: \"\\<not> pareto_optimal \\<X> \\<Y>\""], ["proof (state)\nthis:\n  \\<not> pareto_optimal \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have equili_feasible : \"feasible \\<X> \\<Y>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible \\<X> \\<Y>", "using  assms"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. feasible \\<X> \\<Y>", "by (simp add: competitive_equilibrium_def)"], ["proof (state)\nthis:\n  feasible \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "obtain X' Y' where\n    xprime_pareto: \"feasible X' Y' \\<and>\n      (\\<forall>i \\<in> agents. U[i] (X' i) \\<ge> U[i] (\\<X> i)) \\<and>\n      (\\<exists>i \\<in> agents. U[i] (X' i) > U[i] (\\<X> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>X' Y'.\n        feasible X' Y' \\<and>\n        (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n        (\\<exists>i\\<in>agents.\n            U[i] (\\<X> i) < U[i] (X' i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using equili_feasible pareto_optimal_def\n      pareto_dominating_def neg_as"], ["proof (prove)\nusing this:\n  feasible \\<X> \\<Y>\n  pareto_optimal ?X ?Y =\n  (feasible ?X ?Y \\<and>\n   (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto ?X))\n  ?X \\<succ>Pareto ?Y =\n  ((\\<forall>i\\<in>agents. U[i] (?Y i) \\<le> U[i] (?X i)) \\<and>\n   (\\<exists>i\\<in>agents. U[i] (?Y i) < U[i] (?X i)))\n  \\<not> pareto_optimal \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. (\\<And>X' Y'.\n        feasible X' Y' \\<and>\n        (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n        (\\<exists>i\\<in>agents.\n            U[i] (\\<X> i) < U[i] (X' i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  feasible X' Y' \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (X' i))\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have is_feasible: \"feasible X' Y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible X' Y'", "using xprime_pareto"], ["proof (prove)\nusing this:\n  feasible X' Y' \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (X' i))\n\ngoal (1 subgoal):\n 1. feasible X' Y'", "by blast"], ["proof (state)\nthis:\n  feasible X' Y'\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have xprime_leq_y: \"\\<forall>i \\<in> agents. (Price \\<bullet> (X' i) \\<ge>\n    (Price \\<bullet> \\<E>[i]) + (\\<Sum>j\\<in>(firms). \\<Theta>[i,j] *\\<^sub>R (Price \\<bullet> \\<Y> j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents.\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "assume as: \"i \\<in> agents\""], ["proof (state)\nthis:\n  i \\<in> agents\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "have xprime_cons: \"X' i \\<in> consumption_set\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X' i \\<in> consumption_set", "by (simp add: all_larger_zero_in_csset)"], ["proof (state)\nthis:\n  X' i \\<in> consumption_set\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "have x_leq_xprime: \"U[i] (X' i) \\<ge> U[i] (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U[i] (\\<X> i) \\<le> U[i] (X' i)", "using \\<open>i \\<in> agents\\<close> xprime_pareto"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  feasible X' Y' \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (X' i))\n\ngoal (1 subgoal):\n 1. U[i] (\\<X> i) \\<le> U[i] (X' i)", "by blast"], ["proof (state)\nthis:\n  U[i] (\\<X> i) \\<le> U[i] (X' i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "have lns_pref: \"local_nonsatiation consumption_set Pr[i]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_nonsatiation consumption_set Pr[i]", "using as assms"], ["proof (prove)\nusing this:\n  i \\<in> agents\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. local_nonsatiation consumption_set Pr[i]", "by blast"], ["proof (state)\nthis:\n  local_nonsatiation consumption_set Pr[i]\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "hence xprime_ge_x: \"Price \\<bullet> (X' i) \\<ge> Price \\<bullet> (\\<X> i)\""], ["proof (prove)\nusing this:\n  local_nonsatiation consumption_set Pr[i]\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i", "using x_leq_xprime xprime_cons as assms utility_ge_price_ge"], ["proof (prove)\nusing this:\n  local_nonsatiation consumption_set Pr[i]\n  U[i] (\\<X> i) \\<le> U[i] (X' i)\n  X' i \\<in> consumption_set\n  i \\<in> agents\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   competitive_equilibrium ?P ?X ?Y; U[?i] (?X ?i) \\<le> U[?i] ?z;\n   ?z \\<in> consumption_set\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X ?i \\<le> ?P \\<bullet> ?z\n\ngoal (1 subgoal):\n 1. Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i", "by blast"], ["proof (state)\nthis:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> agents \\<Longrightarrow>\n       poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i", "show  \"Price \\<bullet> (X' i) \\<ge> (Price \\<bullet> \\<E>[i]) + (\\<Sum>j\\<in>(firms). \\<Theta>[i,j] *\\<^sub>R (Price \\<bullet> \\<Y> j))\""], ["proof (prove)\nusing this:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i\n\ngoal (1 subgoal):\n 1. poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "using xprime_ge_x \\<open>i \\<in> agents\\<close> lns_pref assms x_equil_x_ext_budget"], ["proof (prove)\nusing this:\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i\n  Price \\<bullet> \\<X> i \\<le> Price \\<bullet> X' i\n  i \\<in> agents\n  local_nonsatiation consumption_set Pr[i]\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n  \\<lbrakk>?i \\<in> agents; local_nonsatiation consumption_set Pr[?i];\n   competitive_equilibrium ?P ?X ?Y\\<rbrakk>\n  \\<Longrightarrow> ?P \\<bullet> ?X ?i = poe_wealth ?P ?i ?Y\n\ngoal (1 subgoal):\n 1. poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i", "by fastforce"], ["proof (state)\nthis:\n  poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>agents. poe_wealth Price i \\<Y> \\<le> Price \\<bullet> X' i\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have ex_greater_value : \"\\<exists>i \\<in> agents. Price \\<bullet> (X' i) > Price \\<bullet> (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i\\<in>agents. Price \\<bullet> \\<X> i < Price \\<bullet> X' i", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> X' i) \\<Longrightarrow>\n    False", "assume cpos : \"\\<not>(\\<exists>i \\<in> agents. Price \\<bullet> (X' i) > Price \\<bullet> (\\<X> i))\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>i\\<in>agents.\n             Price \\<bullet> \\<X> i < Price \\<bullet> X' i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> X' i) \\<Longrightarrow>\n    False", "obtain i where\n      obt_witness : \"i \\<in> agents\" \"(U[i]) (X' i) > U[i] (\\<X> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> agents; U[i] (\\<X> i) < U[i] (X' i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using xprime_pareto"], ["proof (prove)\nusing this:\n  feasible X' Y' \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (X' i))\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> agents; U[i] (\\<X> i) < U[i] (X' i)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> agents\n  U[i] (\\<X> i) < U[i] (X' i)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>i\\<in>agents.\n               Price \\<bullet> \\<X> i\n               < Price \\<bullet> X' i) \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "by (metis cpos all_larger_zero_in_csset all_prefered_are_more_expensive\n          inner_commute obt_witness(1) obt_witness(2) assms(3))"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>i\\<in>agents. Price \\<bullet> \\<X> i < Price \\<bullet> X' i\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have dom_g : \"Price \\<bullet> (\\<Sum>i\\<in>agents. X' i) > Price \\<bullet> (\\<Sum>i\\<in>agents. (\\<X> i))\" (is \"_ > _ \\<bullet> ?x_sum\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents", "have \"(\\<Sum>i\\<in>agents. Price \\<bullet> X' i) > (\\<Sum>i\\<in>agents. Price \\<bullet> (\\<X> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n    < (\\<Sum>i\\<in>agents. Price \\<bullet> X' i)", "by (metis (mono_tags, lifting) xprime_leq_y assms(1,3) ex_greater_value\n          finite_nonepty_agents sum_strict_mono_ex1 x_equil_x_ext_budget)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> X' i)\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents", "thus \"Price \\<bullet> (\\<Sum>i\\<in>agents. X' i) > Price \\<bullet> ?x_sum\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents. Price \\<bullet> \\<X> i)\n  < (\\<Sum>i\\<in>agents. Price \\<bullet> X' i)\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents", "by (simp add: inner_sum_right)"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "let ?y_sum = \"(\\<Sum>j\\<in>firms. \\<Y> j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have equili_walras_law: \"Price \\<bullet> ?x_sum =\n    (\\<Sum>i\\<in>agents. Price \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (Price \\<bullet> \\<Y> j)))\" (is \"_ = ?ws\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents =\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents =\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)", "have \"\\<forall>i\\<in>agents. Price \\<bullet> \\<X> i = Price \\<bullet> \\<E>[i] + (\\<Sum>j\\<in>firms. \\<Theta>[i,j] *\\<^sub>R (Price \\<bullet> \\<Y> j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i = poe_wealth Price i \\<Y>", "by (metis (no_types, lifting) assms(1,3) x_equil_x_ext_budget)"], ["proof (state)\nthis:\n  \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i = poe_wealth Price i \\<Y>\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents =\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i = poe_wealth Price i \\<Y>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>agents. Price \\<bullet> \\<X> i = poe_wealth Price i \\<Y>\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents =\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)", "by (simp add: inner_sum_right)"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents =\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents =\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents =\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have remove_firm_pct: \"... = Price \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + (Price \\<bullet> ?y_sum)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n    Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n    Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms", "have equals_inner_price:\"0 = Price \\<bullet> (?x_sum - ((\\<Sum>i\\<in>agents. \\<E> i) + ?y_sum))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 =\n    Price \\<bullet> (sum \\<X> agents - (sum \\<E> agents + sum \\<Y> firms))", "by (metis (no_types) diff_diff_add assms(1,3)  walras_law_in_compeq)"], ["proof (state)\nthis:\n  0 = Price \\<bullet> (sum \\<X> agents - (sum \\<E> agents + sum \\<Y> firms))\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n    Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms", "have \"Price \\<bullet> ?x_sum = Price \\<bullet> ((\\<Sum>i\\<in>agents. \\<E> i) + ?y_sum)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum \\<X> agents =\n    Price \\<bullet> (sum \\<E> agents + sum \\<Y> firms)", "by (metis (no_types) equals_inner_price inner_diff_right right_minus_eq)"], ["proof (state)\nthis:\n  Price \\<bullet> sum \\<X> agents =\n  Price \\<bullet> (sum \\<E> agents + sum \\<Y> firms)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n    Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> sum \\<X> agents =\n  Price \\<bullet> (sum \\<E> agents + sum \\<Y> firms)", "show ?thesis"], ["proof (prove)\nusing this:\n  Price \\<bullet> sum \\<X> agents =\n  Price \\<bullet> (sum \\<E> agents + sum \\<Y> firms)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n    Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms", "by (simp add: equili_walras_law inner_right_distrib)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n  Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n  Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have xp_l_yp: \"(\\<Sum>i\\<in>agents. X' i) \\<le> (\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>f\\<in>firms. Y' f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum X' agents \\<le> sum \\<E> agents + sum Y' firms", "using is_feasible feasible_private_ownership_def"], ["proof (prove)\nusing this:\n  feasible X' Y'\n  feasible_private_ownership ?A ?F ?\\<E> ?Cs ?Ps ?X ?Y =\n  (sum ?X ?A \\<le> sum ?\\<E> ?A + sum ?Y ?F \\<and>\n   (\\<forall>i\\<in>?A. ?X i \\<in> ?Cs) \\<and>\n   (\\<forall>j\\<in>?F. ?Y j \\<in> ?Ps j))\n\ngoal (1 subgoal):\n 1. sum X' agents \\<le> sum \\<E> agents + sum Y' firms", "by blast"], ["proof (state)\nthis:\n  sum X' agents \\<le> sum \\<E> agents + sum Y' firms\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "hence yprime_sgr_y: \"Price \\<bullet> (\\<Sum>i\\<in>agents. \\<E>[i]) + Price \\<bullet> (\\<Sum>f\\<in>firms. Y' f) > ?ws\""], ["proof (prove)\nusing this:\n  sum X' agents \\<le> sum \\<E> agents + sum Y' firms\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum X' agents \\<le> sum \\<E> agents + sum Y' firms \\<Longrightarrow>\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms", "have \"Price \\<bullet> (\\<Sum>i\\<in>agents. X' i) \\<le> Price \\<bullet> ((\\<Sum>i\\<in>agents. \\<E>[i]) + (\\<Sum>j\\<in>firms. Y' j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Price \\<bullet> sum X' agents\n    \\<le> Price \\<bullet> (sum \\<E> agents + sum Y' firms)", "by (metis xp_l_yp atLeastAtMost_iff inner_commute\n          interval_inner_leI(2) less_imp_le order_refl assms(2))"], ["proof (state)\nthis:\n  Price \\<bullet> sum X' agents\n  \\<le> Price \\<bullet> (sum \\<E> agents + sum Y' firms)\n\ngoal (1 subgoal):\n 1. sum X' agents \\<le> sum \\<E> agents + sum Y' firms \\<Longrightarrow>\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms", "hence \"?ws < Price \\<bullet> ((\\<Sum>i\\<in>agents. \\<E> i) + (\\<Sum>j\\<in>firms. Y' j))\""], ["proof (prove)\nusing this:\n  Price \\<bullet> sum X' agents\n  \\<le> Price \\<bullet> (sum \\<E> agents + sum Y' firms)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> (sum \\<E> agents + sum Y' firms)", "using dom_g equili_walras_law"], ["proof (prove)\nusing this:\n  Price \\<bullet> sum X' agents\n  \\<le> Price \\<bullet> (sum \\<E> agents + sum Y' firms)\n  Price \\<bullet> sum \\<X> agents < Price \\<bullet> sum X' agents\n  Price \\<bullet> sum \\<X> agents =\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> (sum \\<E> agents + sum Y' firms)", "by linarith"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> (sum \\<E> agents + sum Y' firms)\n\ngoal (1 subgoal):\n 1. sum X' agents \\<le> sum \\<E> agents + sum Y' firms \\<Longrightarrow>\n    (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms", "then"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> (sum \\<E> agents + sum Y' firms)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> (sum \\<E> agents + sum Y' firms)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n    < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms", "by (simp add: inner_right_distrib)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have Y_is_optimum: \"\\<forall>j\\<in>firms. \\<forall>y \\<in> production_sets j. Price \\<bullet> \\<Y> j \\<ge> Price \\<bullet> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms.\n       \\<forall>y\\<in>production_sets j.\n          Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j", "using assms prof_max_ge_all_in_pset"], ["proof (prove)\nusing this:\n  ?i \\<in> agents \\<Longrightarrow>\n  local_nonsatiation consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n  \\<lbrakk>?j \\<in> firms;\n   ?Y ?j \\<in> profit_maximisation ?P (production_sets ?j)\\<rbrakk>\n  \\<Longrightarrow> \\<forall>y\\<in>production_sets ?j.\n                       ?P \\<bullet> y \\<le> ?P \\<bullet> ?Y ?j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms.\n       \\<forall>y\\<in>production_sets j.\n          Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>firms.\n     \\<forall>y\\<in>production_sets j.\n        Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "have yprime_in_prod_set: \"\\<forall>j \\<in> firms. Y' j \\<in> production_sets j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms. Y' j \\<in> production_sets j", "using xprime_pareto"], ["proof (prove)\nusing this:\n  feasible X' Y' \\<and>\n  (\\<forall>i\\<in>agents. U[i] (\\<X> i) \\<le> U[i] (X' i)) \\<and>\n  (\\<exists>i\\<in>agents. U[i] (\\<X> i) < U[i] (X' i))\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms. Y' j \\<in> production_sets j", "by (simp add: feasible_private_ownership_def)"], ["proof (state)\nthis:\n  \\<forall>j\\<in>firms. Y' j \\<in> production_sets j\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "hence \"\\<forall>j \\<in> firms. \\<forall>y \\<in> production_sets j. Price \\<bullet> \\<Y> j \\<ge> Price \\<bullet> y\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>firms. Y' j \\<in> production_sets j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms.\n       \\<forall>y\\<in>production_sets j.\n          Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j", "using Y_is_optimum"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>firms. Y' j \\<in> production_sets j\n  \\<forall>j\\<in>firms.\n     \\<forall>y\\<in>production_sets j.\n        Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms.\n       \\<forall>y\\<in>production_sets j.\n          Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>firms.\n     \\<forall>y\\<in>production_sets j.\n        Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "hence Y_ge_yprime: \"\\<forall>j \\<in> firms. Price \\<bullet> \\<Y> j \\<ge> Price \\<bullet> Y' j\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>firms.\n     \\<forall>y\\<in>production_sets j.\n        Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms. Price \\<bullet> Y' j \\<le> Price \\<bullet> \\<Y> j", "using yprime_in_prod_set"], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>firms.\n     \\<forall>y\\<in>production_sets j.\n        Price \\<bullet> y \\<le> Price \\<bullet> \\<Y> j\n  \\<forall>j\\<in>firms. Y' j \\<in> production_sets j\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>firms. Price \\<bullet> Y' j \\<le> Price \\<bullet> \\<Y> j", "by blast"], ["proof (state)\nthis:\n  \\<forall>j\\<in>firms. Price \\<bullet> Y' j \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "hence yprime_p_leq_Y: \"Price \\<bullet> (\\<Sum>f\\<in>firms. Y' f) \\<le> Price \\<bullet> ?y_sum\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<in>firms. Price \\<bullet> Y' j \\<le> Price \\<bullet> \\<Y> j\n\ngoal (1 subgoal):\n 1. Price \\<bullet> sum Y' firms \\<le> Price \\<bullet> sum \\<Y> firms", "by (simp add: Y_ge_yprime inner_sum_right sum_mono)"], ["proof (state)\nthis:\n  Price \\<bullet> sum Y' firms \\<le> Price \\<bullet> sum \\<Y> firms\n\ngoal (1 subgoal):\n 1. \\<not> pareto_optimal \\<X> \\<Y> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Price \\<bullet> sum Y' firms \\<le> Price \\<bullet> sum \\<Y> firms", "show False"], ["proof (prove)\nusing this:\n  Price \\<bullet> sum Y' firms \\<le> Price \\<bullet> sum \\<Y> firms\n\ngoal (1 subgoal):\n 1. False", "using remove_firm_pct yprime_sgr_y"], ["proof (prove)\nusing this:\n  Price \\<bullet> sum Y' firms \\<le> Price \\<bullet> sum \\<Y> firms\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>) =\n  Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum \\<Y> firms\n  (\\<Sum>i\\<in>agents. poe_wealth Price i \\<Y>)\n  < Price \\<bullet> sum \\<E> agents + Price \\<bullet> sum Y' firms\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Equilibrium cannot be Pareto dominated. \\<close>"], ["", "lemma equilibria_dom_eachother:\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> local_nonsatiation consumption_set Pr[i]\"\n    and \"Price > 0\"\n  assumes equil: \"competitive_equilibrium Price \\<X> \\<Y>\"\n  shows \"\\<nexists>X' Y'. competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'.\n       competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'.\n       competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>", "have \"pareto_optimal \\<X> \\<Y>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal \\<X> \\<Y>", "by (meson assms equil first_welfare_theorem_priv_own)"], ["proof (state)\nthis:\n  pareto_optimal \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'.\n       competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>", "hence \"\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto \\<X>\""], ["proof (prove)\nusing this:\n  pareto_optimal \\<X> \\<Y>\n\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto \\<X>", "using pareto_optimal_def"], ["proof (prove)\nusing this:\n  pareto_optimal \\<X> \\<Y>\n  pareto_optimal ?X ?Y =\n  (feasible ?X ?Y \\<and>\n   (\\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto ?X))\n\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto \\<X>", "by blast"], ["proof (state)\nthis:\n  \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto \\<X>\n\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'.\n       competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>X' Y'. feasible X' Y' \\<and> X' \\<succ>Pareto \\<X>\n\ngoal (1 subgoal):\n 1. \\<nexists>X' Y'.\n       competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>", "by auto"], ["proof (state)\nthis:\n  \\<nexists>X' Y'.\n     competitive_equilibrium P X' Y' \\<and> X' \\<succ>Pareto \\<X>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> Using monotonicity instead of local non-satiation proves the First Welfare Theorem. \\<close>"], ["", "corollary first_welfare_thm_monotone:\n  assumes \"\\<forall>M \\<in> carrier. (\\<forall>x > M. x \\<in> carrier)\"\n  assumes \"\\<And>i. i \\<in> agents \\<Longrightarrow> monotone_preference consumption_set Pr[i]\"\n    and \"Price > 0\"\n  assumes \"competitive_equilibrium Price \\<X> \\<Y>\"\n  shows \"pareto_optimal \\<X> \\<Y>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pareto_optimal \\<X> \\<Y>", "using all_larger_zero_in_csset assms(2) assms(3) assms(4) \n    first_welfare_theorem_priv_own unbounded_above_mono_imp_lns"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> consumption_set\n  ?i \\<in> agents \\<Longrightarrow>\n  monotone_preference consumption_set Pr[?i]\n  (0::'a) < Price\n  competitive_equilibrium Price \\<X> \\<Y>\n  \\<lbrakk>\\<And>i.\n              i \\<in> agents \\<Longrightarrow>\n              local_nonsatiation consumption_set Pr[i];\n   (0::'a) < ?Price; competitive_equilibrium ?Price ?\\<X> ?\\<Y>\\<rbrakk>\n  \\<Longrightarrow> pareto_optimal ?\\<X> ?\\<Y>\n  \\<lbrakk>\\<forall>M\\<in>?carrier. \\<forall>x>M. x \\<in> ?carrier;\n   monotone_preference ?carrier ?relation\\<rbrakk>\n  \\<Longrightarrow> local_nonsatiation ?carrier ?relation\n\ngoal (1 subgoal):\n 1. pareto_optimal \\<X> \\<Y>", "by blast"], ["", "end"], ["", "end"], ["", "end"]]}