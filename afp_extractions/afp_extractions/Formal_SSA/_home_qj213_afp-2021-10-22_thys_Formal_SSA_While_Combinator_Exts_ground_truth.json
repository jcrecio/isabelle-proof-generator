{"file_name": "/home/qj213/afp-2021-10-22/thys/Formal_SSA/While_Combinator_Exts.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Formal_SSA", "problem_names": ["lemma while_option_None_invD:\n  assumes \"while_option b c s = None\" and \"wf r\"\n  and \"I s\" and \"\\<And>s. \\<lbrakk> I s; b s \\<rbrakk> \\<Longrightarrow> I (c s)\"\n  and \"\\<And>s. \\<lbrakk> I s; b s \\<rbrakk> \\<Longrightarrow> (c s, s ) \\<in> r\"\n  shows \"False\"", "lemma while_option_NoneD:\n  assumes \"while_option b c s = None\"\n  and \"wf r\" and \"\\<And>s. b s \\<Longrightarrow> (c s, s) \\<in> r\"\n  shows \"False\"", "lemma while_option_sim:\n  assumes start: \"R (Some s1) (Some s2)\"\n  and cond: \"\\<And>s1 s2. \\<lbrakk> R (Some s1) (Some s2); I s1 \\<rbrakk> \\<Longrightarrow> b1 s1 = b2 s2\"\n  and step : \"\\<And>s1 s2. \\<lbrakk> R (Some s1) (Some s2); I s1; b1 s1 \\<rbrakk> \\<Longrightarrow> R (Some (c1 s1)) (Some (c2 s2))\"\n  and diverge: \"R None None\"\n  and inv_start: \"I s1\"\n  and inv_step: \"\\<And>s1. \\<lbrakk> I s1; b1 s1 \\<rbrakk> \\<Longrightarrow> I (c1 s1)\"\n  shows \"R (while_option b1 c1 s1) (while_option b2 c2 s2)\""], "translations": [["", "lemma while_option_None_invD:\n  assumes \"while_option b c s = None\" and \"wf r\"\n  and \"I s\" and \"\\<And>s. \\<lbrakk> I s; b s \\<rbrakk> \\<Longrightarrow> I (c s)\"\n  and \"\\<And>s. \\<lbrakk> I s; b s \\<rbrakk> \\<Longrightarrow> (c s, s ) \\<in> r\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  while_option b c s = None\n  wf r\n  I s\n  \\<lbrakk>I ?s; b ?s\\<rbrakk> \\<Longrightarrow> I (c ?s)\n  \\<lbrakk>I ?s; b ?s\\<rbrakk> \\<Longrightarrow> (c ?s, ?s) \\<in> r\n\ngoal (1 subgoal):\n 1. False", "by -(drule wf_rel_while_option_Some [of r I b c], auto)"], ["", "lemma while_option_NoneD:\n  assumes \"while_option b c s = None\"\n  and \"wf r\" and \"\\<And>s. b s \\<Longrightarrow> (c s, s) \\<in> r\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  while_option b c s = None\n  wf r\n  b ?s \\<Longrightarrow> (c ?s, ?s) \\<in> r\n\ngoal (1 subgoal):\n 1. False", "by (blast intro: while_option_None_invD)"], ["", "lemma while_option_sim:\n  assumes start: \"R (Some s1) (Some s2)\"\n  and cond: \"\\<And>s1 s2. \\<lbrakk> R (Some s1) (Some s2); I s1 \\<rbrakk> \\<Longrightarrow> b1 s1 = b2 s2\"\n  and step : \"\\<And>s1 s2. \\<lbrakk> R (Some s1) (Some s2); I s1; b1 s1 \\<rbrakk> \\<Longrightarrow> R (Some (c1 s1)) (Some (c2 s2))\"\n  and diverge: \"R None None\"\n  and inv_start: \"I s1\"\n  and inv_step: \"\\<And>s1. \\<lbrakk> I s1; b1 s1 \\<rbrakk> \\<Longrightarrow> I (c1 s1)\"\n  shows \"R (while_option b1 c1 s1) (while_option b2 c2 s2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "assume \"\\<forall>k' < k. b1 ((c1 ^^ k') s1)\""], ["proof (state)\nthis:\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "with start cond step inv_start inv_step"], ["proof (chain)\npicking this:\n  R (Some s1) (Some s2)\n  \\<lbrakk>R (Some ?s1.0) (Some ?s2.0); I ?s1.0\\<rbrakk>\n  \\<Longrightarrow> b1 ?s1.0 = b2 ?s2.0\n  \\<lbrakk>R (Some ?s1.0) (Some ?s2.0); I ?s1.0; b1 ?s1.0\\<rbrakk>\n  \\<Longrightarrow> R (Some (c1 ?s1.0)) (Some (c2 ?s2.0))\n  I s1\n  \\<lbrakk>I ?s1.0; b1 ?s1.0\\<rbrakk> \\<Longrightarrow> I (c1 ?s1.0)\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)", "have \"b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2)\" and \"I ((c1 ^^ k) s1)\"\n      and \"R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2))\""], ["proof (prove)\nusing this:\n  R (Some s1) (Some s2)\n  \\<lbrakk>R (Some ?s1.0) (Some ?s2.0); I ?s1.0\\<rbrakk>\n  \\<Longrightarrow> b1 ?s1.0 = b2 ?s2.0\n  \\<lbrakk>R (Some ?s1.0) (Some ?s2.0); I ?s1.0; b1 ?s1.0\\<rbrakk>\n  \\<Longrightarrow> R (Some (c1 ?s1.0)) (Some (c2 ?s2.0))\n  I s1\n  \\<lbrakk>I ?s1.0; b1 ?s1.0\\<rbrakk> \\<Longrightarrow> I (c1 ?s1.0)\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2) &&&\n    I ((c1 ^^ k) s1) &&& R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2))", "by (induction k) auto"], ["proof (state)\nthis:\n  b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2)\n  I ((c1 ^^ k) s1)\n  R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "}"], ["proof (state)\nthis:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "moreover"], ["proof (state)\nthis:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "{"], ["proof (state)\nthis:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "assume \"\\<not> b1 ((c1 ^^ k) s1)\""], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ k) s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "hence \"\\<forall>k' < LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\""], ["proof (prove)\nusing this:\n  \\<not> b1 ((c1 ^^ k) s1)\n\ngoal (1 subgoal):\n 1. \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)", "by (metis (lifting) not_less_Least)"], ["proof (state)\nthis:\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "}"], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "moreover"], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "{"], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "assume \"\\<not> b2 ((c2 ^^ k) s2)\""], ["proof (state)\nthis:\n  \\<not> b2 ((c2 ^^ k) s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "hence \"\\<forall>k' < LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\""], ["proof (prove)\nusing this:\n  \\<not> b2 ((c2 ^^ k) s2)\n\ngoal (1 subgoal):\n 1. \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)", "by (metis (lifting) not_less_Least)"], ["proof (state)\nthis:\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "}"], ["proof (state)\nthis:\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "moreover"], ["proof (state)\nthis:\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "{"], ["proof (state)\nthis:\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "assume \"\\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\"\n      and \"\\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\""], ["proof (state)\nthis:\n  \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n  \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "hence not_cond_Least: \"\\<not> b1 ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1)\"\n      \"\\<not> b2 ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2)\""], ["proof (prove)\nusing this:\n  \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n  \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\n\ngoal (1 subgoal):\n 1. \\<not> b1 ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1) &&&\n    \\<not> b2 ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2)", "by -(drule LeastI_ex, assumption)+"], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1)\n  \\<not> b2 ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "{"], ["proof (state)\nthis:\n  \\<not> b1 ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1)\n  \\<not> b2 ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "assume \"\\<forall>k' < k. b1 ((c1 ^^ k') s1)\""], ["proof (state)\nthis:\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "with calculation(1) dual_order.strict_trans"], ["proof (chain)\npicking this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)", "have \"\\<forall>k' < k. b2 ((c2 ^^ k') s2)\""], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<lbrakk>?b < ?a; ?c < ?b\\<rbrakk> \\<Longrightarrow> ?c < ?a\n  \\<forall>k'<k. b1 ((c1 ^^ k') s1)\n\ngoal (1 subgoal):\n 1. \\<forall>k'<k. b2 ((c2 ^^ k') s2)", "by blast"], ["proof (state)\nthis:\n  \\<forall>k'<k. b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "}"], ["proof (state)\nthis:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  \\<forall>k'<?k2. b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "hence \"(LEAST k'. \\<not> b1 ((c1 ^^ k') s1)) = (LEAST k'. \\<not> b2 ((c2 ^^ k') s2))\""], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  \\<forall>k'<?k2. b2 ((c2 ^^ k') s2)\n\ngoal (1 subgoal):\n 1. (LEAST k'. \\<not> b1 ((c1 ^^ k') s1)) =\n    (LEAST k'. \\<not> b2 ((c2 ^^ k') s2))", "by (metis (no_types, lifting) not_cond_Least calculation(1,4,5) less_linear)"], ["proof (state)\nthis:\n  (LEAST k'. \\<not> b1 ((c1 ^^ k') s1)) =\n  (LEAST k'. \\<not> b2 ((c2 ^^ k') s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "with calculation(3,4)"], ["proof (chain)\npicking this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  (LEAST k'. \\<not> b1 ((c1 ^^ k') s1)) =\n  (LEAST k'. \\<not> b2 ((c2 ^^ k') s2))", "have \"R (Some ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n      (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\""], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  (LEAST k'. \\<not> b1 ((c1 ^^ k') s1)) =\n  (LEAST k'. \\<not> b2 ((c2 ^^ k') s2))\n\ngoal (1 subgoal):\n 1. R (Some ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))", "by auto"], ["proof (state)\nthis:\n  R (Some ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n   (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n   \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n  \\<Longrightarrow> R (Some\n                        ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n  \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n   \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n  \\<Longrightarrow> R (Some\n                        ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n  \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n   \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n  \\<Longrightarrow> R (Some\n                        ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "using diverge"], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n  \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n   \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n  \\<Longrightarrow> R (Some\n                        ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n  R None None\n\ngoal (1 subgoal):\n 1. R (while_option b1 c1 s1) (while_option b2 c2 s2)", "unfolding while_option_def"], ["proof (prove)\nusing this:\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  b1 ((c1 ^^ ?k2) s1) = b2 ((c2 ^^ ?k2) s2)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow> I ((c1 ^^ ?k2) s1)\n  \\<forall>k'<?k2. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n  R (Some ((c1 ^^ ?k2) s1)) (Some ((c2 ^^ ?k2) s2))\n  \\<not> b1 ((c1 ^^ ?k2) s1) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1)\n  \\<not> b2 ((c2 ^^ ?k2) s2) \\<Longrightarrow>\n  \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2)\n  \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n   \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n  \\<Longrightarrow> R (Some\n                        ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                     (Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n  R None None\n\ngoal (1 subgoal):\n 1. R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n       then Some ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1) else None)\n     (if \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\n      then Some ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2) else None)", "apply (split if_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> ((\\<exists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                          then Some\n                                ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                  s1)\n                          else None)\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2)))\n                            s2))) \\<and>\n                      ((\\<nexists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                          then Some\n                                ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                  s1)\n                          else None)\n                        None)", "apply (rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>k.\n                          \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                      R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                         then Some\n                               ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                 s1)\n                         else None)\n                       (Some\n                         ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2))\n 2. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> (\\<nexists>k.\n                          \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                      R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                         then Some\n                               ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                 s1)\n                         else None)\n                       None", "apply (split if_split)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> ((\\<exists>k.\n                           \\<not> b1 ((c1 ^^ k) s1)) \\<longrightarrow>\n                       (\\<exists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2)))\n                            s2))) \\<and>\n                      ((\\<nexists>k.\n                           \\<not> b1 ((c1 ^^ k) s1)) \\<longrightarrow>\n                       (\\<exists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R None\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2)))\n 2. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> (\\<nexists>k.\n                          \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                      R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                         then Some\n                               ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                 s1)\n                         else None)\n                       None", "apply metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> (\\<nexists>k.\n                          \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                      R (if \\<exists>k. \\<not> b1 ((c1 ^^ k) s1)\n                         then Some\n                               ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1)))\n                                 s1)\n                         else None)\n                       None", "apply (split if_split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>k.\n                \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n                b1 ((c1 ^^ k) s1) = b2 ((c2 ^^ k) s2);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        I ((c1 ^^ k) s1);\n     \\<And>k.\n        \\<forall>k'<k. b1 ((c1 ^^ k') s1) \\<Longrightarrow>\n        R (Some ((c1 ^^ k) s1)) (Some ((c2 ^^ k) s2));\n     \\<And>k.\n        \\<not> b1 ((c1 ^^ k) s1) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b1 ((c1 ^^ k) s1). b1 ((c1 ^^ k') s1);\n     \\<And>k.\n        \\<not> b2 ((c2 ^^ k) s2) \\<Longrightarrow>\n        \\<forall>k'<LEAST k. \\<not> b2 ((c2 ^^ k) s2). b2 ((c2 ^^ k') s2);\n     \\<lbrakk>\\<exists>k. \\<not> b1 ((c1 ^^ k) s1);\n      \\<exists>k. \\<not> b2 ((c2 ^^ k) s2)\\<rbrakk>\n     \\<Longrightarrow> R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        (Some\n                          ((c2 ^^ (LEAST k. \\<not> b2 ((c2 ^^ k) s2))) s2));\n     R None None\\<rbrakk>\n    \\<Longrightarrow> ((\\<exists>k.\n                           \\<not> b1 ((c1 ^^ k) s1)) \\<longrightarrow>\n                       (\\<nexists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R (Some\n                           ((c1 ^^ (LEAST k. \\<not> b1 ((c1 ^^ k) s1))) s1))\n                        None) \\<and>\n                      ((\\<nexists>k.\n                           \\<not> b1 ((c1 ^^ k) s1)) \\<longrightarrow>\n                       (\\<nexists>k.\n                           \\<not> b2 ((c2 ^^ k) s2)) \\<longrightarrow>\n                       R None None)", "by (metis (lifting) LeastI_ex)"], ["proof (state)\nthis:\n  R (while_option b1 c1 s1) (while_option b2 c2 s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}