{"file_name": "/home/qj213/afp-2021-10-22/thys/Ramsey-Infinite/Ramsey.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Ramsey-Infinite", "problem_names": ["lemma infinite_inj_infinite_image: \"infinite Z \\<Longrightarrow> inj_on f Z \\<Longrightarrow> infinite (f ` Z)\"", "lemma infinite_dom_finite_rng: \"[| infinite A; finite (f ` A) |] ==> \\<exists>b \\<in> f ` A. infinite {a : A. f a = b}\"", "lemma infinite_mem: \"infinite X \\<Longrightarrow> \\<exists>x. x \\<in> X\"", "lemma not_empty_least: \"(Y::nat set) \\<noteq> {} \\<Longrightarrow> \\<exists>m. m \\<in> Y \\<and> (\\<forall>m'. m' \\<in> Y \\<longrightarrow> m \\<le> m')\"", "lemma dc: \"\n  (\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z)\n  \\<and> (\\<exists>x0. P x0)\n  \\<and> (\\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y))\n  \\<longrightarrow> (\\<exists>f::nat\\<Rightarrow>'b. (\\<forall>n. P (f n)) \\<and> (\\<forall>n m. R (f n) (f (n+m+1))))\n \"", "lemma part: \"[| infinite YY; part (Suc n) s YY f; yy : YY |] ==> part n s (YY - {yy}) (\\<lambda>u. f (insert yy u))\"", "lemma part_subset: \"part (Suc n) s YY f \\<Longrightarrow> Y \\<subseteq> YY \\<Longrightarrow> part (Suc n) s Y f\"", "lemma ramsey: \"\n  \\<forall>(s::nat) (r::nat) (YY::'a set) (f::'a set \\<Rightarrow> nat).\n  infinite YY \n  \\<and> (\\<forall>X. X \\<subseteq> YY \\<and> finite X \\<and> card X = r \\<longrightarrow> f X < s)\n  \\<longrightarrow> (\\<exists>Y' t'.\n  Y' \\<subseteq> YY \n  \\<and> infinite Y' \n  \\<and> t' < s \n  \\<and> (\\<forall>X. X \\<subseteq> Y' \\<and> finite X \\<and> card X = r \\<longrightarrow> f X = t'))\""], "translations": [["", "lemma infinite_inj_infinite_image: \"infinite Z \\<Longrightarrow> inj_on f Z \\<Longrightarrow> infinite (f ` Z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite Z; inj_on f Z\\<rbrakk>\n    \\<Longrightarrow> infinite (f ` Z)", "apply(rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite Z; inj_on f Z; \\<not> infinite (f ` Z)\\<rbrakk>\n    \\<Longrightarrow> False", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite Z; inj_on f Z; finite (f ` Z)\\<rbrakk>\n    \\<Longrightarrow> False", "apply(force dest: finite_imageD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma infinite_dom_finite_rng: \"[| infinite A; finite (f ` A) |] ==> \\<exists>b \\<in> f ` A. infinite {a : A. f a = b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b\\<in>f ` A. infinite {a \\<in> A. f a = b}", "apply(rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<not> (\\<exists>b\\<in>f ` A. infinite {a \\<in> A. f a = b})\\<rbrakk>\n    \\<Longrightarrow> False", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b}\\<rbrakk>\n    \\<Longrightarrow> False", "apply(subgoal_tac \"\\<Union>((\\<lambda>b. {a : A. f a = f b}) ` A) = A\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b}\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b}\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\n 2. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\\<rbrakk>\n    \\<Longrightarrow> False", "apply(blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\\<rbrakk>\n    \\<Longrightarrow> False", "apply(subgoal_tac \"(UN c : f ` A. {a : A. f a = c})= (UN b:A. {a : A. f a = f b})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n                      (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A\\<rbrakk>\n    \\<Longrightarrow> (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n                      (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\n 2. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> False", "apply(blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> False", "apply(subgoal_tac \"finite (UN c:f ` A. {a : A. f a = c})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b});\n     finite (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c})\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> finite (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c})", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> finite (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c})", "apply(rule finite_UN_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>infinite A; finite (f ` A);\n     \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n     (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n     (\\<Union>b\\<in>A. {a \\<in> A. f a = f b})\\<rbrakk>\n    \\<Longrightarrow> finite (f ` A)\n 2. \\<And>c.\n       \\<lbrakk>infinite A; finite (f ` A);\n        \\<forall>b\\<in>A. finite {a \\<in> A. f a = f b};\n        (\\<Union>b\\<in>A. {a \\<in> A. f a = f b}) = A;\n        (\\<Union>c\\<in>f ` A. {a \\<in> A. f a = c}) =\n        (\\<Union>b\\<in>A. {a \\<in> A. f a = f b});\n        c \\<in> f ` A\\<rbrakk>\n       \\<Longrightarrow> finite {a \\<in> A. f a = c}", "apply(auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma infinite_mem: \"infinite X \\<Longrightarrow> \\<exists>x. x \\<in> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infinite X \\<Longrightarrow> \\<exists>x. x \\<in> X", "apply(rule ccontr)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite X; \\<nexists>x. x \\<in> X\\<rbrakk>\n    \\<Longrightarrow> False", "apply(force)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma not_empty_least: \"(Y::nat set) \\<noteq> {} \\<Longrightarrow> \\<exists>m. m \\<in> Y \\<and> (\\<forall>m'. m' \\<in> Y \\<longrightarrow> m \\<le> m')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<noteq> {} \\<Longrightarrow>\n    \\<exists>m.\n       m \\<in> Y \\<and>\n       (\\<forall>m'. m' \\<in> Y \\<longrightarrow> m \\<le> m')", "apply(rule_tac x=\"LEAST x. x : Y\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<noteq> {} \\<Longrightarrow>\n    (LEAST x. x \\<in> Y) \\<in> Y \\<and>\n    (\\<forall>m'.\n        m' \\<in> Y \\<longrightarrow> (LEAST x. x \\<in> Y) \\<le> m')", "apply(rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Y \\<noteq> {} \\<Longrightarrow> (LEAST x. x \\<in> Y) \\<in> Y\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    \\<forall>m'. m' \\<in> Y \\<longrightarrow> (LEAST x. x \\<in> Y) \\<le> m'", "apply(rule LeastI_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Y \\<noteq> {} \\<Longrightarrow> \\<exists>x. x \\<in> Y\n 2. Y \\<noteq> {} \\<Longrightarrow>\n    \\<forall>m'. m' \\<in> Y \\<longrightarrow> (LEAST x. x \\<in> Y) \\<le> m'", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Y \\<noteq> {} \\<Longrightarrow>\n    \\<forall>m'. m' \\<in> Y \\<longrightarrow> (LEAST x. x \\<in> Y) \\<le> m'", "apply(rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m'.\n       Y \\<noteq> {} \\<Longrightarrow>\n       m' \\<in> Y \\<longrightarrow> (LEAST x. x \\<in> Y) \\<le> m'", "apply(rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m'.\n       \\<lbrakk>Y \\<noteq> {}; m' \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> (LEAST x. x \\<in> Y) \\<le> m'", "apply(rule Least_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>m'.\n       \\<lbrakk>Y \\<noteq> {}; m' \\<in> Y\\<rbrakk>\n       \\<Longrightarrow> m' \\<in> Y", "apply(assumption)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Dependent Choice Variant\"\n\n  \\<comment> \\<open>%%cut choice\\<close>"], ["", "primrec choice :: \"('a \\<Rightarrow> bool) \\<Rightarrow> ('a \\<Rightarrow> 'a \\<Rightarrow> bool) \\<Rightarrow> nat \\<Rightarrow> 'a\" where\n  \"choice P R 0 = (SOME x. P x)\"\n| \"choice P R (Suc n) = (let x = choice P R n in SOME y. P y \\<and> R x y)\"\n  \\<comment> \\<open>%%tuc\\<close>"], ["", "lemma dc: \"\n  (\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z)\n  \\<and> (\\<exists>x0. P x0)\n  \\<and> (\\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y))\n  \\<longrightarrow> (\\<exists>f::nat\\<Rightarrow>'b. (\\<forall>n. P (f n)) \\<and> (\\<forall>n m. R (f n) (f (n+m+1))))\n \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z) \\<and>\n    (\\<exists>x0. P x0) \\<and>\n    (\\<forall>x.\n        P x \\<longrightarrow>\n        (\\<exists>y. P y \\<and> R x y)) \\<longrightarrow>\n    (\\<exists>f.\n        (\\<forall>n. P (f n)) \\<and>\n        (\\<forall>n m. R (f n) (f (n + m + 1))))", "apply(intro allI impI, elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f.\n                            (\\<forall>n. P (f n)) \\<and>\n                            (\\<forall>n m. R (f n) (f (n + m + 1)))", "apply(rule_tac x=\"choice P R\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(subgoal_tac \"(\\<forall>n. P (choice P R n))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. P (choice P R n)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. P (choice P R n)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(rule, induct_tac n)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> P (choice P R 0)\n 2. \\<And>x0 n na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (choice P R (Suc na))\n 3. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(simp add: Let_def)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> P (Eps P)\n 2. \\<And>x0 n na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (choice P R (Suc na))\n 3. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(rule someI_ex)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. P x\n 2. \\<And>x0 n na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (choice P R (Suc na))\n 3. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (choice P R (Suc na))\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(simp add: Let_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R na) y)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(subgoal_tac \"P (SOME y. P y \\<and> R (choice P R na) y) \\<and> R (choice P R na) (SOME y. P y \\<and> R (choice P R na) y)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x0 na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na);\n        P (SOME y. P y \\<and> R (choice P R na) y) \\<and>\n        R (choice P R na) (SOME y. P y \\<and> R (choice P R na) y)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R na) y)\n 2. \\<And>x0 na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R na) y) \\<and>\n                         R (choice P R na)\n                          (SOME y. P y \\<and> R (choice P R na) y)\n 3. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R na) y) \\<and>\n                         R (choice P R na)\n                          (SOME y. P y \\<and> R (choice P R na) y)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(rule someI_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; P (choice P R na)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. P x \\<and> R (choice P R na) x\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(blast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>n. P (choice P R n)) \\<and>\n                         (\\<forall>n m.\n                             R (choice P R n) (choice P R (n + m + 1)))", "apply(rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. P (choice P R n)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(subgoal_tac \"\\<forall>n. R (choice P R n) (choice P R (Suc n))\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. R (choice P R n) (choice P R (Suc n))", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n. R (choice P R n) (choice P R (Suc n))\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (Suc n))\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(simp add: Let_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n)\n                          (SOME y. P y \\<and> R (choice P R n) y)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(subgoal_tac \"P (SOME y. P y \\<and> R (choice P R n) y) \\<and>  R (choice P R n) (SOME y. P y \\<and> R (choice P R n) y)\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        P (SOME y. P y \\<and> R (choice P R n) y) \\<and>\n        R (choice P R n) (SOME y. P y \\<and> R (choice P R n) y)\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n)\n                          (SOME y. P y \\<and> R (choice P R n) y)\n 2. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R n) y) \\<and>\n                         R (choice P R n)\n                          (SOME y. P y \\<and> R (choice P R n) y)\n 3. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> P (SOME y. P y \\<and> R (choice P R n) y) \\<and>\n                         R (choice P R n)\n                          (SOME y. P y \\<and> R (choice P R n) y)\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(rule someI_ex)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x. P x \\<and> R (choice P R n) x\n 2. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>n m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0 n.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>m.\n                            R (choice P R n) (choice P R (n + m + 1))", "apply(rule)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0 n m.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + m + 1))", "apply(induct_tac m)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x0 n m.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + 0 + 1))\n 2. \\<And>x0 n m na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n));\n        R (choice P R n) (choice P R (n + na + 1))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + Suc na + 1))", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0 n m na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        \\<forall>n. R (choice P R n) (choice P R (Suc n));\n        R (choice P R n) (choice P R (n + na + 1))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + Suc na + 1))", "apply(drule_tac x=\"n+na+1\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0 n m na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. R (choice P R n) (choice P R (Suc n));\n        R (choice P R n) (choice P R (n + na + 1));\n        P (choice P R (n + na + 1))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + Suc na + 1))", "back"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x0 n m na.\n       \\<lbrakk>\\<forall>x y z. R x y \\<and> R y z \\<longrightarrow> R x z;\n        \\<forall>x. P x \\<longrightarrow> (\\<exists>y. P y \\<and> R x y);\n        P x0; \\<forall>n. P (choice P R n);\n        R (choice P R n) (choice P R (n + na + 1));\n        R (choice P R (n + na + 1)) (choice P R (Suc (n + na + 1)))\\<rbrakk>\n       \\<Longrightarrow> R (choice P R n) (choice P R (n + Suc na + 1))", "apply(force simp del: choice.simps)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Partitions\""], ["", "(* expect Y infinite *)"], ["", "definition\n  part :: \"nat \\<Rightarrow> nat \\<Rightarrow> 'a set \\<Rightarrow> ('a set \\<Rightarrow> nat) \\<Rightarrow> bool\" where\n  \"part r s Y f = (\\<forall>X. X \\<subseteq> Y \\<and> finite X \\<and> card X = r \\<longrightarrow> f X < s)\""], ["", "lemma part: \"[| infinite YY; part (Suc n) s YY f; yy : YY |] ==> part n s (YY - {yy}) (\\<lambda>u. f (insert yy u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite YY; part (Suc n) s YY f; yy \\<in> YY\\<rbrakk>\n    \\<Longrightarrow> part n s (YY - {yy}) (\\<lambda>u. f (insert yy u))", "apply(simp add: part_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>infinite YY;\n     \\<forall>X.\n        X \\<subseteq> YY \\<and>\n        finite X \\<and> card X = Suc n \\<longrightarrow>\n        f X < s;\n     yy \\<in> YY\\<rbrakk>\n    \\<Longrightarrow> \\<forall>X.\n                         X \\<subseteq> YY - {yy} \\<and>\n                         finite X \\<and> card X = n \\<longrightarrow>\n                         f (insert yy X) < s", "apply(intro allI impI, elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>infinite YY;\n        \\<forall>X.\n           X \\<subseteq> YY \\<and>\n           finite X \\<and> card X = Suc n \\<longrightarrow>\n           f X < s;\n        yy \\<in> YY; X \\<subseteq> YY - {yy}; finite X; card X = n\\<rbrakk>\n       \\<Longrightarrow> f (insert yy X) < s", "apply(drule_tac x=\"insert yy X\" in spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X.\n       \\<lbrakk>infinite YY; yy \\<in> YY; X \\<subseteq> YY - {yy}; finite X;\n        card X = n;\n        insert yy X \\<subseteq> YY \\<and>\n        finite (insert yy X) \\<and>\n        card (insert yy X) = Suc n \\<longrightarrow>\n        f (insert yy X) < s\\<rbrakk>\n       \\<Longrightarrow> f (insert yy X) < s", "apply(force simp:card_Diff_singleton_if)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma part_subset: \"part (Suc n) s YY f \\<Longrightarrow> Y \\<subseteq> YY \\<Longrightarrow> part (Suc n) s Y f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>part (Suc n) s YY f; Y \\<subseteq> YY\\<rbrakk>\n    \\<Longrightarrow> part (Suc n) s Y f", "apply(simp add: part_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>X.\n                X \\<subseteq> YY \\<and>\n                finite X \\<and> card X = Suc n \\<longrightarrow>\n                f X < s;\n     Y \\<subseteq> YY\\<rbrakk>\n    \\<Longrightarrow> \\<forall>X.\n                         X \\<subseteq> Y \\<and>\n                         finite X \\<and> card X = Suc n \\<longrightarrow>\n                         f X < s", "apply(blast)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "subsection \"Ramsey's theorem\""], ["", "(* state theorem so it doesn't require part definition *)"], ["", "lemma ramsey: \"\n  \\<forall>(s::nat) (r::nat) (YY::'a set) (f::'a set \\<Rightarrow> nat).\n  infinite YY \n  \\<and> (\\<forall>X. X \\<subseteq> YY \\<and> finite X \\<and> card X = r \\<longrightarrow> f X < s)\n  \\<longrightarrow> (\\<exists>Y' t'.\n  Y' \\<subseteq> YY \n  \\<and> infinite Y' \n  \\<and> t' < s \n  \\<and> (\\<forall>X. X \\<subseteq> Y' \\<and> finite X \\<and> card X = r \\<longrightarrow> f X = t'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s r YY f.\n       infinite YY \\<and>\n       (\\<forall>X.\n           X \\<subseteq> YY \\<and>\n           finite X \\<and> card X = r \\<longrightarrow>\n           f X < s) \\<longrightarrow>\n       (\\<exists>Y' t'.\n           Y' \\<subseteq> YY \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = r \\<longrightarrow>\n               f X = t'))", "apply(simp add: part_def[symmetric] del: ex_simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s r YY f.\n       infinite YY \\<and> part r s YY f \\<longrightarrow>\n       (\\<exists>Y' t'.\n           Y' \\<subseteq> YY \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = r \\<longrightarrow>\n               f X = t'))", "apply(rule, rule, rule_tac nat.induct)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r.\n       \\<forall>YY f.\n          infinite YY \\<and> part 0 s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = 0 \\<longrightarrow>\n                  f X = t'))\n 2. \\<And>s r nat.\n       \\<forall>YY f.\n          infinite YY \\<and> part nat s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  f X = t')) \\<Longrightarrow>\n       \\<forall>YY f.\n          infinite YY \\<and> part (Suc nat) s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = Suc nat \\<longrightarrow>\n                  f X = t'))", "apply(intro allI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r YY f.\n       infinite YY \\<and> part 0 s YY f \\<Longrightarrow>\n       \\<exists>Y' t'.\n          Y' \\<subseteq> YY \\<and>\n          infinite Y' \\<and>\n          t' < s \\<and>\n          (\\<forall>X.\n              X \\<subseteq> Y' \\<and>\n              finite X \\<and> card X = 0 \\<longrightarrow>\n              f X = t')\n 2. \\<And>s r nat.\n       \\<forall>YY f.\n          infinite YY \\<and> part nat s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  f X = t')) \\<Longrightarrow>\n       \\<forall>YY f.\n          infinite YY \\<and> part (Suc nat) s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = Suc nat \\<longrightarrow>\n                  f X = t'))", "apply(rule_tac x=\"YY\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r YY f.\n       infinite YY \\<and> part 0 s YY f \\<Longrightarrow>\n       \\<exists>t'.\n          YY \\<subseteq> YY \\<and>\n          infinite YY \\<and>\n          t' < s \\<and>\n          (\\<forall>X.\n              X \\<subseteq> YY \\<and>\n              finite X \\<and> card X = 0 \\<longrightarrow>\n              f X = t')\n 2. \\<And>s r nat.\n       \\<forall>YY f.\n          infinite YY \\<and> part nat s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  f X = t')) \\<Longrightarrow>\n       \\<forall>YY f.\n          infinite YY \\<and> part (Suc nat) s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = Suc nat \\<longrightarrow>\n                  f X = t'))", "apply(rule_tac x=\"f {}\" in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r YY f.\n       infinite YY \\<and> part 0 s YY f \\<Longrightarrow>\n       YY \\<subseteq> YY \\<and>\n       infinite YY \\<and>\n       f {} < s \\<and>\n       (\\<forall>X.\n           X \\<subseteq> YY \\<and>\n           finite X \\<and> card X = 0 \\<longrightarrow>\n           f X = f {})\n 2. \\<And>s r nat.\n       \\<forall>YY f.\n          infinite YY \\<and> part nat s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  f X = t')) \\<Longrightarrow>\n       \\<forall>YY f.\n          infinite YY \\<and> part (Suc nat) s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = Suc nat \\<longrightarrow>\n                  f X = t'))", "apply(force simp: part_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat.\n       \\<forall>YY f.\n          infinite YY \\<and> part nat s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  f X = t')) \\<Longrightarrow>\n       \\<forall>YY f.\n          infinite YY \\<and> part (Suc nat) s YY f \\<longrightarrow>\n          (\\<exists>Y' t'.\n              Y' \\<subseteq> YY \\<and>\n              infinite Y' \\<and>\n              t' < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y' \\<and>\n                  finite X \\<and> card X = Suc nat \\<longrightarrow>\n                  f X = t'))", "apply(intro allI impI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY \\<and> part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "(* now get the infinite g *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(subgoal_tac \"\n    \\<exists>g. \n    (\\<forall>m::nat. let (y,Y,t) = (g m) in\n    y \\<in> YY \\<and> y \\<notin> Y\n    \\<and> Y \\<subseteq> YY \\<and> infinite Y\n    \\<and> t < s \n    \\<and> (\\<forall>X. X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow> (f \\<circ> insert y) X = t))\n    \\<and> (\\<forall>m m'.     \n    let (y,Y,t) = (g m) in \n    let (y',Y',t') =(g (m+m'+1)) in \n    y' : Y\n    \\<and> Y' \\<subseteq> Y\n    )\n    \")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(cut_tac\n\n     P = \"\\<lambda>gn.\n     let (y,Y,t) = (gn) in \n     y \\<in> YY \\<and> y \\<notin> Y \n     \\<and> Y \\<subseteq> YY \\<and> infinite Y\n     \\<and> t < s\n     \\<and> (\\<forall>X. X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow> (f \\<circ> insert y) X = t)\n     \"\n \n     and R = \"\\<lambda>gn gn'.\n     let (y,Y,t) = (gn) in \n     let (y',Y',t') =(gn') in \n     y' : Y\n     \\<and> Y' \\<subseteq> Y\n     \"\n \n     in dc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        (\\<forall>x y z.\n            (let (ya, Y, t) = x; (y', Y', t') = y\n             in y' \\<in> Y \\<and> Y' \\<subseteq> Y) \\<and>\n            (let (y, Y, t) = y; (y', Y', t') = z\n             in y' \\<in> Y \\<and> Y' \\<subseteq> Y) \\<longrightarrow>\n            (let (y, Y, t) = x; (y', Y', t') = z\n             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)) \\<and>\n        (\\<exists>x0.\n            let (y, Y, t) = x0\n            in y \\<in> YY \\<and>\n               y \\<notin> Y \\<and>\n               Y \\<subseteq> YY \\<and>\n               infinite Y \\<and>\n               t < s \\<and>\n               (\\<forall>X.\n                   X \\<subseteq> Y \\<and>\n                   finite X \\<and> card X = nat \\<longrightarrow>\n                   (f \\<circ> insert y) X = t)) \\<and>\n        (\\<forall>x.\n            (let (y, Y, t) = x\n             in y \\<in> YY \\<and>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    (f \\<circ> insert y) X = t)) \\<longrightarrow>\n            (\\<exists>y.\n                (let (y, Y, t) = y\n                 in y \\<in> YY \\<and>\n                    y \\<notin> Y \\<and>\n                    Y \\<subseteq> YY \\<and>\n                    infinite Y \\<and>\n                    t < s \\<and>\n                    (\\<forall>X.\n                        X \\<subseteq> Y \\<and>\n                        finite X \\<and> card X = nat \\<longrightarrow>\n                        (f \\<circ> insert y) X = t)) \\<and>\n                (let (ya, Y, t) = x; (y', Y', t') = y\n                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))) \\<longrightarrow>\n        (\\<exists>fa.\n            (\\<forall>n.\n                let (y, Y, t) = fa n\n                in y \\<in> YY \\<and>\n                   y \\<notin> Y \\<and>\n                   Y \\<subseteq> YY \\<and>\n                   infinite Y \\<and>\n                   t < s \\<and>\n                   (\\<forall>X.\n                       X \\<subseteq> Y \\<and>\n                       finite X \\<and> card X = nat \\<longrightarrow>\n                       (f \\<circ> insert y) X = t)) \\<and>\n            (\\<forall>n m.\n                let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n                in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>x y z.\n                             (let (ya, Y, t) = x; (y', Y', t') = y\n                              in y' \\<in> Y \\<and> Y' \\<subseteq> Y) \\<and>\n                             (let (y, Y, t) = y; (y', Y', t') = z\n                              in y' \\<in> Y \\<and>\n                                 Y' \\<subseteq> Y) \\<longrightarrow>\n                             (let (y, Y, t) = x; (y', Y', t') = z\n                              in y' \\<in> Y \\<and> Y' \\<subseteq> Y)) \\<and>\n                         (\\<exists>x0.\n                             let (y, Y, t) = x0\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                         (\\<forall>x.\n                             (let (y, Y, t) = x\n                              in y \\<in> YY \\<and>\n                                 y \\<notin> Y \\<and>\n                                 Y \\<subseteq> YY \\<and>\n                                 infinite Y \\<and>\n                                 t < s \\<and>\n                                 (\\<forall>X.\n                                     X \\<subseteq> Y \\<and>\n                                     finite X \\<and>\n                                     card X = nat \\<longrightarrow>\n                                     (f \\<circ> insert y) X =\n                                     t)) \\<longrightarrow>\n                             (\\<exists>y.\n                                 (let (y, Y, t) = y\n                                  in y \\<in> YY \\<and>\n                                     y \\<notin> Y \\<and>\n                                     Y \\<subseteq> YY \\<and>\n                                     infinite Y \\<and>\n                                     t < s \\<and>\n                                     (\\<forall>X.\n   X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n   (f \\<circ> insert y) X = t)) \\<and>\n                                 (let (ya, Y, t) = x; (y', Y', t') = y\n                                  in y' \\<in> Y \\<and> Y' \\<subseteq> Y)))\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "(* 3 *)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> (\\<forall>x y z.\n                             (let (ya, Y, t) = x; (y', Y', t') = y\n                              in y' \\<in> Y \\<and> Y' \\<subseteq> Y) \\<and>\n                             (let (y, Y, t) = y; (y', Y', t') = z\n                              in y' \\<in> Y \\<and>\n                                 Y' \\<subseteq> Y) \\<longrightarrow>\n                             (let (y, Y, t) = x; (y', Y', t') = z\n                              in y' \\<in> Y \\<and> Y' \\<subseteq> Y)) \\<and>\n                         (\\<exists>x0.\n                             let (y, Y, t) = x0\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                         (\\<forall>x.\n                             (let (y, Y, t) = x\n                              in y \\<in> YY \\<and>\n                                 y \\<notin> Y \\<and>\n                                 Y \\<subseteq> YY \\<and>\n                                 infinite Y \\<and>\n                                 t < s \\<and>\n                                 (\\<forall>X.\n                                     X \\<subseteq> Y \\<and>\n                                     finite X \\<and>\n                                     card X = nat \\<longrightarrow>\n                                     (f \\<circ> insert y) X =\n                                     t)) \\<longrightarrow>\n                             (\\<exists>y.\n                                 (let (y, Y, t) = y\n                                  in y \\<in> YY \\<and>\n                                     y \\<notin> Y \\<and>\n                                     Y \\<subseteq> YY \\<and>\n                                     infinite Y \\<and>\n                                     t < s \\<and>\n                                     (\\<forall>X.\n   X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n   (f \\<circ> insert y) X = t)) \\<and>\n                                 (let (ya, Y, t) = x; (y', Y', t') = y\n                                  in y' \\<in> Y \\<and> Y' \\<subseteq> Y)))\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(intro conjI)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y z.\n                            (let (ya, Y, t) = x; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y) \\<and>\n                            (let (y, Y, t) = y; (y', Y', t') = z\n                             in y' \\<in> Y \\<and>\n                                Y' \\<subseteq> Y) \\<longrightarrow>\n                            (let (y, Y, t) = x; (y', Y', t') = z\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(intro allI impI, elim conjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f x y z.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (ya, Y, t) = x; (y', Y', t') = y\n        in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        let (y, Y, t) = y; (y', Y', t') = z\n        in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> let (y, Y, t) = x; (y', Y', t') = z\n                         in y' \\<in> Y \\<and> Y' \\<subseteq> Y\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp add: Let_def split_beta)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f x y z.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        fst y \\<in> fst (snd x) \\<and> fst (snd y) \\<subseteq> fst (snd x);\n        fst z \\<in> fst (snd y) \\<and>\n        fst (snd z) \\<subseteq> fst (snd y)\\<rbrakk>\n       \\<Longrightarrow> fst z \\<in> fst (snd x) \\<and>\n                         fst (snd z) \\<subseteq> fst (snd x)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(blast)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(subgoal_tac \"\\<exists>yy. yy \\<in> YY\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>yy. yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yy. yy \\<in> YY\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yy. yy \\<in> YY\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>yy. yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule infinite_mem)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> infinite YY\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>yy. yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>yy. yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=\"YY - {yy}\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        \\<forall>f.\n           infinite (YY - {yy}) \\<and>\n           part nat s (YY - {yy}) f \\<longrightarrow>\n           (\\<exists>Y' t'.\n               Y' \\<subseteq> YY - {yy} \\<and>\n               infinite Y' \\<and>\n               t' < s \\<and>\n               (\\<forall>X.\n                   X \\<subseteq> Y' \\<and>\n                   finite X \\<and> card X = nat \\<longrightarrow>\n                   f X = t'))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=\"f \\<circ> insert yy\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        infinite (YY - {yy}) \\<and>\n        part nat s (YY - {yy}) (f \\<circ> insert yy) \\<longrightarrow>\n        (\\<exists>Y' t'.\n            Y' \\<subseteq> YY - {yy} \\<and>\n            infinite Y' \\<and>\n            t' < s \\<and>\n            (\\<forall>X.\n                X \\<subseteq> Y' \\<and>\n                finite X \\<and> card X = nat \\<longrightarrow>\n                (f \\<circ> insert yy) X = t'))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(erule impE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> infinite (YY - {yy}) \\<and>\n                         part nat s (YY - {yy}) (f \\<circ> insert yy)\n 2. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> YY - {yy} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yy) X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> part nat s (YY - {yy})\n                          (\\<lambda>X. f (insert yy X))\n 2. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> YY - {yy} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yy) X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule part)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>s nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> infinite YY\n 2. \\<And>s nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> part (Suc nat) s YY f\n 3. \\<And>s nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY\\<rbrakk>\n       \\<Longrightarrow> yy \\<in> YY\n 4. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> YY - {yy} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yy) X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 6. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 7. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption+)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> YY - {yy} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yy) X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        Y' \\<subseteq> YY - {yy}; infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           (f \\<circ> insert yy) X = t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x0.\n                            let (y, Y, t) = x0\n                            in y \\<in> YY \\<and>\n                               y \\<notin> Y \\<and>\n                               Y \\<subseteq> YY \\<and>\n                               infinite Y \\<and>\n                               t < s \\<and>\n                               (\\<forall>X.\n                                   X \\<subseteq> Y \\<and>\n                                   finite X \\<and>\n                                   card X = nat \\<longrightarrow>\n                                   (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=\"(yy,Y',t')\" in exI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yy Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        Y' \\<subseteq> YY - {yy}; infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           (f \\<circ> insert yy) X = t'\\<rbrakk>\n       \\<Longrightarrow> let (y, Y, t) = (yy, Y', t')\n                         in y \\<in> YY \\<and>\n                            y \\<notin> Y \\<and>\n                            Y \\<subseteq> YY \\<and>\n                            infinite Y \\<and>\n                            t < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y \\<and>\n                                finite X \\<and>\n                                card X = nat \\<longrightarrow>\n                                (f \\<circ> insert y) X = t)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f yy Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yy \\<in> YY;\n        Y' \\<subseteq> YY - {yy}; infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert yy X) = t'\\<rbrakk>\n       \\<Longrightarrow> yy \\<notin> Y' \\<and> Y' \\<subseteq> YY\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(blast)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x.\n                            (let (y, Y, t) = x\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X =\n                                    t)) \\<longrightarrow>\n                            (\\<exists>y.\n                                (let (y, Y, t) = y\n                                 in y \\<in> YY \\<and>\n                                    y \\<notin> Y \\<and>\n                                    Y \\<subseteq> YY \\<and>\n                                    infinite Y \\<and>\n                                    t < s \\<and>\n                                    (\\<forall>X.\n  X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n  (f \\<circ> insert y) X = t)) \\<and>\n                                (let (ya, Y, t) = x; (y', Y', t') = y\n                                 in y' \\<in> Y \\<and> Y' \\<subseteq> Y))\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(intro allI impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = x\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = x; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(case_tac x)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f x a b c.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = x\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        x = (a, b, c)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = x; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rename_tac yx b Yx tx)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(subgoal_tac \"\\<exists>yx'. yx' \\<in> Yx\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); \\<exists>yx'. yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yx'. yx' \\<in> Yx\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>yx'. yx' \\<in> Yx\n 2. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); \\<exists>yx'. yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule infinite_mem)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx)\\<rbrakk>\n       \\<Longrightarrow> infinite Yx\n 2. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); \\<exists>yx'. yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(force)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); \\<exists>yx'. yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=\"Yx - {yx'}\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<forall>f.\n           infinite (Yx - {yx'}) \\<and>\n           part nat s (Yx - {yx'}) f \\<longrightarrow>\n           (\\<exists>Y' t'.\n               Y' \\<subseteq> Yx - {yx'} \\<and>\n               infinite Y' \\<and>\n               t' < s \\<and>\n               (\\<forall>X.\n                   X \\<subseteq> Y' \\<and>\n                   finite X \\<and> card X = nat \\<longrightarrow>\n                   f X = t'))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=\"f \\<circ> insert yx'\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        infinite (Yx - {yx'}) \\<and>\n        part nat s (Yx - {yx'}) (f \\<circ> insert yx') \\<longrightarrow>\n        (\\<exists>Y' t'.\n            Y' \\<subseteq> Yx - {yx'} \\<and>\n            infinite Y' \\<and>\n            t' < s \\<and>\n            (\\<forall>X.\n                X \\<subseteq> Y' \\<and>\n                finite X \\<and> card X = nat \\<longrightarrow>\n                (f \\<circ> insert yx') X = t'))\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(erule impE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> infinite (Yx - {yx'}) \\<and>\n                         part nat s (Yx - {yx'}) (f \\<circ> insert yx')\n 2. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        b \\<in> YY \\<and>\n        b \\<notin> Yx \\<and>\n        Yx \\<subseteq> YY \\<and>\n        infinite Yx \\<and>\n        tx < s \\<and>\n        (\\<forall>X.\n            X \\<subseteq> Yx \\<and>\n            finite X \\<and> card X = nat \\<longrightarrow>\n            f (insert b X) = tx);\n        yx = (b, Yx, tx); yx' \\<in> Yx\\<rbrakk>\n       \\<Longrightarrow> part nat s (Yx - {yx'})\n                          (\\<lambda>X. f (insert yx' X))\n 2. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> part nat s (Yx - {yx'})\n                          (\\<lambda>X. f (insert yx' X))\n 2. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule part)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> infinite Yx\n 2. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> part (Suc nat) s Yx f\n 3. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> Yx\n 4. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 6. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption+)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> part (Suc nat) s Yx f\n 2. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> Yx\n 3. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule part_subset)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> part (Suc nat) s (?YY132 s nat YY f yx b Yx tx yx')\n                          f\n 2. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> Yx \\<subseteq> ?YY132 s nat YY f yx b Yx tx yx'\n 3. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> Yx\n 4. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 6. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> Yx \\<subseteq> YY\n 2. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> Yx\n 3. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 5. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f; yx = (b, Yx, tx);\n        yx' \\<in> Yx; b \\<in> YY; b \\<notin> Yx; Yx \\<subseteq> YY;\n        infinite Yx; tx < s;\n        \\<forall>X.\n           X \\<subseteq> Yx \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert b X) = tx\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> Yx\n 2. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 4. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx;\n        \\<exists>Y' t'.\n           Y' \\<subseteq> Yx - {yx'} \\<and>\n           infinite Y' \\<and>\n           t' < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y' \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert yx') X = t')\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx' Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx; Y' \\<subseteq> Yx - {yx'};\n        infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           (f \\<circ> insert yx') X = t'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            (let (y, Y, t) = y\n                             in y \\<in> YY \\<and>\n                                y \\<notin> Y \\<and>\n                                Y \\<subseteq> YY \\<and>\n                                infinite Y \\<and>\n                                t < s \\<and>\n                                (\\<forall>X.\n                                    X \\<subseteq> Y \\<and>\n                                    finite X \\<and>\n                                    card X = nat \\<longrightarrow>\n                                    (f \\<circ> insert y) X = t)) \\<and>\n                            (let (ya, Y, t) = yx; (y', Y', t') = y\n                             in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=\"(yx',Y',t')\" in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f yx b Yx tx yx' Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        let (y, Y, t) = yx\n        in y \\<in> YY \\<and>\n           y \\<notin> Y \\<and>\n           Y \\<subseteq> YY \\<and>\n           infinite Y \\<and>\n           t < s \\<and>\n           (\\<forall>X.\n               X \\<subseteq> Y \\<and>\n               finite X \\<and> card X = nat \\<longrightarrow>\n               (f \\<circ> insert y) X = t);\n        yx = (b, Yx, tx); yx' \\<in> Yx; Y' \\<subseteq> Yx - {yx'};\n        infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           (f \\<circ> insert yx') X = t'\\<rbrakk>\n       \\<Longrightarrow> (let (y, Y, t) = (yx', Y', t')\n                          in y \\<in> YY \\<and>\n                             y \\<notin> Y \\<and>\n                             Y \\<subseteq> YY \\<and>\n                             infinite Y \\<and>\n                             t < s \\<and>\n                             (\\<forall>X.\n                                 X \\<subseteq> Y \\<and>\n                                 finite X \\<and>\n                                 card X = nat \\<longrightarrow>\n                                 (f \\<circ> insert y) X = t)) \\<and>\n                         (let (y, Y, t) = yx; (y', Y', t') = (yx', Y', t')\n                          in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f yx b Yx tx yx' Y' t'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        b \\<in> YY \\<and>\n        b \\<notin> Yx \\<and>\n        Yx \\<subseteq> YY \\<and>\n        infinite Yx \\<and>\n        tx < s \\<and>\n        (\\<forall>X.\n            X \\<subseteq> Yx \\<and>\n            finite X \\<and> card X = nat \\<longrightarrow>\n            f (insert b X) = tx);\n        yx = (b, Yx, tx); yx' \\<in> Yx; Y' \\<subseteq> Yx - {yx'};\n        infinite Y'; t' < s;\n        \\<forall>X.\n           X \\<subseteq> Y' \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert yx' X) = t'\\<rbrakk>\n       \\<Longrightarrow> yx' \\<in> YY \\<and>\n                         yx' \\<notin> Y' \\<and>\n                         Y' \\<subseteq> YY \\<and> Y' \\<subseteq> Yx\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 3. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(blast)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>fa.\n           (\\<forall>n.\n               let (y, Y, t) = fa n\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>n m.\n               let (y, Y, t) = fa n; (y', Y', t') = fa (n + m + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>g.\n                            (\\<forall>m.\n                                let (y, Y, t) = g m\n                                in y \\<in> YY \\<and>\n                                   y \\<notin> Y \\<and>\n                                   Y \\<subseteq> YY \\<and>\n                                   infinite Y \\<and>\n                                   t < s \\<and>\n                                   (\\<forall>X.\n X \\<subseteq> Y \\<and> finite X \\<and> card X = nat \\<longrightarrow>\n (f \\<circ> insert y) X = t)) \\<and>\n                            (\\<forall>m m'.\n                                let (y, Y, t) = g m;\n                                    (y', Y', t') = g (m + m' + 1)\n                                in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\n 2. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<exists>g.\n           (\\<forall>m.\n               let (y, Y, t) = g m\n               in y \\<in> YY \\<and>\n                  y \\<notin> Y \\<and>\n                  Y \\<subseteq> YY \\<and>\n                  infinite Y \\<and>\n                  t < s \\<and>\n                  (\\<forall>X.\n                      X \\<subseteq> Y \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      (f \\<circ> insert y) X = t)) \\<and>\n           (\\<forall>m m'.\n               let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n               in y' \\<in> Y \\<and> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(subgoal_tac \"\\<exists>s'. s' < s \\<and> infinite {n. (\\<lambda>n. let (y,Y,t) = g n in t) n = s'}\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(subgoal_tac \"\\<exists>s' \\<in> ((\\<lambda>n. let (Y, y, t) = g n in t) ` UNIV). infinite {n : UNIV. (let (Y, y, t) = g n in t) = s'}\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>range\n    (\\<lambda>n. let (Y, y, t) = g n in t).\n                            infinite\n                             {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "prefer 2"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'\\<in>range\n    (\\<lambda>n. let (Y, y, t) = g n in t).\n                            infinite\n                             {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule infinite_dom_finite_rng)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> infinite UNIV\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (range (\\<lambda>n. let (Y, y, t) = g n in t))\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 4. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> finite\n                          (range (\\<lambda>n. let (Y, y, t) = g n in t))\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp (no_asm) add: finite_nat_iff_bounded)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> \\<exists>k.\n                            range\n                             (\\<lambda>x.\n                                 case g x of (Y, y, t) \\<Rightarrow> t)\n                            \\<subseteq> {..<k}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=s in exI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y\\<rbrakk>\n       \\<Longrightarrow> range\n                          (\\<lambda>x.\n                              case g x of (Y, y, t) \\<Rightarrow> t)\n                         \\<subseteq> {..<s}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        x \\<in> range\n                 (\\<lambda>x.\n                     case g x of (Y, y, t) \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> {..<s}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp add: image_iff)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        \\<exists>xa. x = (case g xa of (Y, y, t) \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> x < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g x xa.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        x = (case g xa of (Y, y, t) \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> x < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=xa in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g x xa.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        x = (case g xa of (Y, y, t) \\<Rightarrow> t);\n        case g xa of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(force simp add: Let_def split_beta)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'\\<in>range (\\<lambda>n. let (Y, y, t) = g n in t).\n           infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim bexE conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' \\<in> range (\\<lambda>n. let (Y, y, t) = g n in t);\n        infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s'<s.\n                            infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=s' in exI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' \\<in> range (\\<lambda>n. let (Y, y, t) = g n in t);\n        infinite {n \\<in> UNIV. (let (Y, y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> s' < s \\<and>\n                         infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' \\<in> range (\\<lambda>x. case g x of (Y, y, t) \\<Rightarrow> t);\n        infinite {n. (case g n of (Y, y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(simp add: image_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        \\<exists>x. s' = (case g x of (Y, y, t) \\<Rightarrow> t);\n        infinite {n. (case g n of (Y, y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        infinite {n. (case g n of (Y, y, t) \\<Rightarrow> t) = s'};\n        s' = (case g x of (Y, y, t) \\<Rightarrow> t)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(drule_tac x=x in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        infinite {n. (case g n of (Y, y, t) \\<Rightarrow> t) = s'};\n        s' = (case g x of (Y, y, t) \\<Rightarrow> t);\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 2. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(force simp: Let_def split_beta)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        \\<exists>s'<s.\n           infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>Y' t'.\n                            Y' \\<subseteq> YY \\<and>\n                            infinite Y' \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> Y' \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=\"(\\<lambda>n. let (y,Y,t) = g n in y) ` {n. (\\<lambda>n. let (y,Y,t) = g n in t) n = s'}\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>t'.\n                            (\\<lambda>n. let (y, Y, t) = g n in y) `\n                            {n. (let (y, Y, t) = g n in t) = s'}\n                            \\<subseteq> YY \\<and>\n                            infinite\n                             ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                              {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                            t' < s \\<and>\n                            (\\<forall>X.\n                                X \\<subseteq> (\\<lambda>n.\n            let (y, Y, t) = g n in y) `\n        {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                                finite X \\<and>\n                                card X = Suc nat \\<longrightarrow>\n                                f X = t')", "apply(rule_tac x=s' in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "(* lift this because it is needed in later subgoals *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(subgoal_tac \"inj (\\<lambda>n. let (y, Y, t) = g n in y)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> inj (\\<lambda>n. let (y, Y, t) = g n in y)", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'}\\<rbrakk>\n       \\<Longrightarrow> inj (\\<lambda>n. let (y, Y, t) = g n in y)\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(simp add: inj_on_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            (case g x of (y, Y, t) \\<Rightarrow> y) =\n                            (case g y of\n                             (y, Y, t) \\<Rightarrow> y) \\<longrightarrow>\n                            x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "(* minor optimisation *)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            (case g x of (y, Y, t) \\<Rightarrow> y) =\n                            (case g y of\n                             (y, Y, t) \\<Rightarrow> y) \\<longrightarrow>\n                            x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(subgoal_tac \"\\<forall>x y. x < y \\<and> (let (y, Y, t) = g x in y) = (let (y, Y, t) = g y in y) \\<longrightarrow> x = y\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            (case g x of (y, Y, t) \\<Rightarrow> y) =\n                            (case g y of\n                             (y, Y, t) \\<Rightarrow> y) \\<longrightarrow>\n                            x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(intro allI impI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(subgoal_tac \"x < y | x = y | y < x\")"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y \\<or> x = y \\<or> y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> x < y \\<or> x = y \\<or> y < x\n 3. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 4. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "prefer 2"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> x < y \\<or> x = y \\<or> y < x\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y \\<or> x = y \\<or> y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 4. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(arith)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y \\<or> x = y \\<or> y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(elim disjE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=x in spec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        \\<forall>m'.\n           case g x of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (x + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        \\<forall>y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=y in spec)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        \\<forall>y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        case g y of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        \\<forall>y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        \\<forall>m'.\n           case g y of\n           (ya, Y, t) \\<Rightarrow>\n             case g (Suc (y + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x < y;\n        x < y \\<and>\n        (let (y, Y, t) = g x in y) =\n        (let (y, Y, t) = g y in y) \\<longrightarrow>\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 4. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 5. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(force simp: Let_def)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        x = y\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 3. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 4. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=y in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        case g y of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        \\<forall>x y.\n           x < y \\<and>\n           (let (y, Y, t) = g x in y) =\n           (let (y, Y, t) = g y in y) \\<longrightarrow>\n           x = y;\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        \\<forall>m'.\n           case g y of\n           (ya, Y, t) \\<Rightarrow>\n             case g (Suc (y + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        \\<forall>ya.\n           y < ya \\<and>\n           (let (y, Y, t) = g y in y) =\n           (let (y, Y, t) = g ya in y) \\<longrightarrow>\n           y = ya\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=x in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        \\<forall>ya.\n           y < ya \\<and>\n           (let (y, Y, t) = g y in y) =\n           (let (y, Y, t) = g ya in y) \\<longrightarrow>\n           y = ya;\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        \\<forall>ya.\n           y < ya \\<and>\n           (let (y, Y, t) = g y in y) =\n           (let (y, Y, t) = g ya in y) \\<longrightarrow>\n           y = ya;\n        \\<forall>m'.\n           case g x of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (x + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "back"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        (case g x of (y, Y, t) \\<Rightarrow> y) =\n        (case g y of (y, Y, t) \\<Rightarrow> y);\n        y < x;\n        y < x \\<and>\n        (let (y, Y, t) = g y in y) =\n        (let (y, Y, t) = g x in y) \\<longrightarrow>\n        y = x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(force simp: Let_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'}\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x y.\n                            x < y \\<and>\n                            (let (y, Y, t) = g x in y) =\n                            (let (y, Y, t) = g y in y) \\<longrightarrow>\n                            x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(intro allI impI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        x < y \\<and>\n        (let (y, Y, t) = g x in y) = (let (y, Y, t) = g y in y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=x in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        x < y \\<and>\n        (let (y, Y, t) = g x in y) = (let (y, Y, t) = g y in y);\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=x in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        x < y \\<and>\n        (let (y, Y, t) = g x in y) = (let (y, Y, t) = g y in y);\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t));\n        \\<forall>m'.\n           case g x of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (x + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(drule_tac x=\"y-(Suc x)\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' x y.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        x < y \\<and>\n        (let (y, Y, t) = g x in y) = (let (y, Y, t) = g y in y);\n        case g x of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t));\n        case g x of\n        (ya, Y, t) \\<Rightarrow>\n          case g (Suc (x + (y - Suc x))) of\n          (y', ab) \\<Rightarrow>\n            y' \\<in> Y \\<and>\n            (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x = y\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(force simp: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY \\<and>\n                         infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'}) \\<and>\n                         s' < s \\<and>\n                         (\\<forall>X.\n                             X \\<subseteq> (\\<lambda>n.\n         let (y, Y, t) = g n in y) `\n     {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                             finite X \\<and>\n                             card X = Suc nat \\<longrightarrow>\n                             f X = s')", "apply(intro allI conjI)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'})\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 4. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(drule_tac x=xa in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y);\n        \\<forall>f.\n           infinite xa \\<and> part nat s xa f \\<longrightarrow>\n           (\\<exists>Y' t'.\n               Y' \\<subseteq> xa \\<and>\n               infinite Y' \\<and>\n               t' < s \\<and>\n               (\\<forall>X.\n                   X \\<subseteq> Y' \\<and>\n                   finite X \\<and> card X = nat \\<longrightarrow>\n                   f X = t'))\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                         {n. (let (y, Y, t) = g n in t) = s'}\n                         \\<subseteq> YY\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'})\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 4. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(force simp add: Let_def split_beta)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> infinite\n                          ((\\<lambda>n. let (y, Y, t) = g n in y) `\n                           {n. (let (y, Y, t) = g n in t) = s'})\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 3. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(rule infinite_inj_infinite_image)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> infinite {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> inj_on (\\<lambda>n. let (y, Y, t) = g n in y)\n                          {n. (let (y, Y, t) = g n in t) = s'}\n 3. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 4. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(assumption)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> inj_on (\\<lambda>n. let (y, Y, t) = g n in y)\n                          {n. (let (y, Y, t) = g n in t) = s'}\n 2. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 3. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(simp add: inj_on_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s r nat YY f g s'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> s' < s\n 2. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "(* difficult goal- need that the other members of X all occur in Ya *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y)\\<rbrakk>\n       \\<Longrightarrow> X \\<subseteq> (\\<lambda>n.\n     let (y, Y, t) = g n in y) `\n {n. (let (y, Y, t) = g n in t) = s'} \\<and>\n                         finite X \\<and> card X = Suc nat \\<longrightarrow>\n                         f X = s'", "apply(intro allI impI, elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s r nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y' t'.\n                       Y' \\<subseteq> YY \\<and>\n                       infinite Y' \\<and>\n                       t' < s \\<and>\n                       (\\<forall>X.\n                           X \\<subseteq> Y' \\<and>\n                           finite X \\<and> card X = nat \\<longrightarrow>\n                           f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           let (y, Y, t) = g m\n           in y \\<in> YY \\<and>\n              y \\<notin> Y \\<and>\n              Y \\<subseteq> YY \\<and>\n              infinite Y \\<and>\n              t < s \\<and>\n              (\\<forall>X.\n                  X \\<subseteq> Y \\<and>\n                  finite X \\<and> card X = nat \\<longrightarrow>\n                  (f \\<circ> insert y) X = t);\n        \\<forall>m m'.\n           let (y, Y, t) = g m; (y', Y', t') = g (m + m' + 1)\n           in y' \\<in> Y \\<and> Y' \\<subseteq> Y;\n        s' < s; infinite {n. (let (y, Y, t) = g n in t) = s'};\n        inj (\\<lambda>n. let (y, Y, t) = g n in y);\n        X \\<subseteq> (\\<lambda>n. let (y, Y, t) = g n in y) `\n                      {n. (let (y, Y, t) = g n in t) = s'};\n        finite X; card X = Suc nat\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(simp add: subset_image_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        \\<exists>AA\\<subseteq>{n. (case g n of (y, Y, t) \\<Rightarrow> t) =\n                                  s'}.\n           X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        finite X; card X = Suc nat\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(subgoal_tac \"\\<exists>a. a \\<in> AA \\<and> (\\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a')\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        \\<exists>a.\n           a \\<in> AA \\<and>\n           (\\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a')\\<rbrakk>\n       \\<Longrightarrow> f X = s'\n 2. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            a \\<in> AA \\<and>\n                            (\\<forall>a'.\n                                a' \\<in> AA \\<longrightarrow> a \\<le> a')", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a.\n                            a \\<in> AA \\<and>\n                            (\\<forall>a'.\n                                a' \\<in> AA \\<longrightarrow> a \\<le> a')\n 2. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        \\<exists>a.\n           a \\<in> AA \\<and>\n           (\\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a')\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(rule not_empty_least)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> AA \\<noteq> {}\n 2. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        \\<exists>a.\n           a \\<in> AA \\<and>\n           (\\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a')\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        \\<exists>a.\n           a \\<in> AA \\<and>\n           (\\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a')\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(elim exE conjE)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a'\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(case_tac \"g a\" rule: prod.exhaust)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a x1 x2.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(rename_tac b)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a x1 b.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (x1, b)\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(case_tac b rule: prod.exhaust)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a x1 b x1a x2.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (x1, b); b = (x1a, x2)\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(rename_tac ya b Ya ta)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta)\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(subgoal_tac \"ya : X\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f X = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta)\\<rbrakk>\n       \\<Longrightarrow> ya \\<in> X", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta)\\<rbrakk>\n       \\<Longrightarrow> ya \\<in> X\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(force intro!: rev_image_eqI simp: Let_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(drule_tac s=X in sym)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = s'", "apply(subgoal_tac \"f X = (f \\<circ> insert ya) (X - {ya})\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = (f \\<circ> insert ya) (X - {ya})\\<rbrakk>\n       \\<Longrightarrow> f X = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X)\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac x=a in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X);\n        case g a of\n        (y, ab) \\<Rightarrow>\n          y \\<in> YY \\<and>\n          (case ab of\n           (Y, t) \\<Rightarrow>\n             y \\<notin> Y \\<and>\n             Y \\<subseteq> YY \\<and>\n             infinite Y \\<and>\n             t < s \\<and>\n             (\\<forall>X.\n                 X \\<subseteq> Y \\<and>\n                 finite X \\<and> card X = nat \\<longrightarrow>\n                 f (insert y X) = t))\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp add: Let_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X);\n        ya \\<in> YY \\<and>\n        ya \\<notin> Ya \\<and>\n        Ya \\<subseteq> YY \\<and>\n        infinite Ya \\<and>\n        ta < s \\<and>\n        (\\<forall>X.\n            X \\<subseteq> Ya \\<and>\n            finite X \\<and> card X = nat \\<longrightarrow>\n            f (insert ya X) = ta)\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(elim exE conjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        \\<forall>X.\n           X \\<subseteq> Ya \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert ya X) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac x=\"X-{ya}\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        \\<forall>X.\n           X \\<subseteq> Ya \\<and>\n           finite X \\<and> card X = nat \\<longrightarrow>\n           f (insert ya X) = ta;\n        \\<forall>f.\n           infinite (X - {ya}) \\<and>\n           part nat s (X - {ya}) f \\<longrightarrow>\n           (\\<exists>Y'\\<subseteq>X - {ya}.\n               infinite Y' \\<and>\n               (\\<exists>t'<s.\n                   \\<forall>X.\n                      X \\<subseteq> Y' \\<and>\n                      finite X \\<and> card X = nat \\<longrightarrow>\n                      f X = t'))\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "back"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X - {ya} \\<subseteq> Ya \\<and>\n        finite (X - {ya}) \\<and> card (X - {ya}) = nat \\<longrightarrow>\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(erule impE)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s\\<rbrakk>\n       \\<Longrightarrow> X - {ya} \\<subseteq> Ya \\<and>\n                         finite (X - {ya}) \\<and> card (X - {ya}) = nat\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s\\<rbrakk>\n       \\<Longrightarrow> X - {ya} \\<subseteq> Ya\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(rule)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Ya\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(rule)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac t=X in sym)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X; f X = f (insert ya X);\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        x \\<in> X - {ya};\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        ya \\<in> (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        x \\<in> (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) `\n                AA \\<and>\n        x \\<noteq> ya;\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp add: image_iff)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        \\<exists>x\\<in>AA. ya = (case g x of (y, Y, t) \\<Rightarrow> y);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        (\\<exists>xa\\<in>AA.\n            x = (case g xa of (y, Y, t) \\<Rightarrow> y)) \\<and>\n        x \\<noteq> ya;\n        X =\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(elim bexE exE conjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa xb.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; xb \\<in> AA;\n        x = (case g xb of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(rename_tac a')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(subgoal_tac \"a' \\<noteq> a\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> a' \\<noteq> a\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 5. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "prefer 2"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y)\\<rbrakk>\n       \\<Longrightarrow> a' \\<noteq> a\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 5. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(force)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac x=a in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a;\n        \\<forall>m'.\n           case g a of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (a + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac x=\"a'-Suc a\" in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a;\n        \\<forall>m'.\n           case g a of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (a + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        a' - Suc a \\<in> AA \\<longrightarrow> a \\<le> a' - Suc a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "back"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y);\n        finite ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA);\n        card ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA) =\n        f (insert ya\n            ((\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA));\n        ya \\<in> YY; ya \\<notin> Ya; Ya \\<subseteq> YY; infinite Ya; ta < s;\n        X = (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA;\n        xa \\<in> AA; ya = (case g xa of (y, Y, t) \\<Rightarrow> y);\n        x \\<noteq> ya; a' \\<in> AA;\n        x = (case g a' of (y, Y, t) \\<Rightarrow> y); a' \\<noteq> a;\n        case g a of\n        (y, Y, t) \\<Rightarrow>\n          case g (Suc (a + (a' - Suc a))) of\n          (y', ab) \\<Rightarrow>\n            y' \\<in> Y \\<and>\n            (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y)\\<rbrakk>\n       \\<Longrightarrow> x \\<in> ?A615 s nat YY f g s'\n                                  ((\\<lambda>x.\n case g x of (y, Y, t) \\<Rightarrow> y) `\n                                   AA)\n                                  AA a ya (Ya, ta) Ya ta x\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp add: Let_def split_beta)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a'.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); fst (g a') \\<noteq> fst (g xa); a' \\<in> AA;\n        x = fst (g a'); a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya\\<rbrakk>\n       \\<Longrightarrow> fst (g a')\n                         \\<in> ?A615 s nat YY f g s'\n                                ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                (fst (g xa)) (Ya, ta) Ya ta (fst (g a'))\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(case_tac \"g a'\" rule: prod.exhaust)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); fst (g a') \\<noteq> fst (g xa); a' \\<in> AA;\n        x = fst (g a'); a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2)\\<rbrakk>\n       \\<Longrightarrow> fst (g a')\n                         \\<in> ?A615 s nat YY f g s'\n                                ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                (fst (g xa)) (Ya, ta) Ya ta (fst (g a'))\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(case_tac ba rule: prod.exhaust)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); fst (g a') \\<noteq> fst (g xa); a' \\<in> AA;\n        x = fst (g a'); a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> fst (g a')\n                         \\<in> ?A615 s nat YY f g s'\n                                ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                (fst (g xa)) (Ya, ta) Ya ta (fst (g a'))\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(rename_tac ya' ba Ya' ta')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); fst (g a') \\<noteq> fst (g xa); a' \\<in> AA;\n        x = fst (g a'); a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> fst (g a')\n                         \\<in> ?A615 s nat YY f g s'\n                                ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                (fst (g xa)) (Ya, ta) Ya ta (fst (g a'))\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp add: Let_def split_beta)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); x1 \\<noteq> fst (g xa); a' \\<in> AA; x = x1;\n        a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> ?A615 s nat YY f g s'\n                                   ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                   (fst (g xa)) (Ya, ta) Ya ta x1\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(drule_tac x=a' in spec)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); x1 \\<noteq> fst (g xa); a' \\<in> AA; x = x1;\n        a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a);\n        a' \\<in> AA \\<longrightarrow> a \\<le> a'\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> ?A615 s nat YY f g s'\n                                   ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                   (fst (g xa)) (Ya, ta) Ya ta x1\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(erule impE)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); x1 \\<noteq> fst (g xa); a' \\<in> AA; x = x1;\n        a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a)\\<rbrakk>\n       \\<Longrightarrow> a' \\<in> AA\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); x1 \\<noteq> fst (g xa); a' \\<in> AA; x = x1;\n        a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a); a \\<le> a'\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> ?A615 s nat YY f g s'\n                                   ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                   (fst (g xa)) (Ya, ta) Ya ta x1\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 5. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(force)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x xa a' x1 x2 x1a x2a.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f; s' < s;\n        infinite {n. snd (snd (g n)) = s'}; inj (\\<lambda>n. fst (g n));\n        finite ((\\<lambda>x. fst (g x)) ` AA);\n        card ((\\<lambda>x. fst (g x)) ` AA) = Suc nat;\n        AA \\<subseteq> {n. snd (snd (g n)) = s'}; a \\<in> AA;\n        g a = (fst (g xa), Ya, ta); b = (Ya, ta);\n        f ((\\<lambda>x. fst (g x)) ` AA) =\n        f (insert (fst (g xa)) ((\\<lambda>x. fst (g x)) ` AA));\n        fst (g xa) \\<in> YY; fst (g xa) \\<notin> Ya; Ya \\<subseteq> YY;\n        infinite Ya; ta < s; X = (\\<lambda>x. fst (g x)) ` AA; xa \\<in> AA;\n        ya = fst (g xa); x1 \\<noteq> fst (g xa); a' \\<in> AA; x = x1;\n        a' \\<noteq> a;\n        fst (g (Suc (a + (a' - Suc a)))) \\<in> Ya \\<and>\n        fst (snd (g (Suc (a + (a' - Suc a))))) \\<subseteq> Ya;\n        g a' = (x1, x2); ba = (x1a, x2a); a \\<le> a'\\<rbrakk>\n       \\<Longrightarrow> x1 \\<in> ?A615 s nat YY f g s'\n                                   ((\\<lambda>x. fst (g x)) ` AA) AA a\n                                   (fst (g xa)) (Ya, ta) Ya ta x1\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> ?A615 s nat YY f g s' X AA a ya b Ya ta x\n                         \\<subseteq> Ya\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 4. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(force)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta x.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s; x \\<in> X - {ya}\\<rbrakk>\n       \\<Longrightarrow> Ya \\<subseteq> Ya\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(force simp add: card_Diff_singleton_if)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(subgoal_tac \"ta = s'\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta; ta = s'\\<rbrakk>\n       \\<Longrightarrow> f (insert ya X) = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> ta = s'\n 3. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA = X;\n        f X = f (insert ya X); ya \\<in> YY; ya \\<notin> Ya;\n        Ya \\<subseteq> YY; infinite Ya; ta < s;\n        f (insert ya (X - {ya})) = ta\\<rbrakk>\n       \\<Longrightarrow> ta = s'\n 2. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(force)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, b); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = (f \\<circ> insert ya) (X - {ya})", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> f X = f (insert ya X)", "apply(rule_tac f=f in arg_cong)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s nat YY f g s' X AA a ya b Ya ta.\n       \\<lbrakk>\\<forall>YY f.\n                   infinite YY \\<and> part nat s YY f \\<longrightarrow>\n                   (\\<exists>Y'\\<subseteq>YY.\n                       infinite Y' \\<and>\n                       (\\<exists>t'<s.\n                           \\<forall>X.\n                              X \\<subseteq> Y' \\<and>\n                              finite X \\<and> card X = nat \\<longrightarrow>\n                              f X = t'));\n        infinite YY; part (Suc nat) s YY f;\n        \\<forall>m.\n           case g m of\n           (y, ab) \\<Rightarrow>\n             y \\<in> YY \\<and>\n             (case ab of\n              (Y, t) \\<Rightarrow>\n                y \\<notin> Y \\<and>\n                Y \\<subseteq> YY \\<and>\n                infinite Y \\<and>\n                t < s \\<and>\n                (\\<forall>X.\n                    X \\<subseteq> Y \\<and>\n                    finite X \\<and> card X = nat \\<longrightarrow>\n                    f (insert y X) = t));\n        \\<forall>m m'.\n           case g m of\n           (y, Y, t) \\<Rightarrow>\n             case g (Suc (m + m')) of\n             (y', ab) \\<Rightarrow>\n               y' \\<in> Y \\<and>\n               (case ab of (Y', t') \\<Rightarrow> Y' \\<subseteq> Y);\n        s' < s; infinite {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        inj (\\<lambda>n. case g n of (y, Y, t) \\<Rightarrow> y); finite X;\n        card X = Suc nat;\n        AA \\<subseteq> {n. (case g n of (y, Y, t) \\<Rightarrow> t) = s'};\n        a \\<in> AA; \\<forall>a'. a' \\<in> AA \\<longrightarrow> a \\<le> a';\n        g a = (ya, Ya, ta); b = (Ya, ta); ya \\<in> X;\n        (\\<lambda>x. case g x of (y, Y, t) \\<Rightarrow> y) ` AA =\n        X\\<rbrakk>\n       \\<Longrightarrow> X = insert ya X", "apply(force)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}