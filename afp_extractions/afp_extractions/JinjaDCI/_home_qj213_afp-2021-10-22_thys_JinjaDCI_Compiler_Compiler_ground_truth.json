{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaDCI/Compiler/Compiler.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaDCI", "problem_names": ["theorem comp_correct_NonStatic:\nassumes wf: \"wf_J_prog P\"\nand \"method\": \"P \\<turnstile> C sees M,NonStatic:Ts\\<rightarrow>T = (pns,body) in C\"\nand eval: \"P \\<turnstile> \\<langle>body,(h,[this#pns [\\<mapsto>] vs],sh)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l',sh')\\<rangle>\"\nand sizes: \"size vs = size pns + 1\"    \"size rest = max_vars body\"\nshows \"J2JVM P \\<turnstile> (None,h,[([],vs@rest,C,M,0,No_ics)],sh) -jvm\\<rightarrow> (exception e',h',[],sh')\"", "theorem comp_correct_Static:\nassumes wf: \"wf_J_prog P\"\nand \"method\": \"P \\<turnstile> C sees M,Static:Ts\\<rightarrow>T = (pns,body) in C\"\nand eval: \"P \\<turnstile> \\<langle>body,(h,[pns [\\<mapsto>] vs],sh)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l',sh')\\<rangle>\"\nand sizes: \"size vs = size pns\"    \"size rest = max_vars body\"\nand nclinit: \"M \\<noteq> clinit\"\nshows \"J2JVM P \\<turnstile> (None,h,[([],vs@rest,C,M,0,No_ics)],sh) -jvm\\<rightarrow> (exception e',h',[],sh')\""], "translations": [["", "theorem comp_correct_NonStatic:\nassumes wf: \"wf_J_prog P\"\nand \"method\": \"P \\<turnstile> C sees M,NonStatic:Ts\\<rightarrow>T = (pns,body) in C\"\nand eval: \"P \\<turnstile> \\<langle>body,(h,[this#pns [\\<mapsto>] vs],sh)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l',sh')\\<rangle>\"\nand sizes: \"size vs = size pns + 1\"    \"size rest = max_vars body\"\nshows \"J2JVM P \\<turnstile> (None,h,[([],vs@rest,C,M,0,No_ics)],sh) -jvm\\<rightarrow> (exception e',h',[],sh')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "let ?P\\<^sub>1 = \"compP\\<^sub>1 P\""], ["proof (state)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have nclinit: \"M \\<noteq> clinit\""], ["proof (prove)\ngoal (1 subgoal):\n 1. M \\<noteq> clinit", "using wf_sees_clinit1[OF wf] visible_method_exists[OF \"method\"]\n    sees_method_idemp[OF \"method\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>class P ?C = \\<lfloor>?a\\<rfloor>;\n   P \\<turnstile> ?C sees clinit, ?b :  ?Ts\\<rightarrow>?T = ?m in ?D\\<rbrakk>\n  \\<Longrightarrow> ?b = Static \\<and>\n                    ?Ts = [] \\<and> ?T = Void \\<and> ?D = ?C\n  \\<exists>D' fs ms.\n     class P C = \\<lfloor>(D', fs, ms)\\<rfloor> \\<and>\n     map_of ms M = \\<lfloor>(NonStatic, Ts, T, pns, body)\\<rfloor>\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in C\n\ngoal (1 subgoal):\n 1. M \\<noteq> clinit", "by fastforce"], ["proof (state)\nthis:\n  M \\<noteq> clinit\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have wf\\<^sub>1: \"wf_J\\<^sub>1_prog ?P\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J\\<^sub>1_prog (compP\\<^sub>1 P)", "by(rule compP\\<^sub>1_pres_wf[OF wf])"], ["proof (state)\nthis:\n  wf_J\\<^sub>1_prog (compP\\<^sub>1 P)\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have fv: \"fv body \\<subseteq> set (this#pns)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv body \\<subseteq> set (this # pns)", "using wf_prog_wwf_prog[OF wf] \"method\""], ["proof (prove)\nusing this:\n  wwf_J_prog P\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in C\n\ngoal (1 subgoal):\n 1. fv body \\<subseteq> set (this # pns)", "by(auto dest!:sees_wf_mdecl simp:wf_mdecl_def)"], ["proof (state)\nthis:\n  fv body \\<subseteq> set (this # pns)\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have init: \"[this#pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m [this#pns [\\<mapsto>] vs@rest]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [this # pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m\n    [this # pns [\\<mapsto>] vs @ rest]", "using sizes"], ["proof (prove)\nusing this:\n  length vs = length pns + 1\n  length rest = max_vars body\n\ngoal (1 subgoal):\n 1. [this # pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m\n    [this # pns [\\<mapsto>] vs @ rest]", "by simp"], ["proof (state)\nthis:\n  [this # pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m\n  [this # pns [\\<mapsto>] vs @ rest]\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have \"?P\\<^sub>1 \\<turnstile> C sees M,NonStatic: Ts\\<rightarrow>T = (compE\\<^sub>1 (this#pns) body) in C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compP\\<^sub>1\n     P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                         (this # pns) body in C", "using sees_method_compP[OF \"method\", of \"\\<lambda>b (pns,e). compE\\<^sub>1 (case b of NonStatic \\<Rightarrow> this#pns | Static \\<Rightarrow> pns) e\"]"], ["proof (prove)\nusing this:\n  compP\n   (\\<lambda>b (pns, e).\n       compE\\<^sub>1\n        (case b of Static \\<Rightarrow> pns\n         | NonStatic \\<Rightarrow> this # pns)\n        e)\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (case (pns,\n                             body) of\n                       (pns, e) \\<Rightarrow>\n                         compE\\<^sub>1\n                          (case NonStatic of Static \\<Rightarrow> pns\n                           | NonStatic \\<Rightarrow> this # pns)\n                          e) in C\n\ngoal (1 subgoal):\n 1. compP\\<^sub>1\n     P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                         (this # pns) body in C", "by(simp)"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                       (this # pns) body in C\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "moreover"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                       (this # pns) body in C\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "obtain ls' where\n    \"?P\\<^sub>1 \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this#pns) body, (h, vs@rest, sh)\\<rangle> \\<Rightarrow> \\<langle>fin\\<^sub>1 e', (h',ls', sh')\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ls'.\n        compP\\<^sub>1\n         P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                                 (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                                \\<langle>fin\\<^sub>1 e',\n                                 (h', ls', sh')\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using eval\\<^sub>1_eval[OF wf_prog_wwf_prog[OF wf] eval fv init] sizes"], ["proof (prove)\nusing this:\n  length (this # pns) + max_vars body\n  \\<le> length (vs @ rest) \\<Longrightarrow>\n  \\<exists>ls'.\n     compP\\<^sub>1\n      P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                              (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                             \\<langle>fin\\<^sub>1 e',\n                              (h', ls', sh')\\<rangle> \\<and>\n     l' \\<subseteq>\\<^sub>m [this # pns [\\<mapsto>] ls']\n  length vs = length pns + 1\n  length rest = max_vars body\n\ngoal (1 subgoal):\n 1. (\\<And>ls'.\n        compP\\<^sub>1\n         P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                                 (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                                \\<langle>fin\\<^sub>1 e',\n                                 (h', ls', sh')\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "ultimately"], ["proof (chain)\npicking this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                       (this # pns) body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                       (this # pns) body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "using comp\\<^sub>2_correct[OF wf\\<^sub>1] eval_final[OF eval] nclinit"], ["proof (prove)\nusing this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = compE\\<^sub>1\n                       (this # pns) body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 (this # pns) body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n  \\<lbrakk>compP\\<^sub>1\n            P \\<turnstile> ?C sees ?M, ?b :  ?Ts\\<rightarrow>?T = ?body in ?C;\n   compP\\<^sub>1\n    P \\<turnstile>\\<^sub>1 \\<langle>?body,\n                            (?h, ?ls, ?sh)\\<rangle> \\<Rightarrow>\n                           \\<langle>?e',(?h', ?ls', ?sh')\\<rangle>;\n   ?M \\<noteq> clinit\\<rbrakk>\n  \\<Longrightarrow> compP\\<^sub>2 (compP\\<^sub>1 P) \\<turnstile>\n                    (None, ?h, [([], ?ls, ?C, ?M, 0, No_ics)],\n                     ?sh) -jvm\\<rightarrow>\n                    (exception ?e', ?h', [], ?sh')\n  final e'\n  M \\<noteq> clinit\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "by(fastforce simp add:J2JVM_def final_def)"], ["proof (state)\nthis:\n  J2JVM P \\<turnstile>\n  (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n  (exception e', h', [], sh')\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "theorem comp_correct_Static:\nassumes wf: \"wf_J_prog P\"\nand \"method\": \"P \\<turnstile> C sees M,Static:Ts\\<rightarrow>T = (pns,body) in C\"\nand eval: \"P \\<turnstile> \\<langle>body,(h,[pns [\\<mapsto>] vs],sh)\\<rangle> \\<Rightarrow> \\<langle>e',(h',l',sh')\\<rangle>\"\nand sizes: \"size vs = size pns\"    \"size rest = max_vars body\"\nand nclinit: \"M \\<noteq> clinit\"\nshows \"J2JVM P \\<turnstile> (None,h,[([],vs@rest,C,M,0,No_ics)],sh) -jvm\\<rightarrow> (exception e',h',[],sh')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "let ?P\\<^sub>1 = \"compP\\<^sub>1 P\""], ["proof (state)\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have wf\\<^sub>1: \"wf_J\\<^sub>1_prog ?P\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J\\<^sub>1_prog (compP\\<^sub>1 P)", "by(rule compP\\<^sub>1_pres_wf[OF wf])"], ["proof (state)\nthis:\n  wf_J\\<^sub>1_prog (compP\\<^sub>1 P)\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have fv: \"fv body \\<subseteq> set pns\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fv body \\<subseteq> set pns", "using wf_prog_wwf_prog[OF wf] \"method\""], ["proof (prove)\nusing this:\n  wwf_J_prog P\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in C\n\ngoal (1 subgoal):\n 1. fv body \\<subseteq> set pns", "by(auto dest!:sees_wf_mdecl simp:wf_mdecl_def)"], ["proof (state)\nthis:\n  fv body \\<subseteq> set pns\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have init: \"[pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m [pns [\\<mapsto>] vs@rest]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m [pns [\\<mapsto>] vs @ rest]", "using sizes"], ["proof (prove)\nusing this:\n  length vs = length pns\n  length rest = max_vars body\n\ngoal (1 subgoal):\n 1. [pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m [pns [\\<mapsto>] vs @ rest]", "by simp"], ["proof (state)\nthis:\n  [pns [\\<mapsto>] vs] \\<subseteq>\\<^sub>m [pns [\\<mapsto>] vs @ rest]\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "have \"?P\\<^sub>1 \\<turnstile> C sees M,Static: Ts\\<rightarrow>T = (compE\\<^sub>1 pns body) in C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compP\\<^sub>1\n     P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                      body in C", "using sees_method_compP[OF \"method\", of \"\\<lambda>b (pns,e). compE\\<^sub>1 (case b of NonStatic \\<Rightarrow> this#pns | Static \\<Rightarrow> pns) e\"]"], ["proof (prove)\nusing this:\n  compP\n   (\\<lambda>b (pns, e).\n       compE\\<^sub>1\n        (case b of Static \\<Rightarrow> pns\n         | NonStatic \\<Rightarrow> this # pns)\n        e)\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (case (pns,\n                          body) of\n                    (pns, e) \\<Rightarrow>\n                      compE\\<^sub>1\n                       (case Static of Static \\<Rightarrow> pns\n                        | NonStatic \\<Rightarrow> this # pns)\n                       e) in C\n\ngoal (1 subgoal):\n 1. compP\\<^sub>1\n     P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                      body in C", "by(simp)"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                    body in C\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "moreover"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                    body in C\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "obtain ls' where\n    \"?P\\<^sub>1 \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body, (h, vs@rest, sh)\\<rangle> \\<Rightarrow> \\<langle>fin\\<^sub>1 e', (h',ls', sh')\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ls'.\n        compP\\<^sub>1\n         P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                                 (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                                \\<langle>fin\\<^sub>1 e',\n                                 (h', ls', sh')\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using eval\\<^sub>1_eval[OF wf_prog_wwf_prog[OF wf] eval fv init] sizes"], ["proof (prove)\nusing this:\n  length pns + max_vars body \\<le> length (vs @ rest) \\<Longrightarrow>\n  \\<exists>ls'.\n     compP\\<^sub>1\n      P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                              (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                             \\<langle>fin\\<^sub>1 e',\n                              (h', ls', sh')\\<rangle> \\<and>\n     l' \\<subseteq>\\<^sub>m [pns [\\<mapsto>] ls']\n  length vs = length pns\n  length rest = max_vars body\n\ngoal (1 subgoal):\n 1. (\\<And>ls'.\n        compP\\<^sub>1\n         P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                                 (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                                \\<langle>fin\\<^sub>1 e',\n                                 (h', ls', sh')\\<rangle> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "ultimately"], ["proof (chain)\npicking this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                    body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>", "show ?thesis"], ["proof (prove)\nusing this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                    body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "using comp\\<^sub>2_correct[OF wf\\<^sub>1] eval_final[OF eval] nclinit"], ["proof (prove)\nusing this:\n  compP\\<^sub>1\n   P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = compE\\<^sub>1 pns\n                    body in C\n  compP\\<^sub>1\n   P \\<turnstile>\\<^sub>1 \\<langle>compE\\<^sub>1 pns body,\n                           (h, vs @ rest, sh)\\<rangle> \\<Rightarrow>\n                          \\<langle>fin\\<^sub>1 e',(h', ls', sh')\\<rangle>\n  \\<lbrakk>compP\\<^sub>1\n            P \\<turnstile> ?C sees ?M, ?b :  ?Ts\\<rightarrow>?T = ?body in ?C;\n   compP\\<^sub>1\n    P \\<turnstile>\\<^sub>1 \\<langle>?body,\n                            (?h, ?ls, ?sh)\\<rangle> \\<Rightarrow>\n                           \\<langle>?e',(?h', ?ls', ?sh')\\<rangle>;\n   ?M \\<noteq> clinit\\<rbrakk>\n  \\<Longrightarrow> compP\\<^sub>2 (compP\\<^sub>1 P) \\<turnstile>\n                    (None, ?h, [([], ?ls, ?C, ?M, 0, No_ics)],\n                     ?sh) -jvm\\<rightarrow>\n                    (exception ?e', ?h', [], ?sh')\n  final e'\n  M \\<noteq> clinit\n\ngoal (1 subgoal):\n 1. J2JVM P \\<turnstile>\n    (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n    (exception e', h', [], sh')", "by(fastforce simp add:J2JVM_def final_def)"], ["proof (state)\nthis:\n  J2JVM P \\<turnstile>\n  (None, h, [([], vs @ rest, C, M, 0, No_ics)], sh) -jvm\\<rightarrow>\n  (exception e', h', [], sh')\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "end"]]}