{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaDCI/Common/Exceptions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaDCI", "problem_names": ["lemmas sys_xcpts_defs = NullPointer_def ClassCast_def OutOfMemory_def NoClassDefFoundError_def\n                       IncompatibleClassChangeError_def NoSuchFieldError_def NoSuchMethodError_def", "lemma Start_nsys_xcpts: \"Start \\<notin> sys_xcpts\"", "lemma Start_nsys_xcpts1 [simp]: \"Start \\<noteq> NullPointer\" \"Start \\<noteq> ClassCast\"\n \"Start \\<noteq> OutOfMemory\" \"Start \\<noteq> NoClassDefFoundError\"\n \"Start \\<noteq> IncompatibleClassChangeError\" \"Start \\<noteq> NoSuchFieldError\"\n \"Start \\<noteq> NoSuchMethodError\"", "lemma Start_nsys_xcpts2 [simp]: \"NullPointer \\<noteq> Start\" \"ClassCast \\<noteq> Start\"\n \"OutOfMemory \\<noteq> Start\" \"NoClassDefFoundError \\<noteq> Start\"\n \"IncompatibleClassChangeError \\<noteq> Start\" \"NoSuchFieldError \\<noteq> Start\"\n \"NoSuchMethodError \\<noteq> Start\"", "lemma sys_xcpts_incl [simp]: \"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts\n   \\<and> ClassCast \\<in> sys_xcpts \\<and> NoClassDefFoundError \\<in> sys_xcpts\n   \\<and> IncompatibleClassChangeError \\<in> sys_xcpts \\<and> NoSuchFieldError \\<in> sys_xcpts\n   \\<and> NoSuchMethodError \\<in> sys_xcpts\"", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast; P NoClassDefFoundError;\n  P IncompatibleClassChangeError; P NoSuchFieldError;\n  P NoSuchMethodError \\<rbrakk> \\<Longrightarrow> P C\"", "lemma start_heap_sys_xcpts:\nassumes \"C \\<in> sys_xcpts\"\nshows \"start_heap P (addr_of_sys_xcpt C) = Some(blank P C)\"", "lemma start_heap_classes:\n \"start_heap P a = Some(C,fs) \\<Longrightarrow> C \\<in> sys_xcpts\"", "lemma start_heap_nStart: \"start_heap P a = Some obj \\<Longrightarrow> fst(obj) \\<noteq> Start\"", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\"", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>fs. h(addr_of_sys_xcpt C) = Some (C, fs)\"", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>fs. h(addr_of_sys_xcpt C) = Some(C,fs) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\"", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\"", "lemma typeof_ClassCast [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt ClassCast)) = Some(Class ClassCast)\"", "lemma typeof_OutOfMemory [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt OutOfMemory)) = Some(Class OutOfMemory)\"", "lemma typeof_NullPointer [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NullPointer)) = Some(Class NullPointer)\"", "lemma typeof_NoClassDefFoundError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoClassDefFoundError)) = Some(Class NoClassDefFoundError)\"", "lemma typeof_IncompatibleClassChangeError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt IncompatibleClassChangeError)) = Some(Class IncompatibleClassChangeError)\"", "lemma typeof_NoSuchFieldError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoSuchFieldError)) = Some(Class NoSuchFieldError)\"", "lemma typeof_NoSuchMethodError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoSuchMethodError)) = Some(Class NoSuchMethodError)\"", "lemma preallocated_hext:\n  \"\\<lbrakk> preallocated h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> preallocated h'\"", "lemmas preallocated_upd_obj = preallocated_hext [OF _ hext_upd_obj]", "lemmas preallocated_new  = preallocated_hext [OF _ hext_new]", "lemma preallocated_start:\n  \"preallocated (start_heap P)\""], "translations": [["", "lemmas sys_xcpts_defs = NullPointer_def ClassCast_def OutOfMemory_def NoClassDefFoundError_def\n                       IncompatibleClassChangeError_def NoSuchFieldError_def NoSuchMethodError_def"], ["", "lemma Start_nsys_xcpts: \"Start \\<notin> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Start \\<notin> sys_xcpts", "by(simp add: Start_def sys_xcpts_def sys_xcpts_defs)"], ["", "lemma Start_nsys_xcpts1 [simp]: \"Start \\<noteq> NullPointer\" \"Start \\<noteq> ClassCast\"\n \"Start \\<noteq> OutOfMemory\" \"Start \\<noteq> NoClassDefFoundError\"\n \"Start \\<noteq> IncompatibleClassChangeError\" \"Start \\<noteq> NoSuchFieldError\"\n \"Start \\<noteq> NoSuchMethodError\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Start \\<noteq> NullPointer &&&\n     Start \\<noteq> ClassCast &&& Start \\<noteq> OutOfMemory) &&&\n    (Start \\<noteq> NoClassDefFoundError &&&\n     Start \\<noteq> IncompatibleClassChangeError) &&&\n    Start \\<noteq> NoSuchFieldError &&& Start \\<noteq> NoSuchMethodError", "using Start_nsys_xcpts"], ["proof (prove)\nusing this:\n  Start \\<notin> sys_xcpts\n\ngoal (1 subgoal):\n 1. (Start \\<noteq> NullPointer &&&\n     Start \\<noteq> ClassCast &&& Start \\<noteq> OutOfMemory) &&&\n    (Start \\<noteq> NoClassDefFoundError &&&\n     Start \\<noteq> IncompatibleClassChangeError) &&&\n    Start \\<noteq> NoSuchFieldError &&& Start \\<noteq> NoSuchMethodError", "by(auto simp: sys_xcpts_def)"], ["", "lemma Start_nsys_xcpts2 [simp]: \"NullPointer \\<noteq> Start\" \"ClassCast \\<noteq> Start\"\n \"OutOfMemory \\<noteq> Start\" \"NoClassDefFoundError \\<noteq> Start\"\n \"IncompatibleClassChangeError \\<noteq> Start\" \"NoSuchFieldError \\<noteq> Start\"\n \"NoSuchMethodError \\<noteq> Start\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (NullPointer \\<noteq> Start &&&\n     ClassCast \\<noteq> Start &&& OutOfMemory \\<noteq> Start) &&&\n    (NoClassDefFoundError \\<noteq> Start &&&\n     IncompatibleClassChangeError \\<noteq> Start) &&&\n    NoSuchFieldError \\<noteq> Start &&& NoSuchMethodError \\<noteq> Start", "using Start_nsys_xcpts"], ["proof (prove)\nusing this:\n  Start \\<notin> sys_xcpts\n\ngoal (1 subgoal):\n 1. (NullPointer \\<noteq> Start &&&\n     ClassCast \\<noteq> Start &&& OutOfMemory \\<noteq> Start) &&&\n    (NoClassDefFoundError \\<noteq> Start &&&\n     IncompatibleClassChangeError \\<noteq> Start) &&&\n    NoSuchFieldError \\<noteq> Start &&& NoSuchMethodError \\<noteq> Start", "by(auto simp: sys_xcpts_def dest: sym)"], ["", "definition start_heap :: \"'c prog \\<Rightarrow> heap\"\nwhere\n  \"start_heap G \\<equiv> Map.empty (addr_of_sys_xcpt NullPointer \\<mapsto> blank G NullPointer)\n                        (addr_of_sys_xcpt ClassCast \\<mapsto> blank G ClassCast)\n                        (addr_of_sys_xcpt OutOfMemory \\<mapsto> blank G OutOfMemory)\n                        (addr_of_sys_xcpt NoClassDefFoundError \\<mapsto> blank G NoClassDefFoundError)\n                        (addr_of_sys_xcpt IncompatibleClassChangeError \\<mapsto> blank G IncompatibleClassChangeError)\n                        (addr_of_sys_xcpt NoSuchFieldError \\<mapsto> blank G NoSuchFieldError)\n                        (addr_of_sys_xcpt NoSuchMethodError \\<mapsto> blank G NoSuchMethodError)\""], ["", "definition preallocated :: \"heap \\<Rightarrow> bool\"\nwhere\n  \"preallocated h \\<equiv> \\<forall>C \\<in> sys_xcpts. \\<exists>fs. h(addr_of_sys_xcpt C) = Some (C,fs)\""], ["", "subsection \"System exceptions\""], ["", "lemma sys_xcpts_incl [simp]: \"NullPointer \\<in> sys_xcpts \\<and> OutOfMemory \\<in> sys_xcpts\n   \\<and> ClassCast \\<in> sys_xcpts \\<and> NoClassDefFoundError \\<in> sys_xcpts\n   \\<and> IncompatibleClassChangeError \\<in> sys_xcpts \\<and> NoSuchFieldError \\<in> sys_xcpts\n   \\<and> NoSuchMethodError \\<in> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and>\n    ClassCast \\<in> sys_xcpts \\<and>\n    NoClassDefFoundError \\<in> sys_xcpts \\<and>\n    IncompatibleClassChangeError \\<in> sys_xcpts \\<and>\n    NoSuchFieldError \\<in> sys_xcpts \\<and>\n    NoSuchMethodError \\<in> sys_xcpts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. NullPointer \\<in> sys_xcpts \\<and>\n    OutOfMemory \\<in> sys_xcpts \\<and>\n    ClassCast \\<in> sys_xcpts \\<and>\n    NoClassDefFoundError \\<in> sys_xcpts \\<and>\n    IncompatibleClassChangeError \\<in> sys_xcpts \\<and>\n    NoSuchFieldError \\<in> sys_xcpts \\<and>\n    NoSuchMethodError \\<in> sys_xcpts", "by(simp add: sys_xcpts_def)"], ["", "(*>*)"], ["", "lemma sys_xcpts_cases [consumes 1, cases set]:\n  \"\\<lbrakk> C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast; P NoClassDefFoundError;\n  P IncompatibleClassChangeError; P NoSuchFieldError;\n  P NoSuchMethodError \\<rbrakk> \\<Longrightarrow> P C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast;\n     P NoClassDefFoundError; P IncompatibleClassChangeError;\n     P NoSuchFieldError; P NoSuchMethodError\\<rbrakk>\n    \\<Longrightarrow> P C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>C \\<in> sys_xcpts; P NullPointer; P OutOfMemory; P ClassCast;\n     P NoClassDefFoundError; P IncompatibleClassChangeError;\n     P NoSuchFieldError; P NoSuchMethodError\\<rbrakk>\n    \\<Longrightarrow> P C", "by (auto simp: sys_xcpts_def)"], ["", "(*>*)"], ["", "subsection \"Starting heap\""], ["", "lemma start_heap_sys_xcpts:\nassumes \"C \\<in> sys_xcpts\"\nshows \"start_heap P (addr_of_sys_xcpt C) = Some(blank P C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_heap P (addr_of_sys_xcpt C) = \\<lfloor>blank P C\\<rfloor>", "by(rule sys_xcpts_cases[OF assms])\n  (auto simp add: start_heap_def sys_xcpts_def addr_of_sys_xcpt_def sys_xcpts_defs)"], ["", "lemma start_heap_classes:\n \"start_heap P a = Some(C,fs) \\<Longrightarrow> C \\<in> sys_xcpts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_heap P a = \\<lfloor>(C, fs)\\<rfloor> \\<Longrightarrow>\n    C \\<in> sys_xcpts", "by(simp add: start_heap_def blank_def split: if_split_asm)"], ["", "lemma start_heap_nStart: \"start_heap P a = Some obj \\<Longrightarrow> fst(obj) \\<noteq> Start\""], ["proof (prove)\ngoal (1 subgoal):\n 1. start_heap P a = \\<lfloor>obj\\<rfloor> \\<Longrightarrow>\n    fst obj \\<noteq> Start", "by(cases obj, auto dest!: start_heap_classes simp: Start_nsys_xcpts)"], ["", "subsection \"@{term preallocated}\""], ["", "lemma preallocated_dom [simp]: \n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> addr_of_sys_xcpt C \\<in> dom h", "by (fastforce simp:preallocated_def dom_def)"], ["", "(*>*)"], ["", "lemma preallocatedD:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> \\<exists>fs. h(addr_of_sys_xcpt C) = Some (C, fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs.\n                         h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>fs.\n                         h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor>", "by(auto simp: preallocated_def sys_xcpts_def)"], ["", "(*>*)"], ["", "lemma preallocatedE [elim?]:\n  \"\\<lbrakk> preallocated h;  C \\<in> sys_xcpts; \\<And>fs. h(addr_of_sys_xcpt C) = Some(C,fs) \\<Longrightarrow> P h C\\<rbrakk>\n  \\<Longrightarrow> P h C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts;\n     \\<And>fs.\n        h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor> \\<Longrightarrow>\n        P h C\\<rbrakk>\n    \\<Longrightarrow> P h C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts;\n     \\<And>fs.\n        h (addr_of_sys_xcpt C) = \\<lfloor>(C, fs)\\<rfloor> \\<Longrightarrow>\n        P h C\\<rbrakk>\n    \\<Longrightarrow> P h C", "by (fast dest: preallocatedD)"], ["", "(*>*)"], ["", "lemma cname_of_xcp [simp]:\n  \"\\<lbrakk> preallocated h; C \\<in> sys_xcpts \\<rbrakk> \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; C \\<in> sys_xcpts\\<rbrakk>\n    \\<Longrightarrow> cname_of h (addr_of_sys_xcpt C) = C", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_ClassCast [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt ClassCast)) = Some(Class ClassCast)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt ClassCast)) =\n    \\<lfloor>Class ClassCast\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt ClassCast)) =\n    \\<lfloor>Class ClassCast\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_OutOfMemory [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt OutOfMemory)) = Some(Class OutOfMemory)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt OutOfMemory)) =\n    \\<lfloor>Class OutOfMemory\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt OutOfMemory)) =\n    \\<lfloor>Class OutOfMemory\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_NullPointer [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NullPointer)) = Some(Class NullPointer)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NullPointer)) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NullPointer)) =\n    \\<lfloor>Class NullPointer\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_NoClassDefFoundError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoClassDefFoundError)) = Some(Class NoClassDefFoundError)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoClassDefFoundError)) =\n    \\<lfloor>Class NoClassDefFoundError\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoClassDefFoundError)) =\n    \\<lfloor>Class NoClassDefFoundError\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_IncompatibleClassChangeError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt IncompatibleClassChangeError)) = Some(Class IncompatibleClassChangeError)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub>\n     (Addr (addr_of_sys_xcpt IncompatibleClassChangeError)) =\n    \\<lfloor>Class IncompatibleClassChangeError\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub>\n     (Addr (addr_of_sys_xcpt IncompatibleClassChangeError)) =\n    \\<lfloor>Class IncompatibleClassChangeError\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_NoSuchFieldError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoSuchFieldError)) = Some(Class NoSuchFieldError)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoSuchFieldError)) =\n    \\<lfloor>Class NoSuchFieldError\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoSuchFieldError)) =\n    \\<lfloor>Class NoSuchFieldError\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma typeof_NoSuchMethodError [simp]:\n  \"preallocated h \\<Longrightarrow> typeof\\<^bsub>h\\<^esub> (Addr(addr_of_sys_xcpt NoSuchMethodError)) = Some(Class NoSuchMethodError)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoSuchMethodError)) =\n    \\<lfloor>Class NoSuchMethodError\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated h \\<Longrightarrow>\n    typeof\\<^bsub>h\\<^esub> (Addr (addr_of_sys_xcpt NoSuchMethodError)) =\n    \\<lfloor>Class NoSuchMethodError\\<rfloor>", "by (auto elim: preallocatedE)"], ["", "(*>*)"], ["", "lemma preallocated_hext:\n  \"\\<lbrakk> preallocated h; h \\<unlhd> h' \\<rbrakk> \\<Longrightarrow> preallocated h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> preallocated h'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>preallocated h; h \\<unlhd> h'\\<rbrakk>\n    \\<Longrightarrow> preallocated h'", "by (simp add: preallocated_def hext_def)"], ["", "(*>*)\n\n(*<*)"], ["", "lemmas preallocated_upd_obj = preallocated_hext [OF _ hext_upd_obj]"], ["", "lemmas preallocated_new  = preallocated_hext [OF _ hext_new]"], ["", "(*>*)"], ["", "lemma preallocated_start:\n  \"preallocated (start_heap P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. preallocated (start_heap P)", "by(auto simp: start_heap_sys_xcpts blank_def preallocated_def)"], ["", "end"]]}