{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaDCI/J/TypeSafe.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaDCI", "problem_names": ["lemma red_shext_incr: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\n  \\<Longrightarrow> (\\<And>E T. P,E,h,sh \\<turnstile> e : T \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh')\"\n  and reds_shext_incr: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle>\n  \\<Longrightarrow> (\\<And>E Ts. P,E,h,sh \\<turnstile> es [:] Ts \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh')\"", "lemma wf_types_clinit:\nassumes wf:\"wf_prog wf_md P\" and ex: \"class P C = Some a\" and proc: \"sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\"\nshows \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\"", "theorem red_preserves_hconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e : T; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"\nand reds_preserves_hconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es [:] Ts; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"", "theorem red_preserves_lconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e:T; P,h \\<turnstile> l (:\\<le>) E \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)\"\nand reds_preserves_lconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es[:]Ts; P,h \\<turnstile> l (:\\<le>) E \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)\"", "theorem red_preserves_shconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e : T; P,h \\<turnstile>\\<^sub>s sh \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)\"\nand reds_preserves_shconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es [:] Ts; P,h \\<turnstile>\\<^sub>s sh \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)\"", "theorem assumes wf: \"wwf_J_prog P\"\nshows red_preserves_iconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconf sh e \\<Longrightarrow> iconf sh' e'\"\nand reds_preserves_iconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconfs sh es \\<Longrightarrow> iconfs sh' es'\"", "lemma Seq_bconf_preserve_aux:\nassumes \"P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h', l', sh'),b'\\<rangle>\" and \"P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\"\n  and \"P,sh \\<turnstile>\\<^sub>b (e::expr,b) \\<surd> \\<longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'::expr,b') \\<surd>\"\nshows \"P,sh' \\<turnstile>\\<^sub>b (e';;e\\<^sub>2,b') \\<surd>\"", "theorem red_preserves_bconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconf sh e \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\"\nand reds_preserves_bconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconfs sh es \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd> \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>\"", "lemma [iff]: \"\\<And>A. \\<lbrakk> length Vs = length Ts; length vs = length Ts\\<rbrakk> \\<Longrightarrow>\n \\<D> (blocks (Vs,Ts,vs,e)) A = \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)\"", "lemma red_lA_incr: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\n   \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e'\"\nand reds_lA_incr: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle>\n   \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es'\"", "lemma assumes wf: \"wf_J_prog P\"\nshows red_preserves_defass:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>\"\nand \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> \\<D>s es \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>\"", "lemma red_preserves_sconf:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle>; P,E,hp s,shp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma reds_preserves_sconf:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>] \\<langle>es',s',b'\\<rangle>; P,E,hp s,shp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma wt_blocks:\n \"\\<And>E. \\<lbrakk> length Vs = length Ts; length vs = length Ts \\<rbrakk> \\<Longrightarrow>\n       (P,E,h,sh \\<turnstile> blocks(Vs,Ts,vs,e) : T) =\n       (P,E(Vs[\\<mapsto>]Ts),h,sh \\<turnstile> e:T \\<and> (\\<exists>Ts'. map (typeof\\<^bsub>h\\<^esub>) vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\"", "theorem assumes wf: \"wf_J_prog P\"\nshows subject_reduction2: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>E T. \\<lbrakk> P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e:T \\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'. P,E,h',sh' \\<turnstile> e':T' \\<and> P \\<turnstile> T' \\<le> T)\"\nand subjects_reduction2: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>E Ts. \\<lbrakk> P,E \\<turnstile> (h,l,sh) \\<surd>; iconfs sh es; P,E,h,sh \\<turnstile> es [:] Ts \\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'. P,E,h',sh' \\<turnstile> es' [:] Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts)\"", "lemma Red_preserves_sconf:\nassumes wf: \"wf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E,hp s,shp s \\<turnstile> e : T; iconf (shp s) e; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\"", "lemma Red_preserves_iconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"iconf (shp s) e \\<Longrightarrow> iconf (shp s') e'\"", "lemma Reds_preserves_iconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]* \\<langle>es',s',b'\\<rangle>\"\nshows \"iconfs (shp s) es \\<Longrightarrow> iconfs (shp s') es'\"", "lemma Red_preserves_bconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"iconf (shp s) e \\<Longrightarrow> P,(shp s) \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<Longrightarrow> P,(shp s') \\<turnstile>\\<^sub>b (e'::expr,b') \\<surd>\"", "lemma Reds_preserves_bconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]* \\<langle>es',s',b'\\<rangle>\"\nshows \"iconfs (shp s) es \\<Longrightarrow> P,(shp s) \\<turnstile>\\<^sub>b (es,b) \\<surd> \\<Longrightarrow> P,(shp s') \\<turnstile>\\<^sub>b (es'::expr list,b') \\<surd>\"", "lemma Red_preserves_defass:\nassumes wf: \"wf_J_prog P\" and reds: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<D> e \\<lfloor>dom(lcl s)\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom(lcl s')\\<rfloor>\"", "lemma Red_preserves_type:\nassumes wf: \"wf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"!!T. \\<lbrakk> P,E \\<turnstile> s\\<surd>; iconf (shp s) e; P,E,hp s,shp s \\<turnstile> e:T \\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'. P \\<turnstile> T' \\<le> T \\<and> P,E,hp s',shp s' \\<turnstile> e':T'\"", "theorem Subject_reduction: assumes wf: \"wf_J_prog P\"\nshows \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle> \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>\n       \\<Longrightarrow> \\<exists>T'. P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\"", "theorem Subject_reductions:\nassumes wf: \"wf_J_prog P\" and reds: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<And>T. P,E,s \\<turnstile> e:T \\<surd> \\<Longrightarrow> \\<exists>T'. P,E,s' \\<turnstile> e':T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\""], "translations": [["", "lemma red_shext_incr: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\n  \\<Longrightarrow> (\\<And>E T. P,E,h,sh \\<turnstile> e : T \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh')\"\n  and reds_shext_incr: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle>\n  \\<Longrightarrow> (\\<And>E Ts. P,E,h,sh \\<turnstile> es [:] Ts \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E T.\n         P,E,h,sh \\<turnstile> e : T \\<Longrightarrow>\n         sh \\<unlhd>\\<^sub>s sh')) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E Ts.\n         P,E,h,sh \\<turnstile> es [:] Ts \\<Longrightarrow>\n         sh \\<unlhd>\\<^sub>s sh'))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E T.\n         P,E,h,sh \\<turnstile> e : T \\<Longrightarrow>\n         sh \\<unlhd>\\<^sub>s sh')) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E Ts.\n         P,E,h,sh \\<turnstile> es [:] Ts \\<Longrightarrow>\n         sh \\<unlhd>\\<^sub>s sh'))", "proof(induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh E T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 2. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 3. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 4. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 5. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           P,E,a,b \\<turnstile> e : T \\<Longrightarrow>\n           b \\<unlhd>\\<^sub>s bb;\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> b \\<unlhd>\\<^sub>s bb\n 6. \\<And>C a aa b ba E T.\n       P,E,a,b \\<turnstile> Cast C null : T \\<Longrightarrow>\n       b \\<unlhd>\\<^sub>s b\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 8. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> sh \\<unlhd>\\<^sub>s sh\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           P,E,a,b \\<turnstile> e : T \\<Longrightarrow>\n           b \\<unlhd>\\<^sub>s bb;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> b \\<unlhd>\\<^sub>s bb\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            P,E,a,b \\<turnstile> e : T \\<Longrightarrow>\n            b \\<unlhd>\\<^sub>s bb;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> b \\<unlhd>\\<^sub>s bb\nA total of 95 subgoals...", "qed(auto simp: shext_def)"], ["", "(*>*)"], ["", "lemma wf_types_clinit:\nassumes wf:\"wf_prog wf_md P\" and ex: \"class P C = Some a\" and proc: \"sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\"\nshows \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "from ex"], ["proof (chain)\npicking this:\n  class P C = \\<lfloor>a\\<rfloor>", "obtain D fs ms where \"a = (D,fs,ms)\""], ["proof (prove)\nusing this:\n  class P C = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>D fs ms.\n        a = (D, fs, ms) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases a)"], ["proof (state)\nthis:\n  a = (D, fs, ms)\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "then"], ["proof (chain)\npicking this:\n  a = (D, fs, ms)", "have sP: \"(C, D, fs, ms) \\<in> set P\""], ["proof (prove)\nusing this:\n  a = (D, fs, ms)\n\ngoal (1 subgoal):\n 1. (C, D, fs, ms) \\<in> set P", "using ex map_of_SomeD[of P C a]"], ["proof (prove)\nusing this:\n  a = (D, fs, ms)\n  class P C = \\<lfloor>a\\<rfloor>\n  map_of P C = \\<lfloor>a\\<rfloor> \\<Longrightarrow> (C, a) \\<in> set P\n\ngoal (1 subgoal):\n 1. (C, D, fs, ms) \\<in> set P", "by(simp add: class_def)"], ["proof (state)\nthis:\n  (C, D, fs, ms) \\<in> set P\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "then"], ["proof (chain)\npicking this:\n  (C, D, fs, ms) \\<in> set P", "have \"wf_clinit ms\""], ["proof (prove)\nusing this:\n  (C, D, fs, ms) \\<in> set P\n\ngoal (1 subgoal):\n 1. wf_clinit ms", "using assms"], ["proof (prove)\nusing this:\n  (C, D, fs, ms) \\<in> set P\n  wf_prog wf_md P\n  class P C = \\<lfloor>a\\<rfloor>\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (1 subgoal):\n 1. wf_clinit ms", "by(unfold wf_prog_def wf_cdecl_def, auto)"], ["proof (state)\nthis:\n  wf_clinit ms\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "then"], ["proof (chain)\npicking this:\n  wf_clinit ms", "obtain pns body where sm: \"(clinit, Static, [], Void, pns, body) \\<in> set ms\""], ["proof (prove)\nusing this:\n  wf_clinit ms\n\ngoal (1 subgoal):\n 1. (\\<And>pns body.\n        (clinit, Static, [], Void, pns, body) \\<in> set ms \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(unfold wf_clinit_def) auto"], ["proof (state)\nthis:\n  (clinit, Static, [], Void, pns, body) \\<in> set ms\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "then"], ["proof (chain)\npicking this:\n  (clinit, Static, [], Void, pns, body) \\<in> set ms", "have \"P \\<turnstile> C sees clinit,Static:[] \\<rightarrow> Void = (pns,body) in C\""], ["proof (prove)\nusing this:\n  (clinit, Static, [], Void, pns, body) \\<in> set ms\n\ngoal (1 subgoal):\n 1. P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                             body) in C", "using mdecl_visible[OF wf sP sm]"], ["proof (prove)\nusing this:\n  (clinit, Static, [], Void, pns, body) \\<in> set ms\n  P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                           body) in C\n\ngoal (1 subgoal):\n 1. P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                             body) in C", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                           body) in C\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                           body) in C", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                           body) in C\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "using WTrtSCall proc"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees clinit, Static :  []\\<rightarrow>Void = (pns,\n                           body) in C\n  \\<lbrakk>?P \\<turnstile> ?C sees ?M, Static :  ?Ts\\<rightarrow>?T = (?pns,\n                                 ?body) in ?D;\n   ?P,?E,?h,?sh \\<turnstile> ?es [:] ?Ts'; ?P \\<turnstile> ?Ts' [\\<le>] ?Ts;\n   ?M = clinit \\<longrightarrow>\n   ?sh ?D = \\<lfloor>(?sfs, Processing)\\<rfloor> \\<and>\n   ?es = map Val ?vs\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,?sh \\<turnstile> ?C\\<bullet>\\<^sub>s?M(?es) : ?T\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "by simp"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Basic preservation lemmas\\<close>"], ["", "text\\<open> First some easy preservation lemmas. \\<close>"], ["", "theorem red_preserves_hconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e : T; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\"\nand reds_preserves_hconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es [:] Ts; P \\<turnstile> h \\<surd> \\<rbrakk> \\<Longrightarrow> P \\<turnstile> h' \\<surd>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P \\<turnstile> h \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P \\<turnstile> h' \\<surd>))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "case (RedNew h a C FDTs h' l sh es)"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  P \\<turnstile> C has_fields FDTs\n  h' = h(a \\<mapsto> blank P C)\n  P,E,h,sh \\<turnstile> new C : es\n  P \\<turnstile> h \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "have new: \"new_Addr h = Some a\" and fields: \"P \\<turnstile> C has_fields FDTs\"\n   and h': \"h' = h(a\\<mapsto>blank P C)\"\n   and hconf: \"P \\<turnstile> h \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (new_Addr h = \\<lfloor>a\\<rfloor> &&&\n     P \\<turnstile> C has_fields FDTs) &&&\n    h' = h(a \\<mapsto> blank P C) &&& P \\<turnstile> h \\<surd>", "by fact+"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  P \\<turnstile> C has_fields FDTs\n  h' = h(a \\<mapsto> blank P C)\n  P \\<turnstile> h \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "from new"], ["proof (chain)\npicking this:\n  new_Addr h = \\<lfloor>a\\<rfloor>", "have None: \"h a = None\""], ["proof (prove)\nusing this:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. h a = None", "by(rule new_Addr_SomeD)"], ["proof (state)\nthis:\n  h a = None\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "moreover"], ["proof (state)\nthis:\n  h a = None\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "have \"P,h \\<turnstile> blank P C \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> blank P C \\<surd>", "using fields"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has_fields FDTs\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> blank P C \\<surd>", "by(rule oconf_blank)"], ["proof (state)\nthis:\n  P,h \\<turnstile> blank P C \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h' \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P \\<turnstile> a \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> ab \\<surd>\nA total of 95 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  h a = None\n  P,h \\<turnstile> blank P C \\<surd>", "show \"P \\<turnstile> h' \\<surd>\""], ["proof (prove)\nusing this:\n  h a = None\n  P,h \\<turnstile> blank P C \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "using h'"], ["proof (prove)\nusing this:\n  h a = None\n  P,h \\<turnstile> blank P C \\<surd>\n  h' = h(a \\<mapsto> blank P C)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h' \\<surd>", "by(fast intro: hconf_new[OF hconf])"], ["proof (state)\nthis:\n  P \\<turnstile> h' \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "case (RedFAss C F t D h a fs v l sh b')"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,NonStatic:t in D\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\n  P \\<turnstile> h \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "let ?fs' = \"fs((F,D)\\<mapsto>v)\""], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "have hconf: \"P \\<turnstile> h \\<surd>\" and ha: \"h a = Some(C,fs)\"\n   and wt: \"P,E,h,sh \\<turnstile> addr a\\<bullet>F{D}:=Val v : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> h \\<surd> &&&\n    h a = \\<lfloor>(C, fs)\\<rfloor> &&&\n    P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "from wt ha"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\n  h a = \\<lfloor>(C, fs)\\<rfloor>", "obtain TF Tv where typeofv: \"typeof\\<^bsub>h\\<^esub> v = Some Tv\"\n    and has: \"P \\<turnstile> C has F,NonStatic:TF in D\"\n    and sub: \"P \\<turnstile> Tv \\<le> TF\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>Tv TF.\n        \\<lbrakk>typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>;\n         P \\<turnstile> C has F,NonStatic:TF in D;\n         P \\<turnstile> Tv \\<le> TF\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>\n  P \\<turnstile> C has F,NonStatic:TF in D\n  P \\<turnstile> Tv \\<le> TF\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "have \"P,h \\<turnstile> (C, ?fs') \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (C, fs((F, D) \\<mapsto> v)) \\<surd>", "proof (rule oconf_fupd[OF has])"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile> v :\\<le> TF\n 2. P,h \\<turnstile> (C, fs) \\<surd>", "show \"P,h \\<turnstile> (C, fs) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (C, fs) \\<surd>", "using hconf ha"], ["proof (prove)\nusing this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> (C, fs) \\<surd>", "by(simp add:hconf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> (C, fs) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "show \"P,h \\<turnstile> v :\\<le> TF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "using sub typeofv"], ["proof (prove)\nusing this:\n  P \\<turnstile> Tv \\<le> TF\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "by(simp add:conf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v :\\<le> TF\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile> (C, fs((F, D) \\<mapsto> v)) \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 94 subgoals...", "with hconf ha"], ["proof (chain)\npicking this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P,h \\<turnstile> (C, fs((F, D) \\<mapsto> v)) \\<surd>", "show \"P \\<turnstile> h(a\\<mapsto>(C, ?fs')) \\<surd>\""], ["proof (prove)\nusing this:\n  P \\<turnstile> h \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P,h \\<turnstile> (C, fs((F, D) \\<mapsto> v)) \\<surd>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> h(a \\<mapsto> (C, fs((F, D) \\<mapsto> v))) \\<surd>", "by (rule hconf_upd_obj)"], ["proof (state)\nthis:\n  P \\<turnstile> h(a \\<mapsto> (C, fs((F, D) \\<mapsto> v))) \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T; P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T; P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> a \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P \\<turnstile> h \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> h \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P \\<turnstile> a \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P \\<turnstile> ab \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P \\<turnstile> a \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P \\<turnstile> ab \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P \\<turnstile> a \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P \\<turnstile> a \\<surd>\nA total of 93 subgoals...", "qed(auto elim: WTrt.cases)"], ["", "(*>*)"], ["", "theorem red_preserves_lconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e:T; P,h \\<turnstile> l (:\\<le>) E \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)\"\nand reds_preserves_lconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es[:]Ts; P,h \\<turnstile> l (:\\<le>) E \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E))", "proof(induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile> l (:\\<le>) E\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\nA total of 95 subgoals...", "case RedNew"], ["proof (state)\nthis:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> blank P C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile> l (:\\<le>) E\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\nA total of 95 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> blank P C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h'_ \\<turnstile> l_ (:\\<le>) E", "by(fast intro:lconf_hext red_hext_incr[OF red_reds.RedNew])"], ["proof (state)\nthis:\n  P,h'_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 94 subgoals...", "case RedLAss"], ["proof (state)\nthis:\n  P,E,h_,sh_ \\<turnstile> V_:=Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 94 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h_,sh_ \\<turnstile> V_:=Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h_ \\<turnstile> l_(V_ \\<mapsto> v_) (:\\<le>) E", "by(fastforce elim: lconf_upd simp:conf_def)"], ["proof (state)\nthis:\n  P,h_ \\<turnstile> l_(V_ \\<mapsto> v_) (:\\<le>) E\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 93 subgoals...", "case RedFAss"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 93 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n  P,h_ \\<turnstile> l_ (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h_(a_ \\<mapsto>\n    (C_, fs_((F_, D_) \\<mapsto> v_))) \\<turnstile> l_ (:\\<le>) E", "by(fast intro:lconf_hext red_hext_incr[OF red_reds.RedFAss])"], ["proof (state)\nthis:\n  P,h_(a_ \\<mapsto>\n  (C_, fs_((F_, D_) \\<mapsto> v_))) \\<turnstile> l_ (:\\<le>) E\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "case (InitBlockRed e h l V v sh b e' h' l' sh' b' v' T T')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  l' V = \\<lfloor>v'\\<rfloor>\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n  P,h \\<turnstile> l (:\\<le>) E\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "have red: \"P \\<turnstile> \\<langle>e, (h, l(V\\<mapsto>v),sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h', l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>T E . \\<lbrakk> P,E,h,sh \\<turnstile> e:T; P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>) E \\<rbrakk>\n                     \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E\"\n   and l'V: \"l' V = Some v'\" and lconf: \"P,h \\<turnstile> l (:\\<le>) E\"\n   and wt: \"P,E,h,sh \\<turnstile> {V:T := Val v; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                     b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)) &&&\n    l' V = \\<lfloor>v'\\<rfloor> &&&\n    P,h \\<turnstile> l (:\\<le>) E &&&\n    P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  l' V = \\<lfloor>v'\\<rfloor>\n  P,h \\<turnstile> l (:\\<le>) E\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E", "have \"P,h' \\<turnstile> l (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>) E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "from IH lconf wt"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  P,h \\<turnstile> l (:\\<le>) E\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'", "have \"P,h' \\<turnstile> l' (:\\<le>) E(V\\<mapsto>T)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  P,h \\<turnstile> l (:\\<le>) E\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "by(auto simp del: fun_upd_apply simp: fun_upd_same lconf_upd2 conf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 92 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "show \"P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>) E", "by (fastforce simp:lconf_def split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "case (BlockRedNone e h l V sh b e' h' l' sh' b' T T')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  l' V = None\n  \\<not> assigned V e\n  P,E,h,sh \\<turnstile> {V:T; e} : T'\n  P,h \\<turnstile> l (:\\<le>) E\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "have red: \"P \\<turnstile> \\<langle>e,(h, l(V := None),sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h', l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk> P,E,h,sh \\<turnstile> e : T; P,h \\<turnstile> l(V:=None) (:\\<le>) E \\<rbrakk>\n                   \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E\"\n   and lconf: \"P,h \\<turnstile> l (:\\<le>) E\" and wt: \"P,E,h,sh \\<turnstile> {V:T; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                     b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile> l(V := None) (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)) &&&\n    P,h \\<turnstile> l (:\\<le>) E &&& P,E,h,sh \\<turnstile> {V:T; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  P,h \\<turnstile> l (:\\<le>) E\n  P,E,h,sh \\<turnstile> {V:T; e} : T'\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E", "have \"P,h' \\<turnstile> l (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>) E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "have \"P,h' \\<turnstile> l' (:\\<le>) E(V\\<mapsto>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "by(rule IH, insert lconf wt, auto simp:lconf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 91 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "show \"P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>) E", "by (fastforce simp:lconf_def split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "case (BlockRedSome e h l V sh b e' h' l' sh' b' v T T')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  P,E,h,sh \\<turnstile> {V:T; e} : T'\n  P,h \\<turnstile> l (:\\<le>) E\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "have red: \"P \\<turnstile> \\<langle>e,(h, l(V := None),sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h', l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E,h,sh \\<turnstile> e : T; P,h \\<turnstile> l(V:=None) (:\\<le>) E\\<rbrakk>\n                   \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E\"\n   and lconf: \"P,h \\<turnstile> l (:\\<le>) E\" and wt: \"P,E,h,sh \\<turnstile> {V:T; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                     b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile> l(V := None) (:\\<le>) E\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) E)) &&&\n    P,h \\<turnstile> l (:\\<le>) E &&& P,E,h,sh \\<turnstile> {V:T; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E,h,sh \\<turnstile> e : ?T;\n   P,h \\<turnstile> l(V := None) (:\\<le>) ?E\\<rbrakk>\n  \\<Longrightarrow> P,h' \\<turnstile> l' (:\\<le>) ?E\n  P,h \\<turnstile> l (:\\<le>) E\n  P,E,h,sh \\<turnstile> {V:T; e} : T'\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "from lconf_hext[OF lconf red_hext_incr[OF red]]"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E", "have \"P,h' \\<turnstile> l (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l (:\\<le>) E", "."], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l (:\\<le>) E\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "have \"P,h' \\<turnstile> l' (:\\<le>) E(V\\<mapsto>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "by(rule IH, insert lconf wt, auto simp:lconf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 90 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "show \"P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l (:\\<le>) E\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l'(V := l V) (:\\<le>) E", "by (fastforce simp:lconf_def split:if_split_asm)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l'(V := l V) (:\\<le>) E\n\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile> l (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile> l (:\\<le>) E\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile> ac (:\\<le>) E\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile> aa (:\\<le>) E\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile> aa (:\\<le>) E\nA total of 89 subgoals...", "qed(auto elim: WTrt.cases)"], ["", "(*>*)"], ["", "theorem red_preserves_shconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>T E. \\<lbrakk> P,E,h,sh \\<turnstile> e : T; P,h \\<turnstile>\\<^sub>s sh \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)\"\nand reds_preserves_shconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> (\\<And>Ts E. \\<lbrakk> P,E,h,sh \\<turnstile> es [:] Ts; P,h \\<turnstile>\\<^sub>s sh \\<surd> \\<rbrakk> \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>T E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> e : T;\n          P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>Ts E.\n         \\<lbrakk>P,E,h,sh \\<turnstile> es [:] Ts;\n          P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh' \\<surd>))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\nA total of 95 subgoals...", "case (RedNew h a C FDTs h' l sh es)"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  P \\<turnstile> C has_fields FDTs\n  h' = h(a \\<mapsto> blank P C)\n  P,E,h,sh \\<turnstile> new C : es\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\nA total of 95 subgoals...", "have new: \"new_Addr h = Some a\"\n   and h': \"h' = h(a\\<mapsto>blank P C)\"\n   and shconf: \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. new_Addr h = \\<lfloor>a\\<rfloor> &&&\n    h' = h(a \\<mapsto> blank P C) &&& P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by fact+"], ["proof (state)\nthis:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n  h' = h(a \\<mapsto> blank P C)\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\nA total of 95 subgoals...", "from new"], ["proof (chain)\npicking this:\n  new_Addr h = \\<lfloor>a\\<rfloor>", "have None: \"h a = None\""], ["proof (prove)\nusing this:\n  new_Addr h = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. h a = None", "by(rule new_Addr_SomeD)"], ["proof (state)\nthis:\n  h a = None\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh T E.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h' \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 6. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>T E.\n            \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n             P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n            \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\nA total of 95 subgoals...", "then"], ["proof (chain)\npicking this:\n  h a = None", "show \"P,h' \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\nusing this:\n  h a = None\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile>\\<^sub>s sh \\<surd>", "using h'"], ["proof (prove)\nusing this:\n  h a = None\n  h' = h(a \\<mapsto> blank P C)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile>\\<^sub>s sh \\<surd>", "by(fast intro: shconf_hnew[OF shconf])"], ["proof (state)\nthis:\n  P,h' \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 94 subgoals...", "case (RedFAss C F t D h a fs v l sh b)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,NonStatic:t in D\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 94 subgoals...", "let ?fs' = \"fs((F,D)\\<mapsto>v)\""], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 94 subgoals...", "have shconf: \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\" and ha: \"h a = Some(C,fs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd> &&& h a = \\<lfloor>(C, fs)\\<rfloor>", "by fact+"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 94 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>", "show \"P,h(a\\<mapsto>(C, ?fs')) \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h(a \\<mapsto>\n    (C, fs((F, D) \\<mapsto> v))) \\<turnstile>\\<^sub>s sh \\<surd>", "by (rule shconf_hupd_obj)"], ["proof (state)\nthis:\n  P,h(a \\<mapsto>\n  (C, fs((F, D) \\<mapsto> v))) \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "case (RedSFAss C F t D sh sfs i sfs' v sh' h l)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:t in D\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  sfs' = sfs(F \\<mapsto> v)\n  sh' = sh(D \\<mapsto> (sfs', i))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "let ?sfs' = \"sfs(F\\<mapsto>v)\""], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "have shconf: \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\" and shD: \"sh D = \\<lfloor>(sfs, i)\\<rfloor>\"\n    and wt: \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd> &&&\n    sh D = \\<lfloor>(sfs, i)\\<rfloor> &&&\n    P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T", "by fact+"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T", "obtain TF Tv where typeofv: \"typeof\\<^bsub>h\\<^esub> v = Some Tv\"\n    and has: \"P \\<turnstile> C has F,Static:TF in D\"\n    and sub: \"P \\<turnstile> Tv \\<le> TF\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\n\ngoal (1 subgoal):\n 1. (\\<And>Tv TF.\n        \\<lbrakk>typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>;\n         P \\<turnstile> C has F,Static:TF in D;\n         P \\<turnstile> Tv \\<le> TF\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: WTrt.cases)"], ["proof (state)\nthis:\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>\n  P \\<turnstile> C has F,Static:TF in D\n  P \\<turnstile> Tv \\<le> TF\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "have has': \"P \\<turnstile> D has F,Static:TF in D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> D has F,Static:TF in D", "using has"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,Static:TF in D\n\ngoal (1 subgoal):\n 1. P \\<turnstile> D has F,Static:TF in D", "by(rule has_field_idemp)"], ["proof (state)\nthis:\n  P \\<turnstile> D has F,Static:TF in D\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "have \"P,h,D \\<turnstile>\\<^sub>s ?sfs' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h,D \\<turnstile>\\<^sub>s sfs(F \\<mapsto> v) \\<surd>", "proof (rule soconf_fupd[OF has'])"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile> v :\\<le> TF\n 2. P,h,D \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h,D \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h,D \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconf shD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,D \\<turnstile>\\<^sub>s sfs \\<surd>", "by(simp add:shconf_def)"], ["proof (state)\nthis:\n  P,h,D \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "show \"P,h \\<turnstile> v :\\<le> TF\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "using sub typeofv"], ["proof (prove)\nusing this:\n  P \\<turnstile> Tv \\<le> TF\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>Tv\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> v :\\<le> TF", "by(simp add:conf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> v :\\<le> TF\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h,D \\<turnstile>\\<^sub>s sfs(F \\<mapsto> v) \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "with shconf"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  P,h,D \\<turnstile>\\<^sub>s sfs(F \\<mapsto> v) \\<surd>", "have \"P,h \\<turnstile>\\<^sub>s sh(D\\<mapsto>(?sfs',i)) \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  P,h,D \\<turnstile>\\<^sub>s sfs(F \\<mapsto> v) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(D \\<mapsto> (sfs(F \\<mapsto> v), i)) \\<surd>", "by (rule shconf_upd_obj)"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(D \\<mapsto> (sfs(F \\<mapsto> v), i)) \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 93 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(D \\<mapsto> (sfs(F \\<mapsto> v), i)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(D \\<mapsto> (sfs(F \\<mapsto> v), i)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using RedSFAss.hyps(3) RedSFAss.hyps(4)"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(D \\<mapsto> (sfs(F \\<mapsto> v), i)) \\<surd>\n  sfs' = sfs(F \\<mapsto> v)\n  sh' = sh(D \\<mapsto> (sfs', i))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 92 subgoals...", "case (InitNoneRed sh C C' Cs e h l)"], ["proof (state)\nthis:\n  sh C = None\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 92 subgoals...", "let ?sfs' = \"sblank P C\""], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 92 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (?sfs', Prepared)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sblank P C \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using InitNoneRed"], ["proof (prove)\nusing this:\n  sh C = None\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sblank P C \\<surd>", "show \"P,h,C \\<turnstile>\\<^sub>s sblank P C \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sblank P C \\<surd>", "by (metis has_field_def soconf_def soconf_sblank)"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sblank P C \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>\n\ngoal (92 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 92 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared)) \\<surd>\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 91 subgoals...", "case (InitObjectRed sh C sfs sh' C' Cs e h l)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 91 subgoals...", "have sh': \"sh' = sh(C \\<mapsto> (sfs, Processing))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh' = sh(C \\<mapsto> (sfs, Processing))", "by fact"], ["proof (state)\nthis:\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 91 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using InitObjectRed"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "moreover"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "have \"sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "using InitObjectRed"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "ultimately"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "show \"P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconfD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  \\<lbrakk>?P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   ?sh ?C = \\<lfloor>(?sfs, ?i)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> ?P,?h,?C \\<turnstile>\\<^sub>s ?sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n\ngoal (91 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 91 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using sh'"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 90 subgoals...", "case (InitNonObjectSuperRed sh C sfs D a b sh' C' Cs e h l)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, a, b)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 90 subgoals...", "have sh': \"sh' = sh(C \\<mapsto> (sfs, Processing))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh' = sh(C \\<mapsto> (sfs, Processing))", "by fact"], ["proof (state)\nthis:\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 90 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using InitNonObjectSuperRed"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, a, b)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "moreover"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "have \"sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "using InitNonObjectSuperRed"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, a, b)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "ultimately"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>", "show \"P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconfD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  \\<lbrakk>?P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   ?sh ?C = \\<lfloor>(?sfs, ?i)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> ?P,?h,?C \\<turnstile>\\<^sub>s ?sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n\ngoal (90 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 90 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using sh'"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Processing)) \\<surd>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 89 subgoals...", "next"], ["proof (state)\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 89 subgoals...", "case (RedRInit sh C sfs i sh' C' Cs e v h l)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E,h,sh \\<turnstile> RI (C,Val e) ; Cs \\<leftarrow> v : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 89 subgoals...", "have sh': \"sh' = sh(C \\<mapsto> (sfs, Done))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh' = sh(C \\<mapsto> (sfs, Done))", "by fact"], ["proof (state)\nthis:\n  sh' = sh(C \\<mapsto> (sfs, Done))\n\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 89 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using RedRInit"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E,h,sh \\<turnstile> RI (C,Val e) ; Cs \\<leftarrow> v : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "moreover"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "have \"sh C = \\<lfloor>(sfs, i)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "using RedRInit"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E,h,sh \\<turnstile> RI (C,Val e) ; Cs \\<leftarrow> v : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "ultimately"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>", "show \"P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconfD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  \\<lbrakk>?P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   ?sh ?C = \\<lfloor>(?sfs, ?i)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> ?P,?h,?C \\<turnstile>\\<^sub>s ?sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>\n\ngoal (89 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 89 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using sh'"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Done)) \\<surd>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (88 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 88 subgoals...", "next"], ["proof (state)\ngoal (88 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 88 subgoals...", "case (RInitInitThrow sh C sfs i sh' a D Cs e h l)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (88 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 88 subgoals...", "have sh': \"sh' = sh(C \\<mapsto> (sfs, Error))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh' = sh(C \\<mapsto> (sfs, Error))", "by fact"], ["proof (state)\nthis:\n  sh' = sh(C \\<mapsto> (sfs, Error))\n\ngoal (88 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 88 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using RInitInitThrow"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "moreover"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "have \"sh C = \\<lfloor>(sfs, i)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "using RInitInitThrow"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "ultimately"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>", "show \"P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconfD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  \\<lbrakk>?P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   ?sh ?C = \\<lfloor>(?sfs, ?i)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> ?P,?h,?C \\<turnstile>\\<^sub>s ?sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n\ngoal (88 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 88 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using sh'"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (87 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 87 subgoals...", "next"], ["proof (state)\ngoal (87 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 87 subgoals...", "case (RInitThrow sh C sfs i sh' a e' h l)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; [] \\<leftarrow> e' : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (87 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 87 subgoals...", "have sh': \"sh' = sh(C \\<mapsto> (sfs, Error))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh' = sh(C \\<mapsto> (sfs, Error))", "by fact"], ["proof (state)\nthis:\n  sh' = sh(C \\<mapsto> (sfs, Error))\n\ngoal (87 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 87 subgoals...", "have \"P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>", "proof(rule shconf_upd_obj)"], ["proof (state)\ngoal (2 subgoals):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "show \"P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "using RInitThrow"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; [] \\<leftarrow> e' : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "moreover"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "have \"sh C = \\<lfloor>(sfs, i)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "using RInitThrow"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; [] \\<leftarrow> e' : T\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n\ngoal (1 subgoal):\n 1. sh C = \\<lfloor>(sfs, i)\\<rfloor>", "by simp"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "ultimately"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>", "show \"P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\""], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "using shconfD"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh \\<surd>\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  \\<lbrakk>?P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   ?sh ?C = \\<lfloor>(?sfs, ?i)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> ?P,?h,?C \\<turnstile>\\<^sub>s ?sfs \\<surd>\n\ngoal (1 subgoal):\n 1. P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h,C \\<turnstile>\\<^sub>s sfs \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n\ngoal (87 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "using sh'"], ["proof (prove)\nusing this:\n  P,h \\<turnstile>\\<^sub>s sh(C \\<mapsto> (sfs, Error)) \\<surd>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile>\\<^sub>s sh' \\<surd>", "by blast"], ["proof (state)\nthis:\n  P,h \\<turnstile>\\<^sub>s sh' \\<surd>\n\ngoal (86 subgoals):\n 1. \\<And>h C l sh T E.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 2. \\<And>sh C sfs h l T E.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 3. \\<And>sh C h l T E.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E,h,sh \\<turnstile> new C : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 4. \\<And>e a aa b ba e' ab ac bb b' C T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Cast C e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 5. \\<And>C a aa b ba T E.\n       \\<lbrakk>P,E,a,b \\<turnstile> Cast C null : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\n 6. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 7. \\<And>h a D fs C l sh b T E.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T;\n        P,h \\<turnstile>\\<^sub>s sh \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,h \\<turnstile>\\<^sub>s sh \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop T E.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>T E.\n           \\<lbrakk>P,E,a,b \\<turnstile> e : T;\n            P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>;\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T;\n        P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,ab \\<turnstile>\\<^sub>s bb \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba T E.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T;\n         P,a \\<turnstile>\\<^sub>s b \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,a \\<turnstile>\\<^sub>s b \\<surd>\nA total of 86 subgoals...", "qed(auto elim: WTrt.cases)"], ["", "(*>*)"], ["", "theorem assumes wf: \"wwf_J_prog P\"\nshows red_preserves_iconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconf sh e \\<Longrightarrow> iconf sh' e'\"\nand reds_preserves_iconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconfs sh es \\<Longrightarrow> iconfs sh' es'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      iconf sh e\\<rbrakk>\n     \\<Longrightarrow> iconf sh' e') &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      iconfs sh es\\<rbrakk>\n     \\<Longrightarrow> iconfs sh' es')", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      iconf sh e\\<rbrakk>\n     \\<Longrightarrow> iconf sh' e') &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      iconfs sh es\\<rbrakk>\n     \\<Longrightarrow> iconfs sh' es')", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         iconf b e \\<Longrightarrow> iconf bb e';\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n        \\<Longrightarrow> iconf bb\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\nA total of 95 subgoals...", "case (BinOpRed1 e h l sh b e' h' l' sh' b' bop e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         iconf b e \\<Longrightarrow> iconf bb e';\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n        \\<Longrightarrow> iconf bb\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\nA total of 95 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh' (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)", "using BinOpRed1 nsub_RI_iconf[of e\\<^sub>2 sh'] val_of_spec"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n\ngoal (1 subgoal):\n 1. iconf sh' (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e';\n     iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e';\n     iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n     \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconf sh'\n                       (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh'\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)", "qed(simp,fast)"], ["proof (state)\nthis:\n  iconf sh' (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 94 subgoals...", "case (FAssRed1 e h l sh b e' h' l' sh' b' F D e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 94 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh' (e'\\<bullet>F{D} := e\\<^sub>2)", "using FAssRed1 nsub_RI_iconf[of e\\<^sub>2 sh'] val_of_spec"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n\ngoal (1 subgoal):\n 1. iconf sh' (e'\\<bullet>F{D} := e\\<^sub>2)", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e';\n     iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e';\n     iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n     \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconf sh' (e'\\<bullet>F{D} := e\\<^sub>2)\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n        P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n        \\<not> sub_RI e\\<^sub>2 \\<Longrightarrow> iconf sh' e\\<^sub>2;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e'\\<bullet>F{D} := e\\<^sub>2)", "qed(simp,fast)"], ["proof (state)\nthis:\n  iconf sh' (e'\\<bullet>F{D} := e\\<^sub>2)\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 93 subgoals...", "case (CallObj e h l sh b e' h' l' sh' b' M es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>M(es))\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 93 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>M(es))", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>M(es))\n\ngoal (1 subgoal):\n 1. iconf sh' (e'\\<bullet>M(es))", "using CallObj nsub_RIs_iconfs[of es sh'] val_of_spec"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>M(es))\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e\\<bullet>M(es))\n  \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n\ngoal (1 subgoal):\n 1. iconf sh' (e'\\<bullet>M(es))", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e\\<bullet>M(es));\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e\\<bullet>M(es));\n     \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconf sh' (e'\\<bullet>M(es))\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e\\<bullet>M(es));\n        P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e';\n        iconf sh (e\\<bullet>M(es));\n        \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e'\\<bullet>M(es))", "qed(simp,fast)"], ["proof (state)\nthis:\n  iconf sh' (e'\\<bullet>M(es))\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 92 subgoals...", "case RedCall"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  iconf sh_ (addr a_\\<bullet>M_(map Val vs_))\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 92 subgoals...", "then"], ["proof (chain)\npicking this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  iconf sh_ (addr a_\\<bullet>M_(map Val vs_))", "show ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  iconf sh_ (addr a_\\<bullet>M_(map Val vs_))\n\ngoal (1 subgoal):\n 1. iconf sh_ (blocks (this # pns_, Class D_ # Ts_, Addr a_ # vs_, body_))", "using sees_wwf_nsub_RI[OF wf RedCall.hyps(2)]"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  iconf sh_ (addr a_\\<bullet>M_(map Val vs_))\n  \\<not> sub_RI body_\n\ngoal (1 subgoal):\n 1. iconf sh_ (blocks (this # pns_, Class D_ # Ts_, Addr a_ # vs_, body_))", "by (clarsimp simp: assigned_def nsub_RI_iconf)"], ["proof (state)\nthis:\n  iconf sh_ (blocks (this # pns_, Class D_ # Ts_, Addr a_ # vs_, body_))\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 91 subgoals...", "case (RedSCall C M Ts T pns body D vs a a b)"], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  iconf b (C\\<bullet>\\<^sub>sM(map Val vs))\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 91 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  iconf b (C\\<bullet>\\<^sub>sM(map Val vs))", "have \"\\<not>sub_RI (blocks (pns, Ts, vs, body))\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  iconf b (C\\<bullet>\\<^sub>sM(map Val vs))\n\ngoal (1 subgoal):\n 1. \\<not> sub_RI (blocks (pns, Ts, vs, body))", "using sees_wwf_nsub_RI[OF wf RedSCall.hyps(1)]"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  iconf b (C\\<bullet>\\<^sub>sM(map Val vs))\n  \\<not> sub_RI body\n\ngoal (1 subgoal):\n 1. \\<not> sub_RI (blocks (pns, Ts, vs, body))", "by simp"], ["proof (state)\nthis:\n  \\<not> sub_RI (blocks (pns, Ts, vs, body))\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 91 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> sub_RI (blocks (pns, Ts, vs, body))", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> sub_RI (blocks (pns, Ts, vs, body))\n\ngoal (1 subgoal):\n 1. iconf b (blocks (pns, Ts, vs, body))", "by(rule nsub_RI_iconf)"], ["proof (state)\nthis:\n  iconf b (blocks (pns, Ts, vs, body))\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 90 subgoals...", "case SCallInitRed"], ["proof (state)\nthis:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 90 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n\ngoal (1 subgoal):\n 1. iconf sh_\n     (INIT D_ ([D_],False) \\<leftarrow> C_\\<bullet>\\<^sub>sM_(map Val vs_))", "by fastforce"], ["proof (state)\nthis:\n  iconf sh_\n   (INIT D_ ([D_],False) \\<leftarrow> C_\\<bullet>\\<^sub>sM_(map Val vs_))\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 89 subgoals...", "next"], ["proof (state)\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 89 subgoals...", "case (BlockRedNone e h l V sh b e' h' l' sh' b' T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 89 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n\ngoal (1 subgoal):\n 1. iconf sh' {V:T; e'}", "by auto"], ["proof (state)\nthis:\n  iconf sh' {V:T; e'}\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 88 subgoals...", "next"], ["proof (state)\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 88 subgoals...", "case (SeqRed e h l sh b e' h' l' sh' b' e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e;; e\\<^sub>2)\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 88 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e;; e\\<^sub>2)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e;; e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh' (e';; e\\<^sub>2)", "proof(cases \"lass_val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n     lass_val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "case None"], ["proof (state)\nthis:\n  lass_val_of e = None\n\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n     lass_val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "then"], ["proof (chain)\npicking this:\n  lass_val_of e = None", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. iconf sh' (e';; e\\<^sub>2)", "using SeqRed nsub_RI_iconf"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e;; e\\<^sub>2)\n  \\<not> sub_RI ?e \\<Longrightarrow> iconf ?sh ?e\n\ngoal (1 subgoal):\n 1. iconf sh' (e';; e\\<^sub>2)", "by(auto dest: val_of_spec)"], ["proof (state)\nthis:\n  iconf sh' (e';; e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "case (Some a)"], ["proof (state)\nthis:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "have \"e' = unit \\<and> sh' = sh\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e' = unit \\<and> sh' = sh", "by(simp add: lass_val_of_red[OF Some SeqRed(1)])"], ["proof (state)\nthis:\n  e' = unit \\<and> sh' = sh\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconf sh (e;; e\\<^sub>2);\n        lass_val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (e';; e\\<^sub>2)", "then"], ["proof (chain)\npicking this:\n  e' = unit \\<and> sh' = sh", "show ?thesis"], ["proof (prove)\nusing this:\n  e' = unit \\<and> sh' = sh\n\ngoal (1 subgoal):\n 1. iconf sh' (e';; e\\<^sub>2)", "using SeqRed Some"], ["proof (prove)\nusing this:\n  e' = unit \\<and> sh' = sh\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconf sh (e;; e\\<^sub>2)\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. iconf sh' (e';; e\\<^sub>2)", "by(auto dest: val_of_spec)"], ["proof (state)\nthis:\n  iconf sh' (e';; e\\<^sub>2)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  iconf sh' (e';; e\\<^sub>2)\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 87 subgoals...", "next"], ["proof (state)\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 87 subgoals...", "case (ListRed1 e h l sh b e' h' l' sh' b' es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconfs sh (e # es)\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconfs sh (e # es)", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconfs sh (e # es)\n\ngoal (1 subgoal):\n 1. iconfs sh' (e' # es)", "using ListRed1 nsub_RIs_iconfs[of es sh'] val_of_spec"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconfs sh (e # es)\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh e \\<Longrightarrow> iconf sh' e'\n  iconfs sh (e # es)\n  \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n\ngoal (1 subgoal):\n 1. iconfs sh' (e' # es)", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconfs sh (e # es);\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     iconf sh e \\<Longrightarrow> iconf sh' e'; iconfs sh (e # es);\n     \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     val_of e = None\\<rbrakk>\n    \\<Longrightarrow> iconfs sh' (e' # es)\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconfs sh (e # es);\n        P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        iconf sh e \\<Longrightarrow> iconf sh' e'; iconfs sh (e # es);\n        \\<not> sub_RIs es \\<Longrightarrow> iconfs sh' es;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> iconfs sh' (e' # es)", "qed(simp,fast)"], ["proof (state)\nthis:\n  iconfs sh' (e' # es)\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 86 subgoals...", "next"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 86 subgoals...", "case RedInit"], ["proof (state)\nthis:\n  \\<not> sub_RI e_\n  iconf b_ (INIT C_ ([],ba___) \\<leftarrow> e_)\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 86 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> sub_RI e_\n  iconf b_ (INIT C_ ([],ba___) \\<leftarrow> e_)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> sub_RI e_\n  iconf b_ (INIT C_ ([],ba___) \\<leftarrow> e_)\n\ngoal (1 subgoal):\n 1. iconf b_ e_", "by(auto simp: nsub_RI_iconf)"], ["proof (state)\nthis:\n  iconf b_ e_\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 85 subgoals...", "next"], ["proof (state)\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 85 subgoals...", "case (RedInitDone sh C sfs C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 85 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)", "show ?case"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n\ngoal (1 subgoal):\n 1. iconf sh (INIT C' (Cs,True) \\<leftarrow> e)", "proof(cases Cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n     iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e); Cs = []\\<rbrakk>\n    \\<Longrightarrow> iconf sh (INIT C' (Cs,True) \\<leftarrow> e)\n 2. \\<And>a list.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e);\n        Cs = a # list\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C' (Cs,True) \\<leftarrow> e)", "qed(auto simp: initPD_def)"], ["proof (state)\nthis:\n  iconf sh (INIT C' (Cs,True) \\<leftarrow> e)\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 84 subgoals...", "next"], ["proof (state)\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 84 subgoals...", "case (RedInitProcessing sh C sfs C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 84 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)", "show ?case"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n\ngoal (1 subgoal):\n 1. iconf sh (INIT C' (Cs,True) \\<leftarrow> e)", "proof(cases Cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>sh C = \\<lfloor>(sfs, Processing)\\<rfloor>;\n     iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e); Cs = []\\<rbrakk>\n    \\<Longrightarrow> iconf sh (INIT C' (Cs,True) \\<leftarrow> e)\n 2. \\<And>a list.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Processing)\\<rfloor>;\n        iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e);\n        Cs = a # list\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C' (Cs,True) \\<leftarrow> e)", "qed(auto simp: initPD_def)"], ["proof (state)\nthis:\n  iconf sh (INIT C' (Cs,True) \\<leftarrow> e)\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 83 subgoals...", "next"], ["proof (state)\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 83 subgoals...", "case (RedRInit sh C sfs i sh' C' Cs v e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 83 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)", "show ?case"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n\ngoal (1 subgoal):\n 1. iconf sh' (INIT C' (Cs,True) \\<leftarrow> e)", "proof(cases Cs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>sh C = \\<lfloor>(sfs, i)\\<rfloor>;\n     sh' = sh(C \\<mapsto> (sfs, Done)); C' = last (C # Cs);\n     iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e); Cs = []\\<rbrakk>\n    \\<Longrightarrow> iconf sh' (INIT C' (Cs,True) \\<leftarrow> e)\n 2. \\<And>a list.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, i)\\<rfloor>;\n        sh' = sh(C \\<mapsto> (sfs, Done)); C' = last (C # Cs);\n        iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e); Cs = a # list\\<rbrakk>\n       \\<Longrightarrow> iconf sh' (INIT C' (Cs,True) \\<leftarrow> e)", "qed(auto simp: initPD_def)"], ["proof (state)\nthis:\n  iconf sh' (INIT C' (Cs,True) \\<leftarrow> e)\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 82 subgoals...", "next"], ["proof (state)\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 82 subgoals...", "case CallThrowParams"], ["proof (state)\nthis:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (Val v_\\<bullet>M_(es_))\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 82 subgoals...", "then"], ["proof (chain)\npicking this:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (Val v_\\<bullet>M_(es_))", "show ?case"], ["proof (prove)\nusing this:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (Val v_\\<bullet>M_(es_))\n\ngoal (1 subgoal):\n 1. iconf ba___ (throw e_)", "by(auto simp: iconfs_map_throw)"], ["proof (state)\nthis:\n  iconf ba___ (throw e_)\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 81 subgoals...", "next"], ["proof (state)\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 81 subgoals...", "case SCallThrowParams"], ["proof (state)\nthis:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(es_))\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(es_))", "show ?case"], ["proof (prove)\nusing this:\n  es_ = map Val vs_ @ throw e_ # es'_\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(es_))\n\ngoal (1 subgoal):\n 1. iconf ba___ (throw e_)", "by(auto simp: iconfs_map_throw)"], ["proof (state)\nthis:\n  iconf ba___ (throw e_)\n\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C)\\<rbrakk>\n       \\<Longrightarrow> iconf sh (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e'; iconf b (Cast C e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb (Cast C e')\n 6. \\<And>C a aa b ba. iconf b (Cast C null) \\<Longrightarrow> iconf b null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        iconf sh (Cast C (addr a))\\<rbrakk>\n       \\<Longrightarrow> iconf sh (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        iconf b e \\<Longrightarrow> iconf bb e';\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\\<rbrakk>\n       \\<Longrightarrow> iconf bb\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2)\\<rbrakk>\n        \\<Longrightarrow> iconf b (Val v)\nA total of 80 subgoals...", "qed(auto simp: nsub_RI_iconf lass_val_of_iconf)"], ["", "(*>*)"], ["", "lemma Seq_bconf_preserve_aux:\nassumes \"P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h', l', sh'),b'\\<rangle>\" and \"P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\"\n  and \"P,sh \\<turnstile>\\<^sub>b (e::expr,b) \\<surd> \\<longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'::expr,b') \\<surd>\"\nshows \"P,sh' \\<turnstile>\\<^sub>b (e';;e\\<^sub>2,b') \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. val_of e = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case None"], ["proof (state)\nthis:\n  val_of e = None\n\ngoal (2 subgoals):\n 1. val_of e = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "proof(cases \"lass_val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case lNone: None"], ["proof (state)\nthis:\n  lass_val_of e = None\n\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "proof(cases \"lass_val_of e'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lass_val_of e' = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       lass_val_of e' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case lNone': None"], ["proof (state)\nthis:\n  lass_val_of e' = None\n\ngoal (2 subgoals):\n 1. lass_val_of e' = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       lass_val_of e' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  lass_val_of e' = None", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e' = None\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "using None assms lNone"], ["proof (prove)\nusing this:\n  lass_val_of e' = None\n  val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n  P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<longrightarrow>\n  P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "by(auto dest: val_of_spec simp: bconf_def option.distinct(1))"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case (Some a)"], ["proof (state)\nthis:\n  lass_val_of e' = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  lass_val_of e' = \\<lfloor>a\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e' = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "using None assms lNone"], ["proof (prove)\nusing this:\n  lass_val_of e' = \\<lfloor>a\\<rfloor>\n  val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n  P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<longrightarrow>\n  P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "by(auto dest: lass_val_of_spec simp: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case (Some a)"], ["proof (state)\nthis:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  lass_val_of e = \\<lfloor>a\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "using None assms"], ["proof (prove)\nusing this:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n  val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n  P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<longrightarrow>\n  P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "by(auto dest: lass_val_of_spec)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "case (Some a)"], ["proof (state)\nthis:\n  val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  val_of e = \\<lfloor>a\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "using assms"], ["proof (prove)\nusing this:\n  val_of e = \\<lfloor>a\\<rfloor>\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n  P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<longrightarrow>\n  P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "by(auto dest: val_of_spec)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem red_preserves_bconf:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconf sh e \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\"\nand reds_preserves_bconf:\n  \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> iconfs sh es \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd> \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>) &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      iconfs sh es; P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>) &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      iconfs sh es; P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>)", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Cast C e);\n        P,b \\<turnstile>\\<^sub>b (Cast C e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>\n 6. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lbrakk>iconf b e;\n          P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n         iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n         P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n                v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\nA total of 95 subgoals...", "case (CastRed e a a b b e' a a b b' C)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Cast C e)\n  P,ba__ \\<turnstile>\\<^sub>b (Cast C e,bb__) \\<surd>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Cast C e);\n        P,b \\<turnstile>\\<^sub>b (Cast C e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>\n 6. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lbrakk>iconf b e;\n          P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n         iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n         P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n                v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\nA total of 95 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Cast C e)\n  P,ba__ \\<turnstile>\\<^sub>b (Cast C e,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Cast C e)\n  P,ba__ \\<turnstile>\\<^sub>b (Cast C e,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Cast C e);\n     P,ba__ \\<turnstile>\\<^sub>b (Cast C e,bb__) \\<surd>; b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Cast C e);\n     P,ba__ \\<turnstile>\\<^sub>b (Cast C e,bb__) \\<surd>; \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (Cast C e',b') \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n           v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n           v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\nA total of 94 subgoals...", "case (BinOpRed1 e h l sh b e' h' l' sh' b' bop e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b) \\<surd>\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n           v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\nA total of 94 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "case True"], ["proof (state)\nthis:\n  b'\n\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "with BinOpRed1 val_of_spec"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "proof(cases \"val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n     P,sh \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b) \\<surd>;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     b'; val_of e = None\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        \\<lbrakk>iconf sh e;\n         P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf sh (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,sh \\<turnstile>\\<^sub>b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b) \\<surd>;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        b'; val_of e = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "qed(simp,fast)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>", "by (simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2,b') \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 10. \\<And>l V v h sh b.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n         P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 10. \\<And>l V v h sh b.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n         P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\nA total of 93 subgoals...", "case (BinOpRed2 e a a b b e' a a b b' v\\<^sub>1 bop)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,bb__) \\<surd>\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lbrakk>iconf b e; P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 10. \\<And>l V v h sh b.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n         P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\nA total of 93 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e',b') \\<surd>\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lbrakk>iconf b e;\n          P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n         iconf b (V:=e); P,b \\<turnstile>\\<^sub>b (V:=e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lbrakk>iconf b e;\n          P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n         iconf b (V:=e); P,b \\<turnstile>\\<^sub>b (V:=e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>\nA total of 92 subgoals...", "case (LAssRed e a a b b e' a a b b' V)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (V:=e)\n  P,ba__ \\<turnstile>\\<^sub>b (V:=e,bb__) \\<surd>\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>e a aa b ba e' ab ac bb b' V.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lbrakk>iconf b e;\n          P,b \\<turnstile>\\<^sub>b (e,ba) \\<surd>\\<rbrakk>\n         \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n         iconf b (V:=e); P,b \\<turnstile>\\<^sub>b (V:=e,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,bb \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>\nA total of 92 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (V:=e)\n  P,ba__ \\<turnstile>\\<^sub>b (V:=e,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (V:=e)\n  P,ba__ \\<turnstile>\\<^sub>b (V:=e,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (V:=e); P,ba__ \\<turnstile>\\<^sub>b (V:=e,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (V:=e); P,ba__ \\<turnstile>\\<^sub>b (V:=e,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (V:=e',b') \\<surd>\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 91 subgoals...", "case (FAccRed e a a b b e' a a b b' F D)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (e\\<bullet>F{D})\n  P,ba__ \\<turnstile>\\<^sub>b (e\\<bullet>F{D},bb__) \\<surd>\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 91 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (e\\<bullet>F{D})\n  P,ba__ \\<turnstile>\\<^sub>b (e\\<bullet>F{D},bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (e\\<bullet>F{D})\n  P,ba__ \\<turnstile>\\<^sub>b (e\\<bullet>F{D},bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (e'\\<bullet>F{D},b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (e\\<bullet>F{D});\n     P,ba__ \\<turnstile>\\<^sub>b (e\\<bullet>F{D},bb__) \\<surd>; b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e'\\<bullet>F{D},b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (e\\<bullet>F{D});\n     P,ba__ \\<turnstile>\\<^sub>b (e\\<bullet>F{D},bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e'\\<bullet>F{D},b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (e'\\<bullet>F{D},b') \\<surd>\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 90 subgoals...", "case (RedSFAccNonStatic C F t D h l sh b)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D},b) \\<surd>\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 90 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D},b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D},b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh \\<turnstile>\\<^sub>b (THROW\n                                IncompatibleClassChangeError,False) \\<surd>", "using has_field_fun[of P C F NonStatic]"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D},b) \\<surd>\n  \\<lbrakk>P \\<turnstile> C has F,NonStatic:?T in ?D;\n   P \\<turnstile> C has F,?b':?T' in ?D\\<rbrakk>\n  \\<Longrightarrow> NonStatic = ?b' \\<and> ?T' = ?T\n\ngoal (1 subgoal):\n 1. P,sh \\<turnstile>\\<^sub>b (THROW\n                                IncompatibleClassChangeError,False) \\<surd>", "by (auto simp: bconf_def)"], ["proof (state)\nthis:\n  P,sh \\<turnstile>\\<^sub>b (THROW\n                              IncompatibleClassChangeError,False) \\<surd>\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 89 subgoals...", "next"], ["proof (state)\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 89 subgoals...", "case (FAssRed1 e h l sh b e' h' l' sh' b' F D e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>F{D} := e\\<^sub>2,b) \\<surd>\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 89 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "case True"], ["proof (state)\nthis:\n  b'\n\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "with FAssRed1 val_of_spec"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>F{D} := e\\<^sub>2,b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>F{D} := e\\<^sub>2,b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "proof(cases \"val_of e'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n     P,sh \\<turnstile>\\<^sub>b (e\\<bullet>F{D} := e\\<^sub>2,b) \\<surd>;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     b'; val_of e' = None\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        \\<lbrakk>iconf sh e;\n         P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf sh (e\\<bullet>F{D} := e\\<^sub>2);\n        P,sh \\<turnstile>\\<^sub>b (e\\<bullet>F{D} := e\\<^sub>2,b) \\<surd>;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        b'; val_of e' = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "qed((simp,fast)+)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>", "by(simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>F{D} := e\\<^sub>2,b') \\<surd>\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 88 subgoals...", "next"], ["proof (state)\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 88 subgoals...", "case (FAssRed2 e a a b b e' a a b b' v F D)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>F{D} := e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e,bb__) \\<surd>\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 88 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>F{D} := e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>F{D} := e)\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Val v\\<bullet>F{D} := e);\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<bullet>F{D} := e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (Val v\\<bullet>F{D} := e);\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<bullet>F{D} := e',b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (Val v\\<bullet>F{D} := e',b') \\<surd>\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 87 subgoals...", "next"], ["proof (state)\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 87 subgoals...", "case (SFAssRed e h l sh b e' h' l' sh' b' C F D)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e,b) \\<surd>\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e,b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e,b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf sh (C\\<bullet>\\<^sub>sF{D} := e);\n     P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e,b) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf sh (C\\<bullet>\\<^sub>sF{D} := e);\n     P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e,b) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e',b') \\<surd>", "qed(fastforce simp: bconf_def val_no_step)+"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := e',b') \\<surd>\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 86 subgoals...", "next"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 86 subgoals...", "case (RedSFAssNonStatic C F t D v a a b b)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf ba__ (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,ba__ \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := Val v,b) \\<surd>\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 86 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf ba__ (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,ba__ \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := Val v,b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf ba__ (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,ba__ \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := Val v,b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,ba__ \\<turnstile>\\<^sub>b (THROW\n                                  IncompatibleClassChangeError,False) \\<surd>", "using has_field_fun[of P C F NonStatic]"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,NonStatic:t in D\n  iconf ba__ (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,ba__ \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sF{D} := Val v,b) \\<surd>\n  \\<lbrakk>P \\<turnstile> C has F,NonStatic:?T in ?D;\n   P \\<turnstile> C has F,?b':?T' in ?D\\<rbrakk>\n  \\<Longrightarrow> NonStatic = ?b' \\<and> ?T' = ?T\n\ngoal (1 subgoal):\n 1. P,ba__ \\<turnstile>\\<^sub>b (THROW\n                                  IncompatibleClassChangeError,False) \\<surd>", "by (auto simp: bconf_def)"], ["proof (state)\nthis:\n  P,ba__ \\<turnstile>\\<^sub>b (THROW\n                                IncompatibleClassChangeError,False) \\<surd>\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 85 subgoals...", "next"], ["proof (state)\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 85 subgoals...", "case (CallObj e h l sh b e' h' l' sh' b' M es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>M(es))\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>M(es),b) \\<surd>\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 85 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "case True"], ["proof (state)\nthis:\n  b'\n\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "with CallObj val_of_spec"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>M(es))\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>M(es),b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'", "show ?thesis"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e\\<bullet>M(es))\n  P,sh \\<turnstile>\\<^sub>b (e\\<bullet>M(es),b) \\<surd>\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "proof(cases \"val_of e'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf sh (e\\<bullet>M(es));\n     P,sh \\<turnstile>\\<^sub>b (e\\<bullet>M(es),b) \\<surd>;\n     \\<And>e v. val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     b'; val_of e' = None\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n 2. \\<And>a.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),\n                                b\\<rangle> \\<rightarrow>\n                               \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        \\<lbrakk>iconf sh e;\n         P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf sh (e\\<bullet>M(es));\n        P,sh \\<turnstile>\\<^sub>b (e\\<bullet>M(es),b) \\<surd>;\n        \\<And>e v.\n           val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n        b'; val_of e' = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "qed((simp,fast)+)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>", "by(simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e'\\<bullet>M(es),b') \\<surd>\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 84 subgoals...", "next"], ["proof (state)\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 84 subgoals...", "case (CallParams es a a b b es' a a b b' v M)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,(a__, aa__, ba__),bb__\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconfs ba__ es;\n   P,ba__ \\<turnstile>\\<^sub>b (es,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>M(es))\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es),bb__) \\<surd>\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 84 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>es,(a__, aa__, ba__),bb__\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconfs ba__ es;\n   P,ba__ \\<turnstile>\\<^sub>b (es,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>M(es))\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es),bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es,(a__, aa__, ba__),bb__\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconfs ba__ es;\n   P,ba__ \\<turnstile>\\<^sub>b (es,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf ba__ (Val v\\<bullet>M(es))\n  P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es),bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es'),b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>es,(a__, aa__, ba__),\n                             bb__\\<rangle> [\\<rightarrow>]\n                            \\<langle>es',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconfs ba__ es;\n      P,ba__ \\<turnstile>\\<^sub>b (es,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n     iconf ba__ (Val v\\<bullet>M(es));\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es),bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<bullet>M(es'),b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>es,(a__, aa__, ba__),\n                             bb__\\<rangle> [\\<rightarrow>]\n                            \\<langle>es',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconfs ba__ es;\n      P,ba__ \\<turnstile>\\<^sub>b (es,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n     iconf ba__ (Val v\\<bullet>M(es));\n     P,ba__ \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es),bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val\n           v\\<bullet>M(es'),b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (Val v\\<bullet>M(es'),b') \\<surd>\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 83 subgoals...", "next"], ["proof (state)\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 83 subgoals...", "case (SCallParams es h l sh b es' h' l' sh' b' C M)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconfs sh es; P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 83 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "case b': True"], ["proof (state)\nthis:\n  b'\n\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "proof(cases \"map_vals_of es'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. map_vals_of es' = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<And>a.\n       map_vals_of es' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "case None"], ["proof (state)\nthis:\n  map_vals_of es' = None\n\ngoal (2 subgoals):\n 1. map_vals_of es' = None \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<And>a.\n       map_vals_of es' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  map_vals_of es' = None", "show ?thesis"], ["proof (prove)\nusing this:\n  map_vals_of es' = None\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "using SCallParams b' vals_no_step"], ["proof (prove)\nusing this:\n  map_vals_of es' = None\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconfs sh es; P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>\n  b'\n  map_vals_of ?es = \\<lfloor>?vs\\<rfloor> \\<Longrightarrow>\n  ((?es, ?s, ?b), ?es', ?s', ?b') \\<notin> reds ?P\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "proof(cases \"map_vals_of es\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>map_vals_of es' = None;\n     P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconfs sh es;\n      P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n     iconf sh (C\\<bullet>\\<^sub>sM(es));\n     P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>; b';\n     \\<And>es vs s b es' s' b' P.\n        map_vals_of es = \\<lfloor>vs\\<rfloor> \\<Longrightarrow>\n        ((es, s, b), es', s', b') \\<notin> reds P;\n     map_vals_of es = None\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<And>a.\n       \\<lbrakk>map_vals_of es' = None;\n        P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                       \\<langle>es',(h', l', sh'),b'\\<rangle>;\n        \\<lbrakk>iconfs sh es;\n         P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sM(es));\n        P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>; b';\n        \\<And>es vs s b es' s' b' P.\n           map_vals_of es = \\<lfloor>vs\\<rfloor> \\<Longrightarrow>\n           ((es, s, b), es', s', b') \\<notin> reds P;\n        map_vals_of es = \\<lfloor>a\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "qed(clarsimp,fast)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       map_vals_of es' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       map_vals_of es' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "case f: Some"], ["proof (state)\nthis:\n  map_vals_of es' = \\<lfloor>a_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       map_vals_of es' = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  map_vals_of es' = \\<lfloor>a_\\<rfloor>", "show ?thesis"], ["proof (prove)\nusing this:\n  map_vals_of es' = \\<lfloor>a_\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "using SCallParams b' vals_no_step"], ["proof (prove)\nusing this:\n  map_vals_of es' = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconfs sh es; P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>\n  b'\n  map_vals_of ?es = \\<lfloor>?vs\\<rfloor> \\<Longrightarrow>\n  ((?es, ?s, ?b), ?es', ?s', ?b') \\<notin> reds ?P\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "proof(cases \"map_vals_of es\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>map_vals_of es' = \\<lfloor>a_\\<rfloor>;\n     P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconfs sh es;\n      P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n     iconf sh (C\\<bullet>\\<^sub>sM(es));\n     P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>; b';\n     \\<And>es vs s b es' s' b' P.\n        map_vals_of es = \\<lfloor>vs\\<rfloor> \\<Longrightarrow>\n        ((es, s, b), es', s', b') \\<notin> reds P;\n     map_vals_of es = None\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n 2. \\<And>aa.\n       \\<lbrakk>map_vals_of es' = \\<lfloor>a_\\<rfloor>;\n        P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                       \\<langle>es',(h', l', sh'),b'\\<rangle>;\n        \\<lbrakk>iconfs sh es;\n         P,sh \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sM(es));\n        P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es),b) \\<surd>; b';\n        \\<And>es vs s b es' s' b' P.\n           map_vals_of es = \\<lfloor>vs\\<rfloor> \\<Longrightarrow>\n           ((es, s, b), es', s', b') \\<notin> reds P;\n        map_vals_of es = \\<lfloor>aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "qed(clarsimp,fast)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>", "by(simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(es'),b') \\<surd>\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 82 subgoals...", "next"], ["proof (state)\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 82 subgoals...", "case (SCallInitDoneRed C M Ts T pns body D sh sfs vs h l)"], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n  M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),False) \\<surd>\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 82 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n  M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),False) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n  M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),False) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),True) \\<surd>", "by(auto simp: bconf_def initPD_def) (rule_tac x=D in exI, auto)+"], ["proof (state)\nthis:\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),True) \\<surd>\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 81 subgoals...", "next"], ["proof (state)\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 81 subgoals...", "case (RedSCallNonStatic C M Ts T a b D vs h l sh b)"], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a, ba__) in D\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),b) \\<surd>\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a, ba__) in D\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a, ba__) in D\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh \\<turnstile>\\<^sub>b (THROW\n                                IncompatibleClassChangeError,False) \\<surd>", "using sees_method_fun[of P C M NonStatic]"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a, ba__) in D\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,sh \\<turnstile>\\<^sub>b (C\\<bullet>\\<^sub>sM(map Val vs),b) \\<surd>\n  \\<lbrakk>P \\<turnstile> C sees M, NonStatic :  ?TS\\<rightarrow>?T = ?m in ?D;\n   P \\<turnstile> C sees M, ?b' :  ?TS'\\<rightarrow>?T' = ?m' in ?D'\\<rbrakk>\n  \\<Longrightarrow> NonStatic = ?b' \\<and>\n                    ?TS' = ?TS \\<and>\n                    ?T' = ?T \\<and> ?m' = ?m \\<and> ?D' = ?D\n\ngoal (1 subgoal):\n 1. P,sh \\<turnstile>\\<^sub>b (THROW\n                                IncompatibleClassChangeError,False) \\<surd>", "by (auto simp: bconf_def)"], ["proof (state)\nthis:\n  P,sh \\<turnstile>\\<^sub>b (THROW\n                              IncompatibleClassChangeError,False) \\<surd>\n\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 80 subgoals...", "next"], ["proof (state)\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 80 subgoals...", "case (BlockRedNone e h l V sh b e' h' l' sh' b' T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>\n\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 80 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "proof(cases \"assigned V e'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n 2. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "case True"], ["proof (state)\nthis:\n  assigned V e'\n\ngoal (2 subgoals):\n 1. assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n 2. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  assigned V e'", "obtain v e2 where \"e' = V := Val v;;e2\""], ["proof (prove)\nusing this:\n  assigned V e'\n\ngoal (1 subgoal):\n 1. (\\<And>v e2.\n        e' = V:=Val v;; e2 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(clarsimp simp: assigned_def)"], ["proof (state)\nthis:\n  e' = V:=Val v;; e2\n\ngoal (2 subgoals):\n 1. assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n 2. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  e' = V:=Val v;; e2", "show ?thesis"], ["proof (prove)\nusing this:\n  e' = V:=Val v;; e2\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "using BlockRedNone"], ["proof (prove)\nusing this:\n  e' = V:=Val v;; e2\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "by(clarsimp simp: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> assigned V e'\n\ngoal (1 subgoal):\n 1. \\<not> assigned V e' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> assigned V e'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> assigned V e'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "using BlockRedNone"], ["proof (prove)\nusing this:\n  \\<not> assigned V e'\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = None\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; e'},b') \\<surd>\n\ngoal (79 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 79 subgoals...", "next"], ["proof (state)\ngoal (79 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 79 subgoals...", "case (BlockRedSome e h l V sh b e' h' l' sh' b' v T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>\n\ngoal (79 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 79 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  iconf sh {V:T; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v;; e'},b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                             b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e; iconf sh {V:T; e};\n     P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>; b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v;;\n                      e'},b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                             b\\<rangle> \\<rightarrow>\n                            \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e; iconf sh {V:T; e};\n     P,sh \\<turnstile>\\<^sub>b ({V:T; e},b) \\<surd>; \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v;;\n                      e'},b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v;; e'},b') \\<surd>\n\ngoal (78 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 78 subgoals...", "next"], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 78 subgoals...", "case (InitBlockRed e h l V v sh b e' h' l' sh' b' v' T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = \\<lfloor>v'\\<rfloor>\n  iconf sh {V:T; V:=Val v;; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; V:=Val v;; e},b) \\<surd>\n\ngoal (78 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 78 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "case True"], ["proof (state)\nthis:\n  b'\n\ngoal (2 subgoals):\n 1. b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>\n 2. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  b'", "show ?thesis"], ["proof (prove)\nusing this:\n  b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "using InitBlockRed"], ["proof (prove)\nusing this:\n  b'\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  l' V = \\<lfloor>v'\\<rfloor>\n  iconf sh {V:T; V:=Val v;; e}\n  P,sh \\<turnstile>\\<^sub>b ({V:T; V:=Val v;; e},b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "by (simp add: assigned_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "case False"], ["proof (state)\nthis:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. \\<not> b' \\<Longrightarrow>\n    P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  \\<not> b'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> b'\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>", "by(simp add: bconf_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b ({V:T; V:=Val v';; e'},b') \\<surd>\n\ngoal (77 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 77 subgoals...", "next"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 77 subgoals...", "case (RedBlock V T u)"], ["proof (state)\nthis:\n  iconf ba___ {V:T; Val u}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Val u},b_) \\<surd>\n\ngoal (77 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  iconf ba___ {V:T; Val u}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Val u},b_) \\<surd>", "have \"\\<not>assigned V (Val u)\""], ["proof (prove)\nusing this:\n  iconf ba___ {V:T; Val u}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Val u},b_) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> assigned V (Val u)", "by(clarsimp simp: assigned_def)"], ["proof (state)\nthis:\n  \\<not> assigned V (Val u)\n\ngoal (77 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> assigned V (Val u)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> assigned V (Val u)\n\ngoal (1 subgoal):\n 1. P,ba___ \\<turnstile>\\<^sub>b (Val u,b_) \\<surd>", "using RedBlock"], ["proof (prove)\nusing this:\n  \\<not> assigned V (Val u)\n  iconf ba___ {V:T; Val u}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Val u},b_) \\<surd>\n\ngoal (1 subgoal):\n 1. P,ba___ \\<turnstile>\\<^sub>b (Val u,b_) \\<surd>", "by(simp add: bconf_def)"], ["proof (state)\nthis:\n  P,ba___ \\<turnstile>\\<^sub>b (Val u,b_) \\<surd>\n\ngoal (76 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 76 subgoals...", "next"], ["proof (state)\ngoal (76 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 76 subgoals...", "case (SeqRed e h l sh b e' h' l' sh' b' e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n\ngoal (76 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 76 subgoals...", "have \"iconf sh e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e", "proof(cases \"lass_val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow> iconf sh e\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow> iconf sh e", "case (Some a)"], ["proof (state)\nthis:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow> iconf sh e\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow> iconf sh e", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e", "by(rule lass_val_of_iconf[OF Some])"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal (1 subgoal):\n 1. lass_val_of e = None \\<Longrightarrow> iconf sh e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lass_val_of e = None \\<Longrightarrow> iconf sh e", "case None"], ["proof (state)\nthis:\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. lass_val_of e = None \\<Longrightarrow> iconf sh e", "then"], ["proof (chain)\npicking this:\n  lass_val_of e = None", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. iconf sh e", "using SeqRed"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n\ngoal (1 subgoal):\n 1. iconf sh e", "by(auto dest: val_of_spec)"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal (76 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 76 subgoals...", "then"], ["proof (chain)\npicking this:\n  iconf sh e", "show ?case"], ["proof (prove)\nusing this:\n  iconf sh e\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "using SeqRed Seq_bconf_preserve_aux"], ["proof (prove)\nusing this:\n  iconf sh e\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,sh \\<turnstile>\\<^sub>b (e;; e\\<^sub>2,b) \\<surd>\n  \\<lbrakk>?P \\<turnstile> \\<langle>?e,(?h, ?l, ?sh),\n                            ?b\\<rangle> \\<rightarrow>\n                           \\<langle>?e',(?h', ?l', ?sh'),?b'\\<rangle>;\n   ?P,?sh \\<turnstile>\\<^sub>b (?e;; ?e\\<^sub>2,?b) \\<surd>;\n   ?P,?sh \\<turnstile>\\<^sub>b (?e,?b) \\<surd> \\<longrightarrow>\n   ?P,?sh' \\<turnstile>\\<^sub>b (?e',?b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> ?P,?sh' \\<turnstile>\\<^sub>b (?e';;\n                    ?e\\<^sub>2,?b') \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e';; e\\<^sub>2,b') \\<surd>\n\ngoal (75 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 75 subgoals...", "next"], ["proof (state)\ngoal (75 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 75 subgoals...", "case (CondRed e a a b b e' a a b b' e\\<^sub>1 e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (if (e) e\\<^sub>1 else e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (if (e) e\\<^sub>1 else e\\<^sub>2,bb__) \\<surd>\n\ngoal (75 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 75 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (if (e) e\\<^sub>1 else e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (if (e) e\\<^sub>1 else e\\<^sub>2,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (if (e) e\\<^sub>1 else e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (if (e) e\\<^sub>1 else e\\<^sub>2,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (if (e') e\\<^sub>1 else e\\<^sub>2,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (if (e) e\\<^sub>1 else e\\<^sub>2);\n     P,ba__ \\<turnstile>\\<^sub>b (if (e) e\\<^sub>1\n     else e\\<^sub>2,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (if (e') e\\<^sub>1\n                      else e\\<^sub>2,b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (if (e) e\\<^sub>1 else e\\<^sub>2);\n     P,ba__ \\<turnstile>\\<^sub>b (if (e) e\\<^sub>1\n     else e\\<^sub>2,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (if (e') e\\<^sub>1\n                      else e\\<^sub>2,b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (if (e') e\\<^sub>1 else e\\<^sub>2,b') \\<surd>\n\ngoal (74 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 74 subgoals...", "next"], ["proof (state)\ngoal (74 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 74 subgoals...", "case (ThrowRed e a a b b e' a a b b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (throw e)\n  P,ba__ \\<turnstile>\\<^sub>b (throw e,bb__) \\<surd>\n\ngoal (74 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 74 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (throw e)\n  P,ba__ \\<turnstile>\\<^sub>b (throw e,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (throw e)\n  P,ba__ \\<turnstile>\\<^sub>b (throw e,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (throw e',b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (throw e);\n     P,ba__ \\<turnstile>\\<^sub>b (throw e,bb__) \\<surd>; b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (throw e',b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (throw e);\n     P,ba__ \\<turnstile>\\<^sub>b (throw e,bb__) \\<surd>; \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (throw e',b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (throw e',b') \\<surd>\n\ngoal (73 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 73 subgoals...", "next"], ["proof (state)\ngoal (73 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 73 subgoals...", "case (TryRed e a a b b e' a a b b' C V e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (try e catch(C V) e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (try e catch(C V) e\\<^sub>2,bb__) \\<surd>\n\ngoal (73 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 73 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (try e catch(C V) e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (try e catch(C V) e\\<^sub>2,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (try e catch(C V) e\\<^sub>2)\n  P,ba__ \\<turnstile>\\<^sub>b (try e catch(C V) e\\<^sub>2,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (try e' catch(C V) e\\<^sub>2,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (try e catch(C V) e\\<^sub>2);\n     P,ba__ \\<turnstile>\\<^sub>b (try e catch(C V) e\\<^sub>2,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (try e'\n                      catch(C V) e\\<^sub>2,b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (try e catch(C V) e\\<^sub>2);\n     P,ba__ \\<turnstile>\\<^sub>b (try e catch(C V) e\\<^sub>2,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (try e'\n                      catch(C V) e\\<^sub>2,b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (try e' catch(C V) e\\<^sub>2,b') \\<surd>\n\ngoal (72 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 72 subgoals...", "next"], ["proof (state)\ngoal (72 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 72 subgoals...", "case (ListRed1 e h l sh b e' h' l' sh' b' es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconfs sh (e # es)\n  P,sh \\<turnstile>\\<^sub>b (e # es,b) \\<surd>\n\ngoal (72 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 72 subgoals...", "with val_of_spec"], ["proof (chain)\npicking this:\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconfs sh (e # es)\n  P,sh \\<turnstile>\\<^sub>b (e # es,b) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow> ?e = Val ?v\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconfs sh (e # es)\n  P,sh \\<turnstile>\\<^sub>b (e # es,b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,sh' \\<turnstile>\\<^sub>b (e' # es,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>e v.\n                val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconfs sh (e # es); P,sh \\<turnstile>\\<^sub>b (e # es,b) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e' # es,b') \\<surd>\n 2. \\<lbrakk>\\<And>e v.\n                val_of e = \\<lfloor>v\\<rfloor> \\<Longrightarrow> e = Val v;\n     P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle>;\n     \\<lbrakk>iconf sh e; P,sh \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconfs sh (e # es); P,sh \\<turnstile>\\<^sub>b (e # es,b) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,sh' \\<turnstile>\\<^sub>b (e' # es,b') \\<surd>", "qed((clarsimp,fast),simp add: bconfs_def)"], ["proof (state)\nthis:\n  P,sh' \\<turnstile>\\<^sub>b (e' # es,b') \\<surd>\n\ngoal (71 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 71 subgoals...", "next"], ["proof (state)\ngoal (71 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 71 subgoals...", "case (RedInit C b' e X Y b b'')"], ["proof (state)\nthis:\n  \\<not> sub_RI C\n  iconf b (INIT b' ([],e) \\<leftarrow> C)\n  P,b \\<turnstile>\\<^sub>b (INIT b' ([],e) \\<leftarrow> C,b'') \\<surd>\n\ngoal (71 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 71 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> sub_RI C\n  iconf b (INIT b' ([],e) \\<leftarrow> C)\n  P,b \\<turnstile>\\<^sub>b (INIT b' ([],e) \\<leftarrow> C,b'') \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> sub_RI C\n  iconf b (INIT b' ([],e) \\<leftarrow> C)\n  P,b \\<turnstile>\\<^sub>b (INIT b' ([],e) \\<leftarrow> C,b'') \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (C,icheck P b' C) \\<surd>", "by(auto simp: bconf_def icheck_ss_exp icheck_init_class icheck_curr_init)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (C,icheck P b' C) \\<surd>\n\ngoal (70 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 70 subgoals...", "next"], ["proof (state)\ngoal (70 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 70 subgoals...", "case (RInitRed e a a b b e' a a b b' C Cs e\\<^sub>0)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,ba__ \\<turnstile>\\<^sub>b (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0,bb__) \\<surd>\n\ngoal (70 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 70 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,ba__ \\<turnstile>\\<^sub>b (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0,bb__) \\<surd>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(a__, aa__, ba__),bb__\\<rangle> \\<rightarrow>\n                 \\<langle>e',(ab__, a, b),b'\\<rangle>\n  \\<lbrakk>iconf ba__ e;\n   P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf ba__ (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,ba__ \\<turnstile>\\<^sub>b (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0,bb__) \\<surd>\n\ngoal (1 subgoal):\n 1. P,b \\<turnstile>\\<^sub>b (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0,b') \\<surd>", "proof(cases b')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0);\n     P,ba__ \\<turnstile>\\<^sub>b (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0,bb__) \\<surd>;\n     b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0,b') \\<surd>\n 2. \\<lbrakk>P \\<turnstile> \\<langle>e,(a__, aa__, ba__),\n                             bb__\\<rangle> \\<rightarrow>\n                            \\<langle>e',(ab__, a, b),b'\\<rangle>;\n     \\<lbrakk>iconf ba__ e;\n      P,ba__ \\<turnstile>\\<^sub>b (e,bb__) \\<surd>\\<rbrakk>\n     \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n     iconf ba__ (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0);\n     P,ba__ \\<turnstile>\\<^sub>b (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0,bb__) \\<surd>;\n     \\<not> b'\\<rbrakk>\n    \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0,b') \\<surd>", "qed(simp, simp add: bconf_def)"], ["proof (state)\nthis:\n  P,b \\<turnstile>\\<^sub>b (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0,b') \\<surd>\n\ngoal (69 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 69 subgoals...", "next"], ["proof (state)\ngoal (69 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 69 subgoals...", "case (BlockThrow V T a)"], ["proof (state)\nthis:\n  iconf ba___ {V:T; Throw a}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Throw a},b_) \\<surd>\n\ngoal (69 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 69 subgoals...", "then"], ["proof (chain)\npicking this:\n  iconf ba___ {V:T; Throw a}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Throw a},b_) \\<surd>", "have \"\\<not>assigned V (Throw a)\""], ["proof (prove)\nusing this:\n  iconf ba___ {V:T; Throw a}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Throw a},b_) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<not> assigned V (Throw a)", "by(simp add: assigned_def)"], ["proof (state)\nthis:\n  \\<not> assigned V (Throw a)\n\ngoal (69 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 69 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> assigned V (Throw a)", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> assigned V (Throw a)\n\ngoal (1 subgoal):\n 1. P,ba___ \\<turnstile>\\<^sub>b (Throw a,b_) \\<surd>", "using BlockThrow"], ["proof (prove)\nusing this:\n  \\<not> assigned V (Throw a)\n  iconf ba___ {V:T; Throw a}\n  P,ba___ \\<turnstile>\\<^sub>b ({V:T; Throw a},b_) \\<surd>\n\ngoal (1 subgoal):\n 1. P,ba___ \\<turnstile>\\<^sub>b (Throw a,b_) \\<surd>", "by simp"], ["proof (state)\nthis:\n  P,ba___ \\<turnstile>\\<^sub>b (Throw a,b_) \\<surd>\n\ngoal (68 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,False) \\<surd>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               OutOfMemory,False) \\<surd>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (new C,True) \\<surd>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; iconf sh (new C);\n        P,sh \\<turnstile>\\<^sub>b (new C,False) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (INIT C ([C],False) \\<leftarrow> new\n         C,False) \\<surd>\n 5. \\<And>C a aa b ba.\n       \\<lbrakk>iconf b (Cast C null);\n        P,b \\<turnstile>\\<^sub>b (Cast C null,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (null,ba) \\<surd>\n 6. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (addr a,b) \\<surd>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*; iconf sh (Cast C (addr a));\n        P,sh \\<turnstile>\\<^sub>b (Cast C (addr a),b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (THROW\n               ClassCast,b) \\<surd>\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,b \\<turnstile>\\<^sub>b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2,ba) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,b \\<turnstile>\\<^sub>b (Val v,ba) \\<surd>\n 9. \\<And>l V v h sh b.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>; iconf sh (Var V);\n        P,sh \\<turnstile>\\<^sub>b (Var V,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (Val v,b) \\<surd>\n 10. \\<And>V v h l sh b.\n        \\<lbrakk>iconf sh (V:=Val v);\n         P,sh \\<turnstile>\\<^sub>b (V:=Val v,b) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,sh \\<turnstile>\\<^sub>b (unit,b) \\<surd>\nA total of 68 subgoals...", "qed(simp_all, auto simp: bconf_def initPD_def)"], ["", "(*>*)"], ["", "text\\<open> Preservation of definite assignment more complex and requires a\nfew lemmas first. \\<close>"], ["", "lemma [iff]: \"\\<And>A. \\<lbrakk> length Vs = length Ts; length vs = length Ts\\<rbrakk> \\<Longrightarrow>\n \\<D> (blocks (Vs,Ts,vs,e)) A = \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (Vs, Ts, vs, e)) A =\n                         \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>A.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (Vs, Ts, vs, e)) A =\n                         \\<D> e (A \\<squnion> \\<lfloor>set Vs\\<rfloor>)", "apply(induct Vs Ts vs e rule:blocks_induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>V Vs T Ts v vs e A.\n       \\<lbrakk>\\<And>A.\n                   \\<lbrakk>length Vs = length Ts;\n                    length vs = length Ts\\<rbrakk>\n                   \\<Longrightarrow> \\<D> (blocks (Vs, Ts, vs, e)) A =\n                                     \\<D> e\n(A \\<squnion> \\<lfloor>set Vs\\<rfloor>);\n        length (V # Vs) = length (T # Ts);\n        length (v # vs) = length (T # Ts)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (V # Vs, T # Ts, v # vs, e)) A =\n                         \\<D> e\n                          (A \\<squnion> \\<lfloor>set (V # Vs)\\<rfloor>)\n 2. \\<And>e A.\n       \\<lbrakk>length [] = length []; length [] = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], [], [], e)) A =\n                         \\<D> e (A \\<squnion> \\<lfloor>set []\\<rfloor>)\n 3. \\<And>vc vd a b A.\n       \\<lbrakk>length [] = length (vc # vd);\n        length a = length (vc # vd)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], vc # vd, a, b)) A =\n                         \\<D> b (A \\<squnion> \\<lfloor>set []\\<rfloor>)\n 4. \\<And>v ve vf vd A.\n       \\<lbrakk>length [] = length v; length (ve # vf) = length v\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks ([], v, ve # vf, vd)) A =\n                         \\<D> vd (A \\<squnion> \\<lfloor>set []\\<rfloor>)\n 5. \\<And>va vb a b A.\n       \\<lbrakk>length (va # vb) = length []; length a = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (va # vb, [], a, b)) A =\n                         \\<D> b\n                          (A \\<squnion> \\<lfloor>set (va # vb)\\<rfloor>)\n 6. \\<And>v vd ve vb A.\n       \\<lbrakk>length v = length []; length (vd # ve) = length []\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (v, [], vd # ve, vb)) A =\n                         \\<D> vb (A \\<squnion> \\<lfloor>set v\\<rfloor>)\n 7. \\<And>va vc vb ve A.\n       \\<lbrakk>length (va # vc) = length vb; length [] = length vb\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (va # vc, vb, [], ve)) A =\n                         \\<D> ve\n                          (A \\<squnion> \\<lfloor>set (va # vc)\\<rfloor>)\n 8. \\<And>v va vc ve A.\n       \\<lbrakk>length v = length (va # vc);\n        length [] = length (va # vc)\\<rbrakk>\n       \\<Longrightarrow> \\<D> (blocks (v, va # vc, [], ve)) A =\n                         \\<D> ve (A \\<squnion> \\<lfloor>set v\\<rfloor>)", "apply(simp_all add:hyperset_defs)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma red_lA_incr: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\n   \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e'\"\nand reds_lA_incr: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle>\n   \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>  \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e') &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es')", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A> e') &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A>s es \\<sqsubseteq>\n     \\<lfloor>dom l'\\<rfloor> \\<squnion> \\<A>s es')", "apply(induct rule:red_reds_inducts)"], ["proof (prove)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs;\n        h' = h(a \\<mapsto> blank P C)\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (new C) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> (addr a)\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (new C) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (THROW OutOfMemory)\n 3. \\<And>sh C sfs h l.\n       sh C = \\<lfloor>(sfs, Done)\\<rfloor> \\<Longrightarrow>\n       \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> (new C) \\<sqsubseteq>\n       \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> (new C)\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (new C) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (INIT C ([C],False) \\<leftarrow> new C)\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lfloor>dom aa\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n        \\<lfloor>dom ac\\<rfloor> \\<squnion> \\<A> e'\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom aa\\<rfloor> \\<squnion>\n                         \\<A> (Cast C e) \\<sqsubseteq>\n                         \\<lfloor>dom ac\\<rfloor> \\<squnion>\n                         \\<A> (Cast C e')\n 6. \\<And>C a aa b ba.\n       \\<lfloor>dom aa\\<rfloor> \\<squnion> \\<A> (Cast C null) \\<sqsubseteq>\n       \\<lfloor>dom aa\\<rfloor> \\<squnion> \\<A> null\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (Cast C (addr a)) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion> \\<A> (addr a)\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (Cast C (addr a)) \\<sqsubseteq>\n                         \\<lfloor>dom l\\<rfloor> \\<squnion>\n                         \\<A> (THROW ClassCast)\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<lfloor>dom aa\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n        \\<lfloor>dom ac\\<rfloor> \\<squnion> \\<A> e'\\<rbrakk>\n       \\<Longrightarrow> \\<lfloor>dom aa\\<rfloor> \\<squnion>\n                         \\<A>\n                          (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2) \\<sqsubseteq>\n                         \\<lfloor>dom ac\\<rfloor> \\<squnion>\n                         \\<A>\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<lfloor>dom aa\\<rfloor> \\<squnion> \\<A> e \\<sqsubseteq>\n         \\<lfloor>dom ac\\<rfloor> \\<squnion> \\<A> e'\\<rbrakk>\n        \\<Longrightarrow> \\<lfloor>dom aa\\<rfloor> \\<squnion>\n                          \\<A>\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e) \\<sqsubseteq>\n                          \\<lfloor>dom ac\\<rfloor> \\<squnion>\n                          \\<A>\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\nA total of 95 subgoals...", "apply(simp_all del:fun_upd_apply add:hyperset_defs)"], ["proof (prove)\ngoal (18 subgoals):\n 1. \\<And>e a aa b ba e' ab ac bb b' e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom aa\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ac \\<union> (x2a \\<union> x2)\n 2. \\<And>e a aa b ba e' ab ac bb b' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom aa \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 3. \\<And>e a aa b ba e' ab ac bb b' V x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom aa \\<subseteq> insert V x2 \\<and>\n                         x2c \\<subseteq> insert V x2\n 4. \\<And>e a aa b ba e' ab ac bb b' e\\<^sub>2 x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A> e\\<^sub>2 =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom aa\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ac \\<union> (x2a \\<union> x2)\n 5. \\<And>e a aa b ba e' ab ac bb b' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom aa \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 6. \\<And>e a aa b ba e' ab ac bb b' es x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>e,(a, aa, b),ba\\<rangle> \\<rightarrow>\n                       \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x2.\n                            \\<A>s es =\n                            \\<lfloor>x2\\<rfloor> \\<longrightarrow>\n                            dom aa\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2c\n                            \\<subseteq> dom ac \\<union>\n  (x2a \\<union> x2) \\<and>\n                            x2 \\<subseteq> dom ac \\<union> (x2a \\<union> x2)\n 7. \\<And>es a aa b ba es' ab ac bb b' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2;\n        P \\<turnstile> \\<langle>es,(a, aa, b),ba\\<rangle> [\\<rightarrow>]\n                       \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<A>s es' = \\<lfloor>x2a\\<rfloor>; dom ac \\<union> x2a = x2;\n        \\<A>s es = \\<lfloor>x2c\\<rfloor>; dom aa \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> dom aa \\<subseteq> x2 \\<and> x2c \\<subseteq> x2\n 8. \\<And>e h l V sh b e' h' l' sh' b' x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = None; \\<not> assigned V e;\n        P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                        b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 9. \\<And>e h l V sh b e' h' l' sh' b' v x2 x2a x2b x2c.\n       \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v\\<rfloor>;\n        \\<not> assigned V e;\n        P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                        b\\<rangle> \\<rightarrow>\n                       \\<langle>e',(h', l', sh'),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n        \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        dom l - {V} \\<union> x2c = x2b\\<rbrakk>\n       \\<Longrightarrow> (l V = None \\<longrightarrow>\n                          dom l\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V}) \\<and>\n                          x2c - {V}\n                          \\<subseteq> dom l' - {V} \\<union>\n(x2a - {V})) \\<and>\n                         ((\\<exists>y.\n                              l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                          dom l\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})) \\<and>\n                          x2c - {V}\n                          \\<subseteq> insert V\n (dom l' \\<union> (x2a - {V})))\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' x2 x2a x2b x2c.\n        \\<lbrakk>x2b \\<subseteq> x2; l' V = \\<lfloor>v'\\<rfloor>;\n         P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                         b\\<rangle> \\<rightarrow>\n                        \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<A> e' = \\<lfloor>x2a\\<rfloor>; dom l' \\<union> x2a = x2;\n         \\<A> e = \\<lfloor>x2c\\<rfloor>;\n         insert V (dom l \\<union> x2c) = x2b\\<rbrakk>\n        \\<Longrightarrow> (l V = None \\<longrightarrow>\n                           dom l\n                           \\<subseteq> dom l' - {V} \\<union>\n (x2a - {V}) \\<and>\n                           x2c - {V}\n                           \\<subseteq> dom l' - {V} \\<union>\n (x2a - {V})) \\<and>\n                          ((\\<exists>y.\n                               l V = \\<lfloor>y\\<rfloor>) \\<longrightarrow>\n                           dom l\n                           \\<subseteq> insert V\n  (dom l' \\<union> (x2a - {V})) \\<and>\n                           x2c - {V}\n                           \\<subseteq> insert V\n  (dom l' \\<union> (x2a - {V})))\nA total of 18 subgoals...", "apply auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>e a aa b ba e' ab ac bb b' e\\<^sub>2 x2 x y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = None; \\<A> e = None;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2\\<rfloor>; aa x = \\<lfloor>y\\<rfloor>;\n        ac x = None\\<rbrakk>\n       \\<Longrightarrow> x \\<in> x2\n 2. \\<And>e a aa b ba e' ab ac bb b' V e\\<^sub>2 x2 y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = None; \\<A> e = None;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2\\<rfloor>; aa V = \\<lfloor>y\\<rfloor>;\n        ac V = None\\<rbrakk>\n       \\<Longrightarrow> False\n 3. \\<And>e a aa b ba e' ab ac bb b' e\\<^sub>2 x2 x2a x y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = None; \\<A> e = \\<lfloor>x2\\<rfloor>;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor>; aa x = \\<lfloor>y\\<rfloor>;\n        ac x = None\\<rbrakk>\n       \\<Longrightarrow> x \\<in> x2a\n 4. \\<And>e a aa b ba e' ab ac bb b' V e\\<^sub>2 x2 x2a y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = None; \\<A> e = \\<lfloor>x2\\<rfloor>;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2a\\<rfloor>; aa V = \\<lfloor>y\\<rfloor>;\n        ac V = None\\<rbrakk>\n       \\<Longrightarrow> False\n 5. \\<And>e a aa b ba e' ab ac bb b' e\\<^sub>2 x2a x2c x2d x y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2d\\<rfloor>; aa x = \\<lfloor>y\\<rfloor>;\n        ac x = None; dom aa \\<subseteq> dom ac \\<union> x2a;\n        x2c \\<subseteq> dom ac \\<union> x2a\\<rbrakk>\n       \\<Longrightarrow> x \\<in> x2d\n 6. \\<And>e a aa b ba e' ab ac bb b' V e\\<^sub>2 x2a x2c x2d y.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<A> e' = \\<lfloor>x2a\\<rfloor>; \\<A> e = \\<lfloor>x2c\\<rfloor>;\n        \\<A> e\\<^sub>2 = \\<lfloor>x2d\\<rfloor>; aa V = \\<lfloor>y\\<rfloor>;\n        ac V = None; dom aa \\<subseteq> dom ac \\<union> x2a;\n        x2c \\<subseteq> dom ac \\<union> x2a\\<rbrakk>\n       \\<Longrightarrow> False", "apply(blast dest:red_lcl_incr)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "text\\<open> Now preservation of definite assignment. \\<close>"], ["", "lemma assumes wf: \"wf_J_prog P\"\nshows red_preserves_defass:\n  \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>\"\nand \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow> \\<D>s es \\<lfloor>dom l\\<rfloor> \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      \\<D> e \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>) &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      \\<D>s es \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>)", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                             \\<langle>e',(h', l', sh'),b'\\<rangle>;\n      \\<D> e \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D> e' \\<lfloor>dom l'\\<rfloor>) &&&\n    (\\<lbrakk>P \\<turnstile> \\<langle>es,(h, l, sh),\n                              b\\<rangle> [\\<rightarrow>]\n                             \\<langle>es',(h', l', sh'),b'\\<rangle>;\n      \\<D>s es \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n     \\<Longrightarrow> \\<D>s es' \\<lfloor>dom l'\\<rfloor>)", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n         \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n         \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D>\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                           \\<lfloor>dom ac\\<rfloor>\nA total of 95 subgoals...", "case BinOpRed1"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom aa___\\<rfloor>\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n         \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n         \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D>\n                           (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                           \\<lfloor>dom ac\\<rfloor>\nA total of 95 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n     \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_ \\<guillemotleft>bop_\\<guillemotright> e\\<^sub>2_)\n   \\<lfloor>dom a_\\<rfloor>\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 94 subgoals...", "case FAssRed1"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_\\<bullet>F_{D_} := e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (94 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 94 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_\\<bullet>F_{D_} := e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_\\<bullet>F_{D_} := e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_\\<bullet>F_{D_} := e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 93 subgoals...", "case CallObj"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_\\<bullet>M_(es_)) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (93 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 93 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_\\<bullet>M_(es_)) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_\\<bullet>M_(es_)) \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: Ds_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_\\<bullet>M_(es_)) \\<lfloor>dom a_\\<rfloor>\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 92 subgoals...", "case RedCall"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (addr a_\\<bullet>M_(map Val vs_)) \\<lfloor>dom l_\\<rfloor>\n\ngoal (92 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 92 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (pns_,\n                          body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (addr a_\\<bullet>M_(map Val vs_)) \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (blocks (this # pns_, Class D_ # Ts_, Addr a_ # vs_, body_))\n     \\<lfloor>dom l_\\<rfloor>", "by (auto dest!:sees_wf_mdecl[OF wf] simp:wf_mdecl_def hyperset_defs elim!:D_mono')"], ["proof (state)\nthis:\n  \\<D> (blocks (this # pns_, Class D_ # Ts_, Addr a_ # vs_, body_))\n   \\<lfloor>dom l_\\<rfloor>\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 91 subgoals...", "case RedSCall"], ["proof (state)\nthis:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (C_\\<bullet>\\<^sub>sM_(map Val vs_)) \\<lfloor>dom a_\\<rfloor>\n\ngoal (91 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 91 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  length vs_ = length pns_\n  length Ts_ = length pns_\n  \\<D> (C_\\<bullet>\\<^sub>sM_(map Val vs_)) \\<lfloor>dom a_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (blocks (pns_, Ts_, vs_, body_)) \\<lfloor>dom a_\\<rfloor>", "by (auto dest!:sees_wf_mdecl[OF wf] simp:wf_mdecl_def hyperset_defs elim!:D_mono')"], ["proof (state)\nthis:\n  \\<D> (blocks (pns_, Ts_, vs_, body_)) \\<lfloor>dom a_\\<rfloor>\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 90 subgoals...", "case SCallInitRed"], ["proof (state)\nthis:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  \\<D> (C_\\<bullet>\\<^sub>sM_(map Val vs_)) \\<lfloor>dom l_\\<rfloor>\n\ngoal (90 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 90 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  \\<D> (C_\\<bullet>\\<^sub>sM_(map Val vs_)) \\<lfloor>dom l_\\<rfloor>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  \\<nexists>sfs. sh_ D_ = \\<lfloor>(sfs, Done)\\<rfloor>\n  M_ \\<noteq> clinit\n  \\<D> (C_\\<bullet>\\<^sub>sM_(map Val vs_)) \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D>\n     (INIT D_ ([D_],False) \\<leftarrow> C_\\<bullet>\\<^sub>sM_(map Val vs_))\n     \\<lfloor>dom l_\\<rfloor>", "by(auto simp:hyperset_defs Ds_Vals)"], ["proof (state)\nthis:\n  \\<D>\n   (INIT D_ ([D_],False) \\<leftarrow> C_\\<bullet>\\<^sub>sM_(map Val vs_))\n   \\<lfloor>dom l_\\<rfloor>\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 89 subgoals...", "next"], ["proof (state)\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 89 subgoals...", "case InitBlockRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ \\<mapsto> v_), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ \\<mapsto> v_))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v'_\\<rfloor>\n  \\<D> {V_:T_; V_:=Val v_;; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (89 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 89 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ \\<mapsto> v_), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ \\<mapsto> v_))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v'_\\<rfloor>\n  \\<D> {V_:T_; V_:=Val v_;; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; V_:=Val v'_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; V_:=Val v'_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 88 subgoals...", "next"], ["proof (state)\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 88 subgoals...", "case BlockRedNone"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (88 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 88 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 87 subgoals...", "next"], ["proof (state)\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 87 subgoals...", "case BlockRedSome"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v_\\<rfloor>\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (87 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 87 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom (l_(V_ := None))\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom l'_\\<rfloor>\n  l'_ V_ = \\<lfloor>v_\\<rfloor>\n  \\<not> assigned V_ e_\n  \\<D> {V_:T_; e_} \\<lfloor>dom l_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> {V_:T_; V_:=Val v_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono' simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<D> {V_:T_; V_:=Val v_;; e'_} \\<lfloor>dom (l'_(V_ := l_ V_))\\<rfloor>\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 86 subgoals...", "next"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 86 subgoals...", "case SeqRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_;; e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (86 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 86 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (e_;; e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (e'_;; e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (e'_;; e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 85 subgoals...", "next"], ["proof (state)\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 85 subgoals...", "case CondRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (if (e_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (85 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 85 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (if (e_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (if (e'_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: D_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D> (if (e'_) e\\<^sub>1_ else e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 84 subgoals...", "next"], ["proof (state)\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 84 subgoals...", "case TryRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (try e_ catch(C_ V_) e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (84 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 84 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D> (try e_ catch(C_ V_) e\\<^sub>2_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (try e'_ catch(C_ V_) e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>", "by (fastforce dest:red_lcl_incr intro:D_mono' simp:hyperset_defs)"], ["proof (state)\nthis:\n  \\<D> (try e'_ catch(C_ V_) e\\<^sub>2_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 83 subgoals...", "next"], ["proof (state)\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 83 subgoals...", "case ListRed1"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D>s (e_ # es_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (83 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 83 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<D> e_ \\<lfloor>dom aa___\\<rfloor> \\<Longrightarrow>\n  \\<D> e'_ \\<lfloor>dom a_\\<rfloor>\n  \\<D>s (e_ # es_) \\<lfloor>dom aa___\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D>s (e'_ # es_) \\<lfloor>dom a_\\<rfloor>", "by (auto elim!: Ds_mono[OF red_lA_incr])"], ["proof (state)\nthis:\n  \\<D>s (e'_ # es_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 82 subgoals...", "next"], ["proof (state)\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 82 subgoals...", "case RedWhile"], ["proof (state)\nthis:\n  \\<D> (while (ba___) c_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (82 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 82 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  \\<D> (while (ba___) c_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (if (ba___) (c_;; while (ba___) c_) else unit)\n     \\<lfloor>dom a_\\<rfloor>", "by(auto simp:hyperset_defs elim!:D_mono')"], ["proof (state)\nthis:\n  \\<D> (if (ba___) (c_;; while (ba___) c_) else unit)\n   \\<lfloor>dom a_\\<rfloor>\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 81 subgoals...", "next"], ["proof (state)\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 81 subgoals...", "case RedInit"], ["proof (state)\nthis:\n  \\<not> sub_RI e_\n  \\<D> (INIT C_ ([],ba___) \\<leftarrow> e_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (81 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<not> sub_RI e_\n  \\<D> (INIT C_ ([],ba___) \\<leftarrow> e_) \\<lfloor>dom a_\\<rfloor>", "show ?case"], ["proof (prove)\nusing this:\n  \\<not> sub_RI e_\n  \\<D> (INIT C_ ([],ba___) \\<leftarrow> e_) \\<lfloor>dom a_\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e_ \\<lfloor>dom a_\\<rfloor>", "by (auto intro: D_mono' simp: hyperset_defs)"], ["proof (state)\nthis:\n  \\<D> e_ \\<lfloor>dom a_\\<rfloor>\n\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 80 subgoals...", "next"], ["proof (state)\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 80 subgoals...", "case (RInitRed e h l sh b e' h' l' sh' b' C Cs e\\<^sub>0)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom l'\\<rfloor>\n  \\<D> (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0) \\<lfloor>dom l\\<rfloor>\n\ngoal (80 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 80 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom l'\\<rfloor>\n  \\<D> (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0) \\<lfloor>dom l\\<rfloor>", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<D> e \\<lfloor>dom l\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom l'\\<rfloor>\n  \\<D> (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0) \\<lfloor>dom l\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0) \\<lfloor>dom l'\\<rfloor>", "by(auto simp:hyperset_defs dest:red_lcl_incr elim!:D_mono')"], ["proof (state)\nthis:\n  \\<D> (RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0) \\<lfloor>dom l'\\<rfloor>\n\ngoal (79 subgoals):\n 1. \\<And>h a C FDTs h' l sh.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 2. \\<And>h C l sh.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW OutOfMemory) \\<lfloor>dom l\\<rfloor>\n 3. \\<And>sh C sfs h l.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (new C) \\<lfloor>dom l\\<rfloor>\n 4. \\<And>sh C h l.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; \\<D> (new C) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (INIT C ([C],False) \\<leftarrow> new C)\n                          \\<lfloor>dom l\\<rfloor>\n 5. \\<And>e a aa b ba e' ab ac bb b' C.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Cast C e) \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (Cast C e') \\<lfloor>dom ac\\<rfloor>\n 6. \\<And>C a aa b ba.\n       \\<D> (Cast C null) \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n       \\<D> null \\<lfloor>dom aa\\<rfloor>\n 7. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (addr a) \\<lfloor>dom l\\<rfloor>\n 8. \\<And>h a D fs C l sh b.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        \\<D> (Cast C (addr a)) \\<lfloor>dom l\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> (THROW ClassCast) \\<lfloor>dom l\\<rfloor>\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<D> e \\<lfloor>dom aa\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom ac\\<rfloor>;\n        \\<D> (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e)\n         \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D>\n                          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e')\n                          \\<lfloor>dom ac\\<rfloor>\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         \\<D>\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2)\n          \\<lfloor>dom aa\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> \\<D> (Val v) \\<lfloor>dom aa\\<rfloor>\nA total of 79 subgoals...", "qed(auto simp:hyperset_defs)"], ["", "(*>*)"], ["", "text\\<open> Combining conformance of heap, static heap, and local variables: \\<close>"], ["", "definition sconf :: \"J_prog \\<Rightarrow> env \\<Rightarrow> state \\<Rightarrow> bool\"   (\"_,_ \\<turnstile> _ \\<surd>\"   [51,51,51]50)\nwhere\n  \"P,E \\<turnstile> s \\<surd>  \\<equiv>  let (h,l,sh) = s in P \\<turnstile> h \\<surd> \\<and> P,h \\<turnstile> l (:\\<le>) E \\<and> P,h \\<turnstile>\\<^sub>s sh \\<surd>\""], ["", "lemma red_preserves_sconf:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle>; P,E,hp s,shp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                            \\<langle>e',s',b'\\<rangle>;\n     P,E,hp s,shp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                            \\<langle>e',s',b'\\<rangle>;\n     P,E,hp s,shp s \\<turnstile> e : T; P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(fastforce intro:red_preserves_hconf red_preserves_lconf red_preserves_shconf\n            simp add:sconf_def)"], ["", "(*>*)"], ["", "lemma reds_preserves_sconf:\n  \"\\<lbrakk> P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>] \\<langle>es',s',b'\\<rangle>; P,E,hp s,shp s \\<turnstile> es [:] Ts; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]\n                            \\<langle>es',s',b'\\<rangle>;\n     P,E,hp s,shp s \\<turnstile> es [:] Ts;\n     P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]\n                            \\<langle>es',s',b'\\<rangle>;\n     P,E,hp s,shp s \\<turnstile> es [:] Ts;\n     P,E \\<turnstile> s \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "by(fastforce intro:reds_preserves_hconf reds_preserves_lconf reds_preserves_shconf\n            simp add:sconf_def)"], ["", "(*>*)"], ["", "subsection \"Subject reduction\""], ["", "lemma wt_blocks:\n \"\\<And>E. \\<lbrakk> length Vs = length Ts; length vs = length Ts \\<rbrakk> \\<Longrightarrow>\n       (P,E,h,sh \\<turnstile> blocks(Vs,Ts,vs,e) : T) =\n       (P,E(Vs[\\<mapsto>]Ts),h,sh \\<turnstile> e:T \\<and> (\\<exists>Ts'. map (typeof\\<^bsub>h\\<^esub>) vs = map Some Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (Vs, Ts, vs, e) : T) =\n                         (P,E(Vs [\\<mapsto>]\n                          Ts),h,sh \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> vs =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] Ts))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>E.\n       \\<lbrakk>length Vs = length Ts; length vs = length Ts\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (Vs, Ts, vs, e) : T) =\n                         (P,E(Vs [\\<mapsto>]\n                          Ts),h,sh \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> vs =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] Ts))", "apply(induct Vs Ts vs e rule:blocks_induct)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>V Vs Ta Ts v vs e E.\n       \\<lbrakk>\\<And>E.\n                   \\<lbrakk>length Vs = length Ts;\n                    length vs = length Ts\\<rbrakk>\n                   \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n                       (Vs, Ts, vs, e) : T) =\n                                     (P,E(Vs [\\<mapsto>]\nTs),h,sh \\<turnstile> e : T \\<and>\n(\\<exists>Ts'.\n    map typeof\\<^bsub>h\\<^esub> vs = map Some Ts' \\<and>\n    P \\<turnstile> Ts' [\\<le>] Ts));\n        length (V # Vs) = length (Ta # Ts);\n        length (v # vs) = length (Ta # Ts)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (V # Vs, Ta # Ts, v # vs, e) : T) =\n                         (P,E(V # Vs [\\<mapsto>]\n                          Ta # Ts),h,sh \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> (v # vs) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (Ta # Ts)))\n 2. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h,sh \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 3. \\<And>vc vd a b E.\n       \\<lbrakk>length [] = length (vc # vd);\n        length a = length (vc # vd)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], vc # vd, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          vc # vd),h,sh \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (vc # vd)))\n 4. \\<And>v ve vf vd E.\n       \\<lbrakk>length [] = length v; length (ve # vf) = length v\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], v, ve # vf, vd) : T) =\n                         (P,E([] [\\<mapsto>]\n                          v),h,sh \\<turnstile> vd : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> (ve # vf) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] v))\n 5. \\<And>va vb a b E.\n       \\<lbrakk>length (va # vb) = length []; length a = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (va # vb, [], a, b) : T) =\n                         (P,E(va # vb [\\<mapsto>]\n                          []),h,sh \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 6. \\<And>v vd ve vb E.\n       \\<lbrakk>length v = length []; length (vd # ve) = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (v, [], vd # ve, vb) : T) =\n                         (P,E(v [\\<mapsto>]\n                          []),h,sh \\<turnstile> vb : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> (vd # ve) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 7. \\<And>va vc vb ve E.\n       \\<lbrakk>length (va # vc) = length vb; length [] = length vb\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (va # vc, vb, [], ve) : T) =\n                         (P,E(va # vc [\\<mapsto>]\n                          vb),h,sh \\<turnstile> ve : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] vb))\n 8. \\<And>v va vc ve E.\n       \\<lbrakk>length v = length (va # vc);\n        length [] = length (va # vc)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (v, va # vc, [], ve) : T) =\n                         (P,E(v [\\<mapsto>]\n                          va # vc),h,sh \\<turnstile> ve : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (va # vc)))", "apply (force simp add:rel_list_all2_Cons2)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>e E.\n       \\<lbrakk>length [] = length []; length [] = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], [], [], e) : T) =\n                         (P,E([] [\\<mapsto>]\n                          []),h,sh \\<turnstile> e : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 2. \\<And>vc vd a b E.\n       \\<lbrakk>length [] = length (vc # vd);\n        length a = length (vc # vd)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], vc # vd, a, b) : T) =\n                         (P,E([] [\\<mapsto>]\n                          vc # vd),h,sh \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (vc # vd)))\n 3. \\<And>v ve vf vd E.\n       \\<lbrakk>length [] = length v; length (ve # vf) = length v\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           ([], v, ve # vf, vd) : T) =\n                         (P,E([] [\\<mapsto>]\n                          v),h,sh \\<turnstile> vd : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> (ve # vf) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] v))\n 4. \\<And>va vb a b E.\n       \\<lbrakk>length (va # vb) = length []; length a = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (va # vb, [], a, b) : T) =\n                         (P,E(va # vb [\\<mapsto>]\n                          []),h,sh \\<turnstile> b : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> a =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 5. \\<And>v vd ve vb E.\n       \\<lbrakk>length v = length []; length (vd # ve) = length []\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (v, [], vd # ve, vb) : T) =\n                         (P,E(v [\\<mapsto>]\n                          []),h,sh \\<turnstile> vb : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> (vd # ve) =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] []))\n 6. \\<And>va vc vb ve E.\n       \\<lbrakk>length (va # vc) = length vb; length [] = length vb\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (va # vc, vb, [], ve) : T) =\n                         (P,E(va # vc [\\<mapsto>]\n                          vb),h,sh \\<turnstile> ve : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] vb))\n 7. \\<And>v va vc ve E.\n       \\<lbrakk>length v = length (va # vc);\n        length [] = length (va # vc)\\<rbrakk>\n       \\<Longrightarrow> (P,E,h,sh \\<turnstile> blocks\n           (v, va # vc, [], ve) : T) =\n                         (P,E(v [\\<mapsto>]\n                          va # vc),h,sh \\<turnstile> ve : T \\<and>\n                          (\\<exists>Ts'.\n                              map typeof\\<^bsub>h\\<^esub> [] =\n                              map Some Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] (va # vc)))", "apply simp_all"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "theorem assumes wf: \"wf_J_prog P\"\nshows subject_reduction2: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>E T. \\<lbrakk> P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e:T \\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'. P,E,h',sh' \\<turnstile> e':T' \\<and> P \\<turnstile> T' \\<le> T)\"\nand subjects_reduction2: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle> \\<Longrightarrow>\n  (\\<And>E Ts. \\<lbrakk> P,E \\<turnstile> (h,l,sh) \\<surd>; iconfs sh es; P,E,h,sh \\<turnstile> es [:] Ts \\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'. P,E,h',sh' \\<turnstile> es' [:] Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>T'.\n                              P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                              P \\<turnstile> T' \\<le> T)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n          P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> \\<exists>Ts'.\n                              P,E,h',sh' \\<turnstile> es' [:] Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] Ts))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>T'.\n                              P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                              P \\<turnstile> T' \\<le> T)) &&&\n    (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> \\<Longrightarrow>\n     (\\<And>E Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n          P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> \\<exists>Ts'.\n                              P,E,h',sh' \\<turnstile> es' [:] Ts' \\<and>\n                              P \\<turnstile> Ts' [\\<le>] Ts))", "proof (induct rule:red_reds_inducts)"], ["proof (state)\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh E T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             OutOfMemory : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 95 subgoals...", "case RedNew"], ["proof (state)\nthis:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> blank P C_)\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (new C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n\ngoal (95 subgoals):\n 1. \\<And>h a C FDTs h' l sh E T.\n       \\<lbrakk>new_Addr h = \\<lfloor>a\\<rfloor>;\n        P \\<turnstile> C has_fields FDTs; h' = h(a \\<mapsto> blank P C);\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             OutOfMemory : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 95 subgoals...", "then"], ["proof (chain)\npicking this:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> blank P C_)\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (new C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T", "show ?case"], ["proof (prove)\nusing this:\n  new_Addr h_ = \\<lfloor>a_\\<rfloor>\n  P \\<turnstile> C_ has_fields FDTs_\n  h'_ = h_(a_ \\<mapsto> blank P C_)\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (new C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h'_,sh_ \\<turnstile> addr a_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (auto simp: blank_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h'_,sh_ \\<turnstile> addr a_ : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             OutOfMemory : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 94 subgoals...", "next"], ["proof (state)\ngoal (94 subgoals):\n 1. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             OutOfMemory : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 94 subgoals...", "case RedNewFail"], ["proof (state)\nthis:\n  new_Addr h_ = None\n  is_class P C_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (new C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n\ngoal (94 subgoals):\n 1. \\<And>h C l sh E T.\n       \\<lbrakk>new_Addr h = None; is_class P C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             OutOfMemory : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n        \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b\n          (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n                         v\\<^sub>2);\n         P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n      v\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 94 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  new_Addr h_ = None\n  is_class P C_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (new C_)\n  P,E,h_,sh_ \\<turnstile> new C_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW OutOfMemory : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (unfold sconf_def hconf_def) (fastforce elim!:typeof_OutOfMemory)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW OutOfMemory : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (93 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>l V v h sh b E T.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n         P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 93 subgoals...", "next"], ["proof (state)\ngoal (93 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>l V v h sh b E T.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n         P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 93 subgoals...", "case CastRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (Cast C_ e_)\n  P,E,a___,ba___ \\<turnstile> Cast C_ e_ : T\n\ngoal (93 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>e a aa b ba e' ab ac bb b' C E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C e);\n        P,E,a,b \\<turnstile> Cast C e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Cast C e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>l V v h sh b E T.\n        \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n         P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 93 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (Cast C_ e_)\n  P,E,a___,ba___ \\<turnstile> Cast C_ e_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,ab___,b_ \\<turnstile> Cast C_ e'_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(clarsimp simp:is_refT_def)\n      (blast intro: widens_trans dest!:widen_Class[THEN iffD1])"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,ab___,b_ \\<turnstile> Cast C_ e'_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (92 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' V E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n         P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 92 subgoals...", "next"], ["proof (state)\ngoal (92 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' V E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n         P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 92 subgoals...", "case RedCastFail"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (Cast C_ (addr a_))\n  P,E,h_,sh_ \\<turnstile> Cast C_ (addr a_) : T\n\ngoal (92 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        (D, C) \\<notin> (subcls1 P)\\<^sup>*;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             ClassCast : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' V E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n         P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 92 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (Cast C_ (addr a_))\n  P,E,h_,sh_ \\<turnstile> Cast C_ (addr a_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW ClassCast : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (unfold sconf_def hconf_def)  (fastforce elim!:typeof_ClassCast)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW ClassCast : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "next"], ["proof (state)\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "case (BinOpRed1 e\\<^sub>1 h l sh b e\\<^sub>1' h' l' sh' b' bop e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>1,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>1',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>1;\n   P,?E,h,sh \\<turnstile> e\\<^sub>1 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>1' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "have red: \"P \\<turnstile> \\<langle>e\\<^sub>1,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>1',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e\\<^sub>1; P,E,h,sh \\<turnstile> e\\<^sub>1:T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e\\<^sub>1' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\"\n   and wt: \"P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e\\<^sub>1,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e\\<^sub>1',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>1;\n          P,E,h,sh \\<turnstile> e\\<^sub>1 : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e\\<^sub>1' : U \\<and>\n                              P \\<turnstile> U \\<le> T)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2) &&&\n    P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>1,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>1',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>1;\n   P,?E,h,sh \\<turnstile> e\\<^sub>1 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>1' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "have val: \"val_of e\\<^sub>1 = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_of e\\<^sub>1 = None", "using red iconf val_no_step"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e\\<^sub>1,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>1',(h', l', sh'),b'\\<rangle>\n  iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow>\n  ((?e, ?s, ?b), ?e', ?s', ?b') \\<notin> red ?P\n\ngoal (1 subgoal):\n 1. val_of e\\<^sub>1 = None", "by auto"], ["proof (state)\nthis:\n  val_of e\\<^sub>1 = None\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "then"], ["proof (chain)\npicking this:\n  val_of e\\<^sub>1 = None", "have iconf1: \"iconf sh e\\<^sub>1\" and nsub_RI2: \"\\<not>sub_RI e\\<^sub>2\""], ["proof (prove)\nusing this:\n  val_of e\\<^sub>1 = None\n\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>1 &&& \\<not> sub_RI e\\<^sub>2", "using iconf"], ["proof (prove)\nusing this:\n  val_of e\\<^sub>1 = None\n  iconf sh (e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>1 &&& \\<not> sub_RI e\\<^sub>2", "by simp+"], ["proof (state)\nthis:\n  iconf sh e\\<^sub>1\n  \\<not> sub_RI e\\<^sub>2\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "have \"P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "assume [simp]: \"bop = Eq\""], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "obtain T\\<^sub>1 T\\<^sub>2 where [simp]: \"T = Boolean\"\n      and wt\\<^sub>1: \"P,E,h,sh \\<turnstile> e\\<^sub>1 : T\\<^sub>1\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>1 T\\<^sub>2.\n        \\<lbrakk>T = Boolean; P,E,h,sh \\<turnstile> e\\<^sub>1 : T\\<^sub>1;\n         P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T = Boolean\n  P,E,h,sh \\<turnstile> e\\<^sub>1 : T\\<^sub>1\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "using WTrt_hext_shext_mono[OF wt\\<^sub>2 red_hext_incr[OF red] red_shext_incr[OF red wt\\<^sub>1] nsub_RI2]\n        IH[OF conf iconf1 wt\\<^sub>1]"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>1' : U \\<and>\n     P \\<turnstile> U \\<le> T\\<^sub>1\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "assume  [simp]: \"bop = Add\""], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "have [simp]: \"T = Integer\"\n      and wt\\<^sub>1: \"P,E,h,sh \\<turnstile> e\\<^sub>1 : Integer\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. T = Integer &&&\n    P,E,h,sh \\<turnstile> e\\<^sub>1 : Integer &&&\n    P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer", "by auto"], ["proof (state)\nthis:\n  T = Integer\n  P,E,h,sh \\<turnstile> e\\<^sub>1 : Integer\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "using WTrt_hext_shext_mono[OF wt\\<^sub>2 red_hext_incr[OF red] red_shext_incr[OF red wt\\<^sub>1] nsub_RI2]\n        IH[OF conf iconf1 wt\\<^sub>1]"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : Integer\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>1' : U \\<and>\n     P \\<turnstile> U \\<le> Integer\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (91 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' bop e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2);\n        P,E,a,b \\<turnstile> e \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V v h l sh b E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n         P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 91 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e\\<^sub>1' \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "next"], ["proof (state)\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "case (BinOpRed2 e\\<^sub>2 h l sh b e\\<^sub>2' h' l' sh' b' v\\<^sub>1 bop)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n   P,?E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>2' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "have red: \"P \\<turnstile> \\<langle>e\\<^sub>2,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>2',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e\\<^sub>2; P,E,h,sh \\<turnstile> e\\<^sub>2:T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\"\n   and wt: \"P,E,h,sh \\<turnstile> (Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n          P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n                              P \\<turnstile> U \\<le> T)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh\n     (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2) &&&\n    P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n   P,?E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "have iconf2: \"iconf sh e\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>2", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  iconf sh e\\<^sub>2\n\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "have \"P,E,h',sh' \\<turnstile> (Val v\\<^sub>1) \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "assume [simp]: \"bop = Eq\""], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "obtain T\\<^sub>1 T\\<^sub>2 where [simp]: \"T = Boolean\"\n      and wt\\<^sub>1: \"P,E,h,sh \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2:T\\<^sub>2\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>1 T\\<^sub>2.\n        \\<lbrakk>T = Boolean;\n         P,E,h,sh \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1;\n         P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  T = Boolean\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (2 subgoals):\n 1. bop = Eq \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n 2. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "using IH[OF conf iconf2 wt\\<^sub>2] WTrt_hext_mono[OF wt\\<^sub>1 red_hext_incr[OF red]]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n     P \\<turnstile> U \\<le> T\\<^sub>2\n  P,E,h',sh \\<turnstile> Val v\\<^sub>1 : T\\<^sub>1\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "assume  [simp]: \"bop = Add\""], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T", "have [simp]: \"T = Integer\"\n      and wt\\<^sub>1: \"P,E,h,sh \\<turnstile> Val v\\<^sub>1 : Integer\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. T = Integer &&&\n    P,E,h,sh \\<turnstile> Val v\\<^sub>1 : Integer &&&\n    P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer", "by auto"], ["proof (state)\nthis:\n  T = Integer\n  P,E,h,sh \\<turnstile> Val v\\<^sub>1 : Integer\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : Integer\n\ngoal (1 subgoal):\n 1. bop = Add \\<Longrightarrow>\n    P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "using IH[OF conf iconf2 wt\\<^sub>2] WTrt_hext_mono[OF wt\\<^sub>1 red_hext_incr[OF red]]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n     P \\<turnstile> U \\<le> Integer\n  P,E,h',sh \\<turnstile> Val v\\<^sub>1 : Integer\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n\ngoal (90 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' v\\<^sub>1 bop E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 90 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> e\\<^sub>2' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (89 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v t l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         fs (F, D) = \\<lfloor>v\\<rfloor>;\n         P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 89 subgoals...", "next"], ["proof (state)\ngoal (89 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v t l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         fs (F, D) = \\<lfloor>v\\<rfloor>;\n         P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 89 subgoals...", "case (RedBinOp bop)"], ["proof (state)\nthis:\n  binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___\n   (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2_ : T\n\ngoal (89 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>bop v\\<^sub>1 v\\<^sub>2 v a aa b ba E T.\n       \\<lbrakk>binop (bop, v\\<^sub>1, v\\<^sub>2) = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b\n         (Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2);\n        P,E,a,b \\<turnstile> Val v\\<^sub>1 \\<guillemotleft>bop\\<guillemotright> Val\n     v\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v t l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         fs (F, D) = \\<lfloor>v\\<rfloor>;\n         P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 89 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___\n   (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof (cases bop)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Eq\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T\n 2. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "case Eq"], ["proof (state)\nthis:\n  bop = Eq\n\ngoal (2 subgoals):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Eq\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T\n 2. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  bop = Eq\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using RedBinOp"], ["proof (prove)\nusing this:\n  bop = Eq\n  binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___\n   (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "case Add"], ["proof (state)\nthis:\n  bop = Add\n\ngoal (1 subgoal):\n 1. \\<lbrakk>binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>;\n     P,E \\<turnstile> (a___, a_, ba___) \\<surd>;\n     iconf ba___\n      (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_);\n     P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n          v\\<^sub>2_ : T;\n     bop = Add\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "thus ?thesis"], ["proof (prove)\nusing this:\n  bop = Add\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using RedBinOp"], ["proof (prove)\nusing this:\n  bop = Add\n  binop (bop, v\\<^sub>1_, v\\<^sub>2_) = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___\n   (Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val v\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> Val v\\<^sub>1_ \\<guillemotleft>bop\\<guillemotright> Val\n       v\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> Val v_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (88 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D});\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 88 subgoals...", "next"], ["proof (state)\ngoal (88 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D});\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 88 subgoals...", "case RedVar"], ["proof (state)\nthis:\n  l_ V_ = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (Var V_)\n  P,E,h_,sh_ \\<turnstile> Var V_ : T\n\ngoal (88 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>l V v h sh b E T.\n       \\<lbrakk>l V = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Var V);\n        P,E,h,sh \\<turnstile> Var V : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D});\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 88 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  l_ V_ = \\<lfloor>v_\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (Var V_)\n  P,E,h_,sh_ \\<turnstile> Var V_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> Val v_ : T' \\<and> P \\<turnstile> T' \\<le> T", "by (fastforce simp:sconf_def lconf_def conf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> Val v_ : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "next"], ["proof (state)\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "case (LAssRed e h l sh b e' h' l' sh' b' V)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (V:=e)\n  P,E,h,sh \\<turnstile> V:=e : T\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "obtain Te where Te: \"P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the(E V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Te.\n        P,E,h,sh \\<turnstile> e : Te \\<and>\n        P \\<turnstile> Te \\<le> the (E V) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using LAssRed.prems(3)"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> V:=e : T\n\ngoal (1 subgoal):\n 1. (\\<And>Te.\n        P,E,h,sh \\<turnstile> e : Te \\<and>\n        P \\<turnstile> Te \\<le> the (E V) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the (E V)\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the (E V)", "have wide: \"P \\<turnstile> Te \\<le> the(E V)\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the (E V)\n\ngoal (1 subgoal):\n 1. P \\<turnstile> Te \\<le> the (E V)", "using LAssRed"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the (E V)\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (V:=e)\n  P,E,h,sh \\<turnstile> V:=e : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> Te \\<le> the (E V)", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> Te \\<le> the (E V)\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> Te \\<le> the (E V)", "have \"\\<exists>T'. P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\""], ["proof (prove)\nusing this:\n  P \\<turnstile> Te \\<le> the (E V)\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te", "using LAssRed.hyps(2) LAssRed.prems(1,2) Te widen_trans[OF _ wide]"], ["proof (prove)\nusing this:\n  P \\<turnstile> Te \\<le> the (E V)\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (V:=e)\n  P,E,h,sh \\<turnstile> e : Te \\<and> P \\<turnstile> Te \\<le> the (E V)\n  P \\<turnstile> ?S \\<le> Te \\<Longrightarrow>\n  P \\<turnstile> ?S \\<le> the (E V)\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te", "obtain T' where wt: \"P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\""], ["proof (prove)\nusing this:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        P,E,h',sh' \\<turnstile> e' : T' \\<and>\n        P \\<turnstile> T' \\<le> Te \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by clarsimp"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "have \"P,E,h',sh' \\<turnstile> V:=e' : Void\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> V:=e' : Void", "using LAssRed wt widen_trans[OF _ wide]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (V:=e)\n  P,E,h,sh \\<turnstile> V:=e : T\n  P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> Te\n  P \\<turnstile> ?S \\<le> Te \\<Longrightarrow>\n  P \\<turnstile> ?S \\<le> the (E V)\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> V:=e' : Void", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> V:=e' : Void\n\ngoal (87 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>e a aa b ba e' ab ac bb b' V E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (V:=e);\n        P,E,a,b \\<turnstile> V:=e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> V:=e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 87 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> V:=e' : Void", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> V:=e' : Void\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> V:=e' : T' \\<and> P \\<turnstile> T' \\<le> T", "using LAssRed"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> V:=e' : Void\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (V:=e)\n  P,E,h,sh \\<turnstile> V:=e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> V:=e' : T' \\<and> P \\<turnstile> T' \\<le> T", "by(rule_tac x = Void in exI) auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> V:=e' : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "next"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "case (FAccRed e h l sh b e' h' l' sh' b' F D)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>F{D})\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} : T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "have IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (e\\<bullet>F{D})\"\n   and wt: \"P,E,h,sh \\<turnstile> e\\<bullet>F{D} : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e' : U \\<and>\n                              P \\<turnstile> U \\<le> T) &&&\n     P,E \\<turnstile> (h, l, sh) \\<surd>) &&&\n    iconf sh (e\\<bullet>F{D}) &&& P,E,h,sh \\<turnstile> e\\<bullet>F{D} : T", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>F{D})\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} : T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "have iconf': \"iconf sh e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (e\\<bullet>F{D})\n\ngoal (1 subgoal):\n 1. iconf sh e", "by simp+\n  \\<comment> \\<open>The goal: ?case = @{prop ?case}\\<close>\n  \\<comment> \\<open>Now distinguish the two cases how wt can have arisen.\\<close>"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "{"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "fix C"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "assume wte: \"P,E,h,sh \\<turnstile> e : Class C\"\n             and has: \"P \\<turnstile> C has F,NonStatic:T in D\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : Class C\n  P \\<turnstile> C has F,NonStatic:T in D\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "from IH[OF conf iconf' wte]"], ["proof (chain)\npicking this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> Class C", "obtain U where wte': \"P,E,h',sh' \\<turnstile> e' : U\" and UsubC: \"P \\<turnstile> U \\<le> Class C\""], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : U;\n         P \\<turnstile> U \\<le> Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto\n    \\<comment> \\<open>Now distinguish what @{term U} can be.\\<close>"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : U\n  P \\<turnstile> U \\<le> Class C\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "{"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : U\n  P \\<turnstile> U \\<le> Class C\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "assume \"U = NT\""], ["proof (state)\nthis:\n  U = NT\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "hence ?case"], ["proof (prove)\nusing this:\n  U = NT\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wte'"], ["proof (prove)\nusing this:\n  U = NT\n  P,E,h',sh' \\<turnstile> e' : U\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtFAccNT widen_refl)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "}"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "moreover"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "{"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "fix C'"], ["proof (state)\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "assume U: \"U = Class C'\" and C'subC: \"P \\<turnstile> C' \\<preceq>\\<^sup>* C\""], ["proof (state)\nthis:\n  U = Class C'\n  P \\<turnstile> C' \\<preceq>\\<^sup>* C\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "from has_field_mono[OF has C'subC] wte' U"], ["proof (chain)\npicking this:\n  P \\<turnstile> C' has F,NonStatic:T in D\n  P,E,h',sh' \\<turnstile> e' : U\n  U = Class C'", "have ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C' has F,NonStatic:T in D\n  P,E,h',sh' \\<turnstile> e' : U\n  U = Class C'\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtFAcc)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T", "have ?case"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using UsubC"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(simp add: widen_Class) blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "{"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "assume \"P,E,h,sh \\<turnstile> e : NT\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "hence \"P,E,h',sh' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "using IH[OF conf iconf']"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n  P,E,h,sh \\<turnstile> e : ?T \\<Longrightarrow>\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> ?T\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "by fastforce"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "hence ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro:WTrtFAccNT widen_refl)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "}"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (86 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>e a aa b ba e' ab ac bb b' F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>F{D});\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D});\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 86 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wt"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 has F,NonStatic:T in D\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (85 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 85 subgoals...", "next"], ["proof (state)\ngoal (85 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 85 subgoals...", "case RedFAcc"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_})\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} : T\n\ngoal (85 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D v t l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        fs (F, D) = \\<lfloor>v\\<rfloor>;\n        P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 85 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  fs_ (F_, D_) = \\<lfloor>v_\\<rfloor>\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_})\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> Val v_ : T' \\<and> P \\<turnstile> T' \\<le> T", "by(fastforce simp:sconf_def hconf_def oconf_def conf_def has_field_def\n                dest:has_fields_fun)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> Val v_ : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (84 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 84 subgoals...", "next"], ["proof (state)\ngoal (84 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 84 subgoals...", "case RedFAccNull"], ["proof (state)\nthis:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>F_{D_})\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>F_{D_} : T\n\ngoal (84 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>F D a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D});\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 84 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>F_{D_})\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>F_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: widen_refl WTThrow[OF WTVal] elim!: typeof_NullPointer\n                simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (83 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 83 subgoals...", "next"], ["proof (state)\ngoal (83 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 83 subgoals...", "case RedSFAccNone"], ["proof (state)\nthis:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (83 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 83 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T", "show ?case"], ["proof (prove)\nusing this:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW NoSuchFieldError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_NoSuchFieldError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW NoSuchFieldError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (82 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 82 subgoals...", "next"], ["proof (state)\ngoal (82 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 82 subgoals...", "case RedFAccStatic"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_})\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} : T\n\ngoal (82 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F t D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 82 subgoals...", "then"], ["proof (chain)\npicking this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_})\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} : T", "show ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_})\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW\n                                IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (81 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 81 subgoals...", "next"], ["proof (state)\ngoal (81 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 81 subgoals...", "case (RedSFAcc C F t D sh sfs i v h l es)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:t in D\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  sfs F = \\<lfloor>v\\<rfloor>\n  P,es \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,es,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\n\ngoal (81 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has F,Static:t in D\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  sfs F = \\<lfloor>v\\<rfloor>\n  P,es \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,es,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T", "have \"P \\<turnstile> C has F,Static:T in D\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,Static:t in D\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  sfs F = \\<lfloor>v\\<rfloor>\n  P,es \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,es,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\n\ngoal (1 subgoal):\n 1. P \\<turnstile> C has F,Static:T in D", "by fast"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:T in D\n\ngoal (81 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C has F,Static:T in D", "have dM: \"P \\<turnstile> D has F,Static:T in D\""], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,Static:T in D\n\ngoal (1 subgoal):\n 1. P \\<turnstile> D has F,Static:T in D", "by(rule has_field_idemp)"], ["proof (state)\nthis:\n  P \\<turnstile> D has F,Static:T in D\n\ngoal (81 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs i v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs F = \\<lfloor>v\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> Val v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D});\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 81 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> D has F,Static:T in D", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> D has F,Static:T in D\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,es,h,sh \\<turnstile> Val v : T' \\<and> P \\<turnstile> T' \\<le> T", "using RedSFAcc"], ["proof (prove)\nusing this:\n  P \\<turnstile> D has F,Static:T in D\n  P \\<turnstile> C has F,Static:t in D\n  sh D = \\<lfloor>(sfs, i)\\<rfloor>\n  sfs F = \\<lfloor>v\\<rfloor>\n  P,es \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,es,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,es,h,sh \\<turnstile> Val v : T' \\<and> P \\<turnstile> T' \\<le> T", "by(fastforce simp:sconf_def shconf_def soconf_def conf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,es,h,sh \\<turnstile> Val v : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (80 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 80 subgoals...", "next"], ["proof (state)\ngoal (80 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 80 subgoals...", "case SFAccInitDoneRed"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (80 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh sfs h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n         P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 80 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (meson widen_refl)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (79 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<bullet>F{D} := e);\n         P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>F{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 79 subgoals...", "next"], ["proof (state)\ngoal (79 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<bullet>F{D} := e);\n         P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>F{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 79 subgoals...", "case (SFAccInitRed C F t D sh h l E T)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:t in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\n\ngoal (79 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<bullet>F{D} := e);\n         P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>F{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 79 subgoals...", "have \"is_class P D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_class P D", "using SFAccInitRed.hyps(1)"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,Static:t in D\n\ngoal (1 subgoal):\n 1. is_class P D", "by(rule has_field_is_class')"], ["proof (state)\nthis:\n  is_class P D\n\ngoal (79 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<bullet>F{D} := e);\n         P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>F{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 79 subgoals...", "then"], ["proof (chain)\npicking this:\n  is_class P D", "have \"P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and> P \\<turnstile> T \\<le> T\""], ["proof (prove)\nusing this:\n  is_class P D\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and>\n    P \\<turnstile> T \\<le> T", "using SFAccInitRed WTrtInit[OF SFAccInitRed.prems(3)]"], ["proof (prove)\nusing this:\n  is_class P D\n  P \\<turnstile> C has F,Static:t in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D})\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\n  \\<lbrakk>\\<forall>C'\\<in>set (?C # ?Cs). is_class P C';\n   \\<not> sub_RI (C\\<bullet>\\<^sub>sF{D});\n   \\<forall>C'\\<in>set (tl ?Cs).\n      \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>;\n   ?b \\<longrightarrow>\n   (\\<forall>C'\\<in>set ?Cs.\n       \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>);\n   distinct ?Cs; supercls_lst P ?Cs\\<rbrakk>\n  \\<Longrightarrow> P,E,h,sh \\<turnstile> INIT ?C (?Cs,?b) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and>\n    P \\<turnstile> T \\<le> T", "by clarsimp"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (79 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D sh h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (Val v\\<bullet>F{D} := e);\n         P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>F{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 79 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and>\n  P \\<turnstile> T \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule exI)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (78 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h a fs v l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h(a \\<mapsto>\n                             (C, fs((F, D) \\<mapsto>\n                              v))),sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 78 subgoals...", "next"], ["proof (state)\ngoal (78 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h a fs v l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h(a \\<mapsto>\n                             (C, fs((F, D) \\<mapsto>\n                              v))),sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 78 subgoals...", "case RedSFAccNonStatic"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (78 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D});\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D h a fs v l sh b E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h(a \\<mapsto>\n                             (C, fs((F, D) \\<mapsto>\n                              v))),sh \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 78 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_})\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW\n                                IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "next"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "case (FAssRed1 e h l sh b e' h' l' sh' b' F D e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "have red: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\"\n   and wt: \"P,E,h,sh \\<turnstile> e\\<bullet>F{D}:=e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e' : U \\<and>\n                              P \\<turnstile> U \\<le> T)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh (e\\<bullet>F{D} := e\\<^sub>2) &&&\n    P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "have val: \"val_of e = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_of e = None", "using red iconf val_no_step"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow>\n  ((?e, ?s, ?b), ?e', ?s', ?b') \\<notin> red ?P\n\ngoal (1 subgoal):\n 1. val_of e = None", "by auto"], ["proof (state)\nthis:\n  val_of e = None\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "then"], ["proof (chain)\npicking this:\n  val_of e = None", "have iconf': \"iconf sh e\" and nsub_RI2: \"\\<not>sub_RI e\\<^sub>2\""], ["proof (prove)\nusing this:\n  val_of e = None\n\ngoal (1 subgoal):\n 1. iconf sh e &&& \\<not> sub_RI e\\<^sub>2", "using iconf"], ["proof (prove)\nusing this:\n  val_of e = None\n  iconf sh (e\\<bullet>F{D} := e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh e &&& \\<not> sub_RI e\\<^sub>2", "by simp+"], ["proof (state)\nthis:\n  iconf sh e\n  \\<not> sub_RI e\\<^sub>2\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T", "have void: \"T = Void\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. T = Void", "by blast\n  \\<comment> \\<open>We distinguish if @{term e} has type @{term NT} or a Class type\\<close>\n  \\<comment> \\<open>Remember ?case = @{term ?case}\\<close>"], ["proof (state)\nthis:\n  T = Void\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  T = Void\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "assume wt':\"P,E,h,sh \\<turnstile> e : NT\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "hence \"P,E,h',sh' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "using IH[OF conf iconf']"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n  P,E,h,sh \\<turnstile> e : ?T \\<Longrightarrow>\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> ?T\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "by fastforce"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "obtain T\\<^sub>2 where \"P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2.\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wt"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2.\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "from this red_hext_incr[OF red] red_shext_incr[OF red wt'] nsub_RI2"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  h \\<unlhd> h'\n  sh \\<unlhd>\\<^sub>s sh'\n  \\<not> sub_RI e\\<^sub>2", "have  \"P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  h \\<unlhd> h'\n  sh \\<unlhd>\\<^sub>s sh'\n  \\<not> sub_RI e\\<^sub>2\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2", "by(rule WTrt_hext_shext_mono)"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> e' : NT\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2", "have ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : NT\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using void"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : NT\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  T = Void\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro!:WTrtFAssNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "fix C TF T\\<^sub>2"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "assume wt\\<^sub>1: \"P,E,h,sh \\<turnstile> e : Class C\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\"\n    and has: \"P \\<turnstile> C has F,NonStatic:TF in D\" and sub: \"P \\<turnstile> T\\<^sub>2 \\<le> TF\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : Class C\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  P \\<turnstile> C has F,NonStatic:TF in D\n  P \\<turnstile> T\\<^sub>2 \\<le> TF\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "obtain U where wt\\<^sub>1': \"P,E,h',sh' \\<turnstile> e' : U\" and UsubC: \"P \\<turnstile> U \\<le> Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : U;\n         P \\<turnstile> U \\<le> Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconf' wt\\<^sub>1]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : U;\n         P \\<turnstile> U \\<le> Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : U\n  P \\<turnstile> U \\<le> Class C\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "have wt\\<^sub>2': \"P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2", "by(rule WTrt_hext_shext_mono[OF wt\\<^sub>2 red_hext_incr[OF red] red_shext_incr[OF red wt\\<^sub>1] nsub_RI2])\n    \\<comment> \\<open>Is @{term U} the null type or a class type?\\<close>"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "assume \"U = NT\""], ["proof (state)\nthis:\n  U = NT\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "with wt\\<^sub>1' wt\\<^sub>2' void"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> e' : U\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  T = Void\n  U = NT", "have ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : U\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  T = Void\n  U = NT\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro!:WTrtFAssNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "{"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "fix C'"], ["proof (state)\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "assume UClass: \"U = Class C'\" and \"subclass\": \"P \\<turnstile> C' \\<preceq>\\<^sup>* C\""], ["proof (state)\nthis:\n  U = Class C'\n  P \\<turnstile> C' \\<preceq>\\<^sup>* C\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "have \"P,E,h',sh' \\<turnstile> e' : Class C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : Class C'", "using wt\\<^sub>1' UClass"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : U\n  U = Class C'\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : Class C'", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "have \"P \\<turnstile> C' has F,NonStatic:TF in D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> C' has F,NonStatic:TF in D", "by(rule has_field_mono[OF has \"subclass\"])"], ["proof (state)\nthis:\n  P \\<turnstile> C' has F,NonStatic:TF in D\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' has F,NonStatic:TF in D", "have ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' has F,NonStatic:TF in D\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wt\\<^sub>2' sub void"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' has F,NonStatic:TF in D\n  P,E,h',sh' \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  P \\<turnstile> T\\<^sub>2 \\<le> TF\n  T = Void\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtFAss)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T", "have ?case"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using UsubC"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto simp add:widen_Class)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P,E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<^sub>22;\n   P \\<turnstile> ?C2 has F,NonStatic:?TF2 in D;\n   P \\<turnstile> ?T\\<^sub>22 \\<le> ?TF2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (77 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' F D e\\<^sub>2 E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (e\\<bullet>F{D} := e\\<^sub>2);\n        P,E,a,b \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>F D v a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>F{D} := Val v);\n         P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 77 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P,E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<^sub>22;\n   P \\<turnstile> ?C2 has F,NonStatic:?TF2 in D;\n   P \\<turnstile> ?T\\<^sub>22 \\<le> ?TF2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P,E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<^sub>22;\n   P \\<turnstile> ?C2 has F,NonStatic:?TF2 in D;\n   P \\<turnstile> ?T\\<^sub>22 \\<le> ?TF2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wt"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P,E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<^sub>22;\n   P \\<turnstile> ?C2 has F,NonStatic:?TF2 in D;\n   P \\<turnstile> ?T\\<^sub>22 \\<le> ?TF2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>F{D} := e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "next"], ["proof (state)\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "case (FAssRed2 e\\<^sub>2 h l sh b e\\<^sub>2' h' l' sh' b' v F D)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n   P,?E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>2' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<bullet>F{D} := e\\<^sub>2)\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "have red: \"P \\<turnstile> \\<langle>e\\<^sub>2,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e\\<^sub>2',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e\\<^sub>2; P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (Val v\\<bullet>F{D} := e\\<^sub>2)\"\n   and wt: \"P,E,h,sh \\<turnstile> Val v\\<bullet>F{D}:=e\\<^sub>2 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n          P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n                              P \\<turnstile> U \\<le> T)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh (Val v\\<bullet>F{D} := e\\<^sub>2) &&&\n    P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e\\<^sub>2,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e\\<^sub>2',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e\\<^sub>2;\n   P,?E,h,sh \\<turnstile> e\\<^sub>2 : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<bullet>F{D} := e\\<^sub>2)\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "have iconf2: \"iconf sh e\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>2", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (Val v\\<bullet>F{D} := e\\<^sub>2)\n\ngoal (1 subgoal):\n 1. iconf sh e\\<^sub>2", "by simp"], ["proof (state)\nthis:\n  iconf sh e\\<^sub>2\n\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T", "have [simp]: \"T = Void\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. T = Void", "by auto"], ["proof (state)\nthis:\n  T = Void\n\ngoal (76 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>e a aa b ba e' ab ac bb b' v F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (Val v\\<bullet>F{D} := e);\n        P,E,a,b \\<turnstile> Val v\\<bullet>F{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>F{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 76 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix C TF T\\<^sub>2"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume wt\\<^sub>1: \"P,E,h,sh \\<turnstile> Val v : Class C\"\n      and has: \"P \\<turnstile> C has F,NonStatic:TF in D\"\n      and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\" and TsubTF: \"P \\<turnstile> T\\<^sub>2 \\<le> TF\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> Val v : Class C\n  P \\<turnstile> C has F,NonStatic:TF in D\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n  P \\<turnstile> T\\<^sub>2 \\<le> TF\n\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "have wt\\<^sub>1': \"P,E,h',sh' \\<turnstile> Val v : Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v : Class C", "using WTrt_hext_mono[OF wt\\<^sub>1 red_hext_incr[OF red]]"], ["proof (prove)\nusing this:\n  P,E,h',sh \\<turnstile> Val v : Class C\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain T\\<^sub>2' where wt\\<^sub>2': \"P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2'\" and T'subT: \"P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2';\n         P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconf2 wt\\<^sub>2]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n     P \\<turnstile> U \\<le> T\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2';\n         P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2'\n  P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\n\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "have \"P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D}:=e\\<^sub>2' : Void\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : Void", "by(rule WTrtFAss[OF wt\\<^sub>1' has wt\\<^sub>2' widen_trans[OF T'subT TsubTF]])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : Void\n\ngoal (2 subgoals):\n 1. \\<And>C Ta T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C has F,NonStatic:Ta in D;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : Void\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix T\\<^sub>2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume null: \"P,E,h,sh \\<turnstile> Val v : NT\" and wt\\<^sub>2: \"P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> Val v : NT\n  P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "from null"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v : NT", "have \"v = Null\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. v = Null", "by simp"], ["proof (state)\nthis:\n  v = Null\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "moreover"], ["proof (state)\nthis:\n  v = Null\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain T\\<^sub>2' where \"P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and> P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2'.\n        P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and>\n        P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconf2 wt\\<^sub>2]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e\\<^sub>2' : U \\<and>\n     P \\<turnstile> U \\<le> T\\<^sub>2\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>2'.\n        P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and>\n        P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and>\n  P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> e\\<^sub>2 : T\\<^sub>2\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "ultimately"], ["proof (chain)\npicking this:\n  v = Null\n  P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and>\n  P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2", "show ?thesis"], ["proof (prove)\nusing this:\n  v = Null\n  P,E,h',sh' \\<turnstile> e\\<^sub>2' : T\\<^sub>2' \\<and>\n  P \\<turnstile> T\\<^sub>2' \\<le> T\\<^sub>2\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro:WTrtFAssNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>F{D} := e\\<^sub>2' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (75 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 75 subgoals...", "next"], ["proof (state)\ngoal (75 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 75 subgoals...", "case RedFAss"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n\ngoal (75 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>C F t D h a fs v l sh b E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h(a \\<mapsto>\n                            (C, fs((F, D) \\<mapsto>\n                             v))),sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs F t D v l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C has F,Static:t in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>F{D} := Val v);\n         P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 75 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_(a_ \\<mapsto>\n       (C_, fs_((F_, D_) \\<mapsto> v_))),sh_ \\<turnstile> unit : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_(a_ \\<mapsto>\n     (C_, fs_((F_, D_) \\<mapsto> v_))),sh_ \\<turnstile> unit : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (74 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 74 subgoals...", "next"], ["proof (state)\ngoal (74 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 74 subgoals...", "case RedFAssNull"], ["proof (state)\nthis:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>F_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>F_{D_} := Val v_ : T\n\ngoal (74 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>F D v a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>F{D} := Val v);\n        P,E,a,b \\<turnstile> null\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 74 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>F_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>F_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTThrow[OF WTVal] elim!:typeof_NullPointer simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (73 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n         sh' = sh(D \\<mapsto> (sfs', i));\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 73 subgoals...", "next"], ["proof (state)\ngoal (73 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n         sh' = sh(D \\<mapsto> (sfs', i));\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 73 subgoals...", "case RedFAssStatic"], ["proof (state)\nthis:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n\ngoal (73 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>h a C fs F t D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C has F,Static:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n         sh' = sh(D \\<mapsto> (sfs', i));\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 73 subgoals...", "then"], ["proof (chain)\npicking this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T", "show ?case"], ["proof (prove)\nusing this:\n  h_ a_ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a_\\<bullet>F_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> addr a_\\<bullet>F_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW\n                                IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "next"], ["proof (state)\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "case (SFAssRed e h l sh b e' h' l' sh' b' C F D E T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\n\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "have IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\"\n   and wt: \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D}:=e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e' : U \\<and>\n                              P \\<turnstile> U \\<le> T) &&&\n     P,E \\<turnstile> (h, l, sh) \\<surd>) &&&\n    iconf sh (C\\<bullet>\\<^sub>sF{D} := e) &&&\n    P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\n\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "have iconf': \"iconf sh e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf sh e", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := e)\n\ngoal (1 subgoal):\n 1. iconf sh e", "by simp"], ["proof (state)\nthis:\n  iconf sh e\n\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T", "have [simp]: \"T = Void\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\n\ngoal (1 subgoal):\n 1. T = Void", "by auto"], ["proof (state)\nthis:\n  T = Void\n\ngoal (72 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>e a aa b ba e' ab ac bb b' C F D E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := e);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh sfs v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 72 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2 Ta.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> e : T\\<^sub>2;\n        P \\<turnstile> C has F,Static:Ta in D;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix TF T1"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2 Ta.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> e : T\\<^sub>2;\n        P \\<turnstile> C has F,Static:Ta in D;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume has: \"P \\<turnstile> C has F,Static:TF in D\"\n      and wt1: \"P,E,h,sh \\<turnstile> e : T1\" and TsubTF: \"P \\<turnstile> T1 \\<le> TF\""], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:TF in D\n  P,E,h,sh \\<turnstile> e : T1\n  P \\<turnstile> T1 \\<le> TF\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2 Ta.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> e : T\\<^sub>2;\n        P \\<turnstile> C has F,Static:Ta in D;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain T' where wt1': \"P,E,h',sh' \\<turnstile> e' : T'\" and T'subT: \"P \\<turnstile> T' \\<le> T1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : T';\n         P \\<turnstile> T' \\<le> T1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconf' wt1]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T1\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : T';\n         P \\<turnstile> T' \\<le> T1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : T'\n  P \\<turnstile> T' \\<le> T1\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2 Ta.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> e : T\\<^sub>2;\n        P \\<turnstile> C has F,Static:Ta in D;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "have \"P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D}:=e' : Void\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : Void", "by(rule WTrtSFAss[OF wt1' has widen_trans[OF T'subT TsubTF]])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : Void\n\ngoal (1 subgoal):\n 1. \\<And>T\\<^sub>2 Ta.\n       \\<lbrakk>T = Void; P,E,h,sh \\<turnstile> e : T\\<^sub>2;\n        P \\<turnstile> C has F,Static:Ta in D;\n        P \\<turnstile> T\\<^sub>2 \\<le> Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : Void\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sF{D} := e' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (71 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 71 subgoals...", "next"], ["proof (state)\ngoal (71 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 71 subgoals...", "case SFAssInitDoneRed"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (71 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh sfs v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val\n v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D sh v h l E T.\n        \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                  v : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 71 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,Static:t_ in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val\n                       v_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (meson widen_refl)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (70 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                 v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F D v a aa b ba E T.\n        \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 70 subgoals...", "next"], ["proof (state)\ngoal (70 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                 v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F D v a aa b ba E T.\n        \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 70 subgoals...", "case (SFAssInitRed C F t D sh v h l E T)"], ["proof (state)\nthis:\n  P \\<turnstile> C has F,Static:t in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\n\ngoal (70 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                 v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F D v a aa b ba E T.\n        \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 70 subgoals...", "have \"is_class P D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_class P D", "using SFAssInitRed.hyps(1)"], ["proof (prove)\nusing this:\n  P \\<turnstile> C has F,Static:t in D\n\ngoal (1 subgoal):\n 1. is_class P D", "by(rule has_field_is_class')"], ["proof (state)\nthis:\n  is_class P D\n\ngoal (70 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                 v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F D v a aa b ba E T.\n        \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 70 subgoals...", "then"], ["proof (chain)\npicking this:\n  is_class P D", "have \"P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val v : T \\<and> P \\<turnstile> T \\<le> T\""], ["proof (prove)\nusing this:\n  is_class P D\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n         v : T \\<and>\n    P \\<turnstile> T \\<le> T", "using SFAssInitRed WTrtInit[OF SFAssInitRed.prems(3)]"], ["proof (prove)\nusing this:\n  is_class P D\n  P \\<turnstile> C has F,Static:t in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v)\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\n  \\<lbrakk>\\<forall>C'\\<in>set (?C # ?Cs). is_class P C';\n   \\<not> sub_RI (C\\<bullet>\\<^sub>sF{D} := Val v);\n   \\<forall>C'\\<in>set (tl ?Cs).\n      \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>;\n   ?b \\<longrightarrow>\n   (\\<forall>C'\\<in>set ?Cs.\n       \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>);\n   distinct ?Cs; supercls_lst P ?Cs\\<rbrakk>\n  \\<Longrightarrow> P,E,h,sh \\<turnstile> INIT ?C (?Cs,?b) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                       v : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n         v : T \\<and>\n    P \\<turnstile> T \\<le> T", "by clarsimp"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n       v : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (70 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D sh v h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n                                 v : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F D v a aa b ba E T.\n        \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 70 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n       v : T \\<and>\n  P \\<turnstile> T \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n       v : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n            v : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule exI)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF{D} := Val\n          v : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (69 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F D v a aa b ba E T.\n       \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D v a aa b ba E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 69 subgoals...", "next"], ["proof (state)\ngoal (69 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F D v a aa b ba E T.\n       \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D v a aa b ba E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 69 subgoals...", "case RedSFAssNone"], ["proof (state)\nthis:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (69 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F D v a aa b ba E T.\n       \\<lbrakk>\\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C F t D v a aa b ba E T.\n        \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 69 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T", "show ?case"], ["proof (prove)\nusing this:\n  \\<nexists>b t. P \\<turnstile> C_ has F_,b:t in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NoSuchFieldError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_NoSuchFieldError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NoSuchFieldError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (68 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D v a aa b ba E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n         P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 68 subgoals...", "next"], ["proof (state)\ngoal (68 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D v a aa b ba E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n         P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 68 subgoals...", "case RedSFAssNonStatic"], ["proof (state)\nthis:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (68 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>C F t D v a aa b ba E T.\n       \\<lbrakk>P \\<turnstile> C has F,NonStatic:t in D;\n        P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            IncompatibleClassChangeError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                 ba\\<rangle> \\<rightarrow>\n                                \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n             P,E,a,b \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n         P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 68 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ has F_,NonStatic:t_ in D_\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sF_{D_} := Val v_)\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sF_{D_} := Val v_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW\n                                    IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW\n                                  IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "next"], ["proof (state)\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "case (CallObj e h l sh b e' h' l' sh' b' M es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>M(es))\n  P,E,h,sh \\<turnstile> e\\<bullet>M(es) : T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have red: \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (e\\<bullet>M(es))\"\n   and wt: \"P,E,h,sh \\<turnstile> e\\<bullet>M(es) : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n          P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e' : U \\<and>\n                              P \\<turnstile> U \\<le> T)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh (e\\<bullet>M(es)) &&& P,E,h,sh \\<turnstile> e\\<bullet>M(es) : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e\\<bullet>M(es))\n  P,E,h,sh \\<turnstile> e\\<bullet>M(es) : T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have val: \"val_of e = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. val_of e = None", "using red iconf val_no_step"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  iconf sh (e\\<bullet>M(es))\n  val_of ?e = \\<lfloor>?v\\<rfloor> \\<Longrightarrow>\n  ((?e, ?s, ?b), ?e', ?s', ?b') \\<notin> red ?P\n\ngoal (1 subgoal):\n 1. val_of e = None", "by auto"], ["proof (state)\nthis:\n  val_of e = None\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "then"], ["proof (chain)\npicking this:\n  val_of e = None", "have iconf': \"iconf sh e\" and nsub_RIs: \"\\<not>sub_RIs es\""], ["proof (prove)\nusing this:\n  val_of e = None\n\ngoal (1 subgoal):\n 1. iconf sh e &&& \\<not> sub_RIs es", "using iconf"], ["proof (prove)\nusing this:\n  val_of e = None\n  iconf sh (e\\<bullet>M(es))\n\ngoal (1 subgoal):\n 1. iconf sh e &&& \\<not> sub_RIs es", "by simp+\n  \\<comment> \\<open>We distinguish if @{term e} has type @{term NT} or a Class type\\<close>\n  \\<comment> \\<open>Remember ?case = @{term ?case}\\<close>"], ["proof (state)\nthis:\n  iconf sh e\n  \\<not> sub_RIs es\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "{"], ["proof (state)\nthis:\n  iconf sh e\n  \\<not> sub_RIs es\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "assume wt':\"P,E,h,sh \\<turnstile> e:NT\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "hence \"P,E,h',sh' \\<turnstile> e' : NT\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "using IH[OF conf iconf']"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> e : NT\n  P,E,h,sh \\<turnstile> e : ?T \\<Longrightarrow>\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> ?T\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : NT", "by fastforce"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : NT\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "fix Ts"], ["proof (state)\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "assume wtes: \"P,E,h,sh \\<turnstile> es [:] Ts\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> es [:] Ts\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have \"P,E,h',sh' \\<turnstile> es [:] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> es [:] Ts", "by(rule WTrts_hext_shext_mono[OF wtes red_hext_incr[OF red] red_shext_incr[OF red wt'] nsub_RIs])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es [:] Ts\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> e' : NT\n  P,E,h',sh' \\<turnstile> es [:] Ts", "have ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : NT\n  P,E,h',sh' \\<turnstile> es [:] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro!:WTrtCallNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "{"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "fix C D Ts Us pns body"], ["proof (state)\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "assume wte: \"P,E,h,sh \\<turnstile> e : Class C\"\n      and \"method\": \"P \\<turnstile> C sees M,NonStatic:Ts\\<rightarrow>T = (pns,body) in D\"\n      and wtes: \"P,E,h,sh \\<turnstile> es [:] Us\" and subs: \"P \\<turnstile> Us [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> e : Class C\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "obtain U where wte': \"P,E,h',sh' \\<turnstile> e' : U\" and UsubC: \"P \\<turnstile> U \\<le> Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : U;\n         P \\<turnstile> U \\<le> Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconf' wte]"], ["proof (prove)\nusing this:\n  \\<exists>U.\n     P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. (\\<And>U.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> e' : U;\n         P \\<turnstile> U \\<le> Class C\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast\n    \\<comment> \\<open>Is @{term U} the null type or a class type?\\<close>"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : U\n  P \\<turnstile> U \\<le> Class C\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "{"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : U\n  P \\<turnstile> U \\<le> Class C\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "assume \"U = NT\""], ["proof (state)\nthis:\n  U = NT\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  U = NT\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have \"P,E,h',sh' \\<turnstile> es [:] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> es [:] Us", "by(rule WTrts_hext_shext_mono[OF wtes red_hext_incr[OF red] red_shext_incr[OF red wte] nsub_RIs])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  U = NT\n  P,E,h',sh' \\<turnstile> es [:] Us", "have ?case"], ["proof (prove)\nusing this:\n  U = NT\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wte'"], ["proof (prove)\nusing this:\n  U = NT\n  P,E,h',sh' \\<turnstile> es [:] Us\n  P,E,h',sh' \\<turnstile> e' : U\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro!:WTrtCallNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "}"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "{"], ["proof (state)\nthis:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "fix C'"], ["proof (state)\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "assume UClass: \"U = Class C'\" and \"subclass\": \"P \\<turnstile> C' \\<preceq>\\<^sup>* C\""], ["proof (state)\nthis:\n  U = Class C'\n  P \\<turnstile> C' \\<preceq>\\<^sup>* C\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have \"P,E,h',sh' \\<turnstile> e' : Class C'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : Class C'", "using wte' UClass"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : U\n  U = Class C'\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e' : Class C'", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "obtain Ts' T' pns' body' D'\n        where method': \"P \\<turnstile> C' sees M,NonStatic:Ts'\\<rightarrow>T' = (pns',body') in D'\"\n        and subs': \"P \\<turnstile> Ts [\\<le>] Ts'\" and sub': \"P \\<turnstile> T' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ts' T' pns' body' D'.\n        \\<lbrakk>P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n  body') in D';\n         P \\<turnstile> Ts [\\<le>] Ts'; P \\<turnstile> T' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using Call_lemma[OF \"method\" \"subclass\" wf]"], ["proof (prove)\nusing this:\n  \\<exists>D' Ts' T' m'.\n     P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = m' in D' \\<and>\n     P \\<turnstile> Ts [\\<le>] Ts' \\<and>\n     P \\<turnstile> T' \\<le> T \\<and>\n     P \\<turnstile> C' \\<preceq>\\<^sup>* D' \\<and>\n     is_type P T' \\<and>\n     (\\<forall>T\\<in>set Ts'. is_type P T) \\<and>\n     wf_J_mdecl P D' (M, NonStatic, Ts', T', m')\n\ngoal (1 subgoal):\n 1. (\\<And>Ts' T' pns' body' D'.\n        \\<lbrakk>P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n  body') in D';\n         P \\<turnstile> Ts [\\<le>] Ts'; P \\<turnstile> T' \\<le> T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n                         body') in D'\n  P \\<turnstile> Ts [\\<le>] Ts'\n  P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "moreover"], ["proof (state)\nthis:\n  P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n                         body') in D'\n  P \\<turnstile> Ts [\\<le>] Ts'\n  P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "have \"P,E,h',sh' \\<turnstile> es [:] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> es [:] Us", "by(rule WTrts_hext_shext_mono[OF wtes red_hext_incr[OF red] red_shext_incr[OF red wte] nsub_RIs])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n                         body') in D'\n  P \\<turnstile> Ts [\\<le>] Ts'\n  P \\<turnstile> T' \\<le> T\n  P,E,h',sh' \\<turnstile> es [:] Us", "have ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n                         body') in D'\n  P \\<turnstile> Ts [\\<le>] Ts'\n  P \\<turnstile> T' \\<le> T\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using subs"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> e' : Class C'\n  P \\<turnstile> C' sees M, NonStatic :  Ts'\\<rightarrow>T' = (pns',\n                         body') in D'\n  P \\<turnstile> Ts [\\<le>] Ts'\n  P \\<turnstile> T' \\<le> T\n  P,E,h',sh' \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtCall rtrancl_trans widens_trans)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T", "have ?case"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using UsubC"], ["proof (prove)\nusing this:\n  U = NT \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n  \\<lbrakk>U = Class ?C'2; P \\<turnstile> ?C'2 \\<preceq>\\<^sup>* C\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P \\<turnstile> U \\<le> Class C\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto simp add:widen_Class)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "}"], ["proof (state)\nthis:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 sees M, NonStatic :  ?Ts2\\<rightarrow>T = (?pns2,\n                           ?body2) in ?D2;\n   P,E,h,sh \\<turnstile> es [:] ?Us2;\n   P \\<turnstile> ?Us2 [\\<le>] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (67 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>e a aa b ba e' ab ac bb b' M es E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>e,(a, aa, b),\n                                ba\\<rangle> \\<rightarrow>\n                               \\<langle>e',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E T.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b e;\n            P,E,a,b \\<turnstile> e : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P,E,ab,bb \\<turnstile> e' : T' \\<and>\n                                P \\<turnstile> T' \\<le> T;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (e\\<bullet>M(es));\n        P,E,a,b \\<turnstile> e\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n         P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 67 subgoals...", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 sees M, NonStatic :  ?Ts2\\<rightarrow>T = (?pns2,\n                           ?body2) in ?D2;\n   P,E,h,sh \\<turnstile> es [:] ?Us2;\n   P \\<turnstile> ?Us2 [\\<le>] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 sees M, NonStatic :  ?Ts2\\<rightarrow>T = (?pns2,\n                           ?body2) in ?D2;\n   P,E,h,sh \\<turnstile> es [:] ?Us2;\n   P \\<turnstile> ?Us2 [\\<le>] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using wt"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : NT;\n   P,E,h,sh \\<turnstile> es [:] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  \\<lbrakk>P,E,h,sh \\<turnstile> e : Class ?C2;\n   P \\<turnstile> ?C2 sees M, NonStatic :  ?Ts2\\<rightarrow>T = (?pns2,\n                           ?body2) in ?D2;\n   P,E,h,sh \\<turnstile> es [:] ?Us2;\n   P \\<turnstile> ?Us2 [\\<le>] ?Ts2\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n                       P \\<turnstile> T' \\<le> T\n  P,E,h,sh \\<turnstile> e\\<bullet>M(es) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e'\\<bullet>M(es) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (66 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                ba\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n            P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Ts'.\n                                P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n        P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                             body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> blocks\n              (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 66 subgoals...", "next"], ["proof (state)\ngoal (66 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                ba\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n            P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Ts'.\n                                P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n        P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                             body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> blocks\n              (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 66 subgoals...", "case (CallParams es h l sh b es' h' l' sh' b' v M)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n   P,?E,h,sh \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts'.\n                       P,?E,h',sh' \\<turnstile> es' [:] Ts' \\<and>\n                       P \\<turnstile> Ts' [\\<le>] ?Ts\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<bullet>M(es))\n  P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T\n\ngoal (66 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                ba\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n            P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Ts'.\n                                P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n        P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                             body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> blocks\n              (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 66 subgoals...", "have reds: \"P \\<turnstile> \\<langle>es,(h,l,sh),b\\<rangle> [\\<rightarrow>] \\<langle>es',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E Ts. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconfs sh es; P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>Us. P,E,h',sh' \\<turnstile> es' [:] Us \\<and> P \\<turnstile> Us [\\<le>] Ts\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (Val v\\<bullet>M(es))\"\n   and wt: \"P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n          P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> \\<exists>Us.\n                              P,E,h',sh' \\<turnstile> es' [:] Us \\<and>\n                              P \\<turnstile> Us [\\<le>] Ts)) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh (Val v\\<bullet>M(es)) &&&\n    P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n   P,?E,h,sh \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Us.\n                       P,?E,h',sh' \\<turnstile> es' [:] Us \\<and>\n                       P \\<turnstile> Us [\\<le>] ?Ts\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (Val v\\<bullet>M(es))\n  P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T\n\ngoal (66 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                ba\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n            P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Ts'.\n                                P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n        P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                             body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> blocks\n              (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 66 subgoals...", "have iconfs: \"iconfs sh es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconfs sh es", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (Val v\\<bullet>M(es))\n\ngoal (1 subgoal):\n 1. iconfs sh es", "by simp"], ["proof (state)\nthis:\n  iconfs sh es\n\ngoal (66 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>es a aa b ba es' ab ac bb b' v M E T.\n       \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                ba\\<rangle> [\\<rightarrow>]\n                               \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n        \\<And>E Ts.\n           \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n            P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n           \\<Longrightarrow> \\<exists>Ts'.\n                                P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                P \\<turnstile> Ts' [\\<le>] Ts;\n        P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Val v\\<bullet>M(es));\n        P,E,a,b \\<turnstile> Val v\\<bullet>M(es) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,ab,bb \\<turnstile> Val\n              v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                             body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> blocks\n              (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 66 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v\\<bullet>M(es) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix C D Ts Us pns body"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume wte: \"P,E,h,sh \\<turnstile> Val v : Class C\"\n      and \"P \\<turnstile> C sees M,NonStatic:Ts\\<rightarrow>T = (pns,body) in D\"\n      and wtes: \"P,E,h,sh \\<turnstile> es [:] Us\" and \"P \\<turnstile> Us [\\<le>] Ts\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> Val v : Class C\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "moreover"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> Val v : Class C\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "have \"P,E,h',sh' \\<turnstile> Val v : Class C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v : Class C", "using WTrt_hext_mono[OF wte reds_hext_incr[OF reds]]"], ["proof (prove)\nusing this:\n  P,E,h',sh \\<turnstile> Val v : Class C\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> Val v : Class C", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "moreover"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> Val v : Class C\n\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain Us' where \"P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        P,E,h',sh' \\<turnstile> es' [:] Us' \\<and>\n        P \\<turnstile> Us' [\\<le>] Us \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconfs wtes]"], ["proof (prove)\nusing this:\n  \\<exists>Usa.\n     P,E,h',sh' \\<turnstile> es' [:] Usa \\<and>\n     P \\<turnstile> Usa [\\<le>] Us\n\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        P,E,h',sh' \\<turnstile> es' [:] Us' \\<and>\n        P \\<turnstile> Us' [\\<le>] Us \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\n\ngoal (2 subgoals):\n 1. \\<And>C Ts pns body D Ts'.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : Class C;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts';\n        P \\<turnstile> Ts' [\\<le>] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "ultimately"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v : Class C\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n  P,E,h',sh' \\<turnstile> Val v : Class C\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us", "show ?thesis"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v : Class C\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n  P,E,h',sh' \\<turnstile> Val v : Class C\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtCall widens_trans)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix Us"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume null: \"P,E,h,sh \\<turnstile> Val v : NT\" and wtes: \"P,E,h,sh \\<turnstile> es [:] Us\""], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> Val v : NT\n  P,E,h,sh \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "from null"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> Val v : NT", "have \"v = Null\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> Val v : NT\n\ngoal (1 subgoal):\n 1. v = Null", "by simp"], ["proof (state)\nthis:\n  v = Null\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "moreover"], ["proof (state)\nthis:\n  v = Null\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain Us' where \"P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        P,E,h',sh' \\<turnstile> es' [:] Us' \\<and>\n        P \\<turnstile> Us' [\\<le>] Us \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconfs wtes]"], ["proof (prove)\nusing this:\n  \\<exists>Usa.\n     P,E,h',sh' \\<turnstile> es' [:] Usa \\<and>\n     P \\<turnstile> Usa [\\<le>] Us\n\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        P,E,h',sh' \\<turnstile> es' [:] Us' \\<and>\n        P \\<turnstile> Us' [\\<le>] Us \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<And>Ts.\n       \\<lbrakk>P,E,h,sh \\<turnstile> Val v : NT;\n        P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> Val\n               v\\<bullet>M(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "ultimately"], ["proof (chain)\npicking this:\n  v = Null\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us", "show ?thesis"], ["proof (prove)\nusing this:\n  v = Null\n  P,E,h',sh' \\<turnstile> es' [:] Us' \\<and> P \\<turnstile> Us' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro:WTrtCallNT)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> Val v\\<bullet>M(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "next"], ["proof (state)\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "case (RedCall h a C fs M Ts T pns body D vs l sh b E T')"], ["proof (state)\nthis:\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (addr a\\<bullet>M(map Val vs))\n  P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T'\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "have hp: \"h a = Some(C,fs)\"\n   and \"method\": \"P \\<turnstile> C sees M,NonStatic: Ts\\<rightarrow>T = (pns,body) in D\"\n   and wt: \"P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h a = \\<lfloor>(C, fs)\\<rfloor> &&&\n    P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                        body) in D &&&\n    P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T'", "by fact+"], ["proof (state)\nthis:\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T'\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "obtain Ts' where wtes: \"P,E,h,sh \\<turnstile> map Val vs [:] Ts'\"\n    and subs: \"P \\<turnstile> Ts' [\\<le>] Ts\" and T'isT: \"T' = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h,sh \\<turnstile> map Val vs [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; T' = T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using wt \"method\" hp"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T'\n  P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns, body) in D\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h,sh \\<turnstile> map Val vs [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; T' = T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto dest:sees_method_fun)"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  T' = T\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "from wtes subs"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts", "have length_vs: \"length vs = length Ts\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. length vs = length Ts", "by(fastforce simp:list_all2_iff dest!:WTrts_same_length)"], ["proof (state)\nthis:\n  length vs = length Ts\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "from sees_wf_mdecl[OF wf \"method\"]"], ["proof (chain)\npicking this:\n  wf_mdecl wf_J_mdecl P D (M, NonStatic, Ts, T, pns, body)", "obtain T''\n    where wtabody: \"P,[this#pns [\\<mapsto>] Class D#Ts] \\<turnstile> body :: T''\"\n    and T''subT: \"P \\<turnstile> T'' \\<le> T\" and length_pns: \"length pns = length Ts\""], ["proof (prove)\nusing this:\n  wf_mdecl wf_J_mdecl P D (M, NonStatic, Ts, T, pns, body)\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P,[this # pns [\\<mapsto>]\n                    Class D # Ts] \\<turnstile> body :: T'';\n         P \\<turnstile> T'' \\<le> T; length pns = length Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce simp:wf_mdecl_def simp del:map_upds_twist)"], ["proof (state)\nthis:\n  P,[this # pns [\\<mapsto>] Class D # Ts] \\<turnstile> body :: T''\n  P \\<turnstile> T'' \\<le> T\n  length pns = length Ts\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "from wtabody"], ["proof (chain)\npicking this:\n  P,[this # pns [\\<mapsto>] Class D # Ts] \\<turnstile> body :: T''", "have \"P,Map.empty(this#pns [\\<mapsto>] Class D#Ts),h,sh \\<turnstile> body : T''\""], ["proof (prove)\nusing this:\n  P,[this # pns [\\<mapsto>] Class D # Ts] \\<turnstile> body :: T''\n\ngoal (1 subgoal):\n 1. P,[this # pns [\\<mapsto>] Class D # Ts],h,sh \\<turnstile> body : T''", "by(rule WT_implies_WTrt)"], ["proof (state)\nthis:\n  P,[this # pns [\\<mapsto>] Class D # Ts],h,sh \\<turnstile> body : T''\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "hence \"P,E(this#pns [\\<mapsto>] Class D#Ts),h,sh \\<turnstile> body : T''\""], ["proof (prove)\nusing this:\n  P,[this # pns [\\<mapsto>] Class D # Ts],h,sh \\<turnstile> body : T''\n\ngoal (1 subgoal):\n 1. P,E(this # pns [\\<mapsto>] Class D # Ts),h,sh \\<turnstile> body : T''", "by(rule WTrt_env_mono) simp"], ["proof (state)\nthis:\n  P,E(this # pns [\\<mapsto>] Class D # Ts),h,sh \\<turnstile> body : T''\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "hence \"P,E,h,sh \\<turnstile> blocks(this#pns, Class D#Ts, Addr a#vs, body) : T''\""], ["proof (prove)\nusing this:\n  P,E(this # pns [\\<mapsto>] Class D # Ts),h,sh \\<turnstile> body : T''\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> blocks\n                           (this # pns, Class D # Ts, Addr a # vs,\n                            body) : T''", "using wtes subs hp sees_method_decl_above[OF \"method\"] length_vs length_pns"], ["proof (prove)\nusing this:\n  P,E(this # pns [\\<mapsto>] Class D # Ts),h,sh \\<turnstile> body : T''\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  h a = \\<lfloor>(C, fs)\\<rfloor>\n  P \\<turnstile> C \\<preceq>\\<^sup>* D\n  length vs = length Ts\n  length pns = length Ts\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> blocks\n                           (this # pns, Class D # Ts, Addr a # vs,\n                            body) : T''", "by(fastforce simp add:wt_blocks rel_list_all2_Cons2)"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> blocks\n                         (this # pns, Class D # Ts, Addr a # vs, body) : T''\n\ngoal (65 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M Ts T pns body D vs l sh b E Ta.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (pns,\n                            body) in D;\n        length vs = length pns; length Ts = length pns;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> blocks\n             (this # pns, Class D # Ts, Addr a # vs, body) : T' \\<and>\n                            P \\<turnstile> T' \\<le> Ta\n 10. \\<And>M vs a aa b ba E T.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (null\\<bullet>M(map Val vs));\n         P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NullPointer : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 65 subgoals...", "with T''subT T'isT"], ["proof (chain)\npicking this:\n  P \\<turnstile> T'' \\<le> T\n  T' = T\n  P,E,h,sh \\<turnstile> blocks\n                         (this # pns, Class D # Ts, Addr a # vs, body) : T''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> T'' \\<le> T\n  T' = T\n  P,E,h,sh \\<turnstile> blocks\n                         (this # pns, Class D # Ts, Addr a # vs, body) : T''\n\ngoal (1 subgoal):\n 1. \\<exists>T'a.\n       P,E,h,sh \\<turnstile> blocks\n                              (this # pns, Class D # Ts, Addr a # vs,\n                               body) : T'a \\<and>\n       P \\<turnstile> T'a \\<le> T'", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'a.\n     P,E,h,sh \\<turnstile> blocks\n                            (this # pns, Class D # Ts, Addr a # vs,\n                             body) : T'a \\<and>\n     P \\<turnstile> T'a \\<le> T'\n\ngoal (64 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>M vs a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>M(map Val vs));\n        P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M vs l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b Ts T m D.\n            P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 64 subgoals...", "next"], ["proof (state)\ngoal (64 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>M vs a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>M(map Val vs));\n        P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M vs l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b Ts T m D.\n            P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 64 subgoals...", "case RedCallNull"], ["proof (state)\nthis:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>M_(map Val vs_))\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>M_(map Val vs_) : T\n\ngoal (64 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>M vs a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>;\n        iconf b (null\\<bullet>M(map Val vs));\n        P,E,a,b \\<turnstile> null\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> THROW\n            NullPointer : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M vs l sh b E T.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         \\<nexists>b Ts T m D.\n            P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 64 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (null\\<bullet>M_(map Val vs_))\n  P,E,a___,ba___ \\<turnstile> null\\<bullet>M_(map Val vs_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTThrow[OF WTVal] elim!:typeof_NullPointer simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (63 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T aa b D vs l sh ba E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (aa, b) in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 63 subgoals...", "next"], ["proof (state)\ngoal (63 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T aa b D vs l sh ba E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (aa, b) in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 63 subgoals...", "case RedCallStatic"], ["proof (state)\nthis:\n  h_ a___ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (a_,\n                       ba___) in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a___\\<bullet>M_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> addr a___\\<bullet>M_(map Val vs_) : T\n\ngoal (63 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>h a C fs M Ts T aa b D vs l sh ba E Ta.\n        \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n         P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (aa, b) in D;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (addr a\\<bullet>M(map Val vs));\n         P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> THROW\n              IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 63 subgoals...", "then"], ["proof (chain)\npicking this:\n  h_ a___ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (a_,\n                       ba___) in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a___\\<bullet>M_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> addr a___\\<bullet>M_(map Val vs_) : T", "show ?case"], ["proof (prove)\nusing this:\n  h_ a___ = \\<lfloor>(C_, fs_)\\<rfloor>\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (a_,\n                       ba___) in D_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (addr a___\\<bullet>M_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> addr a___\\<bullet>M_(map Val vs_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> THROW\n                                IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> THROW IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (62 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' C M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(es));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 62 subgoals...", "next"], ["proof (state)\ngoal (62 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' C M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(es));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 62 subgoals...", "case (SCallParams es h l sh b es' h' l' sh' b' C M)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n   P,?E,h,sh \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts'.\n                       P,?E,h',sh' \\<turnstile> es' [:] Ts' \\<and>\n                       P \\<turnstile> Ts' [\\<le>] ?Ts\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n\ngoal (62 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' C M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(es));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 62 subgoals...", "have IH: \"\\<And>E Ts. \\<lbrakk>P,E \\<turnstile> (h,l,sh) \\<surd>; iconfs sh es; P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n                 \\<Longrightarrow> \\<exists>Us. P,E,h',sh' \\<turnstile> es' [:] Us \\<and> P \\<turnstile> Us [\\<le>] Ts\"\n   and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\" and iconf: \"iconf sh (C\\<bullet>\\<^sub>sM(es))\"\n   and wt: \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>E Ts.\n         \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n          P,E,h,sh \\<turnstile> es [:] Ts\\<rbrakk>\n         \\<Longrightarrow> \\<exists>Us.\n                              P,E,h',sh' \\<turnstile> es' [:] Us \\<and>\n                              P \\<turnstile> Us [\\<le>] Ts) &&&\n     P,E \\<turnstile> (h, l, sh) \\<surd>) &&&\n    iconf sh (C\\<bullet>\\<^sub>sM(es)) &&&\n    P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconfs sh es;\n   P,?E,h,sh \\<turnstile> es [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Us.\n                       P,?E,h',sh' \\<turnstile> es' [:] Us \\<and>\n                       P \\<turnstile> Us [\\<le>] ?Ts\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n\ngoal (62 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' C M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(es));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 62 subgoals...", "have iconfs: \"iconfs sh es\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconfs sh es", "using iconf"], ["proof (prove)\nusing this:\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n\ngoal (1 subgoal):\n 1. iconfs sh es", "by simp"], ["proof (state)\nthis:\n  iconfs sh es\n\ngoal (62 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>es a aa b ba es' ab ac bb b' C M E T.\n        \\<lbrakk>P \\<turnstile> \\<langle>es,(a, aa, b),\n                                 ba\\<rangle> [\\<rightarrow>]\n                                \\<langle>es',(ab, ac, bb),b'\\<rangle>;\n         \\<And>E Ts.\n            \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconfs b es;\n             P,E,a,b \\<turnstile> es [:] Ts\\<rbrakk>\n            \\<Longrightarrow> \\<exists>Ts'.\n                                 P,E,ab,bb \\<turnstile> es' [:] Ts' \\<and>\n                                 P \\<turnstile> Ts' [\\<le>] Ts;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(es));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,ab,bb \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 62 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof (rule WTrt_elim_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts pns body D Ts' sfs vs.\n       \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                 body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts'; P \\<turnstile> Ts' [\\<le>] Ts;\n        M = clinit \\<longrightarrow>\n        sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and>\n        es = map Val vs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "fix D Ts Us pns body sfs vs"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Ts pns body D Ts' sfs vs.\n       \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                 body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts'; P \\<turnstile> Ts' [\\<le>] Ts;\n        M = clinit \\<longrightarrow>\n        sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and>\n        es = map Val vs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "assume method: \"P \\<turnstile> C sees M,Static:Ts\\<rightarrow>T = (pns,body) in D\"\n      and wtes: \"P,E,h,sh \\<turnstile> es [:] Us\" and us: \"P \\<turnstile> Us [\\<le>] Ts\"\n      and clinit: \"M = clinit \\<longrightarrow> sh D = \\<lfloor>(sfs,Processing)\\<rfloor> \\<and> es = map Val vs\""], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> es [:] Us\n  P \\<turnstile> Us [\\<le>] Ts\n  M = clinit \\<longrightarrow>\n  sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and> es = map Val vs\n\ngoal (1 subgoal):\n 1. \\<And>Ts pns body D Ts' sfs vs.\n       \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                 body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts'; P \\<turnstile> Ts' [\\<le>] Ts;\n        M = clinit \\<longrightarrow>\n        sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and>\n        es = map Val vs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "obtain Us' where es': \"P,E,h',sh' \\<turnstile> es' [:] Us'\" and us': \"P \\<turnstile> Us' [\\<le>] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> es' [:] Us';\n         P \\<turnstile> Us' [\\<le>] Us\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using IH[OF conf iconfs wtes]"], ["proof (prove)\nusing this:\n  \\<exists>Usa.\n     P,E,h',sh' \\<turnstile> es' [:] Usa \\<and>\n     P \\<turnstile> Usa [\\<le>] Us\n\ngoal (1 subgoal):\n 1. (\\<And>Us'.\n        \\<lbrakk>P,E,h',sh' \\<turnstile> es' [:] Us';\n         P \\<turnstile> Us' [\\<le>] Us\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es' [:] Us'\n  P \\<turnstile> Us' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<And>Ts pns body D Ts' sfs vs.\n       \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                 body) in D;\n        P,E,h,sh \\<turnstile> es [:] Ts'; P \\<turnstile> Ts' [\\<le>] Ts;\n        M = clinit \\<longrightarrow>\n        sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and>\n        es = map Val vs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof(cases \"M = clinit\")"], ["proof (state)\ngoal (2 subgoals):\n 1. M = clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T\n 2. M \\<noteq> clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "case True"], ["proof (state)\nthis:\n  M = clinit\n\ngoal (2 subgoals):\n 1. M = clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T\n 2. M \\<noteq> clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "then"], ["proof (chain)\npicking this:\n  M = clinit", "show ?thesis"], ["proof (prove)\nusing this:\n  M = clinit\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using clinit SCallParams.hyps(1)"], ["proof (prove)\nusing this:\n  M = clinit\n  M = clinit \\<longrightarrow>\n  sh D = \\<lfloor>(sfs, Processing)\\<rfloor> \\<and> es = map Val vs\n  P \\<turnstile> \\<langle>es,(h, l, sh),b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',(h', l', sh'),b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. M \\<noteq> clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. M \\<noteq> clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "case False"], ["proof (state)\nthis:\n  M \\<noteq> clinit\n\ngoal (1 subgoal):\n 1. M \\<noteq> clinit \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "then"], ["proof (chain)\npicking this:\n  M \\<noteq> clinit", "show ?thesis"], ["proof (prove)\nusing this:\n  M \\<noteq> clinit\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using es' method us us'"], ["proof (prove)\nusing this:\n  M \\<noteq> clinit\n  P,E,h',sh' \\<turnstile> es' [:] Us'\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  P \\<turnstile> Us [\\<le>] Ts\n  P \\<turnstile> Us' [\\<le>] Us\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(blast intro:WTrtSCall widens_trans)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> C\\<bullet>\\<^sub>sM(es') : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "next"], ["proof (state)\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "case (RedSCall C M Ts T pns body D vs h l sh E T')"], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  length vs = length pns\n  length Ts = length pns\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(map Val vs))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T'\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "have \"method\": \"P \\<turnstile> C sees M,Static: Ts\\<rightarrow>T = (pns,body) in D\"\n   and wt: \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                     body) in D &&&\n    P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T'\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "obtain Ts' where wtes: \"P,E,h,sh \\<turnstile> map Val vs [:] Ts'\"\n    and subs: \"P \\<turnstile> Ts' [\\<le>] Ts\" and T'isT: \"T' = T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h,sh \\<turnstile> map Val vs [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; T' = T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using wt \"method\" map_Val_eq"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T'\n  P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns, body) in D\n  map Val ?vs = map Val ?vs' \\<Longrightarrow> ?vs = ?vs'\n\ngoal (1 subgoal):\n 1. (\\<And>Ts'.\n        \\<lbrakk>P,E,h,sh \\<turnstile> map Val vs [:] Ts';\n         P \\<turnstile> Ts' [\\<le>] Ts; T' = T\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto dest:sees_method_fun)+"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  T' = T\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "from wtes subs"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts", "have length_vs: \"length vs = length Ts\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (1 subgoal):\n 1. length vs = length Ts", "by(fastforce simp:list_all2_iff dest!:WTrts_same_length)"], ["proof (state)\nthis:\n  length vs = length Ts\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "from sees_wf_mdecl[OF wf \"method\"]"], ["proof (chain)\npicking this:\n  wf_mdecl wf_J_mdecl P D (M, Static, Ts, T, pns, body)", "obtain T''\n    where wtabody: \"P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T''\"\n    and T''subT: \"P \\<turnstile> T'' \\<le> T\" and length_pns: \"length pns = length Ts\""], ["proof (prove)\nusing this:\n  wf_mdecl wf_J_mdecl P D (M, Static, Ts, T, pns, body)\n\ngoal (1 subgoal):\n 1. (\\<And>T''.\n        \\<lbrakk>P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T'';\n         P \\<turnstile> T'' \\<le> T; length pns = length Ts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce simp:wf_mdecl_def simp del:map_upds_twist)"], ["proof (state)\nthis:\n  P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T''\n  P \\<turnstile> T'' \\<le> T\n  length pns = length Ts\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "from wtabody"], ["proof (chain)\npicking this:\n  P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T''", "have \"P,Map.empty(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''\""], ["proof (prove)\nusing this:\n  P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T''\n\ngoal (1 subgoal):\n 1. P,[pns [\\<mapsto>] Ts],h,sh \\<turnstile> body : T''", "by(rule WT_implies_WTrt)"], ["proof (state)\nthis:\n  P,[pns [\\<mapsto>] Ts],h,sh \\<turnstile> body : T''\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "hence \"P,E(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''\""], ["proof (prove)\nusing this:\n  P,[pns [\\<mapsto>] Ts],h,sh \\<turnstile> body : T''\n\ngoal (1 subgoal):\n 1. P,E(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''", "by(rule WTrt_env_mono) simp"], ["proof (state)\nthis:\n  P,E(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "hence \"P,E,h,sh \\<turnstile> blocks(pns, Ts, vs, body) : T''\""], ["proof (prove)\nusing this:\n  P,E(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T''", "using wtes subs sees_method_decl_above[OF \"method\"] length_vs length_pns"], ["proof (prove)\nusing this:\n  P,E(pns [\\<mapsto>] Ts),h,sh \\<turnstile> body : T''\n  P,E,h,sh \\<turnstile> map Val vs [:] Ts'\n  P \\<turnstile> Ts' [\\<le>] Ts\n  P \\<turnstile> C \\<preceq>\\<^sup>* D\n  length vs = length Ts\n  length pns = length Ts\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T''", "by(fastforce simp add:wt_blocks rel_list_all2_Cons2)"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T''\n\ngoal (61 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D vs a aa b E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         length vs = length pns; length Ts = length pns;\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> blocks\n             (pns, Ts, vs, body) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 61 subgoals...", "with T''subT T'isT"], ["proof (chain)\npicking this:\n  P \\<turnstile> T'' \\<le> T\n  T' = T\n  P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T''", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> T'' \\<le> T\n  T' = T\n  P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T''\n\ngoal (1 subgoal):\n 1. \\<exists>T'a.\n       P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T'a \\<and>\n       P \\<turnstile> T'a \\<le> T'", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'a.\n     P,E,h,sh \\<turnstile> blocks (pns, Ts, vs, body) : T'a \\<and>\n     P \\<turnstile> T'a \\<le> T'\n\ngoal (60 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh sfs vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n         M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map\n                                  Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 60 subgoals...", "next"], ["proof (state)\ngoal (60 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh sfs vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n         M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map\n                                  Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 60 subgoals...", "case SCallInitDoneRed"], ["proof (state)\nthis:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor> \\<or>\n  M_ = clinit \\<and> sh_ D_ = \\<lfloor>(sfs_, Processing)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (60 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh sfs vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         sh D = \\<lfloor>(sfs, Done)\\<rfloor> \\<or>\n         M = clinit \\<and> sh D = \\<lfloor>(sfs, Processing)\\<rfloor>;\n         P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map\n                                  Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 60 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor> \\<or>\n  M_ = clinit \\<and> sh_ D_ = \\<lfloor>(sfs_, Processing)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ sees M_, Static :  Ts_\\<rightarrow>T_ = (pns_,\n                       body_) in D_\n  sh_ D_ = \\<lfloor>(sfs_, Done)\\<rfloor> \\<or>\n  M_ = clinit \\<and> sh_ D_ = \\<lfloor>(sfs_, Processing)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val\n                vs_) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by (meson widen_refl)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (59 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         M \\<noteq> clinit; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sM(map\n                            Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 59 subgoals...", "next"], ["proof (state)\ngoal (59 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         M \\<noteq> clinit; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sM(map\n                            Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 59 subgoals...", "case (SCallInitRed C F Ts t pns body D sh v h l E T)"], ["proof (state)\nthis:\n  P \\<turnstile> C sees F, Static :  Ts\\<rightarrow>t = (pns, body) in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  F \\<noteq> clinit\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF(map Val v))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF(map Val v) : T\n\ngoal (59 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         M \\<noteq> clinit; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sM(map\n                            Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 59 subgoals...", "have \"is_class P D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_class P D", "using SCallInitRed.hyps(1)"], ["proof (prove)\nusing this:\n  P \\<turnstile> C sees F, Static :  Ts\\<rightarrow>t = (pns, body) in D\n\ngoal (1 subgoal):\n 1. is_class P D", "by(rule sees_method_is_class')"], ["proof (state)\nthis:\n  is_class P D\n\ngoal (59 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         M \\<noteq> clinit; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sM(map\n                            Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 59 subgoals...", "then"], ["proof (chain)\npicking this:\n  is_class P D", "have \"P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map Val v) : T \\<and> P \\<turnstile> T \\<le> T\""], ["proof (prove)\nusing this:\n  is_class P D\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n   Val v) : T \\<and>\n    P \\<turnstile> T \\<le> T", "using SCallInitRed WTrtInit[OF SCallInitRed.prems(3)]"], ["proof (prove)\nusing this:\n  is_class P D\n  P \\<turnstile> C sees F, Static :  Ts\\<rightarrow>t = (pns, body) in D\n  \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>\n  F \\<noteq> clinit\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sF(map Val v))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF(map Val v) : T\n  \\<lbrakk>\\<forall>C'\\<in>set (?C # ?Cs). is_class P C';\n   \\<not> sub_RI (C\\<bullet>\\<^sub>sF(map Val v));\n   \\<forall>C'\\<in>set (tl ?Cs).\n      \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>;\n   ?b \\<longrightarrow>\n   (\\<forall>C'\\<in>set ?Cs.\n       \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>);\n   distinct ?Cs; supercls_lst P ?Cs\\<rbrakk>\n  \\<Longrightarrow> P,E,h,sh \\<turnstile> INIT ?C (?Cs,?b) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n                 Val v) : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n   Val v) : T \\<and>\n    P \\<turnstile> T \\<le> T", "by clarsimp"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n Val v) : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (59 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T pns body D sh vs h l E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, Static :  Ts\\<rightarrow>T = (pns,\n                                  body) in D;\n         \\<nexists>sfs. sh D = \\<lfloor>(sfs, Done)\\<rfloor>;\n         M \\<noteq> clinit; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sM(map\n                            Val vs) : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 59 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n Val v) : T \\<and>\n  P \\<turnstile> T \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n Val v) : T \\<and>\n  P \\<turnstile> T \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n      Val v) : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule exI)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> INIT D ([D],False) \\<leftarrow> C\\<bullet>\\<^sub>sF(map\n    Val v) : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (58 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M vs a aa b ba E T.\n        \\<lbrakk>\\<nexists>b Ts T m. Ex (Method P C M b Ts T m);\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 58 subgoals...", "next"], ["proof (state)\ngoal (58 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M vs a aa b ba E T.\n        \\<lbrakk>\\<nexists>b Ts T m. Ex (Method P C M b Ts T m);\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 58 subgoals...", "case RedSCallNone"], ["proof (state)\nthis:\n  \\<nexists>b Ts T m. Ex (Method P C_ M_ b Ts T m)\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (58 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M vs a aa b ba E T.\n        \\<lbrakk>\\<nexists>b Ts T m. Ex (Method P C M b Ts T m);\n         P,E \\<turnstile> (a, aa, b) \\<surd>;\n         iconf b (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,a,b \\<turnstile> C\\<bullet>\\<^sub>sM(map Val vs) : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                             P \\<turnstile> T' \\<le> T\nA total of 58 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<nexists>b Ts T m. Ex (Method P C_ M_ b Ts T m)\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T", "show ?case"], ["proof (prove)\nusing this:\n  \\<nexists>b Ts T m. Ex (Method P C_ M_ b Ts T m)\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,a___,ba___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NoSuchMethodError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_NoSuchMethodError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NoSuchMethodError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (57 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T a b D vs aa ab ba bb E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a,\n                                     b) in D;\n         P,E \\<turnstile> (aa, ab, ba) \\<surd>;\n         iconf ba (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,aa,ba \\<turnstile> C\\<bullet>\\<^sub>sM(map Val\n               vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,aa,ba \\<turnstile> THROW\n               IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 57 subgoals...", "next"], ["proof (state)\ngoal (57 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T a b D vs aa ab ba bb E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a,\n                                     b) in D;\n         P,E \\<turnstile> (aa, ab, ba) \\<surd>;\n         iconf ba (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,aa,ba \\<turnstile> C\\<bullet>\\<^sub>sM(map Val\n               vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,aa,ba \\<turnstile> THROW\n               IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 57 subgoals...", "case RedSCallNonStatic"], ["proof (state)\nthis:\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (a___,\n                          ba___) in D_\n  P,E \\<turnstile> (aa___, a_, bb___) \\<surd>\n  iconf bb___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,aa___,bb___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (57 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>C M Ts T a b D vs aa ab ba bb E Ta.\n        \\<lbrakk>P \\<turnstile> C sees M, NonStatic :  Ts\\<rightarrow>T = (a,\n                                     b) in D;\n         P,E \\<turnstile> (aa, ab, ba) \\<surd>;\n         iconf ba (C\\<bullet>\\<^sub>sM(map Val vs));\n         P,E,aa,ba \\<turnstile> C\\<bullet>\\<^sub>sM(map Val\n               vs) : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,aa,ba \\<turnstile> THROW\n               IncompatibleClassChangeError : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 57 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (a___,\n                          ba___) in D_\n  P,E \\<turnstile> (aa___, a_, bb___) \\<surd>\n  iconf bb___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,aa___,bb___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T", "show ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> C_ sees M_, NonStatic :  Ts_\\<rightarrow>T_ = (a___,\n                          ba___) in D_\n  P,E \\<turnstile> (aa___, a_, bb___) \\<surd>\n  iconf bb___ (C_\\<bullet>\\<^sub>sM_(map Val vs_))\n  P,E,aa___,bb___ \\<turnstile> C_\\<bullet>\\<^sub>sM_(map Val vs_) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,aa___,bb___ \\<turnstile> THROW\n                                     IncompatibleClassChangeError : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_IncompatibleClassChangeError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,aa___,bb___ \\<turnstile> THROW\n                                   IncompatibleClassChangeError : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (56 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = None; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; e'} : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 56 subgoals...", "next"], ["proof (state)\ngoal (56 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = None; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; e'} : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 56 subgoals...", "case BlockRedNone"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h_, l_(V_ := None), sh_) \\<surd>;\n   iconf sh_ e_; P,?E,h_,sh_ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h'_,sh'_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ {V_:T_; e_}\n  P,E,h_,sh_ \\<turnstile> {V_:T_; e_} : T\n\ngoal (56 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = None; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; e'} : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 56 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(h_, l_(V_ := None), sh_),\n                  b_\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(h'_, l'_, sh'_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h_, l_(V_ := None), sh_) \\<surd>;\n   iconf sh_ e_; P,?E,h_,sh_ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h'_,sh'_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  l'_ V_ = None\n  \\<not> assigned V_ e_\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ {V_:T_; e_}\n  P,E,h_,sh_ \\<turnstile> {V_:T_; e_} : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h'_,sh'_ \\<turnstile> {V_:T_; e'_} : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto simp del:fun_upd_apply)(fastforce simp:sconf_def lconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h'_,sh'_ \\<turnstile> {V_:T_; e'_} : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "next"], ["proof (state)\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "case (BlockRedSome e h l V sh b e' h' l' sh' b' v T E Te)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V := None), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  l' V = \\<lfloor>v\\<rfloor>\n  \\<not> assigned V e\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; e}\n  P,E,h,sh \\<turnstile> {V:T; e} : Te\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "have red: \"P \\<turnstile> \\<langle>e,(h,l(V:=None),sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l(V:=None),sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> T\"\n   and Some: \"l' V = Some v\" and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\"\n   and iconf: \"iconf sh {V:T; e}\"\n   and wt: \"P,E,h,sh \\<turnstile> {V:T; e} : Te\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                     b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n          iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>T'.\n                              P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                              P \\<turnstile> T' \\<le> T) &&&\n     l' V = \\<lfloor>v\\<rfloor>) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh {V:T; e} &&& P,E,h,sh \\<turnstile> {V:T; e} : Te", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V := None), sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V := None), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  l' V = \\<lfloor>v\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; e}\n  P,E,h,sh \\<turnstile> {V:T; e} : Te\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "obtain Te' where IH': \"P,E(V\\<mapsto>T),h',sh' \\<turnstile> e' : Te' \\<and> P \\<turnstile> Te' \\<le> Te\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Te'.\n        P,E(V \\<mapsto> T),h',sh' \\<turnstile> e' : Te' \\<and>\n        P \\<turnstile> Te' \\<le> Te \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using IH conf iconf wt"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V := None), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; e}\n  P,E,h,sh \\<turnstile> {V:T; e} : Te\n\ngoal (1 subgoal):\n 1. (\\<And>Te'.\n        P,E(V \\<mapsto> T),h',sh' \\<turnstile> e' : Te' \\<and>\n        P \\<turnstile> Te' \\<le> Te \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(fastforce simp:sconf_def lconf_def)"], ["proof (state)\nthis:\n  P,E(V \\<mapsto> T),h',sh' \\<turnstile> e' : Te' \\<and>\n  P \\<turnstile> Te' \\<le> Te\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "have \"P,h' \\<turnstile> l' (:\\<le>) E(V\\<mapsto>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "using conf wt"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  P,E,h,sh \\<turnstile> {V:T; e} : Te\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)", "by(fastforce intro:red_preserves_lconf[OF red] simp:sconf_def lconf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "hence \"P,h' \\<turnstile> v :\\<le> T\""], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> v :\\<le> T", "using Some"], ["proof (prove)\nusing this:\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n  l' V = \\<lfloor>v\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,h' \\<turnstile> v :\\<le> T", "by(fastforce simp:lconf_def)"], ["proof (state)\nthis:\n  P,h' \\<turnstile> v :\\<le> T\n\ngoal (55 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V sh b e' h' l' sh' b' v T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V := None), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V := None), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v\\<rfloor>; \\<not> assigned V e;\n         P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh {V:T; e};\n         P,E,h,sh \\<turnstile> {V:T; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v;;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 55 subgoals...", "with IH'"], ["proof (chain)\npicking this:\n  P,E(V \\<mapsto> T),h',sh' \\<turnstile> e' : Te' \\<and>\n  P \\<turnstile> Te' \\<le> Te\n  P,h' \\<turnstile> v :\\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  P,E(V \\<mapsto> T),h',sh' \\<turnstile> e' : Te' \\<and>\n  P \\<turnstile> Te' \\<le> Te\n  P,h' \\<turnstile> v :\\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> {V:T; V:=Val v;; e'} : T' \\<and>\n       P \\<turnstile> T' \\<le> Te", "by(fastforce simp:sconf_def conf_def fun_upd_same simp del:fun_upd_apply)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> {V:T; V:=Val v;; e'} : T' \\<and>\n     P \\<turnstile> T' \\<le> Te\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "next"], ["proof (state)\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "case (InitBlockRed e h l V v sh b e' h' l' sh' b' v' T E T')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  l' V = \\<lfloor>v'\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; V:=Val v;; e}\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "have red: \"P \\<turnstile> \\<langle>e, (h,l(V\\<mapsto>v),sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\"\n   and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h,l(V\\<mapsto>v),sh) \\<surd>; iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n                    \\<Longrightarrow> \\<exists>U. P,E,h',sh' \\<turnstile> e' : U \\<and> P \\<turnstile> U \\<le> T\"\n   and v': \"l' V = Some v'\" and conf: \"P,E \\<turnstile> (h,l,sh) \\<surd>\"\n   and iconf: \"iconf sh {V:T; V:=Val v;; e}\"\n   and wt: \"P,E,h,sh \\<turnstile> {V:T := Val v; e} : T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                     b\\<rangle> \\<rightarrow>\n                    \\<langle>e',(h', l', sh'),b'\\<rangle> &&&\n     (\\<And>E T.\n         \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n          iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n         \\<Longrightarrow> \\<exists>U.\n                              P,E,h',sh' \\<turnstile> e' : U \\<and>\n                              P \\<turnstile> U \\<le> T) &&&\n     l' V = \\<lfloor>v'\\<rfloor>) &&&\n    P,E \\<turnstile> (h, l, sh) \\<surd> &&&\n    iconf sh {V:T; V:=Val v;; e} &&&\n    P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'", "by fact+"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                  b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  l' V = \\<lfloor>v'\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; V:=Val v;; e}\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "from wt"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'", "obtain T\\<^sub>1 where wt\\<^sub>1: \"typeof\\<^bsub>h\\<^esub> v = Some T\\<^sub>1\"\n    and T1subT: \"P \\<turnstile> T\\<^sub>1 \\<le> T\" and wt\\<^sub>2: \"P,E(V\\<mapsto>T),h,sh \\<turnstile> e : T'\""], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : T'\n\ngoal (1 subgoal):\n 1. (\\<And>T\\<^sub>1.\n        \\<lbrakk>typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<^sub>1\\<rfloor>;\n         P \\<turnstile> T\\<^sub>1 \\<le> T;\n         P,E(V \\<mapsto> T),h,sh \\<turnstile> e : T'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<^sub>1\\<rfloor>\n  P \\<turnstile> T\\<^sub>1 \\<le> T\n  P,E(V \\<mapsto> T),h,sh \\<turnstile> e : T'\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "have lconf\\<^sub>2: \"P,h \\<turnstile> l(V\\<mapsto>v) (:\\<le>) E(V\\<mapsto>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E(V \\<mapsto> T)", "using conf wt\\<^sub>1 T1subT"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  typeof\\<^bsub>h\\<^esub> v = \\<lfloor>T\\<^sub>1\\<rfloor>\n  P \\<turnstile> T\\<^sub>1 \\<le> T\n\ngoal (1 subgoal):\n 1. P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E(V \\<mapsto> T)", "by(simp add:sconf_def lconf_upd2 conf_def)"], ["proof (state)\nthis:\n  P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E(V \\<mapsto> T)\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "have \"\\<exists>T\\<^sub>1'. typeof\\<^bsub>h'\\<^esub> v' = Some T\\<^sub>1' \\<and> P \\<turnstile> T\\<^sub>1' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T\\<^sub>1'.\n       typeof\\<^bsub>h'\\<^esub> v' = \\<lfloor>T\\<^sub>1'\\<rfloor> \\<and>\n       P \\<turnstile> T\\<^sub>1' \\<le> T", "using v' red_preserves_lconf[OF red wt\\<^sub>2 lconf\\<^sub>2]"], ["proof (prove)\nusing this:\n  l' V = \\<lfloor>v'\\<rfloor>\n  P,h' \\<turnstile> l' (:\\<le>) E(V \\<mapsto> T)\n\ngoal (1 subgoal):\n 1. \\<exists>T\\<^sub>1'.\n       typeof\\<^bsub>h'\\<^esub> v' = \\<lfloor>T\\<^sub>1'\\<rfloor> \\<and>\n       P \\<turnstile> T\\<^sub>1' \\<le> T", "by(fastforce simp:lconf_def conf_def)"], ["proof (state)\nthis:\n  \\<exists>T\\<^sub>1'.\n     typeof\\<^bsub>h'\\<^esub> v' = \\<lfloor>T\\<^sub>1'\\<rfloor> \\<and>\n     P \\<turnstile> T\\<^sub>1' \\<le> T\n\ngoal (54 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>e h l V v sh b e' h' l' sh' b' v' T E Ta.\n        \\<lbrakk>P \\<turnstile> \\<langle>e,(h, l(V \\<mapsto> v), sh),\n                                 b\\<rangle> \\<rightarrow>\n                                \\<langle>e',(h', l', sh'),b'\\<rangle>;\n         \\<And>E T.\n            \\<lbrakk>P,E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>;\n             iconf sh e; P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n            \\<Longrightarrow> \\<exists>T'.\n                                 P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                                 P \\<turnstile> T' \\<le> T;\n         l' V = \\<lfloor>v'\\<rfloor>; P,E \\<turnstile> (h, l, sh) \\<surd>;\n         iconf sh {V:T; V:=Val v;; e};\n         P,E,h,sh \\<turnstile> {V:T; V:=Val v;; e} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> {V:T; V:=Val v';;\n                             e'} : T' \\<and> P \\<turnstile> T' \\<le> Ta\nA total of 54 subgoals...", "with IH conf iconf lconf\\<^sub>2 wt\\<^sub>2"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; V:=Val v;; e}\n  P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E(V \\<mapsto> T)\n  P,E(V \\<mapsto> T),h,sh \\<turnstile> e : T'\n  \\<exists>T\\<^sub>1'.\n     typeof\\<^bsub>h'\\<^esub> v' = \\<lfloor>T\\<^sub>1'\\<rfloor> \\<and>\n     P \\<turnstile> T\\<^sub>1' \\<le> T", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l(V \\<mapsto> v), sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>U.\n                       P,?E,h',sh' \\<turnstile> e' : U \\<and>\n                       P \\<turnstile> U \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh {V:T; V:=Val v;; e}\n  P,h \\<turnstile> l(V \\<mapsto> v) (:\\<le>) E(V \\<mapsto> T)\n  P,E(V \\<mapsto> T),h,sh \\<turnstile> e : T'\n  \\<exists>T\\<^sub>1'.\n     typeof\\<^bsub>h'\\<^esub> v' = \\<lfloor>T\\<^sub>1'\\<rfloor> \\<and>\n     P \\<turnstile> T\\<^sub>1' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<exists>T'a.\n       P,E,h',sh' \\<turnstile> {V:T; V:=Val v';; e'} : T'a \\<and>\n       P \\<turnstile> T'a \\<le> T'", "by (fastforce simp add:sconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'a.\n     P,E,h',sh' \\<turnstile> {V:T; V:=Val v';; e'} : T'a \\<and>\n     P \\<turnstile> T'a \\<le> T'\n\ngoal (53 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 53 subgoals...", "next"], ["proof (state)\ngoal (53 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 53 subgoals...", "case (SeqRed e h l sh b e' h' l' sh' b' e\\<^sub>2)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T\n\ngoal (53 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 53 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T", "have val: \"val_of e = None\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T\n\ngoal (1 subgoal):\n 1. val_of e = None", "by (simp add: val_no_step)"], ["proof (state)\nthis:\n  val_of e = None\n\ngoal (53 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 53 subgoals...", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "proof(cases \"lass_val_of e\")"], ["proof (state)\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "case None"], ["proof (state)\nthis:\n  lass_val_of e = None\n\ngoal (2 subgoals):\n 1. lass_val_of e = None \\<Longrightarrow>\n    \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T\n 2. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "then"], ["proof (chain)\npicking this:\n  lass_val_of e = None", "show ?thesis"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using SeqRed val"], ["proof (prove)\nusing this:\n  lass_val_of e = None\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T\n  val_of e = None\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto elim: WTrt_hext_shext_mono[OF _ red_hext_incr red_shext_incr])"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "case (Some a)"], ["proof (state)\nthis:\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "have \"sh = sh'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sh = sh'", "using SeqRed lass_val_of_spec[OF Some]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T\n  e = fst a:=Val (snd a)\n\ngoal (1 subgoal):\n 1. sh = sh'", "by auto"], ["proof (state)\nthis:\n  sh = sh'\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       lass_val_of e = \\<lfloor>a\\<rfloor> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n          P \\<turnstile> T' \\<le> T", "then"], ["proof (chain)\npicking this:\n  sh = sh'", "show ?thesis"], ["proof (prove)\nusing this:\n  sh = sh'\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "using SeqRed val Some"], ["proof (prove)\nusing this:\n  sh = sh'\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (e;; e\\<^sub>2)\n  P,E,h,sh \\<turnstile> e;; e\\<^sub>2 : T\n  val_of e = None\n  lass_val_of e = \\<lfloor>a\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto intro: lass_val_of_iconf[OF Some] elim: WTrt_hext_mono[OF _ red_hext_incr])"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> e';; e\\<^sub>2 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (52 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 52 subgoals...", "next"], ["proof (state)\ngoal (52 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 52 subgoals...", "case CondRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (if (e_) e\\<^sub>1_ else e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> if (e_) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (52 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 52 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (if (e_) e\\<^sub>1_ else e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> if (e_) e\\<^sub>1_ else e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,ab___,b_ \\<turnstile> if (e'_) e\\<^sub>1_\n       else e\\<^sub>2_ : T' \\<and> P \\<turnstile> T' \\<le> T", "by auto (blast intro:WTrt_hext_shext_mono[OF _ red_hext_incr red_shext_incr])+"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,ab___,b_ \\<turnstile> if (e'_) e\\<^sub>1_\n     else e\\<^sub>2_ : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (51 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 51 subgoals...", "next"], ["proof (state)\ngoal (51 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 51 subgoals...", "case ThrowRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (throw e_)\n  P,E,a___,ba___ \\<turnstile> throw e_ : T\n\ngoal (51 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 51 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (throw e_)\n  P,E,a___,ba___ \\<turnstile> throw e_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,ab___,b_ \\<turnstile> throw e'_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(auto simp:is_refT_def)(blast dest:widen_Class[THEN iffD1])+"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,ab___,b_ \\<turnstile> throw e'_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (50 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 50 subgoals...", "next"], ["proof (state)\ngoal (50 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 50 subgoals...", "case RedThrowNull"], ["proof (state)\nthis:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (throw null)\n  P,E,a___,ba___ \\<turnstile> throw null : T\n\ngoal (50 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 50 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (a___, a_, ba___) \\<surd>\n  iconf ba___ (throw null)\n  P,E,a___,ba___ \\<turnstile> throw null : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTThrow[OF WTVal] elim!:typeof_NullPointer simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> THROW NullPointer : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (49 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 49 subgoals...", "next"], ["proof (state)\ngoal (49 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 49 subgoals...", "case TryRed"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (try e_ catch(C_ V_) e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> try e_ catch(C_ V_) e\\<^sub>2_ : T\n\ngoal (49 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 49 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e_,(a___, aa___, ba___),\n                  bb___\\<rangle> \\<rightarrow>\n                 \\<langle>e'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconf ba___ e_;\n   P,?E,a___,ba___ \\<turnstile> e_ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,ab___,b_ \\<turnstile> e'_ : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (try e_ catch(C_ V_) e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> try e_ catch(C_ V_) e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,ab___,b_ \\<turnstile> try e'_ catch(C_ V_) e\\<^sub>2_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by auto (blast intro:widen_trans WTrt_hext_shext_mono[OF _ red_hext_incr red_shext_incr])"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,ab___,b_ \\<turnstile> try e'_ catch(C_ V_) e\\<^sub>2_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (48 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 48 subgoals...", "next"], ["proof (state)\ngoal (48 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 48 subgoals...", "case RedTryFail"], ["proof (state)\nthis:\n  hp (a___, aa___, ba___) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (try Throw a_ catch(C_ V_) e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> try Throw a_ catch(C_ V_) e\\<^sub>2_ : T\n\ngoal (48 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 48 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  hp (a___, aa___, ba___) a_ = \\<lfloor>(D_, fs_)\\<rfloor>\n  (D_, C_) \\<notin> (subcls1 P)\\<^sup>*\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconf ba___ (try Throw a_ catch(C_ V_) e\\<^sub>2_)\n  P,E,a___,ba___ \\<turnstile> try Throw a_ catch(C_ V_) e\\<^sub>2_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,a___,ba___ \\<turnstile> Throw a_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] simp:sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,a___,ba___ \\<turnstile> Throw a_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "next"], ["proof (state)\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "case (ListRed1 e h l sh b e' h' l' sh' b' es)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconfs sh (e # es)\n  P,E,h,sh \\<turnstile> e # es [:] Ts\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconfs sh (e # es)\n  P,E,h,sh \\<turnstile> e # es [:] Ts", "have val: \"val_of e = None\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconfs sh (e # es)\n  P,E,h,sh \\<turnstile> e # es [:] Ts\n\ngoal (1 subgoal):\n 1. val_of e = None", "by(simp add: val_no_step)"], ["proof (state)\nthis:\n  val_of e = None\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "obtain U Us where Ts: \"Ts = U # Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ListRed1"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconfs sh (e # es)\n  P,E,h,sh \\<turnstile> e # es [:] Ts\n\ngoal (1 subgoal):\n 1. (\\<And>U Us. Ts = U # Us \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  Ts = U # Us\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "then"], ["proof (chain)\npicking this:\n  Ts = U # Us", "have nsub_RI: \"\\<not> sub_RIs es\" and wts: \"P,E,h,sh \\<turnstile> es [:] Us\" and wt: \"P,E,h,sh \\<turnstile> e : U\"\n     and IH: \"\\<And>E T. \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; P,E,h,sh \\<turnstile> e : T\\<rbrakk> \\<Longrightarrow> \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> T\""], ["proof (prove)\nusing this:\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. (\\<not> sub_RIs es &&& P,E,h,sh \\<turnstile> es [:] Us) &&&\n    P,E,h,sh \\<turnstile> e : U &&&\n    (\\<And>E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>;\n         P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T)", "using ListRed1 val"], ["proof (prove)\nusing this:\n  Ts = U # Us\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconfs sh (e # es)\n  P,E,h,sh \\<turnstile> e # es [:] Ts\n  val_of e = None\n\ngoal (1 subgoal):\n 1. (\\<not> sub_RIs es &&& P,E,h,sh \\<turnstile> es [:] Us) &&&\n    P,E,h,sh \\<turnstile> e : U &&&\n    (\\<And>E T.\n        \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>;\n         P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                             P \\<turnstile> T' \\<le> T)", "by auto"], ["proof (state)\nthis:\n  \\<not> sub_RIs es\n  P,E,h,sh \\<turnstile> es [:] Us\n  P,E,h,sh \\<turnstile> e : U\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "obtain T' where\n    \"\\<forall>E0 E1. (\\<exists>T2. P,E1,h',sh' \\<turnstile> e' : T2 \\<and> P \\<turnstile> T2 \\<le> E0) = (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and> P \\<turnstile> T' E0 E1 \\<le> E0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        \\<forall>E0 E1.\n           (\\<exists>T2.\n               P,E1,h',sh' \\<turnstile> e' : T2 \\<and>\n               P \\<turnstile> T2 \\<le> E0) =\n           (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and>\n            P \\<turnstile> T' E0 E1 \\<le> E0) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by moura"], ["proof (state)\nthis:\n  \\<forall>E0 E1.\n     (\\<exists>T2.\n         P,E1,h',sh' \\<turnstile> e' : T2 \\<and>\n         P \\<turnstile> T2 \\<le> E0) =\n     (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and>\n      P \\<turnstile> T' E0 E1 \\<le> E0)\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<forall>E0 E1.\n     (\\<exists>T2.\n         P,E1,h',sh' \\<turnstile> e' : T2 \\<and>\n         P \\<turnstile> T2 \\<le> E0) =\n     (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and>\n      P \\<turnstile> T' E0 E1 \\<le> E0)", "have disj: \"\\<forall>E t. \\<not> P,E \\<turnstile> (h, l, sh) \\<surd> \\<or> \\<not> P,E,h,sh \\<turnstile> e : t \\<or> P,E,h',sh' \\<turnstile> e' : T' t E \\<and> P \\<turnstile> T' t E \\<le> t\""], ["proof (prove)\nusing this:\n  \\<forall>E0 E1.\n     (\\<exists>T2.\n         P,E1,h',sh' \\<turnstile> e' : T2 \\<and>\n         P \\<turnstile> T2 \\<le> E0) =\n     (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and>\n      P \\<turnstile> T' E0 E1 \\<le> E0)\n\ngoal (1 subgoal):\n 1. \\<forall>E t.\n       \\<not> P,E \\<turnstile> (h, l, sh) \\<surd> \\<or>\n       \\<not> P,E,h,sh \\<turnstile> e : t \\<or>\n       P,E,h',sh' \\<turnstile> e' : T' t E \\<and>\n       P \\<turnstile> T' t E \\<le> t", "using IH"], ["proof (prove)\nusing this:\n  \\<forall>E0 E1.\n     (\\<exists>T2.\n         P,E1,h',sh' \\<turnstile> e' : T2 \\<and>\n         P \\<turnstile> T2 \\<le> E0) =\n     (P,E1,h',sh' \\<turnstile> e' : T' E0 E1 \\<and>\n      P \\<turnstile> T' E0 E1 \\<le> E0)\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n\ngoal (1 subgoal):\n 1. \\<forall>E t.\n       \\<not> P,E \\<turnstile> (h, l, sh) \\<surd> \\<or>\n       \\<not> P,E,h,sh \\<turnstile> e : t \\<or>\n       P,E,h',sh' \\<turnstile> e' : T' t E \\<and>\n       P \\<turnstile> T' t E \\<le> t", "by presburger"], ["proof (state)\nthis:\n  \\<forall>E t.\n     \\<not> P,E \\<turnstile> (h, l, sh) \\<surd> \\<or>\n     \\<not> P,E,h,sh \\<turnstile> e : t \\<or>\n     P,E,h',sh' \\<turnstile> e' : T' t E \\<and>\n     P \\<turnstile> T' t E \\<le> t\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "have \"P,E,h',sh' \\<turnstile> es [:] Us\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> es [:] Us", "using nsub_RI wts wt"], ["proof (prove)\nusing this:\n  \\<not> sub_RIs es\n  P,E,h,sh \\<turnstile> es [:] Us\n  P,E,h,sh \\<turnstile> e : U\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> es [:] Us", "by (metis (no_types) ListRed1.hyps(1) WTrts_hext_shext_mono red_hext_incr red_shext_incr)"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> es [:] Us", "have \"\\<exists>ts. (\\<exists>t tsa. ts = t # tsa \\<and> P,E,h',sh' \\<turnstile> e' : t \\<and> P,E,h',sh' \\<turnstile> es [:] tsa) \\<and> P \\<turnstile> ts [\\<le>] (U # Us)\""], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> es [:] Us\n\ngoal (1 subgoal):\n 1. \\<exists>ts.\n       (\\<exists>t tsa.\n           ts = t # tsa \\<and>\n           P,E,h',sh' \\<turnstile> e' : t \\<and>\n           P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n       P \\<turnstile> ts [\\<le>] (U # Us)", "using disj wt ListRed1.prems(1)"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> es [:] Us\n  \\<forall>E t.\n     \\<not> P,E \\<turnstile> (h, l, sh) \\<surd> \\<or>\n     \\<not> P,E,h,sh \\<turnstile> e : t \\<or>\n     P,E,h',sh' \\<turnstile> e' : T' t E \\<and>\n     P \\<turnstile> T' t E \\<le> t\n  P,E,h,sh \\<turnstile> e : U\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<exists>ts.\n       (\\<exists>t tsa.\n           ts = t # tsa \\<and>\n           P,E,h',sh' \\<turnstile> e' : t \\<and>\n           P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n       P \\<turnstile> ts [\\<le>] (U # Us)", "by blast"], ["proof (state)\nthis:\n  \\<exists>ts.\n     (\\<exists>t tsa.\n         ts = t # tsa \\<and>\n         P,E,h',sh' \\<turnstile> e' : t \\<and>\n         P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n     P \\<turnstile> ts [\\<le>] (U # Us)\n\ngoal (47 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 47 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<exists>ts.\n     (\\<exists>t tsa.\n         ts = t # tsa \\<and>\n         P,E,h',sh' \\<turnstile> e' : t \\<and>\n         P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n     P \\<turnstile> ts [\\<le>] (U # Us)", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>ts.\n     (\\<exists>t tsa.\n         ts = t # tsa \\<and>\n         P,E,h',sh' \\<turnstile> e' : t \\<and>\n         P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n     P \\<turnstile> ts [\\<le>] (U # Us)\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'.\n       P,E,h',sh' \\<turnstile> e' # es [:] Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts", "using Ts"], ["proof (prove)\nusing this:\n  \\<exists>ts.\n     (\\<exists>t tsa.\n         ts = t # tsa \\<and>\n         P,E,h',sh' \\<turnstile> e' : t \\<and>\n         P,E,h',sh' \\<turnstile> es [:] tsa) \\<and>\n     P \\<turnstile> ts [\\<le>] (U # Us)\n  Ts = U # Us\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'.\n       P,E,h',sh' \\<turnstile> e' # es [:] Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts", "by auto"], ["proof (state)\nthis:\n  \\<exists>Ts'.\n     P,E,h',sh' \\<turnstile> e' # es [:] Ts' \\<and>\n     P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (46 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 46 subgoals...", "next"], ["proof (state)\ngoal (46 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 46 subgoals...", "case ListRed2"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es_,(a___, aa___, ba___),\n                  bb___\\<rangle> [\\<rightarrow>]\n                 \\<langle>es'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconfs ba___ es_;\n   P,?E,a___,ba___ \\<turnstile> es_ [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts'.\n                       P,?E,ab___,b_ \\<turnstile> es'_ [:] Ts' \\<and>\n                       P \\<turnstile> Ts' [\\<le>] ?Ts\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconfs ba___ (Val v_ # es_)\n  P,E,a___,ba___ \\<turnstile> Val v_ # es_ [:] Ts\n\ngoal (46 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 46 subgoals...", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es_,(a___, aa___, ba___),\n                  bb___\\<rangle> [\\<rightarrow>]\n                 \\<langle>es'_,(ab___, a_, b_),b'_\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (a___, aa___, ba___) \\<surd>; iconfs ba___ es_;\n   P,?E,a___,ba___ \\<turnstile> es_ [:] ?Ts\\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts'.\n                       P,?E,ab___,b_ \\<turnstile> es'_ [:] Ts' \\<and>\n                       P \\<turnstile> Ts' [\\<le>] ?Ts\n  P,E \\<turnstile> (a___, aa___, ba___) \\<surd>\n  iconfs ba___ (Val v_ # es_)\n  P,E,a___,ba___ \\<turnstile> Val v_ # es_ [:] Ts\n\ngoal (1 subgoal):\n 1. \\<exists>Ts'.\n       P,E,ab___,b_ \\<turnstile> Val v_ # es'_ [:] Ts' \\<and>\n       P \\<turnstile> Ts' [\\<le>] Ts", "by(fastforce dest: hext_typeof_mono[OF reds_hext_incr])"], ["proof (state)\nthis:\n  \\<exists>Ts'.\n     P,E,ab___,b_ \\<turnstile> Val v_ # es'_ [:] Ts' \\<and>\n     P \\<turnstile> Ts' [\\<le>] Ts\n\ngoal (45 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 45 subgoals...", "next"], ["proof (state)\ngoal (45 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 45 subgoals...", "case (InitNoneRed sh C C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = None\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (45 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 45 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = None\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "have sh: \"sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared))\""], ["proof (prove)\nusing this:\n  sh C = None\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared))", "by(simp add: shext_def)"], ["proof (state)\nthis:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sblank P C, Prepared))\n\ngoal (45 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 45 subgoals...", "have wt: \"P,E,h,sh(C \\<mapsto> (sblank P C, Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto>\n    (sblank P C,\n     Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "using InitNoneRed WTrt_shext_mono[OF _ sh]"], ["proof (prove)\nusing this:\n  sh C = None\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  \\<lbrakk>?P,?E,?h,sh \\<turnstile> ?e : ?T; \\<not> sub_RI ?e\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,sh(C \\<mapsto>\n                    (sblank P C, Prepared)) \\<turnstile> ?e : ?T\n\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto>\n    (sblank P C,\n     Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "by fastforce"], ["proof (state)\nthis:\n  P,E,h,sh(C \\<mapsto>\n  (sblank P C,\n   Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (45 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 45 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh(C \\<mapsto>\n  (sblank P C,\n   Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh(C \\<mapsto>\n  (sblank P C,\n   Prepared)) \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh(C \\<mapsto>\n       (sblank P C,\n        Prepared)) \\<turnstile> INIT C' (C #\n   Cs,False) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) (simp add: fun_upd_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh(C \\<mapsto>\n     (sblank P C,\n      Prepared)) \\<turnstile> INIT C' (C #\n Cs,False) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (44 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 44 subgoals...", "next"], ["proof (state)\ngoal (44 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 44 subgoals...", "case (RedInitDone sh C sfs C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (44 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 44 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "have \"P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Done)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "by auto (metis Nil_tl list.set_sel(2))"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (44 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 44 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (43 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 43 subgoals...", "next"], ["proof (state)\ngoal (43 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 43 subgoals...", "case (RedInitProcessing sh C sfs C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (43 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 43 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "have \"P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "by auto (metis Nil_tl list.set_sel(2))+"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (43 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 43 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (42 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 42 subgoals...", "next"], ["proof (state)\ngoal (42 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 42 subgoals...", "case RedInitError"], ["proof (state)\nthis:\n  sh_ C_ = \\<lfloor>(sfs_, Error)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_)\n  P,E,h_,sh_ \\<turnstile> INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_ : T\n\ngoal (42 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 42 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh_ C_ = \\<lfloor>(sfs_, Error)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_)\n  P,E,h_,sh_ \\<turnstile> INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_ : T", "show ?case"], ["proof (prove)\nusing this:\n  sh_ C_ = \\<lfloor>(sfs_, Error)\\<rfloor>\n  P,E \\<turnstile> (h_, l_, sh_) \\<surd>\n  iconf sh_ (INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_)\n  P,E,h_,sh_ \\<turnstile> INIT C'_ (C_ # Cs_,False) \\<leftarrow> e_ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h_,sh_ \\<turnstile> RI (C_,THROW\n NoClassDefFoundError) ; Cs_ \\<leftarrow> e_ : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(fastforce intro: WTrtThrow[OF WTrtVal] elim!: typeof_NoClassDefFoundError\n      simp: sconf_def hconf_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h_,sh_ \\<turnstile> RI (C_,THROW\n                                     NoClassDefFoundError) ; Cs_ \\<leftarrow> e_ : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (41 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 41 subgoals...", "next"], ["proof (state)\ngoal (41 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 41 subgoals...", "case (InitObjectRed sh C sfs sh' C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (41 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 41 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "have sh: \"sh \\<unlhd>\\<^sub>s sh(Object \\<mapsto> (sfs, Processing))\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. sh \\<unlhd>\\<^sub>s sh(Object \\<mapsto> (sfs, Processing))", "by(simp add: shext_def)"], ["proof (state)\nthis:\n  sh \\<unlhd>\\<^sub>s sh(Object \\<mapsto> (sfs, Processing))\n\ngoal (41 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 41 subgoals...", "have \"P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T", "using InitObjectRed WTrt_shext_mono[OF _ sh]"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C = Object\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  \\<lbrakk>?P,?E,?h,sh \\<turnstile> ?e : ?T; \\<not> sub_RI ?e\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,sh(Object \\<mapsto>\n                    (sfs, Processing)) \\<turnstile> ?e : ?T\n\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T\n\ngoal (41 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 41 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh' \\<turnstile> INIT C' (C #\n Cs,True) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) (simp add: fun_upd_def)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh' \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "next"], ["proof (state)\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "case (InitNonObjectSuperRed sh C sfs D fs ms sh' C' Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, fs, ms)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, fs, ms)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T", "have sh: \"sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, fs, ms)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))", "by(simp add: shext_def)"], ["proof (state)\nthis:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))", "have cd: \"is_class P D\""], ["proof (prove)\nusing this:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))\n\ngoal (1 subgoal):\n 1. is_class P D", "using InitNonObjectSuperRed class_wf wf wf_cdecl_supD"], ["proof (prove)\nusing this:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Processing))\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, fs, ms)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  \\<lbrakk>class ?P ?C = \\<lfloor>?c\\<rfloor>; wf_prog ?wf_md ?P\\<rbrakk>\n  \\<Longrightarrow> wf_cdecl ?wf_md ?P (?C, ?c)\n  wf_J_prog P\n  \\<lbrakk>wf_cdecl ?wf_md ?P (?C, ?D, ?r); ?C \\<noteq> Object\\<rbrakk>\n  \\<Longrightarrow> is_class ?P ?D\n\ngoal (1 subgoal):\n 1. is_class P D", "by blast"], ["proof (state)\nthis:\n  is_class P D\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "have sup': \"supercls_lst P (C # Cs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supercls_lst P (C # Cs)", "using InitNonObjectSuperRed.prems(3)"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. supercls_lst P (C # Cs)", "by auto"], ["proof (state)\nthis:\n  supercls_lst P (C # Cs)\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "then"], ["proof (chain)\npicking this:\n  supercls_lst P (C # Cs)", "have sup: \"supercls_lst P (D # C # Cs)\""], ["proof (prove)\nusing this:\n  supercls_lst P (C # Cs)\n\ngoal (1 subgoal):\n 1. supercls_lst P (D # C # Cs)", "using supercls_lst_app[of P C Cs D] subcls1I[OF InitNonObjectSuperRed.hyps(3,2)]"], ["proof (prove)\nusing this:\n  supercls_lst P (C # Cs)\n  \\<lbrakk>supercls_lst P (C # Cs);\n   P \\<turnstile> C \\<preceq>\\<^sup>* D\\<rbrakk>\n  \\<Longrightarrow> supercls_lst P (D # C # Cs)\n  P \\<turnstile> C \\<prec>\\<^sup>1 D\n\ngoal (1 subgoal):\n 1. supercls_lst P (D # C # Cs)", "by auto"], ["proof (state)\nthis:\n  supercls_lst P (D # C # Cs)\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "have \"distinct (C # Cs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (C # Cs)", "using InitNonObjectSuperRed.prems(3)"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. distinct (C # Cs)", "by auto"], ["proof (state)\nthis:\n  distinct (C # Cs)\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "then"], ["proof (chain)\npicking this:\n  distinct (C # Cs)", "have dist: \"distinct (D # C # Cs)\""], ["proof (prove)\nusing this:\n  distinct (C # Cs)\n\ngoal (1 subgoal):\n 1. distinct (D # C # Cs)", "using wf_supercls_distinct_app[OF wf InitNonObjectSuperRed.hyps(2-3) sup']"], ["proof (prove)\nusing this:\n  distinct (C # Cs)\n  distinct (C # Cs) \\<Longrightarrow> distinct (D # C # Cs)\n\ngoal (1 subgoal):\n 1. distinct (D # C # Cs)", "by simp"], ["proof (state)\nthis:\n  distinct (D # C # Cs)\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "have \"P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T", "using InitNonObjectSuperRed WTrt_shext_mono[OF _ sh] cd sup dist"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, Prepared)\\<rfloor>\n  C \\<noteq> Object\n  class P C = \\<lfloor>(D, fs, ms)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Processing))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,False) \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,False) \\<leftarrow> e : T\n  \\<lbrakk>?P,?E,?h,sh \\<turnstile> ?e : ?T; \\<not> sub_RI ?e\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,sh(C \\<mapsto>\n                    (sfs, Processing)) \\<turnstile> ?e : ?T\n  is_class P D\n  supercls_lst P (D # C # Cs)\n  distinct (D # C # Cs)\n\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T\n\ngoal (40 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 40 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh' \\<turnstile> INIT C' (D # C # Cs,False) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh' \\<turnstile> INIT C' (D #\n C # Cs,False) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh' \\<turnstile> INIT C' (D #\n                                     C #\n                                     Cs,False) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "next"], ["proof (state)\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "case (RedInitRInit C' C Cs e' h l sh b E T)"], ["proof (state)\nthis:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,True) \\<leftarrow> e')\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e' : T\n\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,True) \\<leftarrow> e')\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e' : T", "obtain a sfs where C: \"class P C = \\<lfloor>a\\<rfloor>\" and proc: \"sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\""], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,True) \\<leftarrow> e')\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e' : T\n\ngoal (1 subgoal):\n 1. (\\<And>a sfs.\n        \\<lbrakk>class P C = \\<lfloor>a\\<rfloor>;\n         sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using WTrtInit"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,True) \\<leftarrow> e')\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e' : T\n  \\<lbrakk>?P,?E,?h,?sh \\<turnstile> ?e : ?T;\n   \\<forall>C'\\<in>set (?C # ?Cs). is_class ?P C'; \\<not> sub_RI ?e;\n   \\<forall>C'\\<in>set (tl ?Cs).\n      \\<exists>sfs. ?sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>;\n   ?b \\<longrightarrow>\n   (\\<forall>C'\\<in>set ?Cs.\n       \\<exists>sfs. ?sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>);\n   distinct ?Cs; supercls_lst ?P ?Cs\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,?sh \\<turnstile> INIT ?C (?Cs,?b) \\<leftarrow> ?e : ?T\n\ngoal (1 subgoal):\n 1. (\\<And>a sfs.\n        \\<lbrakk>class P C = \\<lfloor>a\\<rfloor>;\n         sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp: is_class_def)"], ["proof (state)\nthis:\n  class P C = \\<lfloor>a\\<rfloor>\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "then"], ["proof (chain)\npicking this:\n  class P C = \\<lfloor>a\\<rfloor>\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>", "have T': \"P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\""], ["proof (prove)\nusing this:\n  class P C = \\<lfloor>a\\<rfloor>\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "using wf_types_clinit[OF wf C]"], ["proof (prove)\nusing this:\n  class P C = \\<lfloor>a\\<rfloor>\n  sh C = \\<lfloor>(sfs, Processing)\\<rfloor>\n  ?sh C = \\<lfloor>(?sfs, Processing)\\<rfloor> \\<Longrightarrow>\n  P,?E,?h,?sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void", "by simp"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sclinit([]) : Void\n\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "have \"P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T", "using RedInitRInit"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (INIT C' (C # Cs,True) \\<leftarrow> e')\n  P,E,h,sh \\<turnstile> INIT C' (C # Cs,True) \\<leftarrow> e' : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T", "by(auto intro: T')"], ["proof (state)\nthis:\n  P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T\n\ngoal (39 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 39 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> RI (C,C\\<bullet>\\<^sub>sclinit([])) ; Cs \\<leftarrow> e' : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "next"], ["proof (state)\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "case (RInitRed e h l sh b e' h' l' sh' b' C Cs e\\<^sub>0 E T)"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T", "have \"(\\<And>E T. P,E \\<turnstile> (h, l, sh) \\<surd> \\<Longrightarrow> P,E,h,sh \\<turnstile> e : T \\<Longrightarrow> \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T' \\<and> P \\<turnstile> T' \\<le> T)\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (1 subgoal):\n 1. \\<And>E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>;\n        P,E,h,sh \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h',sh' \\<turnstile> e' : T' \\<and>\n                            P \\<turnstile> T' \\<le> T", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T", "have \"\\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n\ngoal (1 subgoal):\n 1. \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'", "using RInitRed"], ["proof (prove)\nusing this:\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "then"], ["proof (chain)\npicking this:\n  \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'", "obtain T' where e': \"P,E,h',sh' \\<turnstile> e' : T'\""], ["proof (prove)\nusing this:\n  \\<exists>T'. P,E,h',sh' \\<turnstile> e' : T'\n\ngoal (1 subgoal):\n 1. (\\<And>T'.\n        P,E,h',sh' \\<turnstile> e' : T' \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e' : T'\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "have wt\\<^sub>0: \"P,E,h',sh' \\<turnstile> e\\<^sub>0 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>0 : T", "using RInitRed"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> e\\<^sub>0 : T", "by simp (auto intro: WTrt_hext_shext_mono[OF _ red_hext_incr red_shext_incr])"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> e\\<^sub>0 : T\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "have nip: \"\\<forall>C' \\<in> set (C#Cs). not_init C' e' \\<and> (\\<exists>sfs. sh' C' = \\<lfloor>(sfs, Processing)\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C'\\<in>set (C # Cs).\n       not_init C' e' \\<and>\n       (\\<exists>sfs. sh' C' = \\<lfloor>(sfs, Processing)\\<rfloor>)", "using RInitRed red_proc_pres[OF wf_prog_wwf_prog[OF wf]]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n  \\<lbrakk>P \\<turnstile> \\<langle>?e,(?h, ?l, ?sh),\n                           ?b\\<rangle> \\<rightarrow>\n                          \\<langle>?e',(?h', ?l', ?sh'),?b'\\<rangle>;\n   not_init ?C ?e; ?sh ?C = \\<lfloor>(?sfs, Processing)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> not_init ?C ?e' \\<and>\n                    (\\<exists>sfs'.\n                        ?sh' ?C = \\<lfloor>(sfs', Processing)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<forall>C'\\<in>set (C # Cs).\n       not_init C' e' \\<and>\n       (\\<exists>sfs. sh' C' = \\<lfloor>(sfs, Processing)\\<rfloor>)", "by auto"], ["proof (state)\nthis:\n  \\<forall>C'\\<in>set (C # Cs).\n     not_init C' e' \\<and>\n     (\\<exists>sfs. sh' C' = \\<lfloor>(sfs, Processing)\\<rfloor>)\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "have shC: \"\\<exists>sfs. sh' C = \\<lfloor>(sfs, Processing)\\<rfloor> \\<or> sh' C = \\<lfloor>(sfs, Error)\\<rfloor> \\<and> e' = THROW NoClassDefFoundError\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>sfs.\n       sh' C = \\<lfloor>(sfs, Processing)\\<rfloor> \\<or>\n       sh' C = \\<lfloor>(sfs, Error)\\<rfloor> \\<and>\n       e' = THROW NoClassDefFoundError", "using RInitRed red_proc_pres[OF wf_prog_wwf_prog[OF wf] RInitRed.hyps(1)]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n  \\<lbrakk>not_init ?C e;\n   sh ?C = \\<lfloor>(?sfs, Processing)\\<rfloor>\\<rbrakk>\n  \\<Longrightarrow> not_init ?C e' \\<and>\n                    (\\<exists>sfs'.\n                        sh' ?C = \\<lfloor>(sfs', Processing)\\<rfloor>)\n\ngoal (1 subgoal):\n 1. \\<exists>sfs.\n       sh' C = \\<lfloor>(sfs, Processing)\\<rfloor> \\<or>\n       sh' C = \\<lfloor>(sfs, Error)\\<rfloor> \\<and>\n       e' = THROW NoClassDefFoundError", "by blast"], ["proof (state)\nthis:\n  \\<exists>sfs.\n     sh' C = \\<lfloor>(sfs, Processing)\\<rfloor> \\<or>\n     sh' C = \\<lfloor>(sfs, Error)\\<rfloor> \\<and>\n     e' = THROW NoClassDefFoundError\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "have \"P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T", "using RInitRed e' wt\\<^sub>0 nip shC"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P,?E \\<turnstile> (h, l, sh) \\<surd>; iconf sh e;\n   P,?E,h,sh \\<turnstile> e : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P,?E,h',sh' \\<turnstile> e' : T' \\<and>\n                       P \\<turnstile> T' \\<le> ?T\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0)\n  P,E,h,sh \\<turnstile> RI (C,e) ; Cs \\<leftarrow> e\\<^sub>0 : T\n  P,E,h',sh' \\<turnstile> e' : T'\n  P,E,h',sh' \\<turnstile> e\\<^sub>0 : T\n  \\<forall>C'\\<in>set (C # Cs).\n     not_init C' e' \\<and>\n     (\\<exists>sfs. sh' C' = \\<lfloor>(sfs, Processing)\\<rfloor>)\n  \\<exists>sfs.\n     sh' C = \\<lfloor>(sfs, Processing)\\<rfloor> \\<or>\n     sh' C = \\<lfloor>(sfs, Error)\\<rfloor> \\<and>\n     e' = THROW NoClassDefFoundError\n\ngoal (1 subgoal):\n 1. P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T", "by auto"], ["proof (state)\nthis:\n  P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (38 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 38 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h',sh' \\<turnstile> RI (C,e') ; Cs \\<leftarrow> e\\<^sub>0 : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "next"], ["proof (state)\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "case (RedRInit sh C sfs i sh' C' Cs v e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T", "have sh: \"sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Done))\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Done))", "by(auto simp: shext_def)"], ["proof (state)\nthis:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Done))\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "have wt: \"P,E,h,sh(C \\<mapsto> (sfs, Done)) \\<turnstile> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto> (sfs, Done)) \\<turnstile> e : T", "using RedRInit WTrt_shext_mono[OF _ sh]"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T\n  \\<lbrakk>?P,?E,?h,sh \\<turnstile> ?e : ?T; \\<not> sub_RI ?e\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,sh(C \\<mapsto>\n                    (sfs, Done)) \\<turnstile> ?e : ?T\n\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto> (sfs, Done)) \\<turnstile> e : T", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh(C \\<mapsto> (sfs, Done)) \\<turnstile> e : T\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "have shC: \"\\<forall>C' \\<in> set(tl Cs). \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>C'\\<in>set (tl Cs).\n       \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>", "using RedRInit"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<forall>C'\\<in>set (tl Cs).\n       \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>", "by(cases Cs, auto)"], ["proof (state)\nthis:\n  \\<forall>C'\\<in>set (tl Cs).\n     \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "have \"P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "using RedRInit wt shC"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Done))\n  C' = last (C # Cs)\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Val v) ; Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Val v) ; Cs \\<leftarrow> e : T\n  P,E,h,sh(C \\<mapsto> (sfs, Done)) \\<turnstile> e : T\n  \\<forall>C'\\<in>set (tl Cs).\n     \\<exists>sfs. sh C' = \\<lfloor>(sfs, Processing)\\<rfloor>\n\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "by(cases Cs, auto)"], ["proof (state)\nthis:\n  P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (37 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 37 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh' \\<turnstile> INIT C' (Cs,True) \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (36 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 36 subgoals...", "next"], ["proof (state)\ngoal (36 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 36 subgoals...", "case (SCallThrowParams es vs e es' C M h l sh b)"], ["proof (state)\nthis:\n  es = map Val vs @ throw e # es'\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n\ngoal (36 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 36 subgoals...", "then"], ["proof (chain)\npicking this:\n  es = map Val vs @ throw e # es'\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T", "show ?case"], ["proof (prove)\nusing this:\n  es = map Val vs @ throw e # es'\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> throw e : T' \\<and> P \\<turnstile> T' \\<le> T", "using map_Val_nthrow_neq[of _ vs e es']"], ["proof (prove)\nusing this:\n  es = map Val vs @ throw e # es'\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (C\\<bullet>\\<^sub>sM(es))\n  P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sM(es) : T\n  map Val ?vs = map Val vs @ throw e # es' \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh \\<turnstile> throw e : T' \\<and> P \\<turnstile> T' \\<le> T", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh \\<turnstile> throw e : T' \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "next"], ["proof (state)\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "case (RInitInitThrow sh C sfs i sh' a D Cs e h l b)"], ["proof (state)\nthis:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Throw a) ; D # Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "then"], ["proof (chain)\npicking this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Throw a) ; D # Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T", "have sh: \"sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Error))\""], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Throw a) ; D # Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Error))", "by(auto simp: shext_def)"], ["proof (state)\nthis:\n  sh \\<unlhd>\\<^sub>s sh(C \\<mapsto> (sfs, Error))\n\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "have wt: \"P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T", "using RInitInitThrow WTrt_shext_mono[OF _ sh]"], ["proof (prove)\nusing this:\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Throw a) ; D # Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n  \\<lbrakk>?P,?E,?h,sh \\<turnstile> ?e : ?T; \\<not> sub_RI ?e\\<rbrakk>\n  \\<Longrightarrow> ?P,?E,?h,sh(C \\<mapsto>\n                    (sfs, Error)) \\<turnstile> ?e : ?T\n\ngoal (1 subgoal):\n 1. P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T", "by clarsimp"], ["proof (state)\nthis:\n  P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T\n\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T", "have \"P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T\""], ["proof (prove)\nusing this:\n  P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T", "using RInitInitThrow"], ["proof (prove)\nusing this:\n  P,E,h,sh(C \\<mapsto> (sfs, Error)) \\<turnstile> e : T\n  sh C = \\<lfloor>(sfs, i)\\<rfloor>\n  sh' = sh(C \\<mapsto> (sfs, Error))\n  P,E \\<turnstile> (h, l, sh) \\<surd>\n  iconf sh (RI (C,Throw a) ; D # Cs \\<leftarrow> e)\n  P,E,h,sh \\<turnstile> RI (C,Throw a) ; D # Cs \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T", "by auto"], ["proof (state)\nthis:\n  P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T\n\ngoal (35 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 35 subgoals...", "then"], ["proof (chain)\npicking this:\n  P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T", "show ?case"], ["proof (prove)\nusing this:\n  P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T' \\<and>\n       P \\<turnstile> T' \\<le> T", "by(rule_tac x = T in exI) simp"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,h,sh' \\<turnstile> RI (D,Throw a) ; Cs \\<leftarrow> e : T' \\<and>\n     P \\<turnstile> T' \\<le> T\n\ngoal (34 subgoals):\n 1. \\<And>sh C sfs h l E T.\n       \\<lbrakk>sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> new C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 2. \\<And>sh C h l E T.\n       \\<lbrakk>\\<nexists>sfs. sh C = \\<lfloor>(sfs, Done)\\<rfloor>;\n        is_class P C; P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (new C);\n        P,E,h,sh \\<turnstile> new C : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> INIT C ([C],False) \\<leftarrow> new\n       C : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 3. \\<And>C a aa b ba E T.\n       \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b (Cast C null);\n        P,E,a,b \\<turnstile> Cast C null : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,a,b \\<turnstile> null : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 4. \\<And>h a D fs C l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(D, fs)\\<rfloor>;\n        P \\<turnstile> D \\<preceq>\\<^sup>* C;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (Cast C (addr a));\n        P,E,h,sh \\<turnstile> Cast C (addr a) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> addr a : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 5. \\<And>V v h l sh b E T.\n       \\<lbrakk>P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (V:=Val v);\n        P,E,h,sh \\<turnstile> V:=Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 6. \\<And>h a C fs F D l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>; iconf sh (addr a\\<bullet>F{D});\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 7. \\<And>h a C fs F D v l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b t. P \\<turnstile> C has F,b:t in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>F{D} := Val v);\n        P,E,h,sh \\<turnstile> addr a\\<bullet>F{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchFieldError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 8. \\<And>C F t D sh sfs i sfs' v sh' h l E T.\n       \\<lbrakk>P \\<turnstile> C has F,Static:t in D;\n        sh D = \\<lfloor>(sfs, i)\\<rfloor>; sfs' = sfs(F \\<mapsto> v);\n        sh' = sh(D \\<mapsto> (sfs', i));\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (C\\<bullet>\\<^sub>sF{D} := Val v);\n        P,E,h,sh \\<turnstile> C\\<bullet>\\<^sub>sF{D} := Val v : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh' \\<turnstile> unit : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 9. \\<And>h a C fs M vs l sh b E T.\n       \\<lbrakk>h a = \\<lfloor>(C, fs)\\<rfloor>;\n        \\<nexists>b Ts T m D.\n           P \\<turnstile> C sees M, b :  Ts\\<rightarrow>T = m in D;\n        P,E \\<turnstile> (h, l, sh) \\<surd>;\n        iconf sh (addr a\\<bullet>M(map Val vs));\n        P,E,h,sh \\<turnstile> addr a\\<bullet>M(map Val vs) : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,h,sh \\<turnstile> THROW\n             NoSuchMethodError : T' \\<and>\n                            P \\<turnstile> T' \\<le> T\n 10. \\<And>V T u a aa b ba E Ta.\n        \\<lbrakk>P,E \\<turnstile> (a, aa, b) \\<surd>; iconf b {V:T; Val u};\n         P,E,a,b \\<turnstile> {V:T; Val u} : Ta\\<rbrakk>\n        \\<Longrightarrow> \\<exists>T'.\n                             P,E,a,b \\<turnstile> Val u : T' \\<and>\n                             P \\<turnstile> T' \\<le> Ta\nA total of 34 subgoals...", "qed fastforce+"], ["", "(* esp all Throw propagation rules except RInitInit are dealt with here *)\n(*>*)"], ["", "corollary subject_reduction:\n  \"\\<lbrakk> wf_J_prog P; P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle>; P,E \\<turnstile> s \\<surd>; iconf (shp s) e; P,E,hp s,shp s \\<turnstile> e:T \\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'. P,E,hp s',shp s' \\<turnstile> e':T' \\<and> P \\<turnstile> T' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                    \\<langle>e',s',b'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; iconf (shp s) e;\n     P,E,hp s,shp s \\<turnstile> e : T\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,hp s',shp s' \\<turnstile> e' : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                    \\<langle>e',s',b'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; iconf (shp s) e;\n     P,E,hp s,shp s \\<turnstile> e : T\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,hp s',shp s' \\<turnstile> e' : T' \\<and>\n                         P \\<turnstile> T' \\<le> T", "by(cases s, cases s', fastforce dest:subject_reduction2)"], ["", "(*>*)"], ["", "corollary subjects_reduction:\n  \"\\<lbrakk> wf_J_prog P; P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>] \\<langle>es',s',b'\\<rangle>; P,E \\<turnstile> s \\<surd>; iconfs (shp s) es; P,E,hp s,shp s \\<turnstile> es[:]Ts \\<rbrakk>\n  \\<Longrightarrow> \\<exists>Ts'. P,E,hp s',shp s' \\<turnstile> es'[:]Ts' \\<and> P \\<turnstile> Ts' [\\<le>] Ts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P;\n     P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',s',b'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; iconfs (shp s) es;\n     P,E,hp s,shp s \\<turnstile> es [:] Ts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Ts'.\n                         P,E,hp s',shp s' \\<turnstile> es' [:] Ts' \\<and>\n                         P \\<turnstile> Ts' [\\<le>] Ts", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P;\n     P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]\n                    \\<langle>es',s',b'\\<rangle>;\n     P,E \\<turnstile> s \\<surd>; iconfs (shp s) es;\n     P,E,hp s,shp s \\<turnstile> es [:] Ts\\<rbrakk>\n    \\<Longrightarrow> \\<exists>Ts'.\n                         P,E,hp s',shp s' \\<turnstile> es' [:] Ts' \\<and>\n                         P \\<turnstile> Ts' [\\<le>] Ts", "by(cases s, cases s', fastforce dest:subjects_reduction2)"], ["", "(*>*)"], ["", "subsection \\<open> Lifting to @{text\"\\<rightarrow>*\"} \\<close>"], ["", "text\\<open> Now all these preservation lemmas are first lifted to the transitive\nclosure \\dots \\<close>"], ["", "lemma Red_preserves_sconf:\nassumes wf: \"wf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<And>T. \\<lbrakk> P,E,hp s,shp s \\<turnstile> e : T; iconf (shp s) e; P,E \\<turnstile> s \\<surd> \\<rbrakk> \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s,shp s \\<turnstile> e : T; iconf (shp s) e;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s,shp s \\<turnstile> e : T; iconf (shp s) e;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s,shp s \\<turnstile> e : T; iconf (shp s) e;\n        P,E \\<turnstile> s \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s',shp s' \\<turnstile> e' : T; iconf (shp s') e';\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case refl"], ["proof (state)\nthis:\n  P,E,hp s',shp s' \\<turnstile> e' : T\n  iconf (shp s') e'\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E,hp s',shp s' \\<turnstile> e' : T; iconf (shp s') e';\n        P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "case (step e s b e' s' b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>P,E,hp s',shp s' \\<turnstile> e' : ?T; iconf (shp s') e';\n   P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp s,shp s \\<turnstile> e : T\n  iconf (shp s) e\n  P,E \\<turnstile> s \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "obtain h l sh h' l' sh' where s:\"s = (h,l,sh)\" and s':\"s' = (h',l',sh')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>h l sh h' l' sh'.\n        \\<lbrakk>s = (h, l, sh); s' = (h', l', sh')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(cases s, cases s')"], ["proof (state)\nthis:\n  s = (h, l, sh)\n  s' = (h', l', sh')\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "then"], ["proof (chain)\npicking this:\n  s = (h, l, sh)\n  s' = (h', l', sh')", "have \"P \\<turnstile> \\<langle>e,(h,l,sh),b\\<rangle> \\<rightarrow> \\<langle>e',(h',l',sh'),b'\\<rangle>\""], ["proof (prove)\nusing this:\n  s = (h, l, sh)\n  s' = (h', l', sh')\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l', sh'),b'\\<rangle>", "using step.hyps(1)"], ["proof (prove)\nusing this:\n  s = (h, l, sh)\n  s' = (h', l', sh')\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                   \\<langle>e',(h', l', sh'),b'\\<rangle>", "by simp"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>", "have iconf': \"iconf (shp s') e'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n\ngoal (1 subgoal):\n 1. iconf (shp s') e'", "using red_preserves_iconf[OF wf_prog_wwf_prog[OF wf]]\n    step.prems(2) s s'"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,(h, l, sh),b\\<rangle> \\<rightarrow>\n                 \\<langle>e',(h', l', sh'),b'\\<rangle>\n  \\<lbrakk>P \\<turnstile> \\<langle>?e,(?h, ?l, ?sh),\n                           ?b\\<rangle> \\<rightarrow>\n                          \\<langle>?e',(?h', ?l', ?sh'),?b'\\<rangle>;\n   iconf ?sh ?e\\<rbrakk>\n  \\<Longrightarrow> iconf ?sh' ?e'\n  iconf (shp s) e\n  s = (h, l, sh)\n  s' = (h', l', sh')\n\ngoal (1 subgoal):\n 1. iconf (shp s') e'", "by simp"], ["proof (state)\nthis:\n  iconf (shp s') e'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E,hp ac,shp ac \\<turnstile> ab : T; iconf (shp ac) ab;\n            P,E \\<turnstile> ac \\<surd>\\<rbrakk>\n           \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>;\n        P,E,hp aa,shp aa \\<turnstile> a : T; iconf (shp aa) a;\n        P,E \\<turnstile> aa \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>", "thus ?case"], ["proof (prove)\nusing this:\n  iconf (shp s') e'\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "using step"], ["proof (prove)\nusing this:\n  iconf (shp s') e'\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>P,E,hp s',shp s' \\<turnstile> e' : ?T; iconf (shp s') e';\n   P,E \\<turnstile> s' \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,E \\<turnstile> s' \\<surd>\n  P,E,hp s,shp s \\<turnstile> e : T\n  iconf (shp s) e\n  P,E \\<turnstile> s \\<surd>\n\ngoal (1 subgoal):\n 1. P,E \\<turnstile> s' \\<surd>", "by(blast intro:red_preserves_sconf dest: subject_reduction[OF wf])"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma Red_preserves_iconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"iconf (shp s) e \\<Longrightarrow> iconf (shp s') e'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf (shp s) e \\<Longrightarrow> iconf (shp s') e'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf (shp s) e \\<Longrightarrow> iconf (shp s') e'", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. iconf (shp s) e \\<Longrightarrow> iconf (shp s') e'", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        iconf (shp ac) ab \\<Longrightarrow> iconf (shp s') e';\n        iconf (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconf (shp s') e'", "case refl"], ["proof (state)\nthis:\n  iconf (shp s') e'\n\ngoal (2 subgoals):\n 1. iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        iconf (shp ac) ab \\<Longrightarrow> iconf (shp s') e';\n        iconf (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconf (shp s') e'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. iconf (shp s') e'", "by fact"], ["proof (state)\nthis:\n  iconf (shp s') e'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        iconf (shp ac) ab \\<Longrightarrow> iconf (shp s') e';\n        iconf (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconf (shp s') e'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        iconf (shp ac) ab \\<Longrightarrow> iconf (shp s') e';\n        iconf (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconf (shp s') e'", "case (step e s b e' s' b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n  iconf (shp s) e\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        iconf (shp ac) ab \\<Longrightarrow> iconf (shp s') e';\n        iconf (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconf (shp s') e'", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n  iconf (shp s) e\n\ngoal (1 subgoal):\n 1. iconf (shp s') e'", "using wf step"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n  iconf (shp s) e\n  wwf_J_prog P\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  iconf (shp s') e' \\<Longrightarrow> iconf (shp s') e'\n  iconf (shp s) e\n\ngoal (1 subgoal):\n 1. iconf (shp s') e'", "by(cases s, cases s', simp) (blast intro:red_preserves_iconf)"], ["proof (state)\nthis:\n  iconf (shp s') e'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma Reds_preserves_iconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]* \\<langle>es',s',b'\\<rangle>\"\nshows \"iconfs (shp s) es \\<Longrightarrow> iconfs (shp s') es'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iconfs (shp s) es \\<Longrightarrow> iconfs (shp s') es'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. iconfs (shp s) es \\<Longrightarrow> iconfs (shp s') es'", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. iconfs (shp s) es \\<Longrightarrow> iconfs (shp s') es'", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. iconfs (shp s') es' \\<Longrightarrow> iconfs (shp s') es'\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        iconfs (shp ac) ab \\<Longrightarrow> iconfs (shp s') es';\n        iconfs (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconfs (shp s') es'", "case refl"], ["proof (state)\nthis:\n  iconfs (shp s') es'\n\ngoal (2 subgoals):\n 1. iconfs (shp s') es' \\<Longrightarrow> iconfs (shp s') es'\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        iconfs (shp ac) ab \\<Longrightarrow> iconfs (shp s') es';\n        iconfs (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconfs (shp s') es'", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. iconfs (shp s') es'", "by fact"], ["proof (state)\nthis:\n  iconfs (shp s') es'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        iconfs (shp ac) ab \\<Longrightarrow> iconfs (shp s') es';\n        iconfs (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconfs (shp s') es'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        iconfs (shp ac) ab \\<Longrightarrow> iconfs (shp s') es';\n        iconfs (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconfs (shp s') es'", "case (step e s b e' s' b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  iconfs (shp s') e' \\<Longrightarrow> iconfs (shp s') es'\n  iconfs (shp s) e\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        iconfs (shp ac) ab \\<Longrightarrow> iconfs (shp s') es';\n        iconfs (shp aa) a\\<rbrakk>\n       \\<Longrightarrow> iconfs (shp s') es'", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  iconfs (shp s') e' \\<Longrightarrow> iconfs (shp s') es'\n  iconfs (shp s) e\n\ngoal (1 subgoal):\n 1. iconfs (shp s') es'", "using wf step"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  iconfs (shp s') e' \\<Longrightarrow> iconfs (shp s') es'\n  iconfs (shp s) e\n  wwf_J_prog P\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  iconfs (shp s') e' \\<Longrightarrow> iconfs (shp s') es'\n  iconfs (shp s) e\n\ngoal (1 subgoal):\n 1. iconfs (shp s') es'", "by(cases s, cases s', simp) (blast intro:reds_preserves_iconf)"], ["proof (state)\nthis:\n  iconfs (shp s') es'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma Red_preserves_bconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"iconf (shp s) e \\<Longrightarrow> P,(shp s) \\<turnstile>\\<^sub>b (e,b) \\<surd> \\<Longrightarrow> P,(shp s') \\<turnstile>\\<^sub>b (e'::expr,b') \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iconf (shp s) e;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iconf (shp s) e;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>iconf (shp s) e;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>iconf (shp s') e';\n     P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "case refl"], ["proof (state)\nthis:\n  iconf (shp s') e'\n  P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>iconf (shp s') e';\n     P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "case (step e s1 b e' s2 b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>", "have \"iconf (shp s2) e'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>\n\ngoal (1 subgoal):\n 1. iconf (shp s2) e'", "using step red_preserves_iconf[OF wf]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>\n  \\<lbrakk>P \\<turnstile> \\<langle>?e,(?h, ?l, ?sh),\n                           ?b\\<rangle> \\<rightarrow>\n                          \\<langle>?e',(?h', ?l', ?sh'),?b'\\<rangle>;\n   iconf ?sh ?e\\<rbrakk>\n  \\<Longrightarrow> iconf ?sh' ?e'\n\ngoal (1 subgoal):\n 1. iconf (shp s2) e'", "by(cases s1, cases s2) auto"], ["proof (state)\nthis:\n  iconf (shp s2) e'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<lbrakk>iconf (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>;\n        iconf (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "thus ?case"], ["proof (prove)\nusing this:\n  iconf (shp s2) e'\n\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "using step"], ["proof (prove)\nusing this:\n  iconf (shp s2) e'\n  P \\<turnstile> \\<langle>e,s1,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s2,b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>iconf (shp s2) e';\n   P,shp s2 \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n  iconf (shp s1) e\n  P,shp s1 \\<turnstile>\\<^sub>b (e,b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>", "by(cases s1, cases s2, simp) (blast intro:red_preserves_bconf)"], ["proof (state)\nthis:\n  P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma Reds_preserves_bconf:\nassumes wf: \"wwf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]* \\<langle>es',s',b'\\<rangle>\"\nshows \"iconfs (shp s) es \\<Longrightarrow> P,(shp s) \\<turnstile>\\<^sub>b (es,b) \\<surd> \\<Longrightarrow> P,(shp s') \\<turnstile>\\<^sub>b (es'::expr list,b') \\<surd>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iconfs (shp s) es;\n     P,shp s \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>iconfs (shp s) es;\n     P,shp s \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es,s,b\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>iconfs (shp s) es;\n     P,shp s \\<turnstile>\\<^sub>b (es,b) \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>iconfs (shp s') es';\n     P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "case refl"], ["proof (state)\nthis:\n  iconfs (shp s') es'\n  P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n\ngoal (2 subgoals):\n 1. \\<lbrakk>iconfs (shp s') es';\n     P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n    \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "by fact"], ["proof (state)\nthis:\n  P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "case (step es s1 b es' s2 b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "then"], ["proof (chain)\npicking this:\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>", "have \"iconfs (shp s2) es'\""], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>\n\ngoal (1 subgoal):\n 1. iconfs (shp s2) es'", "using step reds_preserves_iconf[OF wf]"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>\n  \\<lbrakk>P \\<turnstile> \\<langle>?es,(?h, ?l, ?sh),\n                           ?b\\<rangle> [\\<rightarrow>]\n                          \\<langle>?es',(?h', ?l', ?sh'),?b'\\<rangle>;\n   iconfs ?sh ?es\\<rbrakk>\n  \\<Longrightarrow> iconfs ?sh' ?es'\n\ngoal (1 subgoal):\n 1. iconfs (shp s2) es'", "by(cases s1, cases s2) auto"], ["proof (state)\nthis:\n  iconfs (shp s2) es'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> [\\<rightarrow>]\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> [\\<rightarrow>]*\n                       \\<langle>es',s',b'\\<rangle>;\n        \\<lbrakk>iconfs (shp ac) ab;\n         P,shp ac \\<turnstile>\\<^sub>b (ab,ba) \\<surd>\\<rbrakk>\n        \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>;\n        iconfs (shp aa) a;\n        P,shp aa \\<turnstile>\\<^sub>b (a,b) \\<surd>\\<rbrakk>\n       \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "thus ?case"], ["proof (prove)\nusing this:\n  iconfs (shp s2) es'\n\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "using step"], ["proof (prove)\nusing this:\n  iconfs (shp s2) es'\n  P \\<turnstile> \\<langle>es,s1,b\\<rangle> [\\<rightarrow>]\n                 \\<langle>es',s2,b'\\<rangle>\n  P \\<turnstile> \\<langle>es',s2,b'\\<rangle> [\\<rightarrow>]*\n                 \\<langle>es',s',b'\\<rangle>\n  \\<lbrakk>iconfs (shp s2) es';\n   P,shp s2 \\<turnstile>\\<^sub>b (es',b') \\<surd>\\<rbrakk>\n  \\<Longrightarrow> P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n  iconfs (shp s1) es\n  P,shp s1 \\<turnstile>\\<^sub>b (es,b) \\<surd>\n\ngoal (1 subgoal):\n 1. P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>", "by(cases s1, cases s2, simp) (blast intro:reds_preserves_bconf)"], ["proof (state)\nthis:\n  P,shp s' \\<turnstile>\\<^sub>b (es',b') \\<surd>\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "lemma Red_preserves_defass:\nassumes wf: \"wf_J_prog P\" and reds: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<D> e \\<lfloor>dom(lcl s)\\<rfloor> \\<Longrightarrow> \\<D> e' \\<lfloor>dom(lcl s')\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<D> e \\<lfloor>dom (lcl s)\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "using reds"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<D> e \\<lfloor>dom (lcl s)\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<D> ab \\<lfloor>dom (lcl ac)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl aa)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "case refl"], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (2 subgoals):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n    \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n 2. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<D> ab \\<lfloor>dom (lcl ac)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl aa)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "thus ?case"], ["proof (prove)\nusing this:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "."], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<D> ab \\<lfloor>dom (lcl ac)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl aa)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<D> ab \\<lfloor>dom (lcl ac)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl aa)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "case (step e s b e' s' b')"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<D> ab \\<lfloor>dom (lcl ac)\\<rfloor> \\<Longrightarrow>\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        \\<D> a \\<lfloor>dom (lcl aa)\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                 \\<langle>e',s',b'\\<rangle>\n  P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor> \\<Longrightarrow>\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n  \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>\n\ngoal (1 subgoal):\n 1. \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>", "by(cases s,cases s')(auto dest:red_preserves_defass[OF wf])"], ["proof (state)\nthis:\n  \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Red_preserves_type:\nassumes wf: \"wf_J_prog P\" and Red: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"!!T. \\<lbrakk> P,E \\<turnstile> s\\<surd>; iconf (shp s) e; P,E,hp s,shp s \\<turnstile> e:T \\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'. P \\<turnstile> T' \\<le> T \\<and> P,E,hp s',shp s' \\<turnstile> e':T'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>; iconf (shp s) e;\n        P,E,hp s,shp s \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>; iconf (shp s) e;\n        P,E,hp s,shp s \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "using Red"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s \\<surd>; iconf (shp s) e;\n        P,E,hp s,shp s \\<turnstile> e : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>; iconf (shp s') e';\n        P,E,hp s',shp s' \\<turnstile> e' : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ac \\<surd>; iconf (shp ac) ab;\n            P,E,hp ac,shp ac \\<turnstile> ab : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P \\<turnstile> T' \\<le> T \\<and>\n                                P,E,hp s',shp s' \\<turnstile> e' : T';\n        P,E \\<turnstile> aa \\<surd>; iconf (shp aa) a;\n        P,E,hp aa,shp aa \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "case refl"], ["proof (state)\nthis:\n  P,E \\<turnstile> s' \\<surd>\n  iconf (shp s') e'\n  P,E,hp s',shp s' \\<turnstile> e' : T\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       \\<lbrakk>P,E \\<turnstile> s' \\<surd>; iconf (shp s') e';\n        P,E,hp s',shp s' \\<turnstile> e' : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ac \\<surd>; iconf (shp ac) ab;\n            P,E,hp ac,shp ac \\<turnstile> ab : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P \\<turnstile> T' \\<le> T \\<and>\n                                P,E,hp s',shp s' \\<turnstile> e' : T';\n        P,E \\<turnstile> aa \\<surd>; iconf (shp aa) a;\n        P,E,hp aa,shp aa \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "thus ?case"], ["proof (prove)\nusing this:\n  P,E \\<turnstile> s' \\<surd>\n  iconf (shp s') e'\n  P,E,hp s',shp s' \\<turnstile> e' : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P \\<turnstile> T' \\<le> T \\<and>\n       P,E,hp s',shp s' \\<turnstile> e' : T'", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P \\<turnstile> T' \\<le> T \\<and> P,E,hp s',shp s' \\<turnstile> e' : T'\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ac \\<surd>; iconf (shp ac) ab;\n            P,E,hp ac,shp ac \\<turnstile> ab : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P \\<turnstile> T' \\<le> T \\<and>\n                                P,E,hp s',shp s' \\<turnstile> e' : T';\n        P,E \\<turnstile> aa \\<surd>; iconf (shp aa) a;\n        P,E,hp aa,shp aa \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ac \\<surd>; iconf (shp ac) ab;\n            P,E,hp ac,shp ac \\<turnstile> ab : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P \\<turnstile> T' \\<le> T \\<and>\n                                P,E,hp s',shp s' \\<turnstile> e' : T';\n        P,E \\<turnstile> aa \\<surd>; iconf (shp aa) a;\n        P,E,hp aa,shp aa \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "case step"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>a___,aa___,ba___\\<rangle> \\<rightarrow>\n                 \\<langle>ab___,a_,b_\\<rangle>\n  P \\<turnstile> \\<langle>ab___,a_,b_\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> a_ \\<surd>; iconf (shp a_) ab___;\n   P,E,hp a_,shp a_ \\<turnstile> ab___ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P \\<turnstile> T' \\<le> ?T \\<and>\n                       P,E,hp s',shp s' \\<turnstile> e' : T'\n  P,E \\<turnstile> aa___ \\<surd>\n  iconf (shp aa___) a___\n  P,E,hp aa___,shp aa___ \\<turnstile> a___ : T\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           \\<lbrakk>P,E \\<turnstile> ac \\<surd>; iconf (shp ac) ab;\n            P,E,hp ac,shp ac \\<turnstile> ab : T\\<rbrakk>\n           \\<Longrightarrow> \\<exists>T'.\n                                P \\<turnstile> T' \\<le> T \\<and>\n                                P,E,hp s',shp s' \\<turnstile> e' : T';\n        P,E \\<turnstile> aa \\<surd>; iconf (shp aa) a;\n        P,E,hp aa,shp aa \\<turnstile> a : T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P \\<turnstile> T' \\<le> T \\<and>\n                            P,E,hp s',shp s' \\<turnstile> e' : T'", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>a___,aa___,ba___\\<rangle> \\<rightarrow>\n                 \\<langle>ab___,a_,b_\\<rangle>\n  P \\<turnstile> \\<langle>ab___,a_,b_\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  \\<lbrakk>P,E \\<turnstile> a_ \\<surd>; iconf (shp a_) ab___;\n   P,E,hp a_,shp a_ \\<turnstile> ab___ : ?T\\<rbrakk>\n  \\<Longrightarrow> \\<exists>T'.\n                       P \\<turnstile> T' \\<le> ?T \\<and>\n                       P,E,hp s',shp s' \\<turnstile> e' : T'\n  P,E \\<turnstile> aa___ \\<surd>\n  iconf (shp aa___) a___\n  P,E,hp aa___,shp aa___ \\<turnstile> a___ : T\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P \\<turnstile> T' \\<le> T \\<and>\n       P,E,hp s',shp s' \\<turnstile> e' : T'", "by(blast intro:widen_trans red_preserves_sconf Red_preserves_iconf[OF wf_prog_wwf_prog[OF wf]]\n             dest:subject_reduction[OF wf])"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P \\<turnstile> T' \\<le> T \\<and> P,E,hp s',shp s' \\<turnstile> e' : T'\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "subsection \"The final polish\""], ["", "text\\<open> The above preservation lemmas are now combined and packed nicely. \\<close>"], ["", "definition wf_config :: \"J_prog \\<Rightarrow> env \\<Rightarrow> state \\<Rightarrow> expr \\<Rightarrow> ty \\<Rightarrow> bool\"   (\"_,_,_ \\<turnstile> _ : _ \\<surd>\"   [51,0,0,0,0]50)\nwhere\n  \"P,E,s \\<turnstile> e:T \\<surd>  \\<equiv>  P,E \\<turnstile> s \\<surd> \\<and> iconf (shp s) e \\<and> P,E,hp s,shp s \\<turnstile> e:T\""], ["", "theorem Subject_reduction: assumes wf: \"wf_J_prog P\"\nshows \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle> \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>\n       \\<Longrightarrow> \\<exists>T'. P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                            \\<langle>e',s',b'\\<rangle>;\n     P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                         P \\<turnstile> T' \\<le> T", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>\n                            \\<langle>e',s',b'\\<rangle>;\n     P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>T'.\n                         P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                         P \\<turnstile> T' \\<le> T", "by(cases s, cases s')\n  (force simp: wf_config_def\n         elim:red_preserves_sconf red_preserves_iconf[OF wf_prog_wwf_prog[OF wf]]\n         dest:subject_reduction[OF wf])"], ["", "(*>*)"], ["", "theorem Subject_reductions:\nassumes wf: \"wf_J_prog P\" and reds: \"P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>\"\nshows \"\\<And>T. P,E,s \\<turnstile> e:T \\<surd> \\<Longrightarrow> \\<exists>T'. P,E,s' \\<turnstile> e':T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n          P \\<turnstile> T' \\<le> T", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T.\n       P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n          P \\<turnstile> T' \\<le> T", "using reds"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<And>T.\n       P,E,s \\<turnstile> e : T \\<surd> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n          P \\<turnstile> T' \\<le> T", "proof (induct rule:converse_rtrancl_induct3)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>T.\n       P,E,s' \\<turnstile> e' : T \\<surd> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n          P \\<turnstile> T' \\<le> T\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           P,E,ac \\<turnstile> ab : T \\<surd> \\<Longrightarrow>\n           \\<exists>T'.\n              P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n              P \\<turnstile> T' \\<le> T;\n        P,E,aa \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                            P \\<turnstile> T' \\<le> T", "case refl"], ["proof (state)\nthis:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (2 subgoals):\n 1. \\<And>T.\n       P,E,s' \\<turnstile> e' : T \\<surd> \\<Longrightarrow>\n       \\<exists>T'.\n          P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n          P \\<turnstile> T' \\<le> T\n 2. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           P,E,ac \\<turnstile> ab : T \\<surd> \\<Longrightarrow>\n           \\<exists>T'.\n              P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n              P \\<turnstile> T' \\<le> T;\n        P,E,aa \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                            P \\<turnstile> T' \\<le> T", "thus ?case"], ["proof (prove)\nusing this:\n  P,E,s' \\<turnstile> e' : T \\<surd>\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T", "by blast"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           P,E,ac \\<turnstile> ab : T \\<surd> \\<Longrightarrow>\n           \\<exists>T'.\n              P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n              P \\<turnstile> T' \\<le> T;\n        P,E,aa \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                            P \\<turnstile> T' \\<le> T", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           P,E,ac \\<turnstile> ab : T \\<surd> \\<Longrightarrow>\n           \\<exists>T'.\n              P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n              P \\<turnstile> T' \\<le> T;\n        P,E,aa \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                            P \\<turnstile> T' \\<le> T", "case step"], ["proof (state)\nthis:\n  P \\<turnstile> \\<langle>a___,aa___,ba___\\<rangle> \\<rightarrow>\n                 \\<langle>ab___,a_,b_\\<rangle>\n  P \\<turnstile> \\<langle>ab___,a_,b_\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  P,E,a_ \\<turnstile> ab___ : ?T \\<surd> \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> ?T\n  P,E,aa___ \\<turnstile> a___ : T \\<surd>\n\ngoal (1 subgoal):\n 1. \\<And>a aa b ab ac ba T.\n       \\<lbrakk>P \\<turnstile> \\<langle>a,aa,b\\<rangle> \\<rightarrow>\n                               \\<langle>ab,ac,ba\\<rangle>;\n        P \\<turnstile> \\<langle>ab,ac,ba\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<And>T.\n           P,E,ac \\<turnstile> ab : T \\<surd> \\<Longrightarrow>\n           \\<exists>T'.\n              P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n              P \\<turnstile> T' \\<le> T;\n        P,E,aa \\<turnstile> a : T \\<surd>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>T'.\n                            P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n                            P \\<turnstile> T' \\<le> T", "thus ?case"], ["proof (prove)\nusing this:\n  P \\<turnstile> \\<langle>a___,aa___,ba___\\<rangle> \\<rightarrow>\n                 \\<langle>ab___,a_,b_\\<rangle>\n  P \\<turnstile> \\<langle>ab___,a_,b_\\<rangle> \\<rightarrow>*\n                 \\<langle>e',s',b'\\<rangle>\n  P,E,a_ \\<turnstile> ab___ : ?T \\<surd> \\<Longrightarrow>\n  \\<exists>T'.\n     P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> ?T\n  P,E,aa___ \\<turnstile> a___ : T \\<surd>\n\ngoal (1 subgoal):\n 1. \\<exists>T'.\n       P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T", "by(blast dest:Subject_reduction[OF wf] intro:widen_trans)"], ["proof (state)\nthis:\n  \\<exists>T'.\n     P,E,s' \\<turnstile> e' : T' \\<surd> \\<and> P \\<turnstile> T' \\<le> T\n\ngoal:\nNo subgoals!", "qed"], ["", "(*>*)"], ["", "corollary Progress: assumes wf: \"wf_J_prog P\"\nshows \"\\<lbrakk> P,E,s  \\<turnstile> e : T \\<surd>; \\<D> e \\<lfloor>dom(lcl s)\\<rfloor>; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>; \\<not> final e \\<rbrakk>\n   \\<Longrightarrow> \\<exists>e' s' b'. P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow> \\<langle>e',s',b'\\<rangle>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,s \\<turnstile> e : T \\<surd>;\n     \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>; \\<not> final e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e' s' b'.\n                         P \\<turnstile> \\<langle>e,s,\n   b\\<rangle> \\<rightarrow>\n  \\<langle>e',s',b'\\<rangle>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,s \\<turnstile> e : T \\<surd>;\n     \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>; \\<not> final e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e' s' b'.\n                         P \\<turnstile> \\<langle>e,s,\n   b\\<rangle> \\<rightarrow>\n  \\<langle>e',s',b'\\<rangle>", "using progress[OF wf_prog_wwf_prog[OF wf]]"], ["proof (prove)\nusing this:\n  \\<lbrakk>P \\<turnstile> ?h \\<surd>; P,?h \\<turnstile>\\<^sub>s ?sh \\<surd>;\n   P,?E,?h,?sh \\<turnstile> ?e : ?T; \\<D> ?e \\<lfloor>dom ?l\\<rfloor>;\n   P,?sh \\<turnstile>\\<^sub>b (?e,?b) \\<surd>; \\<not> final ?e\\<rbrakk>\n  \\<Longrightarrow> \\<exists>e' s' b'.\n                       P \\<turnstile> \\<langle>?e,(?h, ?l, ?sh),\n ?b\\<rangle> \\<rightarrow>\n\\<langle>e',s',b'\\<rangle>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>P,E,s \\<turnstile> e : T \\<surd>;\n     \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>; \\<not> final e\\<rbrakk>\n    \\<Longrightarrow> \\<exists>e' s' b'.\n                         P \\<turnstile> \\<langle>e,s,\n   b\\<rangle> \\<rightarrow>\n  \\<langle>e',s',b'\\<rangle>", "by(cases b) (auto simp:wf_config_def sconf_def)"], ["", "(*>*)"], ["", "corollary TypeSafety:\n  \"\\<lbrakk> wf_J_prog P; P,E \\<turnstile> s \\<surd>; P,E \\<turnstile> e::T; \\<D> e \\<lfloor>dom(lcl s)\\<rfloor>;\n     iconf (shp s) e; P,(shp s) \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>* \\<langle>e',s',b'\\<rangle>; \\<not>(\\<exists>e'' s'' b''. P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow> \\<langle>e'',s'',b''\\<rangle>) \\<rbrakk>\n \\<Longrightarrow> (\\<exists>v. e' = Val v \\<and> P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom(hp s'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(subgoal_tac \"wwf_J_prog P\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))\n 2. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> wwf_J_prog P", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> wwf_J_prog P\n 2. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(rule wf_prog_wwf_prog, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(subgoal_tac \" P,E,s \\<turnstile> e:T \\<surd>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))\n 2. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P\\<rbrakk>\n    \\<Longrightarrow> P,E,s \\<turnstile> e : T \\<surd>\n 2. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(fastforce simp:wf_config_def dest:WT_implies_WTrt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(frule (2) Subject_reductions)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n     P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n     iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n     P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                    \\<langle>e',s',b'\\<rangle>;\n     \\<nexists>e'' s'' b''.\n        P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                       \\<langle>e'',s'',b''\\<rangle>;\n     wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n     \\<exists>T'.\n        P,E,s' \\<turnstile> e' : T' \\<surd> \\<and>\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>v.\n                          e' = Val v \\<and>\n                          P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                      (\\<exists>a. e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(erule exE conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>;\n        P \\<turnstile> T' \\<le> T\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(frule (2) Red_preserves_defass)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(frule (3) Red_preserves_bconf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(subgoal_tac \"final e'\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>; final e'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))\n 2. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n       \\<Longrightarrow> final e'", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>\\<rbrakk>\n       \\<Longrightarrow> final e'\n 2. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>; final e'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply(blast dest: Progress)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>T'.\n       \\<lbrakk>wf_J_prog P; P,E \\<turnstile> s \\<surd>;\n        P,E \\<turnstile> e :: T; \\<D> e \\<lfloor>dom (lcl s)\\<rfloor>;\n        iconf (shp s) e; P,shp s \\<turnstile>\\<^sub>b (e,b) \\<surd>;\n        P \\<turnstile> \\<langle>e,s,b\\<rangle> \\<rightarrow>*\n                       \\<langle>e',s',b'\\<rangle>;\n        \\<nexists>e'' s'' b''.\n           P \\<turnstile> \\<langle>e',s',b'\\<rangle> \\<rightarrow>\n                          \\<langle>e'',s'',b''\\<rangle>;\n        wwf_J_prog P; P,E,s \\<turnstile> e : T \\<surd>;\n        P,E,s' \\<turnstile> e' : T' \\<surd>; P \\<turnstile> T' \\<le> T;\n        \\<D> e' \\<lfloor>dom (lcl s')\\<rfloor>;\n        P,shp s' \\<turnstile>\\<^sub>b (e',b') \\<surd>; final e'\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>v.\n                             e' = Val v \\<and>\n                             P,hp s' \\<turnstile> v :\\<le> T) \\<or>\n                         (\\<exists>a.\n                             e' = Throw a \\<and> a \\<in> dom (hp s'))", "apply (fastforce simp:wf_config_def final_def conf_def dest: Progress)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "end"]]}