{"file_name": "/home/qj213/afp-2021-10-22/thys/JinjaDCI/J/JWellForm.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/JinjaDCI", "problem_names": ["lemma wf_J_mdecl_NonStatic[simp]:\n  \"wf_J_mdecl P C (M,NonStatic,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  \\<not>sub_RI body \\<and>\n  this \\<notin> set pns \\<and>\n  (\\<exists>T'. P,[this\\<mapsto>Class C,pns[\\<mapsto>]Ts] \\<turnstile> body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n  \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>)\"", "lemma wf_J_mdecl_Static[simp]:\n  \"wf_J_mdecl P C (M,Static,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  \\<not>sub_RI body \\<and>\n  (\\<exists>T'. P,[pns[\\<mapsto>]Ts] \\<turnstile> body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n  \\<D> body \\<lfloor>set pns\\<rfloor>)\"", "lemma wf_J_prog_wf_J_mdecl:\n  \"\\<lbrakk> wf_J_prog P; (C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths \\<rbrakk>\n  \\<Longrightarrow> wf_J_mdecl P C jmdcl\"", "lemma wf_mdecl_wwf_mdecl: \"wf_J_mdecl P C Md \\<Longrightarrow> wwf_J_mdecl P C Md\"", "lemma wf_prog_wwf_prog: \"wf_J_prog P \\<Longrightarrow> wwf_J_prog P\""], "translations": [["", "lemma wf_J_mdecl_NonStatic[simp]:\n  \"wf_J_mdecl P C (M,NonStatic,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  \\<not>sub_RI body \\<and>\n  this \\<notin> set pns \\<and>\n  (\\<exists>T'. P,[this\\<mapsto>Class C,pns[\\<mapsto>]Ts] \\<turnstile> body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n  \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C (M, NonStatic, Ts, T, pns, body) \\<equiv>\n    length Ts = length pns \\<and>\n    distinct pns \\<and>\n    \\<not> sub_RI body \\<and>\n    this \\<notin> set pns \\<and>\n    (\\<exists>T'.\n        P,[this \\<mapsto> Class C, pns [\\<mapsto>]\n           Ts] \\<turnstile> body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C (M, NonStatic, Ts, T, pns, body) \\<equiv>\n    length Ts = length pns \\<and>\n    distinct pns \\<and>\n    \\<not> sub_RI body \\<and>\n    this \\<notin> set pns \\<and>\n    (\\<exists>T'.\n        P,[this \\<mapsto> Class C, pns [\\<mapsto>]\n           Ts] \\<turnstile> body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>{this} \\<union> set pns\\<rfloor>", "by(simp add:wf_J_mdecl_def)"], ["", "(*>*)"], ["", "lemma wf_J_mdecl_Static[simp]:\n  \"wf_J_mdecl P C (M,Static,Ts,T,pns,body) \\<equiv>\n  (length Ts = length pns \\<and>\n  distinct pns \\<and>\n  \\<not>sub_RI body \\<and>\n  (\\<exists>T'. P,[pns[\\<mapsto>]Ts] \\<turnstile> body :: T' \\<and> P \\<turnstile> T' \\<le> T) \\<and>\n  \\<D> body \\<lfloor>set pns\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C (M, Static, Ts, T, pns, body) \\<equiv>\n    length Ts = length pns \\<and>\n    distinct pns \\<and>\n    \\<not> sub_RI body \\<and>\n    (\\<exists>T'.\n        P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>set pns\\<rfloor>", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C (M, Static, Ts, T, pns, body) \\<equiv>\n    length Ts = length pns \\<and>\n    distinct pns \\<and>\n    \\<not> sub_RI body \\<and>\n    (\\<exists>T'.\n        P,[pns [\\<mapsto>] Ts] \\<turnstile> body :: T' \\<and>\n        P \\<turnstile> T' \\<le> T) \\<and>\n    \\<D> body \\<lfloor>set pns\\<rfloor>", "by(simp add:wf_J_mdecl_def)"], ["", "(*>*)"], ["", "abbreviation\n  wf_J_prog :: \"J_prog \\<Rightarrow> bool\" where\n  \"wf_J_prog == wf_prog wf_J_mdecl\""], ["", "lemma wf_J_prog_wf_J_mdecl:\n  \"\\<lbrakk> wf_J_prog P; (C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths \\<rbrakk>\n  \\<Longrightarrow> wf_J_mdecl P C jmdcl\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; (C, D, fds, mths) \\<in> set P;\n     jmdcl \\<in> set mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_J_prog P; (C, D, fds, mths) \\<in> set P;\n     jmdcl \\<in> set mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (simp add: wf_prog_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_syscls P \\<and>\n             (\\<forall>c\\<in>set P. wf_cdecl wf_J_mdecl P c) \\<and>\n             distinct_fst P;\n     (C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (simp add: wf_cdecl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wf_syscls P \\<and>\n             (\\<forall>c\\<in>set P.\n                 case c of\n                 (C, D, fs, ms) \\<Rightarrow>\n                   (\\<forall>f\\<in>set fs. wf_fdecl P f) \\<and>\n                   distinct_fst fs \\<and>\n                   (\\<forall>m\\<in>set ms. wf_mdecl wf_J_mdecl P C m) \\<and>\n                   distinct_fst ms \\<and>\n                   (C \\<noteq> Object \\<longrightarrow>\n                    is_class P D \\<and>\n                    (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n                    (\\<forall>x\\<in>set ms.\n                        case x of\n                        (M, b, Ts, T, m) \\<Rightarrow>\n                          \\<forall>D' b' Ts' T'.\n                             (\\<exists>a b.\n                                 P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n          b) in D') \\<longrightarrow>\n                             b = b' \\<and>\n                             P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n                             P \\<turnstile> T \\<le> T')) \\<and>\n                   wf_clinit ms) \\<and>\n             distinct_fst P;\n     (C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths;\n     wf_syscls P;\n     \\<forall>c\\<in>set P.\n        case c of\n        (C, D, fs, ms) \\<Rightarrow>\n          (\\<forall>f\\<in>set fs. wf_fdecl P f) \\<and>\n          distinct_fst fs \\<and>\n          (\\<forall>m\\<in>set ms. wf_mdecl wf_J_mdecl P C m) \\<and>\n          distinct_fst ms \\<and>\n          (C \\<noteq> Object \\<longrightarrow>\n           is_class P D \\<and>\n           (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n           (\\<forall>x\\<in>set ms.\n               case x of\n               (M, b, Ts, T, m) \\<Rightarrow>\n                 \\<forall>D' b' Ts' T'.\n                    (\\<exists>a b.\n                        P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n b) in D') \\<longrightarrow>\n                    b = b' \\<and>\n                    P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n                    P \\<turnstile> T \\<le> T')) \\<and>\n          wf_clinit ms;\n     distinct_fst P\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths;\n     wf_syscls P; distinct_fst P;\n     case (C, D, fds, mths) of\n     (C, D, fs, ms) \\<Rightarrow>\n       (\\<forall>f\\<in>set fs. wf_fdecl P f) \\<and>\n       distinct_fst fs \\<and>\n       (\\<forall>m\\<in>set ms. wf_mdecl wf_J_mdecl P C m) \\<and>\n       distinct_fst ms \\<and>\n       (C \\<noteq> Object \\<longrightarrow>\n        is_class P D \\<and>\n        (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n        (\\<forall>x\\<in>set ms.\n            case x of\n            (M, b, Ts, T, m) \\<Rightarrow>\n              \\<forall>D' b' Ts' T'.\n                 (\\<exists>a b.\n                     P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n                                    b) in D') \\<longrightarrow>\n                 b = b' \\<and>\n                 P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n                 P \\<turnstile> T \\<le> T')) \\<and>\n       wf_clinit ms\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths;\n     wf_syscls P; distinct_fst P;\n     (\\<forall>x\\<in>set fds. wf_fdecl P x) \\<and>\n     distinct_fst fds \\<and>\n     (\\<forall>x\\<in>set mths. wf_mdecl wf_J_mdecl P C x) \\<and>\n     distinct_fst mths \\<and>\n     (C \\<noteq> Object \\<longrightarrow>\n      is_class P D \\<and>\n      (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n      (\\<forall>x\\<in>set mths.\n          case x of\n          (M, b, Ts, T, m) \\<Rightarrow>\n            \\<forall>D' b' Ts' T'.\n               (\\<exists>a b.\n                   P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n                                  b) in D') \\<longrightarrow>\n               b = b' \\<and>\n               P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n               P \\<turnstile> T \\<le> T')) \\<and>\n     wf_clinit mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (erule conjE)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths;\n     wf_syscls P; distinct_fst P; \\<forall>x\\<in>set fds. wf_fdecl P x;\n     distinct_fst fds; \\<forall>x\\<in>set mths. wf_mdecl wf_J_mdecl P C x;\n     distinct_fst mths;\n     C \\<noteq> Object \\<longrightarrow>\n     is_class P D \\<and>\n     (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n     (\\<forall>x\\<in>set mths.\n         case x of\n         (M, b, Ts, T, m) \\<Rightarrow>\n           \\<forall>D' b' Ts' T'.\n              (\\<exists>a b.\n                  P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n                                 b) in D') \\<longrightarrow>\n              b = b' \\<and>\n              P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n              P \\<turnstile> T \\<le> T');\n     wf_clinit mths\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (drule bspec, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(C, D, fds, mths) \\<in> set P; jmdcl \\<in> set mths;\n     wf_syscls P; distinct_fst P; \\<forall>x\\<in>set fds. wf_fdecl P x;\n     distinct_fst fds; distinct_fst mths;\n     C \\<noteq> Object \\<longrightarrow>\n     is_class P D \\<and>\n     (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n     (\\<forall>x\\<in>set mths.\n         case x of\n         (M, b, Ts, T, m) \\<Rightarrow>\n           \\<forall>D' b' Ts' T'.\n              (\\<exists>a b.\n                  P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n                                 b) in D') \\<longrightarrow>\n              b = b' \\<and>\n              P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n              P \\<turnstile> T \\<le> T');\n     wf_clinit mths; wf_mdecl wf_J_mdecl P C jmdcl\\<rbrakk>\n    \\<Longrightarrow> wf_J_mdecl P C jmdcl", "apply (simp add: wf_mdecl_def split_beta)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "lemma wf_mdecl_wwf_mdecl: \"wf_J_mdecl P C Md \\<Longrightarrow> wwf_J_mdecl P C Md\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C Md \\<Longrightarrow> wwf_J_mdecl P C Md", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_mdecl P C Md \\<Longrightarrow> wwf_J_mdecl P C Md", "apply(clarsimp simp:wwf_J_mdecl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M a aa ab ac b.\n       \\<lbrakk>wf_J_mdecl P C (M, a, aa, ab, ac, b);\n        Md = (M, a, aa, ab, ac, b)\\<rbrakk>\n       \\<Longrightarrow> length aa = length ac \\<and>\n                         distinct ac \\<and>\n                         \\<not> sub_RI b \\<and>\n                         (case a of\n                          Static \\<Rightarrow> fv b \\<subseteq> set ac\n                          | NonStatic \\<Rightarrow>\n                              this \\<notin> set ac \\<and>\n                              fv b \\<subseteq> {this} \\<union> set ac)", "apply(rename_tac M b Ts T pns body)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M b Ts T pns body.\n       \\<lbrakk>wf_J_mdecl P C (M, b, Ts, T, pns, body);\n        Md = (M, b, Ts, T, pns, body)\\<rbrakk>\n       \\<Longrightarrow> length Ts = length pns \\<and>\n                         distinct pns \\<and>\n                         \\<not> sub_RI body \\<and>\n                         (case b of\n                          Static \\<Rightarrow> fv body \\<subseteq> set pns\n                          | NonStatic \\<Rightarrow>\n                              this \\<notin> set pns \\<and>\n                              fv body \\<subseteq> {this} \\<union> set pns)", "apply (case_tac b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M b Ts T pns body.\n       \\<lbrakk>wf_J_mdecl P C (M, b, Ts, T, pns, body);\n        Md = (M, b, Ts, T, pns, body); b = Static\\<rbrakk>\n       \\<Longrightarrow> length Ts = length pns \\<and>\n                         distinct pns \\<and>\n                         \\<not> sub_RI body \\<and>\n                         (case b of\n                          Static \\<Rightarrow> fv body \\<subseteq> set pns\n                          | NonStatic \\<Rightarrow>\n                              this \\<notin> set pns \\<and>\n                              fv body \\<subseteq> {this} \\<union> set pns)\n 2. \\<And>M b Ts T pns body.\n       \\<lbrakk>wf_J_mdecl P C (M, b, Ts, T, pns, body);\n        Md = (M, b, Ts, T, pns, body); b = NonStatic\\<rbrakk>\n       \\<Longrightarrow> length Ts = length pns \\<and>\n                         distinct pns \\<and>\n                         \\<not> sub_RI body \\<and>\n                         (case b of\n                          Static \\<Rightarrow> fv body \\<subseteq> set pns\n                          | NonStatic \\<Rightarrow>\n                              this \\<notin> set pns \\<and>\n                              fv body \\<subseteq> {this} \\<union> set pns)", "by (fastforce dest!:WT_fv)+"], ["", "(*>*)"], ["", "lemma wf_prog_wwf_prog: \"wf_J_prog P \\<Longrightarrow> wwf_J_prog P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_prog P \\<Longrightarrow> wwf_J_prog P", "(*<*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_J_prog P \\<Longrightarrow> wwf_J_prog P", "apply(simp add:wf_prog_def wf_cdecl_def wf_mdecl_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. wf_syscls P \\<and>\n    (\\<forall>c\\<in>set P.\n        case c of\n        (C, D, fs, ms) \\<Rightarrow>\n          (\\<forall>f\\<in>set fs. wf_fdecl P f) \\<and>\n          distinct_fst fs \\<and>\n          (\\<forall>m\\<in>set ms.\n              case m of\n              (M, b, Ts, ab) \\<Rightarrow>\n                Ball (set Ts) (is_type P) \\<and>\n                (case ab of\n                 (T, m) \\<Rightarrow>\n                   is_type P T \\<and>\n                   wf_J_mdecl P C (M, b, Ts, T, m))) \\<and>\n          distinct_fst ms \\<and>\n          (C \\<noteq> Object \\<longrightarrow>\n           is_class P D \\<and>\n           (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n           (\\<forall>x\\<in>set ms.\n               case x of\n               (M, b, Ts, T, m) \\<Rightarrow>\n                 \\<forall>D' b' Ts' T'.\n                    (\\<exists>a b.\n                        P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n b) in D') \\<longrightarrow>\n                    b = b' \\<and>\n                    P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n                    P \\<turnstile> T \\<le> T')) \\<and>\n          wf_clinit ms) \\<and>\n    distinct_fst P \\<Longrightarrow>\n    \\<forall>(C, D, fs, ms)\\<in>set P.\n       Ball (set fs) (wf_fdecl P) \\<and>\n       distinct_fst fs \\<and>\n       (\\<forall>(M, b, Ts, ab)\\<in>set ms.\n           Ball (set Ts) (is_type P) \\<and>\n           (case ab of\n            (T, m) \\<Rightarrow>\n              is_type P T \\<and> wwf_J_mdecl P C (M, b, Ts, T, m))) \\<and>\n       distinct_fst ms \\<and>\n       (C \\<noteq> Object \\<longrightarrow>\n        is_class P D \\<and>\n        (D, C) \\<notin> (subcls1 P)\\<^sup>* \\<and>\n        (\\<forall>(M, b, Ts, T, m)\\<in>set ms.\n            \\<forall>D' b' Ts' T'.\n               (\\<exists>a b.\n                   P \\<turnstile> D sees M, b' :  Ts'\\<rightarrow>T' = (a,\n                                  b) in D') \\<longrightarrow>\n               b = b' \\<and>\n               P \\<turnstile> Ts' [\\<le>] Ts \\<and>\n               P \\<turnstile> T \\<le> T')) \\<and>\n       wf_clinit ms", "apply(fast intro:wf_mdecl_wwf_mdecl)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(*>*)"], ["", "end"]]}