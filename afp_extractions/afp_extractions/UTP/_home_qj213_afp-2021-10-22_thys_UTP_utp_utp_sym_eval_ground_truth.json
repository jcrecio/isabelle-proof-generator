{"file_name": "/home/qj213/afp-2021-10-22/thys/UTP/utp/utp_sym_eval.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UTP", "problem_names": ["lemma seq_symeval [symeval]: \"\\<Gamma> \\<Turnstile> P ;; Q = (\\<Gamma> \\<Turnstile> P) ;; Q\"", "lemma assigns_symeval [symeval]: \"\\<Gamma> \\<Turnstile> \\<langle>\\<sigma>\\<rangle>\\<^sub>a = (\\<sigma> \\<circ> \\<Gamma>) \\<Turnstile> II\"", "lemma term_symeval [symeval]: \"(\\<Gamma> \\<Turnstile> II) ;; P = \\<Gamma> \\<Turnstile> P\"", "lemma if_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) = \\<Gamma> \\<Turnstile> P\"", "lemma if_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) = \\<Gamma> \\<Turnstile> Q\"", "lemma while_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b do P od = \\<Gamma> \\<Turnstile> (P ;; while b do P od)\"", "lemma while_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b do P od = \\<Gamma> \\<Turnstile> II\"", "lemma while_inv_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b invr S do P od = \\<Gamma> \\<Turnstile> (P ;; while b do P od)\"", "lemma while_inv_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b invr S do P od = \\<Gamma> \\<Turnstile> II\""], "translations": [["", "lemma seq_symeval [symeval]: \"\\<Gamma> \\<Turnstile> P ;; Q = (\\<Gamma> \\<Turnstile> P) ;; Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Turnstile> P ;; Q = (\\<Gamma> \\<Turnstile> P) ;; Q", "by (rel_auto)"], ["", "lemma assigns_symeval [symeval]: \"\\<Gamma> \\<Turnstile> \\<langle>\\<sigma>\\<rangle>\\<^sub>a = (\\<sigma> \\<circ> \\<Gamma>) \\<Turnstile> II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<Turnstile> \\<langle>\\<sigma>\\<rangle>\\<^sub>a =\n    (\\<sigma> \\<circ> \\<Gamma>) \\<Turnstile> II", "by (rel_auto)"], ["", "lemma term_symeval [symeval]: \"(\\<Gamma> \\<Turnstile> II) ;; P = \\<Gamma> \\<Turnstile> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Gamma> \\<Turnstile> II) ;; P = \\<Gamma> \\<Turnstile> P", "by (rel_auto)"], ["", "lemma if_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) = \\<Gamma> \\<Turnstile> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = true \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) =\n    \\<Gamma> \\<Turnstile> P", "by (simp add: utp_sym_eval_def usubst assigns_r_comp)"], ["", "lemma if_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) = \\<Gamma> \\<Turnstile> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = false \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> (P \\<triangleleft> b \\<triangleright>\\<^sub>r Q) =\n    \\<Gamma> \\<Turnstile> Q", "by (simp add: utp_sym_eval_def usubst assigns_r_comp)"], ["", "lemma while_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b do P od = \\<Gamma> \\<Turnstile> (P ;; while b do P od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = true \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> while\\<^sup>\\<top> b do P od =\n    \\<Gamma> \\<Turnstile> P ;; while\\<^sup>\\<top> b do P od", "by (subst while_unfold, simp add: symeval)"], ["", "lemma while_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b do P od = \\<Gamma> \\<Turnstile> II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = false \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> while\\<^sup>\\<top> b do P od =\n    \\<Gamma> \\<Turnstile> II", "by (subst while_unfold, simp add: symeval)"], ["", "lemma while_inv_true_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = true \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b invr S do P od = \\<Gamma> \\<Turnstile> (P ;; while b do P od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = true \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> while b invr S do P od =\n    \\<Gamma> \\<Turnstile> P ;; while\\<^sup>\\<top> b do P od", "by (metis while_inv_def while_true_symeval)"], ["", "lemma while_inv_false_symeval [symeval]: \"\\<lbrakk> \\<Gamma> \\<dagger> b = false \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<Turnstile> while b invr S do P od = \\<Gamma> \\<Turnstile> II\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<dagger> b = false \\<Longrightarrow>\n    \\<Gamma> \\<Turnstile> while b invr S do P od = \\<Gamma> \\<Turnstile> II", "by (metis while_false_symeval while_inv_def)"], ["", "method sym_eval = (simp add: symeval usubst lit_simps[THEN sym]), (simp del: One_nat_def add: One_nat_def[THEN sym])?"], ["", "syntax\n  \"_terminated\" :: \"logic \\<Rightarrow> logic\" (\"terminated: _\" [999] 999)"], ["", "translations\n  \"terminated: \\<Gamma>\" == \"\\<Gamma> \\<Turnstile> II\""], ["", "end"]]}