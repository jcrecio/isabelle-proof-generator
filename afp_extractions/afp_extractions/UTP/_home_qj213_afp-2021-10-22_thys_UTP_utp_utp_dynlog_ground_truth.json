{"file_name": "/home/qj213/afp-2021-10-22/thys/UTP/utp/utp_dynlog.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UTP", "problem_names": ["lemma dBox_false [dynlog_simp]: \"\\<^bold>[false\\<^bold>]\\<Phi> = true\"", "lemma dBox_skip [dynlog_simp]: \"\\<^bold>[II\\<^bold>]\\<Phi> = \\<Phi>\"", "lemma dBox_assigns [dynlog_simp]: \"\\<^bold>[\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>]\\<Phi> = (\\<sigma> \\<dagger> \\<Phi>)\"", "lemma dBox_choice [dynlog_simp]: \"\\<^bold>[P \\<sqinter> Q\\<^bold>]\\<Phi> = (\\<^bold>[P\\<^bold>]\\<Phi> \\<and> \\<^bold>[Q\\<^bold>]\\<Phi>)\"", "lemma dBox_seq: \"\\<^bold>[P ;; Q\\<^bold>]\\<Phi> = \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>\"", "lemma dBox_star_unfold: \"\\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi> = (\\<Phi> \\<and> \\<^bold>[P\\<^bold>]\\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>)\"", "lemma dBox_star_induct: \"`(\\<Phi> \\<and> \\<^bold>[P\\<^sup>\\<star>\\<^bold>](\\<Phi> \\<Rightarrow> \\<^bold>[P\\<^bold>]\\<Phi>)) \\<Rightarrow> \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>`\"", "lemma dBox_test: \"\\<^bold>[?[p]\\<^bold>]\\<Phi> = (p \\<Rightarrow> \\<Phi>)\"", "lemma dDia_false [dynlog_simp]: \"\\<^bold><false\\<^bold>>\\<Phi> = false\"", "lemma dDia_skip [dynlog_simp]: \"\\<^bold><II\\<^bold>>\\<Phi> = \\<Phi>\"", "lemma dDia_assigns [dynlog_simp]: \"\\<^bold><\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>>\\<Phi> = (\\<sigma> \\<dagger> \\<Phi>)\"", "lemma dDia_choice: \"\\<^bold><P \\<sqinter> Q\\<^bold>>\\<Phi> = (\\<^bold><P\\<^bold>>\\<Phi> \\<or> \\<^bold><Q\\<^bold>>\\<Phi>)\"", "lemma dDia_seq: \"\\<^bold><P ;; Q\\<^bold>>\\<Phi> = \\<^bold><P\\<^bold>>\\<^bold><Q\\<^bold>>\\<Phi>\"", "lemma dDia_test: \"\\<^bold><?[p]\\<^bold>>\\<Phi> = (p \\<and> \\<Phi>)\"", "lemma sBoxSeq [dynlog_simp]: \"\\<Gamma> \\<tturnstile> \\<^bold>[P ;; Q\\<^bold>]\\<Phi> \\<equiv> \\<Gamma> \\<tturnstile> \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>\"", "lemma sBoxTest [dynlog_intro]: \"\\<Gamma> \\<tturnstile> (b \\<Rightarrow> \\<Psi>) \\<Longrightarrow> \\<Gamma> \\<tturnstile> \\<^bold>[?[b]\\<^bold>]\\<Psi>\"", "lemma sBoxAssignFwd [dynlog_simp]: \"\\<lbrakk> vwb_lens x; x \\<sharp> v; x \\<sharp> \\<Gamma> \\<rbrakk> \\<Longrightarrow> (\\<Gamma> \\<tturnstile> \\<^bold>[x := v\\<^bold>]\\<Phi>) = ((&x =\\<^sub>u v \\<and> \\<Gamma>) \\<tturnstile> \\<Phi>)\"", "lemma sBoxIndStar: \"\\<tturnstile> [\\<Phi> \\<Rightarrow> \\<^bold>[P\\<^bold>]\\<Phi>]\\<^sub>u \\<Longrightarrow> \\<Phi> \\<tturnstile> \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>\"", "lemma hoare_as_dynlog: \"\\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u = (p \\<tturnstile> \\<^bold>[Q\\<^bold>]r)\""], "translations": [["", "lemma dBox_false [dynlog_simp]: \"\\<^bold>[false\\<^bold>]\\<Phi> = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[false\\<^bold>]\\<Phi> = true", "by (rel_auto)"], ["", "lemma dBox_skip [dynlog_simp]: \"\\<^bold>[II\\<^bold>]\\<Phi> = \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[II\\<^bold>]\\<Phi> = \\<Phi>", "by (rel_auto)"], ["", "lemma dBox_assigns [dynlog_simp]: \"\\<^bold>[\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>]\\<Phi> = (\\<sigma> \\<dagger> \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>]\\<Phi> =\n    \\<sigma> \\<dagger> \\<Phi>", "by (simp add: dBox_def wp_assigns_r)"], ["", "lemma dBox_choice [dynlog_simp]: \"\\<^bold>[P \\<sqinter> Q\\<^bold>]\\<Phi> = (\\<^bold>[P\\<^bold>]\\<Phi> \\<and> \\<^bold>[Q\\<^bold>]\\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[P \\<sqinter> Q\\<^bold>]\\<Phi> =\n    (\\<^bold>[P\\<^bold>]\\<Phi> \\<and> \\<^bold>[Q\\<^bold>]\\<Phi>)", "by (rel_auto)"], ["", "lemma dBox_seq: \"\\<^bold>[P ;; Q\\<^bold>]\\<Phi> = \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[P ;; Q\\<^bold>]\\<Phi> =\n    \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>", "by (simp add: dBox_def wp_seq_r)"], ["", "lemma dBox_star_unfold: \"\\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi> = (\\<Phi> \\<and> \\<^bold>[P\\<^bold>]\\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi> =\n    (\\<Phi> \\<and>\n     \\<^bold>[P\\<^bold>]\\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>)", "by (metis dBox_choice dBox_seq dBox_skip ustar_unfoldl)"], ["", "lemma dBox_star_induct: \"`(\\<Phi> \\<and> \\<^bold>[P\\<^sup>\\<star>\\<^bold>](\\<Phi> \\<Rightarrow> \\<^bold>[P\\<^bold>]\\<Phi>)) \\<Rightarrow> \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>`\""], ["proof (prove)\ngoal (1 subgoal):\n 1. `\\<Phi> \\<and>\n     \\<^bold>[P\\<^sup>\\<star>\\<^bold>](\\<Phi> \\<Rightarrow>\n \\<^bold>[P\\<^bold>]\\<Phi>) \\<Rightarrow>\n     \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>`", "by (rel_simp, metis (mono_tags, lifting) mem_Collect_eq rtrancl_induct)"], ["", "lemma dBox_test: \"\\<^bold>[?[p]\\<^bold>]\\<Phi> = (p \\<Rightarrow> \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold>[?[p]\\<^bold>]\\<Phi> = (p \\<Rightarrow> \\<Phi>)", "by (rel_auto)"], ["", "subsection \\<open> Diamond Laws \\<close>"], ["", "lemma dDia_false [dynlog_simp]: \"\\<^bold><false\\<^bold>>\\<Phi> = false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><false\\<^bold>>\\<Phi> = false", "by (simp add: dBox_false dDia_def)"], ["", "lemma dDia_skip [dynlog_simp]: \"\\<^bold><II\\<^bold>>\\<Phi> = \\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><II\\<^bold>>\\<Phi> = \\<Phi>", "by (simp add: dBox_skip dDia_def)"], ["", "lemma dDia_assigns [dynlog_simp]: \"\\<^bold><\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>>\\<Phi> = (\\<sigma> \\<dagger> \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<^bold>>\\<Phi> =\n    \\<sigma> \\<dagger> \\<Phi>", "by (simp add: dBox_assigns dDia_def subst_not)"], ["", "lemma dDia_choice: \"\\<^bold><P \\<sqinter> Q\\<^bold>>\\<Phi> = (\\<^bold><P\\<^bold>>\\<Phi> \\<or> \\<^bold><Q\\<^bold>>\\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><P \\<sqinter> Q\\<^bold>>\\<Phi> =\n    (\\<^bold><P\\<^bold>>\\<Phi> \\<or> \\<^bold><Q\\<^bold>>\\<Phi>)", "by (simp add: dBox_def dDia_def wp_choice)"], ["", "lemma dDia_seq: \"\\<^bold><P ;; Q\\<^bold>>\\<Phi> = \\<^bold><P\\<^bold>>\\<^bold><Q\\<^bold>>\\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><P ;; Q\\<^bold>>\\<Phi> =\n    \\<^bold><P\\<^bold>>\\<^bold><Q\\<^bold>>\\<Phi>", "by (simp add: dBox_def dDia_def wp_seq_r)"], ["", "lemma dDia_test: \"\\<^bold><?[p]\\<^bold>>\\<Phi> = (p \\<and> \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<^bold><?[p]\\<^bold>>\\<Phi> = (p \\<and> \\<Phi>)", "by (rel_auto)"], ["", "subsection \\<open> Sequent Laws \\<close>"], ["", "lemma sBoxSeq [dynlog_simp]: \"\\<Gamma> \\<tturnstile> \\<^bold>[P ;; Q\\<^bold>]\\<Phi> \\<equiv> \\<Gamma> \\<tturnstile> \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<tturnstile> \\<^bold>[P ;; Q\\<^bold>]\\<Phi> \\<equiv>\n    \\<Gamma> \\<tturnstile> \\<^bold>[P\\<^bold>]\\<^bold>[Q\\<^bold>]\\<Phi>", "by (simp add: dBox_def wp_seq_r)"], ["", "lemma sBoxTest [dynlog_intro]: \"\\<Gamma> \\<tturnstile> (b \\<Rightarrow> \\<Psi>) \\<Longrightarrow> \\<Gamma> \\<tturnstile> \\<^bold>[?[b]\\<^bold>]\\<Psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Gamma> \\<tturnstile> b \\<Rightarrow> \\<Psi> \\<Longrightarrow>\n    \\<Gamma> \\<tturnstile> \\<^bold>[?[b]\\<^bold>]\\<Psi>", "by (rel_auto)"], ["", "lemma sBoxAssignFwd [dynlog_simp]: \"\\<lbrakk> vwb_lens x; x \\<sharp> v; x \\<sharp> \\<Gamma> \\<rbrakk> \\<Longrightarrow> (\\<Gamma> \\<tturnstile> \\<^bold>[x := v\\<^bold>]\\<Phi>) = ((&x =\\<^sub>u v \\<and> \\<Gamma>) \\<tturnstile> \\<Phi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vwb_lens x; x \\<sharp> v; x \\<sharp> \\<Gamma>\\<rbrakk>\n    \\<Longrightarrow> (\\<Gamma> \\<tturnstile>\n                       \\<^bold>[x := v\\<^bold>]\\<Phi>) =\n                      (&x =\\<^sub>u v \\<and> \\<Gamma> \\<tturnstile> \\<Phi>)", "by (rel_auto, metis vwb_lens_wb wb_lens.get_put)"], ["", "lemma sBoxIndStar: \"\\<tturnstile> [\\<Phi> \\<Rightarrow> \\<^bold>[P\\<^bold>]\\<Phi>]\\<^sub>u \\<Longrightarrow> \\<Phi> \\<tturnstile> \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tturnstile> [\\<Phi> \\<Rightarrow>\n                   \\<^bold>[P\\<^bold>]\\<Phi>]\\<^sub>u \\<Longrightarrow>\n    \\<Phi> \\<tturnstile> \\<^bold>[P\\<^sup>\\<star>\\<^bold>]\\<Phi>", "by (rel_simp, metis (mono_tags, lifting) mem_Collect_eq rtrancl_induct)"], ["", "lemma hoare_as_dynlog: \"\\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u = (p \\<tturnstile> \\<^bold>[Q\\<^bold>]r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u =\n    (p \\<tturnstile> \\<^bold>[Q\\<^bold>]r)", "by (rel_auto)"], ["", "end"]]}