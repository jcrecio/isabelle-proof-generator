{"file_name": "/home/qj213/afp-2021-10-22/thys/UTP/utp/utp_recursion.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UTP", "problem_names": ["lemma mu_id: \"(\\<mu> X \\<bullet> X) = true\"", "lemma mu_const: \"(\\<mu> X \\<bullet> P) = P\"", "lemma nu_id: \"(\\<nu> X \\<bullet> X) = false\"", "lemma nu_const: \"(\\<nu> X \\<bullet> P) = P\"", "lemma mu_refine_intro:\n  assumes \"(C \\<Rightarrow> S) \\<sqsubseteq> F(C \\<Rightarrow> S)\" \"(C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\"\n  shows \"(C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F\"", "lemma chain0 [simp]: \"chain Y \\<Longrightarrow> Y 0 = false\"", "lemma chainI:\n  assumes \"Y 0 = false\" \"\\<And> i. Y (Suc i) \\<sqsubseteq> Y i\"\n  shows \"chain Y\"", "lemma chainE:\n  assumes \"chain Y\" \"\\<And> i. \\<lbrakk> Y 0 = false; Y (Suc i) \\<sqsubseteq> Y i \\<rbrakk> \\<Longrightarrow> P\"\n  shows \"P\"", "lemma L274:\n  assumes \"\\<forall> n. ((E n \\<and>\\<^sub>p X) = (E n \\<and> Y))\"\n  shows \"(\\<Sqinter> (range E) \\<and> X) = (\\<Sqinter> (range E) \\<and> Y)\"", "lemma constrI:\n  assumes \"chain E\" \"\\<And> X n. ((F(X) \\<and> E(n + 1)) = (F(X \\<and> E(n)) \\<and> E (n + 1)))\"\n  shows \"constr F E\"", "lemma chain_pred_terminates:\n  assumes \"constr F E\" \"mono F\"\n  shows \"(\\<Sqinter> (range E) \\<and> \\<mu> F) = (\\<Sqinter> (range E) \\<and> \\<nu> F)\"", "theorem constr_fp_uniq:\n  assumes \"constr F E\" \"mono F\" \"\\<Sqinter> (range E) = C\"\n  shows \"(C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\"", "lemma  wf_fixp_uinduct_pure_ueq_gen:     \n  assumes fixp_unfold: \"fp B = B (fp B)\"\n  and              WF: \"wf R\"\n  and     induct_step:\n          \"\\<And>f st. \\<lbrakk>\\<And>st'. (st',st) \\<in> R  \\<Longrightarrow> (((Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st'\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> f)\\<rbrakk>\n               \\<Longrightarrow> fp B = f \\<Longrightarrow>((Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"((Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B)\"", "lemma refine_usubst_to_ueq:\n  \"vwb_lens E \\<Longrightarrow> (Pre \\<Rightarrow> Post)\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk> \\<sqsubseteq> f\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk> = (((Pre \\<and> $E =\\<^sub>u \\<guillemotleft>st'\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> f)\"", "lemma mu_rec_total_pure_rule: \n  assumes WF: \"wf R\"\n  and     M: \"mono B\"  \n  and     induct_step:\n          \"\\<And> f st.  \\<lbrakk>(Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f\\<rbrakk>\n               \\<Longrightarrow> \\<mu> B = f \\<Longrightarrow>(Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B\"", "lemma nu_rec_total_pure_rule: \n  assumes WF: \"wf R\"\n  and     M: \"mono B\"  \n  and     induct_step:\n          \"\\<And> f st.  \\<lbrakk>(Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f\\<rbrakk>\n               \\<Longrightarrow> \\<nu> B = f \\<Longrightarrow>(Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B\"", "lemma mu_rec_total_utp_rule: \n  assumes WF: \"wf R\"\n    and     M: \"mono B\"  \n    and     induct_step:\n    \"\\<And>st. (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B ((Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post)))\"\n  shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B\"", "lemma nu_rec_total_utp_rule: \n  assumes WF: \"wf R\"\n    and     M: \"mono B\"  \n    and     induct_step:\n    \"\\<And>st. (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B ((Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post)))\"\n  shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B\""], "translations": [["", "lemma mu_id: \"(\\<mu> X \\<bullet> X) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> X \\<bullet> X) = true", "by (simp add: antisym gfp_upperbound)"], ["", "lemma mu_const: \"(\\<mu> X \\<bullet> P) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<mu> X \\<bullet> P) = P", "by (simp add: gfp_const)"], ["", "lemma nu_id: \"(\\<nu> X \\<bullet> X) = false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> X \\<bullet> X) = false", "by (meson lfp_lowerbound utp_pred_laws.bot.extremum_unique)"], ["", "lemma nu_const: \"(\\<nu> X \\<bullet> P) = P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<nu> X \\<bullet> P) = P", "by (simp add: lfp_const)"], ["", "lemma mu_refine_intro:\n  assumes \"(C \\<Rightarrow> S) \\<sqsubseteq> F(C \\<Rightarrow> S)\" \"(C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\"\n  shows \"(C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F", "from assms"], ["proof (chain)\npicking this:\n  (C \\<Rightarrow> S) \\<sqsubseteq> F (C \\<Rightarrow> S)\n  (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)", "have \"(C \\<Rightarrow> S) \\<sqsubseteq> \\<nu> F\""], ["proof (prove)\nusing this:\n  (C \\<Rightarrow> S) \\<sqsubseteq> F (C \\<Rightarrow> S)\n  (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. (C \\<Rightarrow> S) \\<sqsubseteq> \\<nu> F", "by (simp add: lfp_lowerbound)"], ["proof (state)\nthis:\n  (C \\<Rightarrow> S) \\<sqsubseteq> \\<nu> F\n\ngoal (1 subgoal):\n 1. (C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F", "with assms"], ["proof (chain)\npicking this:\n  (C \\<Rightarrow> S) \\<sqsubseteq> F (C \\<Rightarrow> S)\n  (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\n  (C \\<Rightarrow> S) \\<sqsubseteq> \\<nu> F", "show ?thesis"], ["proof (prove)\nusing this:\n  (C \\<Rightarrow> S) \\<sqsubseteq> F (C \\<Rightarrow> S)\n  (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\n  (C \\<Rightarrow> S) \\<sqsubseteq> \\<nu> F\n\ngoal (1 subgoal):\n 1. (C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F", "by (pred_auto)"], ["proof (state)\nthis:\n  (C \\<Rightarrow> S) \\<sqsubseteq> \\<mu> F\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Obtaining Unique Fixed-points \\<close>"], ["", "text \\<open> Obtaining termination proofs via approximation chains. Theorems and proofs adapted\n  from Chapter 2, page 63 of the UTP book~\\cite{Hoare&98}.  \\<close>"], ["", "type_synonym 'a chain = \"nat \\<Rightarrow> 'a upred\""], ["", "definition chain :: \"'a chain \\<Rightarrow> bool\" where\n  \"chain Y = ((Y 0 = false) \\<and> (\\<forall> i. Y (Suc i) \\<sqsubseteq> Y i))\""], ["", "lemma chain0 [simp]: \"chain Y \\<Longrightarrow> Y 0 = false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y \\<Longrightarrow> Y 0 = false", "by (simp add:chain_def)"], ["", "lemma chainI:\n  assumes \"Y 0 = false\" \"\\<And> i. Y (Suc i) \\<sqsubseteq> Y i\"\n  shows \"chain Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain Y", "using assms"], ["proof (prove)\nusing this:\n  Y 0 = false\n  Y (Suc ?i) \\<sqsubseteq> Y ?i\n\ngoal (1 subgoal):\n 1. chain Y", "by (auto simp add: chain_def)"], ["", "lemma chainE:\n  assumes \"chain Y\" \"\\<And> i. \\<lbrakk> Y 0 = false; Y (Suc i) \\<sqsubseteq> Y i \\<rbrakk> \\<Longrightarrow> P\"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  chain Y\n  \\<lbrakk>Y 0 = false; Y (Suc ?i) \\<sqsubseteq> Y ?i\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by (simp add: chain_def)"], ["", "lemma L274:\n  assumes \"\\<forall> n. ((E n \\<and>\\<^sub>p X) = (E n \\<and> Y))\"\n  shows \"(\\<Sqinter> (range E) \\<and> X) = (\\<Sqinter> (range E) \\<and> Y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> X) = (\\<Or>range E \\<and> Y)", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>n. (E n \\<and> X) = (E n \\<and> Y)\n\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> X) = (\\<Or>range E \\<and> Y)", "by (pred_auto)"], ["", "text \\<open> Constructive chains \\<close>"], ["", "definition constr ::\n  \"('a upred \\<Rightarrow> 'a upred) \\<Rightarrow> 'a chain \\<Rightarrow> bool\" where\n\"constr F E \\<longleftrightarrow> chain E \\<and> (\\<forall> X n. ((F(X) \\<and> E(n + 1)) = (F(X \\<and> E(n)) \\<and> E (n + 1))))\""], ["", "lemma constrI:\n  assumes \"chain E\" \"\\<And> X n. ((F(X) \\<and> E(n + 1)) = (F(X \\<and> E(n)) \\<and> E (n + 1)))\"\n  shows \"constr F E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constr F E", "using assms"], ["proof (prove)\nusing this:\n  chain E\n  (F ?X \\<and> E (?n + 1)) = (F (?X \\<and> E ?n) \\<and> E (?n + 1))\n\ngoal (1 subgoal):\n 1. constr F E", "by (auto simp add: constr_def)"], ["", "text \\<open> This lemma gives a way of showing that there is a unique fixed-point when\n        the predicate function can be built using a constructive function F\n        over an approximation chain E \\<close>"], ["", "lemma chain_pred_terminates:\n  assumes \"constr F E\" \"mono F\"\n  shows \"(\\<Sqinter> (range E) \\<and> \\<mu> F) = (\\<Sqinter> (range E) \\<and> \\<nu> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> \\<mu> F) = (\\<Or>range E \\<and> \\<nu> F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> \\<mu> F) = (\\<Or>range E \\<and> \\<nu> F)", "from assms"], ["proof (chain)\npicking this:\n  constr F E\n  Monotonic F", "have \"\\<forall> n. (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\""], ["proof (prove)\nusing this:\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. \\<forall>n. (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)", "proof (rule_tac allI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)", "from assms"], ["proof (chain)\npicking this:\n  constr F E\n  Monotonic F", "show \"(E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\""], ["proof (prove)\nusing this:\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E 0 \\<and> \\<mu> F) = (E 0 \\<and> \\<nu> F)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "case 0"], ["proof (state)\nthis:\n  constr F E\n  Monotonic F\n\ngoal (2 subgoals):\n 1. \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E 0 \\<and> \\<mu> F) = (E 0 \\<and> \\<nu> F)\n 2. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "thus ?case"], ["proof (prove)\nusing this:\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E 0 \\<and> \\<mu> F) = (E 0 \\<and> \\<nu> F)", "by (simp add: constr_def)"], ["proof (state)\nthis:\n  (E 0 \\<and> \\<mu> F) = (E 0 \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "note hyp = this"], ["proof (state)\nthis:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n                \\<Longrightarrow> (E n \\<and> \\<mu> F) =\n                                  (E n \\<and> \\<nu> F);\n        constr F E; Monotonic F\\<rbrakk>\n       \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                         (E (Suc n) \\<and> \\<nu> F)", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E (Suc n) \\<and> \\<mu> F) = (E (Suc n) \\<and> \\<nu> F)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "have \"(E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (\\<mu> F))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (\\<mu> F))", "using gfp_unfold[OF hyp(3), THEN sym]"], ["proof (prove)\nusing this:\n  F (\\<mu> F) = \\<mu> F\n\ngoal (1 subgoal):\n 1. (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (\\<mu> F))", "by (simp add: constr_def)"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (\\<mu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "also"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (\\<mu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "from hyp"], ["proof (chain)\npicking this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F", "have \"... = (E (n + 1) \\<and> F (E n \\<and> \\<mu> F))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E (n + 1) \\<and> F (\\<mu> F)) =\n    (E (n + 1) \\<and> F (E n \\<and> \\<mu> F))", "by (metis conj_comm constr_def)"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> F (\\<mu> F)) = (E (n + 1) \\<and> F (E n \\<and> \\<mu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "also"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> F (\\<mu> F)) = (E (n + 1) \\<and> F (E n \\<and> \\<mu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "from hyp"], ["proof (chain)\npicking this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F", "have \"... = (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E (n + 1) \\<and> F (E n \\<and> \\<mu> F)) =\n    (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))", "by simp"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> F (E n \\<and> \\<mu> F)) =\n  (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "also"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> F (E n \\<and> \\<mu> F)) =\n  (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "from hyp"], ["proof (chain)\npicking this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F", "have \"... = (E (n + 1) \\<and> \\<nu> F)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n  \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n  constr F E\n  Monotonic F\n\ngoal (1 subgoal):\n 1. (E (n + 1) \\<and> F (E n \\<and> \\<nu> F)) = (E (n + 1) \\<and> \\<nu> F)", "by (metis (no_types, lifting) conj_comm constr_def lfp_unfold)"], ["proof (state)\nthis:\n  (E (n + 1) \\<and> F (E n \\<and> \\<nu> F)) = (E (n + 1) \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrakk>constr F E; Monotonic F\\<rbrakk>\n             \\<Longrightarrow> (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F);\n     constr F E; Monotonic F\\<rbrakk>\n    \\<Longrightarrow> (E (Suc n) \\<and> \\<mu> F) =\n                      (E (Suc n) \\<and> \\<nu> F)", "ultimately"], ["proof (chain)\npicking this:\n  (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))\n  (E (n + 1) \\<and> F (E n \\<and> \\<nu> F)) = (E (n + 1) \\<and> \\<nu> F)", "show ?thesis"], ["proof (prove)\nusing this:\n  (E (n + 1) \\<and> \\<mu> F) = (E (n + 1) \\<and> F (E n \\<and> \\<nu> F))\n  (E (n + 1) \\<and> F (E n \\<and> \\<nu> F)) = (E (n + 1) \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. (E (Suc n) \\<and> \\<mu> F) = (E (Suc n) \\<and> \\<nu> F)", "by simp"], ["proof (state)\nthis:\n  (E (Suc n) \\<and> \\<mu> F) = (E (Suc n) \\<and> \\<nu> F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (E (Suc n) \\<and> \\<mu> F) = (E (Suc n) \\<and> \\<nu> F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>n. (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> \\<mu> F) = (\\<Or>range E \\<and> \\<nu> F)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. (E n \\<and> \\<mu> F) = (E n \\<and> \\<nu> F)\n\ngoal (1 subgoal):\n 1. (\\<Or>range E \\<and> \\<mu> F) = (\\<Or>range E \\<and> \\<nu> F)", "by (auto intro: L274)"], ["proof (state)\nthis:\n  (\\<Or>range E \\<and> \\<mu> F) = (\\<Or>range E \\<and> \\<nu> F)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem constr_fp_uniq:\n  assumes \"constr F E\" \"mono F\" \"\\<Sqinter> (range E) = C\"\n  shows \"(C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)", "using assms(1) assms(2) assms(3) chain_pred_terminates"], ["proof (prove)\nusing this:\n  constr F E\n  Monotonic F\n  \\<Or>range E = C\n  \\<lbrakk>constr ?F ?E; Monotonic ?F\\<rbrakk>\n  \\<Longrightarrow> (\\<Or>range ?E \\<and> \\<mu> ?F) =\n                    (\\<Or>range ?E \\<and> \\<nu> ?F)\n\ngoal (1 subgoal):\n 1. (C \\<and> \\<mu> F) = (C \\<and> \\<nu> F)", "by blast"], ["", "subsection \\<open> Noetherian Induction Instantiation\\<close>"], ["", "text \\<open> Contribution from Yakoub Nemouchi.The following generalization was used by Tobias Nipkow\n        and Peter Lammich  in \\emph{Refine\\_Monadic} \\<close>"], ["", "lemma  wf_fixp_uinduct_pure_ueq_gen:     \n  assumes fixp_unfold: \"fp B = B (fp B)\"\n  and              WF: \"wf R\"\n  and     induct_step:\n          \"\\<And>f st. \\<lbrakk>\\<And>st'. (st',st) \\<in> R  \\<Longrightarrow> (((Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st'\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> f)\\<rbrakk>\n               \\<Longrightarrow> fp B = f \\<Longrightarrow>((Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"((Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "fix st"], ["proof (state)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "have \"((Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> (fp B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n     Post) \\<sqsubseteq>\n    fp B", "using WF"], ["proof (prove)\nusing this:\n  wf R\n\ngoal (1 subgoal):\n 1. (Pre \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n     Post) \\<sqsubseteq>\n    fp B", "proof (induction rule: wf_induct_rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           (y, x) \\<in> R \\<Longrightarrow>\n           (Pre \\<and>\n            \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n            \\<guillemotleft>y\\<guillemotright> \\<Rightarrow>\n            Post) \\<sqsubseteq>\n           fp B) \\<Longrightarrow>\n       (Pre \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n        Post) \\<sqsubseteq>\n       fp B", "case (less x)"], ["proof (state)\nthis:\n  (?y, x) \\<in> R \\<Longrightarrow>\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>?y\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           (y, x) \\<in> R \\<Longrightarrow>\n           (Pre \\<and>\n            \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n            \\<guillemotleft>y\\<guillemotright> \\<Rightarrow>\n            Post) \\<sqsubseteq>\n           fp B) \\<Longrightarrow>\n       (Pre \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n        Post) \\<sqsubseteq>\n       fp B", "hence \"(Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>x\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> B (fp B)\""], ["proof (prove)\nusing this:\n  (?y, x) \\<in> R \\<Longrightarrow>\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>?y\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal (1 subgoal):\n 1. (Pre \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n     Post) \\<sqsubseteq>\n    B (fp B)", "by (rule induct_step, rel_blast, simp)"], ["proof (state)\nthis:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  B (fp B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y.\n           (y, x) \\<in> R \\<Longrightarrow>\n           (Pre \\<and>\n            \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n            \\<guillemotleft>y\\<guillemotright> \\<Rightarrow>\n            Post) \\<sqsubseteq>\n           fp B) \\<Longrightarrow>\n       (Pre \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n        Post) \\<sqsubseteq>\n       fp B", "then"], ["proof (chain)\npicking this:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  B (fp B)", "show ?case"], ["proof (prove)\nusing this:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  B (fp B)\n\ngoal (1 subgoal):\n 1. (Pre \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n     Post) \\<sqsubseteq>\n    fp B", "using fixp_unfold"], ["proof (prove)\nusing this:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  B (fp B)\n  fp B = B (fp B)\n\ngoal (1 subgoal):\n 1. (Pre \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n     Post) \\<sqsubseteq>\n    fp B", "by auto"], ["proof (state)\nthis:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>x\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "}"], ["proof (state)\nthis:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>?st2\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "thus ?thesis"], ["proof (prove)\nusing this:\n  (Pre \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>?st2\\<guillemotright> \\<Rightarrow>\n   Post) \\<sqsubseteq>\n  fp B\n\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B", "by pred_simp"], ["proof (state)\nthis:\n  (Pre \\<Rightarrow> Post) \\<sqsubseteq> fp B\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open> The next lemma shows that using substitution also work. However it is not that generic\n        nor practical for proof automation ... \\<close>"], ["", "lemma refine_usubst_to_ueq:\n  \"vwb_lens E \\<Longrightarrow> (Pre \\<Rightarrow> Post)\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk> \\<sqsubseteq> f\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk> = (((Pre \\<and> $E =\\<^sub>u \\<guillemotleft>st'\\<guillemotright>) \\<Rightarrow> Post) \\<sqsubseteq> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vwb_lens E \\<Longrightarrow>\n    ((Pre \\<Rightarrow>\n      Post)\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk> \\<sqsubseteq>\n     f\\<lbrakk>\\<guillemotleft>st'\\<guillemotright>/$E\\<rbrakk>) =\n    ((Pre \\<and>\n      $E =\\<^sub>u \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n      Post) \\<sqsubseteq>\n     f)", "by (rel_auto, metis vwb_lens_wb wb_lens.get_put)"], ["", "text \\<open> By instantiation of @{thm wf_fixp_uinduct_pure_ueq_gen} with @{term \\<mu>} and lifting of the \n        well-founded relation we have ... \\<close>"], ["", "lemma mu_rec_total_pure_rule: \n  assumes WF: \"wf R\"\n  and     M: \"mono B\"  \n  and     induct_step:\n          \"\\<And> f st.  \\<lbrakk>(Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f\\<rbrakk>\n               \\<Longrightarrow> \\<mu> B = f \\<Longrightarrow>(Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B", "proof (rule wf_fixp_uinduct_pure_ueq_gen[where fp=\\<mu> and Pre=Pre and B=B and R=R and e=e])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<mu> B = B (\\<mu> B)\n 2. wf R\n 3. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<mu> B = B (\\<mu> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<mu> B = B (\\<mu> B)", "by (simp add: M def_gfp_unfold)"], ["proof (state)\nthis:\n  \\<mu> B = B (\\<mu> B)\n\ngoal (2 subgoals):\n 1. wf R\n 2. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"wf R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf R", "by (fact WF)"], ["proof (state)\nthis:\n  wf R\n\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<And>f st. (\\<And>st'. (st', st) \\<in> R \\<Longrightarrow> (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f) \\<Longrightarrow> \n                \\<mu> B = f \\<Longrightarrow> \n                (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "by (rule induct_step, rel_simp, simp)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>st'.\n              (st', ?st) \\<in> R \\<Longrightarrow>\n              (Pre \\<and>\n               \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n               \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n               Post) \\<sqsubseteq>\n              ?f;\n   \\<mu> B = ?f\\<rbrakk>\n  \\<Longrightarrow> (Pre \\<and>\n                     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                     \\<guillemotleft>?st\\<guillemotright> \\<Rightarrow>\n                     Post) \\<sqsubseteq>\n                    B ?f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_rec_total_pure_rule: \n  assumes WF: \"wf R\"\n  and     M: \"mono B\"  \n  and     induct_step:\n          \"\\<And> f st.  \\<lbrakk>(Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f\\<rbrakk>\n               \\<Longrightarrow> \\<nu> B = f \\<Longrightarrow>(Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B f)\"\n        shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B", "proof (rule wf_fixp_uinduct_pure_ueq_gen[where fp=\\<nu> and Pre=Pre and B=B and R=R and e=e])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<nu> B = B (\\<nu> B)\n 2. wf R\n 3. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<nu> B = B (\\<nu> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nu> B = B (\\<nu> B)", "by (simp add: M def_lfp_unfold)"], ["proof (state)\nthis:\n  \\<nu> B = B (\\<nu> B)\n\ngoal (2 subgoals):\n 1. wf R\n 2. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"wf R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf R", "by (fact WF)"], ["proof (state)\nthis:\n  wf R\n\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<And>f st. (\\<And>st'. (st', st) \\<in> R \\<Longrightarrow> (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f) \\<Longrightarrow> \n                \\<nu> B = f \\<Longrightarrow> \n                (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>\\<And>st'.\n                   (st', st) \\<in> R \\<Longrightarrow>\n                   (Pre \\<and>\n                    \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                    \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n                    Post) \\<sqsubseteq>\n                   f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "by (rule induct_step, rel_simp, simp)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>st'.\n              (st', ?st) \\<in> R \\<Longrightarrow>\n              (Pre \\<and>\n               \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n               \\<guillemotleft>st'\\<guillemotright> \\<Rightarrow>\n               Post) \\<sqsubseteq>\n              ?f;\n   \\<nu> B = ?f\\<rbrakk>\n  \\<Longrightarrow> (Pre \\<and>\n                     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                     \\<guillemotleft>?st\\<guillemotright> \\<Rightarrow>\n                     Post) \\<sqsubseteq>\n                    B ?f\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Since @{term \"B ((Pre \\<and> (\\<lceil>E\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u\\<in>\\<^sub>u\\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post)) \\<sqsubseteq> B (\\<mu> B)\"} and \n      @{term \"mono B\"}, thus,  @{thm mu_rec_total_pure_rule} can be expressed as follows\\<close>"], ["", "lemma mu_rec_total_utp_rule: \n  assumes WF: \"wf R\"\n    and     M: \"mono B\"  \n    and     induct_step:\n    \"\\<And>st. (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B ((Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post)))\"\n  shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<mu> B", "proof (rule mu_rec_total_pure_rule[where R=R and e=e], simp_all add: assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>(Pre \\<and>\n                 (\\<lceil>e\\<rceil>\\<^sub><,\n                  \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                 \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n                 Post) \\<sqsubseteq>\n                f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<And>f st. (Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f \\<Longrightarrow> \\<mu> B = f \\<Longrightarrow> (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>(Pre \\<and>\n                 (\\<lceil>e\\<rceil>\\<^sub><,\n                  \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                 \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n                 Post) \\<sqsubseteq>\n                f;\n        \\<mu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "by (simp add: M induct_step monoD order_subst2)"], ["proof (state)\nthis:\n  \\<lbrakk>(Pre \\<and>\n            (\\<lceil>e\\<rceil>\\<^sub><,\n             \\<guillemotleft>?st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n            \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n            Post) \\<sqsubseteq>\n           ?f;\n   \\<mu> B = ?f\\<rbrakk>\n  \\<Longrightarrow> (Pre \\<and>\n                     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                     \\<guillemotleft>?st\\<guillemotright> \\<Rightarrow>\n                     Post) \\<sqsubseteq>\n                    B ?f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nu_rec_total_utp_rule: \n  assumes WF: \"wf R\"\n    and     M: \"mono B\"  \n    and     induct_step:\n    \"\\<And>st. (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> (B ((Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post)))\"\n  shows \"(Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Pre \\<Rightarrow> Post) \\<sqsubseteq> \\<nu> B", "proof (rule nu_rec_total_pure_rule[where R=R and e=e], simp_all add: assms)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>(Pre \\<and>\n                 (\\<lceil>e\\<rceil>\\<^sub><,\n                  \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                 \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n                 Post) \\<sqsubseteq>\n                f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "show \"\\<And>f st. (Pre \\<and> (\\<lceil>e\\<rceil>\\<^sub><, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> f \\<Longrightarrow> \\<nu> B = f \\<Longrightarrow> (Pre \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> Post) \\<sqsubseteq> B f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f st.\n       \\<lbrakk>(Pre \\<and>\n                 (\\<lceil>e\\<rceil>\\<^sub><,\n                  \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                 \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n                 Post) \\<sqsubseteq>\n                f;\n        \\<nu> B = f\\<rbrakk>\n       \\<Longrightarrow> (Pre \\<and>\n                          \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                          \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n                          Post) \\<sqsubseteq>\n                         B f", "by (simp add: M induct_step monoD order_subst2)"], ["proof (state)\nthis:\n  \\<lbrakk>(Pre \\<and>\n            (\\<lceil>e\\<rceil>\\<^sub><,\n             \\<guillemotleft>?st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n            \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n            Post) \\<sqsubseteq>\n           ?f;\n   \\<nu> B = ?f\\<rbrakk>\n  \\<Longrightarrow> (Pre \\<and>\n                     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n                     \\<guillemotleft>?st\\<guillemotright> \\<Rightarrow>\n                     Post) \\<sqsubseteq>\n                    B ?f\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}