{"file_name": "/home/qj213/afp-2021-10-22/thys/UTP/utp/utp_hoare.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/UTP", "problem_names": ["lemma hoare_meaning:\n  \"\\<lbrace>P\\<rbrace>S\\<lbrace>Q\\<rbrace>\\<^sub>u = (\\<forall> s s'. \\<lbrakk>P\\<rbrakk>\\<^sub>e s \\<and> \\<lbrakk>S\\<rbrakk>\\<^sub>e (s, s') \\<longrightarrow> \\<lbrakk>Q\\<rbrakk>\\<^sub>e s')\"", "lemma hoare_assume: \"\\<lbrace>P\\<rbrace>S\\<lbrace>Q\\<rbrace>\\<^sub>u \\<Longrightarrow> ?[P] ;; S = ?[P] ;; S ;; ?[Q]\"", "lemma hoare_r_conj [hoare_safe]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u; \\<lbrace>p\\<rbrace>Q\\<lbrace>s\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<lbrace>r \\<and> s\\<rbrace>\\<^sub>u\"", "lemma hoare_r_weaken_pre [hoare]:\n  \"\\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u\"\n  \"\\<lbrace>q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u\"", "lemma pre_str_hoare_r:\n  assumes \"`p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`\" and \"\\<lbrace>p\\<^sub>2\\<rbrace>C\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<^sub>1\\<rbrace>C\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma post_weak_hoare_r:\n  assumes \"\\<lbrace>p\\<rbrace>C\\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u\" and \"`q\\<^sub>2 \\<Rightarrow> q\\<^sub>1`\"\n  shows \"\\<lbrace>p\\<rbrace>C\\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u\"", "lemma hoare_r_conseq: \"\\<lbrakk> `p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`; \\<lbrace>p\\<^sub>2\\<rbrace>S\\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u; `q\\<^sub>2 \\<Rightarrow> q\\<^sub>1` \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<^sub>1\\<rbrace>S\\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u\"", "lemma assigns_hoare_r [hoare_safe]: \"`p \\<Rightarrow> \\<sigma> \\<dagger> q` \\<Longrightarrow> \\<lbrace>p\\<rbrace>\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma assigns_backward_hoare_r: \n  \"\\<lbrace>\\<sigma> \\<dagger> p\\<rbrace>\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<lbrace>p\\<rbrace>\\<^sub>u\"", "lemma assign_floyd_hoare_r:\n  assumes \"vwb_lens x\"\n  shows \"\\<lbrace>p\\<rbrace> assign_r x e \\<lbrace>\\<^bold>\\<exists>v \\<bullet> p\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk> \\<and> &x =\\<^sub>u e\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk>\\<rbrace>\\<^sub>u\"", "lemma assigns_init_hoare [hoare_safe]:\n  \"\\<lbrakk> vwb_lens x; x \\<sharp> p; x \\<sharp> v; \\<lbrace>&x =\\<^sub>u v \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>x := v ;; S\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma skip_hoare_r [hoare_safe]: \"\\<lbrace>p\\<rbrace>II\\<lbrace>p\\<rbrace>\\<^sub>u\"", "lemma skip_hoare_impl_r [hoare_safe]: \"`p \\<Rightarrow> q` \\<Longrightarrow> \\<lbrace>p\\<rbrace>II\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_r: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>s\\<rbrace>\\<^sub>u ; \\<lbrace>s\\<rbrace>Q\\<^sub>2\\<lbrace>r\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>r\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_invariant [hoare_safe]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>p\\<rbrace>\\<^sub>u ; \\<lbrace>p\\<rbrace>Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_stronger_pre_1 [hoare_safe]: \n  \"\\<lbrakk> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1\\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u ; \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_stronger_pre_2 [hoare_safe]: \n  \"\\<lbrakk> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1\\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u ; \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_inv_r_2 [hoare]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>q\\<rbrace>\\<^sub>u ; \\<lbrace>q\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma seq_hoare_inv_r_3 [hoare]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>p\\<rbrace>\\<^sub>u ; \\<lbrace>p\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma cond_hoare_r [hoare_safe]: \"\\<lbrakk> \\<lbrace>b \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u ; \\<lbrace>\\<not>b \\<and> p\\<rbrace>T\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma cond_hoare_r_wp: \n  assumes \"\\<lbrace>p'\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\" and \"\\<lbrace>p''\\<rbrace>T\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>(b \\<and> p') \\<or> (\\<not>b \\<and> p'')\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma cond_hoare_r_sp:\n  assumes \\<open>\\<lbrace>b \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\\<close> and \\<open>\\<lbrace>\\<not>b \\<and> p\\<rbrace>T\\<lbrace>s\\<rbrace>\\<^sub>u\\<close>\n  shows \\<open>\\<lbrace>p\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q \\<or> s\\<rbrace>\\<^sub>u\\<close>", "lemma nu_hoare_r_partial: \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p\\<rbrace>F P\\<lbrace>q\\<rbrace>\\<^sub>u\"   \n  shows \"\\<lbrace>p\\<rbrace>\\<nu> F \\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma mu_hoare_r:\n  assumes WF: \"wf R\"\n  assumes M:\"mono F\"  \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p \\<and> (e,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace>F P\\<lbrace>q\\<rbrace>\\<^sub>u\"   \n  shows \"\\<lbrace>p\\<rbrace>\\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma mu_hoare_r':\n  assumes WF: \"wf R\"\n  assumes M:\"mono F\"  \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p \\<and> (e,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace> P \\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace> F P \\<lbrace>q\\<rbrace>\\<^sub>u\" \n  assumes I0: \"`p' \\<Rightarrow> p`\"  \n  shows \"\\<lbrace>p'\\<rbrace> \\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u\"", "lemma iter_hoare_r: \"\\<lbrace>P\\<rbrace>S\\<lbrace>P\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>P\\<rbrace>S\\<^sup>\\<star>\\<lbrace>P\\<rbrace>\\<^sub>u\"", "lemma while_hoare_r [hoare_safe]:\n  assumes \"\\<lbrace>p \\<and> b\\<rbrace>S\\<lbrace>p\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<rbrace>while b do S od\\<lbrace>\\<not>b \\<and> p\\<rbrace>\\<^sub>u\"", "lemma while_invr_hoare_r [hoare_safe]:\n  assumes \"\\<lbrace>p \\<and> b\\<rbrace>S\\<lbrace>p\\<rbrace>\\<^sub>u\" \"`pre \\<Rightarrow> p`\" \"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"\n  shows \"\\<lbrace>pre\\<rbrace>while b invr p do S od\\<lbrace>post\\<rbrace>\\<^sub>u\"", "lemma while_r_minimal_partial:\n  assumes seq_step: \"`p \\<Rightarrow> invar`\"\n  assumes induct_step: \"\\<lbrace>invar\\<and> b\\<rbrace> C \\<lbrace>invar\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p\\<rbrace>while b do C od\\<lbrace>\\<not>b \\<and> invar\\<rbrace>\\<^sub>u\"", "lemma approx_chain: \n  \"(\\<Sqinter>n::nat. \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) = \\<lceil>p\\<rceil>\\<^sub><\"", "lemma while_term_hoare_r:\n  assumes \"\\<And> z::nat. \\<lbrace>p \\<and> b \\<and> v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>S\\<lbrace>p \\<and> v <\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<rbrace>while\\<^sub>\\<bottom> b do S od\\<lbrace>\\<not>b \\<and> p\\<rbrace>\\<^sub>u\"", "lemma while_vrt_hoare_r [hoare_safe]:\n  assumes \"\\<And> z::nat. \\<lbrace>p \\<and> b \\<and> v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>S\\<lbrace>p \\<and> v <\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u\" \"`pre \\<Rightarrow> p`\" \"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"\n  shows \"\\<lbrace>pre\\<rbrace>while b invr p vrt v do S od\\<lbrace>post\\<rbrace>\\<^sub>u\"", "lemma while_wf_hoare_r:\n  assumes WF: \"wf R\"\n  assumes I0: \"`pre \\<Rightarrow> p`\"\n  assumes induct_step:\"\\<And> st. \\<lbrace>b \\<and> p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace>Q\\<lbrace>p \\<and> (e, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace>\\<^sub>u\"\n  assumes PHI:\"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"  \n  shows \"\\<lbrace>pre\\<rbrace>while\\<^sub>\\<bottom> b invr p do Q od\\<lbrace>post\\<rbrace>\\<^sub>u\"", "lemma frame_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace>a:[P]\\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\"", "lemma frame_strong_hoare_r [hoare_safe]: \n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>p \\<and> r\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p \\<and> r\\<rbrace>a:[S]\\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\"", "lemma frame_hoare_r' [hoare_safe]: \n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>r \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>r \\<and> p\\<rbrace>a:[S]\\<lbrace>r \\<and> q\\<rbrace>\\<^sub>u\"", "lemma antiframe_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<natural> r\" \"a \\<sharp> q\" \"\\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace> a:\\<lbrakk>P\\<rbrakk> \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\"", "lemma antiframe_strong_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<natural> r\" \"a \\<sharp> q\" \"\\<lbrace>p \\<and> r\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace> a:\\<lbrakk>P\\<rbrakk> \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\""], "translations": [["", "lemma hoare_meaning:\n  \"\\<lbrace>P\\<rbrace>S\\<lbrace>Q\\<rbrace>\\<^sub>u = (\\<forall> s s'. \\<lbrakk>P\\<rbrakk>\\<^sub>e s \\<and> \\<lbrakk>S\\<rbrakk>\\<^sub>e (s, s') \\<longrightarrow> \\<lbrakk>Q\\<rbrakk>\\<^sub>e s')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>P\\<rbrace> S \\<lbrace>Q\\<rbrace>\\<^sub>u =\n    (\\<forall>s s'.\n        \\<lbrakk>P\\<rbrakk>\\<^sub>e s \\<and>\n        \\<lbrakk>S\\<rbrakk>\\<^sub>e (s, s') \\<longrightarrow>\n        \\<lbrakk>Q\\<rbrakk>\\<^sub>e s')", "by (rel_auto)"], ["", "lemma hoare_assume: \"\\<lbrace>P\\<rbrace>S\\<lbrace>Q\\<rbrace>\\<^sub>u \\<Longrightarrow> ?[P] ;; S = ?[P] ;; S ;; ?[Q]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>P\\<rbrace> S \\<lbrace>Q\\<rbrace>\\<^sub>u \\<Longrightarrow>\n    ?[P] ;; S = ?[P] ;; S ;; ?[Q]", "by (rel_auto)"], ["", "lemma hoare_r_conj [hoare_safe]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u; \\<lbrace>p\\<rbrace>Q\\<lbrace>s\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<lbrace>r \\<and> s\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u;\n     \\<lbrace>p\\<rbrace> Q \\<lbrace>s\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> Q\n                      \\<lbrace>r \\<and> s\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma hoare_r_weaken_pre [hoare]:\n  \"\\<lbrace>p\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u\"\n  \"\\<lbrace>q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<lbrace>r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrace>p\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow>\n     \\<lbrace>p \\<and> q\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u) &&&\n    (\\<lbrace>q\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u \\<Longrightarrow>\n     \\<lbrace>p \\<and> q\\<rbrace> Q \\<lbrace>r\\<rbrace>\\<^sub>u)", "by rel_auto+"], ["", "lemma pre_str_hoare_r:\n  assumes \"`p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`\" and \"\\<lbrace>p\\<^sub>2\\<rbrace>C\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<^sub>1\\<rbrace>C\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<^sub>1\\<rbrace> C \\<lbrace>q\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  `p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`\n  \\<lbrace>p\\<^sub>2\\<rbrace> C \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<^sub>1\\<rbrace> C \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma post_weak_hoare_r:\n  assumes \"\\<lbrace>p\\<rbrace>C\\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u\" and \"`q\\<^sub>2 \\<Rightarrow> q\\<^sub>1`\"\n  shows \"\\<lbrace>p\\<rbrace>C\\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> C \\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>p\\<rbrace> C \\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u\n  `q\\<^sub>2 \\<Rightarrow> q\\<^sub>1`\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> C \\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma hoare_r_conseq: \"\\<lbrakk> `p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`; \\<lbrace>p\\<^sub>2\\<rbrace>S\\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u; `q\\<^sub>2 \\<Rightarrow> q\\<^sub>1` \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<^sub>1\\<rbrace>S\\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>`p\\<^sub>1 \\<Rightarrow> p\\<^sub>2`;\n     \\<lbrace>p\\<^sub>2\\<rbrace> S \\<lbrace>q\\<^sub>2\\<rbrace>\\<^sub>u;\n     `q\\<^sub>2 \\<Rightarrow> q\\<^sub>1`\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<^sub>1\\<rbrace> S\n                      \\<lbrace>q\\<^sub>1\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "subsection \\<open> Assignment Laws \\<close>"], ["", "lemma assigns_hoare_r [hoare_safe]: \"`p \\<Rightarrow> \\<sigma> \\<dagger> q` \\<Longrightarrow> \\<lbrace>p\\<rbrace>\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. `p \\<Rightarrow> \\<sigma> \\<dagger> q` \\<Longrightarrow>\n    \\<lbrace>p\\<rbrace> \\<langle>\\<sigma>\\<rangle>\\<^sub>a\n    \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma assigns_backward_hoare_r: \n  \"\\<lbrace>\\<sigma> \\<dagger> p\\<rbrace>\\<langle>\\<sigma>\\<rangle>\\<^sub>a\\<lbrace>p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>\\<sigma> \\<dagger> p\\<rbrace>\n    \\<langle>\\<sigma>\\<rangle>\\<^sub>a \\<lbrace>p\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma assign_floyd_hoare_r:\n  assumes \"vwb_lens x\"\n  shows \"\\<lbrace>p\\<rbrace> assign_r x e \\<lbrace>\\<^bold>\\<exists>v \\<bullet> p\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk> \\<and> &x =\\<^sub>u e\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk>\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> x := e\n    \\<lbrace>\\<^bold>\\<exists> v \\<bullet> p\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk> \\<and>\n     &x =\\<^sub>u\n     e\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk>\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens x\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> x := e\n    \\<lbrace>\\<^bold>\\<exists> v \\<bullet> p\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk> \\<and>\n     &x =\\<^sub>u\n     e\\<lbrakk>\\<guillemotleft>v\\<guillemotright>/x\\<rbrakk>\\<rbrace>\\<^sub>u", "by (rel_auto, metis vwb_lens_wb wb_lens.get_put)"], ["", "lemma assigns_init_hoare [hoare_safe]:\n  \"\\<lbrakk> vwb_lens x; x \\<sharp> p; x \\<sharp> v; \\<lbrace>&x =\\<^sub>u v \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>x := v ;; S\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>vwb_lens x; x \\<sharp> p; x \\<sharp> v;\n     \\<lbrace>&x =\\<^sub>u v \\<and> p\\<rbrace> S\n     \\<lbrace>q\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> x := v ;; S\n                      \\<lbrace>q\\<rbrace>\\<^sub>u", "by (rel_auto)"], ["", "lemma skip_hoare_r [hoare_safe]: \"\\<lbrace>p\\<rbrace>II\\<lbrace>p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> II \\<lbrace>p\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma skip_hoare_impl_r [hoare_safe]: \"`p \\<Rightarrow> q` \\<Longrightarrow> \\<lbrace>p\\<rbrace>II\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. `p \\<Rightarrow> q` \\<Longrightarrow>\n    \\<lbrace>p\\<rbrace> II \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "subsection \\<open> Sequence Laws \\<close>"], ["", "lemma seq_hoare_r: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>s\\<rbrace>\\<^sub>u ; \\<lbrace>s\\<rbrace>Q\\<^sub>2\\<lbrace>r\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p\\<rbrace> Q\\<^sub>1 \\<lbrace>s\\<rbrace>\\<^sub>u;\n     \\<lbrace>s\\<rbrace> Q\\<^sub>2 \\<lbrace>r\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>r\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma seq_hoare_invariant [hoare_safe]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>p\\<rbrace>\\<^sub>u ; \\<lbrace>p\\<rbrace>Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p\\<rbrace> Q\\<^sub>1 \\<lbrace>p\\<rbrace>\\<^sub>u;\n     \\<lbrace>p\\<rbrace> Q\\<^sub>2 \\<lbrace>p\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>p\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma seq_hoare_stronger_pre_1 [hoare_safe]: \n  \"\\<lbrakk> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1\\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u ; \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>1\n             \\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u;\n     \\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>2\n     \\<lbrace>q\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma seq_hoare_stronger_pre_2 [hoare_safe]: \n  \"\\<lbrakk> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1\\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u ; \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>1\n             \\<lbrace>p \\<and> q\\<rbrace>\\<^sub>u;\n     \\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>2\n     \\<lbrace>p\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p \\<and> q\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>p\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma seq_hoare_inv_r_2 [hoare]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>q\\<rbrace>\\<^sub>u ; \\<lbrace>q\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p\\<rbrace> Q\\<^sub>1 \\<lbrace>q\\<rbrace>\\<^sub>u;\n     \\<lbrace>q\\<rbrace> Q\\<^sub>2 \\<lbrace>q\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma seq_hoare_inv_r_3 [hoare]: \"\\<lbrakk> \\<lbrace>p\\<rbrace>Q\\<^sub>1\\<lbrace>p\\<rbrace>\\<^sub>u ; \\<lbrace>p\\<rbrace>Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>Q\\<^sub>1 ;; Q\\<^sub>2\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>p\\<rbrace> Q\\<^sub>1 \\<lbrace>p\\<rbrace>\\<^sub>u;\n     \\<lbrace>p\\<rbrace> Q\\<^sub>2 \\<lbrace>q\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace> Q\\<^sub>1 ;; Q\\<^sub>2\n                      \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "subsection \\<open> Conditional Laws \\<close>"], ["", "lemma cond_hoare_r [hoare_safe]: \"\\<lbrakk> \\<lbrace>b \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u ; \\<lbrace>\\<not>b \\<and> p\\<rbrace>T\\<lbrace>q\\<rbrace>\\<^sub>u \\<rbrakk> \\<Longrightarrow> \\<lbrace>p\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<lbrace>b \\<and> p\\<rbrace> S \\<lbrace>q\\<rbrace>\\<^sub>u;\n     \\<lbrace>\\<not> b \\<and> p\\<rbrace> T\n     \\<lbrace>q\\<rbrace>\\<^sub>u\\<rbrakk>\n    \\<Longrightarrow> \\<lbrace>p\\<rbrace>\n                      S \\<triangleleft> b \\<triangleright>\\<^sub>r T\n                      \\<lbrace>q\\<rbrace>\\<^sub>u", "by rel_auto"], ["", "lemma cond_hoare_r_wp: \n  assumes \"\\<lbrace>p'\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\" and \"\\<lbrace>p''\\<rbrace>T\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>(b \\<and> p') \\<or> (\\<not>b \\<and> p'')\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>b \\<and> p' \\<or> \\<not> b \\<and> p''\\<rbrace>\n    S \\<triangleleft> b \\<triangleright>\\<^sub>r T\n    \\<lbrace>q\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>p'\\<rbrace> S \\<lbrace>q\\<rbrace>\\<^sub>u\n  \\<lbrace>p''\\<rbrace> T \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>b \\<and> p' \\<or> \\<not> b \\<and> p''\\<rbrace>\n    S \\<triangleleft> b \\<triangleright>\\<^sub>r T\n    \\<lbrace>q\\<rbrace>\\<^sub>u", "by pred_simp"], ["", "lemma cond_hoare_r_sp:\n  assumes \\<open>\\<lbrace>b \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\\<close> and \\<open>\\<lbrace>\\<not>b \\<and> p\\<rbrace>T\\<lbrace>s\\<rbrace>\\<^sub>u\\<close>\n  shows \\<open>\\<lbrace>p\\<rbrace>S \\<triangleleft> b \\<triangleright>\\<^sub>r T\\<lbrace>q \\<or> s\\<rbrace>\\<^sub>u\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> S \\<triangleleft> b \\<triangleright>\\<^sub>r T\n    \\<lbrace>q \\<or> s\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>b \\<and> p\\<rbrace> S \\<lbrace>q\\<rbrace>\\<^sub>u\n  \\<lbrace>\\<not> b \\<and> p\\<rbrace> T \\<lbrace>s\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> S \\<triangleleft> b \\<triangleright>\\<^sub>r T\n    \\<lbrace>q \\<or> s\\<rbrace>\\<^sub>u", "by pred_simp"], ["", "subsection \\<open> Recursion Laws \\<close>"], ["", "lemma nu_hoare_r_partial: \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p\\<rbrace>F P\\<lbrace>q\\<rbrace>\\<^sub>u\"   \n  shows \"\\<lbrace>p\\<rbrace>\\<nu> F \\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> \\<nu> F \\<lbrace>q\\<rbrace>\\<^sub>u", "by (meson hoare_r_def induct_step lfp_lowerbound order_refl)"], ["", "lemma mu_hoare_r:\n  assumes WF: \"wf R\"\n  assumes M:\"mono F\"  \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p \\<and> (e,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace>F P\\<lbrace>q\\<rbrace>\\<^sub>u\"   \n  shows \"\\<lbrace>p\\<rbrace>\\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> \\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u", "unfolding hoare_r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    \\<mu> F", "proof (rule mu_rec_total_utp_rule[OF WF M , of _ e ], goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n          (\\<lceil>e\\<rceil>\\<^sub><,\n           \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n          \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n          \\<lceil>q\\<rceil>\\<^sub>>)", "case (1 st)"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n          (\\<lceil>e\\<rceil>\\<^sub><,\n           \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n          \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n          \\<lceil>q\\<rceil>\\<^sub>>)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n     \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n       (\\<lceil>e\\<rceil>\\<^sub><,\n        \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n       \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n       \\<lceil>q\\<rceil>\\<^sub>>)", "using induct_step[unfolded hoare_r_def, of \"(\\<lceil>p\\<rceil>\\<^sub>< \\<and> (\\<lceil>e\\<rceil>\\<^sub><, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> \\<lceil>q\\<rceil>\\<^sub>>)\" st]"], ["proof (prove)\nusing this:\n  (\\<lceil>p \\<and>\n           (e, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n           \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   (\\<lceil>e\\<rceil>\\<^sub><,\n    \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n   \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n   \\<lceil>q\\<rceil>\\<^sub>>) \\<Longrightarrow>\n  (\\<lceil>p \\<and>\n           e =\\<^sub>u\n           \\<guillemotleft>st\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<lceil>e\\<rceil>\\<^sub><,\n      \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n     \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n     \\<lceil>q\\<rceil>\\<^sub>>)\n\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n     \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n     \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n       (\\<lceil>e\\<rceil>\\<^sub><,\n        \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n       \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n       \\<lceil>q\\<rceil>\\<^sub>>)", "by (simp add: alpha)"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n   \\<lceil>q\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  F (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<lceil>e\\<rceil>\\<^sub><,\n      \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n     \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n     \\<lceil>q\\<rceil>\\<^sub>>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mu_hoare_r':\n  assumes WF: \"wf R\"\n  assumes M:\"mono F\"  \n  assumes induct_step:\n    \"\\<And> st P. \\<lbrace>p \\<and> (e,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace> P \\<lbrace>q\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace> F P \\<lbrace>q\\<rbrace>\\<^sub>u\" \n  assumes I0: \"`p' \\<Rightarrow> p`\"  \n  shows \"\\<lbrace>p'\\<rbrace> \\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p'\\<rbrace> \\<mu> F \\<lbrace>q\\<rbrace>\\<^sub>u", "by (meson I0 M WF induct_step mu_hoare_r pre_str_hoare_r)"], ["", "subsection \\<open> Iteration Rules \\<close>"], ["", "lemma iter_hoare_r: \"\\<lbrace>P\\<rbrace>S\\<lbrace>P\\<rbrace>\\<^sub>u \\<Longrightarrow> \\<lbrace>P\\<rbrace>S\\<^sup>\\<star>\\<lbrace>P\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>P\\<rbrace> S \\<lbrace>P\\<rbrace>\\<^sub>u \\<Longrightarrow>\n    \\<lbrace>P\\<rbrace> S\\<^sup>\\<star> \\<lbrace>P\\<rbrace>\\<^sub>u", "by (rel_simp', metis (mono_tags, lifting) mem_Collect_eq rtrancl_induct)"], ["", "lemma while_hoare_r [hoare_safe]:\n  assumes \"\\<lbrace>p \\<and> b\\<rbrace>S\\<lbrace>p\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<rbrace>while b do S od\\<lbrace>\\<not>b \\<and> p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sup>\\<top> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrace>p \\<and> b\\<rbrace> S \\<lbrace>p\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sup>\\<top> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "by (simp add: while_top_def hoare_r_def, rule_tac lfp_lowerbound) (rel_auto)"], ["", "lemma while_invr_hoare_r [hoare_safe]:\n  assumes \"\\<lbrace>p \\<and> b\\<rbrace>S\\<lbrace>p\\<rbrace>\\<^sub>u\" \"`pre \\<Rightarrow> p`\" \"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"\n  shows \"\\<lbrace>pre\\<rbrace>while b invr p do S od\\<lbrace>post\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>pre\\<rbrace> while b invr p do S od\n    \\<lbrace>post\\<rbrace>\\<^sub>u", "by (metis assms hoare_r_conseq while_hoare_r while_inv_def)"], ["", "lemma while_r_minimal_partial:\n  assumes seq_step: \"`p \\<Rightarrow> invar`\"\n  assumes induct_step: \"\\<lbrace>invar\\<and> b\\<rbrace> C \\<lbrace>invar\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p\\<rbrace>while b do C od\\<lbrace>\\<not>b \\<and> invar\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sup>\\<top> b do C od\n    \\<lbrace>\\<not> b \\<and> invar\\<rbrace>\\<^sub>u", "using induct_step pre_str_hoare_r seq_step while_hoare_r"], ["proof (prove)\nusing this:\n  \\<lbrace>invar \\<and> b\\<rbrace> C \\<lbrace>invar\\<rbrace>\\<^sub>u\n  \\<lbrakk>`?p\\<^sub>1 \\<Rightarrow> ?p\\<^sub>2`;\n   \\<lbrace>?p\\<^sub>2\\<rbrace> ?C \\<lbrace>?q\\<rbrace>\\<^sub>u\\<rbrakk>\n  \\<Longrightarrow> \\<lbrace>?p\\<^sub>1\\<rbrace> ?C\n                    \\<lbrace>?q\\<rbrace>\\<^sub>u\n  `p \\<Rightarrow> invar`\n  \\<lbrace>?p \\<and> ?b\\<rbrace> ?S\n  \\<lbrace>?p\\<rbrace>\\<^sub>u \\<Longrightarrow>\n  \\<lbrace>?p\\<rbrace> while\\<^sup>\\<top> ?b do ?S od\n  \\<lbrace>\\<not> ?b \\<and> ?p\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sup>\\<top> b do C od\n    \\<lbrace>\\<not> b \\<and> invar\\<rbrace>\\<^sub>u", "by blast"], ["", "lemma approx_chain: \n  \"(\\<Sqinter>n::nat. \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) = \\<lceil>p\\<rceil>\\<^sub><\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Or>range\n          (\\<lambda>n.\n              \\<lceil>p \\<and>\n                      v <\\<^sub>u\n                      \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) =\n    \\<lceil>p\\<rceil>\\<^sub><", "by (rel_auto)"], ["", "text \\<open> Total correctness law for Hoare logic, based on constructive chains. This is limited to\n  variants that have naturals numbers as their range. \\<close>"], ["", "lemma while_term_hoare_r:\n  assumes \"\\<And> z::nat. \\<lbrace>p \\<and> b \\<and> v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>S\\<lbrace>p \\<and> v <\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p\\<rbrace>while\\<^sub>\\<bottom> b do S od\\<lbrace>\\<not>b \\<and> p\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "have \"(\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq> (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "proof (rule mu_refine_intro)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    S ;;\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>\\<not> b \\<and>\n             p\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n       II\n 2. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II)) =\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II))", "from assms"], ["proof (chain)\npicking this:\n  \\<lbrace>p \\<and>\n           b \\<and> v =\\<^sub>u \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\n  S \\<lbrace>p \\<and>\n             v <\\<^sub>u\n             \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\\<^sub>u", "show \"(\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq> S ;; (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r II\""], ["proof (prove)\nusing this:\n  \\<lbrace>p \\<and>\n           b \\<and> v =\\<^sub>u \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\n  S \\<lbrace>p \\<and>\n             v <\\<^sub>u\n             \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    S ;;\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>\\<not> b \\<and>\n             p\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n       II", "by (rel_auto)"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  S ;;\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>\\<not> b \\<and>\n           p\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n     II\n\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II)) =\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II))", "let ?E = \"\\<lambda> n. \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II)) =\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II))", "show \"(\\<lceil>p\\<rceil>\\<^sub>< \\<and> (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)) = (\\<lceil>p\\<rceil>\\<^sub>< \\<and> (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II)) =\n    (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n     (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                           II))", "proof (rule constr_fp_uniq[where E=\"?E\"])"], ["proof (state)\ngoal (3 subgoals):\n 1. constr\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)\n 2. Monotonic\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n 3. \\<Or>range\n          (\\<lambda>n.\n              \\<lceil>p \\<and>\n                      v <\\<^sub>u\n                      \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) =\n    \\<lceil>p\\<rceil>\\<^sub><", "show \"(\\<Sqinter>n. ?E(n)) = \\<lceil>p\\<rceil>\\<^sub><\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Or>range\n          (\\<lambda>n.\n              \\<lceil>p \\<and>\n                      v <\\<^sub>u\n                      \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) =\n    \\<lceil>p\\<rceil>\\<^sub><", "by (rel_auto)"], ["proof (state)\nthis:\n  \\<Or>range\n        (\\<lambda>n.\n            \\<lceil>p \\<and>\n                    v <\\<^sub>u\n                    \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) =\n  \\<lceil>p\\<rceil>\\<^sub><\n\ngoal (2 subgoals):\n 1. constr\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)\n 2. Monotonic\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "show \"mono (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotonic\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "by (simp add: cond_mono monoI seqr_mono)"], ["proof (state)\nthis:\n  Monotonic\n   (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n\ngoal (1 subgoal):\n 1. constr\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)", "show \"constr (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II) ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. constr\n     (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)", "proof (rule constrI)"], ["proof (state)\ngoal (2 subgoals):\n 1. chain\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)\n 2. \\<And>X n.\n       (S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><) =\n       (S ;;\n        (X \\<and>\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) \\<triangleleft> b \\<triangleright>\\<^sub>r\n           II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><)", "show \"chain ?E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chain\n     (\\<lambda>n.\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)", "proof (rule chainI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lceil>p \\<and>\n            v <\\<^sub>u \\<guillemotleft>0\\<guillemotright>\\<rceil>\\<^sub>< =\n    false\n 2. \\<And>i.\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>Suc i\\<guillemotright>\\<rceil>\\<^sub>< \\<sqsubseteq>\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>i\\<guillemotright>\\<rceil>\\<^sub><", "show \"\\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>0\\<guillemotright>\\<rceil>\\<^sub>< = false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lceil>p \\<and>\n            v <\\<^sub>u \\<guillemotleft>0\\<guillemotright>\\<rceil>\\<^sub>< =\n    false", "by (rel_auto)"], ["proof (state)\nthis:\n  \\<lceil>p \\<and>\n          v <\\<^sub>u \\<guillemotleft>0\\<guillemotright>\\<rceil>\\<^sub>< =\n  false\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>Suc i\\<guillemotright>\\<rceil>\\<^sub>< \\<sqsubseteq>\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>i\\<guillemotright>\\<rceil>\\<^sub><", "show \"\\<And>i. \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>Suc i\\<guillemotright>\\<rceil>\\<^sub>< \\<sqsubseteq> \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>i\\<guillemotright>\\<rceil>\\<^sub><\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>Suc i\\<guillemotright>\\<rceil>\\<^sub>< \\<sqsubseteq>\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>i\\<guillemotright>\\<rceil>\\<^sub><", "by (rel_auto)"], ["proof (state)\nthis:\n  \\<lceil>p \\<and>\n          v <\\<^sub>u\n          \\<guillemotleft>Suc ?i3\\<guillemotright>\\<rceil>\\<^sub>< \\<sqsubseteq>\n  \\<lceil>p \\<and>\n          v <\\<^sub>u \\<guillemotleft>?i3\\<guillemotright>\\<rceil>\\<^sub><\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  chain\n   (\\<lambda>n.\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)\n\ngoal (1 subgoal):\n 1. \\<And>X n.\n       (S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><) =\n       (S ;;\n        (X \\<and>\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) \\<triangleleft> b \\<triangleright>\\<^sub>r\n           II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><)", "from assms"], ["proof (chain)\npicking this:\n  \\<lbrace>p \\<and>\n           b \\<and> v =\\<^sub>u \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\n  S \\<lbrace>p \\<and>\n             v <\\<^sub>u\n             \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\\<^sub>u", "show \"\\<And>X n. (S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and> \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><) =\n                     (S ;; (X \\<and> \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and> \\<lceil>p \\<and> v <\\<^sub>u \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><)\""], ["proof (prove)\nusing this:\n  \\<lbrace>p \\<and>\n           b \\<and> v =\\<^sub>u \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\n  S \\<lbrace>p \\<and>\n             v <\\<^sub>u\n             \\<guillemotleft>?z\\<guillemotright>\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<And>X n.\n       (S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><) =\n       (S ;;\n        (X \\<and>\n         \\<lceil>p \\<and>\n                 v <\\<^sub>u\n                 \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><) \\<triangleleft> b \\<triangleright>\\<^sub>r\n           II \\<and>\n        \\<lceil>p \\<and>\n                v <\\<^sub>u\n                \\<guillemotleft>n + 1\\<guillemotright>\\<rceil>\\<^sub><)", "apply (rel_auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>X n a ba y.\n       \\<lbrakk>\\<And>z.\n                   \\<forall>a ba.\n                      \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, ba) \\<longrightarrow>\n                      \\<lbrakk>p\\<rbrakk>\\<^sub>e a \\<and>\n                      \\<lbrakk>b\\<rbrakk>\\<^sub>e a \\<and>\n                      \\<lbrakk>v\\<rbrakk>\\<^sub>e a = z \\<longrightarrow>\n                      \\<lbrakk>p\\<rbrakk>\\<^sub>e ba \\<and>\n                      \\<lbrakk>v\\<rbrakk>\\<^sub>e ba < z;\n        \\<And>z.\n           ((p \\<squnion>\n             (b \\<squnion>\n              bop (=) v\n               \\<guillemotleft>z\\<guillemotright>)) \\<oplus>\\<^sub>p\n            \\<lparr>lens_get = fst,\n               lens_put =\n                 \\<lambda>(\\<sigma>, \\<rho>) u.\n                    (u, \\<rho>)\\<rparr> \\<Rightarrow>\n            (p \\<squnion>\n             (v <\\<^sub>u\n              \\<guillemotleft>z\\<guillemotright>)) \\<oplus>\\<^sub>p\n            \\<lparr>lens_get = snd,\n               lens_put =\n                 \\<lambda>(\\<sigma>, \\<rho>).\n                    Pair \\<sigma>\\<rparr>) \\<sqsubseteq>\n           S;\n        \\<lbrakk>b\\<rbrakk>\\<^sub>e a;\n        \\<And>z.\n           \\<lbrace>p \\<and>\n                    b \\<and>\n                    v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\n           S \\<lbrace>p \\<and>\n                      v <\\<^sub>u\n                      \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u;\n        \\<lbrakk>p\\<rbrakk>\\<^sub>e a;\n        \\<lbrakk>v\\<rbrakk>\\<^sub>e a < Suc n;\n        \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, y);\n        \\<lbrakk>X\\<rbrakk>\\<^sub>e (y, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, y) \\<and>\n                            \\<lbrakk>X\\<rbrakk>\\<^sub>e (y, ba) \\<and>\n                            \\<lbrakk>p\\<rbrakk>\\<^sub>e y \\<and>\n                            \\<lbrakk>v\\<rbrakk>\\<^sub>e y < n", "using less_antisym less_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<not> ?n < ?m; ?n < Suc ?m\\<rbrakk> \\<Longrightarrow> ?m = ?n\n  \\<lbrakk>?x < ?y; ?y < ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. \\<And>X n a ba y.\n       \\<lbrakk>\\<And>z.\n                   \\<forall>a ba.\n                      \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, ba) \\<longrightarrow>\n                      \\<lbrakk>p\\<rbrakk>\\<^sub>e a \\<and>\n                      \\<lbrakk>b\\<rbrakk>\\<^sub>e a \\<and>\n                      \\<lbrakk>v\\<rbrakk>\\<^sub>e a = z \\<longrightarrow>\n                      \\<lbrakk>p\\<rbrakk>\\<^sub>e ba \\<and>\n                      \\<lbrakk>v\\<rbrakk>\\<^sub>e ba < z;\n        \\<And>z.\n           ((p \\<squnion>\n             (b \\<squnion>\n              bop (=) v\n               \\<guillemotleft>z\\<guillemotright>)) \\<oplus>\\<^sub>p\n            \\<lparr>lens_get = fst,\n               lens_put =\n                 \\<lambda>(\\<sigma>, \\<rho>) u.\n                    (u, \\<rho>)\\<rparr> \\<Rightarrow>\n            (p \\<squnion>\n             (v <\\<^sub>u\n              \\<guillemotleft>z\\<guillemotright>)) \\<oplus>\\<^sub>p\n            \\<lparr>lens_get = snd,\n               lens_put =\n                 \\<lambda>(\\<sigma>, \\<rho>).\n                    Pair \\<sigma>\\<rparr>) \\<sqsubseteq>\n           S;\n        \\<lbrakk>b\\<rbrakk>\\<^sub>e a;\n        \\<And>z.\n           \\<lbrace>p \\<and>\n                    b \\<and>\n                    v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\n           S \\<lbrace>p \\<and>\n                      v <\\<^sub>u\n                      \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u;\n        \\<lbrakk>p\\<rbrakk>\\<^sub>e a;\n        \\<lbrakk>v\\<rbrakk>\\<^sub>e a < Suc n;\n        \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, y);\n        \\<lbrakk>X\\<rbrakk>\\<^sub>e (y, ba)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y.\n                            \\<lbrakk>S\\<rbrakk>\\<^sub>e (a, y) \\<and>\n                            \\<lbrakk>X\\<rbrakk>\\<^sub>e (y, ba) \\<and>\n                            \\<lbrakk>p\\<rbrakk>\\<^sub>e y \\<and>\n                            \\<lbrakk>v\\<rbrakk>\\<^sub>e y < n", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (S ;; ?X3 \\<triangleleft> b \\<triangleright>\\<^sub>r II \\<and>\n   \\<lceil>p \\<and>\n           v <\\<^sub>u\n           \\<guillemotleft>?n3 + 1\\<guillemotright>\\<rceil>\\<^sub><) =\n  (S ;;\n   (?X3 \\<and>\n    \\<lceil>p \\<and>\n            v <\\<^sub>u\n            \\<guillemotleft>?n3\\<guillemotright>\\<rceil>\\<^sub><) \\<triangleleft> b \\<triangleright>\\<^sub>r\n      II \\<and>\n   \\<lceil>p \\<and>\n           v <\\<^sub>u\n           \\<guillemotleft>?n3 + 1\\<guillemotright>\\<rceil>\\<^sub><)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  constr (\\<lambda>X. S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n   (\\<lambda>n.\n       \\<lceil>p \\<and>\n               v <\\<^sub>u\n               \\<guillemotleft>n\\<guillemotright>\\<rceil>\\<^sub><)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r\n                         II)) =\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   (\\<nu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>\\<not> b \\<and> p\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  (\\<mu> X \\<bullet> S ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "by (simp add: hoare_r_def while_bot_def)"], ["proof (state)\nthis:\n  \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n  \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma while_vrt_hoare_r [hoare_safe]:\n  assumes \"\\<And> z::nat. \\<lbrace>p \\<and> b \\<and> v =\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>S\\<lbrace>p \\<and> v <\\<^sub>u \\<guillemotleft>z\\<guillemotright>\\<rbrace>\\<^sub>u\" \"`pre \\<Rightarrow> p`\" \"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"\n  shows \"\\<lbrace>pre\\<rbrace>while b invr p vrt v do S od\\<lbrace>post\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>pre\\<rbrace> while b invr p vrt v do S od\n    \\<lbrace>post\\<rbrace>\\<^sub>u", "apply (rule hoare_r_conseq[OF assms(2) _ assms(3)])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while b invr p vrt v do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "apply (simp add: while_vrt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p\\<rbrace> while\\<^sub>\\<bottom> b do S od\n    \\<lbrace>\\<not> b \\<and> p\\<rbrace>\\<^sub>u", "apply (rule while_term_hoare_r[where v=\"v\", OF assms(1)])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "text \\<open> General total correctness law based on well-founded induction \\<close>"], ["", "lemma while_wf_hoare_r:\n  assumes WF: \"wf R\"\n  assumes I0: \"`pre \\<Rightarrow> p`\"\n  assumes induct_step:\"\\<And> st. \\<lbrace>b \\<and> p \\<and> e =\\<^sub>u \\<guillemotleft>st\\<guillemotright>\\<rbrace>Q\\<lbrace>p \\<and> (e, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright>\\<rbrace>\\<^sub>u\"\n  assumes PHI:\"`(\\<not>b \\<and> p) \\<Rightarrow> post`\"  \n  shows \"\\<lbrace>pre\\<rbrace>while\\<^sub>\\<bottom> b invr p do Q od\\<lbrace>post\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>pre\\<rbrace> while\\<^sub>\\<bottom> b invr p do Q od\n    \\<lbrace>post\\<rbrace>\\<^sub>u", "unfolding hoare_r_def while_inv_bot_def while_bot_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>pre\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "proof (rule pre_weak_rel[of _ \"\\<lceil>p\\<rceil>\\<^sub><\" ])"], ["proof (state)\ngoal (2 subgoals):\n 1. `\\<lceil>pre\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>p\\<rceil>\\<^sub><`\n 2. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "from I0"], ["proof (chain)\npicking this:\n  `pre \\<Rightarrow> p`", "show \"`\\<lceil>pre\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>p\\<rceil>\\<^sub><`\""], ["proof (prove)\nusing this:\n  `pre \\<Rightarrow> p`\n\ngoal (1 subgoal):\n 1. `\\<lceil>pre\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>p\\<rceil>\\<^sub><`", "by rel_auto"], ["proof (state)\nthis:\n  `\\<lceil>pre\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>p\\<rceil>\\<^sub><`\n\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "show \"(\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow> \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq> (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n     \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n    (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "proof (rule mu_rec_total_utp_rule[where e=e, OF WF])"], ["proof (state)\ngoal (2 subgoals):\n 1. Monotonic\n     (\\<lambda>X. Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n 2. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q ;;\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        (\\<lceil>e\\<rceil>\\<^sub><,\n         \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n        \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n          II", "show \"Monotonic (\\<lambda>X. Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Monotonic\n     (\\<lambda>X. Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)", "by (simp add: closure)"], ["proof (state)\nthis:\n  Monotonic\n   (\\<lambda>X. Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q ;;\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        (\\<lceil>e\\<rceil>\\<^sub><,\n         \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n        \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n          II", "have induct_step': \"\\<And> st. (\\<lceil>b \\<and> p \\<and>  e =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<rceil>\\<^sub>< \\<Rightarrow> (\\<lceil>p \\<and> (e,\\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<rceil>\\<^sub>> )) \\<sqsubseteq> Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>b \\<and>\n                p \\<and>\n                e =\\<^sub>u\n                \\<guillemotleft>st\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n        \\<lceil>p \\<and>\n                (e, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q", "using induct_step"], ["proof (prove)\nusing this:\n  \\<lbrace>b \\<and>\n           p \\<and>\n           e =\\<^sub>u \\<guillemotleft>?st\\<guillemotright>\\<rbrace>\n  Q \\<lbrace>p \\<and>\n             (e, \\<guillemotleft>?st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n             \\<guillemotleft>R\\<guillemotright>\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>b \\<and>\n                p \\<and>\n                e =\\<^sub>u\n                \\<guillemotleft>st\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n        \\<lceil>p \\<and>\n                (e, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n                \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q", "by rel_auto"], ["proof (state)\nthis:\n  (\\<lceil>b \\<and>\n           p \\<and>\n           e =\\<^sub>u\n           \\<guillemotleft>?st1\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>p \\<and>\n           (e, \\<guillemotleft>?st1\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n           \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  Q\n\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q ;;\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        (\\<lceil>e\\<rceil>\\<^sub><,\n         \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n        \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n          II", "with PHI"], ["proof (chain)\npicking this:\n  `\\<not> b \\<and> p \\<Rightarrow> post`\n  (\\<lceil>b \\<and>\n           p \\<and>\n           e =\\<^sub>u\n           \\<guillemotleft>?st1\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>p \\<and>\n           (e, \\<guillemotleft>?st1\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n           \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  Q", "show \"\\<And>st. (\\<lceil>p\\<rceil>\\<^sub>< \\<and> \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u \\<guillemotleft>st\\<guillemotright> \\<Rightarrow> \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq> Q ;; (\\<lceil>p\\<rceil>\\<^sub>< \\<and> (\\<lceil>e\\<rceil>\\<^sub><, \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u \\<guillemotleft>R\\<guillemotright> \\<Rightarrow> \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r II\""], ["proof (prove)\nusing this:\n  `\\<not> b \\<and> p \\<Rightarrow> post`\n  (\\<lceil>b \\<and>\n           p \\<and>\n           e =\\<^sub>u\n           \\<guillemotleft>?st1\\<guillemotright>\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>p \\<and>\n           (e, \\<guillemotleft>?st1\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n           \\<guillemotleft>R\\<guillemotright>\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  Q\n\ngoal (1 subgoal):\n 1. \\<And>st.\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n        \\<guillemotleft>st\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n       Q ;;\n       (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n        (\\<lceil>e\\<rceil>\\<^sub><,\n         \\<guillemotleft>st\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n        \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n        \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n          II", "by (rel_auto)"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   \\<lceil>e\\<rceil>\\<^sub>< =\\<^sub>u\n   \\<guillemotleft>?st1\\<guillemotright> \\<Rightarrow>\n   \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  Q ;;\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<and>\n   (\\<lceil>e\\<rceil>\\<^sub><,\n    \\<guillemotleft>?st1\\<guillemotright>)\\<^sub>u \\<in>\\<^sub>u\n   \\<guillemotleft>R\\<guillemotright> \\<Rightarrow>\n   \\<lceil>post\\<rceil>\\<^sub>>) \\<triangleleft> b \\<triangleright>\\<^sub>r\n     II\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lceil>p\\<rceil>\\<^sub>< \\<Rightarrow>\n   \\<lceil>post\\<rceil>\\<^sub>>) \\<sqsubseteq>\n  (\\<mu> X \\<bullet> Q ;; X \\<triangleleft> b \\<triangleright>\\<^sub>r II)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open> Frame Rules \\<close>"], ["", "text \\<open> Frame rule: If starting $S$ in a state satisfying $p establishes q$ in the final state, then\n  we can insert an invariant predicate $r$ when $S$ is framed by $a$, provided that $r$ does not\n  refer to variables in the frame, and $q$ does not refer to variables outside the frame. \\<close>"], ["", "lemma frame_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace>a:[P]\\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:[P]\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens a\n  a \\<sharp> r\n  a \\<natural> q\n  \\<lbrace>p\\<rbrace> P \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:[P]\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "by (rel_auto, metis)"], ["", "lemma frame_strong_hoare_r [hoare_safe]: \n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>p \\<and> r\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>p \\<and> r\\<rbrace>a:[S]\\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:[S]\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens a\n  a \\<sharp> r\n  a \\<natural> q\n  \\<lbrace>p \\<and> r\\<rbrace> S \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:[S]\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "by (rel_auto, metis)"], ["", "lemma frame_hoare_r' [hoare_safe]: \n  assumes \"vwb_lens a\" \"a \\<sharp> r\" \"a \\<natural> q\" \"\\<lbrace>r \\<and> p\\<rbrace>S\\<lbrace>q\\<rbrace>\\<^sub>u\"\n  shows \"\\<lbrace>r \\<and> p\\<rbrace>a:[S]\\<lbrace>r \\<and> q\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>r \\<and> p\\<rbrace> {a}:[S]\n    \\<lbrace>r \\<and> q\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens a\n  a \\<sharp> r\n  a \\<natural> q\n  \\<lbrace>r \\<and> p\\<rbrace> S \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>r \\<and> p\\<rbrace> {a}:[S]\n    \\<lbrace>r \\<and> q\\<rbrace>\\<^sub>u", "by (simp add: frame_strong_hoare_r utp_pred_laws.inf.commute)"], ["", "lemma antiframe_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<natural> r\" \"a \\<sharp> q\" \"\\<lbrace>p\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace> a:\\<lbrakk>P\\<rbrakk> \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:\\<lbrakk>P\\<rbrakk>\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens a\n  a \\<natural> r\n  a \\<sharp> q\n  \\<lbrace>p\\<rbrace> P \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:\\<lbrakk>P\\<rbrakk>\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "by (rel_auto, metis)"], ["", "lemma antiframe_strong_hoare_r:\n  assumes \"vwb_lens a\" \"a \\<natural> r\" \"a \\<sharp> q\" \"\\<lbrace>p \\<and> r\\<rbrace>P\\<lbrace>q\\<rbrace>\\<^sub>u\"  \n  shows \"\\<lbrace>p \\<and> r\\<rbrace> a:\\<lbrakk>P\\<rbrakk> \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:\\<lbrakk>P\\<rbrakk>\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "using assms"], ["proof (prove)\nusing this:\n  vwb_lens a\n  a \\<natural> r\n  a \\<sharp> q\n  \\<lbrace>p \\<and> r\\<rbrace> P \\<lbrace>q\\<rbrace>\\<^sub>u\n\ngoal (1 subgoal):\n 1. \\<lbrace>p \\<and> r\\<rbrace> {a}:\\<lbrakk>P\\<rbrakk>\n    \\<lbrace>q \\<and> r\\<rbrace>\\<^sub>u", "by (rel_auto, metis)"], ["", "end"]]}