{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/CertDlo.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma refute_I:\n  \"\\<not> Logic.interpret h (Neg f) e \\<Longrightarrow> Logic.interpret h f e\"", "lemma cyclerecD: fixes xs :: \"'a :: dlo list\" shows\n \"\\<lbrakk> cyclerec i j as; xs!i < xs!j\\<rbrakk> \\<Longrightarrow> \\<exists>a\\<in>set as. \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\"", "lemma cycleD: fixes xs :: \"'a :: dlo list\" shows\n \"cycle as is \\<Longrightarrow> \\<not> DLO.I (list_conj (map Atom as)) xs\"", "lemma cyclic_dnfD: \"qfree f \\<Longrightarrow> cyclic_dnf (dnf(DLO.nnf f)) \\<Longrightarrow> \\<not>DLO.I f xs\""], "translations": [["", "lemma refute_I:\n  \"\\<not> Logic.interpret h (Neg f) e \\<Longrightarrow> Logic.interpret h f e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> interpret h (Neg f) e \\<Longrightarrow> interpret h f e", "by simp"], ["", "lemma cyclerecD: fixes xs :: \"'a :: dlo list\" shows\n \"\\<lbrakk> cyclerec i j as; xs!i < xs!j\\<rbrakk> \\<Longrightarrow> \\<exists>a\\<in>set as. \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cyclerec i j as; xs ! i < xs ! j\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a\\<in>set as.\n                         \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply(induct as arbitrary: j)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>j.\n       \\<lbrakk>cyclerec i j []; xs ! i < xs ! j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set [].\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\n 2. \\<And>a as j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>cyclerec i j as; xs ! i < xs ! j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a\\<in>set as.\n  \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs;\n        cyclerec i j (a # as); xs ! i < xs ! j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (a # as).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply (simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a as j.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>cyclerec i j as; xs ! i < xs ! j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a\\<in>set as.\n  \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs;\n        cyclerec i j (a # as); xs ! i < xs ! j\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (a # as).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply(case_tac a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a as j x11 x12.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>cyclerec i j as; xs ! i < xs ! j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a\\<in>set as.\n  \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs;\n        cyclerec i j (a # as); xs ! i < xs ! j; a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (a # as).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\n 2. \\<And>a as j x21 x22.\n       \\<lbrakk>\\<And>j.\n                   \\<lbrakk>cyclerec i j as; xs ! i < xs ! j\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a\\<in>set as.\n  \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs;\n        cyclerec i j (a # as); xs ! i < xs ! j; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (a # as).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply(auto split:if_split_asm)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cycleD: fixes xs :: \"'a :: dlo list\" shows\n \"cycle as is \\<Longrightarrow> \\<not> DLO.I (list_conj (map Atom as)) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cycle as is \\<Longrightarrow> \\<not> DLO.I (list_conj (map Atom as)) xs", "apply rule"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cycle as is; DLO.I (list_conj (map Atom as)) xs\\<rbrakk>\n    \\<Longrightarrow> False", "apply (simp add:cycle_def map_eq_Cons_conv split:list.splits atom.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22 x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        x21 = Less x11 x12; is = z # zs; as ! z = Less x11 x12;\n        map ((!) as) zs = x22;\n        z < length as \\<and>\n        (\\<forall>i\\<in>set zs. i < length as) \\<and>\n        cyclerec x11 x12 x22\\<rbrakk>\n       \\<Longrightarrow> False", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        cyclerec x11 x12 (map ((!) as) zs)\\<rbrakk>\n       \\<Longrightarrow> False", "apply(drule_tac xs = xs in cyclerecD)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as\\<rbrakk>\n       \\<Longrightarrow> xs ! x11 < xs ! x12\n 2. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        \\<exists>a\\<in>set (map ((!) as) zs).\n           \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\\<rbrakk>\n       \\<Longrightarrow> False", "apply(drule_tac x = \"as!z\" in bspec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x11 z x12 zs.\n       \\<lbrakk>is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as\\<rbrakk>\n       \\<Longrightarrow> as ! z \\<in> set as\n 2. \\<And>x11 z x12 zs.\n       \\<lbrakk>is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        I\\<^sub>d\\<^sub>l\\<^sub>o (as ! z) xs\\<rbrakk>\n       \\<Longrightarrow> xs ! x11 < xs ! x12\n 3. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        \\<exists>a\\<in>set (map ((!) as) zs).\n           \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\\<rbrakk>\n       \\<Longrightarrow> False", "apply (erule nth_mem)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x11 z x12 zs.\n       \\<lbrakk>is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        I\\<^sub>d\\<^sub>l\\<^sub>o (as ! z) xs\\<rbrakk>\n       \\<Longrightarrow> xs ! x11 < xs ! x12\n 2. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        \\<exists>a\\<in>set (map ((!) as) zs).\n           \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x11 z x12 zs.\n       \\<lbrakk>\\<forall>\\<phi>\\<in>set as.\n                   I\\<^sub>d\\<^sub>l\\<^sub>o \\<phi> xs;\n        is = z # zs; as ! z = Less x11 x12; z < length as;\n        \\<forall>i\\<in>set zs. i < length as;\n        \\<exists>a\\<in>set (map ((!) as) zs).\n           \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs\\<rbrakk>\n       \\<Longrightarrow> False", "apply fastforce"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma cyclic_dnfD: \"qfree f \\<Longrightarrow> cyclic_dnf (dnf(DLO.nnf f)) \\<Longrightarrow> \\<not>DLO.I f xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; cyclic_dnf (dnf (DLO.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> DLO.I f xs", "apply(subst DLO.I_nnf[unfolded nnf_def, symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; cyclic_dnf (dnf (DLO.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> DLO.I (DLO.nnf f) xs", "apply(subst DLO.I_dnf[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>qfree f; cyclic_dnf (dnf (DLO.nnf f))\\<rbrakk>\n    \\<Longrightarrow> nqfree (DLO.nnf f)\n 2. \\<lbrakk>qfree f; cyclic_dnf (dnf (DLO.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<exists>as\\<in>set (dnf (DLO.nnf f)).\n                                 \\<forall>a\\<in>set as.\n                                    I\\<^sub>d\\<^sub>l\\<^sub>o a xs)", "apply(erule DLO.nqfree_nnf[unfolded nnf_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; cyclic_dnf (dnf (DLO.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<exists>as\\<in>set (dnf (DLO.nnf f)).\n                                 \\<forall>a\\<in>set as.\n                                    I\\<^sub>d\\<^sub>l\\<^sub>o a xs)", "apply(auto simp add:cyclic_dnf_def list_all2_iff in_set_conv_nth)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>iss i.\n       \\<lbrakk>qfree f; length (dnf (DLO.nnf f)) = length iss;\n        \\<forall>x\\<in>set (zip (dnf (DLO.nnf f)) iss).\n           case x of (x, xa) \\<Rightarrow> cycle x xa;\n        i < length iss\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (DLO.nnf f) ! i).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply(drule_tac x=\"(dnf(DLO.nnf f) ! i, iss!i)\" in bspec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>iss i.\n       \\<lbrakk>qfree f; length (dnf (DLO.nnf f)) = length iss;\n        i < length iss\\<rbrakk>\n       \\<Longrightarrow> (dnf (DLO.nnf f) ! i, iss ! i)\n                         \\<in> set (zip (dnf (DLO.nnf f)) iss)\n 2. \\<And>iss i.\n       \\<lbrakk>qfree f; length (dnf (DLO.nnf f)) = length iss;\n        i < length iss;\n        case (dnf (DLO.nnf f) ! i, iss ! i) of\n        (x, xa) \\<Rightarrow> cycle x xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (DLO.nnf f) ! i).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply (auto simp:set_zip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>iss i.\n       \\<lbrakk>qfree f; length (dnf (DLO.nnf f)) = length iss;\n        i < length iss; cycle (dnf (DLO.nnf f) ! i) (iss ! i)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (DLO.nnf f) ! i).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply(drule_tac xs=xs in cycleD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>iss i.\n       \\<lbrakk>qfree f; length (dnf (DLO.nnf f)) = length iss;\n        i < length iss;\n        \\<not> DLO.I (list_conj (map Atom (dnf (DLO.nnf f) ! i)))\n                xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (DLO.nnf f) ! i).\n                            \\<not> I\\<^sub>d\\<^sub>l\\<^sub>o a xs", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}