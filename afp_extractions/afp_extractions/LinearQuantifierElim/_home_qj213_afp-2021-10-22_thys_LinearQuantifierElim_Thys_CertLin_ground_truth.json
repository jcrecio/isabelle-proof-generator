{"file_name": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim/Thys/CertLin.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/LinearQuantifierElim", "problem_names": ["lemma I_R_additive: \"I\\<^sub>R a xs \\<Longrightarrow> I\\<^sub>R b xs \\<Longrightarrow> I\\<^sub>R(a+b) xs\"", "lemma iprod_a_Nil2[simp]: \"cs \\<odot>\\<^sub>a [] = 0\"", "lemma [simp]: \"(c#cs) \\<odot>\\<^sub>a (a#as) = (c *\\<^sub>a a) + cs \\<odot>\\<^sub>a as\"", "lemma refute_I:\n  \"\\<not> Logic.interpret h (Neg f) e \\<Longrightarrow> Logic.interpret h f e\"", "lemma I_R_mult_atom: \"c \\<ge> 0 \\<Longrightarrow> I\\<^sub>R a xs \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs\"", "lemma I_R_iprod_a:\n \"size cs = size as \\<Longrightarrow> \\<forall>(c,a) \\<in> set(zip cs as). I\\<^sub>R (c *\\<^sub>a a) xs\n \\<Longrightarrow> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\"", "lemma contradictD:\n \"contradict as cs \\<Longrightarrow> \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs\"", "lemma cyclic_dnfD: \"qfree f \\<Longrightarrow> contradict_dnf (dnf(R.nnf f)) \\<Longrightarrow> \\<not>R.I f xs\""], "translations": [["", "lemma I_R_additive: \"I\\<^sub>R a xs \\<Longrightarrow> I\\<^sub>R b xs \\<Longrightarrow> I\\<^sub>R(a+b) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs\\<rbrakk>\n    \\<Longrightarrow> I\\<^sub>R (a + b) xs", "apply(case_tac a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs; a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (a + b) xs\n 2. \\<And>x21 x22.\n       \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (a + b) xs", "apply(case_tac b)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x11 x12 x11a x12a.\n       \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs; a = Less x11 x12;\n        b = Less x11a x12a\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (a + b) xs\n 2. \\<And>x11 x12 x21 x22.\n       \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs; a = Less x11 x12;\n        b = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (a + b) xs\n 3. \\<And>x21 x22.\n       \\<lbrakk>I\\<^sub>R a xs; I\\<^sub>R b xs; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (a + b) xs", "apply (simp_all add:iprod_left_add_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       \\<lbrakk>x21 = \\<langle>x22,xs\\<rangle>; I\\<^sub>R b xs;\n        a = Eq \\<langle>x22,xs\\<rangle> x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (Eq \\<langle>x22,xs\\<rangle> x22 + b) xs", "apply(case_tac b)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x21 x22 x11 x12.\n       \\<lbrakk>x21 = \\<langle>x22,xs\\<rangle>; I\\<^sub>R b xs;\n        a = Eq \\<langle>x22,xs\\<rangle> x22; b = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (Eq \\<langle>x22,xs\\<rangle> x22 + b) xs\n 2. \\<And>x21 x22 x21a x22a.\n       \\<lbrakk>x21 = \\<langle>x22,xs\\<rangle>; I\\<^sub>R b xs;\n        a = Eq \\<langle>x22,xs\\<rangle> x22; b = Eq x21a x22a\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (Eq \\<langle>x22,xs\\<rangle> x22 + b) xs", "apply (simp_all add:iprod_left_add_distrib)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "fun mult_atom :: \"real \\<Rightarrow> atom \\<Rightarrow> atom\" (infix \"*\\<^sub>a\" 70) where\n\"c *\\<^sub>a Eq r cs = Eq (c*r) (c *\\<^sub>s cs)\" |\n\"c *\\<^sub>a Less r cs = (if c=0 then Eq 0 [] else Less (c*r) (c *\\<^sub>s cs))\""], ["", "definition iprod_a :: \"real list \\<Rightarrow> atom list \\<Rightarrow> atom\" (infix \"\\<odot>\\<^sub>a\" 70)\nwhere \"cs \\<odot>\\<^sub>a as = (\\<Sum>(c,a) \\<leftarrow> zip cs as. c *\\<^sub>a a)\""], ["", "lemma iprod_a_Nil2[simp]: \"cs \\<odot>\\<^sub>a [] = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cs \\<odot>\\<^sub>a [] = 0", "by(simp add:iprod_a_def)"], ["", "lemma [simp]: \"(c#cs) \\<odot>\\<^sub>a (a#as) = (c *\\<^sub>a a) + cs \\<odot>\\<^sub>a as\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c # cs) \\<odot>\\<^sub>a (a # as) =\n    c *\\<^sub>a a + cs \\<odot>\\<^sub>a as", "by(simp add:iprod_a_def)"], ["", "definition contradict :: \"atom list \\<Rightarrow> real list \\<Rightarrow> bool\" where\n\"contradict as cs \\<longleftrightarrow> size cs = size as \\<and> (\\<forall>c\\<in>set cs. c\\<ge>0) \\<and>\n  (case cs \\<odot>\\<^sub>a as of Eq r cs \\<Rightarrow> r \\<noteq> 0 \\<and> (\\<forall>c\\<in>set cs. c=0)\n                  | Less r cs \\<Rightarrow> r \\<ge> 0 \\<and> (\\<forall>c\\<in>set cs. c=0))\""], ["", "definition\n\"contradict_dnf ass = (\\<exists>css. list_all2 contradict ass css)\""], ["", "lemma refute_I:\n  \"\\<not> Logic.interpret h (Neg f) e \\<Longrightarrow> Logic.interpret h f e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> interpret h (Neg f) e \\<Longrightarrow> interpret h f e", "by simp"], ["", "lemma I_R_mult_atom: \"c \\<ge> 0 \\<Longrightarrow> I\\<^sub>R a xs \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 \\<le> c; I\\<^sub>R a xs\\<rbrakk>\n    \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs", "apply(cases a)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       \\<lbrakk>0 \\<le> c; I\\<^sub>R a xs; a = Less x11 x12\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs\n 2. \\<And>x21 x22.\n       \\<lbrakk>0 \\<le> c; I\\<^sub>R a xs; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs", "apply(clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       \\<lbrakk>0 \\<le> c; I\\<^sub>R a xs; a = Eq x21 x22\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R (c *\\<^sub>a a) xs", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma I_R_iprod_a:\n \"size cs = size as \\<Longrightarrow> \\<forall>(c,a) \\<in> set(zip cs as). I\\<^sub>R (c *\\<^sub>a a) xs\n \\<Longrightarrow> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>length cs = length as;\n     \\<forall>(c, a)\\<in>set (zip cs as).\n        I\\<^sub>R (c *\\<^sub>a a) xs\\<rbrakk>\n    \\<Longrightarrow> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "apply(induct cs as rule:list_induct2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>(c, a)\\<in>set (zip [] []).\n       I\\<^sub>R (c *\\<^sub>a a) xs \\<Longrightarrow>\n    I\\<^sub>R ([] \\<odot>\\<^sub>a []) xs\n 2. \\<And>x xsa y ys.\n       \\<lbrakk>length xsa = length ys;\n        \\<forall>(c, a)\\<in>set (zip xsa ys).\n           I\\<^sub>R (c *\\<^sub>a a) xs \\<Longrightarrow>\n        I\\<^sub>R (xsa \\<odot>\\<^sub>a ys) xs;\n        \\<forall>(c, a)\\<in>set (zip (x # xsa) (y # ys)).\n           I\\<^sub>R (c *\\<^sub>a a) xs\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R ((x # xsa) \\<odot>\\<^sub>a (y # ys)) xs", "apply (simp add:zero_atom_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x xsa y ys.\n       \\<lbrakk>length xsa = length ys;\n        \\<forall>(c, a)\\<in>set (zip xsa ys).\n           I\\<^sub>R (c *\\<^sub>a a) xs \\<Longrightarrow>\n        I\\<^sub>R (xsa \\<odot>\\<^sub>a ys) xs;\n        \\<forall>(c, a)\\<in>set (zip (x # xsa) (y # ys)).\n           I\\<^sub>R (c *\\<^sub>a a) xs\\<rbrakk>\n       \\<Longrightarrow> I\\<^sub>R ((x # xsa) \\<odot>\\<^sub>a (y # ys)) xs", "apply(simp add:I_R_additive)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma contradictD:\n \"contradict as cs \\<Longrightarrow> \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. contradict as cs \\<Longrightarrow>\n    \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. contradict as cs \\<Longrightarrow>\n    \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "assume \"contradict as cs\""], ["proof (state)\nthis:\n  contradict as cs\n\ngoal (1 subgoal):\n 1. contradict as cs \\<Longrightarrow>\n    \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "have \"\\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "proof (cases \"cs \\<odot>\\<^sub>a as\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       cs \\<odot>\\<^sub>a as = Less x11 x12 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n 2. \\<And>x21 x22.\n       cs \\<odot>\\<^sub>a as = Eq x21 x22 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "case Less"], ["proof (state)\nthis:\n  cs \\<odot>\\<^sub>a as = Less x11_ x12_\n\ngoal (2 subgoals):\n 1. \\<And>x11 x12.\n       cs \\<odot>\\<^sub>a as = Less x11 x12 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n 2. \\<And>x21 x22.\n       cs \\<odot>\\<^sub>a as = Eq x21 x22 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs \\<odot>\\<^sub>a as = Less x11_ x12_\n\ngoal (1 subgoal):\n 1. \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "using \\<open>contradict as cs\\<close>"], ["proof (prove)\nusing this:\n  cs \\<odot>\\<^sub>a as = Less x11_ x12_\n  contradict as cs\n\ngoal (1 subgoal):\n 1. \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "by(simp add:contradict_def iprod0_if_coeffs0)"], ["proof (state)\nthis:\n  \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       cs \\<odot>\\<^sub>a as = Eq x21 x22 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       cs \\<odot>\\<^sub>a as = Eq x21 x22 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "case Eq"], ["proof (state)\nthis:\n  cs \\<odot>\\<^sub>a as = Eq x21_ x22_\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       cs \\<odot>\\<^sub>a as = Eq x21 x22 \\<Longrightarrow>\n       \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  cs \\<odot>\\<^sub>a as = Eq x21_ x22_\n\ngoal (1 subgoal):\n 1. \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "using \\<open>contradict as cs\\<close>"], ["proof (prove)\nusing this:\n  cs \\<odot>\\<^sub>a as = Eq x21_ x22_\n  contradict as cs\n\ngoal (1 subgoal):\n 1. \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs", "by(simp add:contradict_def iprod0_if_coeffs0)"], ["proof (state)\nthis:\n  \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n\ngoal (1 subgoal):\n 1. contradict as cs \\<Longrightarrow>\n    \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "using \\<open>contradict as cs\\<close>"], ["proof (prove)\nusing this:\n  \\<not> I\\<^sub>R (cs \\<odot>\\<^sub>a as) xs\n  contradict as cs\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs", "by(force simp add:contradict_def intro: I_R_iprod_a I_R_mult_atom\n             elim:in_set_zipE)"], ["proof (state)\nthis:\n  \\<exists>a\\<in>set as. \\<not> I\\<^sub>R a xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma cyclic_dnfD: \"qfree f \\<Longrightarrow> contradict_dnf (dnf(R.nnf f)) \\<Longrightarrow> \\<not>R.I f xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; contradict_dnf (dnf (R.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> R.I f xs", "apply(subst R.I_nnf[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; contradict_dnf (dnf (R.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> R.I (R.nnf f) xs", "apply(subst R.I_dnf[symmetric])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>qfree f; contradict_dnf (dnf (R.nnf f))\\<rbrakk>\n    \\<Longrightarrow> nqfree (R.nnf f)\n 2. \\<lbrakk>qfree f; contradict_dnf (dnf (R.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<exists>as\\<in>set (dnf (R.nnf f)).\n                                 \\<forall>a\\<in>set as. I\\<^sub>R a xs)", "apply(erule R.nqfree_nnf)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>qfree f; contradict_dnf (dnf (R.nnf f))\\<rbrakk>\n    \\<Longrightarrow> \\<not> (\\<exists>as\\<in>set (dnf (R.nnf f)).\n                                 \\<forall>a\\<in>set as. I\\<^sub>R a xs)", "apply(auto simp add:contradict_dnf_def list_all2_iff in_set_conv_nth)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>css i.\n       \\<lbrakk>qfree f; length (dnf (R.nnf f)) = length css;\n        \\<forall>x\\<in>set (zip (dnf (R.nnf f)) css).\n           case x of (x, xa) \\<Rightarrow> contradict x xa;\n        i < length css\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (R.nnf f) ! i).\n                            \\<not> I\\<^sub>R a xs", "apply(drule_tac x=\"(dnf(R.nnf f) ! i, css!i)\" in bspec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>css i.\n       \\<lbrakk>qfree f; length (dnf (R.nnf f)) = length css;\n        i < length css\\<rbrakk>\n       \\<Longrightarrow> (dnf (R.nnf f) ! i, css ! i)\n                         \\<in> set (zip (dnf (R.nnf f)) css)\n 2. \\<And>css i.\n       \\<lbrakk>qfree f; length (dnf (R.nnf f)) = length css;\n        i < length css;\n        case (dnf (R.nnf f) ! i, css ! i) of\n        (x, xa) \\<Rightarrow> contradict x xa\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (R.nnf f) ! i).\n                            \\<not> I\\<^sub>R a xs", "apply (auto simp:set_zip)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>css i.\n       \\<lbrakk>qfree f; length (dnf (R.nnf f)) = length css;\n        i < length css; contradict (dnf (R.nnf f) ! i) (css ! i)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (R.nnf f) ! i).\n                            \\<not> I\\<^sub>R a xs", "apply(drule_tac xs=xs in contradictD)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>css i.\n       \\<lbrakk>qfree f; length (dnf (R.nnf f)) = length css;\n        i < length css;\n        \\<exists>a\\<in>set (dnf (R.nnf f) ! i).\n           \\<not> I\\<^sub>R a xs\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a\\<in>set (dnf (R.nnf f) ! i).\n                            \\<not> I\\<^sub>R a xs", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}